@class UIVisualEffectView, SFNavigationBarMetrics, UILabel, SFToolbarContainer, SFNavigationBarAccessoryButtonArrangement, NSString, SFDismissButton, _SFNavigationBarTheme, NSAttributedString, NSArray, SFURLLabel, _SFNavigationBarLabelsContainer, _SFDimmingButton, _SFBarTheme, UIButton, _UIClickInteraction, NSTimer, UIView, _SFFluidProgressView, UIImageView, _SFToolbar, SFNavigationBarItem, SFNavigationBarToggleButton, UITextField, UIBlurEffect, _SFNavigationBarURLButton;
@protocol _SFPopoverSourceInfo, _SFNavigationBarDelegate;

@interface _SFNavigationBar : UIView <UIGestureRecognizerDelegate, _SFFluidProgressViewDelegate, _SFNavigationBarURLButtonDelegate, _UIBasicAnimationFactory, UIDragInteractionDelegate_Private, UIDropInteractionDelegate_Private, _UIClickInteractionDelegate, SFNavigationBarItemObserver, _SFNavigationBarCommon> {
    UIButton *_compressedBarButton;
    UIView *_controlsContainer;
    _SFNavigationBarLabelsContainer *_labelsContainer;
    UIView *_labelScalingContainer;
    SFURLLabel *_URLLabel;
    UILabel *_expandedURLLabel;
    UILabel *_privateBrowsingLabel;
    UIVisualEffectView *_lockEffectView;
    UIVisualEffectView *_squishedLockEffectView;
    UILabel *_availabilityLabel;
    UILabel *_notSecureAnnotationLabel;
    double _expandedURLWidth;
    double _expandedURLHeight;
    double _offsetOfURLInExpandedURL;
    UIView *_URLContainer;
    UIView *_URLContainerClipView;
    UIView *_fakeTextFieldSelectionView;
    double _fakeSelectionStartOffset;
    double _fakeSelectionEndOffset;
    UIButton *_fakeClearButton;
    BOOL _usesLiftedAppearance;
    _SFToolbar *_leadingToolbar;
    _SFToolbar *_trailingToolbar;
    SFToolbarContainer *_leadingToolbarContainer;
    SFToolbarContainer *_trailingToolbarContainer;
    struct CGSize { double width; double height; } _cachedNotSecureAnnotationLabelFittingSize;
    UIView *_notSecureAnnotationContainer;
    BOOL _shouldAnimateURLMovement;
    SFNavigationBarMetrics *_barMetrics;
    UIImageView *_searchIndicator;
    UIImageView *_lockView;
    UIImageView *_squishedSearchIndicator;
    UIImageView *_squishedLockView;
    UIView *_squishedURLAccessoryItemsContainer;
    NSArray *_URLAccessoryItems;
    _SFNavigationBarURLButton *_URLOutline;
    _SFFluidProgressView *_progressView;
    UIVisualEffectView *_backdrop;
    UIView *_separator;
    BOOL _lockViewNeedsUpdate;
    NSAttributedString *_attributedTextWhenExpanded;
    SFNavigationBarAccessoryButtonArrangement *_accessoryButtonArrangement;
    SFNavigationBarToggleButton *_formatToggleButton;
    _SFDimmingButton *_stopButton;
    _SFDimmingButton *_reloadButton;
    _SFDimmingButton *_dictationButton;
    _SFDimmingButton *_textFieldDictationButton;
    _UIClickInteraction *_formatClickInteraction;
    UIButton *_mediaStateMuteButton;
    long long _visibleTrailingButtonType;
    long long _formatButtonTapAction;
    UIButton *_cancelButton;
    double _cancelButtonIntrinsicWidth;
    NSTimer *_availabilityLabelHideTimer;
    id /* block */ _readerAvailabilityAnimationBlock;
    SFDismissButton *_dismissButton;
    unsigned long long _inputMode;
    BOOL _shouldHidePlaceholderURLItemsForPencilInput;
    id /* block */ _availabilityButtonDeferredAction;
    BOOL _showingButtonWithAvailabilityLabel;
}

@property (retain, nonatomic) SFNavigationBarItem *item;
@property (nonatomic) BOOL usesNarrowLayout;
@property (nonatomic) BOOL unifiedFieldShowsProgressView;
@property (retain, nonatomic) _SFBarTheme *theme;
@property (readonly, nonatomic) _SFNavigationBarTheme *effectiveTheme;
@property (nonatomic) BOOL hasToolbar;
@property (nonatomic, getter=areControlsHidden) BOOL controlsHidden;
@property (nonatomic, getter=isExpanded) BOOL expanded;
@property (readonly, nonatomic) UITextField *textField;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } URLOutlineFrameInNavigationBarSpace;
@property (nonatomic, getter=isBackdropGroupDisabled) BOOL backdropGroupDisabled;
@property (copy, nonatomic) NSString *backdropGroupName;
@property (weak, nonatomic) id<_SFNavigationBarDelegate> delegate;
@property (readonly, nonatomic) double defaultHeight;
@property (readonly, nonatomic) double minimumHeight;
@property (readonly, nonatomic, getter=_controlsAlpha) double controlsAlpha;
@property (nonatomic) double contentUnderStatusBarHeight;
@property (nonatomic) BOOL suppressesBlur;
@property (nonatomic) BOOL usesFaintSeparator;
@property (readonly, nonatomic) double visualHeight;
@property (nonatomic) double maximumHeight;
@property (nonatomic) double minimumBackdropHeight;
@property (retain, nonatomic) UIView *inputAccessoryView;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } dismissButtonSize;
@property (readonly, nonatomic) double dismissButtonPadding;
@property (readonly, nonatomic, getter=isSendingBarMetricsChangeNotification) BOOL sendingBarMetricsChangeNotification;
@property (readonly, nonatomic) UIBlurEffect *backdropEffect;
@property (readonly, nonatomic) id<_SFPopoverSourceInfo> formatMenuButtonPopoverSourceInfo;
@property (readonly, nonatomic) id<_SFPopoverSourceInfo> reloadButtonPopoverSourceInfo;
@property (readonly, nonatomic) id<_SFPopoverSourceInfo> URLOutlinePopoverSourceInfo;
@property (readonly, copy, nonatomic) NSArray *popoverPassthroughViews;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (double)separatorHeight;
+ (void)initialize;
+ (long long)_metricsCategory;
+ (double)estimatedDefaultHeightForStatusBarHeight:(double)a0;
+ (double)estimatedMinimumHeightForStatusBarHeight:(double)a0;

- (id)_timingFunctionForAnimation;
- (void)_updateText;
- (id)_basicAnimationForView:(id)a0 withKeyPath:(id)a1;
- (void)layoutSubviews;
- (BOOL)containsBarItem:(long long)a0;
- (id)dragInteraction:(id)a0 previewForLiftingItem:(id)a1 session:(id)a2;
- (long long)_dropInteraction:(id)a0 dataOwnerForSession:(id)a1;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (BOOL)dropInteraction:(id)a0 canHandleSession:(id)a1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)dropInteraction:(id)a0 sessionDidUpdate:(id)a1;
- (BOOL)clickInteractionShouldBegin:(id)a0;
- (void)dropInteraction:(id)a0 performDrop:(id)a1;
- (double)placeholderHorizontalInset;
- (void)clickInteractionDidClickDown:(id)a0;
- (void).cxx_destruct;
- (void)setTextFieldPlaceHolderColor:(id)a0;
- (void)traitCollectionDidChange:(id)a0;
- (BOOL)canBecomeFirstResponder;
- (void)dragInteraction:(id)a0 sessionWillBegin:(id)a1;
- (void)_cancelButtonTapped:(id)a0;
- (void)dragInteraction:(id)a0 willAnimateLiftWithAnimator:(id)a1 session:(id)a2;
- (void)tintColorDidChange;
- (void)dealloc;
- (void)clickInteractionDidClickUp:(id)a0;
- (id)dragInteraction:(id)a0 itemsForBeginningSession:(id)a1;
- (id)_dragInteraction:(id)a0 viewToSnapshotItem:(id)a1;
- (void)setExpanded:(BOOL)a0 textFieldSelectionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (long long)_dragInteraction:(id)a0 dataOwnerForSession:(id)a1;
- (id)newTextField;
- (void)setDismissButtonStyle:(long long)a0 animated:(BOOL)a1;
- (void)navigationBarURLButtonDidReceiveCopyCommand:(id)a0;
- (void)navigationBarURLButtonDidReceivePasteCommand:(id)a0;
- (BOOL)navigationBarURLButton:(id)a0 shouldShowMenuForGestureWithRecognizer:(id)a1;
- (BOOL)navigationBarURLButtonShouldCopy:(id)a0;
- (BOOL)navigationBarURLButtonShouldPaste:(id)a0;
- (BOOL)navigationBarURLButtonIsUsingNarrowLayout:(id)a0;
- (void)navigationBarURLButtonBeginSuppressingPlaceholder:(id)a0;
- (void)navigationBarURLButtonEndSuppressingPlaceholder:(id)a0;
- (BOOL)navigationBarURLButton:(id)a0 canWriteAtLocation:(struct CGPoint { double x0; double x1; })a1;
- (BOOL)textFieldIsEditableForNavigationBarURLButton:(id)a0;
- (id)textFieldForNavigationBarURLButton:(id)a0;
- (void)navigationBarURLButtonDidRequestFocusForPencilInput:(id)a0 completionHandler:(id /* block */)a1;
- (BOOL)navigationBarURLButton:(id)a0 shouldAllowLongPressAtPoint:(struct CGPoint { double x0; double x1; })a1;
- (id)textForNavigationBarURLButton:(id)a0;
- (void)clearEphemeralUI;
- (void)_updateShowsLockIcon;
- (void)_updateAvailabilityButtonVisibilityForType:(long long)a0 animated:(BOOL)a1 showAvailabilityText:(BOOL)a2 adjustURLLabels:(BOOL)a3;
- (void)_updateNotSecureWarningsVisibility;
- (void)_updateDictationAvailability;
- (void)_URLTapped:(id)a0;
- (void)_textFieldDidChange:(id)a0;
- (void)_dictationTapped:(id)a0;
- (id)_placeholderText;
- (void)_mediaStateMuteButtonTapped:(id)a0;
- (void)_reloadButtonPressed;
- (void)_stopButtonPressed;
- (void)_compressedBarTapped;
- (void)_dismissButtonTapped:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inputMode:(unsigned long long)a1;
- (void)_formatToggleButtonTapped:(id)a0;
- (void)setExpanded:(BOOL)a0 completionHandler:(id /* block */)a1;
- (void)setExpanded:(BOOL)a0 textFieldSelectionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 completionHandler:(id /* block */)a2;
- (void)_hideAvailabilityLabelNow;
- (void)animateSafariIconLinkFromPoint:(struct CGPoint { double x0; double x1; })a0 inView:(id)a1;
- (void)animateLinkImage:(struct CGImage { } *)a0 fromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 inView:(id)a2 toBarItem:(long long)a3 afterImageDisappearsBlock:(id /* block */)a4 afterDestinationLayerBouncesBlock:(id /* block */)a5;
- (id)popoverSourceInfoForBarItem:(long long)a0;
- (void)fluidProgressViewWillShowProgress:(id)a0;
- (void)fluidProgressViewDidShowProgress:(id)a0;
- (void)navigationBarItemDidUpdateText:(id)a0;
- (void)navigationBarItemDidUpdateShowsLockIcon:(id)a0;
- (void)navigationBarItemDidUpdateShowsSearchIndicator:(id)a0;
- (void)navigationBarItemDidUpdateShowsStopReloadButtons:(id)a0;
- (void)navigationBarItemDidUpdateStopReloadButtonShowsStop:(id)a0;
- (void)navigationBarItemDidUpdateFormatButtonSelected:(id)a0;
- (void)navigationBarItemDidUpdateOverrideBarStyleForSecurityWarning:(id)a0;
- (void)navigationBarItemDidUpdateShowsPageFormatButton:(id)a0;
- (void)navigationBarItemDidUpdateShowsReaderButton:(id)a0;
- (void)navigationBarItemDidUpdateMediaStateIcon:(id)a0;
- (void)navigationBarItemDidUpdateShowsNotSecureAnnotation:(id)a0;
- (void)navigationBarItemDidUpdateProgressView:(id)a0;
- (void)navigationBarItemDidUpdateCustomPlaceholderText:(id)a0;
- (void)navigationBarItemDidUpdateShowsTranslationIcon:(id)a0;
- (void)navigationBarItemDidUpdateShowsTranslationButton:(id)a0;
- (void)setDismissButtonHidden:(BOOL)a0;

@end
