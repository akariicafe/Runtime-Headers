@class NSUUID, NSString, NSArray, NWAdvertiseDescriptor, NWBrowseDescriptor, NSObject, NWInterface, NWEndpoint, NWParameters;
@protocol OS_nw_path;

@interface NWPath : NSObject <NWPrettyDescription>

@property (readonly) NSObject<OS_nw_path> *internalPath;
@property (readonly, nonatomic) unsigned int fallbackInterfaceIndex;
@property (readonly, nonatomic) BOOL fallbackIsWeak;
@property (readonly, nonatomic) BOOL fallbackEligible;
@property (readonly, nonatomic) BOOL fallbackIsPreferred;
@property (readonly, nonatomic) NSArray *dnsServersAsStrings;
@property (readonly, nonatomic) NSArray *gateways;
@property (readonly, nonatomic) NSArray *groupMembers;
@property (readonly, nonatomic) NSArray *flows;
@property (readonly, nonatomic) NSString *statusAsString;
@property (readonly, nonatomic) NWInterface *connectedInterface;
@property (readonly, nonatomic, getter=isListener) BOOL listener;
@property (readonly, nonatomic, getter=isViable) BOOL viable;
@property (readonly, nonatomic) BOOL hasProxySettings;
@property (readonly, nonatomic) NSUUID *clientID;
@property (readonly, nonatomic) NWInterface *interface;
@property (readonly, nonatomic) NWInterface *scopedInterface;
@property (readonly, nonatomic) NWInterface *fallbackInterface;
@property (readonly, nonatomic, getter=isFlowDivert) BOOL flowDivert;
@property (readonly, nonatomic) unsigned int flowDivertControlUnit;
@property (readonly, nonatomic) unsigned int flowDivertAggregateUnit;
@property (readonly, nonatomic, getter=isFiltered) BOOL filtered;
@property (readonly, nonatomic) unsigned int filterControlUnit;
@property (readonly, nonatomic) int dnsServiceID;
@property (readonly, nonatomic, getter=isLocal) BOOL local;
@property (readonly, nonatomic, getter=isDirect) BOOL direct;
@property (readonly, nonatomic) unsigned int policyID;
@property (readonly, nonatomic, getter=isRoaming) BOOL roaming;
@property (readonly, nonatomic) long long mtu;
@property (readonly, nonatomic) long long maximumDatagramSize;
@property (readonly, nonatomic) unsigned long long secondsSinceInterfaceChange;
@property (readonly, nonatomic) long long reason;
@property (readonly, nonatomic) NSString *reasonDescription;
@property (readonly, copy, nonatomic) NSString *privateDescription;
@property (readonly, nonatomic) NWParameters *derivedParameters;
@property (readonly, nonatomic) BOOL supportsIPv4;
@property (readonly, nonatomic) BOOL supportsIPv6;
@property (readonly, nonatomic) BOOL supportsDNS;
@property (readonly, nonatomic, getter=isEligibleForCrazyIvan46) BOOL eligibleForCrazyIvan46;
@property (readonly, nonatomic) NWEndpoint *endpoint;
@property (readonly, nonatomic) NWParameters *parameters;
@property (readonly, nonatomic) NWEndpoint *effectiveLocalEndpoint;
@property (readonly, nonatomic) NWEndpoint *effectiveRemoteEndpoint;
@property (readonly, nonatomic) NSArray *proxySettings;
@property (readonly, nonatomic) NSArray *dnsServers;
@property (readonly, nonatomic) NSArray *dnsSearchDomains;
@property (readonly, nonatomic) BOOL hasBrowseDescriptor;
@property (readonly, nonatomic) NWBrowseDescriptor *browseDescriptor;
@property (readonly, nonatomic) BOOL hasAdvertiseDescriptor;
@property (readonly, nonatomic) NWAdvertiseDescriptor *advertiseDescriptor;
@property (readonly, nonatomic, getter=isPerAppVPN) BOOL perAppVPN;
@property (readonly, nonatomic) BOOL hasKernelExtensionFilter;
@property (readonly, nonatomic) BOOL hasCustomPFRules;
@property (readonly, nonatomic) BOOL hasApplicationLevelFirewall;
@property (readonly, nonatomic) BOOL hasParentalControls;
@property (readonly, nonatomic) NSObject<OS_nw_path> *cPath;
@property (readonly, nonatomic) long long status;
@property (readonly, nonatomic, getter=isExpensive) BOOL expensive;
@property (readonly, nonatomic, getter=isConstrained) BOOL constrained;

+ (id)allClientIDs;
+ (id)createStringFromStatus:(long long)a0;
+ (id)pathForClientID:(id)a0 parametersTLV:(id)a1 pathResultTLV:(id)a2;
+ (id)pathForClientID:(id)a0;
+ (id)pathWithProtocolBufferData:(id)a0;

- (id)inactiveNetworkAgentUUIDsOnlyVoluntary:(BOOL)a0;
- (id)createProtocolBufferObject;
- (id)delegateInterface;
- (id)initWithPath:(id)a0;
- (id)descriptionWithIndent:(int)a0 showFullContent:(BOOL)a1;
- (BOOL)isLinkQualityAbort;
- (id)description;
- (BOOL)usesNetworkAgentType:(Class)a0;
- (void).cxx_destruct;
- (id)init;
- (id)copyFlowDivertToken;
- (BOOL)isListenerInterfaceSpecific;
- (id)genericNetworkAgentsWithDomain:(id)a0 type:(id)a1;
- (id)networkAgentsOfType:(Class)a0;
- (BOOL)unsatisfiedVoluntaryAgentMatchesAddress:(id)a0 triggerImmediately:(BOOL *)a1;
- (BOOL)shouldProbeConnectivity;
- (BOOL)usesInterfaceType:(long long)a0;
- (BOOL)hasUnsatisfiedFallbackAgent;
- (BOOL)isEqualToPath:(id)a0;
- (BOOL)usesNetworkAgent:(id)a0;

@end
