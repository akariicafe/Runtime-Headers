@class CHRecognitionSession, PKRecognitionSessionManager, NSArray, NSUUID, NSString, NSMutableArray, PKVisualizationManager, NSMapTable;

@interface PKDrawing : NSObject <CHQueryDelegate, NSCopying, NSSecureCoding> {
    BOOL _recognitionEnabled;
    NSArray *_forcedRecognitionLocales;
    NSUUID *_listenerID;
}

@property (class, readonly) BOOL supportsSecureCoding;

@property (nonatomic) long long _orientation;
@property (retain, nonatomic) PKRecognitionSessionManager *recognitionManager;
@property (retain, nonatomic) CHRecognitionSession *recognitionSession;
@property (retain, nonatomic) NSMapTable *ongoingQueries;
@property (retain, nonatomic) PKVisualizationManager *visualizationManager;
@property (retain, nonatomic, setter=_setUUID:) NSUUID *uuid;
@property (retain, nonatomic) NSMutableArray *_cachedVisibleStrokes;
@property (readonly, nonatomic) NSArray *strokes;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } bounds;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)fileType;
+ (id)allocWithZone:(struct _NSZone { } *)a0;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_boundingBoxForStrokeArray:(id)a0;
+ (id)_findLeftmostStrokes:(id)a0;
+ (id)_findRightmostStrokes:(id)a0;
+ (long long)_currentSerializationVersion;
+ (id)drawingStrokesFromStrokes:(id)a0 inDrawing:(id)a1;
+ (void)sortStrokes:(id)a0;
+ (id)_uuidDescriptionForStrokes:(id)a0;
+ (Class)drawingClassForPaper;
+ (id)visibleStrokesFromStrokes:(id)a0 inDrawing:(id)a1;
+ (id)_upgradeDrawingData:(id)a0 queue:(id)a1 completionBlock:(id /* block */)a2;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_boundingBoxForStrokes:(id)a0;
+ (id)_otherStrokesCloseToLeft:(BOOL)a0 forStrokes:(id)a1 withClosestStroke:(id)a2;
+ (id)drawingWithData:(id)a0;

- (id)debugQuickLookObject;
- (id)initWithData:(id)a0 error:(id *)a1;
- (id)dataRepresentation;
- (void)encodeWithCoder:(id)a0;
- (id)_strokes;
- (id)_ascii;
- (void)didUpdate;
- (id)version;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)a0;
- (id)init;
- (Class)classForCoder;
- (id)initWithCoder:(id)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_bounds;
- (void)dealloc;
- (id)data;
- (void)setRecognitionEnabled:(BOOL)a0;
- (unsigned long long)mergeWithDrawing:(id)a0;
- (id)initWithDrawing:(id)a0;
- (id)imageFromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 scale:(double)a1;
- (id)drawingByApplyingTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a0;
- (id)drawingByAppendingDrawing:(id)a0;
- (id)initWithStrokes:(id)a0;
- (id)_unclippedStroke:(id)a0;
- (id)_clipAgainstLegacyCanvas:(id)a0;
- (id)_clipStroke:(id)a0 againstPaths:(const void *)a1;
- (id)_clipStroke:(id)a0 newRootStroke:(id *)a1;
- (id)_visibleStrokeForIdentifier:(id)a0;
- (void)queryDidUpdateResult:(id)a0;
- (void)setStrokes:(id)a0 hidden:(BOOL)a1;
- (id)visibleStrokeForInsertingStroke:(id)a0;
- (id)sliceWithEraseStroke:(id)a0;
- (void)deleteStrokes:(id)a0;
- (id)undoableAddNewStrokes:(id)a0;
- (id)undoableDeleteStrokes:(id)a0;
- (void)clipStrokesIfNeededOnQueue:(id)a0 completion:(id /* block */)a1;
- (void)set_canvasBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_canvasBounds;
- (id)_allStrokes;
- (void)invalidateVisibleStrokes;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })calculateStrokeBounds;
- (void)setNeedsRecognitionUpdate;
- (void)addNewStroke:(id)a0;
- (void)setStrokes:(id)a0 inks:(id)a1;
- (void)setStrokes:(id)a0 groupID:(id)a1;
- (void)updateStrokes:(id /* block */)a0;
- (id)_rootStrokes;
- (void)updateStroke:(id)a0 indexHint:(unsigned long long)a1;
- (id)initWithData:(id)a0 loadNonInkingStrokes:(BOOL)a1 error:(id *)a2;
- (id)initWithStrokes:(id)a0 fromDrawing:(id)a1;
- (Class)strokeClass;
- (id)newStroke;
- (Class)strokeSelectionClass;
- (id)copyWithoutInternalStrokes;
- (void)_setAllStrokes:(id)a0;
- (id)_strokeForIdentifier:(id)a0;
- (void)transformStrokes:(id)a0 withTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a1 concat:(BOOL)a2;
- (id)undoableTransformStrokes:(id)a0 withTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a1 concat:(BOOL)a2;
- (id)undoableSetStrokes:(id)a0 inks:(id)a1;
- (id)undoableSetStrokes:(id)a0 groupID:(id)a1 actionName:(id)a2;
- (id)updateFromSlicedIntersectingIndexes:(long long *)a0 resultNewRoots:(const id *)a1 resultUpdatedStrokes:(const id *)a2 count:(long long)a3;
- (long long)_rootStrokesCount;
- (id)strokesIntersectedByPoint:(struct CGPoint { double x0; double x1; })a0 prevPoint:(struct CGPoint { double x0; double x1; })a1 onscreenVisibleStrokes:(id)a2;
- (void)_copyAndAddStrokes:(id)a0 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a1;
- (void)_teardownRecognitionObjects;
- (id)_copyAndAddStroke:(id)a0 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a1 ink:(id)a2 newParent:(id *)a3;
- (id)_copyAndAddStroke:(id)a0 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a1;
- (id)updateStroke:(id)a0 updater:(id /* block */)a1;
- (void)_updateRecognitionSession;
- (BOOL)recognitionEnabled;
- (id)forcedRecognitionLocales;
- (id)indexableContent;
- (BOOL *)_newAsciiBitfield;
- (BOOL)containsInternalStrokes;
- (void)_imageInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 scale:(double)a1 completionHandler:(id /* block */)a2;
- (id)drawingByAppendingStrokes:(id)a0;
- (id)visibleStrokes;
- (id)_visibleStrokes;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })strokeBounds;
- (id)insertNewTestStroke;
- (id)_addStroke:(id)a0;
- (void)_removeStroke:(id)a0;
- (id)copyAndAddStroke:(id)a0 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a1;
- (void)setStrokes:(id)a0 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a1 concat:(BOOL)a2;
- (id)setStroke:(id)a0 ink:(id)a1;
- (id)setStroke:(id)a0 hidden:(BOOL)a1;
- (void)_transformAllStrokes:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a0;
- (id)setStroke:(id)a0 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a1 concat:(BOOL)a2;
- (void)setStrokeSubstrokes:(id)a0;
- (id)CHDrawing;
- (void)setForcedRecognitionLocales:(id)a0;
- (void)cancelOngoingRecognitionRequests;
- (void)performSearchQuery:(id)a0 withBlock:(id /* block */)a1;
- (long long)_minimumSerializationVersion;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })_transformForImageWithSize:(struct CGSize { double x0; double x1; })a0;
- (struct CGSize { double x0; double x1; })_orientedDrawingSize;
- (void)_upgradeLegacyPenInks;
- (id)intersectedStrokesAtPoint:(struct CGPoint { double x0; double x1; })a0 selectionType:(long long)a1 inputType:(long long)a2 visibleOnscreenStrokes:(id)a3;
- (void)fetchIntersectedStrokesBetweenPoint:(struct CGPoint { double x0; double x1; })a0 otherPoint:(struct CGPoint { double x0; double x1; })a1 visibleOnscreenStrokes:(id)a2 completion:(id /* block */)a3;
- (id)intersectedStrokesFromStroke:(id)a0 visibleOnscreenStrokes:(id)a1;
- (id)clipStroke:(id)a0 onPlane:(id)a1 renderMask:(id)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_eraserStrokeBounds;
- (id)strokesIntersectedByPoint:(struct CGPoint { double x0; double x1; })a0 prevPoint:(struct CGPoint { double x0; double x1; })a1 minThreshold:(double)a2 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a3 onscreenVisibleStrokes:(id)a4;
- (id)_strokesIntersectedByPoint:(struct CGPoint { double x0; double x1; })a0 prevPoint:(struct CGPoint { double x0; double x1; })a1 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a2;

@end
