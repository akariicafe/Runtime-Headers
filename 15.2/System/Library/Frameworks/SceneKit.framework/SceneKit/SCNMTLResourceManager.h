@class MTKTextureLoader, SCNMTLLibraryManager, NSMapTable, SCNMTLShaderBindingsGenerator, SCNMTLShadableKey, NSMutableArray, SCNMTLBufferAllocator;
@protocol MTLDevice, MTLDepthStencilState, MTLTexture, MTLCommandQueue;

@interface SCNMTLResourceManager : NSObject {
    struct __C3DEngineStats { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; double x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; double x32; double x33; double x34; double x35; double x36; double x37; double x38; unsigned int x39; unsigned int x40; unsigned int x41; unsigned int x42; unsigned int x43; unsigned int x44; unsigned int x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned int x49; unsigned int x50; unsigned int x51; unsigned int x52; unsigned int x53; unsigned int x54; unsigned int x55; double x56; unsigned int x57; double x58; unsigned int x59; double x60; double x61; double x62; double x63; double x64[60]; unsigned int x65; double x66; double x67; } *__engineStats;
    SCNMTLShaderBindingsGenerator *_bindingsGenerator;
    struct __CFDictionary { } *_availablePipelineStates;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _availablePipelineStatesLock;
    SCNMTLBufferAllocator *_commonProfileBuffersAllocator;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableLightingSystemReflectionProbeTextures;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableIrradianceTextures;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableRadianceTextures;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableImages;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableImageProxy;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableSamplers;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableIESTextures;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableBuffers;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableMeshes;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableMeshSources;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableMeshElements;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableRasterizerStates;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableMorphs;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableSkins;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableComputePipelines;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableComputePipelinesWithStageDescriptor;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableTessellators;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableWireframeMaterials;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; } _availableShadables;
    SCNMTLShadableKey *_availableShadablesSearchKey;
    NSMutableArray *_availableStageDescriptors;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _stageDescriptorsLock;
    id _nullStageDescriptor;
    id<MTLTexture> _areaLightPrecomputedDataTexture;
    id<MTLTexture> _specularDFGTexture;
    struct __C3DFXMetalProgram { struct __C3DFXProgram { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; int x1; unsigned char x2 : 1; unsigned char x3 : 1; struct __C3DFXProgramDelegate *x4; } x0; struct __CFString *x1[2]; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; void *x5; struct __CFDictionary *x6; void *x7; unsigned long long x8; unsigned int x9; } *_defaultProgram;
    struct __C3DFXMetalProgram { struct __C3DFXProgram { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; int x1; unsigned char x2 : 1; unsigned char x3 : 1; struct __C3DFXProgramDelegate *x4; } x0; struct __CFString *x1[2]; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; void *x5; struct __CFDictionary *x6; void *x7; unsigned long long x8; unsigned int x9; } *_defaultProgramForTessellation;
    struct __C3DFXMetalProgram { struct __C3DFXProgram { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; int x1; unsigned char x2 : 1; unsigned char x3 : 1; struct __C3DFXProgramDelegate *x4; } x0; struct __CFString *x1[2]; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; void *x5; struct __CFDictionary *x6; void *x7; unsigned long long x8; unsigned int x9; } *_isolateProgram;
    id<MTLDepthStencilState> _depthAndStencilStateWithReadWriteDepthDisabled;
    id<MTLTexture> _defaultTexture;
    id<MTLTexture> _defaultTexture3D;
    id<MTLTexture> _defaultCubeTexture;
    id<MTLTexture> _defaultLightingEnvironmentIrradianceTexture;
    id<MTLTexture> _defaultLightingEnvironmentRadianceTexture;
    MTKTextureLoader *_mtkTextureLoader;
}

@property (retain, nonatomic) SCNMTLLibraryManager *libraryManager;
@property (readonly, nonatomic) id<MTLDevice> device;
@property (readonly, nonatomic) id<MTLCommandQueue> commandQueue;

+ (void)unregisterManagerForDevice:(id)a0;
+ (id)resourceManagerForDevice:(id)a0;

- (void)flush;
- (id)initWithDevice:(id)a0;
- (id)newTextureWithDescriptor:(id)a0;
- (id)newBufferWithLength:(unsigned long long)a0 options:(unsigned long long)a1;
- (struct __C3DEngineStats { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; double x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; double x32; double x33; double x34; double x35; double x36; double x37; double x38; unsigned int x39; unsigned int x40; unsigned int x41; unsigned int x42; unsigned int x43; unsigned int x44; unsigned int x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned int x49; unsigned int x50; unsigned int x51; unsigned int x52; unsigned int x53; unsigned int x54; unsigned int x55; double x56; unsigned int x57; double x58; unsigned int x59; double x60; double x61; double x62; double x63; double x64[60]; unsigned int x65; double x66; double x67; } *)stats;
- (id)newBufferWithBytes:(const void *)a0 length:(unsigned long long)a1 options:(unsigned long long)a2;
- (void)dealloc;
- (id)newComputePipelineStateWithFunctionName:(id)a0;
- (id)newRenderPipelineStateWithDesc:(struct { struct { struct __C3DFXMetalProgram *x0; struct __C3DMaterial *x1; struct __C3DGeometry *x2; struct __C3DFXPass *x3; struct __C3DFXPass *x4; id x5; struct __C3DBlendStates *x6; struct __C3DNode *x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; BOOL x12; id x13; struct { unsigned char x0; id /* block */ x1; } x14; unsigned long long x15; } x0; id x1; struct { unsigned long long x0[8]; unsigned long long x1; unsigned long long x2; unsigned char x3; } x2; struct __C3DBlendStates *x3; unsigned long long x4[8]; unsigned char x5; id x6; id x7; id x8; id x9; id /* block */ x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; })a0;
- (id)renderResourceForMesh:(struct __C3DMesh { } *)a0 dataKind:(unsigned char)a1;
- (id)computePipelineStateForKernel:(id)a0;
- (id)newComputePipelineStateForKernel:(id)a0 withStageDescriptor:(id)a1 constants:(id)a2 constantsHash:(id)a3;
- (id)renderResourceForMorph:(struct __C3DMorph { } *)a0 baseGeometry:(struct __C3DGeometry { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; struct __C3DMesh *x1; struct __C3DMaterial *x2; struct __CFArray *x3; struct __CFSet *x4; struct __CFArray *x5; struct *x6; unsigned char x7 : 1; void /* function */ *x8; struct { unsigned char x0; BOOL x1; struct { BOOL x0; unsigned char x1; unsigned char x2; unsigned char x3; } x2; struct __C3DMeshElement *x3; struct __C3DMeshSource *x4; struct __C3DMesh *x5; void *x6; void *x7; } x9; struct { unsigned char x0; float x1; unsigned int x2; unsigned char x3; union { struct { float x0; float x1; } x0; struct { float x0; } x1; struct { float x0; } x2; struct { unsigned char x0; unsigned char x1 : 1; unsigned char x2 : 1; } x3; } x4; } x10; unsigned char x11; } *)a1;
- (id)renderResourceForSkinner:(struct __C3DSkinner { } *)a0 baseMesh:(struct __C3DMesh { } *)a1 baseGeometry:(struct __C3DGeometry { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; struct __C3DMesh *x1; struct __C3DMaterial *x2; struct __CFArray *x3; struct __CFSet *x4; struct __CFArray *x5; struct *x6; unsigned char x7 : 1; void /* function */ *x8; struct { unsigned char x0; BOOL x1; struct { BOOL x0; unsigned char x1; unsigned char x2; unsigned char x3; } x2; struct __C3DMeshElement *x3; struct __C3DMeshSource *x4; struct __C3DMesh *x5; void *x6; void *x7; } x9; struct { unsigned char x0; float x1; unsigned int x2; unsigned char x3; union { struct { float x0; float x1; } x0; struct { float x0; } x1; struct { float x0; } x2; struct { unsigned char x0; unsigned char x1 : 1; unsigned char x2 : 1; } x3; } x4; } x10; unsigned char x11; } *)a2;
- (id)renderResourcesForEffectSlot:(struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct C3DColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x1; void *x2; union { struct __C3DImage *x0; void *x1; struct __C3DImageProxy *x2; struct __C3DTexture *x3; } x3; unsigned char x4 : 8; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 4; char x9; struct __C3DTextureSampler *x10; union C3DMatrix4x4)fi^v { } *x11; float x12; int x13; void *x14; } *)a0 withEngineContext:(struct __C3DEngineContext { } *)a1;
- (id)defaultLightingEnvironmentRadianceTexture;
- (void)_meshSourceWillDie:(id)a0;
- (void)_meshElementWillDie:(id)a0;
- (void)_meshWillDie:(id)a0;
- (void)_imageWillDie:(id)a0;
- (void)_imageProxyWillDie:(id)a0;
- (void)_programWillDie:(id)a0;
- (void)_passWillDie:(id)a0;
- (void)_materialWillDie:(id)a0;
- (void)_geometryWillDie:(id)a0;
- (void)_morphWillDie:(id)a0;
- (void)_skinWillDie:(id)a0;
- (void)_programHashCodeWillDie:(id)a0;
- (void)_removeMatchingProgram:(struct __C3DFXMetalProgram { struct __C3DFXProgram { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; int x1; unsigned char x2 : 1; unsigned char x3 : 1; struct __C3DFXProgramDelegate *x4; } x0; struct __CFString *x1[2]; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; void *x5; struct __CFDictionary *x6; void *x7; unsigned long long x8; unsigned int x9; } *)a0 pass:(struct __C3DFXPass { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct __CFString *x1; int x2; int x3; BOOL x4; struct __C3DFXTechnique *x5; struct __CFString *x6; struct __CFString *x7; struct __CFString *x8; struct __CFString *x9; BOOL x10; struct __C3DFXProgram *x11; struct __C3DMaterial *x12; struct __C3DBlendStates *x13; struct __C3DRasterizerStates *x14; struct C3DColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x15; unsigned char x16; unsigned int x17; unsigned char x18 : 1; unsigned char x19 : 1; unsigned char x20 : 1; unsigned char x21 : 1; unsigned char x22 : 1; unsigned char x23 : 1; unsigned char x24 : 1; unsigned char x25 : 1; unsigned char x26 : 1; unsigned char x27 : 1; unsigned char x28 : 1; unsigned char x29 : 1; unsigned char x30 : 1; unsigned char x31 : 1; unsigned char x32 : 1; unsigned char x33 : 1; unsigned char x34 : 1; unsigned char x35 : 1; unsigned char x36 : 1; unsigned char x37 : 1; unsigned char x38 : 1; unsigned char x39 : 1; unsigned char x40 : 1; unsigned char x41 : 1; unsigned char x42 : 1; unsigned char x43 : 1; unsigned char x44 : 1; unsigned char x45 : 1; struct __C3DRendererElement *x46; unsigned long long x47; unsigned long long x48; struct { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; void /* function */ *x4; void /* function */ *x5; void /* function */ *x6; void /* function */ *x7; void *x8; } x49; struct { struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9[4]; } x0[8]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9[4]; } x1; unsigned char x2 : 3; unsigned char x3 : 1; unsigned char x4 : 1; } x50; struct CGPoint { double x0; double x1; } x51; float x52[9]; struct *x53; unsigned int x54; struct __C3DNode *x55; struct __C3DNode *x56; struct __CFArray *x57; struct __C3DNode *x58; unsigned char x59; struct __CFString *x60; struct __CFString *x61; struct __CFString *x62; struct __C3DFXPassInput **x63; long long x64; long long x65; struct __CFDictionary *x66; id /* block */ x67; id /* block */ x68; struct __CFDictionary *x69; void *x70; } *)a1;
- (id)renderResourceForMeshElement:(struct __C3DMeshElement { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; unsigned int x1; unsigned int x2; struct __C3DMeshElement *x3; unsigned char x4; unsigned char x5; unsigned char x6; struct { char x0; struct __CFData *x1; unsigned int x2; unsigned int *x3; struct { long long x0; long long x1; } x4; unsigned char x5; BOOL x6; } x7; void *x8; float x9; float x10; float x11; void *x12; struct __C3DMeshSource *x13; void /* unknown type, empty encoding */ x14[2]; struct *x15; unsigned int x16; } *)a0;
- (id)_bufferForMTLBuffer:(void *)a0;
- (id)_bufferForData:(struct __CFData { } *)a0 bytesPerIndex:(unsigned long long)a1;
- (void)__updateMutableMesh:(struct __C3DMesh { } *)a0 withMetalMesh:(id)a1;
- (id)renderResourceForMeshSource:(struct __C3DMeshSource { struct __C3DGenericSource { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; struct __C3DSourceAccessor *x1; union { struct __CFData *x0; void *x1; void *x2; } x2; long long x3; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; } x0; unsigned short x1; unsigned char x2; unsigned char x3; } *)a0;
- (id)newConstantBufferWithLength:(unsigned long long)a0 options:(unsigned long long)a1;
- (id)renderResourceForSampler:(struct __C3DTextureSampler { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; int x1; int x2; int x3; int x4; int x5; int x6; struct C3DColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x7; float x8; unsigned char x9; int x10; unsigned long long x11; } *)a0;
- (void)_rasterizerStateDidDie:(const void *)a0;
- (void)removeAllShaders;
- (void)resetRasterizerStates;
- (id)renderResourceForRasterizerState:(struct __C3DRasterizerStates { } *)a0 reverseZ:(BOOL)a1;
- (id)renderResourceForTessellatedGeometry:(struct __C3DGeometry { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; struct __C3DMesh *x1; struct __C3DMaterial *x2; struct __CFArray *x3; struct __CFSet *x4; struct __CFArray *x5; struct *x6; unsigned char x7 : 1; void /* function */ *x8; struct { unsigned char x0; BOOL x1; struct { BOOL x0; unsigned char x1; unsigned char x2; unsigned char x3; } x2; struct __C3DMeshElement *x3; struct __C3DMeshSource *x4; struct __C3DMesh *x5; void *x6; void *x7; } x9; struct { unsigned char x0; float x1; unsigned int x2; unsigned char x3; union { struct { float x0; float x1; } x0; struct { float x0; } x1; struct { float x0; } x2; struct { unsigned char x0; unsigned char x1 : 1; unsigned char x2 : 1; } x3; } x4; } x10; unsigned char x11; } *)a0;
- (id)wireframeResourceForRendererElement:(struct __C3DRendererElement { unsigned int x0; struct __C3DNode *x1; struct __C3DGeometry *x2; struct __C3DMesh *x3; void *x4; struct __C3DMaterial *x5; struct __C3DFXTechnique *x6; struct { unsigned char x0[8]; } x7; int x8; unsigned int x9; unsigned char x10 : 8; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13 : 1; unsigned char x14 : 1; unsigned char x15 : 1; unsigned char x16 : 1; unsigned char x17 : 3; unsigned char x18 : 1; unsigned char x19 : 3; } *)a0 engineContext:(struct __C3DEngineContext { } *)a1 passInstance:(struct __C3DFXPassInstance { struct __C3DFXPass *x0; long long x1; struct __C3DFXPassInstance *x2; unsigned char x3; unsigned char x4; BOOL x5; unsigned char x6; struct __C3DArray *x7[6]; struct __C3DCullingContext { struct __C3DEnginePipeline *x0; struct { union { struct { float x0; float x1; float x2; float x3; } x0; } x0[6]; } x1[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x2[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x3[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x4[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x5[6]; struct { union { struct { float x0; float x1; float x2; float x3; } x0; } x0[6]; } x6[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x7[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x8[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x9[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x10[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x11[6]; unsigned int x12; unsigned char x13; unsigned char x14; unsigned char x15; unsigned char x16; BOOL x17; struct __C3DFXPass *x18; void *x19; struct __C3DNode *x20; struct __C3DNode *x21; BOOL x22; BOOL x23; BOOL x24; BOOL x25; BOOL x26; BOOL x27; BOOL x28; BOOL x29; BOOL x30; BOOL x31; unsigned long long x32; unsigned long long x33; void *x34; struct __C3DScene *x35; struct __C3DEngineContext *x36; double x37; double x38; union { struct { float x0; float x1; float x2; float x3; } x0; } x39; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x40; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x41; struct { struct *x0; unsigned int x1; unsigned int x2; } x42[6]; BOOL x43; void /* function */ *x44; } x8; struct __C3DNode *x9; } *)a2 hashPass:(unsigned long long)a3;
- (id)newIndexBufferWithLength:(unsigned long long)a0 options:(unsigned long long)a1;
- (id)renderResourceForMaterial:(struct __C3DMaterial { } *)a0 geometry:(struct __C3DGeometry { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; struct __C3DMesh *x1; struct __C3DMaterial *x2; struct __CFArray *x3; struct __CFSet *x4; struct __CFArray *x5; struct *x6; unsigned char x7 : 1; void /* function */ *x8; struct { unsigned char x0; BOOL x1; struct { BOOL x0; unsigned char x1; unsigned char x2; unsigned char x3; } x2; struct __C3DMeshElement *x3; struct __C3DMeshSource *x4; struct __C3DMesh *x5; void *x6; void *x7; } x9; struct { unsigned char x0; float x1; unsigned int x2; unsigned char x3; union { struct { float x0; float x1; } x0; struct { float x0; } x1; struct { float x0; } x2; struct { unsigned char x0; unsigned char x1 : 1; unsigned char x2 : 1; } x3; } x4; } x10; unsigned char x11; } *)a1 renderPipeline:(id)a2 engineContext:(struct __C3DEngineContext { } *)a3;
- (void)dispatchForTexture:(id)a0 computeEncoder:(id)a1 pipelineState:(id)a2;
- (void)dispatchForCubemap:(id)a0 computeEncoder:(id)a1 pipelineState:(id)a2;
- (id)depthAndStencilStateWithReadWriteDepthDisabled;
- (id)newComputePipelineStateWithFunctionName:(id)a0 constantValues:(id)a1;
- (id)newCubemapTextureForLatlongTexture:(id)a0 pixelFormat:(unsigned long long)a1 engineContext:(struct __C3DEngineContext { } *)a2 needsMipmap:(BOOL)a3;
- (id)renderResourceForImageProxy:(struct __C3DImageProxy { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; } x1; void *x2; unsigned char x3; } *)a0 sampler:(struct __C3DTextureSampler { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; int x1; int x2; int x3; int x4; int x5; int x6; struct C3DColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x7; float x8; unsigned char x9; int x10; unsigned long long x11; } *)a1 engineContext:(struct __C3DEngineContext { } *)a2;
- (id)renderResourceForImage:(struct __C3DImage { } *)a0 sampler:(struct __C3DTextureSampler { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; int x1; int x2; int x3; int x4; int x5; int x6; struct C3DColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x7; float x8; unsigned char x9; int x10; unsigned long long x11; } *)a1 options:(int)a2 engineContext:(struct __C3DEngineContext { } *)a3;
- (id)_textureDescriptorFromImage:(struct __C3DImage { } *)a0 needsMipMap:(BOOL)a1 textureOptions:(int)a2;
- (BOOL)_copyImage:(struct __C3DImage { } *)a0 toTexture:(id)a1 desc:(id)a2 textureOptions:(int)a3 needsMipMapGeneration:(BOOL)a4;
- (id)copyTextureByConvertingToCubeMapIfApplicable:(id)a0 engineContext:(struct __C3DEngineContext { } *)a1 needsMipmap:(BOOL)a2;
- (id)newTextureUsingMTKTextureLoaderWithURL:(id)a0 options:(id)a1;
- (void)_enqueueCopyFromTexture:(id)a0 toTexture:(id)a1 blitEncoder:(struct SCNMTLBlitCommandEncoder { id x0; id x1; } *)a2 generateMipMaps:(BOOL)a3;
- (id)latlongTextureForCubemap:(id)a0 pixelFormat:(unsigned long long)a1 renderContext:(id)a2 needsMipmap:(BOOL)a3;
- (id)unstageTexture:(id)a0 commandBuffer:(id)a1;
- (id)defaultTexture;
- (id)defaultCubeTexture;
- (id)defaultTexture3D;
- (id)iesTextureForProfile:(id)a0 renderContext:(id)a1;
- (void)reloadPipelinesIfNeeded;
- (id)irradianceTextureForEnvironmentTexture:(id)a0 renderContext:(id)a1 applySH:(id /* block */)a2;
- (id)radianceTextureForEnvironmentTexture:(id)a0 engineContext:(struct __C3DEngineContext { } *)a1 commandBuffer:(id)a2;
- (id)renderResourceForProgramDesc:(struct { struct __C3DFXMetalProgram *x0; struct __C3DMaterial *x1; struct __C3DGeometry *x2; struct __C3DFXPass *x3; struct __C3DFXPass *x4; id x5; struct __C3DBlendStates *x6; struct __C3DNode *x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; BOOL x12; id x13; struct { unsigned char x0; id /* block */ x1; } x14; unsigned long long x15; })a0 renderPassDescriptor:(id)a1;
- (id)specularDFGTextureWithRenderContext:(id)a0;
- (id)areaLightPrecomputedDataTexture;
- (id)defaultLightingEnvironmentIrradianceTexture;
- (struct __C3DFXMetalProgram { } *)defaultProgramUsingTessellation:(BOOL)a0;
- (void)_bakeSphericalHamonicsBasedIrradianceTexture:(id)a0 forEnvironmentTexture:(id)a1 renderContext:(id)a2 applySH:(id /* block */)a3;
- (id)sphericalHarmonicsForEnvironmentTexture:(id)a0 order:(unsigned long long)a1 commandBuffer:(id)a2;
- (id)newRadianceTextureForEnvironmentTexture:(id)a0 engineContext:(struct __C3DEngineContext { } *)a1 cpuAccessible:(BOOL)a2 commandBuffer:(id)a3;
- (void)_bakeStochasticIrradianceTexture:(id)a0 forEnvironmentTexture:(id)a1 mipmapLevelForSampling:(unsigned long long)a2 useTextureView:(BOOL)a3 renderContext:(id)a4;
- (id)textureForSamplingTexture:(id)a0 atSize:(unsigned long long)a1 mipmapLevelCount:(unsigned long long *)a2 renderContext:(id)a3;
- (id)shFromCPU:(id)a0 commandBuffer:(id)a1;
- (id)newComputePipelineStateWithFunctionName:(id)a0 library:(id)a1;
- (void)_createPipelineStateWithDescriptor:(id)a0 desc:(struct { struct { struct __C3DFXMetalProgram *x0; struct __C3DMaterial *x1; struct __C3DGeometry *x2; struct __C3DFXPass *x3; struct __C3DFXPass *x4; id x5; struct __C3DBlendStates *x6; struct __C3DNode *x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; BOOL x12; id x13; struct { unsigned char x0; id /* block */ x1; } x14; unsigned long long x15; } x0; id x1; struct { unsigned long long x0[8]; unsigned long long x1; unsigned long long x2; unsigned char x3; } x2; struct __C3DBlendStates *x3; unsigned long long x4[8]; unsigned char x5; id x6; id x7; id x8; id x9; id /* block */ x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; })a1 pipeline:(id)a2;
- (id)_newComputeDescriptorForPipelineDesc:(struct { id x0; id x1; id x2; BOOL x3; BOOL x4; BOOL x5; })a0 library:(id)a1;
- (void)_configureComputePipeline:(id)a0 withDescriptor:(id)a1;
- (id)newComputePipelineStateForDesc:(struct { id x0; id x1; id x2; BOOL x3; BOOL x4; BOOL x5; })a0 library:(id)a1;
- (id)getUniqueStageDescriptor:(id)a0;
- (id)computePipelineStateForKernel:(id)a0 threadGroupSizeIsMultipleOfThreadExecutionWidth:(BOOL)a1;
- (id)newComputePipelineStateWithFunctionName:(id)a0 library:(id)a1 constantValues:(id)a2;
- (BOOL)hasCommonProfilePrecompiledFunctions;

@end
