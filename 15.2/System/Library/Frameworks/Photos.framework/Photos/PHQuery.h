@class NSMutableDictionary, NSPredicate, NSRelationshipDescription, NSDictionary, NSFetchRequest, PHFetchOptions, NSString, NSManagedObjectID, NSSet, PHCollection, NSMutableSet, PHPhotoLibrary, NSArray;

@interface PHQuery : NSObject <NSPredicateVisitor, NSCopying> {
    NSPredicate *_cachedFetchOptionsPredicate;
    NSPredicate *_filterPredicate;
    NSFetchRequest *_fetchRequest;
    long long _collectionFetchType;
    BOOL _preparedContainerInfo;
    NSRelationshipDescription *_containerRelationship;
    NSManagedObjectID *_containerIdentifier;
    PHCollection *_containerCollection;
    BOOL _preparedCombinedQueryKeys;
    id _combinedQueryGroupKey;
    NSString *_combinedQueryKeyPath;
    NSManagedObjectID *_combinedQuerySeparatingIdentifier;
    BOOL _preparedFilteringAttributes;
    NSMutableSet *_filteringKeys;
    unsigned long long _filteringAttributesIndexValue;
    unsigned long long _filteringRelationshipsIndexValue;
    unsigned long long _objectToContainerRelationshipIndexValue;
    unsigned long long _containerToObjectRelationshipIndexValue;
    unsigned long long _containerSortingAttributesIndexValue;
    unsigned long long _containerUserQueryIndexValue;
    NSMutableSet *_filteringOids;
    NSMutableSet *_filteringObjectKeyPaths;
    NSMutableDictionary *_filteringRelationshipsIndexValueByBaseEntityName;
    id /* block */ _identificationBlock;
}

@property (nonatomic, setter=_setIncludesCameraRoll:) BOOL _includesCameraRoll;
@property (retain) NSArray *propertiesToGroupBy;
@property (retain) NSArray *propertiesToFetchWhenGrouping;
@property (readonly, nonatomic) NSRelationshipDescription *containerRelationship;
@property (readonly) NSString *fetchType;
@property (readonly) NSFetchRequest *fetchRequest;
@property (readonly) NSPredicate *basePredicate;
@property (readonly) NSPredicate *filterPredicate;
@property (readonly) NSArray *seedOIDs;
@property (readonly) PHPhotoLibrary *photoLibrary;
@property (readonly, nonatomic) NSString *shortDescription;
@property (readonly) id combinedQueryGroupKey;
@property (readonly) NSString *combinedQueryKeyPath;
@property (readonly) NSManagedObjectID *combinedQuerySeparatingIdentifier;
@property (readonly, nonatomic) NSSet *filteringOids;
@property (readonly, nonatomic) NSDictionary *filteringRelationshipsIndexValueByBaseEntityName;
@property (copy, nonatomic) PHFetchOptions *fetchOptions;

+ (id)queryForType:(id)a0 withBasePredicate:(id)a1 seedOIDs:(id)a2 inLibrary:(id)a3;
+ (id)combinedFetchRequestForQueries:(id)a0;
+ (id)queryForMomentListsWithSubType:(long long)a0 options:(id)a1;
+ (id)queryForAllAssetsAssociatedWithMemory:(id)a0 options:(id)a1;
+ (id)_queryForPersonsInAssetsWithObjectIDs:(id)a0 withOptions:(id)a1;
+ (id /* block */)identificationBlockForSmartAlbumKind:(int)a0;
+ (id)queryForAssociatedPersonForFaceGroup:(id)a0 withOptions:(id)a1;
+ (id)queryForMomentsForPersonsWithLocalIdentifiers:(id)a0 options:(id)a1;
+ (id)queryForRepresentativeAssetsInSuggestion:(id)a0 options:(id)a1;
+ (id)queryForRootAlbumCollectionListWithOptions:(id)a0;
+ (id)queryForMomentListsWithSubType:(long long)a0 containingMoment:(id)a1;
+ (id)queryForFacesWithLocalIdentifiers:(id)a0 options:(id)a1;
+ (id)queryForFaceGroupsForPerson:(id)a0 options:(id)a1;
+ (id)queryForMomentsBackingMemory:(id)a0;
+ (id)queryForAssetsInAssetCollection:(id)a0 options:(id)a1;
+ (id)queryForAssetCollectionsWithType:(long long)a0 subtype:(long long)a1 options:(id)a2;
+ (id)_transformedSortDescriptors:(id)a0 forFetchType:(id)a1;
+ (id)queryForParentHighlightForPhotosHighlight:(id)a0 options:(id)a1;
+ (id)queryForParentDayGroupHighlightForPhotosHighlight:(id)a0 options:(id)a1;
+ (id)queryForFaceCropsForPerson:(id)a0 options:(id)a1;
+ (id)queryForMomentsContainingAssetsWithOIDs:(id)a0 options:(id)a1;
+ (id)queryForKeyAssetInPhotosHighlightWithLocalIdentifier:(id)a0 options:(id)a1;
+ (id)queryForAssetCollectionsWithType:(long long)a0 localIdentifiers:(id)a1 options:(id)a2;
+ (id)queryForKeyFaceForFaceGroup:(id)a0 options:(id)a1;
+ (id)queryForRejectedPersonsForFace:(id)a0 options:(id)a1;
+ (id)queryForGuestAssetsInCollectionContainingAsset:(id)a0 options:(id)a1;
+ (id)queryForFaceGroupsWithOptions:(id)a0;
+ (id)queryForType:(id)a0 withBasePredicate:(id)a1 inLibrary:(id)a2;
+ (id)queryForSuggestionsWithState:(unsigned short)a0 options:(id)a1;
+ (id)defaultSortDescriptorForFetchType:(id)a0 predicate:(id)a1;
+ (id)queryForFacesWithOptions:(id)a0;
+ (id)queryForSuggestionsWithOptions:(id)a0;
+ (id)queryForType:(id)a0 withIdentifiers:(id)a1 local:(BOOL)a2 options:(id)a3;
+ (id)_filterPredicateFromFetchOptionsPredicate:(id)a0 options:(id)a1 phClass:(Class)a2;
+ (id)queryForUserCuratedAssetsInMemory:(id)a0 options:(id)a1;
+ (id)queryForCollectionsInCollectionList:(id)a0 options:(id)a1;
+ (id)queryForAnsweredYesOrNoQuestionsWithOptions:(id)a0;
+ (id)queryForSingletonFacesWithOptions:(id)a0;
+ (id)queryForCuratedAssetsInMomentShare:(id)a0 options:(id)a1;
+ (id)queryForAssetsForKeywords:(id)a0 options:(id)a1;
+ (id)queryForMergeCandidatePersonsForPerson:(id)a0 options:(id)a1;
+ (id)_relationshipForFetchType:(id)a0 predicate:(id)a1;
+ (id)queryForAssetsFromCameraSinceDate:(id)a0 options:(id)a1;
+ (id)queryForImportSessionsWithOptions:(id)a0;
+ (id)queryForKeyAssetInPhotosHighlight:(id)a0 options:(id)a1;
+ (id)queryForQuestionsWithLocalIdentifiers:(id)a0 options:(id)a1;
+ (id)queryForTopLevelUserCollectionsWithOptions:(id)a0;
+ (id)queryForKeyAssetsInSuggestion:(id)a0 options:(id)a1;
+ (id)_queryForPersonsWithFaceRelationshipPredicate:(id)a0 options:(id)a1;
+ (id)queryForPersonsWithQuestionType:(unsigned short)a0 options:(id)a1;
+ (id)_fetchTypeForLocalIdentifiers:(id)a0;
+ (id)queryForKeyFaceOnPerson:(id)a0 options:(id)a1;
+ (id)queryForInvalidMergeCandidatePersonsForPerson:(id)a0 options:(id)a1;
+ (id)queryForQuestionsWithState:(unsigned short)a0 options:(id)a1;
+ (id)queryForAssetsWithOptions:(id)a0;
+ (id)queryForEmptyFaceGroupsWithOptions:(id)a0;
+ (id)queryForKeyAssetsInAssetCollection:(id)a0 options:(id)a1;
+ (id)queryForAssetsWithUUIDs:(id)a0 options:(id)a1;
+ (id)queryForType:(id)a0 withIdentifiers:(id)a1 identiferKeyPath:(id)a2 options:(id)a3;
+ (id)queryForAssetsNeedingSceneProcessingWithOptions:(id)a0;
+ (id)queryForFaceCropsWithLocalIdentifiers:(id)a0 options:(id)a1;
+ (id)queryForFacesInFaceGroup:(id)a0 options:(id)a1;
+ (id)queryForAssetsAllowedForSceneProcessingWithOptions:(id)a0;
+ (id)queryForFaceGroupsWithFace:(id)a0 options:(id)a1;
+ (id)queryForShareParticipantsInShare:(id)a0 options:(id)a1;
+ (id)queryForPersonsWithLocalIdentifiers:(id)a0 options:(id)a1;
+ (id)queryForPersonsWithNonNilUserFeedbackWithOptions:(id)a0;
+ (id)queryForFacesOnFaceCrop:(id)a0 options:(id)a1;
+ (id)queryForRootProjectCollectionListWithOptions:(id)a0;
+ (id)queryForShareParticipantsWithLocalIdentifiers:(id)a0 options:(id)a1;
+ (id)queryForParentHighlightsForPhotosHighlights:(id)a0 options:(id)a1;
+ (id)queryForRepresentativeAssetsInMemory:(id)a0 options:(id)a1;
+ (id)queryForAnsweredQuestionsWithOptions:(id)a0;
+ (id)queryForMomentsContainingAssetsWithLocalIdentifiers:(id)a0 options:(id)a1;
+ (id)queryForAssetsForFaces:(id)a0 options:(id)a1;
+ (id)queryForAssetsWithMediaType:(long long)a0 options:(id)a1;
+ (id)queryForCollectionListsWithType:(long long)a0 localIdentifiers:(id)a1 options:(id)a2;
+ (id)queryForAssetCollectionsWithLocalIdentifiers:(id)a0 options:(id)a1;
+ (id)_guestAssetOnlyPredicate;
+ (id)queryForFaceCropsWithOptions:(id)a0;
+ (id)queryForAssetsWithBurstIdentifier:(id)a0 options:(id)a1;
+ (id)queryForAssetCollectionsContainingAsset:(id)a0 withType:(long long)a1 options:(id)a2;
+ (id)queryForAssetCollectionsWithObjectIDs:(id)a0 options:(id)a1;
+ (id)queryForKeywordsWithLocalIdentifiers:(id)a0 options:(id)a1;
+ (id)queryForFacesInAssets:(id)a0 options:(id)a1;
+ (id)queryForFaceGroupsWithLocalIdentifiers:(id)a0 options:(id)a1;
+ (id)queryForPersonsInAssets:(id)a0 withOptions:(id)a1;
+ (id)queryForAssetsForBehavioralCurationWithOptions:(id)a0;
+ (id)queryForQuestionsWithOptions:(id)a0;
+ (id)queryForMomentsBackingSuggestion:(id)a0;
+ (id)queryForChildrenDayGroupHighlightsForPhotosHighlight:(id)a0 options:(id)a1;
+ (id)queryForFacesForPerson:(id)a0 options:(id)a1;
+ (id)queryForContributorForAsset:(id)a0 options:(id)a1;
+ (id)queryForKeywordsWithTitles:(id)a0 options:(id)a1;
+ (id)queryForAssetsInBoundingBoxWithTopLeftLocation:(id)a0 bottomRightLocation:(id)a1 options:(id)a2;
+ (id)queryForKeyAssetInMemory:(id)a0 options:(id)a1;
+ (id)_queryForRootCollectionListWithRootFolder:(id)a0 options:(id)a1;
+ (id)queryForMovieCuratedAssetsInMemory:(id)a0 options:(id)a1;
+ (id)queryForAssetsWithObjectIDs:(id)a0 options:(id)a1;
+ (id)queryForRejectedFacesOnPerson:(id)a0 options:(id)a1;
+ (id)queryForPersonsWithFace:(id)a0 options:(id)a1;
+ (id)queryForMomentsForFacesWithLocalIdentifiers:(id)a0 options:(id)a1;
+ (id)queryForCuratedAssetsInMemory:(id)a0 options:(id)a1;
+ (id)queryForAssetsWithCloudIdentifiers:(id)a0 options:(id)a1;
+ (id)queryForAssetsForFaceGroups:(id)a0 options:(id)a1;
+ (id)queryForProjectsWithLocalIdentifiers:(id)a0 options:(id)a1;
+ (id)queryForAssetsForPersons:(id)a0 options:(id)a1;
+ (id /* block */)identificationBlockForAlbumSortKey:(unsigned int)a0;
+ (id)queryForKeyAssetsInMomentShare:(id)a0 options:(id)a1;
+ (id)queryForCollectionListsWithType:(long long)a0 subtype:(long long)a1 options:(id)a2;
+ (id)queryForAssetCollectionsContainingAssets:(id)a0 withType:(long long)a1 options:(id)a2;
+ (id)queryForFacesInAsset:(id)a0 options:(id)a1;
+ (id)queryForPersonsWithContactIdentifiers:(id)a0 options:(id)a1;
+ (id)queryForKeywordsWithOptions:(id)a0;
+ (id)queryForTopLevelCollectionsMatchingPredicate:(id)a0 options:(id)a1;
+ (id)queryForChildrenHighlightsForPhotosHighlight:(id)a0 options:(id)a1;
+ (id)queryForPersonsInAsset:(id)a0 options:(id)a1;
+ (id)queryForKeywordsForAsset:(id)a0 options:(id)a1;
+ (id)queryForExtendedCuratedAssetsInMemory:(id)a0 options:(id)a1;
+ (id)queryForCustomKeyAssetsInAssetCollection:(id)a0 options:(id)a1;
+ (id)queryForPhotosHighlightsContainingMoments:(id)a0;
+ (id)queryForPersonsWithOptions:(id)a0;
+ (id)queryForCuratedAssetsInPhotosHighlight:(id)a0 options:(id)a1;
+ (id)queryForPersonsWithType:(long long)a0 options:(id)a1;
+ (id)queryForMomentsWithOptions:(id)a0;
+ (id)queryForAssetsInImportSessions:(id)a0 options:(id)a1;
+ (id)queryForAllAssetsInYearRepresentedByYearHighlight:(id)a0 options:(id)a1;
+ (BOOL)_isKindOfMomentOrAlbumEntity:(id)a0;
+ (id)queryForReferencedAssetsWithOptions:(id)a0;
+ (id)queryForSuggestionsWithState:(unsigned short)a0 type:(unsigned short)a1 options:(id)a2;
+ (id)queryForMomentsInPhotosHighlight:(id)a0;
+ (id)queryForMomentsInMomentList:(id)a0 options:(id)a1;
+ (id)fetchRootFolderIDForAlbumKind:(int)a0 photoLibrary:(id)a1;
+ (id)queryForGuestAssetsWithOptions:(id)a0;
+ (id)_queryForAssetsWithIdentifiers:(id)a0 local:(BOOL)a1 options:(id)a2;
+ (id)_fetchOptionsForFetchingAssetsFromImportSessions:(id)a0 options:(id)a1;
+ (id)_containerIdentifierForFetchType:(id)a0 predicate:(id)a1 outRelationship:(id *)a2;
+ (id)_defaultFetchOptionsForIdentifiedAssetsQueryInPhotoLibrary:(id)a0;
+ (id)queryForFacesOnAssetWithFace:(id)a0 options:(id)a1;
+ (id)queryForAssetsWithLocalIdentifiers:(id)a0 options:(id)a1;
+ (BOOL)_validateLocalIdentifiers:(id)a0 compatibilityWithFetchType:(id)a1;
+ (id)_fetchOptionsForFetchingAssetsFromAssetCollection:(id)a0 options:(id)a1 changeDetectionCriteria:(id)a2;
+ (id)queryForCollectionListContainingCollection:(id)a0 options:(id)a1;

- (void)_setBasePredicate:(id)a0;
- (id)_effectiveDefaultSortDescriptor;
- (id)containerIdentifier;
- (void)visitPredicate:(id)a0;
- (unsigned long long)filteringRelationshipsIndexValue;
- (unsigned long long)containerSortingAttributesIndexValue;
- (id)initForType:(id)a0 withBasePredicate:(id)a1 seedOIDs:(id)a2 inLibrary:(id)a3;
- (void)_prepareFilteringAttributes;
- (void)visitPredicateOperator:(id)a0;
- (id)_substitutedChangeTrackingKeyPathFromKeyPath:(id)a0;
- (unsigned long long)objectToContainerRelationshipIndexValue;
- (id)initForType:(id)a0 withBasePredicate:(id)a1 inLibrary:(id)a2;
- (BOOL)_isAlbumContentSort;
- (long long)collectionFetchType;
- (id)description;
- (void)_setIdentificationBlock:(id /* block */)a0;
- (void)visitPredicateExpression:(id)a0;
- (void)_setCollectionFetchType:(long long)a0;
- (void)_prepareContainerInfo;
- (void).cxx_destruct;
- (id)executeQuery;
- (unsigned long long)filteringAttributesIndexValue;
- (unsigned long long)containerUserQueryIndexValue;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)effectivePredicateForPHClass:(Class)a0 request:(id)a1 includingBasePredicate:(BOOL)a2;
- (id)_globalPredicatesForPHClass:(Class)a0;
- (BOOL)overrideResultClassWithFetchType;
- (unsigned long long)containerToObjectRelationshipIndexValue;
- (id)_effectiveSortDescriptors;
- (BOOL)_isUserSmartAlbum;
- (id)_createFetchRequestIncludingBasePredicate:(BOOL)a0;
- (void)_prepareCombinedQueryKeys;
- (BOOL)_isAlbumContentTitleSort;
- (void)_setContainerCollection:(id)a0;
- (id)updatedQueryWithChange:(id)a0;

@end
