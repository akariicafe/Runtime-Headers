@class AVPortraitEffectsMatte, NSURL, AVSemanticSegmentationMatte, NSDictionary, CIFilterShape, AVDepthData;

@interface CIImage : NSObject <NSSecureCoding, NSCopying> {
    void *_priv;
}

@property (class, readonly) CIImage *blackImage;
@property (class, readonly) CIImage *whiteImage;
@property (class, readonly) CIImage *grayImage;
@property (class, readonly) CIImage *redImage;
@property (class, readonly) CIImage *greenImage;
@property (class, readonly) CIImage *blueImage;
@property (class, readonly) CIImage *cyanImage;
@property (class, readonly) CIImage *magentaImage;
@property (class, readonly) CIImage *yellowImage;
@property (class, readonly) CIImage *clearImage;
@property (class, readonly) BOOL supportsSecureCoding;

@property (readonly, nonatomic) AVDepthData *depthData;
@property (readonly, nonatomic) AVPortraitEffectsMatte *portraitEffectsMatte;
@property (readonly, nonatomic) AVSemanticSegmentationMatte *semanticSegmentationMatte;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } extent;
@property (readonly) NSDictionary *properties;
@property (readonly) CIFilterShape *definition;
@property (readonly) NSURL *url;
@property (readonly) struct CGColorSpace { } *colorSpace;
@property (readonly, nonatomic) struct __CVBuffer { } *pixelBuffer;
@property (readonly, nonatomic) struct CGImage { } *CGImage;

+ (id)imageWithContentsOfURL:(id)a0;
+ (id)imageWithMTLTexture:(id)a0 options:(id)a1;
+ (id)imageYCC444:(id)a0 matrix:(int)a1 fullRange:(BOOL)a2 precision:(int)a3 colorSpace:(struct CGColorSpace { } *)a4;
+ (id)smartColorAdjustmentsForValue:(double)a0 andStatistics:(id)a1;
+ (id)imageWithYImage:(id)a0 CrCbImage:(id)a1 CrCbScale:(int)a2 matrix:(int)a3 fullRange:(BOOL)a4 colorSpace:(struct CGColorSpace { } *)a5;
+ (id)imageWithCGLayer:(struct CGLayer { } *)a0;
+ (id)imageWithColor:(id)a0;
+ (id)noiseImagePadded;
+ (id)imageWithInternalRepresentation:(void *)a0;
+ (id)imageWithAttributedString:(id)a0 format:(int)a1 options:(id)a2;
+ (id)imageWithData:(id)a0 options:(id)a1;
+ (id)imageWithData:(id)a0;
+ (id)imageWithYImage:(id)a0 CrCbImage:(id)a1 CrCbScale:(int)a2 matrix:(int)a3 fullRange:(BOOL)a4 precision:(int)a5 colorSpace:(struct CGColorSpace { } *)a6;
+ (id)imageWithBitmapData:(id)a0 bytesPerRow:(unsigned long long)a1 size:(struct CGSize { double x0; double x1; })a2 format:(int)a3 colorSpace:(struct CGColorSpace { } *)a4;
+ (id)nullImage;
+ (id)imageWithTexture:(unsigned int)a0 size:(struct CGSize { double x0; double x1; })a1 options:(id)a2;
+ (id)imageWithContentsOfFile:(id)a0;
+ (id)imageWithYCCImage:(id)a0 matrix:(int)a1 fullRange:(BOOL)a2 precision:(int)a3 colorSpace:(struct CGColorSpace { } *)a4;
+ (id)imageWithTexture:(unsigned int)a0 size:(struct CGSize { double x0; double x1; })a1 flipped:(BOOL)a2 options:(id)a3;
+ (id)imageWithCVPixelBuffer:(struct __CVBuffer { } *)a0;
+ (id)imageWithSemanticSegmentationMatte:(id)a0 options:(id)a1;
+ (id)imageForRenderingWithMetal:(id)a0 orNonMetal:(id)a1;
+ (id)imageWithPortaitEffectsMatte:(id)a0;
+ (id)imageWithImageProvider:(id)a0 size:(unsigned long long)a1 :(unsigned long long)a2 format:(int)a3 colorSpace:(struct CGColorSpace { } *)a4 options:(id)a5;
+ (id)imageWithDepthData:(id)a0 options:(id)a1;
+ (id)imageWithPortraitEffectsMatte:(id)a0;
+ (id)imageWithAttributedString:(id)a0 format:(int)a1;
+ (id)imageWithPortraitEffectsMatte:(id)a0 options:(id)a1;
+ (id)noiseImage;
+ (id)imageWithCVPixelBuffer:(struct __CVBuffer { } *)a0 options:(id)a1;
+ (id)clearImage:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
+ (id)imageWithCGImage:(struct CGImage { } *)a0 options:(id)a1;
+ (id)imageWithCVImageBuffer:(struct __CVBuffer { } *)a0 options:(id)a1;
+ (id)noiseImageNearest;
+ (id)imageWithCVImageBuffer:(struct __CVBuffer { } *)a0;
+ (id)imageWithIOSurface:(struct __IOSurface { } *)a0 options:(id)a1;
+ (id)imageWithCGImageSource:(struct CGImageSource { } *)a0 index:(unsigned long long)a1 options:(id)a2;
+ (id)imageWithDepthData:(id)a0;
+ (id)imageWithSemanticSegmentationMatte:(id)a0;
+ (id)imageWithTexture:(unsigned int)a0 size:(struct CGSize { double x0; double x1; })a1 flipped:(BOOL)a2 colorSpace:(struct CGColorSpace { } *)a3;
+ (id)imageForRenderingWithMetalContext:(id)a0 orOpenGLContextUsingMetal:(id)a1 orNonMetalContext:(id)a2;
+ (id)emptyImage;
+ (id)imageWithPortaitEffectsMatte:(id)a0 options:(id)a1;
+ (id)imageWithContentsOfURL:(id)a0 options:(id)a1;
+ (id)imageForRenderingWithMPS:(id)a0 orNonMPS:(id)a1;
+ (id)imageYCC444:(id)a0 matrix:(int)a1 fullRange:(BOOL)a2 colorSpace:(struct CGColorSpace { } *)a3;
+ (id)imageWithBitmapData:(id)a0 bytesPerRow:(unsigned long long)a1 size:(struct CGSize { double x0; double x1; })a2 format:(int)a3 options:(id)a4;
+ (id)imageWithCGLayer:(struct CGLayer { } *)a0 options:(id)a1;
+ (id)imageWithIOSurface:(struct __IOSurface { } *)a0;
+ (id)imageWithImageProvider:(id)a0 userInfo:(id)a1 size:(struct CGSize { double x0; double x1; })a2 format:(int)a3 flipped:(BOOL)a4 colorSpace:(struct CGColorSpace { } *)a5;
+ (id)smartToneAdjustmentsForValue:(double)a0 andStatistics:(id)a1;
+ (id)smartToneAdjustmentsForValue:(double)a0 localLightAutoValue:(double)a1 andStatistics:(id)a2;
+ (id)imageWithCGImage:(struct CGImage { } *)a0;
+ (id)imageWithArrayOfImages:(id)a0 selector:(id /* block */)a1;
+ (id)imageWithYCCImage:(id)a0 matrix:(int)a1 fullRange:(BOOL)a2 colorSpace:(struct CGColorSpace { } *)a3;
+ (id)imageWithContentsOfFile:(id)a0 options:(id)a1;

- (id)initWithData:(id)a0 options:(id)a1;
- (id)initWithCVPixelBuffer:(struct __CVBuffer { } *)a0 options:(id)a1;
- (id)initWithIOSurface:(struct __IOSurface { } *)a0;
- (id)smartColorAdjustmentsForValue:(double)a0 andStatistics:(id)a1;
- (id)initWithCGImage:(struct CGImage { } *)a0 options:(id)a1;
- (id)imageByApplyingTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a0 highQualityDownsample:(BOOL)a1;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })imageTransformForOrientation:(int)a0;
- (id)metalImageByApplyingFilter:(id)a0 withInputParameters:(id)a1;
- (id)metalImageByApplyingFilter:(id)a0;
- (id)imageBySamplingLinear;
- (int)outputFormat;
- (id)userInfo;
- (void)encodeWithCoder:(id)a0;
- (id)getAutoRotateFilter:(id)a0 ciImage:(id)a1 inputRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 rotateCropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a3 minTiltAngle:(float)a4 maxTiltAngle:(float)a5 detectVerticalLines:(BOOL)a6 thrVertAngle:(float)a7 thrDomAngleDiff:(float)a8;
- (id)imageByInsertingIntermediate:(BOOL)a0;
- (id)initWithCGImage:(struct CGImage { } *)a0;
- (id)initWithContentsOfFile:(id)a0;
- (id)imageBySettingAlphaOneInExtent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)_imageByRenderingToIntermediate;
- (id)imageByCroppingToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)imageByApplyingFilter:(id)a0 withInputParameters:(id)a1;
- (id)initWithData:(id)a0;
- (void)finalize;
- (id)description;
- (id)_pdfDataRepresentation;
- (id)initWithCVPixelBuffer:(struct __CVBuffer { } *)a0;
- (id)imageBySettingProperties:(id)a0;
- (id)initWithContentsOfURL:(id)a0;
- (void)setValue:(id)a0 forKeyPath:(id)a1;
- (BOOL)cacheHint;
- (void)printTree;
- (void *)_internalRepresentation;
- (struct CGColorSpace { } *)baseColorSpace;
- (id)initWithIOSurface:(struct __IOSurface { } *)a0 options:(id)a1;
- (struct CGImage { } *)_originalCGImage;
- (id)_initWithIOSurface:(struct __IOSurface { } *)a0 options:(id)a1 owner:(void *)a2;
- (id)initWithCGImageSource:(struct CGImageSource { } *)a0 index:(unsigned long long)a1 options:(id)a2;
- (id)_initNaiveWithCGImage:(struct CGImage { } *)a0 options:(id)a1;
- (void)_setOriginalCGImage:(struct CGImage { } *)a0 options:(id)a1;
- (struct __CVBuffer { } *)_pixelBufferFromAuxProps:(struct __CFDictionary { } *)a0;
- (id)initAuxiliaryWithImageSource:(struct CGImageSource { } *)a0 options:(id)a1 depth:(BOOL)a2;
- (void)writeToTIFF:(id)a0;
- (id)initMatteWithImageSource:(struct CGImageSource { } *)a0 options:(id)a1;
- (id)initWithCGLayer:(struct CGLayer { } *)a0 options:(id)a1;
- (id)initWithBitmapData:(id)a0 bytesPerRow:(unsigned long long)a1 size:(struct CGSize { double x0; double x1; })a2 format:(int)a3 options:(id)a4;
- (id)initWithBitmapData:(id)a0 bytesPerRow:(unsigned long long)a1 size:(struct CGSize { double x0; double x1; })a2 format:(int)a3 colorSpace:(struct CGColorSpace { } *)a4;
- (id)_initWithBitmapData:(id)a0 bytesPerRow:(unsigned long long)a1 size:(struct CGSize { double x0; double x1; })a2 format:(int)a3 options:(id)a4;
- (id)initWithTexture:(unsigned int)a0 size:(struct CGSize { double x0; double x1; })a1 flipped:(BOOL)a2 colorSpace:(struct CGColorSpace { } *)a3;
- (id)initWithTexture:(unsigned int)a0 size:(struct CGSize { double x0; double x1; })a1 options:(id)a2;
- (id)initWithTexture:(unsigned int)a0 size:(struct CGSize { double x0; double x1; })a1 flipped:(BOOL)a2 options:(id)a3;
- (id)initWithMTLTexture:(id)a0 options:(id)a1;
- (id)_initWithCVImageBuffer:(struct __CVBuffer { } *)a0 options:(id)a1;
- (void)_setOriginalCVPixelBuffer:(struct __CVBuffer { } *)a0 options:(id)a1;
- (id)initWithCVImageBuffer:(struct __CVBuffer { } *)a0 options:(id)a1;
- (id)initWithEmptyClearColor;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })imageTransformForCGOrientation:(unsigned int)a0;
- (id)initWithCGLayer:(struct CGLayer { } *)a0;
- (id)initWithContentsOfURL:(id)a0 options:(id)a1;
- (id)initWithContentsOfFile:(id)a0 options:(id)a1;
- (id)imageByToneMappingColorSpaceToWorkingSpace:(struct CGColorSpace { } *)a0;
- (id)initForRenderingWithMetal:(id)a0 orNonMetal:(id)a1;
- (id)initWithArrayOfImages:(id)a0 selector:(id /* block */)a1;
- (id)initForRenderingWithMPS:(id)a0 orNonMPS:(id)a1;
- (id)initForRenderingWithMetalContext:(id)a0 orOpenGLContextUsingMetal:(id)a1 orNonMetalContext:(id)a2;
- (struct __CVBuffer { } *)_originalCVPixelBuffer;
- (id)initWithCVImageBuffer:(struct __CVBuffer { } *)a0;
- (id)initWithColorR:(double)a0 G:(double)a1 B:(double)a2 A:(double)a3;
- (id)imageByApplyingOrientation:(int)a0;
- (id)init;
- (id)imageByApplyingCGOrientation:(unsigned int)a0;
- (id)_imageByPremultiplying;
- (id)_imageByUnpremultiplying;
- (id)_imageByClampingAlpha;
- (id)_imageByApplyingBlur:(double)a0;
- (id)_imageByMatchingWorkingSpaceToColorSpace:(struct CGColorSpace { } *)a0;
- (id)_imageByMatchingColorSpaceToWorkingSpace:(struct CGColorSpace { } *)a0;
- (id)imageByColorMatchingWorkingSpaceToRGBorGrayColorSpace:(struct CGColorSpace { } *)a0;
- (id)imageByTaggingWithColorSpace:(struct CGColorSpace { } *)a0;
- (id)_imageBySamplingNearest;
- (id)imageByInsertingIntermediate;
- (id)imageBySettingPropertiesNoCopy:(id)a0;
- (id)_imageBySamplingLinear;
- (void)setCacheHint:(BOOL)a0;
- (id)initWithDepthData:(id)a0 options:(id)a1;
- (id)initWithDepthData:(id)a0;
- (id)initWithPortaitEffectsMatte:(id)a0 options:(id)a1;
- (id)initWithPortraitEffectsMatte:(id)a0 options:(id)a1;
- (id)initWithPortaitEffectsMatte:(id)a0;
- (id)initWithPortraitEffectsMatte:(id)a0;
- (id)initWithSemanticSegmentationMatte:(id)a0 options:(id)a1;
- (id)initWithSemanticSegmentationMatte:(id)a0;
- (id)initWithAttributedString:(id)a0 format:(int)a1 options:(id)a2;
- (id)initWithAttributedString:(id)a0 format:(int)a1;
- (id)TIFFRepresentation;
- (id)_autoRedEyeFilterWithFeatures:(id)a0 imageProperties:(id)a1 context:(id)a2 options:(id)a3;
- (id)_scaleImageToMaxDimension:(unsigned int)a0;
- (void)getAutocropRect:(id)a0 rotateXfrm:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a1 inputImageRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 clipRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a3;
- (id)autoAdjustmentFiltersWithOptions:(id)a0;
- (id)autoAdjustmentFiltersWithImageProperties:(id)a0 options:(id)a1;
- (struct CGPoint { double x0; double x1; })pointWithDictionary:(id)a0 name:(id)a1 index:(int)a2 transformedBy:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a3;
- (id)_dictForFeature:(id)a0 invOrientationTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a1 extent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (id)autoAdjustmentFilters;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })inverseImageTransformForOrientation:(int)a0;
- (id)imageWithMesh:(id)a0 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a1;
- (id)autoRedEyeFilterWithFeatures:(id)a0 imageProperties:(id)a1 options:(id)a2;
- (id)autoRedEyeFilterWithFeatures:(id)a0 options:(id)a1;
- (id)autoRotateFilterFFT:(id)a0 image:(struct CGImage { } *)a1 inputRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 minTiltAngle:(float)a3 maxTiltAngle:(float)a4 detectVerticalLines:(BOOL)a5 thrVertAngle:(float)a6 thrDomAngleDiff:(float)a7;
- (struct CGPoint { double x0; double x1; })calcIntersection:(struct CGPoint { double x0; double x1; })a0 slope1:(struct CGPoint { double x0; double x1; })a1 pt2:(struct CGPoint { double x0; double x1; })a2 slope2:(struct CGPoint { double x0; double x1; })a3;
- (id)initWithImageProvider:(id)a0 userInfo:(id)a1 size:(struct CGSize { double x0; double x1; })a2 format:(int)a3 flipped:(BOOL)a4 colorSpace:(struct CGColorSpace { } *)a5;
- (id)initWithImageProvider:(id)a0 size:(unsigned long long)a1 :(unsigned long long)a2 format:(int)a3 colorSpace:(struct CGColorSpace { } *)a4 options:(id)a5;
- (id)_initWithImageProvider:(id /* block */)a0 width:(unsigned long long)a1 height:(unsigned long long)a2 format:(int)a3 colorSpace:(struct CGColorSpace { } *)a4 surfaceCache:(BOOL)a5 options:(id)a6;
- (id)initWithCoder:(id)a0;
- (id)localLightStatisticsWithProxy:(BOOL)a0;
- (id)localLightStatistics;
- (id)localLightStatisticsNoProxy;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (BOOL)isOpaque;
- (id)imageByClampingToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)initWithColor:(id)a0;
- (id)imageByClampingToExtent;
- (id)filteredImage:(id)a0 keysAndValues:(id)a1;
- (id)imageBySamplingNearest;
- (id)imageWithExtent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 processorDescription:(id)a1 argumentDigest:(unsigned long long)a2 inputFormat:(int)a3 outputFormat:(int)a4 options:(id)a5 roiCallback:(id /* block */)a6 processor:(id /* block */)a7;
- (id)imageByCompositingOverImage:(id)a0;
- (id)autoPerspectiveFilterWithOptions:(id)a0;
- (id)autoPerspectiveResultWithOptions:(id)a0;
- (id)imageByUnpremultiplyingAlpha;
- (id)imageByPremultiplyingAlpha;
- (id)imageByApplyingGaussianBlurWithSigma:(double)a0;
- (void)dealloc;
- (id)imageByColorMatchingWorkingSpaceToColorSpace:(struct CGColorSpace { } *)a0;
- (id)imageByColorMatchingColorSpaceToWorkingSpace:(struct CGColorSpace { } *)a0;
- (id)smartBlackAndWhiteStatistics;
- (id)smartBlackAndWhiteAdjustmentsForValue:(double)a0 andStatistics:(id)a1;
- (id)smartToneStatistics;
- (id)smartColorStatistics;
- (id)_imageByApplyingGamma:(double)a0;
- (id)smartToneAdjustmentsForValue:(double)a0 andStatistics:(id)a1;
- (id)_imageByApplyingColorMatrixRed:(id)a0 green:(SEL)a1 blue:(void /* unknown type, empty encoding */)a2 bias:(void /* unknown type, empty encoding */)a3;
- (id)initWithImageProvider:(id /* block */)a0 width:(unsigned long long)a1 height:(unsigned long long)a2 format:(int)a3 colorSpace:(struct CGColorSpace { } *)a4 options:(id)a5;
- (id)debugDescription;
- (id)smartToneAdjustmentsForValue:(double)a0 localLightAutoValue:(double)a1 andStatistics:(id)a2;
- (id)imageByApplyingFilter:(id)a0;
- (void)setUserInfo:(id)a0;
- (id)_initWithInternalRepresentation:(void *)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })regionOfInterestForImage:(id)a0 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (id)imageByApplyingTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a0;

@end
