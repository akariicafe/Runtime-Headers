@class NSManagedObjectID, NSString, NSEntityDescription, NSManagedObjectContext;

@interface NSManagedObject : NSObject <NSFetchRequestResult> {
    int _cd_rc;
    unsigned int _cd_lockingInfo;
    unsigned int _cd_stateFlags;
    unsigned int _cd_extraFlags;
    id _cd_rawData;
    NSManagedObjectContext *_cd_managedObjectContext;
    NSManagedObjectID *_cd_objectID;
    struct { void *x0; id x1; id x2; id x3; id x4; } *_cd_extras;
    id _cd_queueReference;
}

@property (class, readonly) BOOL contextShouldIgnoreUnmodeledPropertyChanges;

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSManagedObjectContext *managedObjectContext;
@property (readonly, nonatomic) NSEntityDescription *entity;
@property (readonly, nonatomic) NSManagedObjectID *objectID;
@property (readonly, nonatomic, getter=isInserted) BOOL inserted;
@property (readonly, nonatomic, getter=isUpdated) BOOL updated;
@property (readonly, nonatomic, getter=isDeleted) BOOL deleted;
@property (readonly, nonatomic) BOOL hasChanges;
@property (readonly, nonatomic) BOOL hasPersistentChangedValues;
@property (readonly, nonatomic, getter=isFault) BOOL fault;
@property (readonly, nonatomic) unsigned long long faultingState;

+ (id)entity;
+ (void)initialize;
+ (id)entityName;
+ (id)fetchRequest;
+ (id)_retain_1;
+ (BOOL)_classShouldAlwaysRegisterSelectorNamed:(const char *)a0;
+ (BOOL)resolveInstanceMethod:(SEL)a0;
+ (id)alloc;
+ (id)allocWithZone:(struct _NSZone { } *)a0;
+ (Class)classForEntity:(id)a0;
+ (void)_release_1;
+ (id)allocWithEntity:(id)a0;
+ (BOOL)_isGeneratedClass;
+ (id)allocWithZone_10_4:(struct _NSZone { } *)a0;
+ (id)_PFPlaceHolderSingleton;
+ (char *)_transientPropertiesChangesMask__;
+ (id)_PFPlaceHolderSingleton_core;
+ (BOOL)_useFastValidationMethod;
+ (BOOL)_isGeneratedClass_1;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)a0;
+ (struct { int x0; void *x1; id x2; unsigned long long x3; unsigned char x4; unsigned long long x5; void *x6; unsigned char x7[32]; char *x8; struct _moFactoryClassFlags { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned int x7 : 25; } x9; } *)_PFMOClassFactoryData;
+ (unsigned int)allocBatch:(id *)a0 withEntity:(id)a1 count:(unsigned int)a2;
+ (BOOL)_hasOverriddenAwake;
+ (void)_initializeAccessorStubs;
+ (void)_initializePrimitiveAccessorStubs;
+ (id)batchAllocateWithEntity:(id)a0 insertIntoManagedObjectContext:(id)a1 count:(unsigned int)a2;
+ (BOOL)resolveClassMethod:(SEL)a0;
+ (id)alloc_10_4;
+ (void)_entityDeallocated;

- (void)willRefresh:(BOOL)a0;
- (void)didSave;
- (id)valueForUndefinedKey:(id)a0;
- (void)willTurnIntoFault;
- (BOOL)validateForInsert:(id *)a0;
- (void)willChangeValueForKey:(id)a0;
- (BOOL)validateForUpdate:(id *)a0;
- (void)awakeFromFetch;
- (void)prepareForDeletion;
- (id)valueForKey:(id)a0;
- (void)willChangeValueForKey:(id)a0 withSetMutation:(unsigned long long)a1 usingObjects:(id)a2;
- (void)didChangeValueForKey:(id)a0 withSetMutation:(unsigned long long)a1 usingObjects:(id)a2;
- (void)setValue:(id)a0 forUndefinedKey:(id)a1;
- (id)dictionaryWithValuesForKeys:(id)a0;
- (void)awakeFromInsert;
- (void)setValuesForKeysWithDictionary:(id)a0;
- (unsigned long long)retainCount;
- (void)willChange:(unsigned long long)a0 valuesAtIndexes:(id)a1 forKey:(id)a2;
- (void)willSave;
- (id)initWithContext:(id)a0;
- (id)methodSignatureForSelector:(SEL)a0;
- (void)didChange:(unsigned long long)a0 valuesAtIndexes:(id)a1 forKey:(id)a2;
- (void)setValue:(id)a0 forKey:(id)a1;
- (void)setNilValueForKey:(id)a0;
- (id)mutableArrayValueForKey:(id)a0;
- (id)_implicitObservationInfo;
- (id)retain;
- (void *)observationInfo;
- (id)mutableOrderedSetValueForKey:(id)a0;
- (id)mutableSetValueForKey:(id)a0;
- (id)initWithEntity:(id)a0 insertIntoManagedObjectContext:(id)a1;
- (BOOL)validateValue:(id *)a0 forKey:(id)a1 error:(id *)a2;
- (BOOL)_isDeallocating;
- (BOOL)isEqual:(id)a0;
- (id)init;
- (id)primitiveValueForKey:(id)a0;
- (void)_setVersionReference__:(unsigned int)a0;
- (void)willAccessValueForKey:(id)a0;
- (void)willFireFault;
- (void)didFireFault;
- (void)_setGenericValue:(id)a0 forKey:(id)a1 withIndex:(long long)a2 flags:(long long)a3;
- (id)_genericValueForKey:(id)a0 withIndex:(long long)a1 flags:(long long)a2;
- (void)didAccessValueForKey:(id)a0;
- (id)_genericMutableSetValueForKey:(id)a0 withIndex:(long long)a1 flags:(long long)a2;
- (id)_genericMutableOrderedSetValueForKey:(id)a0 withIndex:(long long)a1 flags:(long long)a2;
- (void)awakeFromSnapshotEvents:(unsigned long long)a0;
- (BOOL)hasFaultForRelationshipNamed:(id)a0;
- (BOOL)validateForDelete:(id *)a0;
- (void)setPrimitiveValue:(id)a0 forKey:(id)a1;
- (id)committedValuesForKeys:(id)a0;
- (id)dictionaryWithPropertyValues;
- (id)changedValues;
- (id)changedValuesForCurrentEvent;
- (id)objectIDsForRelationshipNamed:(id)a0;
- (void)didRefresh:(BOOL)a0;
- (id)bindableObjectPublisher;
- (void)setBindableObjectPublisher:(id)a0;
- (unsigned int)_versionReference__;
- (id)_initWithEntity:(id)a0 withID:(id)a1 withHandler:(id)a2 withContext:(id)a3;
- (void)_didChangeValue:(id)a0 forRelationship:(id)a1 named:(id)a2 withInverse:(id)a3;
- (id)_orderKeysForRelationshipWithName__:(id)a0;
- (BOOL)_updateLocationsOfObjectsToLocationByOrderKey:(id)a0 inRelationshipWithName:(id)a1 error:(id *)a2;
- (BOOL)_defaultValidation:(id *)a0 error:(id *)a1;
- (void)dealloc;
- (void /* function */ *)methodForSelector:(SEL)a0;
- (void)setObservationInfo:(void *)a0;
- (BOOL)_tryRetain;
- (oneway void)release;
- (void)didChangeValueForKey:(id)a0;
- (BOOL)respondsToSelector:(SEL)a0;
- (void)didTurnIntoFault;

@end
