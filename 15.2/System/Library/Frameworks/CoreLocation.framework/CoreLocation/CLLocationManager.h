@class NSString, NSSet, CLHeading, CLLocation;
@protocol CLLocationManagerDelegate;

@interface CLLocationManager : NSObject {
    id _internal;
}

@property (nonatomic, getter=isMatchInfoEnabled) BOOL matchInfoEnabled;
@property (nonatomic, getter=_isGroundAltitudeEnabled, setter=_setGroundAltitudeEnabled:) BOOL _groundAltitudeEnabled;
@property (nonatomic) BOOL privateMode;
@property (readonly, nonatomic) BOOL locationServicesAvailable;
@property (readonly, nonatomic) BOOL locationServicesApproved;
@property (readonly, nonatomic) double expectedGpsUpdateInterval;
@property (nonatomic) BOOL supportInfo;
@property (readonly, nonatomic) struct __CLClient { } *internalClient;
@property (nonatomic, getter=isLocationServicesPreferencesDialogEnabled) BOOL locationServicesPreferencesDialogEnabled;
@property (nonatomic, getter=isDynamicAccuracyReductionEnabled) BOOL dynamicAccuracyReductionEnabled;
@property (nonatomic) BOOL allowsAlteredAccessoryLocations;
@property (readonly, nonatomic) BOOL _limitsPrecision;
@property (readonly, nonatomic) int _authorizationStatus;
@property (readonly, nonatomic, getter=isAuthorizedForPreciseLocation) BOOL authorizedForPreciseLocation;
@property (readonly, nonatomic) int authorizationStatus;
@property (readonly, nonatomic) long long accuracyAuthorization;
@property (readonly, nonatomic, getter=isAuthorizedForWidgetUpdates) BOOL authorizedForWidgetUpdates;
@property (weak, nonatomic) id<CLLocationManagerDelegate> delegate;
@property (readonly, nonatomic) BOOL locationServicesEnabled;
@property (copy, nonatomic) NSString *purpose;
@property (nonatomic) long long activityType;
@property (nonatomic) double distanceFilter;
@property (nonatomic) double desiredAccuracy;
@property (nonatomic) BOOL pausesLocationUpdatesAutomatically;
@property (nonatomic) BOOL allowsBackgroundLocationUpdates;
@property (nonatomic) BOOL showsBackgroundLocationIndicator;
@property (readonly, copy, nonatomic) CLLocation *location;
@property (readonly, nonatomic) BOOL headingAvailable;
@property (nonatomic) double headingFilter;
@property (nonatomic) int headingOrientation;
@property (readonly, copy, nonatomic) CLHeading *heading;
@property (readonly, nonatomic) double maximumRegionMonitoringDistance;
@property (readonly, copy, nonatomic) NSSet *monitoredRegions;
@property (readonly, copy, nonatomic) NSSet *rangedRegions;
@property (readonly, copy, nonatomic) NSSet *rangedBeaconConstraints;

+ (BOOL)locationServicesEnabled;
+ (void)setAuthorizationStatus:(int)a0 withCorrectiveCompensation:(int)a1 forInterestZoneWithId:(id)a2 registeredForBundleIdentifier:(id)a3;
+ (void)registerCircularInterestZoneWithId:(id)a0 latitue:(double)a1 longitude:(double)a2 radius:(double)a3 serviceMaskOperator:(int)a4 provenanceType:(int)a5 forBundle:(id)a6 error:(id *)a7;
+ (void)registerPhenolicInterestZoneWithId:(id)a0 phenolicLocation:(int)a1 serviceMaskOperator:(int)a2 provenanceType:(int)a3 forBundle:(id)a4 error:(id *)a5;
+ (void)registerPhenolicInterestZoneWithId:(id)a0 phenolicLocation:(int)a1 serviceMaskOperator:(int)a2 provenanceType:(int)a3 forBundleIdentifier:(id)a4 error:(id *)a5;
+ (id)metadataForHomekitAccessoryControlEventWithUUID:(id)a0 stateString:(id)a1 serviceUUID:(id)a2 serviceType:(id)a3 characteristicType:(id)a4 serviceGroupUUID:(id)a5 source:(id)a6 roomUUID:(id)a7;
+ (BOOL)bundleSupported:(id)a0;
+ (BOOL)isRangingAvailable;
+ (BOOL)locationServicesEnabled:(BOOL)a0;
+ (int)_authorizationStatusForBundleIdentifier:(id)a0 bundle:(id)a1;
+ (BOOL)authorizationPromptMapDisplayEnabled;
+ (BOOL)significantLocationChangeMonitoringAvailable;
+ (BOOL)isMonitoringAvailableForClass:(Class)a0;
+ (BOOL)regionMonitoringAvailable;
+ (BOOL)regionMonitoringEnabled;
+ (BOOL)mapCorrectionAvailable;
+ (BOOL)_checkAndExerciseAuthorizationForBundleID:(id)a0 error:(id *)a1;
+ (BOOL)isPeerRangingAvailable;
+ (BOOL)_checkAndExerciseAuthorizationForBundle:(id)a0 error:(id *)a1;
+ (BOOL)deferredLocationUpdatesAvailable;
+ (id)metadataForHomekitActionSetEventWithUUID:(id)a0 name:(id)a1 type:(id)a2 clientName:(id)a3 source:(id)a4 homeName:(id)a5;
+ (BOOL)dumpLogsWithMessage:(id)a0;
+ (id)_archivedAuthorizationDecisionsWithError:(id *)a0;
+ (id)_applyArchivedAuthorizationDecisions:(id)a0;
+ (void)setAuthorizationStatus:(BOOL)a0 forBundleIdentifier:(id)a1;
+ (void)setAuthorizationStatus:(BOOL)a0 forBundle:(id)a1;
+ (void)setAuthorizationStatusByType:(int)a0 forBundleIdentifier:(id)a1;
+ (void)setAuthorizationStatusByType:(int)a0 forBundle:(id)a1;
+ (void)setAuthorizationStatusByType:(int)a0 withCorrectiveCompensation:(int)a1 forBundleIdentifier:(id)a2;
+ (void)setAuthorizationStatusByType:(int)a0 withCorrectiveCompensation:(int)a1 forBundle:(id)a2;
+ (void)setIncidentalUseMode:(int)a0 forBundle:(id)a1;
+ (void)setIncidentalUseMode:(int)a0 forBundleIdentifier:(id)a1;
+ (void)getIncidentalUseMode:(int *)a0 forBundle:(id)a1;
+ (void)getIncidentalUseMode:(int *)a0 forBundleIdentifier:(id)a1;
+ (void)deleteInterestZoneWithId:(id)a0 registeredForBundle:(id)a1 error:(id *)a2;
+ (void)setAuthorizationStatus:(int)a0 withCorrectiveCompensation:(int)a1 forInterestZoneWithId:(id)a2 registeredForBundle:(id)a3;
+ (void)setRelevance:(BOOL)a0 forInterestZoneWithId:(id)a1 registeredForBundleIdentifier:(id)a2 error:(id *)a3;
+ (void)setDefaultEffectiveBundle:(id)a0;
+ (void)setRelevance:(BOOL)a0 forInterestZoneWithId:(id)a1 registeredForBundle:(id)a2 error:(id *)a3;
+ (void)setDefaultEffectiveBundleIdentifier:(id)a0;
+ (void)deleteInterestZoneWithId:(id)a0 registeredForBundleIdentifier:(id)a1 error:(id *)a2;
+ (void)dumpDiagnosticFilesWithHandler:(id /* block */)a0;
+ (void)setTemporaryAuthorizationGranted:(BOOL)a0 forBundleIdentifier:(id)a1;
+ (void)setTemporaryAuthorizationGranted:(BOOL)a0 forBundle:(id)a1;
+ (unsigned long long)primaryEntityClassForLocationDictionary:(id)a0;
+ (unsigned long long)entityAuthorizationForLocationDictionary:(id)a0;
+ (void)grantTemporaryAuthorizationUsingLocationButtonToClientWithAuditToken:(struct { unsigned int x0[8]; })a0 voiceInteractionEnabled:(BOOL)a1;
+ (void)setBackgroundIndicatorEnabled:(BOOL)a0 forBundleIdentifier:(id)a1;
+ (void)setBackgroundIndicatorEnabled:(BOOL)a0 forBundle:(id)a1;
+ (BOOL)advertiseAsBeacon:(id)a0 withPower:(id)a1;
+ (id)_getClientTransientAuthorizationInfoForBundleId:(id)a0 error:(id *)a1;
+ (id)_getClientTransientAuthorizationInfoForBundlePath:(id)a0 error:(id *)a1;
+ (id)_setClientTransientAuthorizationInfoForBundleId:(id)a0 data:(id)a1;
+ (id)_setClientTransientAuthorizationInfoForBundlePath:(id)a0 data:(id)a1;
+ (void)registerCircularInterestZoneWithId:(id)a0 latitue:(double)a1 longitude:(double)a2 radius:(double)a3 serviceMaskOperator:(int)a4 provenanceType:(int)a5 forBundleIdentifier:(id)a6 error:(id *)a7;
+ (unsigned long long)activeLocationServiceTypesForLocationDictionary:(id)a0;
+ (BOOL)isEntityAuthorizedForLocationDictionary:(id)a0;
+ (void)setEntityAuthorization:(unsigned long long)a0 withCorrectiveCompensationType:(int)a1 forLocationDictionary:(id)a2;
+ (void)setStatusBarIconEnabled:(BOOL)a0 forLocationEntityClass:(unsigned long long)a1;
+ (BOOL)isStatusBarIconEnabledForLocationEntityClass:(unsigned long long)a0;
+ (unsigned long long)entityClassesForLocationDictionary:(id)a0;
+ (BOOL)isLocationActiveForLocationDictionary:(id)a0;
+ (id)dateLocationLastUsedForLocationDictionary:(id)a0;
+ (BOOL)hasUsedBackgroundLocationServices:(id)a0;
+ (unsigned long long)allowableAuthorizationForLocationDictionary:(id)a0;
+ (BOOL)correctiveCompensationStatusForLocationDictionary:(id)a0;
+ (unsigned long long)incidentalUseModeForLocationDictionary:(id)a0;
+ (id)interestZonesIdentifierListForLocationDictionary:(id)a0;
+ (id)interestZoneDictionaryIdentifiedById:(id)a0 forLocationDictionary:(id)a1;
+ (BOOL)isInterestZoneReleventForLocationDictionary:(id)a0;
+ (void)setEntityAuthorized:(BOOL)a0 forLocationDictionary:(id)a1;
+ (void)setEntityAuthorization:(unsigned long long)a0 forLocationDictionary:(id)a1;
+ (BOOL)backgroundIndicatorEnabledForLocationDictionary:(id)a0;
+ (void)setEntityAuthorization:(unsigned long long)a0 withCorrectiveCompensation:(BOOL)a1 forLocationDictionary:(id)a2;
+ (void)setBackgroundIndicatorEnabled:(BOOL)a0 forLocationDictionary:(id)a1;
+ (id)sharedManager;
+ (int)authorizationStatusForBundle:(id)a0;
+ (BOOL)headingAvailable;
+ (id)setAuthorizationPromptMapDisplayEnabled:(BOOL)a0;
+ (void)updateCorrectiveCompensationChoiceForOutstandingPrompt:(int)a0;
+ (void)setLocationServicesEnabled:(BOOL)a0;
+ (int)authorizationStatusForBundleIdentifier:(id)a0;
+ (int)_authorizationStatus;
+ (BOOL)shutdownDaemon;
+ (int)authorizationStatus;

- (void)stopUpdatingHeading;
- (void)dismissHeadingCalibrationDisplay;
- (void)stopUpdatingVehicleSpeed;
- (void)startUpdatingHeading;
- (void)startUpdatingVehicleHeading;
- (void)requestLocation;
- (void)requestWhenInUseAuthorization;
- (id)initWithEffectiveBundle:(id)a0;
- (void)stopUpdatingVehicleHeading;
- (void)requestWhenInUseAuthorizationWithPrompt;
- (void)stopUpdatingLocation;
- (id)initWithIdentifier:(id)a0;
- (void)startUpdatingVehicleSpeed;
- (void)stopMonitoringForRegion:(id)a0;
- (void)startUpdatingLocation;
- (void)startMonitoringForRegion:(id)a0;
- (id)initWithEffectiveBundleIdentifier:(id)a0;
- (id)getMicroLocationInternalVersion;
- (void)registerAsLocationClient;
- (void)onClientEventLocationUnavailable:(id)a0;
- (void)_startMonitoringSignificantLocationChangesOfDistance:(double)a0 withPowerBudget:(int)a1;
- (void)_fetchPlaceInferencesWithFidelityPolicy:(unsigned long long)a0 handler:(id /* block */)a1;
- (void)_startLeechingVisits;
- (id)_zAxisStatistics;
- (void)onDidBecomeActive:(id)a0;
- (id)appsUsingLocationWithDetails;
- (void)_stopFetchingContinuousPlaceInferences;
- (void)_requestTemporaryFullAccuracyWithUsageDescription:(id)a0;
- (void)startTechStatusUpdates;
- (void)onClientEventPeerRanging:(id)a0;
- (id)_startPlaceInferencesCommonLogic:(unsigned long long)a0 handler:(id /* block */)a1;
- (void)onClientEventAutopauseStatus:(id)a0;
- (void)stopRangingToPeers:(id)a0;
- (void)changeFencesStateMatchingHandoffTags:(id)a0 forDeviceID:(id)a1 completion:(id /* block */)a2;
- (void)onClientEventRanging:(id)a0;
- (void)onClientEventAuthStatus:(id)a0;
- (void)startMonitoringLocationPushesWithCompletion:(id /* block */)a0;
- (void)callPlaceInferenceHandlerWithResult:(id)a0 error:(id)a1;
- (void)requestTemporaryPreciseLocationAuthorizationWithPurposeKey:(id)a0 completion:(id /* block */)a1;
- (void)onClientEventRegionResponseDelayed:(id)a0;
- (void)allowDeferredLocationUpdatesUntilTraveled:(double)a0 timeout:(double)a1;
- (void)requestStateForRegion:(id)a0;
- (void)_updateARSessionState:(unsigned long long)a0;
- (void)onClientEventNoLocationWatchdog:(id)a0;
- (void)_requestTemporaryFullAccuracyWithUsageDescription:(id)a0 completion:(id /* block */)a1;
- (id)appsUsingLocation;
- (void)stopRangingBeaconsInRegion:(id)a0;
- (void)startUpdatingLocationWithPrompt;
- (void)startRangingFromPeers:(id)a0;
- (void)requestMicroLocationRecordingScanWithAdditionalInformation:(id)a0;
- (void)_setFusionInfoEnabled:(BOOL)a0;
- (void)startAppStatusUpdates;
- (void)onClientEventRegionSetupCompleted:(id)a0;
- (id)technologiesInUse;
- (void)onClientEventVehicleSpeed:(id)a0;
- (void)stopRangingBeaconsSatisfyingConstraint:(id)a0;
- (id)initWithEffectiveBundle:(id)a0 delegate:(id)a1 onQueue:(id)a2;
- (void)stopMonitoringSignificantLocationChanges;
- (void)requestCurrentMicroLocationWithAdditionalInformation:(id)a0;
- (id)initWithEffectiveBundle:(id)a0 limitingBundleIdentifier:(id)a1 delegate:(id)a2 onQueue:(id)a3;
- (void)onClientEventRangingError:(id)a0;
- (void)onClientEventBatch:(id)a0;
- (void)stopMonitoringLocationPushes;
- (void)setIsActuallyAWatchKitExtension:(BOOL)a0;
- (void)requestRangingToPeers:(id)a0 timeoutSeconds:(double)a1;
- (void)onClientEventSignificantLocationVisitStateRequest:(id)a0;
- (void)onClientEventPeerRangingError:(id)a0;
- (BOOL)_isFusionInfoEnabled;
- (void)startMonitoringForRegion:(id)a0 desiredAccuracy:(double)a1;
- (void)stopTechStatusUpdates;
- (void)requestTemporaryFullAccuracyAuthorizationWithPurposeKey:(id)a0 completion:(id /* block */)a1;
- (void)_fetchEstimatedLocationAtDate:(id)a0 handler:(id /* block */)a1;
- (void)disallowDeferredLocationUpdates;
- (id)init;
- (void)_updateVIOEstimation:(id)a0;
- (void)stopAppStatusUpdates;
- (void)onClientEvent:(int)a0 supportInfo:(id)a1;
- (id)_groundAltitudeAtLocation:(id)a0;
- (void)markAsHavingReceivedLocation;
- (void)pauseLocationUpdates:(BOOL)a0;
- (void)onClientEventHeadingCalibration:(id)a0;
- (void)startMonitoringSignificantLocationChanges;
- (void)onClientEventPeerRangingRequestProcessed:(id)a0;
- (void)onClientEventPlaceInferenceResult:(id)a0;
- (void)onClientEventRegion:(id)a0;
- (void)startRangingToPeers:(id)a0 intervalSeconds:(unsigned long long)a1;
- (void)resumeLocationUpdates;
- (void)onClientEventPlaceInferenceError:(id)a0;
- (void)onClientEventInterrupted:(id)a0;
- (void)requestTemporaryFullAccuracyAuthorizationWithPurposeKey:(id)a0;
- (void)stopRangingFromPeers:(id)a0;
- (void)onClientEventRegionState:(id)a0;
- (void)startRangingBeaconsSatisfyingConstraint:(id)a0;
- (void)onClientEventSignificantLocationVisit:(id)a0;
- (id)_initWithDelegate:(id)a0 onQueue:(id)a1;
- (void)onClientEventError:(id)a0;
- (void)onClientEventLocation:(id)a0 forceMapMatching:(BOOL)a1 type:(id)a2;
- (void)dealloc;
- (id)initWithEffectiveBundleIdentifier:(id)a0 delegate:(id)a1 onQueue:(id)a2;
- (id)initWithEffectiveBundleIdentifier:(id)a0 bundle:(id)a1 delegate:(id)a2 silo:(id)a3;
- (void)_fetchContinuousPlaceInferencesWithFidelityPolicy:(unsigned long long)a0 handler:(id /* block */)a1;
- (void)resetApps;
- (void)requestAlwaysAuthorization;
- (void)stopMonitoringVisits;
- (void)onLocationRequestTimeout;
- (void)onClientEventRegionError:(id)a0;
- (void)startRangingBeaconsInRegion:(id)a0;
- (void)respondToRangingFromPeers:(id)a0 timeoutSeconds:(double)a1;
- (void)onRangingRequestTimeout;
- (void)_updateVLLocalizationResult:(id)a0;
- (void)onClientEventHeading:(id)a0;
- (void)_requestVisitState;
- (void)requestTemporaryPreciseLocationAuthorizationWithPurposeKey:(id)a0;
- (void)onClientEventVehicleHeading:(id)a0;
- (void)startMonitoringVisits;

@end
