@class _MTLCommandQueue, NSString, NSDictionary, NSMutableDictionary, NSError, NSMutableArray;
@protocol MTLCommandQueue, MTLCommandEncoder, MTLBuffer;

@interface _MTLCommandBuffer : _MTLObjectWithLabel {
    id<MTLCommandEncoder> _currentCommandEncoder;
    struct MTLDispatch { struct MTLDispatch *x0; id /* block */ x1; } *_scheduledDispatchList;
    struct MTLDispatch { struct MTLDispatch *x0; id /* block */ x1; } *_scheduledDispatchListTail;
    struct MTLDispatch { struct MTLDispatch *x0; id /* block */ x1; } *_completedDispatchList;
    struct MTLDispatch { struct MTLDispatch *x0; id /* block */ x1; } *_completedDispatchListTail;
    struct MTLSyncDispatch { struct MTLSyncDispatch *x0; id /* block */ x1; } *_syncDispatchList;
    struct MTLSyncDispatch { struct MTLSyncDispatch *x0; id /* block */ x1; } *_syncDispatchListTail;
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _mutex;
    struct _opaque_pthread_cond_t { long long __sig; char __opaque[40]; } _cond;
    unsigned long long _creationTime;
    unsigned long long _enqueueTime;
    unsigned long long _commitTime;
    unsigned long long _submitToKernelTime;
    unsigned long long _submitToHardwareTime;
    unsigned long long _completionInterruptTime;
    unsigned long long _completionHandlerEnqueueTime;
    unsigned long long _completionHandlerExecutionTime;
    NSError *_error;
    BOOL _skipRender;
    BOOL _profilingEnabled;
    BOOL _scheduledCallbacksDone;
    BOOL _completedCallbacksDone;
    BOOL _strongObjectReferences;
    NSDictionary *_profilingResults;
    NSMutableDictionary *_userDictionary;
    unsigned long long _kernelStartTime;
    unsigned long long _kernelEndTime;
    unsigned long long _gpuStartTime;
    unsigned long long _gpuEndTime;
    BOOL _wakeOnCommit;
    NSMutableArray *_retainedObjects;
    BOOL _needsCommandBufferSemaphoreSignal;
    unsigned long long _labelTraceID;
    id /* block */ _perfSampleHandlerBlock;
    BOOL _hasPresent;
    id<MTLBuffer> _progressBuffer;
    unsigned int _progressOffset;
    BOOL _creatingProgressEncoder;
    BOOL _needsFrameworkAssistedErrorTracking;
    NSMutableArray *_encoderInfos;
}

@property (readonly) BOOL retainedReferences;
@property (readonly) BOOL synchronousDebugMode;
@property (readonly) _MTLCommandQueue<MTLCommandQueue> *commandQueue;
@property (readonly) unsigned long long status;
@property (copy) NSString *label;
@property (readonly) NSError *error;
@property (getter=isProfilingEnabled) BOOL profilingEnabled;
@property (readonly) NSDictionary *profilingResults;
@property (readonly) unsigned long long globalTraceObjectID;
@property (readonly) NSMutableArray *logs;
@property (readonly, nonatomic) double kernelStartTime;
@property (readonly, nonatomic) double kernelEndTime;
@property (readonly, nonatomic) double GPUStartTime;
@property (readonly, nonatomic) double GPUEndTime;
@property (readonly, nonatomic) NSMutableDictionary *userDictionary;
@property (nonatomic, getter=isStatEnabled) BOOL StatEnabled;
@property (nonatomic) unsigned long long numThisCommandBuffer;
@property (nonatomic) unsigned long long numEncoders;
@property (readonly, nonatomic, getter=getListIndex) unsigned long long listIndex;
@property (nonatomic) BOOL ownedByParallelEncoder;
@property (nonatomic) unsigned long long errorOptions;

+ (void)initialize;

- (void)waitUntilScheduled;
- (id)resourceStateCommandEncoderWithDescriptor:(id)a0;
- (void)processEncoderInfos;
- (void)addScheduledHandler:(id /* block */)a0;
- (void)runPerfCounterCallbackWithBlock:(id /* block */)a0;
- (id)computeCommandEncoderWithDescriptor:(id)a0;
- (void)commitAndReset;
- (void)presentDrawable:(id)a0 atTime:(double)a1;
- (id)progressTrackingBlitCommandEncoder;
- (void)didScheduleWithStartTime:(unsigned long long)a0 endTime:(unsigned long long)a1 error:(id)a2;
- (id)computeCommandEncoderWithDispatchType:(unsigned long long)a0;
- (void *)debugBufferContentsWithLength:(unsigned long long *)a0;
- (id)accelerationStructureCommandEncoder;
- (void)initProgressTracking;
- (id)progressTrackingRenderCommandEncoder;
- (void)pushDebugGroup:(id)a0;
- (BOOL)skipRender;
- (void)setCurrentCommandEncoder:(id)a0;
- (void)addSynchronizationNotification:(id /* block */)a0;
- (void)enqueue;
- (void)didSchedule:(unsigned long long)a0 error:(id)a1;
- (BOOL)commitAndWaitUntilSubmitted;
- (void)presentDrawable:(id)a0 afterMinimumDuration:(double)a1;
- (void)popDebugGroup;
- (unsigned long long)getAndIncrementNumEncoders;
- (BOOL)isCommitted;
- (void)setCommitted:(BOOL)a0;
- (void)addCompletedHandler:(id /* block */)a0;
- (void)presentDrawable:(id)a0;
- (void)encodeDashboardFinalizeForResourceGroup:(id)a0 dashboard:(unsigned long long)a1 values:(const unsigned long long *)a2 indices:(const unsigned long long *)a3 count:(unsigned long long)a4;
- (void)commitAndHold;
- (id)initWithQueue:(id)a0 retainedReferences:(BOOL)a1 synchronousDebugMode:(BOOL)a2;
- (id)blitCommandEncoderWithDescriptor:(id)a0;
- (void)signalCommandBufferAvailable;
- (id)progressTrackingComputeCommandEncoder;
- (void)executeSynchronizationNotifications:(int)a0;
- (void)encodeDashboardFinalizeForResourceGroup:(id)a0 dashboard:(unsigned long long)a1 value:(unsigned long long)a2 forIndex:(unsigned long long)a3;
- (void)executeSynchronizationNotifications:(int)a0 scope:(unsigned long long)a1 resources:(const id *)a2 count:(unsigned long long)a3;
- (void)encodeDashboardTagForResourceGroup:(id)a0;
- (void)kernelSubmitTime;
- (void)_addRetainedObject:(id)a0;
- (void)getDriverEncoderInfoData:(id)a0;
- (void)didCompleteWithStartTime:(unsigned long long)a0 endTime:(unsigned long long)a1 error:(id)a2;
- (void)waitUntilCompleted;
- (void)commit;
- (id)description;
- (id)formattedDescription:(unsigned long long)a0;
- (id)initWithQueue:(id)a0 retainedReferences:(BOOL)a1;
- (void)dealloc;

@end
