@class NSUUID, NSString, NEFilterControlExtensionProviderHostContext, NSXPCListenerEndpoint, NSExtension, NEFilterProviderConfiguration, NEFilterExtensionProviderHostContext, NSArray, NSObject, NSXPCInterface;
@protocol OS_dispatch_queue, NEPluginManagerObjectFactory, OS_dispatch_source;

@interface NEAgentFilterExtension : NSObject <NEFilterExtensionProviderHostDelegate, NEAgentSessionDelegate, NEFilterPluginDriver>

@property (readonly, weak) id<NEPluginManagerObjectFactory> managerObjectFactory;
@property (readonly, nonatomic) NSString *pluginType;
@property (retain) NSExtension *dataExtension;
@property (retain) NSExtension *controlExtension;
@property (retain) NEFilterExtensionProviderHostContext *dataSessionContext;
@property (retain) NEFilterControlExtensionProviderHostContext *controlSessionContext;
@property (retain) NSUUID *dataSessionRequestIdentifier;
@property (retain) NSUUID *controlSessionRequestIdentifier;
@property (retain) NSObject<OS_dispatch_queue> *queue;
@property (retain) NSString *dataExtensionIdentifier;
@property (retain) NSString *controlExtensionIdentifier;
@property BOOL dataExtensionInitialized;
@property BOOL controlExtensionInitialized;
@property (retain) NSXPCListenerEndpoint *clientListenerEndpoint;
@property (retain) NEFilterProviderConfiguration *configuration;
@property (readonly, nonatomic) NSArray *extensionUUIDs;
@property BOOL appsUpdateStarted;
@property BOOL appsUpdateEnding;
@property (retain) NSObject<OS_dispatch_source> *sendFailedTimer;
@property struct cfil_crypto_state { struct ccdigest_info *x0; unsigned char x1[32]; } *crypto_state;
@property int crypto_kernel_salt;
@property (copy) id /* block */ pendingDisposeCompletion;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSArray *uuids;
@property (readonly, nonatomic) NSXPCInterface *driverInterface;
@property (readonly, nonatomic) NSXPCInterface *managerInterface;

+ (BOOL)authenticateFlowWithState:(struct cfil_crypto_state { struct ccdigest_info *x0; unsigned char x1[32]; } *)a0 crypto_key:(id)a1 flow:(id)a2 salt:(unsigned int)a3 isKernelSocket:(BOOL)a4;

- (void)updateConfiguration:(id)a0;
- (void)wakeup;
- (void)handleCancel;
- (void)handleAppsUninstalled:(id)a0;
- (void)handleAppsUpdateBegins:(id)a0;
- (void)handleAppsUpdateEnding:(id)a0;
- (void)handleAppsUpdateEnds:(id)a0;
- (void)sendExtensionFailed;
- (void)report:(id)a0;
- (void)startWithConfiguration:(id)a0 completionHandler:(id /* block */)a1;
- (void).cxx_destruct;
- (void)extension:(id)a0 didFailWithError:(id)a1;
- (void)extensionDidStop:(id)a0;
- (void)extension:(id)a0 didStartWithError:(id)a1;
- (void)sleepWithCompletionHandler:(id /* block */)a0;
- (void)handleExtensionExit:(id)a0;
- (id)copyProcessIdentities;
- (id)initWithPluginType:(id)a0 pluginClass:(long long)a1 pluginInfo:(id)a2 queue:(id)a3 factory:(id)a4;
- (void)handleInitWithCompletionHandler:(id /* block */)a0;
- (id)initWithPluginType:(id)a0 pluginClass:(long long)a1 pluginEndpoint:(id)a2 pluginProcessIdentity:(id)a3 queue:(id)a4 factory:(id)a5;
- (void)dealloc;
- (void)handleControlExtensionInitWithCompletionHandler:(id /* block */)a0;
- (void)handleDataExtensionInitWithCompletionHandler:(id /* block */)a0;
- (void)stopFilterExtensionWithReason:(int)a0;
- (void)sendFilterStatus:(long long)a0 withError:(long long)a1;
- (void)startFilter;
- (void)getFilterClientConnectionWithCompletionHandler:(int)a0 completionHandler:(id /* block */)a1;
- (void)handleDisposeWithCompletionHandler:(id /* block */)a0;
- (void)cleanupDataExtensionWithRequestIdentifier:(id)a0;
- (void)cleanupControlExtensionWithRequestIdentifier:(id)a0;
- (void)resetFilterSettings;
- (void)cleanupOnStartFailure;
- (void)notifyRulesChanged;
- (void)provideRemediationMap:(id)a0;
- (void)startControlExtensionWithConfiguration:(id)a0 completionHandler:(id /* block */)a1;
- (void)startDataExtensionWithConfiguration:(id)a0 completionHandler:(id /* block */)a1;
- (void)startFilterExtension;
- (void)savedConfigurationChanged:(id)a0;
- (void)handleStopCompleteWithError:(id)a0;
- (id)generateClientKey:(int)a0 salt:(unsigned int)a1;
- (void)provideURLAppendStringMap:(id)a0;
- (BOOL)sendCryptoKeyWithControlSocket:(int)a0 crypto_key:(id)a1;
- (id)sanitizeFilterFlow:(id)a0;
- (id)sanitizeReport:(id)a0;
- (long long)sanitizeFilterAction:(long long)a0;
- (long long)sanitizeFilterReportEvent:(long long)a0;
- (BOOL)authenticateFlow:(id)a0;
- (void)createPacketChannelForExtension:(id)a0 completionHandler:(id /* block */)a1;
- (void)sendBrowserContentFilterServerRequest;
- (void)sendSocketContentFilterRequest;
- (void)fetchCurrentRulesForFlow:(id)a0 completionHandler:(id /* block */)a1;
- (void)applySettings:(id)a0 completionHandler:(id /* block */)a1;

@end
