@class UIBarButtonItem, UIImageView, UTType, AKToolbarView, UIViewController, UIView, PDFDocument, NSString, NSUndoManager, NSLayoutConstraint, UIColor, UIScrollView, UINavigationItem, AKController, NSData, PDFView, UINavigationBar, UIImage;
@protocol MUContentViewControllerProtocol, MarkupViewControllerDelegate;

@interface MarkupViewController : UIViewController <MUContentViewControllerDelegate, UINavigationBarDelegate, UIToolbarDelegate, PKRulerHostingDelegate> {
    UIColor *_backgroundColor;
    UIColor *_toolbarItemTintColor;
    UIColor *_toolbarTintColor;
    UIColor *_navBarTitleColor;
    BOOL _showingSignaturesUI;
}

@property (retain) UIViewController<MUContentViewControllerProtocol> *contentViewController;
@property BOOL needToPerformFullTeardown;
@property BOOL needToPerformDocumentClosedTeardown;
@property (getter=isObservingAKCurrentPageIndex) BOOL observingAKCurrentPageIndex;
@property (retain) NSString *sourceContentType;
@property (retain, nonatomic) id sourceContent;
@property (retain) id digestedSourceContent;
@property (retain) NSData *archivedModelData;
@property double initialContentScale;
@property (retain, nonatomic) UIView *toolbar;
@property (retain) AKToolbarView *modernToolbar;
@property (retain) NSLayoutConstraint *toolbarTopConstraint;
@property (retain) NSLayoutConstraint *toolbarTopAttachedConstraint;
@property (retain) NSLayoutConstraint *toolbarBottomConstraint;
@property (retain, nonatomic) UINavigationItem *navItem;
@property (retain) UIBarButtonItem *cancelButton;
@property (retain) UIBarButtonItem *doneButton;
@property (retain) UIImage *placeholderImage;
@property (nonatomic) BOOL alreadyLoggedSavingForThisDocument;
@property (nonatomic) BOOL needsToolPickerVisibleWhenAnnotationControllerIsAvailable;
@property (copy, nonatomic) NSString *preferredFileDisplayName;
@property (retain) UIView *contentContainerView;
@property (retain) UIView *transitionDimmingView;
@property (retain) UIView *whiteView;
@property BOOL useFancyTransition;
@property BOOL isAnimatingMarkupExtensionTransition;
@property BOOL userDidCancel;
@property BOOL showAsFormSheet;
@property (copy, nonatomic) NSString *originalImageDescription;
@property (copy) UIColor *backgroundColor;
@property (copy) UIColor *toolbarItemTintColor;
@property (copy) UIColor *toolbarTintColor;
@property (copy) UIColor *navBarTitleColor;
@property (readonly) BOOL isUsedOnDarkBackground;
@property BOOL encryptPrivateMetadata;
@property (copy, nonatomic) NSString *hostProcessBundleIdentifier;
@property (readonly) PDFDocument *pdfDocument;
@property (readonly) PDFView *pdfView;
@property (readonly, weak) UIView *pageLabelView;
@property (nonatomic) long long thumbnailViewStyle;
@property (nonatomic) BOOL allowsThumbnailViewPageReordering;
@property (nonatomic) BOOL fixedThumbnailView;
@property (nonatomic) unsigned long long currentPDFPageIndex;
@property (nonatomic) BOOL forcesPDFViewTopAlignment;
@property (nonatomic, getter=isShapeDetectionEnabled) BOOL shapeDetectionEnabled;
@property (retain, nonatomic) NSUndoManager *akUndoManager;
@property (nonatomic) BOOL allowShakeToUndo;
@property (weak, nonatomic) id<MarkupViewControllerDelegate> delegate;
@property (nonatomic) BOOL centersIgnoringContentInsets;
@property (nonatomic) BOOL showShareButtonInToolbar;
@property (readonly, nonatomic) UIScrollView *contentViewScrollView;
@property (readonly, nonatomic) UIView *imageViewCombinedContentView;
@property (retain) UIImageView *placeholderImageView;
@property unsigned long long inkStyle;
@property (readonly) struct CGSize { double x0; double x1; } adjustedSourceImageSize;
@property (readonly, nonatomic) AKController *annotationController;
@property (nonatomic, getter=isToolbarHidden) BOOL toolbarHidden;
@property (nonatomic) long long toolbarPosition;
@property (retain, nonatomic) UINavigationBar *navBar;
@property (nonatomic, getter=isThumbnailViewHidden) BOOL thumbnailViewHidden;
@property (nonatomic) BOOL showThumbnailViewForMultipage;
@property (nonatomic) BOOL allEditingDisabled;
@property (nonatomic) BOOL annotationEditingEnabled;
@property (nonatomic) BOOL pencilAlwaysDraws;
@property (nonatomic, getter=isNavigationModeHorizontal) BOOL navigationModeHorizontal;
@property (readonly, nonatomic) UTType *outputContentType;
@property (readonly, nonatomic) NSString *outputType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)hasPrivateImageMetadata:(id)a0;
+ (id)cleanImageMetadataFromData:(id)a0;
+ (BOOL)_isInLowMemoryEnvironment;
+ (id)markupBarButtonItemWithTarget:(id)a0 action:(SEL)a1;
+ (double)_maxImageDimensionInView;
+ (id)supportedOutputTypes;

- (void)_showTextStyleOptions:(id)a0;
- (void)setFileURL:(id)a0;
- (long long)preferredStatusBarStyle;
- (void)revert;
- (void)cancel:(id)a0;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)a0;
- (void)setData:(id)a0;
- (void)viewDidLayoutSubviews;
- (void)viewWillLayoutSubviews;
- (long long)positionForBar:(id)a0;
- (id)dataRepresentationWithError:(id *)a0;
- (BOOL)_canShowWhileLocked;
- (BOOL)canPerformAction:(SEL)a0 withSender:(id)a1;
- (BOOL)writeToURL:(id)a0 options:(id)a1 error:(id *)a2;
- (void)motionEnded:(long long)a0 withEvent:(id)a1;
- (id)undoManager;
- (void).cxx_destruct;
- (void)_cancel;
- (void)traitCollectionDidChange:(id)a0;
- (BOOL)canBecomeFirstResponder;
- (BOOL)writeToURL:(id)a0 error:(id *)a1;
- (id)initWithCoder:(id)a0;
- (void)done:(id)a0;
- (void)setToolbarHidden:(BOOL)a0 animated:(BOOL)a1;
- (void)delete:(id)a0;
- (void)_commonInit;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)viewDidAppear:(BOOL)a0;
- (void)dealloc;
- (void)setImage:(id)a0;
- (id)initWithNibName:(id)a0 bundle:(id)a1;
- (id)_effectiveBackgroundColor;
- (BOOL)writeToURL:(id)a0 embeddingSourceImageAndEditModel:(BOOL)a1 error:(id *)a2;
- (id)createArchivedModelData;
- (void)setFileURL:(id)a0 withArchivedModelData:(id)a1 placeholderImage:(id)a2;
- (void)setData:(id)a0 withArchivedModelData:(id)a1;
- (id)dataRepresentationEmbeddingSourceImageAndEditModel:(BOOL)a0 error:(id *)a1;
- (void)setFileURL:(id)a0 withArchivedModelData:(id)a1;
- (void)duplicate:(id)a0;
- (id)rulerHostingView;
- (BOOL)rulerHostWantsSharedRuler;
- (id)popoverPresentingViewControllerForAnnotationController:(id)a0;
- (void)editCheckpointReachedForAnnotationController:(id)a0;
- (void)annotationController:(id)a0 detectedEditOfType:(unsigned long long)a1;
- (void)editDetectedForAnnotationController:(id)a0;
- (void)penStrokeCompletedForAnnotationController:(id)a0;
- (void)controllerWillShowSignatureCaptureView:(id)a0;
- (void)controllerWillDismissSignatureCaptureView:(id)a0;
- (void)controllerWillShowSignatureManagerView:(id)a0;
- (void)controllerWillDismissSignatureManagerView:(id)a0;
- (void)editTextAnnotation:(id)a0;
- (void)setData:(id)a0 withArchivedModelData:(id)a1 placeholderImage:(id)a2;
- (BOOL)_useLegacyToolbar;
- (void)fullTeardown;
- (void)documentDidCloseTeardown;
- (void)_stopObservingAnnotationController;
- (void)_toolbarShareButtonTapped:(id)a0;
- (void)_updateundoBarButtonWithController:(id)a0;
- (void)adjustContentInsetsForBars;
- (void)_updateAppearanceForTraitCollection:(id)a0;
- (void)_setLegacyToolbarHidden:(BOOL)a0 animated:(BOOL)a1;
- (void)_updateConstraintsForBarPosition:(long long)a0;
- (void)_setThumbnailViewHidden:(BOOL)a0;
- (BOOL)isTouchInThumbnailView:(id)a0;
- (void)_presentPlaceholderImage;
- (void)_cleanupPlaceholderImage;
- (void)_setFileURL:(id)a0 withArchivedModelData:(id)a1 withCompletion:(id /* block */)a2;
- (void)_updateAndLoadSourceContent:(id)a0 withArchivedModelData:(id)a1 withCompletion:(id /* block */)a2;
- (void)setImage:(id)a0 withArchivedModelData:(id)a1 placeholderImage:(id)a2;
- (void)_setData:(id)a0 withArchivedModelData:(id)a1 withCompletion:(id /* block */)a2;
- (BOOL)writeToURL:(id)a0 embeddingSourceImageAndEditModel:(BOOL)a1 options:(id)a2 error:(id *)a3;
- (BOOL)_writeToDataConsumer:(struct CGDataConsumer { } *)a0 embedSourceImageAndEditModel:(BOOL)a1 options:(id)a2 error:(id *)a3;
- (BOOL)_writeToDataConsumer:(struct CGDataConsumer { } *)a0 embedSourceImageAndEditModel:(BOOL)a1 error:(id *)a2;
- (void)finalizeCrop;
- (void)_saveEditing:(id)a0;
- (void)willBeginLoadingNewDocument;
- (void)setSourceContent:(id)a0 withArchivedModelData:(id)a1;
- (void)_setupInitialBaseModelScaleFactorWithScreenSize:(struct CGSize { double x0; double x1; })a0 windowDecorationSize:(struct CGSize { double x0; double x1; })a1;
- (void)restoreToolModeForContentType;
- (void)_loadSourceContentWithCompletion:(id /* block */)a0;
- (void)_bailFailedAnimateEnterMarkup;
- (void)_installContentViewControllerForUTI:(id)a0;
- (void)_setupAnnotationController;
- (void)_startObservingAnnotationController;
- (BOOL)_sourceImageMayContainBaseImageAndModel;
- (BOOL)_shouldShowUndoRedoButtonsInNavigationBar;
- (id)_effectiveToolbarTintColor;
- (id)_effectiveToolbarItemTintColor;
- (void)_updateNavBarProperties;
- (id)_effectiveNavBarTitleColor;
- (id)_markupBlackColor;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })sketchOverlayInsets;
- (id)filteredToolbarItemsForItems:(id)a0 fromController:(id)a1;
- (id)undoManagerForContentViewController:(id)a0;
- (double)modelBaseScaleFactorOfPageAtIndex:(unsigned long long)a0 forContentViewController:(id)a1;
- (void)positionSketchOverlay:(id)a0 forContentViewController:(id)a1;
- (id)annotationControllerOfContentViewController:(id)a0 willSetToolbarItems:(id)a1;
- (BOOL)contentViewController:(id)a0 shouldHandleURL:(id)a1;
- (id)getMenuElementsForPage:(id)a0;
- (void)setImage:(id)a0 withArchivedModelData:(id)a1;
- (void)_createCancelDoneNavBar;
- (long long)toolbarController:(id)a0 positionForBar:(id)a1;

@end
