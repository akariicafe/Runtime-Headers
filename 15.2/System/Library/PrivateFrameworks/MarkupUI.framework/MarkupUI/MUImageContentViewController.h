@class UIView, NSString, UIImage, UITapGestureRecognizer, NSArray, UIImageView, AKPageController, AKRectAnnotation, UIScrollView;
@protocol UIScrollViewDelegate;

@interface MUImageContentViewController : MUContentViewController <AKControllerDelegateProtocol, UIScrollViewDelegate, MUContentViewControllerProtocol> {
    struct CGPoint { double x; double y; } _pointToCenterAfterRotation;
    BOOL _wasZoomToFit;
}

@property (retain) id sourceContent;
@property (retain, nonatomic) UIScrollView *scrollView;
@property (retain, nonatomic) UIView *combinedContentView;
@property (retain, nonatomic) UIImageView *imageView;
@property struct CGSize { double width; double height; } sourceImagePixelSize;
@property double downsampledImageScale;
@property (nonatomic) BOOL usePlaceholderAsDisplayImageIfPossible;
@property (nonatomic) BOOL inDoubleTapZoom;
@property (copy) id /* block */ loadCompletionBlock;
@property (retain) UITapGestureRecognizer *localDoubleTapRecognizer;
@property BOOL didSetup;
@property (weak, nonatomic) AKRectAnnotation *editingAnnotaiton;
@property (weak, nonatomic) AKPageController *pageController;
@property (nonatomic) BOOL firstLoadZoomToFit;
@property (nonatomic) BOOL zoomToFitRestoreValue;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } edgeInsets;
@property (nonatomic) BOOL centersIgnoringContentInsets;
@property (retain, nonatomic) UIImage *tentativePlaceholderImage;
@property double maxImageDimension;
@property (nonatomic) unsigned long long inkStyle;
@property (weak) id<UIScrollViewDelegate> scrollViewDelegate;
@property (readonly, nonatomic) BOOL supportsImageDescriptionEditing;
@property (readonly, copy, nonatomic) NSString *originalImageDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) long long defaultToolTag;
@property (readonly, nonatomic) UIScrollView *contentViewScrollView;
@property (retain) NSArray *sourceContentReplacedAnnotationMaps;
@property (nonatomic) BOOL showsThumbnailView;
@property (readonly) unsigned long long pageCount;
@property (nonatomic) BOOL navigationModeHorizontal;

- (void)teardown;
- (void)didReceiveMemoryWarning;
- (id)viewForZoomingInScrollView:(id)a0;
- (void)_keyboardWillHide:(id)a0;
- (void)scrollViewWillBeginDragging:(id)a0;
- (struct CGSize { double x0; double x1; })contentSize;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)_doubleTap:(id)a0;
- (void)scrollViewWillBeginZooming:(id)a0 withView:(id)a1;
- (void)scrollViewDidZoom:(id)a0;
- (BOOL)_canShowWhileLocked;
- (void)setup;
- (void)_keyboardWillShow:(id)a0;
- (BOOL)scrollViewShouldScrollToTop:(id)a0;
- (void).cxx_destruct;
- (void)scrollViewDidScroll:(id)a0;
- (void)viewDidAppear:(BOOL)a0;
- (void)dealloc;
- (struct CGPoint { double x0; double x1; })_maximumContentOffset;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visibleContentRect;
- (struct CGPoint { double x0; double x1; })_minimumContentOffset;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (id)controller:(id)a0 willSetToolbarItems:(id)a1;
- (id)undoManagerForAnnotationController:(id)a0;
- (id)popoverPresentingViewControllerForAnnotationController:(id)a0;
- (double)modelBaseScaleFactorOfPageAtIndex:(unsigned long long)a0 forAnnotationController:(id)a1;
- (void)editCheckpointReachedForAnnotationController:(id)a0;
- (void)editDetectedForAnnotationController:(id)a0;
- (void)penStrokeCompletedForAnnotationController:(id)a0;
- (void)controllerWillShowSignatureCaptureView:(id)a0;
- (void)controllerWillDismissSignatureCaptureView:(id)a0;
- (void)controllerWillShowSignatureManagerView:(id)a0;
- (void)controllerWillDismissSignatureManagerView:(id)a0;
- (void)controllerDidEnterToolMode:(id)a0;
- (void)controllerDidExitToolMode:(id)a0;
- (void)positionSketchOverlay:(id)a0 forAnnotationController:(id)a1;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })a0 fromOverlayToModelWithPageIndex:(unsigned long long)a1 forAnnotationController:(id)a2;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })a0 fromModelToOverlayWithPageIndex:(unsigned long long)a1 forAnnotationController:(id)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })maxPageRectWithPageIndex:(unsigned long long)a0 forAnnotationController:(id)a1;
- (id)newContentSnapshotPDFDataIncludingAdornments:(BOOL)a0 atScale:(double)a1 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 onOverlayAtPageIndex:(unsigned long long)a3 forAnnotationController:(id)a4;
- (void)installDrawingGestureRecognizer:(id)a0 forPageAtIndex:(unsigned long long)a1 forAnnotationController:(id)a2;
- (void)uninstallDrawingGestureRecognizer:(id)a0 forPageAtIndex:(unsigned long long)a1 forAnnotationController:(id)a2;
- (void)updateDrawingGestureRecognizer:(id)a0 forPageAtIndex:(unsigned long long)a1 withPriority:(BOOL)a2 forAnnotationController:(id)a3;
- (BOOL)controllerShouldDetectFormElements:(id)a0;
- (BOOL)shouldPlaceFormElementAtPoint:(struct CGPoint { double x0; double x1; })a0 onOverlayAtPageIndex:(unsigned long long)a1 forAnnotationController:(id)a2;
- (BOOL)shouldPlaceProposedFormElementAtRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 onOverlayAtPageIndex:(unsigned long long)a1 forAnnotationController:(id)a2;
- (id)layerContainingQuickBackgroundForLoupeOnOverlayAtPageIndex:(unsigned long long)a0 forAnnotationController:(id)a1;
- (id)contentSnapshot;
- (void)uninstallAllAnnotationControllerOverlays;
- (void)loadContentWithCompletionBlock:(id /* block */)a0;
- (struct CGSize { double x0; double x1; })idealContentSizeForScreenSize:(struct CGSize { double x0; double x1; })a0 windowDecorationSize:(struct CGSize { double x0; double x1; })a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visibleContentRectInCoordinateSpace:(id)a0;
- (id)initWithSourceContent:(id)a0 archivedDataModel:(id)a1 delegate:(id)a2;
- (id)initWithNibName:(id)a0 bundle:(id)a1 delegate:(id)a2;
- (void)_annotationWillBeginEditing:(id)a0;
- (void)_annotationDidEndEditing:(id)a0;
- (void)_setImage:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)_updateMinMaxZoomFactor;
- (void)_uninstallOverlayOfController:(id)a0 forPageAtIndex:(unsigned long long)a1;
- (void)_installOverlayOfController:(id)a0 forPageAtIndex:(unsigned long long)a1;
- (void)_downsampleImageForDisplay:(struct CGImage { } *)a0 fromImageSource:(struct CGImageSource { } *)a1 withCompletionHandler:(id /* block */)a2;
- (BOOL)_imageIsSmallerThanView;
- (double)_zoomToFitZoomFactor;
- (BOOL)_placeholderCanBeUsedForBaseImageOfSize:(struct CGSize { double x0; double x1; })a0;
- (void)_setupScrollViewForImageOfScaledSize:(struct CGSize { double x0; double x1; })a0;
- (double)_zoomToFitZoomFactorIncludingScrollViewEdgeInsets;
- (double)_zoomToFitZoomFactorInBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_zoomRectForScale:(double)a0 withCenter:(struct CGPoint { double x0; double x1; })a1;
- (BOOL)_imageIsSize:(struct CGSize { double x0; double x1; })a0 isSmallerThanSize:(struct CGSize { double x0; double x1; })a1;
- (void)_prepareToRotate;
- (void)_recoverFromRotation;
- (void)_adjustScrollViewForKeyboardNotification:(id)a0;
- (unsigned long long)_pageIndexForAnnotation:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_annotationRectInOverlay:(id)a0 pageIndex:(unsigned long long)a1;
- (void)adjustScrollViewToAccomodateKeyboardStartingFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 endingFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 annotationFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 inOverlayView:(id)a3 withAnimationDuration:(double)a4 curve:(long long)a5;

@end
