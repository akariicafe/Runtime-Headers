@class NSUUID, NSMutableDictionary, NSURL, NSString;

@interface MADegasPersistentStore : NSObject <MAPersistentStoreProtocol> {
    void *_database;
    unsigned long long _batchCounter;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
    unsigned long long _transactionCounter;
}

@property (retain, nonatomic) NSMutableDictionary *degasLabelByLabelName;
@property (retain, nonatomic) NSMutableDictionary *labelNameByDegasLabel;
@property (retain, nonatomic) NSMutableDictionary *degasLabelByDomain;
@property (retain, nonatomic) NSMutableDictionary *domainByDegasLabel;
@property (retain, nonatomic) NSMutableDictionary *attrIdByPropertyName;
@property (retain, nonatomic) NSMutableDictionary *propertyNameByAttrId;
@property (readonly, nonatomic) NSUUID *graphIdentifier;
@property (nonatomic) unsigned long long graphVersion;
@property (readonly, nonatomic) NSURL *fileURL;
@property (readonly, nonatomic) BOOL doesCascadeEdgeDelete;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;
+ (id)persistentStoreFileExtension;
+ (BOOL)copyFromURL:(id)a0 toURL:(id)a1 error:(id *)a2;
+ (BOOL)destroyAtURL:(id)a0 error:(id *)a1;
+ (BOOL)migrateFromURL:(id)a0 toURL:(id)a1 error:(id *)a2;
+ (id)errorForKGDBReturnCode:(int)a0 description:(id)a1;
+ (BOOL)deleteClosedSqliteFilesAtURL:(id)a0 error:(id *)a1;
+ (void)performBitmapTest;

- (void *)database;
- (struct NodeCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; })nodeCursorWithIdentifiers:(id)a0;
- (void)enumerateEdgesWithIdentifiers:(id)a0 block:(id /* block */)a1;
- (void)enumerateNodesWithIdentifiers:(id)a0 block:(id /* block */)a1;
- (void)_enumerateEdgeTableWithEdgeCursor:(void *)a0 block:(id /* block */)a1;
- (id)propertyValueForCursor:(void *)a0;
- (struct AttributeValueCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; })nodeAttributeValueCursorWithIdentifiers:(id)a0;
- (BOOL)copyToURL:(id)a0 error:(id *)a1;
- (void)_enumerateNodesWithNodeCursor:(void *)a0 propertiesCursor:(void *)a1 block:(id /* block */)a2;
- (void)_enumerateEdgesWithEdgeCursor:(void *)a0 propertiesCursor:(void *)a1 block:(id /* block */)a2;
- (void)save:(id /* block */)a0;
- (void)_enumeratePropertiesForCursor:(void *)a0 block:(id /* block */)a1;
- (void).cxx_destruct;
- (void)invalidateMemoryCaches;
- (struct AttributeValueCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; })edgeAttributeValueCursorWithIdentifiers:(id)a0;
- (void)closePersistentStore;
- (void)dealloc;
- (void)loadPropertyNames;
- (void)_enumerateNodeTableWithNodeCursor:(void *)a0 block:(id /* block */)a1;
- (struct EdgeCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; })edgeCursorWithIdentifiers:(id)a0;
- (void)enterBatch;
- (void)leaveBatch;
- (id)initWithFileURL:(id)a0 options:(long long)a1;
- (void)invalidatePersistentStores;
- (void)enumerateModelNodesWithBlock:(id /* block */)a0;
- (void)enumerateModelEdgesWithBlock:(id /* block */)a0;
- (void)enumerateModelNodesForIdentifiers:(id)a0 withBlock:(id /* block */)a1;
- (void)enumerateModelEdgesForIdentifiers:(id)a0 withBlock:(id /* block */)a1;
- (void)enumerateModelNodesForDomains:(id)a0 withBlock:(id /* block */)a1;
- (void)enumerateModelEdgesForDomains:(id)a0 withBlock:(id /* block */)a1;
- (void)enumerateModelNodesForLabels:(id)a0 withBlock:(id /* block */)a1;
- (void)enumerateModelEdgesForLabels:(id)a0 withBlock:(id /* block */)a1;
- (void)addNode:(id)a0 requiresTesting:(BOOL)a1;
- (void)addEdge:(id)a0 requiresTesting:(BOOL)a1;
- (void)removeModelNodeForIdentifier:(unsigned long long)a0;
- (void)removeModelEdgeForIdentifier:(unsigned long long)a0;
- (void)removeModelNodesForIdentifiers:(id)a0;
- (void)removeModelEdgesForIdentifiers:(id)a0;
- (void)setModelNodeProperties:(id)a0 forIdentifier:(unsigned long long)a1 clobberExisting:(BOOL)a2;
- (void)setModelEdgeProperties:(id)a0 forIdentifier:(unsigned long long)a1 clobberExisting:(BOOL)a2;
- (void)setModelNodePropertyValue:(id)a0 forKey:(id)a1 andIdentifier:(unsigned long long)a2;
- (void)setModelEdgePropertyValue:(id)a0 forKey:(id)a1 andIdentifier:(unsigned long long)a2;
- (void)setNodeWeight:(float)a0 forIdentifier:(unsigned long long)a1;
- (void)setEdgeWeight:(float)a0 forIdentifier:(unsigned long long)a1;
- (void)removeModelNodePropertiesForIdentifier:(unsigned long long)a0;
- (void)removeModelEdgePropertiesForIdentifier:(unsigned long long)a0;
- (void)removeModelNodesPropertiesForIdentifiers:(id)a0;
- (void)removeModelEdgesPropertiesForIdentifiers:(id)a0;
- (void)removeModelNodePropertyForKey:(id)a0 andIdentifier:(unsigned long long)a1;
- (void)removeModelEdgePropertyForKey:(id)a0 andIdentifier:(unsigned long long)a1;
- (BOOL)migrateToURL:(id)a0 error:(id *)a1;
- (void)removePreviousPersistenceStore;
- (void)checkTransaction;
- (void)beginTransactionIfNeeded;
- (void)leaveTransaction;
- (void)leaveTransactionWithRollback;
- (void)setLabel:(id)a0 forDegasLabel:(unsigned long long)a1;
- (id)localLabelNameForDegasLabel:(unsigned long long)a0;
- (void)loadLabelsAndDomains;
- (unsigned long long)degasLabelIdForMatisseDomain:(unsigned short)a0;
- (id)labelforDegasLabelId:(unsigned long long)a0;
- (unsigned long long)degasLabelIdForLabelName:(id)a0;
- (short)matisseDomainForDegasLabel:(unsigned long long)a0;
- (unsigned long long)attrIdForPropertyName:(id)a0 sampleValue:(id)a1;
- (id)propertyNameForAttrId:(unsigned long long)a0;
- (id)returnLabelAndDomain:(short *)a0 forDegasLabels:(void *)a1;
- (void)_setModelNodePropertyValue:(id)a0 forKey:(id)a1 andIdentifier:(unsigned long long)a2;
- (void)_setModelEdgePropertyValue:(id)a0 forKey:(id)a1 andIdentifier:(unsigned long long)a2;

@end
