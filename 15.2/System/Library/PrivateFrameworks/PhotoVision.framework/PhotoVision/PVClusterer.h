@class NSURL, NSMutableDictionary, PVQueue, VNCanceller, PVSuggestionRequest, VNClustererBuilder, NSDate, NSMutableArray, PVContext, PVEventManager, NSString, NSSet, PVCanceler, NSMutableSet, NSNumber, NSLock;
@protocol PVVisionIntegrating, PVPersistenceDelegate;

@interface PVClusterer : NSObject <PVFaceClusteringProtocol> {
    id<PVVisionIntegrating> _visionIntegration;
    id<PVPersistenceDelegate> _persistenceDelegate;
    PVQueue *_processingQueue;
    PVContext *_context;
    NSURL *_cacheDirUrl;
    NSURL *_cacheFileUrl;
    NSString *_clusteringType;
    NSNumber *_threshold;
    NSSet *_faceCSNsInClusterCache;
    unsigned long long _nextSeqNum;
    NSMutableSet *_faceIdStrsToAdd;
    NSMutableSet *_faceCSNsToRemove;
    unsigned long long _accumulatedChangesCount;
    unsigned long long _nextClusterTriggeringAccumulatedChangesCount;
    PVCanceler *_clusteringCanceler;
    VNCanceller *_visionCanceler;
    VNClustererBuilder *_clusterBuilder;
    BOOL _rebuildClusterer;
    NSMutableArray *_outstandingSuggestionRequests;
    PVSuggestionRequest *_currentSuggestionRequest;
    NSLock *_suggestionLock;
    NSLock *_currentStatusSnapshotLock;
    struct { unsigned long long countOfEligibleFaces; unsigned long long countOfFacesPendingToAdd; BOOL isClustering; BOOL rebuildRequired; } _currentStatusSnapshot;
    BOOL _currentStatusSnapshotIsValid;
    NSLock *_propertyDictionaryLock;
    NSMutableDictionary *_propertyDictionary;
    NSDate *_timestampOfLastClusterComparison;
}

@property (readonly, nonatomic) BOOL needsFullSync;
@property (readonly, nonatomic) BOOL needsUpdate;
@property (readonly, nonatomic, getter=isReady) BOOL ready;
@property (nonatomic) long long clustererBringUpState;
@property (weak) PVEventManager *eventManager;
@property (readonly, nonatomic) long long clustererState;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;
+ (BOOL)removeClusteringStateCacheWithContext:(id)a0 cacheDirectoryUrl:(id)a1 error:(id *)a2;

- (void)terminate;
- (id)differencesBetweenClustersInClusterCacheAndLibrary:(id *)a0;
- (id)status;
- (void).cxx_destruct;
- (id)distancesFromClustersIdentifiedByFaceCSNs:(id)a0 toClustersIdentifiedByFaceCSNs:(id)a1 error:(id *)a2;
- (id)level0ClusterAsFaceCSNsByLevel0KeyFaceCSNForClusterIdentifiedByFaceCSN:(unsigned long long)a0 error:(id *)a1;
- (void)cancelAllSuggestionRequests;
- (id)requestSuggestionsForFaceClusterSequenceNumbers:(id)a0 withClusteringFlags:(id)a1 updateHandler:(id /* block */)a2 error:(id *)a3;
- (void)cancelSuggestionRequest:(id)a0;
- (id)distanceBetweenLevel0ClusterIdentifiedByFaceCSN:(unsigned long long)a0 andLevel0ClusterIdentifiedByFaceCSN:(unsigned long long)a1 error:(id *)a2;
- (id)initWithContext:(id)a0 persistenceDelegate:(id)a1 cacheDirectoryURL:(id)a2 visionIntegration:(id)a3;
- (void)_processingQueueDetermineNextClusterTriggeringAccumulatedChangesCountIfNecessary;
- (void)scheduleClusteringAfterRemovingFaceCSNs:(id)a0 addingFaceIdStrs:(id)a1;
- (BOOL)_processingQueuePerformForcedFaceClustering:(BOOL)a0 withCanceler:(id)a1;
- (unsigned long long)numberOfAccumulatedClusterChanges;
- (void)clusterIfNecessaryAndWait;
- (void)clusterAndWait;
- (void)performClusteringWithCompletion:(id /* block */)a0;
- (void)_cancelClusteringAndRestoreClusterCache:(BOOL)a0;
- (void)cancelClustering;
- (void)_recordClusteringState:(BOOL)a0;
- (void)_recordClusterRebuildRequired:(BOOL)a0;
- (void)_recordCountOfPendingFacesToAdd:(unsigned long long)a0;
- (void)_recordIncrementCountOfPendingFacesToAdd:(unsigned long long)a0;
- (void)_recordCurrentStatus:(struct { unsigned long long x0; unsigned long long x1; BOOL x2; BOOL x3; })a0;
- (BOOL)_performAndPersistClustersByAddingFaceObs:(id)a0 groupingIdentifiers:(id)a1 removingFaceObs:(id)a2 updateFaces:(id)a3 canceler:(id)a4 error:(id *)a5;
- (id)_faceObservationsFromFaceCSNs:(id)a0;
- (id)_faceObservationsFromFaceIdStrs:(id)a0 assignClusterSeqNumberIfNeeded:(BOOL)a1 updatedFaces:(id)a2 groupingIdentifiers:(id)a3;
- (id)_faceObservationsFromFaces:(id)a0 assignClusterSeqNumberIfNeeded:(BOOL)a1 updatedFaces:(id)a2;
- (void)_removeEmptyGroups;
- (void)_processingQueueQuickSyncClustererWithPhotoLibraryUsingFacesInClusterCache:(id)a0 visionClusters:(id *)a1 withCanceler:(id)a2;
- (void)_processingQueueSyncClustererWithPhotoLibraryUsingFacesInClusterCache:(id)a0 withCanceler:(id)a1;
- (BOOL)_processingQueueGetFaceClusterSequenceNumbersInClusterCache:(id *)a0 lastClusterSequenceNumber:(unsigned long long *)a1 error:(id *)a2;
- (BOOL)_processingQueueSaveClusterCache:(id *)a0;
- (id)_visionClusterMemmapFileInCacheDirectoryURL:(id)a0 clusterState:(id)a1 error:(id *)a2;
- (BOOL)_processingQueueRestoreClusteringCacheWithCacheDirectoryURL:(id)a0 clusterState:(id)a1 threshold:(id)a2 error:(id *)a3;
- (BOOL)_processingQueueResetClusterCache:(id *)a0;
- (id)_visionClusterStateDataBlobFromClusterSnapshotFileAtURL:(id)a0 error:(id *)a1;
- (void)_removeVisionClusterCacheFilesNotReferencedByVisionClusterState:(id)a0;
- (BOOL)_processingQueueRestoreFromClusterSnapshotFileAtURL:(id)a0 error:(id *)a1;
- (BOOL)_processingQueueRestoreClusterCacheAndSyncWithLibrary:(BOOL)a0 error:(id *)a1;
- (long long)restoreClusterCacheAndSyncWithLibrary:(BOOL)a0 error:(id *)a1;
- (id)suggestedFaceClusterSequenceNumbersForFaceClusterSequenceNumbersRepresentingClusters:(id)a0 error:(id *)a1;
- (BOOL)isReadyToReturnSuggestions;
- (BOOL)_processingQueueGetVisionClusters:(id)a0 minimumClusterSize:(unsigned long long)a1 returnClusterAsCountedSet:(BOOL)a2 error:(id *)a3;
- (BOOL)getClusters:(id *)a0 threshold:(double *)a1 utilizingGPU:(BOOL *)a2 error:(id *)a3;
- (id)_propertyDictionaryFileURL;
- (void)_readPropertyDictionary;
- (void)_setPropertyDictionaryValue:(id)a0 forKey:(id)a1;
- (id)_stringForPVClustererBringUpState:(long long)a0;

@end
