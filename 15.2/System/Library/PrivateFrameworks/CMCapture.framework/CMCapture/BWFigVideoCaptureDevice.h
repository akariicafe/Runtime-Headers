@class NSDictionary, BWImageControlModeTransitionMonitor, BWFigCaptureDeviceVendor, BWVariableFrameRateSelector, BWMemoryPool, NSString, BWFigCaptureDevice, NSMutableArray, BWRamp, BWInferenceResult, BWMetadataTimeMachine, NSArray, NSMutableDictionary, NSMutableSet, BWFigVideoCaptureStream, BWFrameStatisticsByPortType, BWMovingWindowStats, NSObject, NSSet, FigStateMachine, FigWeakReference, BWDeviceMotionActivityDetector, BWZoomCommandHandler, BWStillImageCaptureSettings, BWAmbientLightSensor, BWBravoStreamSelector, BWFigVideoCaptureSynchronizedStreamsGroup, BWStats, BWStreamStartStopSynchronizer;
@protocol BWAdaptiveBracketingController, BWPreviewTimeMachineProcessor, BWSupplementalPointCloudCaptureDeviceDelegate, BWPortraitSceneMonitor, OS_dispatch_queue, BWFigVideoCaptureDeviceZoomFactorChangedDelegate;

@interface BWFigVideoCaptureDevice : NSObject <BWZoomCompletionDelegate, BWSupplementalPointCloudCaptureDeviceDelegate> {
    BWFigCaptureDeviceVendor *_deviceVendor;
    struct { unsigned int val[8]; } _clientAuditToken;
    int _clientPID;
    NSMutableDictionary *_cameraInfoByPortType;
    NSDictionary *_supportedProperties;
    unsigned int _activeDeviceMask;
    unsigned int _timeOfFlightCameraUseCaseMask;
    unsigned int _timeOfFlightCameraProjectorModeMask;
    int _deviceType;
    BOOL _multiCamEnabled;
    NSDictionary *_attributes;
    BWFigVideoCaptureStream *_lastRecommendedMasterCaptureStream;
    BWStreamStartStopSynchronizer *_synchronizedStreamsStartStopSynchronizer;
    BOOL _superWideCaptureStreamAsStatsMasterPreferred;
    BOOL _increaseSlaveFrameRateWhenWaitingForExposureFocusStability;
    BOOL _increaseSlaveFrameRateWhenWaitingForExposureFocusStabilityOnlyWhenWideIsMaster;
    struct { struct { float x; float y; } previousSpherePosition[3]; struct { float x; float y; } currentSpherePosition[3]; struct { float x; float y; } filteredSpherePosition[3]; BOOL supportAverageSpherePositionKey; struct { unsigned int configuration; struct { float x; float y; } opticalCenterOffset[3]; float baseZoomFactor[3]; float pixelSizeInMicron[3]; float currentToReferenceScaleRatio[7]; float currentToReferenceExtrinsicMatrix[7][12]; int referencePortIndex; int previousPortIndex; struct { float x; float y; } parallaxShift; struct { float x; float y; } stashedSpherePos[3]; float lastPracticalFocalLength[3]; float lastEffectiveFocalLength[3]; float lastPinholeCameraFocalLength[3]; BOOL decoupleBravoParallaxShiftFromSphereLensPosition; float minDistanceForBravoParallaxShift; float sphereScalingFactorUsedForParallaxShiftComputation; } bravoData; } _sphereShiftState;
    int _sphereShiftStateLastUpdateCaptureID;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _sphereShiftStateLock;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _mostRecentPTS;
    BWFigVideoCaptureStream *_currentMasterCaptureStream;
    BWFigVideoCaptureStream *_currentPreferredCaptureStream;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _currentMasterCaptureStreamLock;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _synchronizedStreamsSwitchOverLock;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _bravoMasterLock;
    BWBravoStreamSelector *_bravoStreamSelector;
    BOOL _bravoStreamSelectionInformWhenFocusScanCompletes;
    struct { long long selectionBehavior; unsigned long long restrictedSelectionConditions; } _bravoStreamSelectionConfiguration;
    struct { long long selectionBehavior; unsigned long long restrictedSelectionConditions; } _bravoStreamSelectionConfigurationForRecording;
    BOOL _bravoStreamSelectionConfigurationForRecordingEnabled;
    BOOL _synchronizedStreamsSwitchOverInProgress;
    BOOL _slaveSwitchOverInProgressPreventingStillCapture;
    float _synchronizedStreamsStereoFusionLowerBoundZoomFactor;
    float _synchronizedStreamsStereoFusionUpperBoundZoomFactor;
    int _synchronizedStreamsNominalSlaveFrameRate;
    int _synchronizedStreamsNominalMasterToSlaveFrameRateRatio;
    int _synchronizedStreamsElevatedSlaveFrameRate;
    int _synchronizedStreamsElevatedMasterToSlaveFrameRateRatio;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _parallaxMitigationStrengthLock;
    float _parallaxMitigationStrength;
    int _parallaxMitigationRampDuration;
    int _parallaxMitigationRampShape;
    BWRamp *_parallaxMitigationRamp;
    BWFigVideoCaptureStream *_parallaxMitigationTargetCaptureStream;
    BOOL _macroFocusDetectionEnabled;
    float _macroFocusDistanceLowerThreshold;
    float _macroFocusDistanceUpperThreshold;
    BOOL _macroFocusDetected;
    BOOL _facesDetectedSinceStreamStart;
    BOOL _depthDataDeliveryEnabled;
    float _depthMaxFrameRate;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _sdofLock;
    int _sdofEffectStatus;
    int _sdofStagePreviewStatus;
    BOOL _sdofSceneMonitoringEnabled;
    id<BWPortraitSceneMonitor> _portraitSceneMonitor;
    NSObject<OS_dispatch_queue> *_notificationQueue;
    NSObject<OS_dispatch_queue> *_focusAndExposureUpdateQueue;
    struct OpaqueFigFlatDictionaryKeySpec { } *_metadataKeySpec;
    BOOL _attachMetadataFlatDictionary;
    void /* function */ *_createAutofocusSampleBufferProcessorFunction;
    NSObject<OS_dispatch_queue> *_autofocusProcessorQueue;
    NSMutableDictionary *_autofocusCachedPropertiesDictionary;
    struct OpaqueFigSimpleMutex { } *_autofocusStatusMutex;
    BOOL _allowAEStableNotifications;
    BOOL _aeStable;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _aeRequestTime;
    int _aeRequestCount;
    int _aeFrameWaitCount;
    BOOL _allowAWBStableNotifications;
    BOOL _awbStable;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cachedFocusRect;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cachedExposureRect;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _nonDestructiveCropSizeLock;
    struct CGSize { double width; double height; } _nonDestructiveCropSize;
    BOOL _useAutoImageControlMode;
    int _autoImageControlMode;
    int _currentImageControlMode;
    BOOL _autoImageControlModeWantsSphereVideoEnabled;
    double _transitionMonitorCoarseFocusTimeoutForVideoRecording;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _autoImageControlModeCompletionLock;
    BWImageControlModeTransitionMonitor *_autoImageControlModeTransitionMonitor;
    id /* block */ _autoImageControlModeCompletionHandler;
    int _apsMode;
    BOOL _collectAPSStatistics;
    BOOL _hasAPSStatistics;
    struct BWAPSStatistics { float stdDataFromAPSForWide; float maxDataFromAPSForWide; float minDataFromAPSForWide; float stdDataFromSphereForWide; float maxDataFromSphereForWide; float minDataFromSphereForWide; float stdDataFromAPSForTele; float maxDataFromAPSForTele; float minDataFromAPSForTele; float stdDataFromSphereForTele; float maxDataFromSphereForTele; float minDataFromSphereForTele; float stdDataFromAccel; float maxDataFromAccel; float minDataFromAccel; float stdDataFromGyro; float maxDataFromGyro; float minDataFromGyro; } _apsStatistics;
    int _numAPSStatisticsSamples;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _frameStatisticsLock;
    BWFrameStatisticsByPortType *_currentFrameStatisticsByPortType;
    BWFrameStatisticsByPortType *_tempFrameStatisticsByPortType;
    BOOL _stillImageCaptureNowAfterAutofocusTimeoutSupported;
    int _stillImageContrastBasedAutofocusTimeout;
    int _stillImagePhaseDetectionAutofocusTimeout;
    BOOL _hasNightMode;
    float _nightModeMinGainThreshold;
    int _unifiedBracketingMode;
    BOOL _sifrStillImageCaptureEnabledIfAvailable;
    BOOL _ubSIFREnabled;
    BOOL _ubHDRWithBiasEnabled;
    NSDictionary *_ubCaptureParametersByPortType;
    BWMetadataTimeMachine *_ubZeroShutterLagMetadataTimeMachine;
    BOOL _hasDeepFusion;
    BOOL _deepFusionEnabled;
    BOOL _learnedNREnabled;
    BOOL _streamingImageIntentNeedsUpdate;
    int _currentStreamingImageIntent;
    int _nextStreamingImageIntent;
    float _streamingImageIntentDefaultMinimumFrameRate;
    NSMutableDictionary *_streamingImageIntentDefaultAEMaxGainByPortType;
    NSMutableDictionary *_streamingImageIntentDefaultMaxExposureDurationFrameworkOverrideByPortType;
    BOOL _updateStreamingImageIntentWhenMasterStreamChanges;
    float _timeLapseCaptureRate;
    int _timeLapseStationaryCount;
    int _timeLapseStationaryHysteresisLag;
    BOOL _globalToneMappingEnabled;
    BOOL _hasDigitalFlash;
    BOOL _digitalFlashEnabled;
    BOOL _digitalFlashMetadataEnabled;
    NSArray *_digitalFlashDetectedObjectTypes;
    NSSet *_digitalFlashSupportedPortTypes;
    int _streamingDigitalFlashMode;
    BOOL _digitalFlashUseWideForSceneMonitoring;
    int _digitalFlashModeForSceneMonitoring;
    int _digitalFlashStatus;
    double _lastDigitalFlashStatusEIT;
    float _lastDigitalFlashRecommendRegularFlashSNR;
    double _lastDigitalFlashRecommendRegularFlashBacklitRelativeAEDifference;
    BWMovingWindowStats *_digitalFlashRecommendRegularFlashBacklitRelativeAEDifferenceSimpleMovingAverage;
    double _digitalFlashExposureTimes[3];
    NSMutableDictionary *_digitalFlashExposureTimesForSceneMonitoringByPortType;
    BOOL _digitalFlashLockingAE;
    BOOL _digitalFlashLockingAF;
    BOOL _digitalFlashCaptureInProgress;
    int _digitalFlashCaptureSupplementalPointCloudCaptureDeviceFrameRateMaxSkippedFrames;
    FigWeakReference *_supplementalPointCloudCaptureDeviceDelegate;
    FigWeakReference *_supplementalPointCloudCaptureDevice;
    float _supplementalPointCloudCaptureDeviceStreamingMinimumFrameRate;
    float _supplementalPointCloudCaptureDeviceCaptureMinimumFrameRate;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _supplementalPointCloudCaptureDeviceLock;
    float _supplementalPointCloudCaptureDeviceCurrentFrameRate;
    NSMutableDictionary *_autoFlashNormalizedSNRThresholdByPortType;
    float _autoTorchNormalizedSNRThreshold;
    float _lastFlashSceneSNR;
    BWMovingWindowStats *_autoFlashSNRSimpleMovingAverage;
    double _stillImageStabilizationIntegrationTimeThreshold;
    double _synchronizedStreamsStillImageStabilizationTeleIntegrationTimeThreshold;
    double _synchronizedStreamsOISSISStereoFusionTeleMinIntegrationTime;
    float _synchronizedStreamsOISSISStereoFusionTeleMinGain;
    struct OpaqueFigSimpleMutex { } *_torchLock;
    BOOL _autoTorchEnabled;
    BOOL _autoTorchStatsCheckedForVideoRecording;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _autoTorchRampedUpTime;
    BOOL _torchActive;
    float _torchLevel;
    float _maxTorchLevel;
    int _flashModeForSceneMonitoring;
    int _hdrModeForSceneMonitoring;
    int _qualityPrioritizationForSceneMonitoring;
    BOOL _flashScene;
    BOOL _hdrScene;
    BOOL _sisScene;
    BOOL _forcePostingForSceneDetectionNotifications;
    BOOL _stillImageCaptureEnabled;
    float _quadraLowLightResampledNormalizedSNRThreshold;
    int _numberOfCompletedStillCaptures;
    int _skippedFramesCountForStillImageCaptureRetry;
    int _maxSkippedFramesForStillImageCaptureRetry;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _stillImageCaptureStateLock;
    BWStillImageCaptureSettings *_stillImageCaptureSettings;
    NSDictionary *_stillImageCaptureNowOptions;
    NSDictionary *_stillImageCaptureStreamProperties;
    BOOL _stillImageCaptureNowUsingSyncGroup;
    BOOL _retryCaptureStillImageNow;
    FigStateMachine *_stillImageCaptureStateMachine;
    id /* block */ _prepareToCaptureStillImageNowCompletionHandler;
    id /* block */ _pendingPrepareToCaptureStillImageNowCompletionHandler;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastStillImageCaptureEndPTS;
    BWAmbientLightSensor *_ambientLightSensor;
    int _currentManualFocusCompletedID;
    int _currentManualExposureCompletedID;
    int _currentBiasedExposureCompletedID;
    int _currentManualWhiteBalanceCompletedID;
    NSMutableDictionary *_observedProperties;
    struct OpaqueFigSimpleMutex { } *_manualPropertyMutex;
    float _lensPosition;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _exposureDuration;
    float _ISO;
    float _exposureTargetBias;
    float _exposureTargetOffset;
    struct { float redGain; float greenGain; float blueGain; } _deviceWhiteBalanceGains;
    struct { float redGain; float greenGain; float blueGain; } _grayWorldWhiteBalanceGains;
    NSObject<OS_dispatch_queue> *_whiteBalanceGainsQueue;
    NSMutableDictionary *_whiteBalanceGains;
    NSMutableArray *_whiteBalanceGainsOrderedKeys;
    int _whiteBalanceModeForExif;
    NSObject<OS_dispatch_queue> *_zoomFactorUpdateQueue;
    float _maxISPZoomFactor;
    float _newISPZoomFactor;
    float _lastRequestedZoomFactor;
    float _newTotalZoomFactor;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _zoomFactorLock;
    float _rampDefaultBravoSnapDistanceFraction;
    int _ispZoomLatency;
    BOOL _feature1Enabled;
    NSObject<OS_dispatch_queue> *_feature1ProcessorQueue;
    struct OpaqueFigSampleBufferProcessor { } *_feature1Processor;
    BWDeviceMotionActivityDetector *_deviceMotionActivityDetector;
    BOOL _stationary;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _ptsOfLastFrameForStationaryCheck;
    float _minimumTimeBetweenStationaryChecks;
    BOOL _stationaryChecksWhileStillImageCaptureInProgressEnabled;
    id<BWFigVideoCaptureDeviceZoomFactorChangedDelegate> _zoomFactorChangedDelegate;
    NSString *_zoomFactorChangedDelegatePortType;
    BOOL _smartCameraFreezeMotionEnabled;
    BOOL _smartCameraFaceSceneEnabled;
    float _smartCameraFaceSceneRecentlyDetectedThreshold;
    struct BWSmartCameraScene { BOOL enabled; BOOL confident; float confidenceFilterRatio; float filteredConfidence; float confidenceThreshold; float confidenceHysteresisValueLag; short confidenceHysteresisTemporalLagBeforeConfident; short confidenceHysteresisTemporalLagBeforeNotConfident; short currentTemporalHysteresis; char *name; } _smartCameraPetScene;
    struct BWSmartCameraScene { BOOL enabled; BOOL confident; float confidenceFilterRatio; float filteredConfidence; float confidenceThreshold; float confidenceHysteresisValueLag; short confidenceHysteresisTemporalLagBeforeConfident; short confidenceHysteresisTemporalLagBeforeNotConfident; short currentTemporalHysteresis; char *name; } _smartCameraBabyScene;
    BOOL _smartCameraLowLightAutoHDREnabled;
    struct BWSmartCameraScene { BOOL enabled; BOOL confident; float confidenceFilterRatio; float filteredConfidence; float confidenceThreshold; float confidenceHysteresisValueLag; short confidenceHysteresisTemporalLagBeforeConfident; short confidenceHysteresisTemporalLagBeforeNotConfident; short currentTemporalHysteresis; char *name; } _smartCameraBrightStageScene;
    struct BWSmartCameraScene { BOOL enabled; BOOL confident; float confidenceFilterRatio; float filteredConfidence; float confidenceThreshold; float confidenceHysteresisValueLag; short confidenceHysteresisTemporalLagBeforeConfident; short confidenceHysteresisTemporalLagBeforeNotConfident; short currentTemporalHysteresis; char *name; } _smartCameraSunsetSunriseScene;
    int _currentSemanticStyleSceneType;
    int _currentExifOrientation;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _currentExifOrientationLock;
    struct { unsigned short major; unsigned short minor; unsigned short patch; } _smartCameraVersion;
    BWInferenceResult *_mostRecentSmartCameraResult;
    BWInferenceResult *_currentStillSmartCameraResult;
    BOOL _zeroShutterLagEnabled;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _zeroShutterLagEarliestAllowedPTS;
    float _zeroShutterLagStillImageStabilizationGainThreshold;
    float _zeroShutterLagSynchronizedStreamsStillImageStabilizationTeleGainThreshold;
    NSArray *_previewMetadataForTimeMachinePTSRange;
    NSMutableSet *_shouldCheckAPSOffsetEstimatorByPortType;
    NSMutableSet *_shouldCheckCriticalFocusErrorByPortType;
    NSMutableSet *_criticalFocusErrorOccurredByPortType;
    NSMutableSet *_portTypesToCheckForDegradedAutoFocus;
    NSMutableDictionary *_degradedAutoFocusStatusByPortTypes;
    NSMutableDictionary *_sphereJitterDetectionAttemptsByPortType;
    NSMutableDictionary *_sphereJitterSuccessfulDetectionsByPortType;
    long long _streamingStartTime;
    unsigned int _numberOfPhotoCaptures;
    unsigned int _numberOfBurstPhotoCaptures;
    unsigned int _numberOfBalancedPhotoCaptures;
    int _streamingStartCameraPosture;
    int _streamingStartExifOrientation;
    unsigned int _timeToFirstPhotoCapture;
    long long _previousPhotoCaptureTime;
    unsigned int _minTimeSinceLastPhotoCapture;
    unsigned int _maxTimeSinceLastPhotoCapture;
    unsigned int _numberOfButtonMashingCapturesAtRate0;
    unsigned int _numberOfButtonMashingCapturesAtRate1;
    unsigned int _numberOfButtonMashingEventsAtRate0;
    unsigned int _numberOfButtonMashingEventsAtRate1;
    BOOL _buttonMashingEventStartedAtRate0;
    BOOL _buttonMashingEventStartedAtRate1;
    NSMutableDictionary *_moduleActuatorVendorByPortType;
    NSString *_sphereMode;
    float _structuredLightIdleTemperatureFirstReading;
    float _structuredLightActiveTemperatureFirstReading;
    float _structuredLightActiveTemperatureLastReading;
    BWStats *_structuredLightActiveTemperatureStats;
    BWStats *_infaredSensorTemperatureStats;
    NSMutableDictionary *_sensorTemperatureStatsByPortType;
    long long _accumulatedSystemPressureLevel;
    long long _timeOfLastSystemPressureChange;
    int _maxSystemPressureLevel;
    long long _timeToCriticalSystemPressureInMS;
    unsigned int _factorsContributingToMaxSystemPressureLevel;
    BOOL _regionOfInterestForCameraControlsSupported;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _regionOfInterestForCameraControls;
    struct { int width; int height; } _activeSensorRegionForCameraControls;
    BWMemoryPool *_memoryPool;
    BOOL _overCaptureEnabled;
    BOOL _overrideClientZoomRamps;
    BOOL _masterStreamSwitchingEnabledForOverCapture;
    BOOL _streamSelectorEnabledForOverCapture;
    BOOL _standbySlaveFrameSkippingEnabledForOverCapture;
    BOOL _overCaptureLockedStreamsEnabled;
    NSArray *_overCaptureLockedStreams;
    int _overCaptureLockedStreamsTimeoutCounter;
    int _overCaptureCameraTransitionFrameCount;
    BOOL _momentCaptureVideoRecordingSupported;
    BOOL _variableFrameRateVideoEnabled;
    BWVariableFrameRateSelector *_variableFrameRateSelector;
    float _variableFrameRateNewSuggestedFrameRate;
    float _variableFrameRateLastRequestedFrameRate;
    NSMutableDictionary *_variableFrameRateLastRequestedAEMaxGainByPortType;
    BWInferenceResult *_variableFrameRateMostRecentInferenceResult;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _variableFrameRateUpdateLock;
    NSObject<OS_dispatch_queue> *_variableFrameRateUpdateQueue;
    BOOL _cinematicVideoEnabled;
    NSMutableDictionary *_cinematicVideoFocusRequest;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _systemPressureStatusLock;
    int _systemPressureLevel;
    int _thermalSystemPressureLevel;
    BOOL _needsToRelieveSystemPressure;
    unsigned int _systemPressureFactors;
    BOOL _allowSystemPressureToForceOffOverCaptureActiveSlaveStream;
    BOOL _overCaptureActiveSlaveStreamForcedOff;
    int _overCaptureActiveSlaveStreamRemainingFramesUntilShutdown;
    BOOL _restorationOfForcedOffOverCaptureActiveSlaveStreamEnabled;
    float _timeOfFlightStreamingTimeAt0FPS;
    float _timeOfFlightStreamingTimeAt1FPS;
    float _timeOfFlightStreamingTimeAt8FPS;
    float _timeOfFlightStreamingTimeAtOtherFPS;
    int _lastTimeOfFlightFrameRate;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _ptsOfLastTimeOfFlightFrameRateChange;
}

@property (readonly, nonatomic) struct OpaqueFigSampleBufferProcessor { } *_autofocusProcessor;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *_stillImageDispatchQueue;
@property (readonly) NSDictionary *moduleInfoByPortType;
@property (readonly) NSDictionary *sensorIDDictionaryByPortType;
@property (readonly) BWFigCaptureDevice *device;
@property (readonly) int position;
@property (readonly) struct OpaqueCMClock { } *clock;
@property (readonly) NSArray *activePortTypes;
@property (readonly) BOOL hasFlash;
@property (readonly) BOOL supportsWideColor;
@property (retain, nonatomic) BWMemoryPool *memoryPool;
@property (readonly, nonatomic) NSString *applicationID;
@property (nonatomic) BOOL cinematicFramingSupported;
@property (nonatomic) BOOL cinematicFramingEnabled;
@property (nonatomic) unsigned int cinematicFramingControlMode;
@property (nonatomic) BOOL backgroundBlurSupported;
@property (nonatomic) BOOL backgroundBlurEnabled;
@property (readonly) BWFigVideoCaptureStream *captureStream;
@property (nonatomic) int captureDeviceType;
@property (nonatomic) BOOL temporalNoiseReductionEnabled;
@property (nonatomic) BOOL temporalNoiseReductionBand0Disabled;
@property (nonatomic) BOOL temporalNoiseReductionRawEnabled;
@property (nonatomic) BOOL disableTemporalNoiseReductionWhenStopping;
@property (nonatomic) BOOL stillImageCaptureEnabled;
@property (nonatomic) int stillImageFusionScheme;
@property (nonatomic, getter=isStillImageISPChromaNoiseReductionEnabled) BOOL stillImageISPChromaNoiseReductionEnabled;
@property (nonatomic) BOOL quadraHighResStillImageCaptureEnabled;
@property (nonatomic) BOOL stillImageGNRHDREnabled;
@property (nonatomic, getter=isStillImageISPMultiBandNoiseReductionEnabled) BOOL stillImageISPMultiBandNoiseReductionEnabled;
@property (readonly, nonatomic) BOOL dualStreamStillImageCaptureEnabled;
@property (nonatomic) BOOL stillImageFocusPixelDataCaptureWithDepthEnabled;
@property (nonatomic) BOOL stillImageSashimiRawCaptureWithDepthEnabled;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } sensorRegionOfInterestForCameraControls;
@property (nonatomic) struct CGSize { double width; double height; } defaultAutoFocusTapWindowSize;
@property (nonatomic) struct CGSize { double width; double height; } defaultContinuousAutoFocusWindowSize;
@property (nonatomic) BOOL focusPixelsEnabled;
@property (nonatomic) float maximumFrameRate;
@property (nonatomic) float minimumFrameRate;
@property (nonatomic) BOOL variableFrameRateVideoEnabled;
@property (nonatomic) BOOL cinematicVideoEnabled;
@property (nonatomic) float cinematicVideoAverageRenderingTime;
@property (nonatomic) float cinematicVideoWorstCaseRenderingTime;
@property float zoomFactor;
@property (readonly) BWZoomCommandHandler *zoomCommandHandler;
@property (copy, nonatomic) NSDictionary *baseZoomFactorsByPortType;
@property struct CGSize { double x0; double x1; } nonDestructiveCropSize;
@property (readonly) BWFigVideoCaptureSynchronizedStreamsGroup *synchronizedStreamsGroup;
@property (readonly) BOOL isBravoVariant;
@property (readonly) BWFigVideoCaptureStream *masterCaptureStream;
@property (readonly) BWFigVideoCaptureStream *bravoTelephotoCaptureStream;
@property (readonly) BWFigVideoCaptureStream *bravoSuperWideCaptureStream;
@property (readonly) BWFigVideoCaptureStream *pearlInfraredCaptureStream;
@property (readonly) NSArray *captureStreams;
@property (readonly) NSArray *captureStreamsByFocalLength;
@property struct { long long x0; unsigned long long x1; } bravoStreamSelectionConfiguration;
@property struct { long long x0; unsigned long long x1; } bravoStreamSelectionConfigurationForRecording;
@property BOOL bravoStreamSelectionConfigurationForRecordingEnabled;
@property (copy) NSArray *bravoStreamSelectionEligibleFallbackPortTypes;
@property BOOL wideCaptureStreamAsStatsMasterPreferred;
@property (readonly) struct { struct { float x0; float x1; } x0[3]; struct { float x0; float x1; } x1[3]; struct { float x0; float x1; } x2[3]; BOOL x3; struct { unsigned int x0; struct { float x0; float x1; } x1[3]; float x2[3]; float x3[3]; float x4[7]; float x5[7][12]; int x6; int x7; struct { float x0; float x1; } x8; struct { float x0; float x1; } x9[3]; float x10[3]; float x11[3]; float x12[3]; BOOL x13; float x14; float x15; } x4; } sphereShiftState;
@property int timeOfFlightProjectorMode;
@property (nonatomic) BOOL timeOfFlightAFEnabled;
@property (nonatomic) BOOL midFrameSynchronizationEnabled;
@property (nonatomic) BOOL depthDataDeliveryEnabled;
@property (nonatomic) float depthMaxFrameRate;
@property (nonatomic) int depthDataBaseRotation;
@property (nonatomic) BOOL shallowDepthOfFieldEffectEnabled;
@property (nonatomic) BOOL wideDigitalFlashAvailableShallowDepthOfFieldEffectsEnabled;
@property (readonly) int shallowDepthOfFieldEffectStatus;
@property (readonly) int shallowDepthOfFieldStagePreviewStatus;
@property (nonatomic) BOOL stereoFusionEnabled;
@property (nonatomic) BOOL bravoConstituentPhotoDeliveryEnabled;
@property (nonatomic) id<BWPreviewTimeMachineProcessor> previewTimeMachineProcessor;
@property (nonatomic) BOOL smartCameraEnabled;
@property (nonatomic) BOOL attachesUprightExifOrientationMetadataToStreamingFrames;
@property (readonly) NSString *smartCameraStatus;
@property (readonly) NSString *lastStillCaptureStatus;
@property (readonly) NSString *lastStillScene;
@property (readonly) NSString *lastScene;
@property (readonly) NSString *orientation;
@property (readonly) NSString *filteredBrightStageSceneConfidence;
@property (readonly) NSString *filteredSunsetSunriseSceneConfidence;
@property (readonly) NSString *filteredPetSceneConfidence;
@property (readonly) NSString *filteredBabySceneConfidence;
@property (nonatomic) BOOL globalToneMappingEnabled;
@property (nonatomic) int unifiedBracketingMode;
@property (nonatomic) BOOL sifrStillImageCaptureEnabledIfAvailable;
@property (nonatomic) BOOL deepFusionEnabled;
@property (nonatomic) BOOL learnedNREnabled;
@property (nonatomic) BOOL digitalFlashEnabled;
@property (nonatomic) BOOL digitalFlashMetadataEnabled;
@property (retain, nonatomic) NSArray *digitalFlashDetectedObjectTypes;
@property (nonatomic) int streamingDigitalFlashMode;
@property (nonatomic) id<BWAdaptiveBracketingController> adaptiveUnifiedBracketingController;
@property (nonatomic) BOOL redSaturationMitigationEnabled;
@property (nonatomic) BOOL disparityGenerationFromReferenceFramesSupported;
@property (nonatomic) BOOL zeroShutterLagEnabled;
@property (nonatomic) int zeroShutterLagTimeMachineBufferCapacity;
@property (nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } zeroShutterLagEarliestAllowedPTS;
@property (nonatomic) BOOL redEyeReductionEnabled;
@property (nonatomic) float timeLapseCaptureRate;
@property (nonatomic) id<BWSupplementalPointCloudCaptureDeviceDelegate> supplementalPointCloudCaptureDeviceDelegate;
@property (nonatomic) BWFigVideoCaptureDevice *supplementalPointCloudCaptureDevice;
@property (nonatomic) BOOL overCaptureEnabled;
@property (nonatomic) float overCapturePercentage;
@property (nonatomic) BOOL allocateResourcesCompatibleWithOverCapture;
@property (nonatomic) BOOL momentCaptureVideoRecordingSupported;
@property (nonatomic) BOOL deferredProcessingEnabled;
@property int systemPressureLevel;
@property int thermalSystemPressureLevel;
@property (nonatomic) unsigned int systemPressureFactors;
@property (readonly) BOOL needsToRelieveSystemPressure;
@property BOOL restorationOfForcedOffOverCaptureActiveSlaveStreamEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;

- (void)setMaxExposureDurationClientOverride:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (struct { float x0; float x1; float x2; })grayWorldDeviceWhiteBalanceGains;
- (float)exposureTargetOffset;
- (int)setImageControlMode:(int)a0;
- (float)ISO;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })exposureDuration;
- (void)zoomCommandHandler:(id)a0 didApplyZoomFactor:(float)a1 zoomFactorWithoutFudge:(float)a2 rampComplete:(BOOL)a3 rampCommandID:(int)a4;
- (float)lensPosition;
- (float)torchLevel;
- (void)captureStreamWillStartStreaming:(id)a0;
- (void)captureStream:(id)a0 willEmitDepthSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1;
- (void)setCinematicVideoFocus:(id)a0;
- (int)setWhiteBalanceModeLockedWithGains:(struct { float x0; float x1; float x2; })a0 requestID:(int)a1;
- (void)setSmartCameraVersion:(struct { unsigned short x0; unsigned short x1; unsigned short x2; })a0;
- (void)sendCalibrationDataToISP;
- (void)prepareToCaptureStillImageNow:(id /* block */)a0;
- (void)semanticStyleSceneTypeDidChange:(int)a0;
- (int)setProvidesStortorgetMetadata:(BOOL)a0;
- (void)captureStream:(id)a0 willDiscardVideoSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1;
- (void)setMaxTorchLevel:(float)a0;
- (int)setAutoImageControlMode:(int)a0;
- (int)setTorchLevel:(float)a0;
- (id)_initWithCaptureDevice:(id)a0 attributes:(id)a1 synchronizedStreamsAttributes:(id)a2 multiCamEnabled:(BOOL)a3 applicationID:(id)a4 clientAuditToken:(struct { unsigned int x0[8]; })a5 tccIdentity:(id)a6 deviceVendor:(id)a7 createAutofocusSampleBufferProcessorFunction:(void /* function */ *)a8 cameraParameters:(id)a9 error:(int *)a10;
- (int)_setupAutofocusSampleBufferProcessor;
- (void)drainNotifications;
- (int)maxStillImageCaptureBufferCountForHDRMode:(int)a0 digitalFlashMode:(int)a1 qualityPrioritization:(int)a2 clientBracketCount:(int)a3 bravoConstituentImageDeliveryDeviceTypes:(id)a4;
- (BOOL)isPropertyObserved:(id)a0;
- (int)setAutomaticallyAdjustsImageControlMode:(BOOL)a0;
- (id)stillImageCaptureSettingsWithID:(long long)a0 captureType:(int)a1 deliverOriginalImage:(BOOL)a2 deliverSushiRaw:(BOOL)a3 bravoConstituentImageDeliveryDeviceTypes:(id)a4 includePreBracketedEV0ForProcessing:(BOOL)a5 clientBracketSettings:(id)a6 captureFlags:(unsigned long long)a7 userInitiatedRequestPTS:(struct { long long x0; int x1; unsigned int x2; long long x3; })a8 frameStatisticsByPortType:(id)a9;
- (void)captureStream:(id)a0 didDropVideoSampleBufferWithPTS:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
- (int)setExposureModeLocked;
- (void)_resetStillImageCaptureRequestState;
- (void)captureStreamDidStopStreaming:(id)a0;
- (void)setProperty:(id)a0 isObserved:(BOOL)a1;
- (int)captureStillImageNowWithSettings:(id)a0;
- (int)setStillImageSceneMonitoringFlashMode:(int)a0 hdrMode:(int)a1 qualityPrioritization:(int)a2 digitalFlashMode:(int)a3;
- (void)setZoomFactorChangedDelegate:(id)a0 forPortType:(id)a1;
- (void)setFaceDetectionConfiguration:(id)a0;
- (void)setStillImageStabilizationSceneDetectionEnabled:(BOOL)a0;
- (void)pointCloudCaptureDevice:(id)a0 willEmitPointCloudSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1;
- (id)digitalFlashExposureTimes;
- (void)captureStream:(id)a0 willEmitStillImageSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 fromTimeMachine:(BOOL)a2;
- (void)setAutoImageControlMode:(int)a0 completionHandler:(id /* block */)a1;
- (void)rampToVideoZoomFactor:(float)a0 withRampType:(int)a1 rate:(float)a2 duration:(double)a3 commandID:(int)a4;
- (id)cameraInfoByPortTypeIncludingLSCGains:(BOOL)a0;
- (void)updateSDOFBackgroundShiftSum:(float)a0 invalidShiftRatio:(float)a1 closeCanonicalDisparityAverage:(float)a2 faceCanonicalDisparityAverages:(id)a3 erodedForegroundRatio:(float)a4 foregroundRatio:(float)a5 occluded:(BOOL)a6 faces:(id)a7;
- (int)setSubjectAreaChangeMonitoringEnabled:(BOOL)a0;
- (void)captureStream:(id)a0 didCompleteStillImageCaptureWithPTS:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 error:(int)a2;
- (int)setExposureTargetBias:(float)a0 requestID:(int)a1;
- (void)captureStreamDidStartStreaming:(id)a0;
- (void)captureStreamFailedToStartStreaming:(id)a0;
- (void)updateSphereShiftStateWithSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0;
- (int)setFocusModeManualWithLensPosition:(float)a0 requestID:(int)a1;
- (void)stopPointCloudCaptureForStillImageCaptureWithSettingsID:(long long)a0;
- (void)cancelPrepareToCaptureStillImageNow;
- (float)parallaxMitigationStrengthAndTargetCaptureStream:(id *)a0;
- (int)setExposureModeAutoWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)isHDRScene;
- (void)startupFaceDetectionIfNeeded;
- (void)registerForAEMatrixMetadata;
- (id)initWithCaptureDevice:(id)a0 attributes:(id)a1 synchronizedStreamsAttributes:(id)a2 multiCamEnabled:(BOOL)a3 applicationID:(id)a4 clientAuditToken:(struct { unsigned int x0[8]; })a5 tccIdentity:(id)a6 error:(int *)a7;
- (void)unregisterForAEMatrixMetadata;
- (struct { float x0; float x1; float x2; })deviceWhiteBalanceGains;
- (int)setFocusModeAutoWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 restrictToRect:(BOOL)a1 continuous:(BOOL)a2 smooth:(BOOL)a3 rangeRestrictionNear:(float)a4 rangeRestrictionFar:(float)a5;
- (void)updateFudgedZoomRanges;
- (int)autoImageControlMode;
- (void)updatePortraitSceneMonitoringRequiresStageThresholds:(BOOL)a0;
- (void)_teardownAutoFocusSampleBufferProcessor;
- (void)captureStreamWillStopStreaming:(id)a0;
- (BOOL)isSISScene;
- (void)captureStream:(id)a0 willEmitVideoSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1;
- (void)captureStreamDidChangeActiveFormatIndex:(id)a0;
- (void)initiateCaptureStillImageNowWithPTS:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 completionHandler:(id /* block */)a1;
- (void)captureStream:(id)a0 willEmitVideoPreviewSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1;
- (void)performBlockOnNotificationQueue:(id /* block */)a0;
- (void)setISPZoomFactor:(float)a0 totalZoomFactor:(float)a1;
- (BOOL)setAutoFlashEnabled:(BOOL)a0 error:(id *)a1;
- (int)setExposureModeCustomWithExposureDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 minFrameRate:(double)a1 maxFrameRate:(double)a2 ISO:(float)a3 requestID:(int)a4;
- (void)shutDownSystemPressuredDevice;
- (void)updateSmartCameraStreamPropertiesWithInferenceResult:(id)a0;
- (void)dealloc;
- (id)copyISPProcessingSessionWithType:(int)a0 error:(int *)a1;
- (int)setWhiteBalanceModeAuto;
- (BOOL)isFlashScene;
- (int)digitalFlashStatus;
- (id)unifiedBracketingStillImageCaptureSettingsWithID:(long long)a0 captureRequestIdentifier:(id)a1 frameStatisticsByPortType:(id)a2 flashMode:(int)a3 digitalFlashMode:(int)a4 autoRedEyeReductionEnabled:(BOOL)a5 hdrMode:(int)a6 qualityPrioritization:(int)a7 speedOverQualityCaptureEnabled:(BOOL)a8 waitForTimeMachineToFill:(BOOL)a9 burstQualityCaptureEnabled:(BOOL)a10 deliverOriginalImage:(BOOL)a11 bravoConstituentImageDeliveryDeviceTypes:(id)a12 deliverDepthData:(BOOL)a13 autoDeferredProcessingEnabled:(BOOL)a14 includePreBracketedEV0ForProcessing:(BOOL)a15 clientBracketSettings:(id)a16 userInitiatedRequestPTS:(struct { long long x0; int x1; unsigned int x2; long long x3; })a17 rawOutputFormat:(unsigned int)a18 processingSupportProvider:(id)a19;
- (int)setFaceDetectionDrivenImageProcessingMode:(int)a0;
- (int)resolveStillImageCaptureTypeFromStatisticsByPortType:(id)a0 flashMode:(int)a1 hdrMode:(int)a2 qualityPrioritization:(int)a3 stereoFusionMode:(int)a4 depthDataDeliveryEnabled:(BOOL)a5 bravoConstituentImageDeliveryDeviceTypes:(id)a6 burstQualityCaptureEnabled:(BOOL)a7 clientBracketMode:(int)a8 forSceneMonitoring:(BOOL)a9 captureFlags:(unsigned long long *)a10;
- (int)setAutomaticallyAdjustsTorch:(BOOL)a0;
- (void)captureStream:(id)a0 willEmitPointCloudSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1;
- (int)setContinuousAutoFocusRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 restrictToRect:(BOOL)a1;
- (id)copyCurrentFrameStatistics;

@end
