@class BWDNGCompressionSession, NSString, NSArray, NSDictionary, BWCMPhotoCompressionSession, NSObject, BWInferenceEngine, FigCapturePixelConverter;
@protocol OS_dispatch_queue, OS_dispatch_group;

@interface BWPhotoEncoderNode : BWNode <BWInferenceFormatProvider> {
    NSObject<OS_dispatch_queue> *_prewarmQueue;
    NSObject<OS_dispatch_queue> *_previewGenerationQueue;
    NSObject<OS_dispatch_group> *_previewGenerationGroup;
    FigCapturePixelConverter *_previewPixelConverter;
    FigCapturePixelConverter *_thumbnailPixelConverter;
    FigCapturePixelConverter *_clientThumbnailPixelConverter;
    BOOL _cameraSupportsFlash;
    BOOL _zeroShutterLagEnabled;
    BWCMPhotoCompressionSession *_cmPhotoCompressionSession;
    BWDNGCompressionSession *_dngCompressionSession;
    unsigned long long _dngBitDepth;
    unsigned long long _maxThreads;
    FigCapturePixelConverter *_jpegPixelConverter;
    int _portraitRenderQuality;
    NSDictionary *_inputColorInfo;
    BOOL _usesHighEncodingPriority;
    unsigned long long _heifThumbnailMaxPixelSize;
    float _heifQualityOverride;
    BOOL _heifForceEmbedThumb;
    BOOL _heifForceCABAC;
    BOOL _heifForceHEVC;
    BOOL _heifUseTiling;
    int _heifTileWidth;
    int _heifTileHeight;
    long long _prewarmedSettingsID;
    BOOL _allowHEIFPrewarming;
    BOOL _prewarmingOngoing;
    NSArray *_alwaysEncodedSemanticSegmentationMatteURNs;
    NSDictionary *_attachedMediaConfigurationByAttachedMediaKey;
    void *_prewarmQueueID;
    BWInferenceEngine *_inferenceEngine;
    BOOL _preparedInferenceEngine;
    _Atomic BOOL _opportunisticInferenceCompleted;
    BOOL _alwaysAwaitInference;
    struct opaqueCMFormatDescription { } *_inferenceInputFormatDescription;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_cropRectForSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0 metadata:(id)a1;
+ (void)_updateMetadataForSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0 cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;

- (void)didSelectFormat:(id)a0 forInput:(id)a1 forAttachedMediaKey:(id)a2;
- (int)_addMetadataAttachmentsForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 requestedSettings:(id)a2 captureType:(int)a3;
- (void)setZeroShutterLagEnabled:(BOOL)a0;
- (BOOL)zeroShutterLagEnabled;
- (int)_generatePreviewForSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0 requestedStillImageCaptureSettings:(id)a1 cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 previewPixelBuffer:(struct __CVBuffer **)a3;
- (int)_addValue:(id)a0 toAuxiliaryImageProperties:(struct CGImageMetadata { } *)a1 namespace:(struct __CFString { } *)a2 prefix:(struct __CFString { } *)a3 key:(struct __CFString { } *)a4;
- (id)nodeSubType;
- (id)_arrayInColumnMajorOrderFrom3x4MatrixData:(struct { void /* unknown type, empty encoding */ x0[4]; })a0;
- (void)setCameraSupportsFlash:(BOOL)a0;
- (BOOL)_isSupportedThumbnailCodecType:(unsigned int)a0 forEncodingScheme:(int)a1;
- (void)_addSemanticMattesForEncodingScheme:(int)a0 semanticSegmentationMatteURNs:(id)a1 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a2 primaryOutputAspectRatio:(double)a3 settingsID:(long long)a4;
- (void)_closeContainerForEncodingScheme:(int)a0;
- (void)setInputColorInfo:(id)a0;
- (int)_scaleInputPixelBuffer:(struct __CVBuffer { } *)a0 toDimensions:(struct { int x0; int x1; })a1 colorSpaceProperties:(int)a2 cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3 pixelConverter:(id)a4 poolCapacity:(int)a5 thumbnailPixelBuffer:(struct __CVBuffer **)a6;
- (int)_encodePhotoForEncodingScheme:(int)a0 pixelBuffer:(struct __CVBuffer { } *)a1 imageDimensions:(struct { int x0; int x1; })a2 metadata:(id)a3 thumbnailOptions:(id)a4 requestedStillImageCaptureSettings:(id)a5 resolvedStillImageCaptureSettings:(id)a6 cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a7 usePixelsOutsideCrop:(BOOL)a8;
- (id)nodeType;
- (int)_defaultJPEGIndexedQTableForPixelBuffer:(struct __CVBuffer { } *)a0 metadata:(id)a1 captureType:(int)a2 quantizationTableIndexOut:(int *)a3 isHighGainImageOut:(BOOL *)a4;
- (id)_transcodeQualityHintFromQuantizationTableIndex:(int)a0;
- (void)_getAssetsSizeForEncodingScheme:(int)a0 containerSizeOut:(unsigned long long *)a1 thumbnailSizeOut:(unsigned long long *)a2 auxiliaryImagesSizeOut:(unsigned long long *)a3;
- (void)prepareForCurrentConfigurationToBecomeLive;
- (BOOL)_addDepthForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1;
- (id)_compressionSessionForEncodingScheme:(int)a0;
- (BOOL)cameraSupportsFlash;
- (void)_removeNonPropagatedAttachedMediaFromSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0;
- (BOOL)_addGainMapForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 outputWidth:(unsigned int)a2 outputHeight:(unsigned int)a3;
- (int)_addThumbnailForEncodingScheme:(int)a0 thumbnailPixelBuffer:(struct __CVBuffer { } *)a1 metadata:(id)a2 requestedStillImageCaptureSettings:(id)a3 resolvedStillImageCaptureSettings:(id)a4 cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a5 codecType:(unsigned int)a6 maxPixelSize:(unsigned long long)a7;
- (void)renderSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0 forInput:(id)a1;
- (id)_newRawMetadataAttachmentsForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 dngDictionary:(id)a2 requestedSettings:(id)a3 captureType:(int)a4 dngContainsDepthData:(BOOL)a5 dngContainsSemanticSegmentationMattes:(BOOL)a6;
- (void)setAttachedMediaConfigurationByAttachedMediaKey:(id)a0;
- (id)inputFormatForAttachedMediaKey:(id)a0;
- (id)_encodingOptionsForAuxiliaryImageWidth:(unsigned long long)a0 height:(unsigned long long)a1 pixelBufferAttributes:(id)a2;
- (id)outputFormatForAttachedMediaKey:(id)a0;
- (BOOL)_addPortraitEffectsMatteForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 primaryOutputAspectRatio:(double)a2;
- (int)_addCompressedThumbnailForEncodingScheme:(int)a0 thumbnailSurface:(struct __IOSurface { } *)a1 thumbnailSurfaceSize:(unsigned long long)a2;
- (unsigned int)_codecTypeForEncodingScheme:(int)a0;
- (int)_resolveEncodingSchemeForRequestedSettings:(id)a0;
- (struct __IOSurface { } *)_closeContainerAndCopySurfaceForEncodingScheme:(int)a0;
- (struct CGImageMetadata { } *)_newAuxiliaryImagePropertiesFromPortraitEffectsMatteMetadata:(id)a0;
- (id)outputVideoFormatForAttachedMediaKey:(id)a0;
- (void)handleStillImagePrewarmWithSettings:(id)a0 forInput:(id)a1;
- (BOOL)intermediateResourceTrackingAllowedForAttachedMediaKey:(id)a0;
- (int)_addSemanticMatteToCompressionSession:(id)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 attachedMediaKey:(id)a2 auxImageType:(int)a3 primaryOutputAspectRatio:(double)a4 sourceCropRectKey:(id)a5;
- (id)inputVideoFormatForAttachedMediaKey:(id)a0;
- (id)_newMetadataAttachmentsForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 requestedSettings:(id)a2 captureType:(int)a3;
- (id)_depthEncodingOptionsFromDepthMetadata:(id)a0 pixelFormat:(unsigned int)a1;
- (void)setUsesHighEncodingPriority:(BOOL)a0;
- (struct CGImageMetadata { } *)_newAuxiliaryImagePropertiesFromDepthMetadata:(id)a0;
- (id)initWithNodeConfiguration:(id)a0 semanticDevelopmentVersion:(int)a1 inferenceScheduler:(id)a2 alwaysAwaitInference:(BOOL)a3 portraitRenderQuality:(int)a4 deferredPhotoProcessorEnabled:(BOOL)a5 alwaysEncodedSemanticSegmentationMatteURNs:(id)a6;
- (int)_fileTypeForEncodingScheme:(int)a0;
- (struct CGImageMetadata { } *)_newAuxiliaryImagePropertiesFromSemanticMatteSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0;
- (id)_thumbnailOptionsForImageWithMetadata:(id)a0 requestedStillImageCaptureSettings:(id)a1 resolvedStillImageCaptureSettings:(id)a2 cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3 codecType:(unsigned int)a4 maxPixelSize:(unsigned long long)a5;
- (int)_containerFormatForEncodingScheme:(int)a0;
- (void)_addQualityOptionsToDictionary:(id)a0 codecType:(unsigned int)a1 pixelBuffer:(struct __CVBuffer { } *)a2 imageDimensions:(struct { int x0; int x1; })a3 metadata:(id)a4 requestedStillImageCaptureSettings:(id)a5 resolvedStillImageCaptureSettings:(id)a6 enableHEIFTiling:(BOOL)a7 enableHEIFOrientation:(BOOL)a8;
- (id)inputInferenceVideoFormatForAttachedMediaKey:(id)a0;
- (id)attachedMediaConfigurationByAttachedMediaKey;
- (void)dealloc;
- (id)inputColorInfo;
- (void)_addAuxImagesIfNeededForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 metadata:(id)a2 stillImageSettings:(id)a3 processingFlags:(unsigned int)a4 embedThumbToCompressedImage:(BOOL)a5;
- (int)_getColorSpacePropertiesForSourcePixelFormat:(unsigned int)a0 sourceWidth:(int)a1 sourceHeight:(int)a2 destinationPixelFormat:(unsigned int)a3;
- (struct CGImageMetadata { } *)_newAuxiliaryImagePropertiesFromGainMapSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0;
- (int)_encodeDNGForEncodingScheme:(int)a0 rawSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 dngDictionary:(id)a2 requestedSettings:(id)a3 captureType:(int)a4 cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a5 dngContainsDepthData:(BOOL)a6 dngContainsSemanticSegmentationMattes:(BOOL)a7;
- (void)_performInferenceWithBuffer:(struct opaqueCMSampleBuffer { } *)a0;
- (id)_arrayInColumnMajorOrderFrom3x3MatrixData:(struct { void /* unknown type, empty encoding */ x0[3]; })a0;
- (int)_resolveEncodingSchemeForCompressedPhotoWithLinDNGWithRequestedSettings:(id)a0;
- (BOOL)usesHighEncodingPriority;

@end
