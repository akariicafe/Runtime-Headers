@class COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats, NSURL, NSDate, NSDictionary, COMAPPLEFELDSPARPROTOCOLVersionedPersonalizationVector, COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList, COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadata, FCAssetManager, FCTopStoriesStyleConfiguration, FCHeadlineThumbnail, NSString, FCArticleAudioTrack, FCCoverArt, NSArray, NSData, NSNumber;
@protocol FCChannelProviding;

@interface FCNotificationArticleHeadline : FCHeadline <FCFeedPersonalizingItem> {
    BOOL _hasThumbnail;
    BOOL _sponsored;
    BOOL _deleted;
    BOOL _isDraft;
    BOOL _isLocalDraft;
    BOOL _featureCandidate;
    BOOL _needsRapidUpdates;
    BOOL _showMinimalChrome;
    BOOL _boundToContext;
    BOOL _hiddenFromFeeds;
    BOOL _pressRelease;
    BOOL _webEmbedsEnabled;
    BOOL _issueOnly;
    BOOL _showBundleSoftPaywall;
    BOOL _useTransparentNavigationBar;
    BOOL _disableBookmarking;
    BOOL _hideModalCloseButton;
    NSString *_versionIdentifier;
    NSString *_identifier;
    NSString *_articleID;
    NSString *_referencedArticleID;
    NSString *_clusterID;
    unsigned long long _contentType;
    NSString *_title;
    NSString *_primaryAudience;
    long long _publisherArticleVersion;
    long long _backendArticleVersion;
    id<FCChannelProviding> _sourceChannel;
    NSString *_sourceName;
    FCHeadlineThumbnail *_thumbnailLQ;
    FCHeadlineThumbnail *_thumbnail;
    FCHeadlineThumbnail *_thumbnailMedium;
    FCHeadlineThumbnail *_thumbnailHQ;
    FCHeadlineThumbnail *_thumbnailUltraHQ;
    NSString *_shortExcerpt;
    NSString *_accessoryText;
    NSURL *_contentURL;
    NSDate *_lastModifiedDate;
    NSDate *_lastFetchedDate;
    NSURL *_videoURL;
    double _videoDuration;
    NSArray *_iAdKeywords;
    NSArray *_iAdSectionIDs;
    NSArray *_blockedStorefrontIDs;
    NSArray *_allowedStorefrontIDs;
    NSArray *_relatedArticleIDs;
    NSArray *_moreFromPublisherArticleIDs;
    NSArray *_publisherSpecifiedArticleIDs;
    NSString *_articleRecirculationConfigJSON;
    unsigned long long _storyType;
    FCTopStoriesStyleConfiguration *_storyStyle;
    long long _minimumNewsVersion;
    FCCoverArt *_coverArt;
    unsigned long long _role;
    NSArray *_linkedArticleIDs;
    NSArray *_linkedIssueIDs;
    NSString *_callToActionText;
    NSString *_surfacedByArticleListID;
    FCArticleAudioTrack *_narrativeTrack;
    FCArticleAudioTrack *_narrativeTrackSample;
    NSString *_narrativeTrackTextRanges;
    NSString *_layeredThumbnailJSON;
    double _layeredThumbnailAspectRatio;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _thumbnailFocalFrame;
}

@property (retain, nonatomic) FCAssetManager *assetManager;
@property (retain, nonatomic) NSDictionary *articlePayload;
@property (retain, nonatomic) NSString *flintDocumentUrlString;
@property (retain, nonatomic) NSData *flintDocumentPrefetchedData;
@property (retain, nonatomic) NSArray *flintFontResourceIDs;
@property (retain, nonatomic) NSString *changeEtag;
@property (retain, nonatomic) NSNumber *globalCohortScoresCTR;
@property (retain, nonatomic) NSNumber *channelCohortScoresCTR;
@property (retain, nonatomic) NSArray *topicCohortScoresCTRs;
@property (readonly, copy, nonatomic) NSString *sourceFeedID;
@property (readonly, copy, nonatomic) NSString *itemID;
@property (readonly, copy, nonatomic) NSDate *publishDate;
@property (readonly, nonatomic) unsigned long long halfLife;
@property (readonly, copy, nonatomic) NSString *publisherID;
@property (readonly, copy, nonatomic) NSArray *topicIDs;
@property (readonly, nonatomic) double globalUserFeedback;
@property (readonly, nonatomic) BOOL hasGlobalUserFeedback;
@property (readonly, nonatomic, getter=isANF) BOOL anf;
@property (readonly, nonatomic, getter=isPaid) BOOL paid;
@property (readonly, nonatomic) BOOL hasVideo;
@property (readonly, nonatomic, getter=isHiddenFromAutoFavorites) BOOL hiddenFromAutoFavorites;
@property (readonly, nonatomic) COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList *globalCohorts;
@property (readonly, nonatomic) COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList *publisherCohorts;
@property (readonly, nonatomic) COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats *globalConversionStats;
@property (readonly, nonatomic) COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats *publisherConversionStats;
@property (readonly, copy, nonatomic) NSArray *topics;
@property (readonly, nonatomic) COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadata *publisherTagMetadata;
@property (readonly, nonatomic, getter=isBundlePaid) BOOL bundlePaid;
@property (readonly, nonatomic) long long bodyTextLength;
@property (readonly, nonatomic) BOOL isFeatured;
@property (readonly, nonatomic) BOOL hasAudioTrack;
@property (readonly, nonatomic) BOOL isEvergreen;
@property (readonly, copy, nonatomic) NSArray *iAdCategories;
@property (readonly, nonatomic) unsigned long long halfLifeOverride;
@property (readonly, nonatomic) COMAPPLEFELDSPARPROTOCOLVersionedPersonalizationVector *personalizationVector;
@property (readonly, nonatomic) COMAPPLEFELDSPARPROTOCOLVersionedPersonalizationVector *personalizationVectorAlt;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (BOOL)isDraft;
- (void)setStoryStyle:(id)a0;
- (void)setSourceChannel:(id)a0;
- (BOOL)useTransparentNavigationBar;
- (id)blockedStorefrontIDs;
- (id)identifier;
- (id)moreFromPublisherArticleIDs;
- (void)setSourceName:(id)a0;
- (BOOL)webEmbedsEnabled;
- (void)enumerateTopicCohortsWithBlock:(id /* block */)a0;
- (unsigned long long)contentType;
- (id)iAdSectionIDs;
- (id)publisherSpecifiedArticleIDs;
- (id)generateThumbnailAssetHandleForUrlString:(id)a0 withAssetManager:(id)a1;
- (BOOL)showMinimalChrome;
- (id)referencedArticleID;
- (void)setThumbnailLQ:(id)a0;
- (BOOL)isPressRelease;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })thumbnailFocalFrame;
- (BOOL)isLocalDraft;
- (id)contentWithContext:(id)a0;
- (void)setAccessoryText:(id)a0;
- (id)title;
- (id)relatedArticleIDs;
- (BOOL)showBundleSoftPaywall;
- (BOOL)isIssueOnly;
- (id)linkedArticleIDs;
- (void)setStoryType:(unsigned long long)a0;
- (unsigned long long)storyType;
- (id)articleID;
- (id)generateFlintDocumentAssetHandleForUrlString:(id)a0 prefetchedData:(id)a1 withAssetManager:(id)a2;
- (id)allowedStorefrontIDs;
- (unsigned long long)role;
- (void)setCallToActionText:(id)a0;
- (id)narrativeTrack;
- (id)coverArt;
- (BOOL)isBoundToContext;
- (void)setRole:(unsigned long long)a0;
- (id)sourceName;
- (id)narrativeTrackTextRanges;
- (BOOL)hasThumbnail;
- (BOOL)isFeatureCandidate;
- (id)linkedIssueIDs;
- (id)primaryAudience;
- (void)setShortExcerpt:(id)a0;
- (void)setThumbnail:(id)a0;
- (BOOL)isDeleted;
- (BOOL)hideModalCloseButton;
- (BOOL)isSponsored;
- (id)narrativeTrackSample;
- (id)thumbnail;
- (id)thumbnailUltraHQ;
- (double)videoDuration;
- (id)accessoryText;
- (id)versionIdentifier;
- (long long)minimumNewsVersion;
- (void).cxx_destruct;
- (void)enumerateTopicConversionStatsWithBlock:(id /* block */)a0;
- (void)setArticleID:(id)a0;
- (BOOL)isHiddenFromFeeds;
- (void)setThumbnailHQ:(id)a0;
- (BOOL)needsRapidUpdates;
- (id)thumbnailHQ;
- (id)callToActionText;
- (void)setClusterID:(id)a0;
- (id)lastFetchedDate;
- (id)initWithArticlePayload:(id)a0 sourceChannel:(id)a1 assetManager:(id)a2;
- (id)clusterID;
- (void)setThumbnailUltraHQ:(id)a0;
- (id)shortExcerpt;
- (id)thumbnailLQ;
- (id)articleRecirculationConfigJSON;
- (void)setThumbnailMedium:(id)a0;
- (id)videoURL;
- (double)layeredThumbnailAspectRatio;
- (id)storyStyle;
- (BOOL)disableBookmarking;
- (void)setTitle:(id)a0;
- (long long)publisherArticleVersion;
- (id)lastModifiedDate;
- (id)contentURL;
- (id)layeredThumbnailJSON;
- (id)thumbnailMedium;
- (id)sourceChannel;
- (void)setSponsored:(BOOL)a0;
- (id)surfacedByArticleListID;
- (id)iAdKeywords;
- (long long)backendArticleVersion;
- (void)setDeleted:(BOOL)a0;
- (void)setHasThumbnail:(BOOL)a0;
- (BOOL)isValid;
- (void)setThumbnailFocalFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setSurfacedByArticleListID:(id)a0;
- (void)setContentType:(unsigned long long)a0;
- (void)setIdentifier:(id)a0;

@end
