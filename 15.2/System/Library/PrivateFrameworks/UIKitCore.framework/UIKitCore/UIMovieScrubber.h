@class UIPanGestureRecognizer, NSString, UIImageView, UIMovieScrubberTrackView, UIMovieScrubberEditingView, UILabel, UIImage;
@protocol UIMovieScrubberDelegate, UIMovieScrubberDataSource;

@interface UIMovieScrubber : UIControl <UIMovieScrubberTrackViewDataSource, UIMovieScrubberTrackViewDelegate> {
    UIImageView *_thumbView;
    UIMovieScrubberTrackView *_trackView;
    UIMovieScrubberEditingView *_editingView;
    UILabel *_elapsedLabel;
    UILabel *_remainingLabel;
    int _timeComponents;
    UIImage *_fillImage;
    UIImage *_innerShadowImage;
    UIImage *_maskImage;
    UIImage *_shadowImage;
    id<UIMovieScrubberDataSource> _dataSource;
    id<UIMovieScrubberDelegate> _delegate;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _trackRect;
    double _hitOffset;
    BOOL _editable;
    double _value;
    double _maximumValue;
    double _minimumValue;
    struct CGPoint { double x; double y; } _touchLocationWhenTrackPressBegan;
    double _trimStartValue;
    double _trimEndValue;
    double _zoomAnimationDuration;
    double _zoomAnimationDelay;
    struct { unsigned char continuous : 1; unsigned char animating : 1; unsigned char creatingSnapshot : 1; unsigned char needsReload : 1; unsigned char layoutTimeViews : 1; unsigned char computeTrackRect : 1; unsigned int clampingTrimRange; unsigned char zoomed : 1; unsigned char zoomAnimating : 1; unsigned char trackIsPressed : 1; unsigned char trackAnimating : 1; unsigned char thumbIsVisible : 1; unsigned char handleIsPressed : 1; unsigned char willBeginEditing : 1; unsigned char editing : 1; unsigned int editingHandle; unsigned int rotationDisabled; unsigned char isInNavigationBar : 1; unsigned char delegateValueDidChange : 1; unsigned char delegateStartValueDidChange : 1; unsigned char delegateEndValueDidChange : 1; unsigned char delegateWillBeginRequestingThumbnails : 1; unsigned char delegateDidFinishRequestingThumbnails : 1; unsigned char delegateWillBeginEditing : 1; unsigned char delegateDidBeginEditing : 1; unsigned char delegateDidCancelEditing : 1; unsigned char delegateEditingAnimationFinished : 1; unsigned char delegateWidthDeltaOriginXDelta : 1; unsigned char delegateDidBeginAnimatingZoom : 1; unsigned char delegateDidEndAnimatingZoom : 1; unsigned char delegateWillZoom : 1; unsigned char dataSourceRequestThumbnailImageIsSummmary : 1; } _sliderFlags;
    UIPanGestureRecognizer *_panGestureRecognizer;
}

@property (nonatomic) double value;
@property (nonatomic) double duration;
@property (nonatomic) double minimumTrimLength;
@property (nonatomic) double maximumTrimLength;
@property (nonatomic) double trimStartValue;
@property (nonatomic) double trimEndValue;
@property (readonly, nonatomic) double zoomMinimumValue;
@property (readonly, nonatomic) double zoomMaximumValue;
@property (readonly, nonatomic, getter=isZoomAnimating) BOOL zoomAnimating;
@property (nonatomic) BOOL thumbIsVisible;
@property (nonatomic, getter=isEditable) BOOL editable;
@property (nonatomic, getter=isContinuous) BOOL continuous;
@property (nonatomic) id<UIMovieScrubberDataSource> dataSource;
@property (nonatomic) id<UIMovieScrubberDelegate> delegate;
@property (nonatomic) double zoomDelay;
@property (nonatomic) BOOL showTimeViews;
@property (readonly, nonatomic) BOOL isInsideNavigationBar;
@property (nonatomic) double edgeInset;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } alignmentMargins;
@property (nonatomic, getter=isEditing) BOOL editing;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)timeStringForSeconds:(int)a0 forceFullWidthComponents:(BOOL)a1 isElapsed:(BOOL)a2;
+ (BOOL)_allowActionsToQueue;

- (void)_sliderValueDidChange:(id)a0;
- (void)reloadData;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (void)movieScrubberTrackView:(id)a0 clampedSizeWidthDelta:(double)a1 actualSizeWidthDelta:(double)a2 originXDelta:(double)a3 minimumVisibleValue:(double)a4 maximumVisibleValue:(double)a5;
- (BOOL)cancelTouchTracking;
- (void)layoutSubviews;
- (void)_initSubviews;
- (void)movieScrubberTrackView:(id)a0 requestThumbnailImageForTimestamp:(id)a1 isSummaryThumbnail:(BOOL)a2;
- (void)_setValue:(double)a0 andSendAction:(BOOL)a1;
- (id)movieScrubberTrackView:(id)a0 evenlySpacedTimestamps:(int)a1 startingAt:(id)a2 endingAt:(id)a3;
- (void)_sliderAnimationDidStop:(BOOL)a0;
- (BOOL)isAnimatingValueChange;
- (void)didMoveToSuperview;
- (void)_sliderAnimationWillStart;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setDuration:(double)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })trackRect;
- (BOOL)forceZoom;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)movieScrubberTrackViewWillBeginRequestingThumbnails:(id)a0;
- (void)movieScrubberTrackViewDidFinishRequestingThumbnails:(id)a0;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (void)_controlTouchEnded:(id)a0 withEvent:(id)a1;
- (void)_controlTouchMoved:(id)a0 withEvent:(id)a1;
- (void)setEditing:(BOOL)a0 animated:(BOOL)a1;
- (void).cxx_destruct;
- (void)forceUnzoom;
- (BOOL)_alwaysHandleScrollerMouseEvent;
- (double)duration;
- (id)init;
- (double)_valueForLocatable:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_editingRect;
- (void)_updateTimes;
- (void)setRotationDisabled:(BOOL)a0;
- (void)_cancelTrackPress:(BOOL)a0;
- (void)animateCancelEdit;
- (void)_animateAfterEdit:(BOOL)a0;
- (void)_trimAnimationDidStop:(BOOL)a0 glassView:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_editingRectForStartTime:(double)a0 endTime:(double)a1;
- (void)setZoomAnimationDuration:(double)a0;
- (void)_computeTrackRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_updateThumbLocation;
- (void)beginTrackingWithLocatable:(id)a0;
- (void)endTrackingWithLocatable:(id)a0;
- (void)continueTrackingWithLocatable:(id)a0;
- (BOOL)pointInsideThumb:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (int)_editingHandleWithLocatable:(id)a0;
- (void)_beginTrackPressWithLocatable:(id)a0 touchesBegan:(BOOL)a1;
- (void)_cancelTrackPressIfNeccessaryWithLocatable:(id)a0;
- (void)setThumbnailImage:(struct CGImage { } *)a0 forTimestamp:(id)a1;
- (void)animateAfterEdit;
- (double)movieScrubberTrackViewDuration:(id)a0;
- (double)movieScrubberTrackViewThumbnailAspectRatio:(id)a0;
- (void)movieScrubberTrackViewDidExpand:(id)a0;
- (void)movieScrubberTrackViewDidCollapse:(id)a0;
- (double)movieScrubberTrackViewZoomAnimationDuration:(id)a0;
- (double)movieScrubberTrackViewZoomAnimationDelay:(id)a0;
- (void)setValue:(double)a0 animated:(BOOL)a1;
- (void)dealloc;
- (void)didMoveToWindow;
- (void)_handlePanGesture:(id)a0;
- (void)_controlTouchBegan:(id)a0 withEvent:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })thumbRectForValue:(double)a0;
- (void)_trackPressWasHeld;
- (void)_setZoomAnimating:(BOOL)a0;

@end
