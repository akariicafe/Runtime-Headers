@class UIWindowScene, UIViewController, NSUndoManager, UISCurrentUserInterfaceStyleValue, UIKeyboardLayoutGuide, NSMutableArray, NSString, NSMutableSet, _UIWindowOrientationUpdate, CAContext, UIResponder, UIAccessibilityHUDView, _UIRootPresentationController, NSArray, UIScene, _UIFocusEventRecognizer, _UISystemGestureGateGestureRecognizer, UIScreen, UIView, _UIContextBinder, _UIViewControllerNullAnimationTransitionCoordinator, UITraitCollection, _UIWindowAnimationController, CALayer, NSHashTable;
@protocol UIFocusItem, _UISceneUIWindowHosting, UIActivityItemsConfigurationReading;

@interface UIWindow : UIView <NSISEngineDelegate, _UIFocusEventRecognizerDelegate, _UIFocusMovementActionForwarding, _UIContextBindable> {
    NSString *_debugName;
    long long _sceneOrientation;
    long long _sceneClientOrientation;
    BOOL _notedOverlayInsetChange;
    UIViewController *_delegateViewController;
    double _windowLevel;
    double _windowSublevel;
    UIScene<_UISceneUIWindowHosting> *_windowHostingScene;
    UIResponder *_firstResponder;
    id _touchData;
    long long _viewOrientation;
    UIView *_exclusiveTouchView;
    NSUndoManager *_undoManager;
    CALayer *_sceneTransformLayer;
    CALayer *_transformLayer;
    CALayer *_rootLayer;
    NSMutableArray *_rotationViewControllers;
    NSMutableSet *_subtreeMonitors;
    struct { unsigned char delegateWillRotate : 1; unsigned char delegateDidRotate : 1; unsigned char delegateWillAnimateFirstHalf : 1; unsigned char delegateDidAnimationFirstHalf : 1; unsigned char delegateWillAnimateSecondHalf : 1; unsigned char autorotatesToPortrait : 1; unsigned char autorotatesToPortraitUpsideDown : 1; unsigned char autorotatesToLandscapeLeft : 1; unsigned char autorotatesToLandscapeRight : 1; unsigned char dontBecomeKeyOnOrderFront : 1; unsigned char output : 1; unsigned char inGesture : 1; unsigned char autorotates : 1; unsigned char autorotationRegistered : 1; unsigned char isRotating : 1; unsigned char isUsingOnePartRotationAnimation : 1; unsigned char disableAutorotationCount : 4; unsigned char needsAutorotationWhenReenabled : 1; unsigned char forceTwoPartRotationAnimation : 1; unsigned char orderKeyboardInAfterRotating : 1; unsigned char roundedCorners : 4; unsigned char resizesToFullScreen : 1; unsigned char keepContextInBackground : 1; unsigned char forceVisibleOnInit : 1; unsigned char settingFirstResponder : 1; unsigned char windowResizedToFullScreen : 1; unsigned char statusBarFollowsOrientation : 1; unsigned char secure : 1; unsigned char isSceneSized : 1; unsigned char didSetRestorationIdentifier : 1; unsigned char resigningFirstResponderFromHost : 1; unsigned char needsBoundingPathUpdate : 1; unsigned char isUpdatingSafeAreaInsets : 1; unsigned char needsFramePositionAdjustmentWhenWindowSceneIsAttached : 1; unsigned char enqueuedDeferredOrientationUpdate : 1; unsigned char isNotifyingColorTraitChangeForSubtree : 1; } _windowFlags;
    id _windowController;
    _UISystemGestureGateGestureRecognizer *_systemGestureGateForGestures;
    _UISystemGestureGateGestureRecognizer *_systemGestureGateForTouches;
    UITraitCollection *_traitCollection;
    UITraitCollection *_destinationTraitCollection;
    struct __CFDictionary { } *_touchMap;
    long long _containedGestureRecognizerMaximumState;
    double _lastTouchTimestamp;
    unsigned char _systemGesturesArePossible : 1;
    long long _verticalSizeClassStateRestorationOverride;
    long long _horizontalSizeClassStateRestorationOverride;
    UIAccessibilityHUDView *_accessibilityHUD;
    NSHashTable *_windowLevelObservers;
    UISCurrentUserInterfaceStyleValue *_currentUserInterfaceStyleValue;
    NSString *_roleHint;
}

@property (readonly, nonatomic) id<UIActivityItemsConfigurationReading> _activityItemsConfigurationForScene;
@property (readonly, nonatomic, getter=_isSystemGestureWindow) BOOL systemGestureWindow;
@property (readonly, weak, nonatomic, getter=_focusResponder) UIResponder *focusResponder;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic, setter=_setRootViewConstraints:) NSArray *_rootViewConstraints;
@property (retain, nonatomic) NSMutableArray *_currentKeyboardTrackingLayoutGuides;
@property (retain, nonatomic, setter=_setDeferredOrientationUpdate:) _UIWindowOrientationUpdate *_deferredOrientationUpdate;
@property (weak, nonatomic, getter=_rememberedFocusedItem, setter=_setRememberedFocusedItem:) id<UIFocusItem> rememberedFocusedItem;
@property (nonatomic, setter=_setShouldDisableTransformLayerScalingForSnapshotting:) BOOL _shouldDisableTransformLayerScalingForSnapshotting;
@property (copy, nonatomic, setter=_setWindowInternalConstraints:) NSArray *_windowInternalConstraints;
@property (readonly, nonatomic) BOOL _usesLegacySupportedOrientationChecks;
@property (nonatomic, getter=_toWindowOrientation, setter=_setToWindowOrientation:) long long toWindowOrientation;
@property (nonatomic, getter=_fromWindowOrientation, setter=_setFromWindowOrientation:) long long fromWindowOrientation;
@property (retain, nonatomic, getter=_animationController, setter=_setAnimationController:) _UIWindowAnimationController *_animationController;
@property (retain, nonatomic, setter=_setTraitCollectionChangeTransitionCoordinator:) _UIViewControllerNullAnimationTransitionCoordinator *_traitCollectionChangeTransitionCoordinator;
@property (readonly, nonatomic) struct { long long x0; long long x1; } __sizeClassPair;
@property (copy, nonatomic, setter=_setShouldPreventRotationHook:) id /* block */ _shouldPreventRotationHook;
@property (nonatomic, setter=__setHostViewUnderlapsStatusBar:) BOOL __hostViewUnderlapsStatusBar;
@property (readonly, nonatomic, getter=_supportsFocus) BOOL supportsFocus;
@property (readonly, nonatomic, getter=_focusEventRecognizer) _UIFocusEventRecognizer *focusEventRecognizer;
@property (retain, nonatomic, getter=_rootPresentationController, setter=_setRootPresentationController:) _UIRootPresentationController *rootPresentationController;
@property (readonly, nonatomic) BOOL _preventsRootPresentationController;
@property (readonly, nonatomic, getter=_shouldInstallRootPresentationController) BOOL shouldInstallRootPresentationController;
@property (readonly, nonatomic, getter=_keyboardLayoutGuide) UIKeyboardLayoutGuide *_keyboardLayoutGuide;
@property (readonly, nonatomic, getter=_isApplicationKeyWindow) BOOL _applicationKeyWindow;
@property (weak, nonatomic, setter=_setLastFirstResponder:) UIResponder *_lastFirstResponder;
@property (weak, nonatomic, setter=_setLastNextResponder:) UIResponder *_lastNextResponder;
@property (nonatomic, setter=_setContainedGestureRecognizersShouldRespectGestureServerInstructions:) BOOL _containedGestureRecognizersShouldRespectGestureServerInstructions;
@property (weak, nonatomic) UIWindowScene *windowScene;
@property (nonatomic, setter=setCanResizeToFitContent:) BOOL canResizeToFitContent;
@property (retain, nonatomic) UIScreen *screen;
@property (nonatomic) double windowLevel;
@property (readonly, nonatomic, getter=isKeyWindow) BOOL keyWindow;
@property (readonly, nonatomic) BOOL canBecomeKeyWindow;
@property (retain, nonatomic) UIViewController *rootViewController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic, setter=_setBoundContext:) CAContext *_boundContext;
@property (weak, nonatomic, setter=_setContextBinder:) _UIContextBinder *_contextBinder;
@property (readonly, nonatomic) struct { id x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; } _bindingDescription;

+ (void)initialize;
+ (BOOL)_prefersStatusBarHiddenInWindow:(id)a0 targetOrientation:(long long)a1 animationProvider:(id *)a2;
+ (BOOL)_shouldSoftAssertOnSetScreen;
+ (void)_enumerateWindowsIncludingInternalWindows:(BOOL)a0 onlyVisibleWindows:(BOOL)a1 allowMutation:(BOOL)a2 withBlock:(id /* block */)a3;
+ (id)allWindowsIncludingInternalWindows:(BOOL)a0 onlyVisibleWindows:(BOOL)a1;
+ (long long)_preferredStatusBarStyleInWindow:(id)a0 withPartStyles:(id *)a1 animationProvider:(id *)a2;
+ (void *)createIOSurfaceOnScreen:(id)a0 withContextIds:(const unsigned int *)a1 count:(unsigned long long)a2 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3 usePurpleGfx:(BOOL)a4 outTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } *)a5;
+ (id)_findWindowForControllingOverallAppearanceInWindowScene:(id)a0;
+ (void)_synchronizeDrawingWithFence:(id)a0 preCommitHandler:(id /* block */)a1;
+ (id)allWindowsIncludingInternalWindows:(BOOL)a0 onlyVisibleWindows:(BOOL)a1 forScreen:(id)a2;
+ (void)_synchronizeDrawingWithCAFence:(id)a0 preCommitHandler:(id /* block */)a1;
+ (BOOL)_isSecure;
+ (id)_findWindowForControllingOverallAppearance;
+ (void)_noteStatusBarHeightChanged:(double)a0 oldHeight:(double)a1;
+ (void)_synchronizeDrawingWithPreCommitHandler:(id /* block */)a0;
+ (BOOL)_prefersStatusBarHiddenInWindow:(id)a0 animationProvider:(id *)a1;
+ (id)keyWindow;
+ (id)_externalKeyWindow;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })constrainFrameToScreen:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
+ (BOOL)_clearPreCommitHandlerRegistration;
+ (void)_synchronizeDrawingWithFence:(id)a0;
+ (id)_topVisibleWindowPassingTest:(id /* block */)a0;
+ (void)adjustForAccessibilityIfNeeded:(id)a0;
+ (void)adjustFocusForAccessibilityIfNeeded:(id)a0;
+ (id)_applicationKeyWindow;
+ (id)_synchronizedDrawingFence;
+ (void)_popKeyWindow:(id)a0;
+ (BOOL)_allWindowsKeepContextInBackground;
+ (unsigned int)_synchronizeDrawingAcrossProcesses;
+ (void *)createIOSurfaceFromScreen:(id)a0;
+ (void)_unregisterChargedView:(id)a0;
+ (void *)createIOSurfaceOnScreen:(id)a0 withContextIds:(const unsigned int *)a1 count:(unsigned long long)a2 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3 baseTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a4;
+ (BOOL)_isSystemWindow;
+ (id)_hitTestToPoint:(struct CGPoint { double x0; double x1; })a0 forEvent:(id)a1 windowServerHitTestWindow:(id)a2;
+ (void)_pushKeyWindow:(id)a0;
+ (BOOL)_temporary_shouldSizeWindowsAutomaticallyPlistOverrideSet;
+ (void)_setAllWindowsKeepContextInBackground:(BOOL)a0;
+ (void)_setTransformLayerRotationsAreEnabled:(BOOL)a0;
+ (void)_synchronizeDrawingAcrossProcessesOverPort:(unsigned int)a0;
+ (void)_removeWindowFromStack:(id)a0;
+ (void)_synchronizeDrawingAcrossProcessesOverPort:(unsigned int)a0 withPreCommitHandler:(id /* block */)a1;
+ (void *)createIOSurfaceWithContextIds:(const unsigned int *)a0 count:(unsigned long long)a1 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
+ (void *)createScreenIOSurface;
+ (void *)createIOSurfaceWithContextIds:(const unsigned int *)a0 count:(unsigned long long)a1 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 outTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } *)a3;
+ (void *)createIOSurfaceWithContextIds:(const unsigned int *)a0 count:(unsigned long long)a1 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 usePurpleGfx:(BOOL)a3 outTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } *)a4;
+ (void *)createIOSurfaceFromDisplayConfiguration:(id)a0;
+ (id)_findWithDisplayPoint:(struct CGPoint { double x0; double x1; })a0;
+ (id)_globalHitTestForLocation:(struct CGPoint { double x0; double x1; })a0 inWindowServerHitTestWindow:(id)a1 withEvent:(id)a2;
+ (BOOL)_transformLayerRotationsAreEnabled;
+ (void)_synchronizeDrawing;
+ (BOOL)shouldRestrictViewsForSplashboard;
+ (void)setShouldRestrictViewsForSplashboard:(BOOL)a0;
+ (id)restrictedSplashboardClasses;
+ (void)setRestrictedSplashboardClasses:(id)a0;
+ (id)_windowWithContextId:(unsigned int)a0;
+ (Class)layerClass;
+ (void)_executeDeferredOrientationUpdates;

- (void)sendEvent:(id)a0;
- (void)undo:(id)a0;
- (BOOL)_alwaysGetsContexts;
- (BOOL)_hasContext;
- (BOOL)_disableAutomaticKeyboardUI;
- (id)nextResponder;
- (id)_canvas;
- (id)_scene;
- (BOOL)_canIgnoreInteractionEvents;
- (void)_positionHeaderView:(id)a0 andFooterView:(id)a1 outsideContentViewForInterfaceOrientation:(long long)a2;
- (id)_deepestActionResponder;
- (BOOL)_isVisible;
- (BOOL)_shouldAutorotateToInterfaceOrientation:(long long)a0 checkForDismissal:(BOOL)a1 isRotationDisabled:(BOOL *)a2;
- (BOOL)_disableGroupOpacity;
- (void)_slideHeaderView:(id)a0 andFooterView:(id)a1 offScreen:(BOOL)a2 forInterfaceOrientation:(long long)a3;
- (void)setCenter:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 fromCoordinateSpace:(id)a1;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 attached:(BOOL)a1;
- (void)makeKey:(id)a0;
- (void)setLevel:(double)a0;
- (void)_propagateTraitCollectionChangedForStateRestorationWithTransitionCoordinator:(id)a0;
- (void)endDisablingInterfaceAutorotation;
- (id)_window;
- (void)_updateInterfaceOrientationFromActiveInterfaceOrientationIfRotationEnabled:(BOOL)a0;
- (void)_scrollToTopViewsUnderScreenPointIfNecessary:(struct CGPoint { double x0; double x1; })a0 resultHandler:(id /* block */)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 toCoordinateSpace:(id)a1;
- (id)_debugName;
- (void)_setRotatableViewOrientation:(long long)a0 updateStatusBar:(BOOL)a1 duration:(double)a2 force:(BOOL)a3;
- (void)_setScene:(id)a0;
- (void)_updateInterfaceOrientationFromDeviceOrientationIfRotationEnabled:(BOOL)a0;
- (void)handleStatusBarChangeFromHeight:(double)a0 toHeight:(double)a1;
- (BOOL)_disableAutomaticKeyboardBehavior;
- (void)_didUpdateFocusInContext:(id)a0 withAnimationCoordinator:(id)a1;
- (void)_createSystemGestureGateGestureRecognizerIfNeeded;
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;
- (id)parentFocusEnvironment;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })safeAreaInsets;
- (BOOL)_isTextEffectsWindow;
- (void)_willUpdateFocusInContext:(id)a0 withAnimationCoordinator:(id)a1;
- (void)encodeWithCoder:(id)a0;
- (void)_prepareHierarchyForWindowHostingSceneRemoval;
- (id)_initWithOrientation:(long long)a0;
- (void)setResizesToFullScreen:(BOOL)a0;
- (void)_resizeWindowToFullScreenIfNecessary;
- (void)awakeFromNib;
- (BOOL)_becomeFirstResponderWhenPossible;
- (void)_orderFrontWithoutMakingKey;
- (BOOL)_isSecure;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_sceneBounds;
- (void)endDisablingInterfaceAutorotationAnimated:(BOOL)a0;
- (BOOL)_canAffectStatusBarAppearance;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })a0 fromWindow:(id)a1;
- (BOOL)_windowControlsStatusBarOrientation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_sceneReferenceBounds;
- (BOOL)_canActAsKeyWindowForScreen:(id)a0;
- (id)_associatingSceneLayer;
- (unsigned int)_contextId;
- (void)setRestorationIdentifier:(id)a0;
- (BOOL)_needsShakesWhenInactive;
- (void)_installFocusIfNeededForFocusSystemSceneComponent:(id)a0;
- (void)_removeFocusIfNeededForFocusSystemSceneComponent:(id)a0;
- (id)_centerExpressionInContainer:(id)a0 vertical:(BOOL)a1 contentInsetScale:(double)a2 engine:(id)a3;
- (BOOL)_isLoweringAnchoringConstraints;
- (void)_setIsLoweringAnchoringConstraints:(BOOL)a0;
- (void)_parentWillTransitionToTraitCollection:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_referenceFrameFromSceneUsingScreenBounds:(BOOL)a0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (double)_rotationDuration;
- (void)_resetFocusEventRecognizer;
- (id)traitCollection;
- (void)_invalidateWindowInternalConstraints;
- (void)_switchToLayoutEngine:(id)a0;
- (void)_initializeLayoutEngineDiscardingOldIfNeeded:(BOOL)a0;
- (void)_initializeLayoutEngine;
- (id)_uiib_candidateRedundantConstraints;
- (id)_descendantWithAmbiguousLayout;
- (BOOL)_hasAmbiguousLayout;
- (void)exerciseAmbiguityInLayout;
- (id)_layoutEngineIfAvailable;
- (id)_redundantConstraints;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)_uiib_layoutEngineCreatingIfNecessary;
- (BOOL)hasAmbiguousLayout;
- (BOOL)_shouldRecognizeEventsInFocusEventRecognizer:(id)a0;
- (BOOL)_focusEventRecognizer:(id)a0 didRecognizeFocusMovementRequest:(id)a1;
- (void)_focusEventRecognizer:(id)a0 didRecognizeFastScrollingRequest:(id)a1;
- (struct CGPoint { double x0; double x1; })_convertPointFromSceneReferenceSpace:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_convertRectFromSceneReferenceSpace:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_dismissAccessibilityHUD;
- (double)level;
- (BOOL)canPerformAction:(SEL)a0 withSender:(id)a1;
- (void)_setCanvas:(id)a0;
- (BOOL)_allowsLinkPreviewInteractionInViewServices;
- (void)_willSnapshot;
- (void)_sceneBoundsDidChange;
- (void)_updateConstraintsIfNeededWithViewForVariableChangeNotifications:(id)a0;
- (void)_constraints_subviewWillChangeSuperview:(id)a0;
- (long long)_subclassPreferredFocusedViewPrioritizationType;
- (void)_moveWithEvent:(id)a0;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (long long)_orientationForRootTransform;
- (void)updateKeyboardForAssistantBar:(BOOL)a0;
- (void)_updateSystemConstraints;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 debugName:(id)a1 windowScene:(id)a2;
- (long long)_orientationForViewTransform;
- (int)windowOutput;
- (BOOL)_shouldPrepareScreenForWindow;
- (BOOL)_canBecomeLayoutEngineDelegate;
- (void)resignKeyWindow;
- (BOOL)autorotates;
- (double)_touchSloppinessFactor;
- (BOOL)isTrackingKeyboard;
- (BOOL)updateKeyboardSize:(struct CGSize { double x0; double x1; })a0;
- (void)makeKeyWindow;
- (struct CGPoint { double x0; double x1; })_convertPointToSceneReferenceSpace:(struct CGPoint { double x0; double x1; })a0;
- (void)setDelegate:(id)a0;
- (void)updateKeyboardAnimationOptions:(unsigned long long)a0 duration:(double)a1;
- (BOOL)updateKeyboardOffset:(struct UIOffset { double x0; double x1; })a0;
- (void)toggleKeyboardLayoutGuideAnimation:(BOOL)a0;
- (void)updateKeyboardDockedState:(BOOL)a0;
- (BOOL)_requiresKeyboardPresentationFence;
- (id)_responderSelectionContainerViewForResponder:(id)a0;
- (void)_setRotatableViewOrientation:(long long)a0 duration:(double)a1 force:(BOOL)a2;
- (void)_setSecure:(BOOL)a0;
- (BOOL)_shouldDelayTouchForSystemGestures:(id)a0;
- (void)_updateWindowEngineHostConstraintsWithSizing:(BOOL)a0;
- (unsigned long long)_expectedWindowInternalConstraintsCount;
- (void)_windowInternalConstraints_sizeDidChange;
- (void)_windowInternalConstraints_centerDidChange;
- (void)_uiib_invalidateWindowInternalConstraints;
- (void)_traitCollectionDidChangeOnSubtreeInternal:(const struct _UITraitCollectionChangeDescription { id x0; id x1; BOOL x2; struct _UITraitCollectionTraitChanges { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; } x3; } *)a0;
- (void)_matchDeviceOrientation;
- (struct __CFDictionary { } *)_touchMap;
- (void)orderOut:(id)a0;
- (BOOL)_isStatusBarWindow;
- (void)_updateToInterfaceOrientation:(long long)a0 animated:(BOOL)a1;
- (long long)_orientationForClassicPresentation;
- (void)_forwardFocusMovementAction:(id)a0;
- (id)_roleHint;
- (void)_setFirstResponder:(id)a0;
- (id)_rotationViewControllers;
- (BOOL)isInterfaceAutorotationDisabled;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })a0 toWindow:(id)a1;
- (id)_eventRoutingScene;
- (BOOL)isUsingOnePartRotationAnimation;
- (void)makeKeyAndVisible;
- (void)_updateInterfaceOrientationFromDeviceOrientation:(BOOL)a0;
- (BOOL)_canBecomeKeyWindow;
- (void)_updateRootViewConstraintsForInterfaceOrientationAndStatusBarHeight;
- (unsigned long long)_supportedInterfaceOrientationsForRootViewController;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_overlayInsets;
- (unsigned long long)_edgeForTouch:(id)a0;
- (BOOL)_includeInDefaultImageSnapshot;
- (BOOL)isRotating;
- (BOOL)_wantsFocusEngine;
- (void)setHidden:(BOOL)a0;
- (BOOL)_windowOwnsInterfaceOrientation;
- (id)restorationIdentifier;
- (long long)_overriddenInterfaceOrientation;
- (void)_handleStatusBarOrientationChange:(id)a0;
- (BOOL)_appearsInLoupe;
- (id)undoManager;
- (void)_clearSizeClassesForStateRestoration;
- (void)_setStateRestorationVerticalSizeClass:(long long)a0 horizontalSizeClass:(long long)a1;
- (BOOL)_systemGestureRecognitionIsPossible;
- (long long)_orientationInSceneSpace;
- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 toWindow:(id)a1;
- (BOOL)_supportsBecomeFirstResponderWhenPossible;
- (void)orderFront:(id)a0;
- (id)_boundingPath;
- (void)_setHidden:(BOOL)a0 forced:(BOOL)a1;
- (BOOL)isInternalWindow;
- (void)_installFocusEventRecognizer;
- (void)_commonInitDebugName:(id)a0 uiScene:(id)a1;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 debugName:(id)a1 attached:(BOOL)a2;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 debugName:(id)a1 scene:(id)a2 attached:(BOOL)a3;
- (void)_updateLayerOrderingAndSetLayerHidden:(BOOL)a0;
- (void)_adjustFramePositionIfNecessary;
- (int)bitsPerComponent;
- (BOOL)_isTextEffectsWindowNotificationOwner;
- (void)_removeAllViewControllersFromWindowHierarchyFromDealloc:(BOOL)a0;
- (void)_setTouchMap:(struct __CFDictionary { } *)a0;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })_viewTransformForInterfaceOrientation:(long long)a0;
- (void)_sendTouchesForEvent:(id)a0;
- (BOOL)_windowOwnsInterfaceOrientationTransform;
- (void)_updateAutorotationResponse:(BOOL)a0;
- (void)keyboardDidHide;
- (void)_sceneSettingsSafeAreaInsetsDidChange;
- (BOOL)inhibitSetupOrientation;
- (BOOL)inhibitManualTransform;
- (BOOL)inhibitTextEffectsRotation;
- (void)_configureRootLayer:(id)a0 sceneTransformLayer:(id)a1 transformLayer:(id)a2;
- (void)_cancelEnqueuedDeferredOrientationUpdateIfNeeded;
- (void)setupForOrientation:(long long)a0;
- (void)matchDeviceOrientation:(id)a0;
- (double)_classicOffset;
- (id)_keyboardSceneSettings;
- (struct CGPoint { double x0; double x1; })warpPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_didMoveFromScreen:(id)a0 toScreen:(id)a1;
- (id)_touchData;
- (void)_removeFocusEventRecognizer;
- (BOOL)_shouldUseRemoteContext;
- (void)traitCollectionDidChange:(id)a0;
- (BOOL)keepContextInBackground;
- (BOOL)_shouldScaleByPixelDoubling;
- (id)init;
- (BOOL)_allowsOcclusionDetectionOverride;
- (void)_updateLayerOrderingAndSetLayerHidden:(BOOL)a0 actionBlock:(id /* block */)a1;
- (id)_clientsForRotation;
- (id)_rootViewConstraintsUpdateIfNecessaryForView:(id)a0;
- (void)_sendButtonsForEvent:(id)a0;
- (BOOL)_resizeWindowFrameToSceneBoundsIfNecessary;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_normalizedSafeAreaInsets;
- (void)addRootViewControllerViewIfPossible;
- (id)_registeredScrollToTopViews;
- (id)_bindingLayer;
- (BOOL)_isSettingFirstResponder;
- (void)_didCreateRootPresentationController;
- (double)_chargeMultiplicationFactor;
- (id)delegate;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_sceneSafeAreaInsetsIncludingStatusBar:(BOOL)a0;
- (BOOL)_updatesSafeAreaInsetsOnRead;
- (BOOL)_reversesLinearFocusWrapping;
- (long long)_interfaceOrientationForSceneSafeAreaInsetsIncludingStatusBar:(BOOL)a0;
- (BOOL)_isScrollingEnabledForView:(id)a0;
- (void)_fadeCalloutBarIfNeededForTouchInView:(id)a0;
- (BOOL)_touchesInsideShouldHideCalloutBarForViewHierarchy:(id)a0;
- (id)_rootForKeyResponderCycle;
- (void)_executeDeferredOrientationUpdate;
- (BOOL)_isInAWindow;
- (void)_willChangeToSize:(struct CGSize { double x0; double x1; })a0 orientation:(long long)a1 screen:(id)a2 withTransitionCoordinator:(id)a3;
- (BOOL)_guardSizeTransitionFromAnimations;
- (void)_handleDeviceOrientationChange:(id)a0;
- (id)_layoutEngineCreateIfNecessary;
- (void)_enqueueDeferredOrientationUpdateIfNeeded;
- (void)_updateToNotificationProvidedInterfaceOrientation:(long long)a0 animated:(BOOL)a1;
- (void)setAutorotates:(BOOL)a0 forceUpdateInterfaceOrientation:(BOOL)a1;
- (BOOL)resizesToFullScreen;
- (void)_handleSBActiveInterfaceOrientationChange:(id)a0;
- (void)_notifyRotatableViewOrientation:(long long)a0 duration:(double)a1;
- (void)_setNeedsBoundingPathUpdate;
- (BOOL)_ignoresHitTest;
- (void)_rotateToBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withAnimator:(id)a1 transitionContext:(id)a2;
- (void)_tintColorDidChange;
- (void)_rotateWindowToOrientation:(long long)a0 updateStatusBar:(BOOL)a1 duration:(double)a2 skipCallbacks:(BOOL)a3;
- (BOOL)_isWindowServerHostingManaged;
- (id)__clientsForRotationCallbacks;
- (void)_finishedFullRotation:(BOOL)a0 context:(id)a1 skipNotification:(BOOL)a2;
- (void)_updateWindowTraitsAndNotify:(BOOL)a0;
- (BOOL)_shouldPropagateTraitCollectionChanges;
- (id)_traitCollectionForSize:(struct CGSize { double x0; double x1; })a0 screen:(id)a1;
- (id)_traitCollectionForSize:(struct CGSize { double x0; double x1; })a0 parentCollection:(id)a1;
- (void)_updateIsSceneSizedFlag;
- (id)_traitCollectionForSize:(struct CGSize { double x0; double x1; })a0 parentCollection:(id)a1 localOverrideCollection:(id)a2;
- (void)_setRoleHint:(id)a0;
- (void)_localOverrideTraitCollectionWillChange:(id)a0;
- (void)_willTransitionToTraitCollection:(id)a0 withTransitionCoordinator:(id)a1;
- (void)_autolayout_windowDidChangeBoundsFrom:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_autolayout_windowDidChangeCenterFrom:(struct CGPoint { double x0; double x1; })a0;
- (void)_unregisterChargedView:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)_mainQueue_makeKeyAndVisible;
- (void)_setIsSettingFirstResponder:(BOOL)a0;
- (id)_firstResponder;
- (void)_adjustSizeClassesAndResizeWindowToFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)_definesDynamicTintColor;
- (id)_hitTestLocation:(struct CGPoint { double x0; double x1; })a0 inScene:(id)a1 withWindowServerHitTestWindow:(id)a2 event:(id)a3;
- (id)_accessibilityHUDContainerViewForView:(id)a0;
- (void)addKeyboardLayoutGuideIfNeeded:(id)a0;
- (void)updateKeyboardTransitionState:(BOOL)a0;
- (BOOL)_isConstrainedByScreenJail;
- (BOOL)_shouldTextEffectsWindowBeHostedForView:(id)a0;
- (BOOL)_isSceneSized;
- (id)_layerForCoordinateSpaceConversion;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 fromWindow:(id)a1;
- (unsigned long long)_edgesForSystemGesturesTouchDelay;
- (id)representation;
- (id)_focusedView;
- (void)removeKeyboardLayoutGuideIfNeeded:(id)a0;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 debugName:(id)a1 canvas:(id)a2;
- (void)_commonInitAttachedWindow:(BOOL)a0 debugName:(id)a1 scene:(id)a2;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 debugName:(id)a1;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 debugName:(id)a1 displayConfiguration:(id)a2;
- (void)makeKeyAndOrderFront:(id)a0;
- (id)_contextOptionsWithInitialOptions:(id)a0;
- (void)_transformLayerShouldMaskToBounds:(BOOL)a0;
- (id)_rootSheetPresentationController;
- (BOOL)_transformLayerIncludesScreenRotation;
- (id)_layerForTimeOffsetModification;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_safeAreaInsetsInSuperview:(id)a0;
- (struct CGPoint { double x0; double x1; })_convertOffset:(struct CGPoint { double x0; double x1; })a0 toWindow:(id)a1;
- (void)setAutorotates:(BOOL)a0;
- (id)firstResponder;
- (id)_targetForStolenStatusBarTouchesAtPoint:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1 excludingWindow:(id)a2;
- (struct CGPoint { double x0; double x1; })_convertOffset:(struct CGPoint { double x0; double x1; })a0 fromWindow:(id)a1;
- (struct CGPoint { double x0; double x1; })_convertOffsetToSceneReferenceSpace:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })_convertOffsetFromSceneReferenceSpace:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })convertWindowToDevice:(struct CGPoint { double x0; double x1; })a0;
- (double)_convertVisualAltitude:(double)a0 fromWindow:(id)a1;
- (double)_convertVisualAltitude:(double)a0 toWindow:(id)a1;
- (struct CGPoint { double x0; double x1; })convertDeviceToWindow:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)_canPromoteFromKeyWindowStack;
- (void)_clearPendingKeyboardChanges;
- (BOOL)_isAnyWindowRotating;
- (BOOL)_isRemoteKeyboardWindow;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_convertRectToSceneReferenceSpace:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_updateInterfaceOrientationFromDeviceOrientation;
- (void)_registerChargedView:(id)a0;
- (void)redo:(id)a0;
- (void)_setRotatableViewOrientation:(long long)a0 duration:(double)a1;
- (void)_forceTwoPartRotationAnimation:(BOOL)a0;
- (void)_setRotatableViewOrientation:(long long)a0 updateStatusBar:(BOOL)a1 duration:(double)a2;
- (void *)createIOSurface;
- (void)_finishedFirstHalfRotation:(id)a0 finished:(BOOL)a1 context:(id)a2;
- (void)_makeExternalKeyWindow;
- (void)_finishedFullRotation:(id)a0 finished:(id)a1 context:(id)a2;
- (void)_registerScrollToTopView:(id)a0;
- (void)_setWindowInterfaceOrientation:(long long)a0;
- (void)_localOverrideTraitCollectionDidChange;
- (void)becomeKeyWindow;
- (void)_setSystemGestureRecognitionIsPossible:(BOOL)a0 andTouchesAreCancelled:(BOOL)a1;
- (void)_unregisterScrollToTopView:(id)a0;
- (void)_setIsResigningFirstResponderFromHost:(BOOL)a0;
- (BOOL)_isResigningFirstResponderFromHost;
- (struct CGPoint { double x0; double x1; })_constrainTouchLocationToScene:(struct CGPoint { double x0; double x1; })a0;
- (id)_targetWindowForPathIndex:(long long)a0 atPoint:(struct CGPoint { double x0; double x1; })a1 forEvent:(id)a2 windowServerHitTestWindow:(id)a3;
- (struct CGPoint { double x0; double x1; })_transformDisplayToWindowCoordinates:(struct CGPoint { double x0; double x1; })a0;
- (void)setKeepContextInBackground:(BOOL)a0;
- (BOOL)_containedInAbsoluteResponderChain;
- (id)_subtreeMonitorsForView:(id)a0;
- (void)_writeLayerTreeToPath:(id)a0;
- (void)_showAccessibilityHUDItem:(id)a0 forView:(id)a1;
- (void)_commonInit;
- (BOOL)_shouldControlAutorotation;
- (void)_removeWindowLevelChangedObserver:(id)a0;
- (void)_addWindowLevelChangedObserver:(id)a0;
- (BOOL)_hasSystemGestureGate;
- (void)setBecomeKeyOnOrderFront:(BOOL)a0;
- (void)_updateWindowTraits;
- (void)_didMoveFromScene:(id)a0 toScene:(id)a1;
- (BOOL)_shouldForceTraitPropagationThroughHierarchy;
- (id)_aboveWindowScrollView;
- (double)_adjustedWindowLevelFromLevel:(double)a0;
- (double)_bindableLevel;
- (BOOL)_constrainsHoverEventHitTesting;
- (void)_updateInterfaceOrientationFromActiveInterfaceOrientation:(BOOL)a0;
- (void)_updateInterfaceOrientationFromActiveInterfaceOrientation;
- (void)_performTouchContinuationWithOverrideHitTestedView:(id)a0;
- (void)removeFromSuperview;
- (id)_responderWindow;
- (BOOL)_shouldAdjustSizeClassesAndResizeWindow;
- (long long)_orientationForSceneTransform;
- (BOOL)_shouldAutorotateToInterfaceOrientation:(long long)a0;
- (id)preferredFocusEnvironments;
- (BOOL)_isHostingPortalViews;
- (BOOL)_isHostedInAnotherProcess;
- (id)preferredFocusedView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_usableBounds;
- (void)_setExclusiveTouchView:(id)a0;
- (id)gestureParent;
- (void *)createIOSurfaceWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)_extendsScreenSceneLifetime;
- (BOOL)_isTextEffectsWindowHosting;
- (BOOL)becomeFirstResponder;
- (void)dealloc;
- (id)_delegateViewController;
- (void)_updateToInterfaceOrientation:(long long)a0 duration:(double)a1 force:(BOOL)a2;
- (void)_unregisterSubtreeMonitor:(id)a0;
- (id)_hostingWindow;
- (void)_registerSubtreeMonitor:(id)a0;
- (void)_addRotationViewController:(id)a0;
- (void)_setDelegateViewController:(id)a0;
- (void)_removeRotationViewController:(id)a0;
- (void)beginDisablingInterfaceAutorotation;
- (id)_exclusiveTouchView;
- (void)_setWindowControlsStatusBarOrientation:(BOOL)a0;
- (void)_setRotatableClient:(id)a0 toOrientation:(long long)a1 updateStatusBar:(BOOL)a2 duration:(double)a3 force:(BOOL)a4 isRotating:(BOOL)a5;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_managedSafeAreaInsets;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_usableSceneBounds;
- (id)_hostingHandle;
- (void)_configureContextOptions:(id)a0;
- (id)_screen;
- (id)initWithWindowScene:(id)a0;
- (BOOL)_usesWindowServerHitTesting;
- (void)setContentView:(id)a0;
- (id)initWithContentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)_appearanceContainer;
- (BOOL)_isAlwaysKeyboardWindow;
- (BOOL)_shouldCreateContextAsSecure;
- (id)_normalInheritedTintColor;
- (long long)_sceneOrientation;
- (struct CGPoint { double x0; double x1; })_convertDoublePointToSceneReferenceSpace:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })_convertDoublePointFromSceneReferenceSpace:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)_wantsSceneAssociation;
- (BOOL)_shouldResizeWithScene;
- (BOOL)_cachedTraitCollectionIsValid;
- (id)_overridingPreferredFocusEnvironment;
- (void)_setWindowHostingScene:(id)a0;
- (void)_updateTransformLayer;
- (id)_windowHostingScene;
- (void)_noteOverlayInsetsDidChange;
- (void)_didSnapshot;
- (long long)_sceneClientOrientation;
- (long long)_windowInterfaceOrientation;
- (id)_uiWindowSceneFromFBSScene:(id)a0;
- (void)_restoreFirstResponder;
- (id)_traitCollectionWhenRotated;
- (id)_focusMovementSystemForFocusEventRecognizer:(id)a0;
- (BOOL)_isTransparentFocusRegion;
- (id)_responderForKeyEvents;
- (long long)interfaceOrientation;
- (id)contentView;

@end
