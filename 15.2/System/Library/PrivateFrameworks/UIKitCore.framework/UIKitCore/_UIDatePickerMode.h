@class UIFont, NSString, NSArray, NSDate, _UIDatePickerView, NSNumberFormatter, NSDateComponents, UIColor;

@interface _UIDatePickerMode : NSObject {
    NSDateComponents *_baseDateComponents;
    unsigned long long *_elements;
    struct _NSRange { unsigned long long location; unsigned long long length; } _maxDayRange;
    struct _NSRange { unsigned long long location; unsigned long long length; } _maxMonthRange;
    NSArray *_dateFormatters;
    UIColor *_todayTextColor;
    UIFont *_amPmFont;
    UIFont *_font;
    UIFont *_defaultTimeFont;
    NSString *_amString;
    NSString *_pmString;
    NSDateComponents *_todayDateComponents;
    NSNumberFormatter *_formatter;
    BOOL _isUsingJapaneseCalendar;
}

@property (weak, nonatomic) _UIDatePickerView *datePickerView;
@property (readonly, nonatomic) UIFont *amPmFont;
@property (readonly, nonatomic) UIFont *font;
@property (readonly, nonatomic) UIFont *defaultTimeFont;
@property (readonly, nonatomic) UIFont *sizedFont;
@property (readonly, nonatomic) NSString *amString;
@property (readonly, nonatomic) NSString *pmString;
@property (nonatomic) unsigned long long numberOfComponents;
@property (nonatomic) unsigned long long *elements;
@property (retain, nonatomic) NSString *localizedFormatString;
@property (retain, nonatomic) NSDate *baseDate;
@property (retain, nonatomic) NSDateComponents *baseDateComponents;
@property (nonatomic) long long yearsSinceBaseDate;
@property (retain, nonatomic) NSDate *originatingDate;
@property (retain, nonatomic) NSDateComponents *selectedDateComponents;
@property (readonly, nonatomic) long long datePickerMode;
@property (readonly, nonatomic) double rowHeight;
@property (readonly, nonatomic) long long displayedCalendarUnits;
@property (readonly, nonatomic) UIColor *todayTextColor;
@property (nonatomic) long long minuteInterval;
@property (retain, nonatomic) NSDateComponents *todayDateComponents;
@property (nonatomic) double todaySinceReferenceDate;
@property (readonly, nonatomic) NSDate *minimumDate;
@property (readonly, nonatomic) NSDateComponents *minimumDateComponents;
@property (readonly, nonatomic) NSDate *maximumDate;
@property (readonly, nonatomic) NSDateComponents *maximumDateComponents;
@property (readonly, nonatomic) double totalComponentWidth;
@property (readonly, nonatomic, getter=is24Hour) BOOL is24Hour;
@property (readonly, nonatomic, getter=isTimeIntervalMode) BOOL isTimeIntervalMode;

+ (void)initialize;
+ (long long)datePickerMode;
+ (unsigned long long)extractableCalendarUnits;
+ (id)_datePickerModeWithMode:(long long)a0 datePickerView:(id)a1;
+ (id)newDateFromGregorianYear:(long long)a0 month:(long long)a1 day:(long long)a2 timeZone:(id)a3;
+ (id)_datePickerModeWithFormatString:(id)a0 datePickerView:(id)a1;

- (id)calendar;
- (void)_updateSelectedDateComponentsWithNewValueInComponent:(long long)a0 usingSelectionBarValue:(BOOL)a1;
- (id)dateComponentsByRestrictingSelectedComponents:(id)a0 withLastManipulatedColumn:(long long)a1;
- (id)locale;
- (id)timeZone;
- (long long)dayForRow:(long long)a0;
- (long long)hourForRow:(long long)a0;
- (long long)yearForRow:(long long)a0;
- (void).cxx_destruct;
- (id)init;
- (void)_shouldReset:(id)a0;
- (void)dealloc;
- (long long)monthForRow:(long long)a0;
- (void)noteCalendarChanged;
- (void)resetComponentWidths;
- (long long)componentForCalendarUnit:(unsigned long long)a0;
- (id)dateFormatterForCalendarUnit:(unsigned long long)a0;
- (id)calendarForFormatters;
- (unsigned long long)calendarUnitForComponent:(long long)a0;
- (id)dateFormatForCalendarUnit:(unsigned long long)a0;
- (void)clearBaseDate;
- (double)totalComponentWidthWithFont:(id)a0;
- (double)widthForCalendarUnit:(unsigned long long)a0 font:(id)a1 maxWidth:(double)a2;
- (void)fixUpElementsForRTL;
- (long long)numberOfRowsForCalendarUnit:(unsigned long long)a0;
- (long long)secondForRow:(long long)a0;
- (long long)_yearlessYearForMonth:(long long)a0;
- (unsigned long long)nextUnitSmallerThanUnit:(unsigned long long)a0;
- (unsigned long long)nextUnitLargerThanUnit:(unsigned long long)a0;
- (id)_dateForYearRow:(long long)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeForCalendarUnit:(unsigned long long)a0;
- (long long)_incrementForStaggeredTimeIntervals;
- (long long)eraForYearRow:(long long)a0;
- (long long)valueForRow:(long long)a0 inCalendarUnit:(unsigned long long)a1;
- (long long)numberOfRowsInComponent:(long long)a0;
- (id)_dateByEnsuringValue:(long long)a0 forCalendarUnit:(unsigned long long)a1;
- (id)dateForRow:(long long)a0 inCalendarUnit:(unsigned long long)a1;
- (long long)valueForDate:(id)a0 dateComponents:(id)a1 calendarUnit:(unsigned long long)a2;
- (long long)rowForValue:(long long)a0 forCalendarUnit:(unsigned long long)a1 currentRow:(long long)a2;
- (long long)rowForDate:(id)a0 dateComponents:(id)a1 component:(long long)a2 currentRow:(long long)a3;
- (BOOL)_monthExists:(long long)a0 inYear:(long long)a1;
- (long long)_numberOfDaysInDateComponents:(id)a0;
- (void)updateSelectedDateComponentsWithNewValueInComponent:(long long)a0;
- (id)fontForCalendarUnit:(unsigned long long)a0;
- (long long)titleAlignmentForCalendarUnit:(unsigned long long)a0;
- (id)titleForRow:(long long)a0 inComponent:(long long)a1;
- (BOOL)_shouldEnableValueForRow:(long long)a0 column:(long long)a1;
- (BOOL)_isComponentScrolling:(long long)a0;
- (BOOL)_shouldEnableValueForRow:(long long)a0 inComponent:(long long)a1 calendarUnit:(unsigned long long)a2;
- (BOOL)_scrollingAnyColumnExcept:(int)a0;
- (double)componentWidthForTwoDigitCalendarUnit:(unsigned long long)a0 font:(id)a1 maxWidth:(double)a2;
- (double)widthForComponent:(long long)a0 maxWidth:(double)a1;
- (double)totalComponentWidth;
- (void)loadDate:(id)a0 animated:(BOOL)a1;
- (long long)validateValue:(long long)a0 forCalendarUnit:(unsigned long long)a1;
- (void)resetSelectedDateComponentsWithValuesUnderSelectionBars;
- (void)updateDateForNewDateRange;
- (id)viewForRow:(long long)a0 inComponent:(long long)a1 reusingView:(id)a2;
- (BOOL)areValidDateComponents:(id)a0 comparingUnits:(long long)a1;
- (void)updateEnabledStateOfViewForRow:(long long)a0 inComponent:(long long)a1;
- (long long)minuteForRow:(long long)a0;

@end
