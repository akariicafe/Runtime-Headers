@class NSDictionary, UIAction, UILayoutGuide, UIBarButtonItemGroup, UIView, UIColor, NSString, NSSet, _UIBarButtonItemAppearanceStorage, UINavigationItem, NSArray, UIMenu, UIToolbarButton, UIImage;
@protocol _UIBarButtonItemViewOwner;

@interface UIBarButtonItem : UIBarItem <UIMenuForcedAutomaticSelectionDelegate, NSCoding> {
    NSString *_title;
    NSSet *_possibleTitles;
    UIImage *_image;
    UIImage *_landscapeImagePhone;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _imageInsets;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _landscapeImagePhoneInsets;
    double _width;
    UIView *_view;
    _UIBarButtonItemAppearanceStorage *_appearanceStorage;
    struct { unsigned char enabled : 1; unsigned char style : 3; unsigned char isSystemItem : 1; unsigned char systemItem : 7; unsigned char viewIsCustom : 1; unsigned char isMinibarView : 1; unsigned char disableAutosizing : 1; unsigned char selected : 1; unsigned char menuIsPrimary : 2; unsigned char imageHasEffects : 1; unsigned char actsAsFakeBackButton : 1; unsigned char springLoaded : 1; unsigned char showsChevron : 1; unsigned char wantsThreeUp : 1; unsigned char changesSelectionAsPrimaryAction : 1; } _barButtonItemFlags;
}

@property (copy, nonatomic, setter=_setStylesForSizingTitles:) NSDictionary *_stylesForSizingTitles;
@property (readonly, nonatomic) BOOL _viewWantsLetterpressImage;
@property (readonly, weak, nonatomic) UIBarButtonItemGroup *buttonGroup;
@property (readonly, copy, nonatomic) NSString *_resolvedLargeContentSizeTitle;
@property (copy, nonatomic, setter=_setLargeContentSizeTitle:) NSString *_largeContentSizeTitle;
@property (readonly, nonatomic) BOOL _needsViewUpdateForLetterpressImage;
@property (retain, nonatomic) UIView *view;
@property (readonly, nonatomic) BOOL isCustomViewItem;
@property (readonly, nonatomic) BOOL isSpaceItem;
@property (nonatomic) BOOL isMinibarView;
@property (weak, nonatomic, setter=_setOwningNavigationItem:) UINavigationItem *_owningNavigationItem;
@property (weak, nonatomic, setter=_setOwningButtonGroup:) UIBarButtonItemGroup *_owningButtonGroup;
@property (weak, nonatomic, setter=_setViewOwner:) id<_UIBarButtonItemViewOwner> _viewOwner;
@property (readonly, nonatomic) BOOL groupRepresentative;
@property (copy, nonatomic, setter=_setAutoValidationHandler:) id /* block */ _autoValidationHandler;
@property (retain, nonatomic, setter=_setPopoverLayoutGuide:) UILayoutGuide *_popoverLayoutGuide;
@property (copy, nonatomic, setter=_setBackButtonAlternateTitles:) NSArray *_backButtonAlternateTitles;
@property (readonly, nonatomic) UIView *_viewForPresenting;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _rectForPresenting;
@property (readonly, nonatomic) BOOL _menuIsPrimary;
@property (nonatomic, getter=_actsAsFakeBackButton, setter=_setActsAsFakeBackButton:) BOOL _actsAsFakeBackButton;
@property (nonatomic, getter=_showsChevron, setter=_setShowsChevron:) BOOL _showsChevron;
@property (nonatomic, getter=_wantsThreeUp, setter=_setWantsThreeUp:) BOOL _wantsThreeUp;
@property (readonly, nonatomic, getter=_isFloatable) BOOL _floatable;
@property (readonly, nonatomic, getter=_isFloating) BOOL _floating;
@property (readonly, nonatomic) UIView *_configuredFloatableView;
@property (readonly, nonatomic) UIView *_referenceView;
@property (nonatomic, setter=_setToolbarCharge:) double _toolbarCharge;
@property (nonatomic, setter=_setMinimumWidth:) double _minimumWidth;
@property (nonatomic, setter=_setMaximumWidth:) double _maximumWidth;
@property (nonatomic, setter=_setFlexible:) BOOL _flexible;
@property (nonatomic, setter=_setShowsBackButtonIndicator:) BOOL _showsBackButtonIndicator;
@property (nonatomic, setter=_setHidden:) BOOL _hidden;
@property (nonatomic) BOOL isKeyboardItem;
@property (nonatomic, getter=isEnabled) BOOL enabled;
@property (readonly, nonatomic) UIToolbarButton *_toolbarButton;
@property (nonatomic, getter=_width, setter=_setWidth:) double _width;
@property (readonly, nonatomic) BOOL isSystemItem;
@property (readonly, nonatomic) long long systemItem;
@property (copy, nonatomic, getter=_possibleSystemItems, setter=_setPossibleSystemItems:) NSSet *possibleSystemItems;
@property (copy, nonatomic, setter=_setPossibleItemVariations:) NSSet *_possibleItemVariations;
@property (retain, nonatomic, setter=_setItemVariation:) UIBarButtonItem *_itemVariation;
@property (nonatomic, getter=selected, setter=setSelected:) BOOL _selected;
@property (nonatomic, setter=_setAdditionalSelectionInsets:) struct UIEdgeInsets { double top; double left; double bottom; double right; } _additionalSelectionInsets;
@property (nonatomic, setter=_setImageHasEffects:) BOOL _imageHasEffects;
@property (copy, nonatomic, setter=_setGestureRecognizers:) NSArray *_gestureRecognizers;
@property (copy, nonatomic, setter=_setInteractions:) NSArray *_interactions;
@property (nonatomic, setter=_setChangesSelectionAsPrimaryAction:) BOOL _changesSelectionAsPrimaryAction;
@property (copy, nonatomic) UIMenu *secondaryActions;
@property (nonatomic) BOOL secondaryActionsArePrimary;
@property (copy, nonatomic, setter=_setSecondaryActionsProvider:) id /* block */ _secondaryActionsProvider;
@property (nonatomic) long long style;
@property (nonatomic) double width;
@property (copy, nonatomic) NSSet *possibleTitles;
@property (retain, nonatomic) UIView *customView;
@property (nonatomic) SEL action;
@property (weak, nonatomic) id target;
@property (copy, nonatomic) UIAction *primaryAction;
@property (copy, nonatomic) UIMenu *menu;
@property (nonatomic) BOOL changesSelectionAsPrimaryAction;
@property (nonatomic, getter=isSelected) BOOL selected;
@property (retain, nonatomic) UIColor *tintColor;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)_getSystemItemStyle:(long long *)a0 title:(id *)a1 image:(id *)a2 selectedImage:(id *)a3 action:(SEL *)a4 forBarStyle:(long long)a5 landscape:(BOOL)a6 alwaysBordered:(BOOL)a7 usingSystemItem:(long long)a8 usingItemStyle:(long long)a9;
+ (id)flexibleSpaceItem;
+ (Class)classForNavigationButton;
+ (id)fixedSpaceItemOfWidth:(double)a0;
+ (id)_appearanceBlindViewClasses;
+ (Class)classForToolbarButton;

- (BOOL)_doc_isMatchingUUID:(id)a0;
- (void)_getSystemItemStyle:(long long *)a0 title:(id *)a1 image:(id *)a2 selectedImage:(id *)a3 action:(SEL *)a4 forBarStyle:(long long)a5 landscape:(BOOL)a6 alwaysBordered:(BOOL)a7;
- (id)nextResponder;
- (void)_getToolbarSystemItemEdgeInsetsWithImageInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; } *)a0 forBarStyle:(long long)a1 landscape:(BOOL)a2 alwaysBordered:(BOOL)a3;
- (double)backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:(long long)a0;
- (void)setBackButtonBackgroundVerticalPositionAdjustment:(double)a0 forBarMetrics:(long long)a1;
- (id)initWithImage:(id)a0 landscapeImagePhone:(id)a1 style:(long long)a2 target:(id)a3 action:(SEL)a4;
- (void)setBackgroundVerticalPositionAdjustment:(double)a0 forBarMetrics:(long long)a1;
- (void)setBackButtonTitlePositionAdjustment:(struct UIOffset { double x0; double x1; })a0 forBarMetrics:(long long)a1;
- (void)encodeWithCoder:(id)a0;
- (double)backgroundVerticalPositionAdjustmentForBarMetrics:(long long)a0;
- (id)_configuredFloatableView;
- (void)_getNavBarEdgeSizeAdjust:(struct CGSize { double x0; double x1; } *)a0 imageInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; } *)a1 landscape:(BOOL)a2;
- (struct UIOffset { double x0; double x1; })backButtonTitlePositionAdjustmentForBarMetrics:(long long)a0;
- (void)setBackButtonBackgroundImage:(id)a0 forState:(unsigned long long)a1 barMetrics:(long long)a2;
- (id)backButtonBackgroundImageForState:(unsigned long long)a0 barMetrics:(long long)a1;
- (id)title;
- (id)window;
- (void)setBackgroundImage:(id)a0 forState:(unsigned long long)a1 style:(long long)a2 barMetrics:(long long)a3;
- (id)_miniImage;
- (void)setTitleTextAttributes:(id)a0 forState:(unsigned long long)a1;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })imageInsets;
- (id)initWithBarButtonSystemItem:(long long)a0 primaryAction:(id)a1;
- (id)initWithBarButtonSystemItem:(long long)a0 target:(id)a1 action:(SEL)a2;
- (id)backgroundImageForState:(unsigned long long)a0 style:(long long)a1 barMetrics:(long long)a2;
- (void)setTitlePositionAdjustment:(struct UIOffset { double x0; double x1; })a0 forBarMetrics:(long long)a1;
- (void)_applyPositionAdjustmentToSegmentedControl:(id)a0;
- (void)setBackgroundImage:(id)a0 forState:(unsigned long long)a1 barMetrics:(long long)a2;
- (id)_foregroundColorForLetterpressWithView:(id)a0;
- (double)_rightImagePaddingForEdgeMarginInNavBar;
- (id)_referenceView;
- (id)_backgroundImageForState:(unsigned long long)a0 compact:(BOOL)a1 type:(long long)a2;
- (double)_leftImagePaddingForEdgeMarginInNavBar;
- (id)titleTextAttributesForState:(unsigned long long)a0;
- (struct UIOffset { double x0; double x1; })titlePositionAdjustmentForBarMetrics:(long long)a0;
- (id)resolvedTitle;
- (BOOL)isSpringLoaded;
- (void)setImageInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a0;
- (id)itemVariation;
- (void)setSpringLoaded:(BOOL)a0;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)a0;
- (id)largeContentSizeImage;
- (void)_setButtonGroup:(id)a0 isRepresentative:(BOOL)a1;
- (id)initWithBarButtonSystemItem:(long long)a0 menu:(id)a1;
- (id)initWithTitle:(id)a0 style:(long long)a1 target:(id)a2 action:(SEL)a3;
- (id)initWithImage:(id)a0 style:(long long)a1 target:(id)a2 action:(SEL)a3;
- (void)forcedSelectionOfMenu:(id)a0 willChangeTo:(id)a1;
- (id)backgroundImageForState:(unsigned long long)a0 barMetrics:(long long)a1;
- (id)init;
- (void)_updateView;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })largeContentSizeImageInsets;
- (id)initWithCoder:(id)a0;
- (void)setLargeContentSizeImageInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a0;
- (void)_setMiniImage:(id)a0;
- (void)setLandscapeImagePhoneInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a0;
- (id)image;
- (id)initWithCustomView:(id)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_miniImageInsets;
- (void)_setSystemItem:(long long)a0;
- (void)_setEnclosingBar:(id)a0 onItem:(id)a1;
- (void)_executeValidationHandler;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })landscapeImagePhoneInsets;
- (void)_setMiniImageInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a0;
- (void)setTitle:(id)a0;
- (void)setLargeContentSizeImage:(id)a0;
- (BOOL)hasImage;
- (id)_imageForState:(unsigned long long)a0 compact:(BOOL)a1 type:(long long)a2;
- (void)_updateForAutomaticSelection;
- (void)dealloc;
- (id)createViewForNavigationItem:(id)a0;
- (void)_sendAction:(id)a0 withEvent:(id)a1;
- (BOOL)_isPopUpMenuButtonWithMenu:(id)a0;
- (id)initWithPrimaryAction:(id)a0;
- (id)createViewForToolbar:(id)a0;
- (BOOL)_isImageBarButtonItem;
- (id)_appearanceStorage;
- (id)_itemForPresenting;
- (void)setImage:(id)a0;
- (void)_setToolbarChange:(double)a0;
- (void)_triggerActionForEvent:(id)a0;
- (BOOL)_resizesBackgroundImage;
- (BOOL)hasTitle;
- (void)setLandscapeImagePhone:(id)a0;
- (id)landscapeImagePhone;
- (id)initWithTitle:(id)a0 menu:(id)a1;
- (id)initWithImage:(id)a0 menu:(id)a1;
- (void)_connectInterfaceBuilderEventConnection:(id)a0;

@end
