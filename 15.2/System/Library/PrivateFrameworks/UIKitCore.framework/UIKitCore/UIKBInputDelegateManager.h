@class UITextInteractionSelectableInputDelegate, UITextInputTraits, NSString, UITextInputPasswordRules, UIResponder, UITextInteractionAssistant;
@protocol UIKeyInput, UIKeyboardInput, UIKeyboardImplStateProtocol;

@interface UIKBInputDelegateManager : NSObject <UIKeyInput> {
    int m_delegateConformanceType;
    BOOL _forwardingInputDelegateConformsToWKInteraction;
    BOOL m_firstResponderAdoptsTextInput;
}

@property (retain, nonatomic) UIResponder<UIKeyInput> *keyInputDelegate;
@property (retain, nonatomic) UITextInteractionSelectableInputDelegate *selectableDelegate;
@property (nonatomic) BOOL insideKeyInputDelegateCall;
@property (weak, nonatomic) id<UIKeyboardImplStateProtocol> keyboardStateDelegate;
@property (weak, nonatomic) UIResponder<UIKeyInput> *forwardingInputDelegate;
@property (nonatomic) BOOL shouldRespectForwardingInputDelegate;
@property (readonly, nonatomic) id<UIKeyboardInput> legacyInputDelegate;
@property (readonly, nonatomic) UITextInputTraits *textInputTraits;
@property (readonly, nonatomic) UITextInteractionAssistant *textInteractionAssistant;
@property (nonatomic) BOOL continuousSpellCheckingEnabled;
@property (readonly, nonatomic) BOOL hasText;
@property (nonatomic) long long autocapitalizationType;
@property (nonatomic) long long autocorrectionType;
@property (nonatomic) long long spellCheckingType;
@property (nonatomic) long long smartQuotesType;
@property (nonatomic) long long smartDashesType;
@property (nonatomic) long long smartInsertDeleteType;
@property (nonatomic) long long keyboardType;
@property (nonatomic) long long keyboardAppearance;
@property (nonatomic) long long returnKeyType;
@property (nonatomic) BOOL enablesReturnKeyAutomatically;
@property (nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property (copy, nonatomic) NSString *textContentType;
@property (copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeForTextRange:(id)a0 document:(id)a1;

- (BOOL)requiresKeyEvents;
- (id)beginningOfDocument;
- (void)setAttributedMarkedText:(id)a0 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (unsigned int)_characterBeforeCaretSelection;
- (void)clearDelegate;
- (BOOL)_deleteForwardAndNotify:(BOOL)a0;
- (void)handleClearWithInsertBeforeAdvance:(id)a0;
- (void)setBaseWritingDirection:(long long)a0 forRange:(id)a1;
- (BOOL)callShouldReplaceExtendedRange:(long long)a0 withText:(id)a1 includeMarkedText:(BOOL)a2;
- (void)clearForwardingInputDelegateAndResign:(BOOL)a0;
- (void)collapseSelectionAndAdjustByOffset:(long long)a0;
- (id)delegateRespectingForwardingDelegate:(BOOL)a0;
- (id)inputSystemSourceSession;
- (void)deleteBackward;
- (void)replaceRange:(id)a0 withText:(id)a1;
- (void)insertText:(id)a0 alternatives:(id)a1 style:(long long)a2;
- (id)delegateAsResponder;
- (void)insertText:(id)a0;
- (id)markedText;
- (BOOL)_hasMarkedText;
- (id)markedTextRange;
- (id)selectedTextRange;
- (BOOL)shouldDeleteForward;
- (void)insertTextSuggestion:(id)a0;
- (id)textRangeFromPosition:(id)a0 toPosition:(id)a1;
- (void)unmarkText;
- (void)setSelectedTextRange:(id)a0;
- (BOOL)selectionIsWord;
- (id)textInRange:(id)a0;
- (void)unmarkText:(id)a0;
- (long long)comparePosition:(id)a0 toPosition:(id)a1;
- (void)changedSelection;
- (BOOL)insertSupplementalItem:(id)a0 candidate:(id)a1 replacementRange:(id)a2;
- (id)asynchronousInputDelegate;
- (void)insertText:(id)a0 updateInputSource:(BOOL)a1;
- (void)_firstResponderDidChange:(id)a0;
- (id)_textRangeFromNSRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)endOfDocument;
- (void)setDelegate:(id)a0;
- (id)textInputDelegate;
- (void)setupResponderChangeListeners;
- (id)positionFromPosition:(id)a0 offset:(long long)a1;
- (void)handleKeyWebEvent:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)insertAttributedText:(id)a0;
- (void)moveSelectionToEndOfWord;
- (void)_setMarkedText:(id)a0 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)applyAutocorrection:(id)a0 toString:(id)a1 withCompletionHandler:(id /* block */)a2;
- (BOOL)shouldSuppressUpdateCandidateView;
- (void)handleKeyWebEvent:(id)a0;
- (id)_rangeOfText:(id)a0 endingAtPosition:(id)a1;
- (void)_setSelectionToPosition:(id)a0;
- (void)_moveCurrentSelection:(int)a0;
- (long long)baseWritingDirectionForPosition:(id)a0 inDirection:(long long)a1;
- (void)_deleteBackwardAndNotify:(BOOL)a0;
- (void).cxx_destruct;
- (id)init;
- (id)__content;
- (void)insertTextAfterSelection:(id)a0;
- (id)attributedMarkedText;
- (id)privateInputDelegate;
- (void)replaceRange:(id)a0 withText:(id)a1 forKeyboardAction:(int)a2;
- (BOOL)delegateAdoptsWebTextInputPrivate;
- (void)updateSelectableInputDelegateIfNecessary;
- (id)privateKeyInputDelegate;
- (BOOL)selectionIsEndOfWord;
- (void)storeDelegateConformance;

@end
