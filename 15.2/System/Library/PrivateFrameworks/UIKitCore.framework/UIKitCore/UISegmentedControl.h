@class UIView, NSString, UILongPressGestureRecognizer, UISegment, UIVibrancyEffect, UIImageView, NSMutableArray, _UIHostedFocusSystem, UIColor;

@interface UISegmentedControl : UIControl <_UIBasicAnimationFactory, UIPopoverPresentationControllerDelegate, _UIHostedFocusSystemDelegate, CAAnimationDelegate, NSCoding> {
    UIView *_selectionIndicatorView;
    UIImageView *_selectionImageView;
    NSMutableArray *_segments;
    long long _selectedSegment;
    long long _highlightedSegment;
    long long _selectionIndicatorSegment;
    long long _hoveredSegment;
    UISegment *_focusedSegment;
    long long _barStyle;
    id _appearanceStorage;
    double _enabledAlpha;
    UIColor *_selectedSegmentTintColor;
    UIColor *_backgroundTintColor;
    UIVibrancyEffect *_selectedSegmentVibrancyEffect;
    double _innerSegmentSpacing;
    struct { unsigned char size : 2; unsigned char delegateAlwaysNotifiesDelegateOfSegmentClicks : 1; unsigned char momentaryClick : 1; unsigned char tracking : 1; unsigned char autosizeToFitSegments : 1; unsigned char isSizingToFit : 1; unsigned char autosizeText : 1; unsigned char transparentBackground : 1; unsigned char useProportionalWidthSegments : 1; unsigned char translucentBackground : 1; unsigned char appearanceNeedsUpdate : 1; unsigned char selectionIndicatorDragged : 1; unsigned char useInnerSegmentSpacing : 1; unsigned char adjustsForContentSizeCategory : 1; unsigned char useDynamicShadow : 1; unsigned char animatingOutDynamicShadow : 1; unsigned char animatingSeleciton : 1; unsigned char animatingHoverOut : 1; } _segmentedControlFlags;
}

@property (retain, nonatomic) UIView *removedSegment;
@property (retain, nonatomic) UILongPressGestureRecognizer *axLongPressGestureRecognizer;
@property (readonly, nonatomic, getter=_internalFocusSystem) _UIHostedFocusSystem *internalFocusSystem;
@property (readonly, getter=_useDynamicShadow) BOOL useDynamicShadow;
@property (getter=_animatingOutDynamicShadow, setter=_setAnimatingOutDynamicShdaow:) BOOL animatingOutDynamicShadow;
@property (nonatomic) long long segmentedControlStyle;
@property (nonatomic, getter=isMomentary) BOOL momentary;
@property (readonly, nonatomic) unsigned long long numberOfSegments;
@property (nonatomic) BOOL apportionsSegmentWidthsByContent;
@property (nonatomic) long long selectedSegmentIndex;
@property (retain, nonatomic) UIColor *selectedSegmentTintColor;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)_modernBackgroundSelected:(BOOL)a0 disableShadow:(BOOL)a1 maximumSize:(struct CGSize { double x0; double x1; })a2 highlighted:(BOOL)a3 traitCollection:(id)a4 tintColor:(id)a5 size:(int)a6;
+ (BOOL)_updateDynamicShadowView:(id)a0 withAnimationDelegate:(id)a1 useDynamicShadow:(BOOL)a2 animated:(BOOL)a3;
+ (struct CGColor { } *)_backgroundPrimaryColorSelected:(BOOL)a0 highlighted:(BOOL)a1 traitCollection:(id)a2 tintColor:(id)a3;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_selectionFrameForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 size:(int)a1 traitCollection:(id)a2 accessibilityView:(BOOL)a3;
+ (struct CGColor { } *)_dividerPrimaryColorBackground:(BOOL)a0 traitCollection:(id)a1 tintColor:(id)a2;
+ (id)_modernDividerImageBackground:(BOOL)a0 traitCollection:(id)a1 tintColor:(id)a2 size:(int)a3;
+ (double)_sectionIndicatorOverflowForTraitCollection:(id)a0 size:(int)a1;
+ (id)_tvDefaultTextColorDisabledUserInterfaceStyleDark;
+ (double)_cornerRadiusForTraitCollection:(id)a0 size:(int)a1;
+ (id)_tvDefaultTextColorDisabledUserInterfaceStyleLight;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)a0;
+ (double)_sectionIndicatorInsetForTraitCollection:(id)a0 size:(int)a1;
+ (BOOL)_useShadowForSelectedTintColor:(id)a0 traitCollection:(id)a1;
+ (struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })_hiddenSelectionTransform;
+ (id)_selectionPopAnimationForKey:(id)a0 fromValue:(id)a1 toValue:(id)a2;
+ (id)_selectionOpacityAnimationFromValue:(float)a0 toValue:(float)a1;
+ (struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })_highlightSelectionTransform;
+ (double)_selectionOffsetAdjustmentForSegment:(id)a0;
+ (id)_fontForTraitCollection:(id)a0 size:(int)a1 selected:(BOOL)a2;
+ (double)defaultHeightForStyle:(long long)a0 size:(int)a1;
+ (double)_dividerWidthForTraitCollection:(id)a0 size:(int)a1;
+ (double)defaultHeightForStyle:(long long)a0;
+ (BOOL)_selectFocusedSegmentAfterFocusUpdate;
+ (double)_lineWidthForTraitCollection:(id)a0 size:(int)a1;
+ (id)_tvDefaultTextColorSelected;
+ (id)_tvDefaultTextColorFocused;
+ (id)_tvDefaultTextColorDisabledSelected;
+ (id)_tvDefaultTextColorNormalUserInterfaceStyleLight;
+ (id)_tvDefaultTextColorNormalUserInterfaceStyleDark;
+ (double)defaultHeight;

- (id)initWithItems:(id)a0;
- (id)_basicAnimationForView:(id)a0 withKeyPath:(id)a1;
- (int)controlSize;
- (void)layoutSubviews;
- (void)_updateDynamicShadow:(BOOL)a0 animated:(BOOL)a1;
- (void)animationDidStop:(id)a0 finished:(BOOL)a1;
- (void)setBarStyle:(long long)a0;
- (long long)barStyle;
- (void)setControlSize:(int)a0;
- (void)_setDividerImage:(id)a0 forLeftSegmentState:(unsigned long long)a1 rightSegmentState:(unsigned long long)a2 barMetrics:(long long)a3;
- (void)_setBackgroundImage:(id)a0 forState:(unsigned long long)a1 barMetrics:(long long)a2;
- (void)setEnabled:(BOOL)a0;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)viewForLastBaselineLayout;
- (void)_setBackgroundVerticalPositionAdjustment:(double)a0 forBarMetrics:(long long)a1;
- (id)_viewToAddFocusLayer;
- (void)setDividerImage:(id)a0 forLeftSegmentState:(unsigned long long)a1 rightSegmentState:(unsigned long long)a2 barMetrics:(long long)a3;
- (struct CGSize { double x0; double x1; })_intrinsicSizeWithinSize:(struct CGSize { double x0; double x1; })a0;
- (id)dividerImageForLeftSegmentState:(unsigned long long)a0 rightSegmentState:(unsigned long long)a1 barMetrics:(long long)a2;
- (void)_updateSelectionToSegment:(id)a0 highlight:(BOOL)a1 shouldAnimate:(BOOL)a2 sameSegment:(BOOL)a3;
- (void)_setSelected:(BOOL)a0 highlighted:(BOOL)a1 forSegmentAtIndex:(int)a2 forceInfoDisplay:(BOOL)a3;
- (long long)adaptivePresentationStyleForPresentationController:(id)a0;
- (void)pressesCancelled:(id)a0 withEvent:(id)a1;
- (void)encodeWithCoder:(id)a0;
- (struct { double x0; double x1; })_baselineOffsetsAtSize:(struct CGSize { double x0; double x1; })a0;
- (void)pointerInteraction:(id)a0 willEnterRegion:(id)a1 animator:(id)a2;
- (void)_didMoveFromWindow:(id)a0 toWindow:(id)a1;
- (void)setContentPositionAdjustment:(struct UIOffset { double x0; double x1; })a0 forSegmentType:(long long)a1 barMetrics:(long long)a2;
- (void)touchesEnded:(id)a0 withEvent:(id)a1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)pointMostlyInside:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (void)setAlpha:(double)a0;
- (BOOL)canBecomeFocused;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_insertSegmentWithAttributedTitle:(id)a0 atIndex:(unsigned long long)a1 animated:(BOOL)a2;
- (struct UIOffset { double x0; double x1; })contentPositionAdjustmentForSegmentType:(long long)a0 barMetrics:(long long)a1;
- (void)setTitleTextAttributes:(id)a0 forState:(unsigned long long)a1;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (void)touchesMoved:(id)a0 withEvent:(id)a1;
- (unsigned long long)_controlEventsForActionTriggered;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setBackgroundImage:(id)a0 forState:(unsigned long long)a1 barMetrics:(long long)a2;
- (void)insertSegmentWithTitle:(id)a0 atIndex:(unsigned long long)a1 animated:(BOOL)a2;
- (void)removeAllSegments;
- (void)pressesChanged:(id)a0 withEvent:(id)a1;
- (void)setDelegate:(id)a0;
- (BOOL)_focusSystem:(id)a0 containsChildOfHostEnvironment:(id)a1;
- (id)_segmentAtIndex:(int)a0;
- (void)_setSegmentedControlAppearance:(struct { id x0; double x1; double x2; struct { id x0; id x1; id x2; id x3; id x4; struct CGSize { double x0; double x1; } x5; } x3; struct { id x0; id x1; id x2; id x3; id x4; struct CGSize { double x0; double x1; } x5; } x4; struct { id x0; id x1; id x2; id x3; id x4; struct CGSize { double x0; double x1; } x5; } x5; struct { id x0; id x1; id x2; id x3; id x4; struct CGSize { double x0; double x1; } x5; } x6; BOOL x7; } *)a0;
- (void)_setAutosizeText:(BOOL)a0;
- (void)_setAppearanceIsTiled:(BOOL)a0 leftCapWidth:(unsigned long long)a1 rightCapWidth:(unsigned long long)a2;
- (void)setSegmentControlStyle:(long long)a0;
- (void)setTransparentBackground:(BOOL)a0;
- (id)titleForSegmentAtIndex:(unsigned long long)a0;
- (BOOL)adjustsForContentSizeCategory;
- (BOOL)_usesNewAnimations;
- (void)_setUsesNewAnimations:(BOOL)a0;
- (void)insertSegmentWithImage:(id)a0 atIndex:(unsigned long long)a1 animated:(BOOL)a2;
- (void)insertSegmentWithAction:(id)a0 atIndex:(unsigned long long)a1 animated:(BOOL)a2;
- (void)setTitle:(id)a0 forSegmentAtIndex:(unsigned long long)a1;
- (void)setWidth:(float)a0 forSegment:(unsigned long long)a1;
- (void)_updateSelectionIndicator;
- (void)setAction:(id)a0 forSegmentAtIndex:(unsigned long long)a1;
- (double)_innerSegmentSpacing;
- (BOOL)shouldTrack;
- (id)actionForSegmentAtIndex:(unsigned long long)a0;
- (BOOL)_alwaysEmitValueChanged;
- (void)_setAttributedTitle:(id)a0 forSegmentAtIndex:(unsigned long long)a1;
- (id)_attributedTitleForSegmentAtIndex:(unsigned long long)a0;
- (void)setImage:(id)a0 forSegmentAtIndex:(unsigned long long)a1;
- (void)setWidth:(double)a0 forSegmentAtIndex:(unsigned long long)a1;
- (void)setContentOffset:(struct CGSize { double x0; double x1; })a0 forSegmentAtIndex:(unsigned long long)a1;
- (struct CGSize { double x0; double x1; })contentOffsetForSegmentAtIndex:(unsigned long long)a0;
- (void)setEnabled:(BOOL)a0 forSegmentAtIndex:(unsigned long long)a1;
- (BOOL)isEnabledForSegmentAtIndex:(unsigned long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)_animateContentChangeWithAnimations:(id /* block */)a0 completion:(id /* block */)a1;
- (void)pointerInteraction:(id)a0 willExitRegion:(id)a1 animator:(id)a2;
- (void)_setAlwaysEmitValueChanged:(BOOL)a0;
- (id)titleTextAttributesForState:(unsigned long long)a0;
- (void)_setInterSegmentSpacing:(double)a0;
- (id)_uiktest_segmentAtIndex:(unsigned long long)a0;
- (id)_badgeValueForSegmentAtIndex:(unsigned long long)a0;
- (void)_setBadgeValue:(id)a0 forSegmentAtIndex:(unsigned long long)a1;
- (id)_uiktest_labelsWithState:(unsigned long long)a0;
- (void)removeSegment:(unsigned long long)a0 animated:(BOOL)a1;
- (void)setEnabled:(BOOL)a0 forSegment:(unsigned long long)a1;
- (void)setAlwaysNotifiesDelegateOfSegmentClicks:(BOOL)a0;
- (void)setImagePadding:(struct CGSize { double x0; double x1; })a0 forSegment:(unsigned long long)a1;
- (void)insertSegment:(unsigned long long)a0 withTitle:(id)a1 animated:(BOOL)a2;
- (long long)selectedSegment;
- (void)insertSegment:(unsigned long long)a0 withImage:(id)a1 animated:(BOOL)a2;
- (BOOL)isSpringLoaded;
- (void)setContentOffset:(struct CGSize { double x0; double x1; })a0 forSegment:(unsigned long long)a1;
- (BOOL)isEnabledForSegment:(unsigned long long)a0;
- (struct CGSize { double x0; double x1; })contentOffsetForSegment:(unsigned long long)a0;
- (void)_highlightSegment:(long long)a0;
- (void)setSpringLoaded:(BOOL)a0;
- (void).cxx_destruct;
- (void)traitCollectionDidChange:(id)a0;
- (id)backgroundImageForState:(unsigned long long)a0 barMetrics:(long long)a1;
- (id)_tintColorArchivingKey;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withStyle:(long long)a1 withItems:(id)a2;
- (id)initWithCoder:(id)a0;
- (void)_diagnoseFocusabilityForReport:(id)a0;
- (void)updateForMiniBarState:(BOOL)a0;
- (void)_emitValueChanged;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })alignmentRectInsets;
- (long long)adaptivePresentationStyleForPresentationController:(id)a0 traitCollection:(id)a1;
- (void)touchesCancelled:(id)a0 withEvent:(id)a1;
- (id)pointerInteraction:(id)a0 regionForRequest:(id)a1 defaultRegion:(id)a2;
- (void)setAdjustsForContentSizeCategory:(BOOL)a0;
- (void)pressesEnded:(id)a0 withEvent:(id)a1;
- (BOOL)gestureRecognizerShouldBegin:(id)a0;
- (BOOL)_wantsFocusRing;
- (void)dealloc;
- (void)pressesBegan:(id)a0 withEvent:(id)a1;
- (BOOL)transparentBackground;
- (id)pointerInteraction:(id)a0 styleForRegion:(id)a1;
- (id)_backgroundTintColor;
- (void)selectSegment:(int)a0;
- (id)_selectedSegmentVibrancyEffect;
- (void)_sendValueChanged;
- (void)touchesBegan:(id)a0 withEvent:(id)a1;
- (id)_viewForLoweringBaselineLayoutAttribute:(int)a0;
- (void)didUpdateFocusInContext:(id)a0 withAnimationCoordinator:(id)a1;
- (void)_axLongPressHandler:(id)a0;
- (id)imageForSegmentAtIndex:(unsigned long long)a0;
- (void)_clearSelectedSegment;
- (void)hoverOnSegment:(long long)a0;
- (void)_updateAxLongPressGestureRecognizer;
- (void)_commonSegmentedControlInit;
- (void)addSegmentWithTitle:(id)a0;
- (void)__initWithFrameCommonOperations;
- (void)hoverOffSegment:(long long)a0;
- (id)_createAndAddSegmentAtIndex:(int)a0 position:(unsigned int)a1 withInfo:(id)a2;
- (void)_setSelectedSegmentIndex:(long long)a0 notify:(BOOL)a1 animate:(BOOL)a2;
- (id)infoViewForSegment:(long long)a0;
- (void)_setEnabled:(BOOL)a0 forcePropagateToSegments:(BOOL)a1;
- (void)_setSelectedSegmentVibrancyEffect:(id)a0;
- (void)_setBackgroundTintColor:(id)a0;
- (double)widthForSegmentAtIndex:(unsigned long long)a0;
- (void)_setNeedsBackgroundAndContentViewUpdate;
- (void)_setNeedsAppearanceUpdate;
- (BOOL)_disableSlidingControl;
- (void)_updateDividerImageForSegmentAtIndex:(unsigned long long)a0;
- (void)_setControlSize:(int)a0 andInvalidate:(BOOL)a1;
- (void)sizeToFit;
- (void)_insertSegment:(int)a0 withInfo:(id)a1 animated:(BOOL)a2;
- (long long)segmentIndexForActionIdentifier:(id)a0;
- (void)setSelectedSegment:(long long)a0;
- (void)_setAction:(id)a0 forSegmentAtIndex:(unsigned long long)a1;
- (double)_barHeight;
- (void)removeSegmentAtIndex:(unsigned long long)a0 animated:(BOOL)a1;
- (void)_setSelectedSegmentIndex:(long long)a0 notify:(BOOL)a1;
- (BOOL)_hasEnabledSegment;
- (BOOL)_shouldSelectSegmentAtIndex:(long long)a0;
- (id)titleForSegment:(unsigned long long)a0;
- (id)imageForSegment:(unsigned long long)a0;
- (float)widthForSegment:(unsigned long long)a0;
- (void)_setSelected:(BOOL)a0 forSegmentAtIndex:(int)a1 forceInfoDisplay:(BOOL)a2;
- (void)_setTitleTextAttributes:(id)a0 forState:(unsigned long long)a1;
- (void)_resetForAppearanceChange;
- (void)_selectFocusedSegment;
- (double)_backgroundVerticalPositionAdjustmentForBarMetrics:(long long)a0;
- (long long)_segmentIndexToHighlight:(BOOL *)a0;
- (void)_insertSelectionViewForSegment:(id)a0;
- (long long)segmentControlStyle;
- (void)_setHighlightedSegmentHighlighted:(BOOL)a0;
- (void)_setHoverOnSegment:(long long)a0 hovered:(BOOL)a1;
- (void)setTitle:(id)a0 forSegment:(unsigned long long)a1;
- (int)_closestSegmentIndexAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_tapSegmentAtPoint:(struct CGPoint { double x0; double x1; })a0 touchDown:(BOOL)a1;
- (BOOL)_shouldConsumeEventWithPresses:(id)a0;
- (void)_cancelDelayedFocusAction;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 actions:(id)a1;
- (void)_sendDelayedFocusActionIfNecessary;
- (id)_createSegmentAtIndex:(int)a0 position:(unsigned int)a1 withInfo:(id)a2;
- (void)setImage:(id)a0 forSegment:(unsigned long long)a1;
- (BOOL)useBlockyMagnificationInClassic;
- (id)_preferredFocusEnvironmentsForFocusSystem:(id)a0;
- (void)_focusSystem:(id)a0 didFinishUpdatingFocusInContext:(id)a1;
- (id)_focusMapContainerForFocusSystem:(id)a0;

@end
