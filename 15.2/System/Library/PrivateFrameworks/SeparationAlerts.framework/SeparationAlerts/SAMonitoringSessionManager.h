@class NSUUID, SAPersistenceManager, NSHashTable, TALocationLite, SADeviceRecord, NSMutableDictionary, NSDate, NSMutableSet;
@protocol SAFenceManagerServiceProtocol, SATimeServiceProtocol, TAEventProtocol, SAFenceManagerRequestProtocol, SATravelTypeClassifierServiceProtocol, SAGeoFenceRequestProtocol, SAWithYouDetectorServiceProtocol, SAAnalyticsServiceProtocol;

@interface SAMonitoringSessionManager : NSObject <SAMonitoringSessionManagerServiceProtocol, SAScenarioClassifierClientProtocol, SAWithYouDetectorClientProtocol, SATimeClientProtocol, SATravelTypeClassifierClientProtocol>

@property (weak, nonatomic) id<SATimeServiceProtocol> clock;
@property (retain, nonatomic) id<SAWithYouDetectorServiceProtocol> withYouDetector;
@property (retain, nonatomic) id<SAGeoFenceRequestProtocol> fenceRequestServicer;
@property (retain, nonatomic) id<SAFenceManagerServiceProtocol, SAFenceManagerRequestProtocol> fenceManager;
@property (retain, nonatomic) NSHashTable *clients;
@property (retain, nonatomic) NSMutableDictionary *deviceUUIDtoMonitoringSession;
@property (retain, nonatomic) TALocationLite *lastLocation;
@property (retain, nonatomic) SADeviceRecord *deviceRecord;
@property (retain, nonatomic) id<SAAnalyticsServiceProtocol> analytics;
@property (retain, nonatomic) id<SATravelTypeClassifierServiceProtocol> travelTypeClassifier;
@property (retain, nonatomic) NSMutableDictionary *devices;
@property (retain, nonatomic) NSMutableDictionary *safeLocations;
@property (retain, nonatomic) NSMutableDictionary *deviceUUIDtoSafeLocationUUIDs;
@property (nonatomic) BOOL requestedPeriodicScan;
@property (nonatomic) unsigned long long disabledReasons;
@property (retain, nonatomic) NSDate *caLastAlertDate;
@property (nonatomic) long long caBroughtOutOnTravel;
@property (retain, nonatomic) NSMutableDictionary *deviceUUIDtoAlertContext;
@property (retain, nonatomic) SAPersistenceManager *persistenceManager;
@property (retain, nonatomic) NSUUID *nextScheduledAlarmForPersistenceWrite;
@property (retain, nonatomic) NSUUID *scheduledAlarmForForceUpdateWithYouStatus;
@property (retain, nonatomic) id<TAEventProtocol> currentVisitOrLOIEvent;
@property (retain, nonatomic) id<TAEventProtocol> previousVisitOrLOIEvent;
@property (retain, nonatomic) NSDate *timeOfAttemptToLoadFromPersistence;
@property (nonatomic) BOOL isCompanionConnected;
@property (retain, nonatomic) NSMutableSet *devicesWithToBePopulatedTrackedTravelingStartLocation;
@property (nonatomic) BOOL enabled;
@property (nonatomic) BOOL standby;

+ (id)convertSAMonitoringSessionStateToString:(unsigned long long)a0;
+ (id)createLocationFromCircularRegion:(id)a0 forDevice:(id)a1 withContext:(unsigned long long)a2;

- (void)handleModifiedSafeLocation:(id)a0;
- (void)removeClient:(id)a0;
- (void)modifyDevice:(id)a0;
- (void)removeSafeLocation:(id)a0 forDeviceUUID:(id)a1;
- (BOOL)needPeriodicScan;
- (void)startPeriodicScansIfNeeded;
- (double)minimumTimeSinceScenarioTransitionForAlertForDevice:(id)a0;
- (void)ingestTAEvent:(id)a0;
- (void)notifyEarlyLeftBehind:(id)a0;
- (void)removeDevicesIfNeededPerEvent:(id)a0;
- (void)removeTravelFenceForDevice:(id)a0;
- (void)didForceUpdateWithYouStatus;
- (void)handleModifiedSafeLocation:(id)a0 forDeviceUUID:(id)a1;
- (void)handleNewSafeLocation:(id)a0;
- (void)removeSafeLocationsIfNeededPerNewSet:(id)a0 forDevice:(id)a1;
- (void)startSafeLocation:(id)a0 forDevice:(id)a1;
- (void)addSafeLocationsIfNeededPerNewSet:(id)a0 forDevice:(id)a1;
- (void)bootstrapMonitoringSessionRecord:(id)a0;
- (void)updateLocation:(id)a0;
- (unsigned long long)scenarioClassForDeviceUUID:(id)a0;
- (BOOL)enoughTimeHasPassedBeforeSurfacingAlert:(id)a0 forAlertForDevice:(id)a1;
- (void)addDevice:(id)a0 isLastDeviceEvent:(BOOL)a1;
- (void)handleSeparationForDeviceUUID:(id)a0 withSafeLocationRecommendation:(id)a1 context:(id)a2;
- (void)setSafeLocations:(id)a0 forDeviceUUID:(id)a1;
- (void)requestToStopBackgroundScanning;
- (void)startPeriodicScans;
- (void)handleGeofenceExitedForDeviceUUID:(id)a0;
- (void)cancelMonitoringDevice:(id)a0;
- (BOOL)isWithinCurrentVisitOrLOI:(id)a0;
- (id)initWithWithYouDetector:(id)a0 fenceRequestServicer:(id)a1 fenceManager:(id)a2 travelTypeClassifier:(id)a3 clock:(id)a4 deviceRecord:(id)a5 analytics:(id)a6 persistenceManager:(id)a7;
- (long long)determineTrackedTravelingCount;
- (void)addSafeLocation:(id)a0 forDeviceUUID:(id)a1;
- (void)requestToStartBackgroundScanning;
- (void)notifyLeftBehind:(id)a0 withRegion:(id)a1;
- (void)didChangeTravelTypeFrom:(unsigned long long)a0 to:(unsigned long long)a1;
- (void)attemptToPopulateTrackedTravelingStartLocationForDevice:(id)a0;
- (void)addDevicesIfNeededPerEvent:(id)a0;
- (void)updatedWithYouStatusFrom:(unsigned long long)a0 to:(unsigned long long)a1 forDeviceWithUUID:(id)a2;
- (void).cxx_destruct;
- (BOOL)shouldIssueBookendedNotificationForDevice:(id)a0;
- (void)scheduleNextForceUpdateWithYouStatus;
- (void)configureBackgroundScanning;
- (BOOL)_isOnlyMonitoringDisconnectedCompanionDevice;
- (void)updateSafeLocations:(id)a0;
- (void)didChangeScenarioClassFrom:(unsigned long long)a0 to:(unsigned long long)a1 forDevice:(id)a2;
- (void)notifyWhenLeftBehind:(id)a0;
- (void)changeMonitoringSessionState:(id)a0 toState:(unsigned long long)a1;
- (BOOL)anyDeviceInUnsafeLocation;
- (unsigned long long)stateForDeviceUUID:(id)a0;
- (BOOL)shouldIssueBookendedNotificationBasedOnTimeForDevice:(id)a0;
- (void)addClient:(id)a0;
- (BOOL)addTravelFenceForDevice:(id)a0;
- (void)updateDevicesWithSafeLocations:(id)a0;
- (void)forceStandbyMode:(id)a0;
- (void)stopPeriodicScansIfNotNeeded;
- (void)handleGeofenceEvent:(id)a0;
- (BOOL)allDevicesInSafeLocation;
- (void)removeDisableReason:(unsigned long long)a0;
- (void)checkReunion:(unsigned long long)a0 to:(unsigned long long)a1 forDeviceWithUUID:(id)a2;
- (void)handleSystemStateChanged:(id)a0;
- (BOOL)shouldIssueBookendedNotificationBasedOnLocationForDevice:(id)a0;
- (void)stopPeriodicScans;
- (void)notifyWhileTraveling:(id)a0;
- (void)alarmFiredForUUID:(id)a0;
- (void)removeDeviceWithUUID:(id)a0 isLastDeviceEvent:(BOOL)a1;
- (void)createMonitoringDevice:(id)a0;
- (void)removeAndStopSafeLocationsForDeviceUUID:(id)a0;
- (void)requestToFetchLastVisit;
- (void)stopSafeLocation:(id)a0 forDevice:(id)a1;
- (void)storeSeparationLocation:(id)a0;
- (void)handleRemovedSafeLocation:(id)a0;
- (void)addDisableReason:(unsigned long long)a0;

@end
