@class NSString, NSSet, NSXPCConnection, NSXPCInterface, NSDictionary, NSObject, NSNumber;
@protocol TUConversationManagerDataSourceDelegate, TUConversationMediaControllerDataSourceDelegate, OS_dispatch_queue, TUConversationManagerXPCServer;

@interface TUConversationManagerXPCClient : NSObject <TUConversationManagerXPCClient, TUConversationManagerDataSource>

@property (class, readonly, copy, nonatomic) NSSet *conversationManagerAllowedClasses;
@property (class, retain, nonatomic) id<TUConversationManagerXPCServer> asynchronousServer;
@property (class, retain, nonatomic) id<TUConversationManagerXPCServer> synchronousServer;
@property (class, readonly, nonatomic) NSXPCInterface *conversationManagerClientXPCInterface;
@property (class, readonly, nonatomic) NSXPCInterface *conversationManagerServerXPCInterface;

@property (readonly, nonatomic) struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } accessorLock;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) NSXPCConnection *xpcConnection;
@property (nonatomic) BOOL hasRequestedInitialState;
@property (nonatomic) BOOL hasInitialState;
@property (nonatomic) int shouldConnectToken;
@property (nonatomic) BOOL shouldConnectToHost;
@property (copy, nonatomic) NSDictionary *conversationsByGroupUUID;
@property (copy, nonatomic) NSSet *activitySuggestions;
@property (copy, nonatomic) NSDictionary *activityAuthorizedBundleIdentifiers;
@property (copy, nonatomic) NSNumber *sharePlayAvailable;
@property (copy, nonatomic) NSNumber *screenSharingAvailable;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSDictionary *incomingPendingConversationsByGroupUUID;
@property (readonly, copy, nonatomic) NSDictionary *pseudonymsByCallUUID;
@property (readonly, copy, nonatomic) NSSet *activatedConversationLinks;
@property (nonatomic) BOOL autoSharePlayEnabled;
@property (readonly, nonatomic) BOOL isSharePlayAvailable;
@property (readonly, nonatomic) BOOL isScreenSharingAvailable;
@property (weak, nonatomic) id<TUConversationManagerDataSourceDelegate> delegate;
@property (weak, nonatomic) id<TUConversationMediaControllerDataSourceDelegate> mediaDelegate;

- (void)leaveActivitySession:(id)a0 onConversation:(id)a1;
- (oneway void)remoteScreenShareAttributesChanged:(id)a0 isLocallySharing:(BOOL)a1;
- (oneway void)sharePlayAvailableChanged:(BOOL)a0;
- (id)asynchronousServerWithErrorHandler:(id /* block */)a0;
- (oneway void)conversation:(id)a0 didChangeStateForActivitySession:(id)a1;
- (void)registerWithCompletionHandler:(id /* block */)a0;
- (void)handleServerDisconnect;
- (void)checkLinkValidity:(id)a0 completionHandler:(id /* block */)a1;
- (void)addInvitedMemberHandles:(id)a0 toConversationLink:(id)a1 completionHandler:(id /* block */)a2;
- (void)createActivitySession:(id)a0 onConversation:(id)a1;
- (void)setActivityAuthorization:(BOOL)a0 forBundleIdentifier:(id)a1;
- (void)updateMessagesGroupName:(id)a0 onConversation:(id)a1;
- (void)scheduleConversationLinkCheckInInitial:(BOOL)a0;
- (oneway void)screenSharingAvailableChanged:(BOOL)a0;
- (oneway void)conversation:(id)a0 remoteParticipantWithIdentifier:(unsigned long long)a1 updatedAudioEnabled:(BOOL)a2;
- (void)generateLinkForConversation:(id)a0 completionHandler:(id /* block */)a1;
- (void)getActiveLinksWithCreatedOnly:(BOOL)a0 completionHandler:(id /* block */)a1;
- (void)conversationUpdateMessagesGroupPhoto:(id)a0;
- (oneway void)conversationUpdatedMessagesGroupPhoto:(id)a0;
- (void)addActivitySuggestion:(id)a0;
- (void)getLatestRemoteScreenShareAttributesWithCompletionHandler:(id /* block */)a0;
- (void)refreshActiveConversations;
- (void)_requestInitialStateIfNecessary;
- (oneway void)mediaPrioritiesChangedForConversation:(id)a0;
- (void)requestScreenShareFromMember:(id)a0 conversation:(id)a1;
- (void)_requestInitialStateWithCompletionHandler:(id /* block */)a0;
- (void)setSupportsMessagesGroupProviding:(BOOL)a0;
- (oneway void)conversation:(id)a0 participant:(id)a1 addedNotice:(id)a2;
- (void)setVideoEnabled:(BOOL)a0 forRemoteParticipantWithIdentifier:(unsigned long long)a1 conversation:(id)a2;
- (oneway void)getMessagesGroupDetailsForMessagesGroupUUID:(id)a0 completionHandler:(id /* block */)a1;
- (void)setLinkName:(id)a0 forConversationLink:(id)a1 completionHandler:(id /* block */)a2;
- (void)removeConversationNoticeWithUUID:(id)a0;
- (oneway void)updateActivatedConversationLinks:(id)a0;
- (void)updateConversationWithUUID:(id)a0 participantPresentationContexts:(id)a1;
- (id)synchronousServerWithErrorHandler:(id /* block */)a0;
- (void)activateLink:(id)a0 completionHandler:(id /* block */)a1;
- (void)addRemoteMembers:(id)a0 otherInvitedHandles:(id)a1 toConversation:(id)a2;
- (void)setIgnoreLetMeInRequests:(BOOL)a0 forConversation:(id)a1;
- (oneway void)updateIncomingPendingConversationsByGroupUUID:(id)a0;
- (oneway void)conversation:(id)a0 remoteParticipantWithIdentifier:(unsigned long long)a1 updatedVideoEnabled:(BOOL)a2;
- (void)removeActivitySuggestion:(id)a0;
- (void)renewLink:(id)a0 expirationDate:(id)a1 reason:(unsigned long long)a2 completionHandler:(id /* block */)a3;
- (void)generateLinkWithInvitedMemberHandles:(id)a0 linkLifetimeScope:(long long)a1 completionHandler:(id /* block */)a2;
- (void)getInactiveLinkWithCompletionHandler:(id /* block */)a0;
- (oneway void)conversation:(id)a0 appLaunchState:(unsigned long long)a1 forActivitySession:(id)a2;
- (void).cxx_destruct;
- (id)init;
- (void)rejectPendingMember:(id)a0 forConversation:(id)a1;
- (oneway void)updateConversationsByGroupUUID:(id)a0;
- (void)launchApplicationForActivitySessionUUID:(id)a0 forceBackground:(BOOL)a1 completionHandler:(id /* block */)a2;
- (void)activateConversationNoticeWithActionURL:(id)a0 bundleIdentifier:(id)a1;
- (oneway void)updateActivitySuggestions:(id)a0;
- (oneway void)conversation:(id)a0 requestedScreenShareForParticipant:(id)a1;
- (oneway void)remoteScreenShareEndedWithReason:(id)a0;
- (void)setAudioEnabled:(BOOL)a0 forRemoteParticipantWithIdentifier:(unsigned long long)a1 conversation:(id)a2;
- (void)invalidate;
- (void)linkSyncStateIncludeLinks:(BOOL)a0 WithCompletion:(id /* block */)a1;
- (oneway void)updateActivityAuthorizedBundleIdentifierState:(id)a0;
- (void)getMessagesGroupDetailsForConversationUUID:(id)a0 completionHandler:(id /* block */)a1;
- (void)invalidateLink:(id)a0 completionHandler:(id /* block */)a1;
- (void)kickMember:(id)a0 conversation:(id)a1;
- (oneway void)receivedTrackedPendingMember:(id)a0 forConversationLink:(id)a1;
- (void)dealloc;
- (void)setGridDisplayMode:(unsigned long long)a0 conversation:(id)a1;
- (void)presentDismissalAlertForActivitySession:(id)a0 onConversation:(id)a1;
- (void)launchApplicationForActivitySessionUUID:(id)a0 completionHandler:(id /* block */)a1;
- (void)fetchUpcomingNoticeWithCompletionHandler:(id /* block */)a0;
- (void)approvePendingMember:(id)a0 forConversation:(id)a1;
- (oneway void)conversation:(id)a0 buzzedMember:(id)a1;
- (void)buzzMember:(id)a0 conversation:(id)a1;
- (oneway void)conversation:(id)a0 receivedActivitySessionEvent:(id)a1;
- (void)setDownlinkMuted:(BOOL)a0 forRemoteParticipantsInConversation:(id)a1;
- (oneway void)conversation:(id)a0 addedMembersLocally:(id)a1;
- (void)_invokeCompletionHandler:(id /* block */)a0;

@end
