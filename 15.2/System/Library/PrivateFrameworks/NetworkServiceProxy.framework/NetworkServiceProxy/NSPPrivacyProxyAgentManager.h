@class NSMutableDictionary, NSPProber, NSPFallbackProxyPath, NSDate, NSObject, NSPCandidateQuicProxyPath, NSDictionary, NSPOutageReasonStats, NSMutableArray, NSPQuicProxyPath, NSString, NSPCandidateFallbackProxyPath, NSArray, NWInterface, NWPath;
@protocol OS_dispatch_source, NSPPrivacyProxyAgentManagerDelegate;

@interface NSPPrivacyProxyAgentManager : NSObject <NSPProxyTokenDelegate, NSPProxyPathDelegate, NSPProberDelegate, NSPQUICProxyPathDelegate, NSSecureCoding, NSCopying>

@property (class, readonly) BOOL supportsSecureCoding;

@property (weak) id<NSPPrivacyProxyAgentManagerDelegate> delegate;
@property (retain, nonatomic) NSArray *proxyArray;
@property (retain, nonatomic) NSArray *proxyPathList;
@property (retain, nonatomic) NSMutableArray *proxyPathCustomEnumerator;
@property (retain, nonatomic) NSArray *fallbackProxyPathList;
@property (retain, nonatomic) NSMutableArray *fallbackProxyPathCustomEnumerator;
@property (retain, nonatomic) NSString *overridePreferredProxy;
@property (retain, nonatomic) NSMutableDictionary *savedConfiguredProxies;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *proxyPathEnumeratorRestoreTimer;
@property (nonatomic) unsigned long long proxyPathRestoreIntervalSec;
@property (nonatomic) BOOL forceFallback;
@property (retain, nonatomic) NSPQuicProxyPath *quicProxyPath;
@property (retain, nonatomic) NSPFallbackProxyPath *fallbackProxyPath;
@property (retain, nonatomic) NSPCandidateQuicProxyPath *candidateQuicProxyPath;
@property (retain, nonatomic) NSPCandidateFallbackProxyPath *candidateFallbackProxyPath;
@property (retain, nonatomic) NSPProber *proxyPathProber;
@property (retain, nonatomic) NSPProber *directPathProber;
@property (retain, nonatomic) NWInterface *proberInterface;
@property (retain, nonatomic) NSMutableArray *proxyTokenInfoArray;
@property (retain, nonatomic) NSDate *tokenIssuanceRestrictedUntilDate;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *tokenIssuanceRestrictedUntilTimer;
@property (retain, nonatomic) NWPath *path;
@property (retain, nonatomic) NSDate *lastPathUnsatisfiedDate;
@property (retain, nonatomic) NSDate *lastPrimaryInterfaceChangedDate;
@property (retain, nonatomic) NSDictionary *networkCharacteristics;
@property (nonatomic) BOOL useDefaultInterface;
@property (nonatomic) BOOL subscriber;
@property (nonatomic) BOOL geohashSharingEnabled;
@property (nonatomic) BOOL proxyConnectivityCheckActive;
@property (nonatomic) int linkQuality;
@property (nonatomic) unsigned long long tokenFetchSuccessCount;
@property (nonatomic) unsigned long long tokenFetchFailedCount;
@property (nonatomic) unsigned long long tokenConsumedCount;
@property (nonatomic) unsigned long long tokenExpiredCount;
@property (nonatomic) unsigned long long agentLowWaterMarkHitCount;
@property (nonatomic) unsigned long long cacheLowWaterMarkHitCount;
@property (nonatomic) unsigned long long badTokenCount;
@property (nonatomic) unsigned long long missingTokenCount;
@property (nonatomic) unsigned long long networkProxiesRotated;
@property (nonatomic) unsigned long long networkFallbackProxiesRotated;
@property (nonatomic) unsigned long long proxiesRotated;
@property (retain, nonatomic) NSPOutageReasonStats *outageReasonStats;
@property (nonatomic) long long probingReason;
@property (nonatomic) BOOL reportedTokenOutage;
@property (nonatomic) unsigned long long generation;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL dnsFilteringHintEnabled;

+ (BOOL)proxiesMatch:(id)a0 proxyPathList:(id)a1 ingressProxy:(id)a2 egressProxy:(id)a3 pathWeight:(unsigned long long)a4 supportsFallback:(BOOL)a5;
+ (BOOL)proxyMatch:(id)a0 proxy2:(id)a1;
+ (id)copyUserEventAgentData;
+ (void)removeFromPreferences;
+ (void)removeUserEventAgentData;
+ (id)singleHopFallbackProxyAgentUUID;
+ (unsigned long long)copyProxyPathRestoreIntervalFromPreferences;
+ (BOOL)proxyMatchProxyInfoArray:(id)a0 proxy:(id)a1;
+ (id)singleHopProxyAgentUUID;
+ (id)ingressTokenAgentUUID;
+ (id)copyFromPreferences;
+ (void)removeProxyInfoFromKeychain;
+ (id)multiHopFallbackProxyAgentUUID;
+ (id)multiHopProxyAgentUUID;

- (void)removeExpiredTokens;
- (void)copyProxyInfo:(id)a0;
- (void)probeSuccess:(id)a0;
- (void)handlePathChange:(id)a0;
- (void)originProxyErrorProxyPath:(id)a0 interface:(id)a1 errorCode:(int)a2;
- (void)handleConfigChange;
- (void)probeServerError:(id)a0;
- (id)initWithDelegate:(id)a0;
- (void)pruneProxyTokenInfoArray;
- (long long)failureReasonCodeFromErrorCode:(int)a0;
- (void)sendRTCReportForServiceOutage:(id)a0;
- (id)errorDescriptionForRawErrorCode:(int)a0;
- (void)probeRedirected:(id)a0;
- (id)ingressProxyURL;
- (void)setupFallbackProxyPath;
- (id)descriptionWithIndent:(int)a0 options:(unsigned long long)a1;
- (id)getProxyTokenInfoForProxyInfo:(id)a0;
- (id)createRTCReportPayloadWithOutageStats:(id)a0;
- (id)probingReasonToString;
- (void)encodeWithCoder:(id)a0;
- (void)removeProxyURLFromProxyEnumerator:(id)a0;
- (id)nextFallbackProxyPathWithOverride;
- (void)updateDNSFilteringHint:(BOOL)a0;
- (void)handleTierChange:(BOOL)a0;
- (BOOL)checkTokenFetchOutage;
- (void)reportProxySuccessOnInterface:(id)a0;
- (void)resetProxyErrors;
- (void)cleanupProbingInfo;
- (void)tokenLowWaterMarkReached:(id)a0;
- (void)removeProxyURLFromFallbackProxyEnumerator:(id)a0;
- (void)tokenInfoInvalid:(id)a0;
- (void)sendRTCReportWithFailureType:(long long)a0 errorCode:(int)a1 url:(id)a2;
- (void)setupWithPath:(id)a0 subscriber:(BOOL)a1 geohashSharingEnabled:(BOOL)a2 linkQuality:(int)a3;
- (void)multiHopAgentUnregistered:(id)a0;
- (void)requestAccessToken:(id /* block */)a0;
- (void)connectionErrorsProxyPath:(id)a0 interface:(id)a1 errorCode:(int)a2;
- (void)dnsTimeoutProxyPath:(id)a0 interface:(id)a1;
- (void)setupQuicProxyPath;
- (id)copyPreferredProxyFromPreferences;
- (void)setProxyOutageReason:(id)a0;
- (void)tokenRateLimited:(id)a0 untilDate:(double)a1;
- (void)updateGeohashSharingPreference:(BOOL)a0;
- (void)switchProxy:(id)a0;
- (BOOL)alternateEgressProxyExists:(id)a0 proxyPathEnumerator:(id)a1;
- (id)multiHopFallbackProxyConfigHash:(id)a0;
- (id)outageReasonDescriptionFromOutageReasonSubType:(id)a0;
- (id)failureReasonDescriptionFromReasonCode:(long long)a0;
- (void)reportTokenFetchFailure:(id)a0 statusCode:(long long)a1;
- (BOOL)isSingleHopFallbackProxyAgentRegistered;
- (void).cxx_destruct;
- (BOOL)isProbingActive;
- (void)startProbingForReason:(long long)a0;
- (BOOL)saveToPreferences;
- (void)forceFallback:(BOOL)a0;
- (void)multiHopAgentRegistered:(id)a0;
- (void)setUserEventAgentTokenFetchParameters;
- (void)reportProxyError:(int)a0 interface:(id)a1 proxyPath:(id)a2;
- (id)nextProxyPath:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)egressProxyErrorProxyPath:(id)a0 interface:(id)a1 errorCode:(int)a2;
- (id)hostAndPortFromURL:(id)a0;
- (void)connectionRefusedProxyPath:(id)a0 interface:(id)a1;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)connectionTimeoutProxyPath:(id)a0 interface:(id)a1;
- (void)probeFailed:(id)a0;
- (void)tokenFetchOutage:(id)a0;
- (void)tokenAdded:(id)a0;
- (BOOL)isSingleHopProxyAgentRegistered;
- (BOOL)isMultiHopFallbackProxyAgentRegistered;
- (id)servicenameFromFailureType:(long long)a0;
- (void)updateProxyTokenInfoArray:(id)a0;
- (void)connectionCertErrorProxyPath:(id)a0 interface:(id)a1;
- (void)dealloc;
- (id)createRTCReportPayloadWithCategory:(long long)a0 errorCode:(int)a1 url:(id)a2;
- (void)setTokenIssuanceLimitInterval:(unsigned long long)a0;
- (void)handleLinkQualityChange:(int)a0;
- (BOOL)getForceFallbackFromPreferences;
- (void)updateUserEventAgentData;
- (void)setProxyPathEnumeratorRestoreTimerInterval;
- (id)proxyPathWithIngressProxyURL:(id)a0 egressProxyURL:(id)a1;
- (void)overridePreferredProxy:(id)a0;
- (void)dnsBlockedProxyPath:(id)a0 interface:(id)a1 errorCode:(int)a2;
- (void)setupCandidateFallbackProxyPath;
- (void)setUserEventAgentProberParameters;
- (long long)outageReasonCodeFromOutageReasonType:(id)a0;
- (void)singleHopAgentRegistered:(id)a0;
- (id)nextProxyPathWithOverride;
- (BOOL)isMultiHopProxyAgentRegistered;
- (void)useDefaultNetworkInterface:(BOOL)a0;
- (void)setupCandidateQuicProxyPath;
- (void)updateProxyInfo:(id)a0 proxyPathList:(id)a1 fallbackProxyPathList:(id)a2;
- (id)fallbackProxyPathWithIngressProxyURL:(id)a0 egressProxyURL:(id)a1;
- (void)checkProxyConnectivityOnInterface:(id)a0 proxyConnectivityCheckType:(unsigned long long)a1;
- (void)singleHopAgentUnregistered:(id)a0;
- (void)mergeTokenStats:(id)a0;
- (id)singleHopFallbackProxyConfigHash:(id)a0;

@end
