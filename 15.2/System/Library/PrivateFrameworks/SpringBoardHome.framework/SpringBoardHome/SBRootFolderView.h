@class SBDockIconListView, SBTitledHomeScreenButton, SBFTouchPassThroughView, SBHRootFolderSettings, UILabel, SBDockView, UIViewController, SBSearchGesture, SBSearchBackdropView, UIView, _SBRootFolderViewElementBorrowedAssertion, NSString, SBRootFolder, SBHMinusPageStepper, SBFParallaxSettings, NSHashTable, _SBRootFolderLayoutWrapperView, SBHRootFolderVisualConfiguration;
@protocol SBHRootFolderCustomViewPresenting, SBIconListViewIconLocationTransitioning, SBRootFolderViewDelegate, SBRootFolderViewLayoutManager, BSInvalidatable;

@interface SBRootFolderView : SBFolderView <_UISettingsKeyObserver, SBDockViewDelegate, SBFRemoteBasebandLoggingObserver> {
    SBDockView *_dockView;
    _SBRootFolderLayoutWrapperView *_searchableLeadingCustomWrapperView;
    SBSearchBackdropView *_searchBackdropView;
    SBSearchBackdropView *_trailingCustomBackdropView;
    UIView *_trailingCustomSearchDimmingView;
    double _baseOffsetForDeterminingScrollToSearchThreshold;
    double _pageWidthWhenScrollToSearchBeganDragging;
    BOOL _scrollToSearchIsDraggingOrAnimating;
    double _scrollOffsetWhenScrollingBegan;
    BOOL _wasScrolling;
    BOOL _isLeadingCustomViewBouncing;
    long long _iconListFrameOrientationOverride;
    long long _activeSidebarAnimationCount;
    NSHashTable *_dockOffscreenProgressSettingClients;
    id<BSInvalidatable> _dockStateDumpHandle;
    BOOL _lastEventWasAttemptingToOverscrollFirstPage;
    BOOL _lastEventWasAttemptingToOverscrollLastPage;
}

@property (class, readonly, copy, nonatomic) NSString *dockIconLocation;

@property (nonatomic) _SBRootFolderViewElementBorrowedAssertion *dockBorrowedAssertion;
@property (nonatomic) _SBRootFolderViewElementBorrowedAssertion *pageControlBorrowedAssertion;
@property (retain, nonatomic) SBFTouchPassThroughView *titledButtonsContainerView;
@property (retain, nonatomic) SBTitledHomeScreenButton *doneButton;
@property (retain, nonatomic) SBTitledHomeScreenButton *widgetButton;
@property (nonatomic, getter=isSidebarSlideGestureActive) BOOL sidebarSlideGestureActive;
@property (readonly, nonatomic) unsigned long long sidebarAllowedOrientations;
@property (retain, nonatomic) id<SBIconListViewIconLocationTransitioning> firstListViewIconLocationTransitionHandler;
@property (nonatomic, getter=wasSidebarVisibleWhenScrollingBegan) BOOL sidebarVisibleWhenScrollingBegan;
@property (nonatomic) double scrollingAdjustment;
@property (nonatomic) BOOL allowsFreeScrollingUntilScrollingEnds;
@property (retain, nonatomic) SBHRootFolderSettings *folderSettings;
@property (readonly, nonatomic) unsigned long long ignoresOverscrollOnFirstPageOrientations;
@property (readonly, nonatomic) unsigned long long ignoresOverscrollOnLastPageOrientations;
@property (nonatomic) BOOL userAttemptedToOverscrollFirstPageDuringCurrentGesture;
@property (nonatomic) BOOL userAttemptedToOverscrollLastPageDuringCurrentGesture;
@property (readonly, nonatomic) UILabel *idleTextView;
@property (readonly, nonatomic) UIViewController<SBHRootFolderCustomViewPresenting> *leadingCustomViewController;
@property (readonly, nonatomic) UIViewController<SBHRootFolderCustomViewPresenting> *trailingCustomViewController;
@property (readonly, nonatomic) _SBRootFolderLayoutWrapperView *searchPulldownWrapperView;
@property (readonly, nonatomic) _SBRootFolderLayoutWrapperView *searchableLeadingCustomWrapperView;
@property (readonly, nonatomic) _SBRootFolderLayoutWrapperView *searchableTrailingCustomWrapperView;
@property (readonly, nonatomic) _SBRootFolderLayoutWrapperView *sidebarWrapperView;
@property (readonly, nonatomic) SBHMinusPageStepper *customPageAnimationStepper;
@property (readonly, nonatomic) SBDockIconListView *dockListView;
@property (readonly, nonatomic) id<SBRootFolderViewLayoutManager> layoutManager;
@property (retain, nonatomic) id<SBRootFolderViewLayoutManager> transitioningNewSpecialLayoutManager;
@property (retain, nonatomic) id<SBRootFolderViewLayoutManager> transitioningOldSpecialLayoutManager;
@property (readonly, nonatomic) unsigned long long folderPageManagementAllowedOrientations;
@property (readonly, nonatomic) double leadingCustomViewPageScrollOffset;
@property (readonly, nonatomic) double trailingCustomViewPageScrollOffset;
@property (readonly, nonatomic) double maxDockHeight;
@property (readonly, nonatomic) long long leadingCustomViewPageIndex;
@property (readonly, nonatomic) long long sidebarPageIndex;
@property (readonly, nonatomic) long long trailingCustomViewPageIndex;
@property (readonly, nonatomic) BOOL hidesOffscreenCustomPageViews;
@property (readonly, nonatomic) BOOL shouldFadeDockOutDuringTransitionToLeadingCustomView;
@property (readonly, nonatomic) BOOL shouldFadePageControlOutDuringTransitionToLeadingCustomView;
@property (readonly, nonatomic, getter=isSidebarVisibilityGestureActive) BOOL sidebarVisibilityGestureActive;
@property (readonly, nonatomic) BOOL isPageManagementUITransitioningOutOfVisible;
@property (readonly, nonatomic) SBHRootFolderVisualConfiguration *rootFolderVisualConfiguration;
@property (retain, nonatomic) id<SBRootFolderViewLayoutManager> specialLayoutManager;
@property (weak, nonatomic) id<SBRootFolderViewDelegate> delegate;
@property (retain, nonatomic) SBRootFolder *folder;
@property (readonly, nonatomic) SBFParallaxSettings *parallaxSettings;
@property (nonatomic) unsigned long long dockEdge;
@property (readonly, nonatomic) double dockHeight;
@property (readonly, nonatomic, getter=isDockExternal) BOOL dockExternal;
@property (readonly, nonatomic, getter=isDockPinnedForRotation) BOOL dockPinnedForRotation;
@property (readonly, copy, nonatomic) NSString *dockIconLocation;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } enterEditingTouchRect;
@property (readonly, nonatomic, getter=isDockVisible) BOOL dockVisible;
@property (retain, nonatomic) SBSearchGesture *searchGesture;
@property (readonly, nonatomic) double currentDockOffscreenFraction;
@property (readonly, nonatomic) SBDockView *dockView;
@property (nonatomic) BOOL allowsAutoscrollToLeadingCustomView;
@property (nonatomic) BOOL showsDoneButton;
@property (nonatomic) BOOL showsAddWidgetButton;
@property (nonatomic) double titledButtonsAlpha;
@property (readonly, nonatomic) UIView *leadingCustomView;
@property (readonly, nonatomic) UIView *sidebarView;
@property (readonly, nonatomic) UIView *pullDownSearchView;
@property (readonly, nonatomic) UIView *trailingCustomView;
@property (readonly, nonatomic, getter=isOnLeadingCustomPage) BOOL onLeadingCustomPage;
@property (readonly, nonatomic, getter=isOnTrailingCustomPage) BOOL onTrailingCustomPage;
@property (nonatomic, getter=isLeadingCustomViewPageHidden) BOOL leadingCustomViewPageHidden;
@property (nonatomic) double sidebarVisibilityProgress;
@property (nonatomic, getter=isSidebarPinned) double sidebarPinned;
@property (readonly, nonatomic) double effectiveSidebarVisibilityProgress;
@property (nonatomic, getter=isSidebarEffectivelyVisible) BOOL sidebarEffectivelyVisible;
@property (nonatomic, getter=isLeadingCustomViewBouncing) BOOL leadingCustomViewBouncing;
@property (nonatomic, getter=isSearchHidden) BOOL searchHidden;
@property (nonatomic) BOOL shiftsPullDownSearchForVisibility;
@property (readonly, nonatomic) UIView *leadingCustomViewWrapperView;
@property (readonly, nonatomic) SBSearchBackdropView *searchBackdropView;
@property (readonly, nonatomic) SBSearchBackdropView *trailingCustomBackdropView;
@property (readonly, nonatomic) UIView *trailingCustomSearchDimmingView;
@property (nonatomic) double leadingCustomViewVisibilityProgress;
@property (nonatomic) double trailingCustomViewVisibilityProgress;
@property (nonatomic) double pullDownSearchVisibilityProgress;
@property (readonly, nonatomic, getter=isPageManagementUIVisible) BOOL pageManagementUIVisible;
@property (nonatomic, getter=isOccludedByOverlay) BOOL occludedByOverlay;
@property (nonatomic) double todayViewVisibilityProgress;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)defaultIconLocation;
+ (void)_editButtonLayoutFramesInBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forVisualConfiguration:(id)a1 withTranslationOffset:(double)a2 inRTL:(BOOL)a3 doneButton:(id)a4 addWidgetButton:(id)a5 doneButtonFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a6 addWidgetButtonFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a7;
+ (id)sidebarVisibilityProgressAnimator;

- (void)clientDidChangeDockOffScreenFraction:(id)a0;
- (void)_setupStateDumper;
- (void)setIdleText:(id)a0;
- (id)borrowDockViewForReason:(id)a0;
- (void)prepareForTransition;
- (id)iconLocationForListsWithNonDefaultSizedIcons;
- (void)remoteBasebandLogCollectionStateDidChange:(BOOL)a0;
- (BOOL)isDockViewBorrowed;
- (void)_overscrollScrollPanGestureRecognizerDidUpdate:(id)a0;
- (BOOL)isOnSidebarPage;
- (void)_animateViewsForPullingToSearch;
- (void)_layoutSubviewsForSidebarWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; double x7; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x8; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x9; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x10; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x11; } *)a0;
- (void)getMetrics:(struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; double x7; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x8; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x9; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x10; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x11; } *)a0 dockEdge:(unsigned long long)a1;
- (void)_setupTrailingCustomBackdropViewIfNecessary;
- (id)rootListLayout;
- (BOOL)_isSidebarEnabledForOrientation:(long long)a0;
- (BOOL)_isSidebarEnabledForCurrentOrientation;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })statusBarInsetsForDockEdge:(unsigned long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_scrollViewFrameForDockEdge:(unsigned long long)a0;
- (unsigned long long)_trailingCustomPageCount;
- (void)setPageControlAlpha:(double)a0;
- (id)newHomeScreenButtonBackgroundView;
- (void)returnScalingView;
- (void)getMetrics:(struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; double x7; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x8; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x9; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x10; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x11; } *)a0;
- (void)settings:(id)a0 changedValueForKey:(id)a1;
- (void)_layoutSubviewsForTrailingCustomViewWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; double x7; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x8; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x9; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x10; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x11; } *)a0;
- (void)_updateSidebarViewHidden;
- (void)folderDidChange;
- (double)additionalScrollWidthToKeepVisibleInOneDirection;
- (void)widgetButtonTriggered:(id)a0;
- (void)setShowsAddWidgetButton:(BOOL)a0 animated:(BOOL)a1;
- (void)layoutPageControlWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; double x7; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x8; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x9; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x10; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x11; } *)a0;
- (void)resetIconListViews;
- (BOOL)shouldScrollDockDuringTransitionToLeadingCustomView;
- (void)_reduceMotionStatusDidChange:(id)a0;
- (void)_updateScrollingState:(BOOL)a0;
- (void)iconScrollViewDidCancelTouchTracking:(id)a0;
- (void)scrollViewWillBeginDragging:(id)a0;
- (void)updateIconListIndexAndVisibility:(BOOL)a0;
- (id)iconListViewAtIndex:(unsigned long long)a0;
- (double)internalDockPageControlVerticalMargin;
- (void)updateDockViewOrientation;
- (void)_layoutSubviews;
- (void)enumerateScrollViewPageViewsUsingBlock:(id /* block */)a0;
- (void)updateIconListViews;
- (BOOL)iconScrollView:(id)a0 shouldSetAutoscrollContentOffset:(struct CGPoint { double x0; double x1; })a1;
- (BOOL)_isSidebarCollapsed;
- (double)scrollableWidthForVisibleColumnRange;
- (BOOL)_trailingCustomViewShouldBeIndicatedInPageControl;
- (void)transitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (BOOL)shouldEndSidebarGestureWithSidebarVisibleWithCurrentProgress:(double)a0 velocity:(double)a1;
- (double)_pageWidth;
- (void)folder:(id)a0 didAddIcons:(id)a1 removedIcons:(id)a2;
- (id)iconListViewAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_layoutSubviewsForPulldownSearch;
- (void)_updateDockBackgroundViewForOcclusionByOverlay;
- (void)_updateIconListLegibilitySettings;
- (void)_sidebarScrollPanGestureRecognizerDidUpdate:(id)a0;
- (void)minimumHomeScreenScaleDidChange;
- (void)cleanUpAfterTransition;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_iconListFrameForPageRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 atIndex:(unsigned long long)a1;
- (id)makeTitledButtonOfClass:(Class)a0;
- (id)additionalIconListViews;
- (void)_prepareSidebarViewForOrientationTransition;
- (void)pageControlDidReceiveButtonTap:(id)a0;
- (void)tearDownListViews;
- (id)iconLocationForList:(id)a0;
- (void)_updateEditingStateAnimated:(BOOL)a0;
- (void)layoutIconListsWithAnimationType:(long long)a0 forceRelayout:(BOOL)a1;
- (BOOL)_isSidebarEnabledForPageIndex:(long long)a0;
- (id)descriptionBuilderWithMultilinePrefix:(id)a0;
- (id)borrowPageControlForReason:(id)a0;
- (struct CGPoint { double x0; double x1; })_scrollOffsetForContentAtPageIndex:(long long)a0;
- (long long)_pageCountForPageControl;
- (void)updateAccessibilityTintColors;
- (void)scrollViewDidEndDecelerating:(id)a0;
- (void)didMoveToSuperview;
- (void)_updatePageControlToIndex:(long long)a0;
- (id)iconListViewForIconListModelIndex:(unsigned long long)a0;
- (unsigned long long)_leadingCustomPageCount;
- (struct CGPoint { double x0; double x1; })_scrollOffsetForPageAtIndex:(long long)a0 pageWidth:(double)a1;
- (void)_currentPageIndexDidChangeFromPageIndex:(long long)a0;
- (void)_adjustLeadingCustomContentForEdgeBounce;
- (BOOL)iconScrollView:(id)a0 shouldSetContentOffset:(struct CGPoint { double x0; double x1; } *)a1 animated:(BOOL)a2;
- (void)_updateParallaxSettings;
- (id)accessibilityTintColorForDockView:(id)a0;
- (void)setShowsDoneButton:(BOOL)a0 animated:(BOOL)a1;
- (void)doneButtonTriggered:(id)a0;
- (void)_willScrollToPageIndex:(long long)a0 animated:(BOOL)a1;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (BOOL)shouldPinScrollingToFirstOrLastPageScrollOffsetForProposedScrollOffset:(struct CGPoint { double x0; double x1; } *)a0;
- (void)updateConfigurationOfPageControlToAllowEnteringPageManagement;
- (id)_createIconListViewForList:(id)a0;
- (void)setContentAlpha:(double)a0;
- (void)_cleanupAfterSidebarSlideGestureCompleted:(id)a0;
- (BOOL)scrollViewHeightIncludesPageControlAndDock;
- (void)_cleanUpAfterScrolling;
- (void)exitPageManagementUIWithCompletionHandler:(id /* block */)a0;
- (void)prepareToTearDown;
- (void)_layoutSubviewsForLeadingCustomViewWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; double x7; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x8; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x9; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x10; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x11; } *)a0;
- (void)scrollViewWillEndDragging:(id)a0 withVelocity:(struct CGPoint { double x0; double x1; })a1 targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)a2;
- (double)sidebarVisibilityProgressForLayout;
- (BOOL)_isSidebarEnabledForCurrentPage;
- (void)_updateDockOffscreenFractionWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; double x7; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x8; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x9; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x10; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x11; } *)a0;
- (double)leadingCustomViewPageScrollOffsetUsingPageWidth:(double)a0;
- (struct CGPoint { double x0; double x1; })_scrollView:(id)a0 adjustedOffsetForOffset:(struct CGPoint { double x0; double x1; })a1 translation:(struct CGPoint { double x0; double x1; })a2 startPoint:(struct CGPoint { double x0; double x1; })a3 locationInView:(struct CGPoint { double x0; double x1; })a4 horizontalVelocity:(inout double *)a5 verticalVelocity:(inout double *)a6;
- (BOOL)_isSidebarEnabledForPageIndex:(long long)a0 orientation:(long long)a1;
- (BOOL)_shouldIgnoreOverscrollOnFirstPageForOrientation:(long long)a0;
- (id)iconListViewForExtraIndex:(unsigned long long)a0;
- (void)fadeContentForMinificationFraction:(double)a0;
- (double)_sidebarVisibilityProgressForPanGestureRecognizer:(id)a0 presenting:(BOOL)a1;
- (void)setDelegate:(id)a0;
- (double)_minimumHomeScreenScale;
- (void)setLegibilitySettings:(id)a0;
- (id)initWithConfiguration:(id)a0;
- (id)beginModifyingDockOffscreenFractionForReason:(id)a0;
- (void)scrollViewDidEndScrollingAnimation:(id)a0;
- (void)noteSidebarFinishedAnimating;
- (double)trailingCustomViewPageScrollOffsetUsingPageWidth:(double)a0;
- (void)setNeedsLayout;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_statusBarInsetsForDockEdge:(unsigned long long)a0 dockOffscreenPercentage:(double)a1;
- (void)scrollViewDidEndDragging:(id)a0 willDecelerate:(BOOL)a1;
- (double)sidebarWidthUsingPageWidth:(double)a0;
- (void)setEditing:(BOOL)a0 animated:(BOOL)a1;
- (void)_animateViewsForPullingToSearchWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; double x7; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x8; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x9; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x10; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x11; } *)a0;
- (void)_setupSearchBackdropViewIfNecessary;
- (double)externalDockPageControlVerticalMargin;
- (void).cxx_destruct;
- (void)setOrientation:(long long)a0;
- (void)setSpecialLayoutManager:(id)a0 completionHandler:(id /* block */)a1;
- (void)_animateViewsForScrollingToLeadingOrTrailingCustomView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_scaledBoundsForMinimumHomeScreenScale;
- (void)_resetSearchScrollTrackingState;
- (BOOL)_shouldHideSidebarView;
- (BOOL)_shouldIgnoreOverscrollOnFirstPageForCurrentOrientation;
- (void)configurePageControlToAllowEnteringPageManagement:(BOOL)a0;
- (BOOL)isModifyingDockOffscreenFraction;
- (void)layoutSearchableViewsWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; double x7; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x8; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x9; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x10; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x11; } *)a0;
- (double)sidebarViewPageScrollOffsetUsingPageWidth:(double)a0;
- (void)noteSidebarIsAnimating;
- (void)_updateDockViewZOrdering;
- (id)newDockBackgroundMaterialViewWithInitialWeighting:(double)a0;
- (id)newDockBackgroundView;
- (void)setSidebarVisibilityProgress:(double)a0 animator:(id)a1;
- (void)_setSidebarViewHidden:(BOOL)a0;
- (void)_doPageManagementEducation;
- (void)_setupTrailingCustomDimmingViewIfNecessary;
- (void)willMoveToWindow:(id)a0;
- (BOOL)_shouldIgnoreOverscrollOnLastPageForOrientation:(long long)a0;
- (void)elementBorrowedAssertionDidInvalidate:(id)a0;
- (void)_checkSidebarVisibilityProgressAfterScroll;
- (void)_cleanUpAfterOverscrollScrollGestureEnded:(id)a0;
- (BOOL)_shouldIgnoreOverscrollOnLastPageForCurrentOrientation;
- (BOOL)isPageIndexCustomAndRightmost:(long long)a0;
- (void)setContentVisibility:(unsigned long long)a0;
- (void)dealloc;
- (BOOL)_leadingCustomViewShouldBeIndicatedInPageControl;
- (double)_spotlightFirstIconRowOffset;
- (void)_setupIdleTextPrivacyDisclosures;
- (id)rootWithWidgetsListLayout;
- (BOOL)shouldScrollPageControlDuringTransitionToLeadingCustomView;
- (BOOL)_isSidebarEnabledForIconListIndex:(unsigned long long)a0 orientation:(long long)a1;
- (void)layoutSearchableViews;
- (void)_captureInitialSearchScrollTrackingState;
- (BOOL)isPageControlBorrowed;
- (void)_updateIconListIndexSearchableAndLeadingCustomViewsWithLayout:(BOOL)a0;
- (void)enterPageManagementUIWithCompletionHandler:(id /* block */)a0;
- (double)minimumHomeScreenScaleForDockView:(id)a0;
- (void)_animateViewsForScrollingToLeadingOrTrailingCustomViewWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; double x7; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x8; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x9; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x10; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x11; } *)a0;
- (void)layoutDockViewWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; double x7; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x8; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x9; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x10; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x11; } *)a0;
- (void)removeDockOffscreenFractionClient:(id)a0;
- (void)_cleanupAfterExtraScrollGesturesCompleted;

@end
