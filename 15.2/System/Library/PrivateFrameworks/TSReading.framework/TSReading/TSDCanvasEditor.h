@class UIView, TSDCanvasEditorHelper, NSString, NSSet, TSDCanvasSelection, TSKSelection, NSObject, TSDInteractiveCanvasController, TSPObject;
@protocol TSDTextSelection, TSDArrangeInspectorDelegate, TSDInlineFloatingWrapInspectorDelegate, TSDCanvasSelection;

@interface TSDCanvasEditor : NSObject <TSDCanvasEditor> {
    TSDInteractiveCanvasController *mInteractiveCanvasController;
    TSDCanvasEditorHelper *mCanvasEditorHelper;
    TSDCanvasSelection *mSelection;
    NSObject<TSDArrangeInspectorDelegate> *mZOrderArranger;
    NSObject<TSDInlineFloatingWrapInspectorDelegate> *mInlineFloatingEditor;
    BOOL mPreventImageDataReplace;
    UIView *mInputView;
}

@property (readonly, nonatomic) NSSet *infosForSelectAllInRoot;
@property (readonly, nonatomic) TSDInteractiveCanvasController *interactiveCanvasController;
@property (readonly, nonatomic) TSDCanvasEditorHelper *canvasEditorHelper;
@property (readonly, nonatomic) TSKSelection<TSDCanvasSelection> *canvasSelection;
@property (readonly, nonatomic) TSPObject *modelForSelection;
@property (retain, nonatomic) TSKSelection *selection;
@property (readonly, nonatomic) NSSet *selectedObjectsSupportingFill;
@property (readonly, nonatomic) NSSet *selectedObjectsSupportingStroke;
@property (readonly, nonatomic) NSSet *selectedObjectsSupportingShadow;
@property (readonly, nonatomic) NSSet *selectedObjectsSupportingReflection;
@property (readonly, nonatomic) NSSet *selectedObjectsSupportingOpacity;
@property (readonly, nonatomic) NSSet *selectedObjectsSupportingTextInset;
@property (readonly, nonatomic) NSSet *selectedObjectsSupportingConnectionLineAttributes;
@property (readonly, nonatomic) NSSet *selectedObjectsSupportingEndpoints;
@property (readonly, nonatomic) NSSet *selectedObjectsSupportingSmartShapeAttributes;
@property (readonly, nonatomic) NSSet *selectedObjectsSupportingResize;
@property (readonly, nonatomic) NSSet *selectedObjectsSupportingShrinkTextToFit;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, retain, nonatomic) TSKSelection<TSDTextSelection> *textInputSelection;
@property (readonly, nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } markedRange;
@property (readonly, retain) UIView *inputView;
@property (readonly, retain) UIView *inputAccessoryView;
@property (readonly) BOOL wantsRawArrowKeyEvents;
@property (retain, nonatomic) TSKSelection<TSDTextSelection> *selectionForArrowKeys;

+ (id)canvasSelectionWithInfos:(id)a0;
+ (id)canvasSelectionWithInfos:(id)a0 andContainer:(id)a1;
+ (Class)canvasEditorHelperClass;
+ (BOOL)physicalKeyboardIsSender:(id)a0;
+ (id /* block */)spatialInfoComparator;

- (id)selectionRectsForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })firstRectForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)teardown;
- (void)select:(id)a0;
- (void)copy:(id)a0;
- (void)endEditing;
- (id)keyCommands;
- (void)replaceRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 withText:(id)a1;
- (void)setMarkedText:(id)a0 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)insertText:(id)a0;
- (long long)returnKeyType;
- (unsigned long long)textLength;
- (id)textInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })editRange;
- (void)insertTab:(id)a0;
- (void)insertBacktab:(id)a0;
- (void)selectAll:(id)a0;
- (void)dealloc;
- (void)scrollToBeginningOfDocument:(id)a0;
- (void)scrollToEndOfDocument:(id)a0;
- (id)documentRoot;
- (id)selectionWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (int)canPerformEditorAction:(SEL)a0 withSender:(id)a1;
- (BOOL)wantsKeyboard;
- (BOOL)canAddOrShowComment;
- (id)drawables;
- (id)initWithInteractiveCanvasController:(id)a0;
- (id)pasteboardController;
- (void)repWasCreated:(id)a0;
- (void)setSelection:(id)a0 withFlags:(unsigned long long)a1;
- (void)beginAutomaticTextEditingIfNeededForPoint:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)allowAutomaticTextEditingToBeginWithDifferentEditor;
- (BOOL)textIsVerticalAtCharIndex:(unsigned long long)a0;
- (void)extendSelectionLeft;
- (void)extendSelectionRight;
- (id)textColorAtCharIndex:(unsigned long long)a0;
- (id)textFontAtCharIndex:(unsigned long long)a0;
- (void)setSelectionWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 endOfLine:(BOOL)a1;
- (void)clearMarkedRange;
- (BOOL)isCharIndex:(unsigned long long)a0 withEolAffinity:(BOOL)a1 atBoundary:(long long)a2 inDirection:(long long)a3;
- (unsigned long long)charIndexByMovingPosition:(id)a0 toBoundary:(long long)a1 inDirection:(long long)a2 preferPosition:(double *)a3;
- (BOOL)isCharIndex:(unsigned long long)a0 withinTextUnit:(long long)a1 inDirection:(long long)a2;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeOfWordEnclosingCharIndex:(unsigned long long)a0 backward:(BOOL)a1;
- (void)canvasInfosDidChange;
- (id)canvasSelectionWithInfos:(id)a0;
- (void)setSelectionToRep:(id)a0;
- (void)setSelectionToInfo:(id)a0;
- (id)editorToPopToOnEndEditing;
- (BOOL)isRepSelectable:(id)a0;
- (BOOL)isSelectedInfo:(id)a0;
- (id)canvasSelectionWithInfos:(id)a0 andContainer:(id)a1;
- (BOOL)canDeleteComment;
- (id)p_filterNonDisplayedInfos:(id)a0;
- (BOOL)canvasEditorCanDeleteWithSender:(id)a0;
- (BOOL)canvasEditorCanCopyWithSender:(id)a0;
- (BOOL)canCopyStyle;
- (unsigned long long)countOfDrawables;
- (BOOL)canSelectAllWithSender:(id)a0;
- (BOOL)canGroupDrawable:(id)a0;
- (BOOL)canGroupWithSender:(id)a0;
- (BOOL)canUngroupWithSender:(id)a0;
- (void)setSelectionToInfos:(id)a0;
- (id)p_spatiallySortedDrawables;
- (id)p_nextInfoInTabSequence:(int)a0;
- (void)copyToPasteboard:(id)a0 withSender:(id)a1;
- (void)connectWithConnectionLine:(id)a0;
- (BOOL)shouldUseAlternateSelectionHighlight;
- (BOOL)canvasEditorCanCutWithSender:(id)a0;
- (BOOL)canvasEditorCanDuplicateWithSender:(id)a0;
- (BOOL)canvasEditorCanCopyStyleWithSender:(id)a0;
- (BOOL)canvasEditorCanSelectAllWithSender:(id)a0;
- (BOOL)canvasEditorCanGroupWithSender:(id)a0;
- (BOOL)canvasEditorCanUngroupWithSender:(id)a0;
- (BOOL)shouldPushNewEditorForNewSelection;
- (Class)editorClassForSelection;
- (void)p_notifyRepsForSelectionChangeFrom:(id)a0 to:(id)a1;

@end
