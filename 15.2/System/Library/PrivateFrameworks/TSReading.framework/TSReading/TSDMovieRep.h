@class NSString, CALayer, TSKAVPlayerController, TSDFrameRep, TSDButtonKnob, AVPlayerLayer, TSDMovieInfo, AVAsset;

@interface TSDMovieRep : TSDMediaRep <TSKAVPlayerControllerDelegate, TSDTilingLayerDelegate> {
    TSKAVPlayerController *mPlayerController;
    BOOL mCurrentlyObservingPlayerLayer;
    BOOL mPlayerLayerShouldBeDisplayed;
    AVPlayerLayer *mPlayerLayer;
    CALayer *mLayerToStroke;
    CALayer *mMovieReflectionLayer;
    CALayer *mMovieReflectionMaskLayer;
    AVPlayerLayer *mReflectionPlayerLayer;
    CALayer *mReflectionPlayerStrokeMaskLayer;
    BOOL mPreventDisposeOfPlayerLayer;
    CALayer *mPlayerStrokeLayer;
    CALayer *mReflectionPlayerStrokeLayer;
    TSDFrameRep *mReflectionFrameRep;
    CALayer *mReflectionFrameMaskLayer;
    AVAsset *mAssetForPlayability;
    BOOL mDidCheckPlayability;
    TSDButtonKnob *mPlayButtonKnob;
    BOOL mPlayButtonKnobVisible;
    BOOL mDidCancelUpdatingPlayButtonVisibility;
    BOOL mInReadMode;
    unsigned long long mIsChangingDynamicVisibleTimeCount;
    float mDynamicVolume;
    BOOL mIsChangingDynamicVolume;
    BOOL mNeedsTeardownPlayerController;
}

@property (readonly, nonatomic) TSDButtonKnob *p_playButtonKnob;
@property (readonly, nonatomic) BOOL p_playButtonFitsInFrame;
@property (readonly, nonatomic) TSDMovieInfo *movieInfo;
@property (readonly, nonatomic, getter=isPlayable) BOOL playable;
@property (readonly, nonatomic, getter=isPlaying) BOOL playing;
@property (readonly, nonatomic) BOOL shouldSingleTapPlay;
@property (nonatomic) struct CGImage { } *alternatePosterImage;
@property (readonly, nonatomic) double visibleTime;
@property (readonly, nonatomic) float volume;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)a0 incomingObject:(id)a1;

- (BOOL)isDraggable;
- (void)screenScaleDidChange;
- (void)willBeRemoved;
- (id)actionForLayer:(id)a0 forKey:(id)a1;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)dealloc;
- (void)drawLayer:(id)a0 inContext:(struct CGContext { } *)a1;
- (id)playerController;
- (BOOL)directlyManagesLayerContent;
- (void)didUpdateLayer:(id)a0;
- (void)processChangedProperty:(int)a0;
- (void)playbackDidStopForPlayerController:(id)a0;
- (void)playerController:(id)a0 playbackDidFailWithError:(id)a1;
- (void)willBeginReadMode;
- (void)willEndReadMode;
- (BOOL)wantsToHandleTapsWhenLocked;
- (BOOL)handleSingleTapAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)willUpdateLayer:(id)a0;
- (void)updateLayerGeometryFromLayout:(id)a0;
- (id)additionalLayersUnderLayer;
- (id)additionalLayersOverLayer;
- (void)drawInLayerContext:(struct CGContext { } *)a0;
- (void)addKnobsToArray:(id)a0;
- (unsigned long long)enabledKnobMask;
- (BOOL)directlyManagesVisibilityOfKnob:(id)a0;
- (id)initWithLayout:(id)a0 canvas:(id)a1;
- (void)updateFromLayout;
- (void)becameSelected;
- (void)becameNotSelected;
- (void)drawInContextWithoutEffects:(struct CGContext { } *)a0 withContent:(BOOL)a1 withStroke:(BOOL)a2 withOpacity:(BOOL)a3 forAlphaOnly:(BOOL)a4 drawChildren:(BOOL)a5;
- (void)p_disposeStrokeLayer;
- (void)p_disposeMaskLayer;
- (void)i_updateFrameRep;
- (BOOL)shouldShowMediaReplaceUI;
- (void)p_createMaskLayerForLayer:(id)a0;
- (void)p_updateStrokeLayerForStroke:(id)a0 repLayer:(id)a1;
- (void)p_disposeReflectionStrokeLayers;
- (void)disposeReflectionLayer;
- (void)createReflectionLayer;
- (void)p_setupReflectionPlayerLayerIfNecessary;
- (void)p_drawReflectionStrokeInContext:(struct CGContext { } *)a0;
- (void)p_drawStrokeInContext:(struct CGContext { } *)a0;
- (void)p_setupShapePlayerStrokeLayer;
- (void)p_setupShapeReflectionPlayerStrokeLayer;
- (void)p_setupTilingPlayerStrokeLayer;
- (void)p_setupTilingReflectionPlayerStrokeLayer;
- (void)p_createReflectionPlayerStrokeMaskLayer;
- (void)p_checkAndsyncTilingLayerState:(BOOL)a0;
- (void)p_setupPlayerStrokeLayers:(BOOL)a0;
- (id)playerStrokeLayer;
- (id)reflectionPlayerStrokeLayer;
- (void)p_arrangeLayerVisibility:(id)a0;
- (BOOL)p_needsTilingLayerForStroke:(id)a0;
- (void)p_setupStrokeLayers:(BOOL)a0 needsMaskLayer:(BOOL)a1 isFrame:(BOOL)a2;
- (void)p_teardownPlayerControllerIfNeeded;
- (void)p_updateMovieReflectionMaskLayer;
- (id)movieLayout;
- (void)p_setPositionAndBoundsIfDifferent:(id)a0 position:(struct CGPoint { double x0; double x1; })a1 bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })p_strokeFrameForLayerFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)p_placeReflectionPlayerLayer:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a1;
- (void)p_updatePlayButtonVisibility;
- (void)p_updateReflectionFrameRep;
- (void)p_drawInContext:(struct CGContext { } *)a0 withContent:(BOOL)a1 withStroke:(BOOL)a2 withOpacity:(double)a3 withMask:(BOOL)a4 forShadowOrHitTest:(BOOL)a5;
- (void)p_commonDrawStrokeInContext:(struct CGContext { } *)a0;
- (id)p_shapeLayerForPlayerStroke;
- (void)p_applyBasicStrokeToLayer:(id)a0 layer:(id)a1 bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (id)p_shapeLayerForReflectionStroke;
- (void)p_drawReflectionGradientIntoMovieReflectionLayer:(struct CGContext { } *)a0 reflectionSize:(struct CGSize { double x0; double x1; })a1;
- (void)p_drawPosterImageInContext:(struct CGContext { } *)a0;
- (void)p_setNeedsTeardownPlayerControllerOnUpdateLayer;
- (void)p_stopUpdatingUIStateForMoviePlayability;
- (void)p_updateUIStateForMoviePlayability;
- (void)p_updateRepeatMode;
- (void)p_updateVolume;
- (void)p_updateStartTime;
- (void)p_updateEndTime;
- (BOOL)p_shouldPlayerControllerExistThroughoutSelection;
- (void)p_setupPlayerControllerIfNecessary;
- (void)p_addPlayButtonToKnobs:(id)a0;
- (void)p_cancelUpdatingUIStateForMoviePlayability;
- (void)p_teardownPlayerController;
- (void)p_setupPlayerLayerIfNecessary;
- (BOOL)canResetMediaSize;
- (void)p_hideReflectionLayer;
- (void)p_showReflectionLayer;
- (id)p_tilingLayerForPlayerStroke;
- (id)p_tilingLayerForReflectionStroke;
- (void)setShapeReflectionPlayerStrokeLayer:(id)a0;
- (void)p_playForKnob;
- (void)p_togglePlaying;
- (void)dynamicVisibleTimeChangeDidBegin;
- (void)dynamicVisibleTimeUpdateToValue:(double)a0 withTolerance:(double)a1 completionHandler:(id /* block */)a2;
- (void)dynamicVisibleTimeChangeDidEnd;
- (void)dynamicVolumeChangeDidBegin;
- (void)dynamicVolumeUpdateToValue:(float)a0;
- (void)dynamicVolumeChangeDidEnd;

@end
