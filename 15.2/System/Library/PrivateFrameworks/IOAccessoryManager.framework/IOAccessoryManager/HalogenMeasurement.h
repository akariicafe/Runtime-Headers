@class HalogenLdcmCalc, NSCondition, NSMutableData, NSObject, BaseResourceArbiterClient;
@protocol OS_dispatch_queue;

@interface HalogenMeasurement : NSObject

@property HalogenLdcmCalc *halogenLdcmCalc;
@property int nInputChannels;
@property int nOutputChannels;
@property int sampleRate;
@property int bitDepth;
@property int inputFrameSizeInBytes;
@property int outputFrameSizeInBytes;
@property struct OpaqueAudioComponentInstance { } *audioComponentInst;
@property int warmupTimeInMs;
@property int hydraSettlingTimeInMs;
@property int nMeasurementSamples;
@property int nWarmupSamples;
@property int nHydraSettlingSamples;
@property int nTotalSamples;
@property int nPaddingSamples;
@property double signalFreq;
@property int initalPhaseInDegrees;
@property (readonly, nonatomic) unsigned short maxOutputAmplitude;
@property (readonly, nonatomic) unsigned short signalOffset;
@property NSMutableData *pcmInputData;
@property int pcmInputDataMaxSzInBytes;
@property int pcmInputDataIndexInBytes;
@property int pcmInputDataSampleCnt;
@property BOOL isCalibrationDone;
@property BOOL isMeasurementDone;
@property NSMutableData *pcmOutputData;
@property int pcmOutputDataMaxSzInBytes;
@property int pcmOutputDataIndexInBytes;
@property NSMutableData *currentData;
@property NSMutableData *voltageData;
@property (readonly, nonatomic) BOOL shouldInvertData;
@property int audioTimeoutInSec;
@property NSCondition *audioTimeoutCond;
@property int measurementSampleOffsetInFrames;
@property unsigned int service;
@property unsigned int connect;
@property int pinToMeasure;
@property unsigned long long eisPinToken1;
@property unsigned long long eisPinToken2;
@property (nonatomic) NSObject<OS_dispatch_queue> *systemPowerQueue;
@property (nonatomic) unsigned int systemPowerPort;
@property (nonatomic) struct IONotificationPort { } *systemPowerNotifyPortRef;
@property (nonatomic) unsigned int systemPowerIterator;
@property (nonatomic) int powerState;
@property NSCondition *powerStateCond;
@property (readonly, nonatomic) BaseResourceArbiterClient *arbiterClient;
@property (readonly, nonatomic) BOOL arbiterLocked;
@property (readonly, nonatomic) BOOL arbitrationRequired;
@property (readonly) int precalibrationSampleOffsetInFrames;
@property (readonly) double precalVoltageSignalLevel;
@property (readonly) double precalVoltageNoiseLevel;
@property (readonly) double precalVoltageSNR;
@property (readonly) double precalCurrentSignalLevel;
@property (readonly) double precalCurrentNoiseLevel;
@property (readonly) double precalCurrentSNR;
@property (readonly) int calibrationSampleOffsetInFrames;
@property (readonly) double voltageGainCorrection;
@property (readonly) double currentGainCorrection;
@property (readonly) double currentPhaseCompensation;
@property (readonly) double calVoltageSignalLevel;
@property (readonly) double calVoltageNoiseLevel;
@property (readonly) double calVoltageSNR;
@property (readonly) double calCurrentSignalLevel;
@property (readonly) double calCurrentNoiseLevel;
@property (readonly) double calCurrentSNR;
@property (readonly) double goertzelImpedance;
@property (readonly) double goertzelPhase;
@property (readonly) double compensatedImpedance;
@property (readonly) double compensatedPhase;
@property (readonly) double resistanceInOhms;
@property (readonly) double capacitanceInNanoF;
@property (readonly) double clippingScore;
@property (readonly) double measurementVoltageSignalLevel;
@property (readonly) double measurementVoltageNoiseLevel;
@property (readonly) double measurementVoltageSNR;
@property (readonly) double measurementCurrentSignalLevel;
@property (readonly) double measurementCurrentNoiseLevel;
@property (readonly) double measurementCurrentSNR;
@property (readonly) double measurementCondetSNR;
@property (readonly) int halogenResult;

- (void)dealloc;
- (void)_freeBuffers;
- (BOOL)_allocBuffers;
- (BOOL)_connectToAccessoryManager:(int)a0;
- (BOOL)_createSleepWakeNotifier;
- (void)_generateSineWave;
- (void)_destroySleepWakeNotifier;
- (void)_disconnectFromAccessoryManager;
- (void)_resetCalcValues;
- (int)saveAsWav:(id)a0;
- (id)initWithSize:(int)a0 onPort:(int)a1;
- (id)getResultString;
- (int)doMeasurement:(BOOL)a0 onPin:(int)a1 isReceptacleEmpty:(BOOL)a2 isReceptacleWet:(BOOL)a3 withWetTransitionThreshold:(double)a4 withDryTransitionThreshold:(double)a5;
- (BOOL)isBoundViolation_currentGainCorrection;
- (BOOL)isBoundViolation_currentPhaseCompensation;
- (BOOL)isLowerBoundViolation_goertzelImpedance;
- (BOOL)isUpperBoundViolation_goertzelImpedance;
- (BOOL)isLowerBoundViolation_goertzelPhase;
- (BOOL)isUpperBoundViolation_goertzelPhase;
- (BOOL)isBoundViolation_measurementCondetSNR;
- (BOOL)isBoundViolation_voltageGainCorrection;
- (BOOL)_initArbiter;
- (void)_deinitArbiter;
- (BOOL)_initAudioPath;
- (BOOL)_doHalogenLdcmCalc:(BOOL)a0 isReceptacleWet:(BOOL)a1 withWetTransitionThreshold:(double)a2 withDryTransitionThreshold:(double)a3;
- (void)_deinitAudioPath;

@end
