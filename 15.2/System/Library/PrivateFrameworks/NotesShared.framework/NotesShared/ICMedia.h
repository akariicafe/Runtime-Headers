@class NSString, NSSet, NSData, ICAccount, ICAttachment;

@interface ICMedia : ICCloudSyncingObject <ICCloudObject>

@property (readonly, nonatomic) BOOL needsToBeDeletedFromCloud;
@property (readonly, nonatomic) BOOL needsToBePushedToCloud;
@property (readonly, nonatomic) BOOL needsToBeFetchedFromCloud;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) ICAccount *placeholderAccount;
@property (readonly, nonatomic) NSSet *urlsToConsiderForCloudBackup;
@property (readonly, nonatomic) ICAccount *containerAccount;
@property (retain, nonatomic) ICAttachment *attachment;
@property (retain, nonatomic) NSString *filename;
@property (retain, nonatomic) NSData *assetCryptoInitializationVector;
@property (retain, nonatomic) NSData *assetCryptoTag;
@property (readonly, nonatomic) NSString *cacheKey;

+ (id)newCloudObjectForRecord:(id)a0 accountID:(id)a1 context:(id)a2;
+ (id)mediaDirectoryURL;
+ (id)existingCloudObjectForRecordID:(id)a0 accountID:(id)a1 context:(id)a2;
+ (void)enumerateMediaInContext:(id)a0 batchSize:(unsigned long long)a1 saveAfterBatch:(BOOL)a2 usingBlock:(id /* block */)a3;
+ (id)containerDirectoryURLForMediaWithIdentifier:(id)a0 account:(id)a1;
+ (id)exportableContainerDirectoryURLForMediaWithIdentifier:(id)a0 account:(id)a1;
+ (id)mediaURLForMediaWithIdentifier:(id)a0 filename:(id)a1 account:(id)a2;
+ (id)exportableMediaURLForMediaWithIdentifier:(id)a0 filename:(id)a1 account:(id)a2;
+ (id)keyPathsForValuesAffectingIsSharedViaICloud;
+ (void)purgeMediaFilesForIdentifiers:(id)a0 account:(id)a1;
+ (id)keyPathsForValuesAffectingParentCloudObject;
+ (id)newMediaWithAttachment:(id)a0 context:(id)a1;
+ (id)newMediaWithIdentifier:(id)a0 account:(id)a1;
+ (id)newMediaWithIdentifier:(id)a0 attachment:(id)a1;
+ (id)newMediaWithAttachment:(id)a0 forData:(id)a1 filename:(id)a2 context:(id)a3 error:(id *)a4;
+ (id)newMediaWithAttachment:(id)a0 forFileWrapper:(id)a1 context:(id)a2 error:(id *)a3;
+ (id)newMediaWithAttachment:(id)a0 forURL:(id)a1 context:(id)a2 error:(id *)a3;
+ (void)deleteMedia:(id)a0;
+ (void)undeleteMedia:(id)a0;
+ (void)purgeMedia:(id)a0;
+ (void)purgeAllMediaFiles;
+ (id)mediaWithIdentifier:(id)a0 context:(id)a1;
+ (id)mediaIdentifiersForAccount:(id)a0;
+ (id)allMediaInContext:(id)a0;

- (id)recordZoneName;
- (BOOL)writeData:(id)a0 error:(id *)a1;
- (BOOL)hasFile;
- (void)prepareForDeletion;
- (id)ic_loggingValues;
- (BOOL)hasAllMandatoryFields;
- (void)setFilename:(id)a0;
- (id)filename;
- (void)fixBrokenReferences;
- (BOOL)isInICloudAccount;
- (void)deleteFromLocalDatabase;
- (id)decryptedData;
- (void)mergeDataFromRecord:(id)a0 accountID:(id)a1 force:(BOOL)a2;
- (id)newlyCreatedRecord;
- (void).cxx_destruct;
- (BOOL)shouldSyncMinimumSupportedNotesVersion;
- (void)setAttachment:(id)a0;
- (id)mediaURL;
- (void)resetUniqueIdentifier;
- (id)recordType;
- (id)parentCloudObject;
- (id)objectsToBeDeletedBeforeThisObject;
- (id)data;
- (BOOL)isValid;
- (id)containerDirectoryURL;
- (BOOL)supportsDeletionByTTL;
- (id)newlyCreatedRecordWithObfuscator:(id)a0;
- (void)objectWasPushedToCloudWithOperation:(id)a0 serverRecord:(id)a1;
- (BOOL)writeDataFromFileURL:(id)a0 error:(id *)a1;
- (void)saveAndClearDecryptedData;
- (void)accountWillChangeToAccount:(id)a0;
- (id)parentEncryptableObject;
- (id)dataWithoutImageMarkupMetadata:(BOOL)a0;
- (id)parentCloudObjectForMinimumSupportedVersionPropagation;
- (BOOL)shouldFallBackToCheckAllCryptoKeys;
- (id)exportableContainerDirectoryURL;
- (id)encryptedMediaURL;
- (id)mediaArchiveURL;
- (BOOL)writeDataWithBlock:(id /* block */)a0 error:(id *)a1;
- (BOOL)makeSureMediaDirectoryExists:(id *)a0;
- (void)updateFlagToExcludeFromCloudBackup;
- (BOOL)isArchivedDirectory;
- (id)mediaTarArchiveURL;
- (void)deleteExportableMedia;
- (id)exportableMediaURL;
- (BOOL)makeSureExportableMediaDirectoryExists:(id *)a0;
- (BOOL)writeDataFromAsset:(id)a0 accountID:(id)a1 isArchivedDirectory:(BOOL)a2 error:(id *)a3;
- (void)writeDataFromItemProvider:(id)a0 checkForMarkupData:(BOOL)a1 completionBlock:(id /* block */)a2;
- (BOOL)writeDataFromFileWrapper:(id)a0 error:(id *)a1;
- (id)exportableMediaURLWithUpdatedFileIfNecessary;

@end
