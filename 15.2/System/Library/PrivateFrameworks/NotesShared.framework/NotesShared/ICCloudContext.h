@class NSTimer, NSString, NSMutableDictionary, NSOperationQueue, NSDictionary, NSMutableSet, ICSelectorDelayer, NSObject;
@protocol OS_dispatch_queue, ICCloudContextDelegate, ICCloudAnalyticsDelegate;

@interface ICCloudContext : NSObject <ICStateHandlerProvider>

@property (retain, nonatomic) NSOperationQueue *operationQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *processingQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *containersCreationQueue;
@property (retain, nonatomic) NSMutableSet *objectIDsToRetry;
@property (retain) NSTimer *retryTimer;
@property (retain, nonatomic) NSMutableDictionary *retryCountsByOperationType;
@property (nonatomic) long long accountStatus;
@property (getter=isDisabledInternal) BOOL disabledInternal;
@property (readonly, nonatomic) NSDictionary *cloudObjectClassesByRecordType;
@property (nonatomic) BOOL needsToProcessAllObjects;
@property (retain, nonatomic) NSMutableSet *objectIDsToProcess;
@property (retain) ICSelectorDelayer *processingSelectorDelayer;
@property (nonatomic) BOOL didAddObservers;
@property (nonatomic, getter=isFetchingEnabled) BOOL fetchingEnabled;
@property (nonatomic) BOOL syncDisabledByServer;
@property (retain, nonatomic) NSDictionary *containersByAccountID;
@property (retain, nonatomic) NSMutableDictionary *accountZoneIDsNeedingFetchChanges;
@property (retain, nonatomic) NSMutableDictionary *accountZoneIDsFetchingChanges;
@property (retain, nonatomic) NSMutableDictionary *accountZoneIDsNeedingToBeSaved;
@property (retain) NSMutableSet *subscribedSubscriptionIDs;
@property (nonatomic) BOOL didCheckForLongLivedOperations;
@property (weak, nonatomic) id<ICCloudContextDelegate> cloudContextDelegate;
@property (weak, nonatomic) id<ICCloudAnalyticsDelegate> cloudAnalyticsDelegate;
@property (readonly, nonatomic) BOOL fetchOperationsPending;
@property BOOL needsToUpdateSubscriptions;
@property (nonatomic) long long qualityOfService;
@property (nonatomic) unsigned long long discretionaryNetworkBehavior;
@property (nonatomic) BOOL enableLongLivedOperations;
@property (nonatomic) BOOL disableAutomaticallyRetryNetworkFailures;
@property (nonatomic) BOOL disableRetryTimer;
@property (nonatomic) BOOL syncOnlyIfReachable;
@property (getter=isDisabled) BOOL disabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)errorsFromError:(id)a0;
+ (id)sharedContext;
+ (id)zoneIDsFromZoneInfos:(id)a0;
+ (id)sortedRecords:(id)a0;
+ (BOOL)isZoneConfigurations:(id)a0 subsetOfZoneConfigurations:(id)a1;
+ (id)notesZoneID;
+ (BOOL)shouldIgnoreErrorForBackoffTimer:(id)a0;
+ (void)deleteAllServerChangeTokens;
+ (id)errorForDisabledCloudSyncing;
+ (id)errorCodesToIgnoreForBackoffTimer;
+ (void)batchRecordsToSave:(id)a0 delete:(id)a1 maxRecordCountPerBatch:(unsigned long long)a2 maxRecordSizePerBatch:(unsigned long long)a3 withBlock:(id /* block */)a4;
+ (id)allZoneIDsInAccountZoneIDs:(id)a0;
+ (id)errorForWaitingForRetryTimer;
+ (id)deduplicatedRecordsForCloudObjects:(id)a0;
+ (id)newNotesContainerForAccountID:(id)a0;
+ (id)metadataZoneID;
+ (BOOL)haveZoneIDsInAccountZoneIDs:(id)a0;
+ (id)errorFromOperations:(id)a0;
+ (void)registerStateHandler;
+ (id)userRecordNameForContainer:(id)a0;
+ (id)newNotesContainer;
+ (id)zoneInfosFromZoneIDs:(id)a0;
+ (id)errorFromErrors:(id)a0;
+ (id)objectsByAccount:(id)a0;
+ (id)objectsByDatabaseScope:(id)a0;

- (void)updateConfiguration;
- (void)deleteServerChangeTokenForRecordZoneID:(id)a0 databaseScope:(long long)a1 accountID:(id)a2 context:(id)a3;
- (id)operationsToFetchRecordIDs:(id)a0 database:(id)a1 qualityOfService:(long long)a2;
- (BOOL)isInternetReachable;
- (id)serverChangeTokenForChangedZonesInDatabase:(id)a0 accountID:(id)a1 context:(id)a2;
- (void)fetchDatabaseChangesOperation:(id)a0 finishedWithServerChangeToken:(id)a1 accountID:(id)a2 error:(id)a3 completionHandler:(id /* block */)a4 context:(id)a5;
- (BOOL)hasPendingOperations;
- (void)cloudKitAccountChanged:(id)a0;
- (void)retryOperationsIfNecessary;
- (id)operationToModifyRecordsToSave:(id)a0 delete:(id)a1 rootRecordIDsByShareID:(id)a2 database:(id)a3;
- (void)fetchRecordZoneChangesOperation:(id)a0 recordChanged:(id)a1 context:(id)a2;
- (id)newPlaceholderObjectForRecordID:(id)a0 recordType:(id)a1 accountID:(id)a2 context:(id)a3;
- (void)fetchSubscriptionsForDatabase:(id)a0 completionHandler:(id /* block */)a1;
- (void)processPendingCloudObjects;
- (void)handleCloudKitNotification:(id)a0 completionHandler:(id /* block */)a1;
- (void)fetchRecordZoneChangesOperation:(id)a0 completedFetchForZoneID:(id)a1 serverChangeToken:(id)a2 error:(id)a3 context:(id)a4;
- (void)fetchDatabaseChangesOperation:(id)a0 recordZoneWithIDChanged:(id)a1 accountID:(id)a2;
- (id)existingCloudObjectForRecordID:(id)a0 recordType:(id)a1 accountID:(id)a2 context:(id)a3;
- (void)_injestFetchedRecord:(id)a0 forAccountID:(id)a1 forceMerge:(BOOL)a2 context:(id)a3;
- (id)allZoneIDs;
- (void)modifyRecordsOperation:(id)a0 didCompleteWithSavedRecords:(id)a1 deletedRecordIDs:(id)a2 rootRecordIDsByShareID:(id)a3 error:(id)a4;
- (void)_addModifyRecordsOperationsWithCloudObjectsToSave:(id)a0 delete:(id)a1 accountID:(id)a2 operationGroupName:(id)a3 waitForDependencies:(BOOL)a4 completionHandler:(id /* block */)a5;
- (void)deleteServerChangeTokenForChangedZonesInDatabase:(id)a0 accountID:(id)a1 context:(id)a2;
- (BOOL)isReadyToSync;
- (void)fetchRecordZoneChangesOperation:(id)a0 recordWasDeletedWithRecordID:(id)a1 recordType:(id)a2 context:(id)a3;
- (id)operationToFetchDatabaseChangesForDatabase:(id)a0 completionHandler:(id /* block */)a1;
- (void)handleGenericPartialFailuresForError:(id)a0 operation:(id)a1;
- (void)clearContainers;
- (id)existingCloudObjectForRecordID:(id)a0 recordType:(id)a1 accountID:(id)a2 context:(id)a3 excludingRecordTypes:(id)a4;
- (id)operationsToFetchRecordZoneChangesForZoneIDs:(id)a0 accountID:(id)a1;
- (void)fetchUserRecordWithAccountID:(id)a0 completionHandler:(id /* block */)a1;
- (void)processObjectIDs:(id)a0 operationQueue:(id)a1 completionHandler:(id /* block */)a2;
- (void)saveZoneFetchState;
- (void)updateSelectorDelayers;
- (id)containerForAccountID:(id)a0;
- (id)operationToSaveZonesIfNecessaryForAccountID:(id)a0;
- (id)invernessClientForAccountID:(id)a0;
- (void)clearPendingActivity;
- (void)modifyRecordsOperation:(id)a0 perDeleteRecordIDCompletion:(id)a1 rootRecordIDsByShareID:(id)a2 error:(id)a3;
- (void)recursiveCancelDependentOperations:(id)a0;
- (id)existingCloudObjectForUserSpecificRecordID:(id)a0 createPlaceholderIfNecessary:(BOOL)a1 accountID:(id)a2 context:(id)a3;
- (void)addOperationToProcessObjectsWithCompletionHandler:(id /* block */)a0;
- (void)addCallbackBlocksToModifyRecordsOperation:(id)a0 rootRecordIDsByShareID:(id)a1;
- (void)printOperationQueue;
- (id)existingCloudObjectForRecord:(id)a0 accountID:(id)a1 context:(id)a2;
- (void)updateAccountStatusWithCompletionHandler:(id /* block */)a0;
- (void)deleteSharesForObjects:(id)a0 accountID:(id)a1 completionHandler:(id /* block */)a2;
- (void)contextDidSave:(id)a0;
- (id)operationToFetchRecordIDs:(id)a0 database:(id)a1 qualityOfService:(long long)a2;
- (void)pauseCloudSyncWhileSynchronouslyPerformingBlock:(id /* block */)a0;
- (void)informCloudAnalyticsDelegateForOperationDidEnd:(id)a0 recordsByRecordID:(id)a1 operationError:(id)a2;
- (void)incrementOrClearRetryCountForOperationType:(id)a0 error:(id)a1;
- (void)updateSubscriptionsWithCompletionHandler:(id /* block */)a0;
- (void)saveServerChangeToken:(id)a0 forChangedZonesInDatabase:(id)a1 accountID:(id)a2 context:(id)a3;
- (void)modifyRecordsOperation:(id)a0 perSaveRecordCompletion:(id)a1 error:(id)a2;
- (void)reachabilityChanged:(id)a0;
- (void)addOperationsToFetchRecordZoneChangesForAccountZoneIDs:(id)a0 reason:(id)a1 completionHandler:(id /* block */)a2;
- (void)cancelEverythingWithCompletionHandler:(id /* block */)a0;
- (void)clearRetryCountForOperationType:(id)a0;
- (void).cxx_destruct;
- (void)syncWithReason:(id)a0 completionHandler:(id /* block */)a1;
- (void)deleteSharesForObjects:(id)a0 completionHandler:(id /* block */)a1;
- (BOOL)isInForeground;
- (void)fetchDatabaseChangesOperation:(id)a0 recordZoneWithIDWasDeleted:(id)a1 accountID:(id)a2;
- (id)operationToFetchRecordZoneChangesForZoneIDs:(id)a0 database:(id)a1;
- (id)operationsToFetchRecordIDs:(id)a0 qualityOfService:(long long)a1 operationGroupName:(id)a2 accountID:(id)a3;
- (id)init;
- (void)startRetryTimerIfNecessaryWithError:(id)a0;
- (void)receivedZoneNotFound:(id)a0 operation:(id)a1 context:(id)a2;
- (void)fetchRecordIDs:(id)a0 accountID:(id)a1 operationGroupName:(id)a2 completionHandler:(id /* block */)a3;
- (void)fetchRecordZoneChangesWithReason:(id)a0 completionHandler:(id /* block */)a1;
- (void)fetchRecordZoneChangesOperationDidComplete:(id)a0 error:(id)a1;
- (void)fetchOperation:(id)a0 progressWithRecordID:(id)a1 progress:(double)a2;
- (void)fetchRecordZoneChangesForZoneIDs:(id)a0 accountID:(id)a1 reason:(id)a2 completionHandler:(id /* block */)a3;
- (BOOL)isFetchingAllRecordZones;
- (void)validateAccountZoneIDsNeedingFetchChanges;
- (void)finishOperationsForRecordID:(id)a0 completionHandler:(id /* block */)a1;
- (void)injestFetchedRecord:(id)a0 forAccountID:(id)a1 forceMerge:(BOOL)a2 context:(id)a3;
- (void)fetchDatabaseChangesForDatabases:(id)a0 reason:(id)a1 completionHandler:(id /* block */)a2;
- (void)loadZoneFetchState;
- (BOOL)canRetryImmediatelyAfterError:(id)a0;
- (void)checkForLongLivedOperations;
- (id)subscriptionForDatabase:(id)a0;
- (void)saveServerChangeToken:(id)a0 forRecordZoneID:(id)a1 databaseScope:(long long)a2 accountID:(id)a3 context:(id)a4;
- (id)newOperationToFetchRecordZoneChangesWithZoneConfigurations:(id)a0 database:(id)a1;
- (void)processPendingCloudObjectsWithCompletionHandler:(id /* block */)a0;
- (id)newCloudObjectForRecord:(id)a0 accountID:(id)a1 context:(id)a2;
- (id)operationToSaveZonesForZoneIDs:(id)a0 accountID:(id)a1;
- (void)addDependenciesForModifyRecordsOperation:(id)a0;
- (void)handleRemoteNotificationWithUserInfo:(id)a0 completion:(id /* block */)a1;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)saveSubscriptionsForDatabase:(id)a0 completionHandler:(id /* block */)a1;
- (void)fetchDatabaseChangesOperation:(id)a0 changeTokenUpdated:(id)a1 accountID:(id)a2 context:(id)a3;
- (id)readinessLoggingDescription;
- (void)fetchRecordZoneChangesForAccountZoneIDs:(id)a0 reason:(id)a1 completionHandler:(id /* block */)a2;
- (void)fetchDatabaseChangesWithReason:(id)a0 completionHandler:(id /* block */)a1;
- (void)updateCloudContextState;
- (id)operationsToModifyRecordsForCloudObjectsToSave:(id)a0 delete:(id)a1 deleteShares:(id)a2 saveUserSpecificRecords:(id)a3 operationGroupName:(id)a4 addDependencies:(BOOL)a5 accountID:(id)a6;
- (void)deleteRecordZonesWithZoneIDs:(id)a0 accountID:(id)a1 markZonesAsUserPurged:(BOOL)a2 completionHandler:(id /* block */)a3;
- (void)enumerateAllCloudObjectsInContext:(id)a0 batchSize:(unsigned long long)a1 saveAfterBatch:(BOOL)a2 usingBlock:(id /* block */)a3;
- (void)_processCloudObjects:(id)a0 operationQueue:(id)a1 completionHandler:(id /* block */)a2;
- (void)dealloc;
- (id)operationsToModifyRecordsToSave:(id)a0 delete:(id)a1 rootRecordIDsByShareID:(id)a2 database:(id)a3;
- (void)fetchUserRecordWithContainer:(id)a0 completionHandler:(id /* block */)a1;
- (id)serverChangeTokenForRecordZoneID:(id)a0 databaseScope:(long long)a1 accountID:(id)a2 context:(id)a3;
- (void)handleDatabaseNotification:(id)a0 completionHandler:(id /* block */)a1;
- (void)_syncWithReason:(id)a0 uploadUnsyncedChanges:(BOOL)a1 completionHandler:(id /* block */)a2;
- (void)pushCloudObjects:(id)a0 operationGroupName:(id)a1 completionHandler:(id /* block */)a2;
- (void)incrementRetryCountForOperationType:(id)a0;
- (void)fetchRecordZoneChangesOperation:(id)a0 zoneID:(id)a1 accountID:(id)a2 changeTokenUpdated:(id)a3 context:(id)a4;
- (void)clearZoneFetchState;
- (void)resetZoneForCloudAccount:(id)a0 withReason:(id)a1;
- (BOOL)partialError:(id)a0 containsErrorCode:(long long)a1;
- (void)addModifyRecordsOperationsWithCloudObjectsToSave:(id)a0 delete:(id)a1 accountID:(id)a2 operationGroupName:(id)a3 waitForDependencies:(BOOL)a4 completionHandler:(id /* block */)a5;
- (void)clearSubscribedSubscriptionIDs;
- (void)syncWithReason:(id)a0 uploadUnsyncedChanges:(BOOL)a1 completionHandler:(id /* block */)a2;
- (void)didFetchShare:(id)a0 accountID:(id)a1 context:(id)a2;
- (void)fetchOperation:(id)a0 didCompleteWithRecordsByRecordID:(id)a1 error:(id)a2;
- (void)disableCloudSyncingIfCurrentVersionNotSuppported;
- (void)fetchCloudObjects:(id)a0 accountID:(id)a1 completionHandler:(id /* block */)a2;
- (double)timeIntervalToRetryAfterFromError:(id)a0;
- (id)allCloudObjectIDsInContext:(id)a0;
- (void)processAllCloudObjectsWithCompletionHandler:(id /* block */)a0;
- (void)fetchOperation:(id)a0 fetchedRecord:(id)a1 recordID:(id)a2 error:(id)a3;
- (void)addFetchOperationsForRecordIDs:(id)a0 accountID:(id)a1 qualityOfService:(long long)a2 operationGroupName:(id)a3 completionHandler:(id /* block */)a4;

@end
