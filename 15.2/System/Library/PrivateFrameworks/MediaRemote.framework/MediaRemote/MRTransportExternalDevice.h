@class NSDate, NSDictionary, NSObject, MRExternalClientConnection, MRContentItem, MROSTransaction, NSString, MRPlayerPath, NSArray, NSData, MRExternalDeviceTransport, MROrigin, MRDeviceInfo;
@protocol OS_dispatch_queue;

@interface MRTransportExternalDevice : MRExternalDevice <MRProtocolClientConnectionDelegate> {
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSObject<OS_dispatch_queue> *_notificationQueue;
    BOOL _wantsNowPlayingNotifications;
    BOOL _wantsNowPlayingArtworkNotifications;
    BOOL _wantsVolumeNotifications;
    BOOL _wantsOutputDeviceNotifications;
    BOOL _wantsSystemEndpointNotifications;
    BOOL _wantsEndpointChangeNotifications;
    BOOL _usingSystemPairing;
    NSDate *_connectionStateTimestamp;
    unsigned int _connectionState;
    unsigned int _connectionOptions;
    unsigned long long _reconnectionAttemptCount;
    BOOL _forceReconnectOnConnectionFailure;
    BOOL _disconnecting;
    BOOL _isClientSyncActive;
    MROSTransaction *_transaction;
    NSArray *_subscribedPlayerPaths;
    id /* block */ _discoveryOutputDevicesCallback;
    NSDate *_originalConnectionStartDate;
    NSString *_connectionUID;
    long long _connectionRecoveryBehavior;
}

@property (retain, nonatomic) MRExternalClientConnection *clientConnection;
@property (retain, nonatomic) MROrigin *customOrigin;
@property (retain, nonatomic) MRDeviceInfo *deviceInfo;
@property (retain, nonatomic) NSData *nowPlayingArtwork;
@property (retain, nonatomic) NSDictionary *nowPlayingInfo;
@property (retain, nonatomic) MRContentItem *nowPlayingItem;
@property (retain, nonatomic) MRPlayerPath *playerPath;
@property (copy, nonatomic) id /* block */ pairingCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *pairingCallbackQueue;
@property (copy, nonatomic) id /* block */ connectionStateCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *connectionStateCallbackQueue;
@property (copy, nonatomic) id /* block */ nameCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *nameCallbackQueue;
@property (copy, nonatomic) id /* block */ pairingAllowedCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *pairingAllowedCallbackQueue;
@property (copy, nonatomic) id /* block */ customDataCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *customDataCallbackQueue;
@property (copy, nonatomic) id /* block */ outputDevicesUpdatedCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *outputDevicesUpdatedCallbackQueue;
@property (copy, nonatomic) id /* block */ outputDevicesRemovedCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *outputDevicesRemovedCallbackQueue;
@property (copy, nonatomic) id /* block */ volumeCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *volumeCallbackQueue;
@property (copy, nonatomic) id /* block */ volumeControlCapabilitiesCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *volumeControlCapabilitiesCallbackQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *outputContextCallbackQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *workerQueue;
@property (readonly, nonatomic) MRExternalDeviceTransport *transport;
@property (nonatomic) BOOL isCallingClientCallback;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)uid;
- (id)hostName;
- (void)setListeningMode:(id)a0 outputDeviceUID:(id)a1 queue:(id)a2 completion:(id /* block */)a3;
- (void)setUsingSystemPairing:(BOOL)a0;
- (BOOL)isPaired;
- (void)sendCustomData:(id)a0 withName:(id)a1;
- (void)connectWithOptions:(unsigned int)a0 userInfo:(id)a1;
- (BOOL)wantsNowPlayingNotifications;
- (BOOL)wantsNowPlayingArtworkNotifications;
- (BOOL)wantsVolumeNotifications;
- (BOOL)wantsOutputDeviceNotifications;
- (BOOL)wantsEndpointChangeNotifications;
- (void)setWantsEndpointChangeNotifications:(BOOL)a0;
- (BOOL)wantsSystemEndpointNotifications;
- (void)setWantsSystemEndpointNotifications:(BOOL)a0;
- (BOOL)isUsingSystemPairing;
- (void)unpair;
- (void)connectWithOptions:(unsigned int)a0 clientBundleIdentifier:(id)a1 userInfo:(id)a2;
- (void)setPairingCallback:(id /* block */)a0 withQueue:(id)a1;
- (void)setNameCallback:(id /* block */)a0 withQueue:(id)a1;
- (void)setPairingAllowedCallback:(id /* block */)a0 withQueue:(id)a1;
- (void)setCustomDataCallback:(id /* block */)a0 withQueue:(id)a1;
- (void)disconnect:(id)a0;
- (void)outputDeviceVolume:(id)a0 queue:(id)a1 completion:(id /* block */)a2;
- (void)ping:(double)a0 callback:(id /* block */)a1 withQueue:(id)a2;
- (unsigned int)connectionState;
- (id)initWithTransport:(id)a0;
- (void)setWantsVolumeNotifications:(BOOL)a0;
- (void)setOutputDevicesUpdatedCallback:(id /* block */)a0 withQueue:(id)a1;
- (void)setOutputDevicesRemovedCallback:(id /* block */)a0 withQueue:(id)a1;
- (void)setName:(id)a0;
- (void)setVolumeChangedCallback:(id /* block */)a0 withQueue:(id)a1;
- (void)setVolumeControlCapabilitiesCallback:(id /* block */)a0 withQueue:(id)a1;
- (void)removeFromParentGroup:(id)a0 queue:(id)a1 completion:(id /* block */)a2;
- (long long)connectionRecoveryBehavior;
- (void)outputDeviceVolumeControlCapabilities:(id)a0 queue:(id)a1 completion:(id /* block */)a2;
- (void)setOutputDeviceVolume:(float)a0 outputDeviceUID:(id)a1 queue:(id)a2 completion:(id /* block */)a3;
- (void)setConnectionRecoveryBehavior:(long long)a0;
- (void)modifyByAddingDeviceUIDs:(id)a0 removingDeviceUIDs:(id)a1 settingDeviceUIDs:(id)a2 addingClusterAwareDeviceUIDs:(id)a3 removingClusterAwareDeviceUIDs:(id)a4 settingClusterAwareDeviceUIDs:(id)a5 withReplyQueue:(id)a6 completion:(id /* block */)a7;
- (void)setWantsOutputDeviceNotifications:(BOOL)a0;
- (void)setWantsNowPlayingArtworkNotifications:(BOOL)a0;
- (void)setWantsNowPlayingNotifications:(BOOL)a0;
- (void)setConnectionStateCallback:(id /* block */)a0 withQueue:(id)a1;
- (void)clientDidDisconnect:(id)a0 error:(id)a1;
- (id)subscribedPlayerPaths;
- (void)setSubscribedPlayerPaths:(id)a0;
- (id)personalOutputDevices;
- (void)clientConnection:(id)a0 didReceiveMessage:(id)a1;
- (void).cxx_destruct;
- (void)_localDeviceInfoDidChangeNotification:(id)a0;
- (void)_transportDeviceInfoDidChangeNotification:(id)a0;
- (void)_contentItemUpdatedNotification:(id)a0;
- (void)_activeSystemEndpointDidChangeNotification:(id)a0;
- (void)_handleDeviceInfoChange:(id)a0 oldDevice:(id)a1;
- (void)_cleanUpWithReason:(long long)a0 error:(id)a1;
- (void)_updateNowPlayingInfo;
- (void)_onSerialQueue_registerOriginCallbacks;
- (void)_callClientConnectionStateCallback:(unsigned int)a0 previousConnectionState:(unsigned int)a1 error:(id)a2;
- (void)setDiscoveryMode:(unsigned int)a0 forConfiguration:(id)a1;
- (void)setDiscoveryOutputDevicesChangedCallback:(id /* block */)a0;
- (void)_cleanUpStreamsWithReason:(long long)a0 error:(id)a1;
- (id)_onWorkerQueue_initializeConnectionWithOptions:(unsigned int)a0 userInfo:(id)a1;
- (void)_handleGenericMessage:(id)a0;
- (id)name;
- (id)_onWorkerQueue_loadDeviceInfoWithUserInfo:(id)a0;
- (id)_onWorkerQueue_openSecuritySessionWithUserInfo:(id)a0;
- (id)_onWorkerQueue_registerCustomOriginWithUserInfo:(id)a0;
- (id)_onWorkerQueue_reRegisterCustomOriginWithUserInfo:(id)a0;
- (id)_onWorkerQueue_syncClientStateWithUserInfo:(id)a0;
- (void)setConnectionState:(unsigned int)a0 error:(id)a1;
- (void)_onWorkerQueue_connectWithOptions:(unsigned int)a0 isRetry:(BOOL)a1 clientBundleIdentifier:(id)a2 userInfo:(id)a3;
- (void)_onWorkerQueue_disconnect:(id)a0;
- (id)_createPlaybackQueue:(BOOL)a0;
- (void)_onSerialQueue_prepareToConnectWithOptions:(unsigned int)a0 clientBundleIdentifier:(id)a1 userInfo:(id)a2;
- (void)_onSerialQueue_prepareToDisconnect:(id)a0;
- (void)sendClientUpdatesConfigMessageWithCompletion:(id /* block */)a0;
- (void)_handleCryptoPairingMessage:(id)a0;
- (void)_handleSetStateMessage:(id)a0;
- (void)_handleNotificationMessage:(id)a0;
- (void)_handleSetArtworkMessage:(id)a0;
- (void)_handleTransactionMessage:(id)a0;
- (void)_handleDeviceInfoUpdateMessage:(id)a0;
- (void)_handleSetConnectionStateMessage:(id)a0;
- (void)_handleSetNowPlayingClientMessage:(id)a0;
- (void)_handleSetNowPlayingPlayerMessage:(id)a0;
- (void)_handleRemoveClientMessage:(id)a0;
- (void)_handleRemovePlayerMessage:(id)a0;
- (void)_handleUpdateClientMessage:(id)a0;
- (void)_handleUpdateContentItemsMessage:(id)a0;
- (void)_handleUpdateContentItemArtworkMessage:(id)a0;
- (void)_handleUpdatePlayerMessage:(id)a0;
- (void)_handlePromptForRouteAuthorizationMessage:(id)a0;
- (void)_handlePresentRouteAuthorizationStatusMessage:(id)a0;
- (void)_handleVolumeDidChangeMessage:(id)a0;
- (void)_handleVolumeControlCapabilitiesDidChangeMessage:(id)a0;
- (void)_handleLegacyVolumeControlCapabilitiesDidChangeMessage:(id)a0;
- (void)_handleOutputDevicesUpdatedMessage:(id)a0;
- (void)_handleOutputDevicesRemovedMessage:(id)a0;
- (void)_handleSetDefaultSupportedCommandsMessage:(id)a0;
- (void)_handleUpdateActiveSystemEndpoint:(id)a0;
- (void)_handleSetPlayerClientPropertiesMessage:(id)a0;
- (void)_handleSetOriginClientPropertiesMessage:(id)a0;
- (void)_handleDiscoveryUpdateOutputDevicesMessage:(id)a0;
- (id)_onWorkerQueue_createClientConnectionWithTransport:(id)a0;
- (void)_callClientPairingCallback:(id /* block */)a0;
- (void)_callClientNameCallback;
- (long long)port;
- (void)_handleRemoteCommand:(unsigned int)a0 withOptions:(id)a1 playerPath:(id)a2 completion:(id /* block */)a3;
- (void)_handlePlaybackQueueRequest:(void *)a0 forPlayer:(void *)a1 completion:(id /* block */)a2;
- (void)_handlePlaybackSessionRequest:(void *)a0 forPlayerPath:(void *)a1 completion:(id /* block */)a2;
- (void)_handlePlaybackSessionMigrateRequest:(id)a0 request:(id)a1 forPlayerPath:(id)a2 completion:(id /* block */)a3;
- (void)_handleLegacyPlaybackQueueRequestWithCompletion:(id /* block */)a0;
- (void)_handlePlaybackSessionMigrateBeginRequest:(id)a0 forPlayerPath:(id)a1 completion:(id /* block */)a2;
- (void)_handlePlaybackSessionMigrateEndRequest:(id)a0 error:(id)a1 forPlayerPath:(id)a2 completion:(id /* block */)a3;
- (void)_sendClientMessage:(id)a0 completion:(id /* block */)a1;
- (void)_handlePlaybackQueueResponse:(id)a0 completion:(id /* block */)a1;
- (void)veirfyConnectionStatusAndMaybeDisconnect:(id)a0;
- (void)_handleSetStateMessageModern:(id)a0;
- (void)_handleNotificationMessageModern:(id)a0;
- (void)_handleNotificationMessageLegacy:(id)a0;
- (void)dealloc;
- (void)_callOutputDevicesUpdatedCallbackWithOutputDevices:(id)a0;
- (void)_callOutputDevicesRemovedCallbackWithOutputDeviceUIDs:(id)a0;
- (void)_callVolumeCallback:(float)a0 outputDeviceUID:(id)a1;
- (void)_callClientAllowsPairingCallback;
- (void)_callVolumeControlCapabilitiesCallback:(unsigned int)a0 outputDeviceUID:(id)a1;
- (void)_callClientCustomDataCallback:(id)a0 name:(id)a1;
- (void)sendClientUpdatesConfigMessage;
- (id)errorForCurrentState;
- (id)currentClientUpdatesConfigMessage;
- (BOOL)isValid;
- (id)supportedMessages;
- (void)sendButtonEvent:(struct _MRHIDButtonEvent { unsigned int x0; unsigned int x1; BOOL x2; })a0;

@end
