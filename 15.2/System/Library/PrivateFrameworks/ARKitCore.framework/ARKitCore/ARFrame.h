@class ARVLStateData, ARWorldTrackingErrorData, CLLocation, NSDate, ARFaceData, ARGeoTrackingStatus, VLLocalizationDebugInfo, ARRawSceneUnderstandingData, ARCamera, ARDepthData, ARFrameTimingData, ARBody2D, ARWorldTrackingState, ARVideoFormat, NSArray, AVDepthData, ARPointCloud, ARLightEstimate, ARLineCloud;
@protocol MTLTexture;

@interface ARFrame : NSObject <NSSecureCoding, NSCopying> {
    NSArray *_cachedHorizontalPlaneAnchors;
    NSArray *_cachedVerticalPlaneAnchors;
    unsigned long long _transformFlags;
}

@property (class, readonly) BOOL supportsSecureCoding;

@property (readonly, nonatomic) double currentCaptureTimestamp;
@property (nonatomic) struct __CVBuffer { } *capturedImage;
@property (copy, nonatomic) NSArray *anchors;
@property (retain, nonatomic) ARLightEstimate *lightEstimate;
@property (nonatomic) long long worldMappingStatus;
@property (retain, nonatomic) ARPointCloud *featurePoints;
@property (retain, nonatomic) ARPointCloud *referenceFeaturePoints;
@property (retain, nonatomic) NSArray *cachedPointClouds;
@property (nonatomic) struct { void /* unknown type, empty encoding */ columns[4]; } referenceOriginTransform;
@property (nonatomic) struct { void /* unknown type, empty encoding */ columns[4]; } referenceOriginDelta;
@property (nonatomic) struct { void /* unknown type, empty encoding */ columns[4]; } sessionOriginTransform;
@property (nonatomic) struct { void /* unknown type, empty encoding */ columns[4]; } worldAlignmentTransform;
@property (nonatomic) long long worldAlignment;
@property (retain, nonatomic) ARFrameTimingData *timingData;
@property (retain, nonatomic) ARWorldTrackingErrorData *worldTrackingErrorData;
@property (retain, nonatomic) ARLineCloud *worldTrackingLineCloud;
@property (retain, nonatomic) ARRawSceneUnderstandingData *rawSceneUnderstandingData;
@property (retain, nonatomic) ARWorldTrackingState *worldTrackingState;
@property (nonatomic) long long renderFramesPerSecond;
@property (nonatomic) BOOL shouldRestrictFrameRate;
@property (retain, nonatomic) NSDate *captureDate;
@property (nonatomic) double estimatedLuminance;
@property (copy, nonatomic) NSArray *resultDatas;
@property (nonatomic) long long deviceOrientation;
@property (nonatomic) struct __CVBuffer { } *segmentationBuffer;
@property (nonatomic) struct __CVBuffer { } *estimatedDepthData;
@property (nonatomic) struct __CVBuffer { } *downSampledMattingPixelBuffer;
@property (nonatomic) struct __CVBuffer { } *mattingScaleImagePixelBuffer;
@property (copy, nonatomic) NSArray *detectedBodies;
@property (copy, nonatomic) NSArray *detectedPersonMetadata;
@property (retain, nonatomic) ARFaceData *faceData;
@property (retain, nonatomic) AVDepthData *capturedDepthData;
@property (retain, nonatomic) ARVideoFormat *currentlyActiveVideoFormat;
@property (retain, nonatomic) ARPointCloud *capturedPointCloudData;
@property (nonatomic) struct __CVBuffer { } *depthConfidenceData;
@property (nonatomic) struct __CVBuffer { } *depthNormalData;
@property (nonatomic) struct __CVBuffer { } *semanticSegmentationBuffer;
@property (nonatomic) struct CGImage { } *depthMap;
@property (retain, nonatomic) ARDepthData *sceneDepth;
@property (retain, nonatomic) ARDepthData *smoothedSceneDepth;
@property (nonatomic) double capturedDepthDataTimestamp;
@property (retain, nonatomic) CLLocation *location;
@property (nonatomic) double heading;
@property (retain, nonatomic) CLLocation *rawLocation;
@property (nonatomic) double rawHeading;
@property (nonatomic) double rawLocationTimestamp;
@property (retain, nonatomic) ARVLStateData *vlState;
@property (retain, nonatomic) ARGeoTrackingStatus *geoTrackingStatus;
@property (retain, nonatomic) VLLocalizationDebugInfo *vlDebugInfo;
@property (retain, nonatomic) id<MTLTexture> imageNoiseTexture;
@property (nonatomic) float imageNoiseIntensity;
@property (readonly, nonatomic) double timestamp;
@property (readonly, nonatomic) id<MTLTexture> cameraGrainTexture;
@property (readonly, nonatomic) float cameraGrainIntensity;
@property (readonly, copy, nonatomic) ARCamera *camera;
@property (readonly, nonatomic) ARPointCloud *rawFeaturePoints;
@property (readonly, nonatomic) ARBody2D *detectedBody;

- (void)encodeWithCoder:(id)a0;
- (id)description;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithCamera:(id)a0 timestamp:(double)a1;
- (void /* unknown type, empty encoding */)transformPointToNDCSpace:(struct CGPoint { double x0; double x1; })a0;
- (id)_hitTestFromOrigin:(id)a0 withDirection:(SEL)a1 types:(unsigned long long)a2;
- (BOOL)sessionOriginTransformAvailable;
- (BOOL)worldAlignmentTransformAvailable;
- (BOOL)useHittestRaycasting;
- (id)_hitTestEstimatedPlanesFromOrigin:(id)a0 withDirection:(SEL)a1 planeAlignment:(long long)a2;
- (id)_horizontalPlaneEstimateFromFeaturePoint:(id)a0 fromOrigin:(SEL)a1 withDirection:(void /* unknown type, empty encoding */)a2;
- (id)_hitTestFromOrigin:(id)a0 withDirection:(SEL)a1 planeAlignment:(long long)a2 forPlanes:(id)a3 referenceOriginTransform:(struct { void /* unknown type, empty encoding */ x0[4]; })a4;
- (id)initWithTimestamp:(double)a0 context:(id)a1;
- (void)setPredictedTimestamp:(double)a0;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 types:(unsigned long long)a1;
- (id)raycastQueryFromPoint:(struct CGPoint { double x0; double x1; })a0 allowingTarget:(long long)a1 alignment:(long long)a2;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })displayTransformForOrientation:(long long)a0 viewportSize:(struct CGSize { double x0; double x1; })a1;
- (void)_updatePredicted:(BOOL)a0;
- (BOOL)referenceOriginTransformAvailable;
- (BOOL)referenceOriginTransformUpdated;
- (void)setReferenceOriginTransformUpdated:(BOOL)a0;
- (BOOL)referenceOriginChanged;
- (void)setReferenceOriginChanged:(BOOL)a0;
- (BOOL)referenceOriginDeltaAvailable;
- (struct { void /* unknown type, empty encoding */ x0[4]; })gravityAlignedReferenceOriginTransform;

@end
