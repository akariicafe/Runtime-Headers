@class MailAccount, MFMailboxUid;

@interface MFMailMessageStore : MFMessageStore {
    unsigned long long _state;
    struct { unsigned char isReadOnly : 1; unsigned char hasUnsavedChangesToMessageData : 1; unsigned char haveOpenLockFile : 1; unsigned char compacting : 1; unsigned char cancelInvalidation : 1; unsigned char forceInvalidation : 1; unsigned char isWritingChangesToDisk : 1; unsigned char isTryingToClose : 1; unsigned char compactOnClose : 1; unsigned int reserved : 23; } _flags;
    MFMailboxUid *_mailboxUid;
    MailAccount *_account;
    unsigned long long _deletedMessagesSize;
    unsigned long long _deletedMessageCount;
    unsigned long long _unreadMessageCount;
    unsigned long long _generationNumber;
    unsigned long long _lastFetchCount;
}

+ (BOOL)createEmptyStoreForPath:(id)a0;
+ (BOOL)storeAtPathIsWritable:(id)a0;
+ (Class)classForMimePart;
+ (BOOL)createEmptyStoreIfNeededForPath:(id)a0;
+ (Class)headersClass;

- (unsigned long long)totalCount;
- (void)setLibrary:(id)a0;
- (void)close;
- (id)account;
- (id)description;
- (BOOL)shouldArchive;
- (unsigned long long)fetchWindow;
- (void).cxx_destruct;
- (unsigned long long)unreadCount;
- (void)doCompact;
- (BOOL)isOpened;
- (id)mailboxUid;
- (id)setFlagsFromDictionary:(id)a0 forMessages:(id)a1;
- (id)initWithMailboxUid:(id)a0 readOnly:(BOOL)a1;
- (void)invalidateFetchWindow;
- (void)messagesWereAdded:(id)a0;
- (id)copyOfAllMessagesWithOptions:(unsigned int)a0;
- (unsigned long long)allNonDeletedCountIncludingServerSearch:(BOOL)a0 andThreadSearch:(BOOL)a1;
- (unsigned long long)fetchWindowCap;
- (BOOL)shouldGrowFetchWindow;
- (void)messagesWereAdded:(id)a0 earliestReceivedDate:(id)a1;
- (void)messageFlagsDidChange:(id)a0 flags:(id)a1;
- (void)allMessageFlagsDidChange:(id)a0;
- (void)messagesWereCompacted:(id)a0;
- (void)messagesWillBeCompacted:(id)a0;
- (id)setFlagsLocallyFromDictionary:(id)a0 forMessages:(id)a1;
- (void)setNumberOfAttachments:(unsigned int)a0 isSigned:(BOOL)a1 isEncrypted:(BOOL)a2 forMessage:(id)a3;
- (BOOL)canCompact;
- (unsigned long long)serverUnreadOnlyOnServerCount;
- (unsigned long long)unreadCountMatchingCriterion:(id)a0;
- (BOOL)hasMessageForAccount:(id)a0;
- (void)openSynchronously;
- (unsigned long long)nonDeletedCountIncludingServerSearch:(BOOL)a0 andThreadSearch:(BOOL)a1;
- (id)copyOfAllMessages;
- (id)copyMessagesMatchingCriterion:(id)a0 options:(unsigned int)a1;
- (id)copyMessagesWithRemoteIDs:(id)a0 options:(unsigned int)a1 inMailbox:(id)a2;
- (unsigned long long)growFetchWindow;
- (id)messageForMessageID:(id)a0 options:(unsigned int)a1;
- (id)_fetchHeaderDataForMessage:(id)a0 downloadIfNecessary:(BOOL)a1;
- (id)storeData:(id)a0 forMimePart:(id)a1 isComplete:(BOOL)a2;
- (void)deleteMessages:(id)a0 moveToTrash:(BOOL)a1;
- (void)deleteMessagesOlderThanNumberOfDays:(int)a0 compact:(BOOL)a1;
- (void)setFlagsForAllMessagesFromDictionary:(id)a0;
- (BOOL)allowsAppend;
- (void)purgeMessagesBeyondLimit:(unsigned long long)a0 keepingMessage:(id)a1;
- (id)storageLocationForAttachment:(id)a0 withMessage:(id)a1;
- (id)loadMeetingExternalIDForMessage:(id)a0;
- (id)loadMeetingDataForMessage:(id)a0;
- (id)loadMeetingMetadataForMessage:(id)a0;
- (BOOL)canFetchMessageIDs;
- (long long)fetchMessagesWithMessageIDs:(id)a0 andSetFlags:(unsigned long long)a1;
- (unsigned long long)serverMessageCount;
- (BOOL)hasMoreFetchableMessages;
- (id)storeSearchResultMatchingCriterion:(id)a0 limit:(unsigned int)a1 offset:(id)a2 error:(id *)a3;
- (BOOL)_updateFlagForMessage:(id)a0 key:(id)a1 value:(id)a2;
- (long long)fetchNumMessages:(unsigned long long)a0 preservingUID:(id)a1 options:(unsigned long long)a2;
- (long long)fetchMobileSynchronously:(unsigned long long)a0 preservingUID:(id)a1 options:(unsigned long long)a2;
- (void)_flushAllMessageData;
- (id)_setOrGetBody:(id)a0 forMessage:(id)a1 updateFlags:(BOOL)a2;
- (unsigned long long)serverUnreadCount;
- (unsigned long long)serverNonDeletedCount;
- (BOOL)canFetchSearchResults;
- (id)storeSearchResultMatchingSearchText:(id)a0 criterion:(id)a1 limit:(unsigned int)a2 offset:(id)a3 error:(id *)a4;
- (id)remoteIDsFromUniqueRemoteIDs:(id)a0;
- (long long)fetchMessagesWithRemoteIDs:(id)a0 andSetFlags:(unsigned long long)a1;
- (void)messagesWereDeleted:(id)a0;
- (id)messageForRemoteID:(id)a0;
- (id)messageForRemoteID:(id)a0 inMailbox:(id)a1;
- (id)uniqueRemoteIDsForMessages:(id)a0;
- (id)headerDataForMessage:(id)a0 downloadIfNecessary:(BOOL)a1;
- (void)setFlag:(id)a0 state:(BOOL)a1 forMessages:(id)a2;
- (void)updateServerUnreadCountClosingConnection:(BOOL)a0;
- (long long)fetchMobileSynchronously:(unsigned long long)a0;
- (BOOL)shouldDownloadBodyDataForMessage:(id)a0;
- (BOOL)shouldDeleteInPlace;
- (int)archiveDestination;
- (id)messageIdRollCall:(id)a0;

@end
