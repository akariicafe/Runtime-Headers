@class UIView, UILongPressGestureRecognizer, UITapGestureRecognizer, CEKEdgeGradientView, CEKSelectionFeedbackGenerator, NSArray, UIPreviewInteraction, CEKAnimationGenerator, NSString, UICollectionView, CEKWheelScrubberCollectionViewLayout, UILabel;
@protocol CEKWheelScrubberViewDelegate;

@interface CEKWheelScrubberView : UIView <UICollectionViewDelegate, UICollectionViewDataSource, CEKWheelScrubberCollectionViewLayoutDelegate, UIPreviewInteractionDelegate, UIGestureRecognizerDelegate> {
    struct { BOOL respondsToWillBeginScrolling; BOOL respondsToDidScroll; BOOL respondsToWillEndScrolling; BOOL respondsToDidEndScrolling; } _delegateFlags;
}

@property (readonly, nonatomic) CEKWheelScrubberCollectionViewLayout *_collectionViewLayout;
@property (readonly, nonatomic) UICollectionView *_collectionView;
@property (readonly, nonatomic) UIView *_selectedItemLoupe;
@property (readonly, nonatomic) UILabel *_selectedItemTextOverlay;
@property (nonatomic) BOOL _showSelectedItemTextOverlay;
@property (retain, nonatomic) CEKEdgeGradientView *_edgeGradientView;
@property (readonly, nonatomic) UILongPressGestureRecognizer *_pressGestureRecognizer;
@property (readonly, nonatomic) UITapGestureRecognizer *_tapGestureRecognizer;
@property (readonly, nonatomic) CEKSelectionFeedbackGenerator *_selectionFeedbackGenerator;
@property (retain, nonatomic, setter=_setReducedItemIndicesToShow:) NSArray *_reducedItemIndicesToShow;
@property (retain, nonatomic) UIPreviewInteraction *_previewInteraction;
@property (nonatomic, setter=_setPreviewTransitionProgress:) double _previewTransitionProgress;
@property (readonly, nonatomic) CEKAnimationGenerator *_animationGenerator;
@property (retain, nonatomic, setter=_setCollectionViewSnapshot:) UIView *_collectionViewSnapshot;
@property (weak, nonatomic) id<CEKWheelScrubberViewDelegate> delegate;
@property (nonatomic) unsigned long long itemCount;
@property (nonatomic) unsigned long long defaultIndex;
@property (nonatomic) unsigned long long selectedIndex;
@property (nonatomic) unsigned long long markedIndex;
@property (nonatomic) NSString *selectionText;
@property (nonatomic) BOOL useRoundedCorners;
@property (nonatomic) long long cornerStyle;
@property (nonatomic, getter=isSuspended) BOOL suspended;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } thumbnailSize;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } thumbnailEdgeInsets;
@property (nonatomic) struct { double startInset; double endInset; } gradientInsets;
@property (readonly, nonatomic) double selectedThumbnailBorderWidth;
@property (nonatomic) double selectionDotCenterTopSpacing;
@property (nonatomic) long long layoutDirection;
@property (nonatomic) long long layoutOrder;
@property (nonatomic) long long dotPlacement;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (long long)numberOfSectionsInCollectionView:(id)a0;
- (void)_handlePressGesture:(id)a0;
- (BOOL)collectionView:(id)a0 shouldDeselectItemAtIndexPath:(id)a1;
- (void)layoutSubviews;
- (void)_handleTapGestureRecognizer:(id)a0;
- (void)scrollViewWillBeginDragging:(id)a0;
- (long long)collectionView:(id)a0 numberOfItemsInSection:(long long)a1;
- (BOOL)collectionView:(id)a0 shouldSelectItemAtIndexPath:(id)a1;
- (void)scrollViewDidEndDecelerating:(id)a0;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (id)collectionView:(id)a0 cellForItemAtIndexPath:(id)a1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)scrollViewWillEndDragging:(id)a0 withVelocity:(struct CGPoint { double x0; double x1; })a1 targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)a2;
- (void)scrollViewDidEndScrollingAnimation:(id)a0;
- (BOOL)previewInteractionShouldBegin:(id)a0;
- (void)previewInteraction:(id)a0 didUpdatePreviewTransition:(double)a1 ended:(BOOL)a2;
- (void)previewInteractionDidCancel:(id)a0;
- (void)updateItems;
- (void).cxx_destruct;
- (void)scrollViewDidScroll:(id)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })alignmentRectInsets;
- (void)dealloc;
- (void)setSelectionText:(id)a0 animated:(BOOL)a1;
- (void)setTransparentGradients;
- (void)setOpaqueGradientsWithColor:(id)a0;
- (void)switchToPreviousItem;
- (void)switchToNextItem;
- (void)setMarkedIndex:(unsigned long long)a0 animated:(BOOL)a1;
- (void)_updateCollectionViewForMarkedIndexAnimated:(BOOL)a0;
- (void)_setSelectedIndex:(unsigned long long)a0 shouldNotify:(BOOL)a1 shouldSuppressHaptic:(BOOL)a2;
- (void)_scrollToIndex:(long long)a0 animated:(BOOL)a1 shouldOvershoot:(BOOL)a2;
- (BOOL)_shouldPerformFeedback;
- (void)_performFeedback;
- (void)_prepareFeedback;
- (void)_setShowTextOverlay:(BOOL)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (void)_updateLayoutForVisibleCells;
- (void)_updateLayoutForCell:(id)a0;
- (struct CGSize { double x0; double x1; })_defaultItemSize;
- (BOOL)_isDirectionHorizontal;
- (void)_updateCornerMaskForCell:(id)a0 withItemIndex:(long long)a1;
- (double)_lengthForItemIndex:(long long)a0 withPreviewTransitionProgress:(double)a1;
- (double)_alphaForUnselectedItemsWithPreviewTransitionProgress:(double)a0;
- (double)_defaultItemLength;
- (double)_lengthForUnselectedItemsWithPreviewTransitionProgress:(double)a0;
- (long long)_itemIndexUsingHysteresisForScrollingToContentOffset:(struct CGPoint { double x0; double x1; })a0 switchToNextItemThreshold:(double)a1 withPreviewTransitionProgress:(double)a2;
- (id)_newReducedItemIndicesToShow;
- (BOOL)_isOrderReverse;
- (struct CGPoint { double x0; double x1; })_contentOffsetForFractionalItemOffset:(double)a0 withPreviewTransitionProgress:(double)a1;
- (long long)_nominalItemIndexForFractionalItemOffset:(double)a0;
- (double)_fractionalItemOffsetForContentOffset:(struct CGPoint { double x0; double x1; })a0 withPreviewTransitionProgress:(double)a1;
- (void)_resetForTouchesEnded;
- (void)_switchToIndex:(long long)a0 shouldOvershoot:(BOOL)a1 shouldSuppressHaptic:(BOOL)a2;
- (void)_switchToItemAtIndexOffset:(long long)a0 shouldOvershoot:(BOOL)a1;
- (double)_idealFractionalItemOffsetTargetForFractionalItemOffset:(double)a0 allowUnselectedItems:(BOOL)a1;
- (struct CGSize { double x0; double x1; })wheelScrubberCollectionViewLayout:(id)a0 sizeForItemAtIndexPath:(id)a1;
- (double)wheelScrubberCollectionViewLayout:(id)a0 alphaForItemAtIndexPath:(id)a1;

@end
