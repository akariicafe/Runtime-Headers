@class TVPPlaylist, _TVImageView, NSDate, NSObject, TVMediaInfo, UIViewController, TVPVideoView, TVImageProxy, NSString, NSTimer, TVPStateMachine, AVPlayerViewController, UIImage;
@protocol TVMediaControllerDelegate, TVPAVFPlayback;

@interface VUIMediaController : UIViewController <TVMediaController>

@property (retain, nonatomic) _TVImageView *proxyImageView;
@property (retain, nonatomic) TVImageProxy *currentImageProxy;
@property (retain, nonatomic) UIViewController *playbackContainerController;
@property (retain, nonatomic) NSDate *playbackLoadingStartDate;
@property (weak, nonatomic) NSTimer *playbackLoadingTimer;
@property (retain, nonatomic) TVPStateMachine *stateMachine;
@property (retain, nonatomic) TVPPlaylist *pendingPlaylist;
@property (retain, nonatomic) TVImageProxy *pendingImageProxy;
@property (nonatomic) long long state;
@property (nonatomic, getter=isPlayerReadyToBePlayed) BOOL playerReadyToBePlayed;
@property (nonatomic) unsigned long long imageAnimationOptions;
@property (nonatomic) double imageAnimationDuration;
@property (nonatomic) double imageTransitionInterval;
@property (nonatomic) BOOL shouldAnimateOverlayView;
@property (nonatomic) double overlayViewDisplayDuration;
@property (nonatomic) BOOL doesDelegateRespondToShowStill;
@property (nonatomic) BOOL doesDelegateRespondToStateChange;
@property (nonatomic) long long playbackStopReason;
@property (retain, nonatomic) TVPVideoView *secondaryVideoView;
@property (weak, nonatomic) NSTimer *pauseStateTimeoutTimer;
@property (nonatomic, getter=isAutomaticPlaybackStart) BOOL automaticPlaybackStart;
@property (nonatomic) unsigned long long vpafPlaybackStartReason;
@property (nonatomic, getter=isAutomaticPlaybackStop) BOOL automaticPlaybackStop;
@property (nonatomic) unsigned long long vpafPlaybackStopReason;
@property (nonatomic) BOOL shouldPlayAfterAppBecomesActive;
@property (readonly, nonatomic, getter=isBackgrounded) BOOL backgrounded;
@property (nonatomic) BOOL didWeCreatePlayer;
@property (nonatomic) BOOL observingPictureInPictureActive;
@property (copy, nonatomic) NSString *titleForLogging;
@property (nonatomic) unsigned long long deactivationReasons;
@property (retain, nonatomic) NSObject<TVPAVFPlayback> *player;
@property (retain, nonatomic) AVPlayerViewController *avPlayerViewController;
@property (copy, nonatomic) TVMediaInfo *mediaInfo;
@property (weak, nonatomic) id<TVMediaControllerDelegate> delegate;
@property (nonatomic) BOOL showsVideoControls;
@property (nonatomic) BOOL allowsSkipping;
@property (nonatomic) BOOL shouldZoomWhenTransitioningToBackground;
@property (readonly, copy, nonatomic) NSString *name;
@property (nonatomic, getter=isPlaybackEnabled) BOOL playbackEnabled;
@property (nonatomic, getter=shouldStopPlayerWhenViewDisappears) BOOL stopPlayerWhenViewDisappears;
@property (nonatomic) BOOL clearPreviousImageBeforeLoading;
@property (nonatomic) BOOL popWhenPlayerStops;
@property (nonatomic, getter=isRestoringAVPlayerController) BOOL restoringAVPlayerController;
@property (nonatomic, getter=shouldStopWhenAnotherMediaControllerStarts) BOOL stopWhenAnotherMediaControllerStarts;
@property (readonly, nonatomic) UIImage *coverImage;

- (void)viewDidLoad;
- (BOOL)shouldUpdateFocusInContext:(id)a0;
- (void)viewWillDisappear:(BOOL)a0;
- (void).cxx_destruct;
- (id)initWithName:(id)a0;
- (id)init;
- (void)pause;
- (id)initWithCoder:(id)a0;
- (void)play;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)_applicationDidRemoveDeactivationReason:(id)a0;
- (BOOL)_canPause;
- (void)dealloc;
- (id)initWithNibName:(id)a0 bundle:(id)a1;
- (void)stop;
- (void)_applicationWillAddDeactivationReason:(id)a0;
- (void)_handleApplicationDidBecomeActiveNotification:(id)a0;
- (void)_handleApplicationWillResignActiveNotification:(id)a0;
- (void)_cleanUpEverything;
- (void)_registerStateMachineHandlers;
- (void)_registerForApplicationStateNotifications;
- (void)_stateDidChangeFromState:(id)a0 toState:(id)a1 onEvent:(id)a2 context:(id)a3 userInfo:(id)a4;
- (void)_addProxyImageView;
- (void)_updateAVPlayerViewControllerWithAVPlayerForPlayer:(id)a0;
- (void)_setImageProxies:(id)a0;
- (void)_updateMediaInfo;
- (void)_updateCurrentPlaybackViewFrameForPlaybackInBackground:(BOOL)a0 animated:(BOOL)a1;
- (void)_handleApplicationDidEnterBackgroundNotification:(id)a0;
- (BOOL)_shouldPausePlaybackDueToDeactivationReasons;
- (void)_playbackStateChanged:(id)a0;
- (void)_handlePlaybackErrorNotification:(id)a0;
- (void)_mediaControllerStartedPlayback:(id)a0;
- (void)_addOverlayViewAnimatedIfNeeded:(BOOL)a0 dismissAfter:(double)a1;
- (void)_addContentViewIfNeeded;
- (void)_setPlaylist:(id)a0;
- (void)_cleanUpEverythingPlaybackRelated;
- (void)_unregisterPlayerNotifications;
- (void)_removePlaybackViewController;
- (void)_removeOverlayView:(id)a0 animated:(BOOL)a1;
- (BOOL)isFullscreenPlaybackIntent;
- (BOOL)_hasSecondaryView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_playbackContainerViewFrame:(BOOL)a0 hasSecondaryVideoView:(BOOL)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_secondaryVideoViewFrame:(BOOL)a0;
- (BOOL)_shouldShowSecondaryView;
- (void)_registerPlayerNotifications;
- (void)_addPlaybackViewControllerForPlayback:(BOOL)a0;
- (void)_delayLoadImage:(id)a0;
- (void)_swapActiveMedia:(BOOL)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (BOOL)_shouldIgnorePlaybackStop;
- (void)transitionToForeground:(BOOL)a0 animated:(BOOL)a1;
- (void)_removeProxyImageView;

@end
