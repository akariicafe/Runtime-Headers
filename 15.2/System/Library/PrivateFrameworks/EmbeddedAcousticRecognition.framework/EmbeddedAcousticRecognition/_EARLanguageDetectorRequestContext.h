@class NSSet, NSDictionary, NSString, NSArray, NSNumber;

@interface _EARLanguageDetectorRequestContext : NSObject <NSCopying>

@property (readonly) struct LDContext { struct map<quasar::Locale, double, std::less<quasar::Locale>, std::allocator<std::pair<const quasar::Locale, double>>> { struct __tree<std::__value_type<quasar::Locale, double>, std::__map_value_compare<quasar::Locale, std::__value_type<quasar::Locale, double>, std::less<quasar::Locale>, true>, std::allocator<std::__value_type<quasar::Locale, double>>> { void *x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<quasar::Locale, double>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<quasar::Locale, std::__value_type<quasar::Locale, double>, std::less<quasar::Locale>, true>> { unsigned long long x0; } x2; } x0; } x0; struct optional<std::set<quasar::Locale>> { union { char x0; struct set<quasar::Locale, std::less<quasar::Locale>, std::allocator<quasar::Locale>> { struct __tree<quasar::Locale, std::less<quasar::Locale>, std::allocator<quasar::Locale>> { void *x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<quasar::Locale, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::less<quasar::Locale>> { unsigned long long x0; } x2; } x0; } x1; } x0; BOOL x1; } x1; struct optional<quasar::Locale> { union { char x0; struct Locale { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; } x1; } x0; BOOL x1; } x2; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x3; struct optional<std::vector<quasar::Locale>> { union { char x0; struct vector<quasar::Locale, std::allocator<quasar::Locale>> { struct Locale *x0; struct Locale *x1; struct __compressed_pair<quasar::Locale *, std::allocator<quasar::Locale>> { struct Locale *x0; } x2; } x1; } x0; BOOL x1; } x4; struct optional<std::map<quasar::Locale, double>> { union { char x0; struct map<quasar::Locale, double, std::less<quasar::Locale>, std::allocator<std::pair<const quasar::Locale, double>>> { struct __tree<std::__value_type<quasar::Locale, double>, std::__map_value_compare<quasar::Locale, std::__value_type<quasar::Locale, double>, std::less<quasar::Locale>, true>, std::allocator<std::__value_type<quasar::Locale, double>>> { void *x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<quasar::Locale, double>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<quasar::Locale, std::__value_type<quasar::Locale, double>, std::less<quasar::Locale>, true>> { unsigned long long x0; } x2; } x0; } x1; } x0; BOOL x1; } x5; struct optional<std::map<quasar::Locale, double>> { union { char x0; struct map<quasar::Locale, double, std::less<quasar::Locale>, std::allocator<std::pair<const quasar::Locale, double>>> { struct __tree<std::__value_type<quasar::Locale, double>, std::__map_value_compare<quasar::Locale, std::__value_type<quasar::Locale, double>, std::less<quasar::Locale>, true>, std::allocator<std::__value_type<quasar::Locale, double>>> { void *x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<quasar::Locale, double>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<quasar::Locale, std::__value_type<quasar::Locale, double>, std::less<quasar::Locale>, true>> { unsigned long long x0; } x2; } x0; } x1; } x0; BOOL x1; } x6; struct optional<quasar::Locale> { union { char x0; struct Locale { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; } x1; } x0; BOOL x1; } x7; struct optional<quasar::Locale> { union { char x0; struct Locale { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; } x1; } x0; BOOL x1; } x8; struct optional<std::map<quasar::Locale, double>> { union { char x0; struct map<quasar::Locale, double, std::less<quasar::Locale>, std::allocator<std::pair<const quasar::Locale, double>>> { struct __tree<std::__value_type<quasar::Locale, double>, std::__map_value_compare<quasar::Locale, std::__value_type<quasar::Locale, double>, std::less<quasar::Locale>, true>, std::allocator<std::__value_type<quasar::Locale, double>>> { void *x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<quasar::Locale, double>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<quasar::Locale, std::__value_type<quasar::Locale, double>, std::less<quasar::Locale>, true>> { unsigned long long x0; } x2; } x0; } x1; } x0; BOOL x1; } x9; } LDContext;
@property (copy, nonatomic) NSDictionary *languagePriors;
@property (copy, nonatomic) NSSet *dictationLanguages;
@property (copy, nonatomic) NSString *currentDictationLanguage;
@property (copy, nonatomic) NSNumber *wasLanguageToggled;
@property (copy, nonatomic) NSArray *multilingualKeyboardLanguages;
@property (copy, nonatomic) NSDictionary *keyboardConvoLanguagePriors;
@property (copy, nonatomic) NSDictionary *keyboardGlobalLanguagePriors;
@property (copy, nonatomic) NSString *previousMessageLanguage;
@property (copy, nonatomic) NSString *globalLastKeyboardUsed;
@property (copy, nonatomic) NSDictionary *dictationLanguagePriors;
@property (copy, nonatomic) NSArray *recentMessages;

+ (id)contextFromLDContext:(const void *)a0;

- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { } *)a0;

@end
