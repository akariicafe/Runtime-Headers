@class NSString, PSIWordEmbeddingTable, PSIStatement, NSDictionary, PSIIntArray, NSObject, NSMutableString, NSMutableArray, PSITokenizer;
@protocol OS_dispatch_queue;

@interface PSIDatabase : NSObject <PSIGroupCacheDelegate, PSIQueryDelegate, PSITableDelegate> {
    struct sqlite3 { } *_inqDatabase;
    BOOL _databaseIsValid;
    struct __CFDictionary { } *_inqPreparedStatements;
    PSIIntArray *_matchingIds;
    PSIWordEmbeddingTable *_inqWordEmbeddingTable;
    PSIStatement *_assetUUIDByAssetIdWithAssetIdsStatement;
    PSIStatement *_collectionResultByCollectionIdWithCollectionIdsStatement;
    PSIStatement *_inqAssetIdsByGroupIdForAssetIdsStatement;
    PSIStatement *_inqCollectionIdsByGroupIdForCollectionIdsStatement;
    PSIStatement *_inqNumberOfAssetsMatchingGroupWithIdStatement;
    PSIStatement *_inqNumberOfAssetsByGroupIdMatchingGroupsWithIdsStatement;
    PSIStatement *_inqNumberOfCollectionsMatchingGroupWithIdStatement;
    PSIStatement *_inqNumberOfCollectionsByGroupIdMatchingGroupsWithIdsStatement;
    PSIStatement *_inqIdsOfAllGroupsStatement;
    PSIStatement *_inqIdsOfAllGroupsInPrefixStatement;
    PSIStatement *_inqIdsOfAllGroupsInLookupStatement;
    PSIStatement *_inqRemoveGroupsFromLookupStatement;
    struct __CFDictionary { } *_inqGroupObjectsById;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSObject<OS_dispatch_queue> *_searchQueue;
    NSObject<OS_dispatch_queue> *_groupResultsQueue;
    NSDictionary *_inqSearchMetadata;
    PSITokenizer *_tokenizer;
    NSMutableString *_tokenizerOutputString;
    NSMutableArray *_tokenizerOutputTokens;
    NSMutableArray *_tokenizerOutputNormalizedTokens;
    struct { long long location; long long length; } _tokenizerOutputRanges[8];
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) PSITokenizer *tokenizer;
@property (readonly) NSObject<OS_dispatch_queue> *groupResultsQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSString *path;
@property (readonly, nonatomic) long long options;

+ (id)searchDatabaseLog;
+ (void)dropDatabaseAtPath:(id)a0 withCompletion:(id /* block */)a1;
+ (void)_dropDatabase:(struct sqlite3 { } *)a0 withCompletion:(id /* block */)a1;
+ (struct sqlite3 { } *)_openDatabaseAtPath:(id)a0 options:(long long)a1;
+ (BOOL)_integrityCheckDatabase:(struct sqlite3 { } *)a0;

- (void)executeStatement:(id)a0 withResultEnumerationBlock:(id /* block */)a1;
- (id)_inqDequeueGroupObjectWithId:(unsigned long long)a0 isCachedGroup:(BOOL *)a1;
- (id)dumpPrefixStringsForAssetUUID:(id)a0;
- (id)dumpPrefixStrings;
- (void)_inqDeleteFromLookupTableWithGroupId:(unsigned long long)a0;
- (id)_inqGroupWithFilenameStatement:(struct sqlite3_stmt { } *)a0 dateFilter:(id)a1 excludingGroupId:(unsigned long long)a2;
- (long long)lastInsertedRowID;
- (id)_inqAssetUUIDsForAssetIds:(struct __CFArray { } *)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 creationDateSorted:(BOOL)a2;
- (void)unbindMatchingIds;
- (id)allGroupIds;
- (void)_inqRemoveUUID:(id)a0 objectType:(unsigned long long)a1 isInBatch:(BOOL)a2;
- (void)updateSearchMetadata:(id)a0;
- (struct __CFArray { } *)_inqNewCollectionIdsForGroupId:(unsigned long long)a0 dateFilter:(id)a1;
- (struct __CFArray { } *)_inqNewAssetIdsWithDateFilter:(id)a0;
- (void)_processNextKeywordSuggestionsForQuery:(id)a0 groupResults:(id)a1 allowIdentifiers:(BOOL)a2;
- (id)_inqNonFilenameGroupsWithMatchingGroupIds:(struct __CFSet { } *)a0 dateFilter:(id)a1 includeObjects:(BOOL)a2 matchingPredicateBlock:(id /* block */)a3;
- (long long)insertCollection:(id)a0;
- (id)dumpLookupStringsWithIndexCategories:(id)a0;
- (void)_inqPrepareAndExecuteStatement:(const char *)a0;
- (id)assetUUIDByAssetIdWithAssetIds:(id)a0;
- (id)newQueryWithSearchText:(id)a0 identifiers:(id)a1 useWildcardSearchText:(BOOL)a2;
- (void)executeStatement:(id)a0;
- (id)_inqFilenameGroupsWithMatchingGroupIds:(struct __CFSet { } *)a0 dateFilter:(id)a1 matchingPredicateBlock:(id /* block */)a2;
- (id)wordEmbeddingMatchesForToken:(id)a0;
- (const struct __CFSet { } *)groupIdsMatchingString:(id)a0 categories:(id)a1 textIsSearchable:(BOOL)a2;
- (unsigned long long)_inqUpdateGroupForText:(id)a0 identifier:(id)a1 category:(short)a2 owningGroupId:(unsigned long long)a3 didUpdateGroup:(out BOOL *)a4;
- (void)linkAssetWithId:(long long)a0 toGroupWithId:(long long)a1;
- (void)_inqPerformBatch:(id /* block */)a0;
- (void)removeCollectionsWithUUIDs:(id)a0 completion:(id /* block */)a1;
- (void)removeUnusedGroups;
- (struct __CFSet { } *)_inqNewGroupIdsForCollectionIds:(struct __CFSet { } *)a0;
- (void)addAsset:(id)a0 withCompletion:(id /* block */)a1;
- (void)executeQuery:(id)a0 resultsHandler:(id /* block */)a1;
- (void)_inqExecutePreparedStatement:(struct sqlite3_stmt { } *)a0 withStatementBlock:(id /* block */)a1;
- (unsigned long long)updateGroupForText:(id)a0 identifier:(id)a1 category:(short)a2 owningGroupId:(unsigned long long)a3 didUpdateGroup:(out BOOL *)a4;
- (struct __CFArray { } *)_inqNewCollectionIdsWithDateFilter:(id)a0;
- (unsigned long long)_inqUpdateGroupForText:(id)a0 normalizedText:(id)a1 identifier:(id)a2 category:(short)a3 owningGroupId:(unsigned long long)a4 shouldUpdateOwningGroupId:(BOOL)a5 didUpdateGroup:(out BOOL *)a6;
- (void)_inqSync:(id /* block */)a0;
- (void)removeAssetWithUUID:(id)a0 completion:(id /* block */)a1;
- (void)_ingRebuildPrefixTableIfNeeded;
- (id)collectionResultByCollectionIdWithCollectionIds:(id)a0;
- (id)_inqAssetUUIDByAssetIdWithAssetIds:(id)a0;
- (void)_executeQuery:(id)a0 resultsHandler:(id /* block */)a1;
- (id)newQueryWithSearchText:(id)a0 representedObjects:(id)a1 useWildcardSearchText:(BOOL)a2;
- (BOOL)assetExistsWithUUID:(id)a0;
- (id)_inqNewSynonymTextsByOwningGroupIdWithGroupIds:(struct __CFSet { } *)a0;
- (unsigned long long)_inqGroupIdForCategory:(short)a0 owningGroupId:(unsigned long long)a1 contentString:(id)a2 normalizedString:(id)a3 identifier:(id)a4 insertIfNeeded:(BOOL)a5 tokenOutput:(const struct tokenOutput_t { id x0; id x1; id x2; struct *x3; long long x4; long long x5; struct *x6; long long x7; long long x8; } *)a6 shouldUpdateOwningGroupId:(BOOL)a7 didUpdateGroup:(out BOOL *)a8;
- (void)prepareForNumberOfMatchingIds:(unsigned long long)a0;
- (id)_inqGroupWithStatement:(struct sqlite3_stmt { } *)a0 dateFilter:(id)a1 includeObjects:(BOOL)a2;
- (id)_inqAssetUUIDsForAssetIds:(struct __CFSet { } *)a0;
- (void)executeStatementFromString:(id)a0;
- (struct __CFSet { } *)_inqNewGroupIdsWithCategories:(id)a0;
- (id)_inqGroupsWithMatchingGroupIds:(struct __CFSet { } *)a0 dateFilter:(id)a1 includeObjects:(BOOL)a2 matchingPredicateBlock:(id /* block */)a3;
- (id)_inqNumberOfCollectionsByGroupIdMatchingGroupsWithIds:(id)a0;
- (id)newQueryWithSearchText:(id)a0 queryTokens:(id)a1 useWildcardSearchText:(BOOL)a2;
- (double)_scoreForUserCategory:(unsigned long long)a0;
- (struct sqlite3_stmt { } *)_inqPrepareStatement:(const char *)a0;
- (void)bindMatchingIds:(struct __CFSet { } *)a0;
- (id)_inqGroupArraysFromGroupIdSets:(id)a0 dateFilter:(id)a1 progressBlock:(id /* block */)a2;
- (id)suggestionWhitelistedScenes;
- (void)_finalizeEverything;
- (unsigned long long)_inqCollectionIdWithCollection:(id)a0;
- (id)_inqCollectionResultsForCollectionIds:(struct __CFArray { } *)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (id)initWithPath:(id)a0 options:(long long)a1 searchMetadata:(id)a2;
- (void)executeStatementFromString:(id)a0 withResultEnumerationBlock:(id /* block */)a1;
- (id)groupWithMatchingGroupId:(unsigned long long)a0 dateFilter:(id)a1;
- (struct __CFSet { } *)_inqNewGroupIdsForCollectionId:(unsigned long long)a0;
- (void)addAssets:(id)a0 withCompletion:(id /* block */)a1;
- (id)_inqCollectionResultByCollectionIdWithCollectionIds:(id)a0;
- (void)unprepareMatchingIds;
- (id)_inqContentStringForGroupId:(unsigned long long)a0;
- (void)fetchAssetUUIDsForAssetIDs:(struct __CFArray { } *)a0 creationDateSorted:(BOOL)a1 completionHandler:(id /* block */)a2;
- (void)linkCollectionWithId:(long long)a0 toGroupWithId:(long long)a1;
- (unsigned long long)_inqCollectionIdForUUID:(id)a0;
- (void)deleteFromLookupTableWithGroupId:(unsigned long long)a0;
- (void)_inqRemoveUnusedGroups;
- (id)_inqOwningContentStringForGroupResult:(id)a0;
- (void).cxx_destruct;
- (void)_inSearchQueueAsync:(id /* block */)a0;
- (BOOL)isDatabaseCorrupted;
- (id)_inqCollectionIdsByGroupIdForCollectionIds:(id)a0;
- (void)addCollection:(id)a0 withCompletion:(id /* block */)a1;
- (unsigned long long)_inqNumberOfCollectionsMatchingGroupWithId:(unsigned long long)a0;
- (void)addCollections:(id)a0 withCompletion:(id /* block */)a1;
- (id)groupIdsInPrefixTable;
- (void)dropDatabaseWithCompletion:(id /* block */)a0;
- (id)statementFromString:(id)a0;
- (id)_inqNumberOfAssetsByGroupIdMatchingGroupsWithIds:(id)a0;
- (void)_inqGetTokensFromString:(id)a0 category:(short)a1 tokenOutput:(struct tokenOutput_t { id x0; id x1; id x2; struct *x3; long long x4; long long x5; struct *x6; long long x7; long long x8; } *)a2;
- (unsigned long long)_inqNumberOfAssetsMatchingGroupWithId:(unsigned long long)a0;
- (id)allAssetUUIDsForGroupsWithCategories:(id)a0;
- (void)deleteGroupsWithGraphCollectionsForPersonUUIDs:(id)a0 withCompletion:(id /* block */)a1;
- (long long)insertAsset:(id)a0;
- (unsigned long long)_inqCollectionIdForUUID:(id)a0 uuid_0:(unsigned long long *)a1 uuid_1:(unsigned long long *)a2;
- (struct __CFSet { } *)_inqNewGroupIdsForAssetIds:(struct __CFSet { } *)a0;
- (unsigned long long)_inqAssetIdForUUID:(id)a0;
- (void)_inqUpdateSearchTermsWithSearchableTermsByGroupIds:(id)a0;
- (void)_inqUpdateGCTableWithGroupId:(unsigned long long)a0 collectionId:(unsigned long long)a1;
- (BOOL)isLookupTableOutOfSync;
- (void)_inqDeleteGroupsWithGraphCollectionsForPersonUUID:(id)a0;
- (unsigned long long)_inqAssetIdForUUID:(id)a0 uuid_0:(unsigned long long *)a1 uuid_1:(unsigned long long *)a2;
- (void)_removeUUIDs:(id)a0 objectType:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)_inqAsync:(id /* block */)a0;
- (id)newQueryWithSearchText:(id)a0;
- (id)_inqGroupWithMatchingGroupId:(unsigned long long)a0 dateFilter:(id)a1;
- (void)_prepareTokenOutput:(struct tokenOutput_t { id x0; id x1; id x2; struct *x3; long long x4; long long x5; struct *x6; long long x7; long long x8; } *)a0 forIndexing:(BOOL)a1;
- (struct __CFSet { } *)_inqNewGroupIdsMatchingString:(id)a0 categories:(id)a1 textIsSearchable:(BOOL)a2;
- (void)removeAssetsWithUUIDs:(id)a0 completion:(id /* block */)a1;
- (void)group:(id)a0 fetchOwningContentString:(BOOL)a1 assetIdRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 collectionIdRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 completionHandler:(id /* block */)a4;
- (struct sqlite3 { } *)databaseConnection;
- (void)_inqExecutePreparedStatement:(struct sqlite3_stmt { } *)a0 allowError:(int)a1 withStatementBlock:(id /* block */)a2;
- (void)dealloc;
- (void)_inqUpdateGATableWithGroupId:(unsigned long long)a0 assetId:(unsigned long long)a1;
- (struct __CFArray { } *)_inqNewAssetIdsForGroupId:(unsigned long long)a0 dateFilter:(id)a1;
- (long long)insertGroup:(id)a0;
- (id)_inqGroupResultWithDateFilter:(id)a0 datedTokens:(id)a1;
- (void)_inqRecycleGroups;
- (struct __CFSet { } *)_inqNewGroupIdsForAssetId:(unsigned long long)a0;
- (struct __CFSet { } *)_inqNewGroupIdsMatchingString:(id)a0 textIsSearchable:(BOOL)a1;
- (id)wordEmbeddingVersion;
- (id)meNodeIdentifier;
- (void)removeCollectionWithUUID:(id)a0 completion:(id /* block */)a1;
- (unsigned long long)_inqAssetIdWithAsset:(id)a0;
- (void)_inqAddToLookupTableWithGroupId:(unsigned long long)a0 text:(id)a1 category:(short)a2;
- (id)allCollectionUUIDsWithCollectionType:(unsigned long long)a0;
- (id)_inqGroupWithStatement:(struct sqlite3_stmt { } *)a0 dateFilter:(id)a1 includeObjects:(BOOL)a2 isFilenameStatement:(BOOL)a3 excludingGroupId:(unsigned long long)a4;
- (id)groupIdsInLookupTable;
- (id)_inqAssetIdsByGroupIdForAssetIds:(id)a0;
- (id)groupArraysFromGroupIdSets:(id)a0 dateFilter:(id)a1 progressBlock:(id /* block */)a2;
- (void)bindMatchingIds:(const long long *)a0 numberOfMatchingIds:(unsigned long long)a1;
- (id)groupResultWithDateFilter:(id)a0 datedTokens:(id)a1;
- (void)bindMatchingIds:(struct __CFArray { } *)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;

@end
