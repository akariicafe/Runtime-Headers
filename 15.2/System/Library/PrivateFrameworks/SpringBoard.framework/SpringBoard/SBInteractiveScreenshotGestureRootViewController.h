@class SSFlashView, SBInteractiveScreenshotSettings, NSObject, FBScene, SSChromePlaceholderViewController, _SBInteractiveScreenshotGestureReplicatorView, UIView, _SBInteractiveScreenshotGestureBackdropView, NSString, SBOrientationTransformWrapperView, NSMutableArray, UIStatusBar, UIViewFloatAnimatableProperty, SBInteractiveScreenshotGestureCropsView, SBFFluidBehaviorSettings, UIImageView;
@protocol UIScenePresentation, SBInteractiveScreenshotGestureRootViewControllerDelegate, UIScenePresenter, OS_dispatch_queue;

@interface SBInteractiveScreenshotGestureRootViewController : UIViewController <BSInvalidatable> {
    _SBInteractiveScreenshotGestureBackdropView *_contentCapturingView;
    SSChromePlaceholderViewController *_chromePlaceholderViewController;
    SBOrientationTransformWrapperView *_chromePlaceholderOrientationWrapperView;
    UIStatusBar *_chromePlaceholderStatusBar;
    _SBInteractiveScreenshotGestureBackdropView *_contentBackdropView;
    SBInteractiveScreenshotGestureCropsView *_cropsView;
    SSFlashView *_flashView;
    struct CGPoint { double x; double y; } _gesturePortraitAnchorPoint;
    BOOL _hasCrossedCommitThreshold;
    BOOL _hasPreparedInitialLayout;
    UIView *_materialView;
    UIViewFloatAnimatableProperty *_cancellationCommitProgressAnimatableProperty;
    NSMutableArray *_cropLinesAlphaMultiPartAnimations;
    UIViewFloatAnimatableProperty *_cropsTrackingDiscreteAnimationProgressAnimatableProperty;
    UIViewFloatAnimatableProperty *_cropsProgressPresentationValueAnimatableProperty;
    UIViewFloatAnimatableProperty *_cropsProgressSeparatedValuesAnimatableProperty;
    UIViewFloatAnimatableProperty *_transformProgressAnimatableProperty;
    UIViewFloatAnimatableProperty *_translationXAnimatableProperty;
    UIViewFloatAnimatableProperty *_translationYAnimatableProperty;
    _SBInteractiveScreenshotGestureReplicatorView *_replicatorView;
    UIImageView *_screenshotImageView;
    UIView *_screenshotContainerView;
    SBInteractiveScreenshotSettings *_settings;
    FBScene *_sourceScene;
    UIView<UIScenePresentation> *_sourceScenePresentationView;
    id<UIScenePresenter> _sourceScenePresenter;
    UIView *_topContentContainerView;
    SBFFluidBehaviorSettings *_trackingCropsAnimationSettings;
    NSMutableArray *_gestureCommitProgressUpdates;
    NSMutableArray *_gestureCommitProgressUpdateTimestamps;
    NSObject<OS_dispatch_queue> *_accessQueue;
    double _queue_cropsCornerContentPadding;
    double _queue_cropsCornerLineWidth;
    double _queue_displayCornerRadius;
    double _queue_displayScale;
    long long _queue_gestureStyle;
    long long _queue_gestureTouchInterfaceOrientation;
    BOOL _queue_hasCommittedScreenshot;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _queue_portraitBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _queue_screenshotContentFrame;
}

@property (weak, nonatomic) id<SBInteractiveScreenshotGestureRootViewControllerDelegate> delegate;
@property (readonly, nonatomic) unsigned int flashViewLayerContextID;
@property (readonly, nonatomic) unsigned long long flashViewLayerRenderID;
@property (nonatomic) long long gestureStyle;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (BOOL)_canShowWhileLocked;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_edgeInsetsForChildViewController:(id)a0 insetsAreAbsolute:(BOOL *)a1;
- (void).cxx_destruct;
- (unsigned long long)supportedInterfaceOrientations;
- (void)invalidate;
- (void)handlePanGestureRecognizerAction:(id)a0;
- (id)_createMaterialViewWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 groupName:(id)a1 isCaptureOnly:(BOOL)a2;
- (id)_createFlashViewWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_updateContentTransformUsingPresentationValues:(BOOL)a0;
- (void)_updateCropLinesMultiPartAnimationForCropsProgress;
- (double)_currentCommitProgressVelocity;
- (void)_injectCommitProgressVelocity:(double)a0;
- (BOOL)_isGestureStyleReducedMotion:(long long)a0;
- (void)_updateWithUpdateMode:(long long)a0 contentAnimationSettings:(id)a1 commitProgress:(double)a2 additionalContentTranslation:(struct CGPoint { double x0; double x1; })a3 completion:(id /* block */)a4;
- (void)_prepareViewHierarchyForCommittedScreenshot:(BOOL)a0 gestureStyle:(long long)a1;
- (double)_gestureCommitProgressUpdateVelocityOverTimeInterval:(double)a0;
- (void)_updateWithUpdateMode:(long long)a0 commitProgress:(double)a1 additionalContentTranslation:(struct CGPoint { double x0; double x1; })a2 completion:(id /* block */)a3;
- (void)_getDistanceTraveled:(double *)a0 fullDistance:(double *)a1 commitProgress:(double *)a2 forTranslationFromCorner:(struct CGPoint { double x0; double x1; })a3 bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a4;
- (void)_addGestureUpdateWithCommitProgress:(double)a0 timestamp:(double)a1;
- (BOOL)_isGestureStyleDisabled:(long long)a0;
- (void)_getContentTranslation:(struct CGPoint { double x0; double x1; } *)a0 scale:(struct CGPoint { double x0; double x1; } *)a1 forCommitProgress:(double)a2 contentInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a3 additionalContentTranslation:(struct CGPoint { double x0; double x1; })a4;
- (void)_cancellationCommitProgressAnimatablePropertyPresentationValueDidChange;
- (id)_createScreenshotImageViewWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })_contentTransformForCommitProgress:(double)a0 contentInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a1 additionalContentTranslation:(struct CGPoint { double x0; double x1; })a2;
- (struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })_inverseContentTransformForCommitProgress:(double)a0 contentInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a1 additionalContentTranslation:(struct CGPoint { double x0; double x1; })a2;
- (struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })_anchoredTransformForAnchorPoint:(struct CGPoint { double x0; double x1; })a0 bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 center:(struct CGPoint { double x0; double x1; })a2 transform:(struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })a3;
- (id)initWithSourceScene:(id)a0;
- (void)cancelInteractionWithStyle:(long long)a0 settlingCompletionHandler:(id /* block */)a1;
- (void)captureScreenshotWithInterfaceOrientation:(long long)a0 completion:(id /* block */)a1;
- (void)commitInteractionWithScreenshotImage:(id)a0 screenshotInterfaceOrientation:(long long)a1 settlingCompletionHandler:(id /* block */)a2 flashCompletionHandler:(id /* block */)a3;
- (void)removePlaceholderChrome;

@end
