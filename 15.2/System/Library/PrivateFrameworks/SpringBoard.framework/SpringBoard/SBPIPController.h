@class SBIdleTimerCoordinatorHelper, SBPIPWindow, NSMutableDictionary, SBPIPInteractionSettings, SBPIPStashAssertion, BSCompoundAssertion, NSMutableArray, UIView, NSString, NSHashTable, NSMutableSet, SBPIPInterruptionDebouncingTimer, FBSDisplayLayoutMonitor;
@protocol SBPIPControllerAdapter, SBIdleTimerCoordinating, BSInvalidatable;

@interface SBPIPController : NSObject <SBPIPContainerViewControllerObserver, SBAlertItemsControllerObserver, SBAssistantObserver, SBSensorActivityObserver, SBWorkspaceKeyboardFocusControllerObserver, SBPIPControllerAdapterContextProviding, SBLayoutStateTransitionObserver, SBIdleTimerProviding, SBPIPMorphAnimatorControllerDelegate> {
    id<BSInvalidatable> _stateCaptureInvalidatable;
    SBPIPInteractionSettings *_interactionSettings;
    double _windowLevel;
    BOOL _hasIdleTimerBehaviors;
    id<SBIdleTimerCoordinating> _idleTimerCoordinator;
    SBIdleTimerCoordinatorHelper *_idleTimerCoordinatorHelper;
    NSMutableArray *_windowLevelOverrideAssertions;
    NSMutableSet *_pictureInPictureWindowHiddenReasons;
    SBPIPWindow *_pictureInPictureWindow;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _pictureInPictureWindowMargin;
    NSMutableDictionary *_pictureInPictureInsetsForSource;
    BOOL _expectKeyboardVisible;
    NSMutableArray *_stashAssertions;
    NSHashTable *_interruptionAssertions;
    BSCompoundAssertion *_insetsOverrideAssertions;
    NSMutableDictionary *_cameraInterruptionAssertions;
    id<BSInvalidatable> _fullscreenModalElementInsetOverrideAssertion;
    SBPIPStashAssertion *_stashForInterruptionAssertion;
    SBPIPStashAssertion *_transitionStashAssertion;
    SBPIPInterruptionDebouncingTimer *_interruptionEndDebouncingTimer;
    BOOL _defaultToStashed;
    NSMutableSet *_pictureInPictureMorphAnimatorControllers;
    UIView *_keyboardInsetsVisualizerView;
    long long _unlockedEnvironmentModeWhenKeyboardFocusChanged;
    FBSDisplayLayoutMonitor *_displayLayoutMonitor;
    BOOL _isReducingResourcesUsage;
    NSHashTable *_weakObservers;
    id<BSInvalidatable> _keyboardFocusObserver;
    id<SBPIPControllerAdapter> _adapter;
    unsigned char _adapterWants_didAddContainerViewController : 1;
    unsigned char _adapterWants_willRemoveContainerViewController : 1;
    unsigned char _adapterWants_willBeginPIPInterruptionForAssertion : 1;
    unsigned char _adapterWants_willEndPIPInterruptionForAssertion : 1;
    unsigned char _adapterWants_didStartPictureInPictureCallback : 1;
    unsigned char _adapterWants_didCancelPictureInPictureCallback : 1;
    unsigned char _adapterWants_morphAnimatorDataSourceForTargetProcessIdentifier : 1;
    unsigned char _adapterWants_willStartPictureInPictureTestActionForApplication : 1;
    unsigned char _adapterWants_willRestorePictureInPictureForTestForApplication : 1;
    unsigned char _adapterWants_windowLevelChanged : 1;
    unsigned char _adapterWants_windowVisibilityChanged : 1;
    unsigned char _adapterWants_preventStashAssertions : 1;
}

@property (readonly, nonatomic) BOOL hasIdleTimerBehaviors;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } minimumStashedPadding;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) double windowLevel;

+ (BOOL)_layoutState:(id)a0 hasMeaningfullyChangedFromOldLayoutState:(id)a1;

- (id)_currentLayoutState;
- (void)_lockStateDidChange:(id)a0;
- (void)assistantWillAppear:(id)a0;
- (void)_keyboardWillChangeFrame:(id)a0;
- (void)alertItemsController:(id)a0 didActivateAlertItem:(id)a1;
- (BOOL)_isContentViewAlignedTopWithPosition:(unsigned long long)a0 orientation:(long long)a1;
- (void)alertItemsController:(id)a0 willActivateAlertItem:(id)a1;
- (void)alertItemsController:(id)a0 didDeactivateAlertItem:(id)a1 forReason:(int)a2;
- (void)morphAnimatorControllerDidTerminate:(id)a0;
- (void)assistantDidDisappear:(id)a0;
- (void)removeContainerViewController:(id)a0;
- (BOOL)isPresentingPictureInPictureRequiringMedusaKeyboard;
- (void)applyPictureInPictureInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a0 forSource:(long long)a1;
- (id)acquireStashAssertionForReason:(long long)a0 identifier:(id)a1;
- (void)_floatingDockHeightWillChange:(id)a0;
- (id)acquireInterruptionAssertionForReason:(long long)a0 identifier:(id)a1;
- (void)handleDestructionRequestForSceneHandles:(id)a0;
- (void)invalidateIdleTimerBehaviors;
- (long long)contentType;
- (id)coordinatorRequestedIdleTimerBehavior:(id)a0;
- (void)_enumerateObserversRespondingToSelector:(SEL)a0 usingBlock:(id /* block */)a1;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_updatePictureInPictureOverlayInsetsWithCurrentLayoutState:(BOOL)a0;
- (id)anyPresentedContentView;
- (void)_setAdapter:(id)a0;
- (void)_setContainersStashed:(BOOL)a0;
- (void)endPIPInterruptionForAssertion:(id)a0;
- (void)_restorePictureInPictureForTestForApplicationWithBundleIdentifier:(id)a0;
- (void)updateContentPaddingForContainerViewController:(id)a0;
- (void)displayLayoutMonitor:(id)a0 didUpdateDisplayLayout:(id)a1 withContext:(id)a2;
- (void)addObserver:(id)a0;
- (id)pictureInPictureMorphAnimatorControllerForProcessIdentifier:(int)a0 scenePersistenceIdentifier:(id)a1;
- (void)removeObserver:(id)a0;
- (BOOL)isPictureInPictureWindowVisible;
- (void)layoutStateTransitionCoordinator:(id)a0 transitionDidEndWithTransitionContext:(id)a1;
- (id)acquirePictureInPictureWindowLevelOverrideAssertionForWindowLevel:(unsigned long long)a0 withReason:(long long)a1 identifier:(id)a2;
- (void)_visualizeKeyboardFrameIfNeeded:(id)a0;
- (void)cancelPictureInPictureForApplicationWithProcessIdentifierEnteringBackground:(int)a0 scenePersistenceIdentifier:(id)a1;
- (id)morphAnimatorController:(id)a0 dataSourceWithTargetProcessIdentifier:(int)a1 scenePersistenceIdentifier:(id)a2 gestureInitiated:(BOOL)a3;
- (BOOL)isStoppingOrCancellingPictureInPictureForApplicationWithBundleIdentifier:(id)a0 scenePersistenceIdentifier:(id)a1;
- (void)_addPictureInPictureMorphAnimatorController:(id)a0;
- (id)_overrideInsetsForReason:(id)a0 withIdentifier:(id)a1;
- (id)_acquireStashAssertionForReason:(long long)a0 identifier:(id)a1 customAllowedEnvironmentModes:(id)a2;
- (void)layoutStateTransitionCoordinator:(id)a0 transitionDidBeginWithTransitionContext:(id)a1;
- (long long)interfaceOrientationForContainerViewController:(id)a0;
- (void)_shelfHeightDidChange:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })homeScreenInitialPIPFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withContentViewSize:(struct CGSize { double x0; double x1; })a1 position:(unsigned long long)a2 padding:(double)a3 fromOrientation:(long long)a4 toOrientation:(long long)a5 shouldUpdate:(BOOL)a6 gestureInitiated:(BOOL)a7;
- (void)_updateFloatingDockInsetsWithHeight:(double)a0;
- (void)_startPictureInPictureTestActionForApplicationWithBundleIdentifier:(id)a0;
- (long long)tetheringModeForScenePersistenceIdentifier:(id)a0;
- (void)_createWindowAndRootViewControllerIfNeeded;
- (void)_managePictureInPictureWindowLevel;
- (id)hostedAppSceneHandles;
- (void)_keyboardWillShowOrHide:(id)a0;
- (void)containerViewController:(id)a0 didFinishStartAnimationWithInitialInterfaceOrientation:(long long)a1;
- (void)_keyboardWillRotate:(id)a0;
- (void)containerViewController:(id)a0 userDidUpdateStashState:(BOOL)a1;
- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_keyboardFrameInScreenSpaceFromNotification:(id)a0;
- (void)_updateFloatingDockInsets;
- (void)setPictureInPictureWindowHidden:(BOOL)a0 withReason:(id)a1;
- (id)initWithIdleTimerCoordinator:(id)a0 windowLevel:(double)a1 interactionSettings:(id)a2 adapter:(id)a3;
- (void)_setPictureInPictureWindowMargin:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a0;
- (BOOL)shouldStartPictureInPictureForApplicationWithProcessIdentifierEnteringBackground:(int)a0 scenePersistenceIdentifier:(id)a1;
- (void)prepareContainerViewControllerForHidingContentViewController:(id)a0;
- (void)activityDidChangeForSensorActivityDataProvider:(id)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_updatePictureInPictureOverlayInsetsWithCurrentLayoutState:(BOOL)a0 shouldUpdate:(BOOL)a1;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_pictureInPictureWindowMargins;
- (BOOL)_pointInside:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)_isContentViewAlignedLeftWithPosition:(unsigned long long)a0 orientation:(long long)a1;
- (void)_managePictureInPictureWindowVisibilityAnimated:(BOOL)a0;
- (void)_adjustPIPInsetsForKeyboardFrameChangeNotification:(id)a0;
- (void)_cancelInterruptionDebouncingTimer;
- (void)containerViewControllerUserMayUpdateStashState:(id)a0;
- (void)_relinquishPIPStashAssertionIfNecessaryForTransitionContext:(id)a0;
- (void)addContainerViewController:(id)a0 dataSource:(id)a1;
- (void)startPictureInPictureForApplicationWithProcessIdentifierEnteringBackground:(int)a0 scenePersistenceIdentifier:(id)a1 animated:(BOOL)a2 completionHandler:(id /* block */)a3;
- (id)createAndRegisterPictureInPictureMorphAnimatorControllerWithTargetProcessIdentifier:(int)a0 uuid:(id)a1 scenePersistenceIdentifier:(id)a2 direction:(long long)a3 gestureInitiated:(BOOL)a4;
- (BOOL)_acquirePIPStashAssertionIfNecessaryForTransitionContext:(id)a0;
- (void)dealloc;
- (id)containerViewControllerForContentViewController:(id)a0;
- (void)_destroyWindowAndRootViewControllerIfPossible;
- (BOOL)_shouldStashForTransitionContext:(id)a0;
- (void)restoreContentViewController:(id)a0 appSceneEntity:(id)a1 morphAnimatorConfigurationBlock:(id /* block */)a2 completion:(id /* block */)a3;
- (void)_removePictureInPictureMorphAnimatorController:(id)a0;
- (id)_pipWindow;
- (id)acquireInterruptionAssertionForReason:(long long)a0 identifier:(id)a1 cameraSensorBundleIdentifier:(id)a2;
- (void)updatePictureInPictureWindowLevel;
- (void)_updateContainerViewControllersContentPadding;
- (void)keyboardFocusController:(id)a0 externalSceneDidAcquireFocus:(id)a1;
- (id)allContainerViewControllers;

@end
