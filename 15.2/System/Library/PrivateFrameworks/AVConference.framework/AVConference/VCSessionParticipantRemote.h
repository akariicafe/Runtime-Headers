@class NSString, NSArray, VCSessionBandwidthAllocationTable, VCAudioPowerSpectrumSource, NSMutableDictionary, VCPositionalInfo, TimingCollection, VCSessionParticipantMediaStreamInfo, NSNumber, NSObject;
@protocol OS_dispatch_source, OS_nw_activity;

@interface VCSessionParticipantRemote : VCSessionParticipant <VCSessionDownlinkBandwidthAllocatorClient> {
    BOOL _remoteSystemAudioPaused;
    BOOL _receivedFirstFrame;
    VCSessionBandwidthAllocationTable *_mediaTable;
    VCSessionBandwidthAllocationTable *_repairMediaTable;
    unsigned char _lastVideoPriority;
    BOOL _isVideoDegraded;
    BOOL _isRedundancyRequested;
    BOOL _isRemoteMediaStalled;
    struct tagVCAudioStreamGroupPriorityInfo { BOOL isAudioActive; unsigned int audioActiveProbabilityThreshold; unsigned int audioInactiveProbabilityThreshold; unsigned int audioActiveAccumulationThreshold; unsigned int audioInactiveAccumulationThreshold; unsigned int audioActiveCount; unsigned int lastAudioPriority; unsigned int refreshCounter; } _mediaPriorityInfo;
    TimingCollection *_perfTimers;
    BOOL _haveReportedPerfTimers;
    BOOL _isMediaSuspended;
    BOOL _oneToOneVideoEnabled;
    struct _VCSessionParticipantSourceIO { struct opaqueVCAudioBufferList *sourceBuffer; struct tagVCAudioStreamGroupPriorityInfo { BOOL isAudioActive; unsigned int audioActiveProbabilityThreshold; unsigned int audioInactiveProbabilityThreshold; unsigned int audioActiveAccumulationThreshold; unsigned int audioInactiveAccumulationThreshold; unsigned int audioActiveCount; unsigned int lastAudioPriority; unsigned int refreshCounter; } mediaPriorityInfo; unsigned int processedAudioFramesCount; BOOL sharedIsAudioSpectrumActive; VCAudioPowerSpectrumSource *audioPowerSpectrumSource; VCSessionParticipantRemote *self; unsigned long long idsParticipantId; BOOL audioStreamsPaused; struct _VCSessionParticipantSourceIOStream *audioStreams; } _sourceIO;
    void *_spatialMetadataEntry;
    unsigned int _audioChannelIndex;
    NSObject<OS_nw_activity> *_nwActivity;
    NSObject<OS_nw_activity> *_participantPoorConnectionNwActivity;
    NSObject<OS_nw_activity> *_participantMediaStallNwActivity;
    double _lastVideoExpectationSwitch;
    BOOL _isVideoExpected;
    BOOL _isVideoJitterForPlayoutEnabled;
    BOOL _remoteScreenEnabledStateChanged;
    NSMutableDictionary *_jbSynchronizerPerSyncGroupID;
    NSObject<OS_dispatch_source> *_remoteStreamGroupStateUpdateTimer;
}

@property (readonly, nonatomic) VCSessionParticipantMediaStreamInfo *audioStreamInfo;
@property (readonly, nonatomic) VCSessionParticipantMediaStreamInfo *videoStreamInfo;
@property (readonly, nonatomic) VCSessionParticipantMediaStreamInfo *screenStreamInfo;
@property (retain, nonatomic) NSNumber *optedInAudioStreamID;
@property (readonly, nonatomic) NSNumber *optedInVideoStreamID;
@property (nonatomic, getter=isRemoteVideoEnabled) BOOL remoteVideoEnabled;
@property (nonatomic, getter=isRemoteAudioEnabled) BOOL remoteAudioEnabled;
@property (nonatomic, getter=isRemoteScreenEnabled) BOOL remoteScreenEnabled;
@property (nonatomic, getter=isRemoteVideoPaused) BOOL remoteVideoPaused;
@property (nonatomic, getter=isRemoteAudioPaused) BOOL remoteAudioPaused;
@property (readonly, nonatomic) BOOL isVideoExpected;
@property (nonatomic) unsigned char videoQuality;
@property (nonatomic) unsigned int visibilityIndex;
@property (nonatomic) unsigned int prominenceIndex;
@property (readonly, nonatomic) unsigned int lastDisplayedFrameRTPTimestamp;
@property (nonatomic) struct _VCSessionParticipantCapabilities { BOOL isPeace; BOOL isWebRTC; int controlChannelVersion; BOOL supportsGFTSwitchToOneToOne; } capabilities;
@property (readonly, nonatomic) VCPositionalInfo *positionalInfo;
@property (readonly) NSString *uuid;
@property (readonly) NSArray *mediaEntries;
@property (readonly) BOOL isVisible;

+ (BOOL)isDeviceLargeScreen;
+ (unsigned int)maxVideoNetworkBitrateForVideoQuality:(unsigned char)a0 isLocalOnWiFi:(BOOL)a1 isRedundancyRequested:(BOOL)a2;
+ (unsigned int)maxAudioNetworkBitrateForLocalInterfaceOnWiFi:(BOOL)a0 isLowLatencyAudio:(BOOL)a1;

- (void)setMuted:(BOOL)a0;
- (void)setSharingEnabled:(BOOL)a0;
- (void)start;
- (void)cleanupSpatialAudio;
- (void)dealloc;
- (void)stop;
- (void)setAudioPaused:(BOOL)a0;
- (BOOL)isInCanvas;
- (void)setVideoDegraded:(BOOL)a0;
- (void)setVideoPaused:(BOOL)a0;
- (void)completeAndReleaseNwActivity:(id)a0 withReason:(int)a1;
- (void)cleanupNwActivity;
- (void)setActiveStreamIDs:(id)a0;
- (void)vcMediaStream:(id)a0 remoteMediaStalled:(BOOL)a1 duration:(double)a2;
- (BOOL)configureAudioIOWithDeviceRole:(int)a0 operatingMode:(int)a1;
- (id)getAudioDumpName;
- (void)redundancyController:(id)a0 redundancyPercentageDidChange:(unsigned int)a1;
- (id)entryForStreamID:(id)a0;
- (id)initWithConfig:(id)a0 delegate:(id)a1;
- (void)setupJBTargetSynchronizers;
- (BOOL)processParticipantInfo;
- (int)setupSpatialAudioWithMetadata:(void *)a0;
- (BOOL)setupStreamGroups;
- (BOOL)supportsGFTSwitchToOneToOne;
- (void)updateDownlinkBandwithAllocatorClientConfigurations:(id)a0;
- (void)updateAudioSpectrumState;
- (void)createAndResumeFetchTimer;
- (void)cancelAndReleaseFetchTimer;
- (id)audioGroup;
- (void)updateAndHandleVideoMediaStall:(BOOL)a0 isOneToOneStream:(BOOL)a1;
- (id)screenGroup;
- (void)setRemoteSystemAudioPaused:(BOOL)a0;
- (void)setTransitionToEnabled:(unsigned int)a0;
- (void)setTransitionToPaused:(unsigned int)a0;
- (void)setTransitionToDisabled:(unsigned int)a0;
- (id)videoGroup;
- (void)updateShouldEnableFaceZoom;
- (void)updateShouldEnableMLEnhance;
- (BOOL)isParticipantPeace:(id)a0;
- (BOOL)isScreenActive;
- (BOOL)isAudioActive;
- (id)checkSubstreams:(id)a0 forLowerQualityIndex:(unsigned int)a1;
- (id)optedInStreamIDForStreamGroupID:(unsigned int)a0;
- (BOOL)isStreamGroupActive:(id)a0;
- (BOOL)isSeamlessTransitionSupportedForStreamGroup:(id)a0;
- (void)appendOptedInStreamID:(id)a0 toOptInStreamsIDs:(id)a1 targetBandwidthEntry:(id)a2 forceSeamlessTransition:(BOOL)a3;
- (long long)participantScreenToken;
- (long long)participantMicrophoneToken;
- (void)setVideoReceiverFeedbackDelegate:(id)a0;
- (void)setVideoStreamDelegate:(id)a0;
- (unsigned int)actualNetworkBitrateForStreamGroup:(unsigned int)a0;
- (void)pushEventToNwActivity:(long long)a0 started:(BOOL)a1;
- (unsigned char)cappedVideoQualityWithShouldLimitCameraQualityForPIP:(BOOL)a0;
- (void)appendStreamGroup:(id)a0 maxBitrate:(unsigned int)a1 mediaEntries:(id)a2;
- (void)appendStreamGroupsMediaEntries:(id)a0;
- (void)validateMediaEntries:(id)a0;
- (void)updateVideoMultiwayConfig:(id)a0 withStreamGroupStreamConfig:(id)a1;
- (BOOL)setupStreamConfigWithCodecs:(id)a0 streamConfig:(id)a1 codecConfigs:(id)a2 featureStringsDict:(id)a3;
- (void)updateScreenStreamConfigurationWithStreamGroupResult:(id)a0 multiwayConfig:(id)a1 screenStreamConfig:(id)a2;
- (BOOL)setupAudioStreamConfiguration:(id)a0 withStreamGroupConfig:(id)a1 streamGroupStreamConfig:(id)a2;
- (BOOL)setupVideoStreamConfiguration:(id)a0 withStreamGroupStreamConfig:(id)a1 codecConfigs:(id)a2 multiwayConfig:(id)a3 groupID:(unsigned int)a4;
- (id)newMultiwayConfigWithStreamGroupStreamConfig:(id)a0 maxIDSStreamIDCount:(unsigned int)a1 groupID:(unsigned int)a2;
- (id)newMediaStreamConfigWithStreamGroupConfig:(id)a0 streamConfig:(id)a1 rateControlConfig:(id)a2 multiwayConfig:(id)a3;
- (id)newMediaStreamConfigWithStreamConfig:(id)a0 streamGroupConfig:(id)a1 maxIDSStreamIDCount:(unsigned int)a2;
- (id)newMediaStreamWithNegotiationConfig:(id)a0 streamToken:(long long)a1;
- (id)setupStreamRTP:(id)a0;
- (void)setupMediaStreamGroupConfig:(id)a0 withNegotiationConfig:(id)a1;
- (id)newMediaStreamInfoWithNegotiationConfig:(id)a0 streamToken:(long long)a1;
- (BOOL)shouldSetupStreamGroupWithID:(unsigned int)a0;
- (id)newStreamGroupConfigWithNegotiationConfig:(id)a0;
- (BOOL)updateStreamGroupWithOneToOneStreamConfig:(id)a0;
- (id)newCameraStreamGroupWithStreamGroupConfig:(id)a0;
- (id)newVideoStreamGroupWithStreamGroupConfig:(id)a0;
- (BOOL)setupBandwidthAllocationTableForMediaStreamConfigs:(id)a0 streamGroupID:(unsigned int)a1 entryType:(unsigned char)a2;
- (BOOL)didNegotiateStreamGroupWithID:(unsigned int)a0;
- (void)createJitterBufferTargetEstimatorSynchronizer:(struct tagVCJBTargetEstimatorSynchronizer **)a0 syncGroupID:(unsigned int)a1;
- (BOOL)setupStreamGroupWithConfig:(id)a0;
- (void)setShouldEnableFaceZoom:(BOOL)a0;
- (void)setRemoteMediaStalled:(BOOL)a0;
- (id)activeDownlinkStreamIDForStreamGroupID:(unsigned int)a0;
- (unsigned int)optedInNetworkBitrateForStreamGroup:(unsigned int)a0;
- (void)setMediaSuspended:(BOOL)a0 forStreamToken:(id)a1;
- (void)stopAudioIOCompletion;
- (void)onStartAudioIO;
- (void)onDidResumeAudio;
- (void)onPauseAudioStreams;
- (void)setRemoteStreamGroupState:(unsigned int)a0 forStreamGroup:(unsigned int)a1;
- (id)applyVideoEnabledSetting:(BOOL)a0;
- (void)updatePositionalInfo:(id)a0 shouldReapply:(BOOL)a1;
- (void)updateOneToOneAudioPositionalInfo:(const struct tagVCSpatialAudioMetadataPositionalInfo { float x0; float x1; float x2; unsigned int x3; unsigned int x4; unsigned int x5; } *)a0;
- (BOOL)setupAudioStreamOneToOneConfigurations:(id)a0;
- (id)recommendedStreamIDsForSelectedMediaEntries:(id)a0 forceSeamlessTransition:(BOOL)a1;
- (void)negotiateAudioRules:(id)a0;
- (BOOL)configureWithOneToOneParticipantConfig:(id)a0 operatingMode:(int)a1;
- (unsigned int)actualNetworkBitrateWithAudioBitrates:(id)a0;
- (void)dispatchedStartOneToOneStreams;
- (id)stopAudioStreams;
- (id)startScreenGroup;
- (void)didReceiveFirstFrameForStreamGroup:(id)a0;
- (void)redundancyController:(id)a0 redundancyIntervalDidChange:(double)a1;
- (void)collectVideoChannelMetrics:(struct { unsigned int x0; unsigned int x1[5]; unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; } *)a0;
- (void)collectAudioChannelMetrics:(struct { unsigned int x0; unsigned int x1[5]; unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; } *)a0;
- (BOOL)setupScreenStreamOneToOneConfigurations:(id)a0;
- (BOOL)setupVideoStreamOneToOneConfigurations:(id)a0;
- (void)updateSourcePlayoutTimestampWithSamples:(struct opaqueVCAudioBufferList { } *)a0;
- (void)debounceAudioPriority:(unsigned char)a0;
- (void)updateVideoPriority:(unsigned char)a0;

@end
