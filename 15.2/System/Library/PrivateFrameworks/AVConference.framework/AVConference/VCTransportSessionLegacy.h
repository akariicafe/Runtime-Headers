@class NSData, TCPTunnelClient, NSString, VCTransport, LoopbackSocketTunnel, NSMutableDictionary, NSDictionary, NSCondition, NSObject, GKInterfaceListener;
@protocol VideoConferenceRealTimeChannel, VCTransportSessionLegacyDelegate, VCConnectionProtocol, OS_dispatch_source;

@interface VCTransportSessionLegacy : VCTransportSession <LoopbackSocketTunnelDelegate, InterfaceListenerDelegate, VCConnectionManagerDelegate> {
    unsigned char _localU8Version;
    long long relayState;
    float callerPreEmptiveTimeoutInSecs;
    unsigned int _connectionSetupRTTEstimate;
    BOOL requestedTimeoutRelay;
    BOOL _didReceivePiggybackBlob;
    BOOL _useLoopback;
    BOOL _isRemoteOSPreLion;
    BOOL _isStarted;
    NSObject<OS_dispatch_source> *relaySetupTimer;
    VCTransport *transport;
    unsigned int _callID;
    struct __SecIdentity { } *_identity;
    TCPTunnelClient *_tcpTunnelClient;
    NSObject<VideoConferenceRealTimeChannel> *rtChannel;
    LoopbackSocketTunnel *_tunnel;
    id<VCConnectionProtocol> _loopbackConnection;
    NSCondition *_connectionDataTimeoutCondVar;
    GKInterfaceListener *_interfaceListener;
    id _delegate;
}

@property (nonatomic) int pendingRelayCount;
@property (nonatomic) BOOL initialSecondaryRelaySetupDone;
@property (retain, nonatomic) NSDictionary *localRelayUpdate;
@property (retain, nonatomic) NSDictionary *remoteRelayUpdate;
@property (retain, nonatomic) NSMutableDictionary *remoteRelayRequestResponse;
@property (retain, nonatomic) NSData *remoteRelayConnectionData;
@property (retain) NSMutableDictionary *localRelayRequestResponse;
@property (retain) NSData *localConnectionData;
@property (retain) NSData *localRelayConnectionData;
@property BOOL allowsRelay;
@property BOOL isCaller;
@property unsigned int remoteCallID;
@property id<VCTransportSessionLegacyDelegate> delegate;
@property (copy) NSString *localParticipantID;
@property (copy) NSString *remoteParticipantID;
@property (copy) NSString *sessionID;
@property (retain) NSData *remoteConnectionData;
@property int NATType;
@property int operatingMode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setIdentity:(struct __SecIdentity { } *)a0;
- (void)start;
- (void)startActiveProbingWithOptions:(id)a0;
- (void)stopActiveProbingWithOptions:(id)a0;
- (void)flushLinkProbingStatusWithOptions:(id)a0;
- (void)dealloc;
- (void)stop;
- (void)receivedRealTimeData:(id)a0 fromParticipantID:(id)a1;
- (void)triggerInterfaceChange;
- (void)networkStateDidChange;
- (void)loopbackSocketTunnel:(id)a0 receivedData:(id)a1 from:(struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } *)a2;
- (void)queryProbingResultsWithOptions:(id)a0;
- (id)initWithCallID:(unsigned int)a0 reportingAgent:(id)a1;
- (void)connectionCallback:(id)a0 isInitialConnection:(BOOL)a1;
- (void)handleRATChanged:(id)a0;
- (BOOL)getConnectionSetupData:(id *)a0 withOptions:(id)a1 error:(id *)a2;
- (int)getSignalStrengthBars:(int *)a0 displayBars:(int *)a1 maxDisplayBars:(int *)a2;
- (int)flushBasebandQueueForConnection:(id)a0 payloadInfoList:(id)a1;
- (int)updateQualityIndicator:(int)a0 isIPv6:(BOOL)a1;
- (int)registerBasebandNotificationsForConnection:(id)a0;
- (void)deregisterBasebandNotifications;
- (void)didEnableDuplication:(BOOL)a0 activeConnection:(id)a1;
- (void)didUpdatePreferredInterfaceForDuplication:(unsigned char)a0 notifyPeer:(BOOL)a1 enableDuplication:(BOOL)a2 isMediaUnrecoverableSignal:(BOOL)a3;
- (void)didMediaQualityDegrade:(BOOL)a0;
- (void)primaryConnectionChanged:(id)a0 oldPrimaryConnection:(id)a1 activeConnection:(id)a2;
- (int)detailedErrorCode;
- (void)reportNetworkConditionsDegraded;
- (void)processRemoteIPChange:(id)a0;
- (void)processRelayRequestResponse:(id)a0 didOriginateRequest:(BOOL)a1;
- (void)processRelayUpdate:(id)a0 didOriginateRequest:(BOOL)a1;
- (BOOL)isRemoteOSPreLion;
- (void)handleConnectionSetupDataChangeMessageDelivered;
- (void)handleMediaReceivedOverPeerToPeerLinkWithConnectionId:(int)a0;
- (void)handleMediaReceivedOverRelayLinkWithConnectionId:(int)a0;
- (void)setForceRelay;
- (BOOL)isHandoverSupported;
- (void)setupTransport;
- (void)initiateRelayRequest;
- (BOOL)startConnectionWithBlob:(id)a0 useRelay:(BOOL)a1 isInitialRelay:(BOOL)a2 error:(id *)a3;
- (double)iceTimeoutInSeconds:(BOOL)a0;
- (void)stopLoopback;
- (void)deleteTCPTunnel;
- (BOOL)createTCPTunnelForParticipantID:(id)a0 relayDictionary:(id)a1 didOriginateRequest:(BOOL)a2 relayType:(unsigned char)a3 error:(id *)a4;
- (void)resetICETimeoutToLongTimeout;
- (id)createRelayUpdateDictionary:(id)a0;
- (void)getConnectionDataUsingRelay:(BOOL)a0 isInitialRelay:(BOOL)a1 nonCellularCandidateTimeout:(double)a2 queue:(id)a3 completionHandler:(id /* block */)a4;
- (void)destroySecondaryRelayDispatchTimer;
- (void)setupSecondaryRelayForCall:(unsigned int)a0 callerRequired:(BOOL)a1;
- (void)notifyDelegateToCancelRelay;
- (BOOL)isConnectedAndAllowAdditionalConnection;
- (id)createInitiateRelayDictionaryForCall:(unsigned int)a0 primaryConnection:(struct tagCONNRESULT { unsigned int x0; int x1; int x2; unsigned int x3; int x4; int x5; unsigned short x6; unsigned short x7; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x8; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x9; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x10; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x11; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x12; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x13; unsigned int x14; int x15; int x16; int x17; int x18; unsigned short x19; int x20; int x21; int x22; struct tagCONNRESULT *x23; int x24; } *)a1;
- (id)createInitiateRelayDictionary;
- (unsigned char)transportCallType;
- (struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; })IPPortForPrimaryConnectionOnLocalInterface:(BOOL)a0;
- (void)createSecondaryRelayDispatchTimer:(float)a0 callID:(unsigned int)a1 callerRequired:(BOOL)a2;
- (void)processRemoteIPChange:(char *)a0 dataLength:(int)a1 remoteCandidateVersion:(unsigned short)a2;
- (BOOL)handleExchangedKey:(id)a0 result:(int)a1;
- (unsigned int)connectionTypeForConnectionResult:(struct tagCONNRESULT { unsigned int x0; int x1; int x2; unsigned int x3; int x4; int x5; unsigned short x6; unsigned short x7; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x8; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x9; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x10; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x11; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x12; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x13; unsigned int x14; int x15; int x16; int x17; int x18; unsigned short x19; int x20; int x21; int x22; struct tagCONNRESULT *x23; int x24; } *)a0;
- (void)setupPendingSecondaryRelayWithNewPrimary:(id)a0;
- (void)resetLoopback;
- (void)setupLoopbackWithConnectionType:(unsigned int)a0;
- (void)stopLoopbackProc:(id)a0;
- (id)connectionDataUsingRelay:(BOOL)a0 isInitialRelay:(BOOL)a1 nonCellularCandidateTimeout:(double)a2 error:(id *)a3;
- (int)generateConnectionData:(char **)a0 forCallID:(unsigned int)a1 connectionDataSize:(int *)a2 nonCellularCandidateTimeout:(double)a3;
- (id)connectionData:(char *)a0 connectionDataSizeInBytes:(int)a1 shouldUseRelay:(BOOL)a2;
- (void)connectionResultCallback:(struct tagCONNRESULT { unsigned int x0; int x1; int x2; unsigned int x3; int x4; int x5; unsigned short x6; unsigned short x7; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x8; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x9; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x10; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x11; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x12; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x13; unsigned int x14; int x15; int x16; int x17; int x18; unsigned short x19; int x20; int x21; int x22; struct tagCONNRESULT *x23; int x24; } *)a0 didReceiveICEPacket:(BOOL)a1 didUseRelay:(BOOL)a2 secretKey:(id)a3 skeResult:(int)a4;
- (void)handleNewCandidates:(id)a0 version:(unsigned short)a1;
- (void)setupInitialSecondaryRelayWithCallbackRelayFlag:(BOOL)a0 callID:(unsigned int)a1 connectionId:(int)a2;
- (void)updateParticipantGenerationCounter:(unsigned char)a0;
- (unsigned int)connectionSetupRTTEstimate;

@end
