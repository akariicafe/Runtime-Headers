@class NSMutableDictionary, VCSessionParticipantMediaStreamInfo, NSDictionary, VCRedundancyControllerAudio, VCSystemAudioCaptureSession, VCSwitchManager, VCSessionUplinkBandwidthAllocator, NSString, VCVideoRule, VCAudioPowerSpectrumSource, NSMutableSet, VCMoments, NSArray, VCRedundancyControllerVideo;

@interface VCSessionParticipantLocal : VCSessionParticipant <VCVideoSink, VCVideoCaptureClient, VCMomentTransportDelegate, VCIDSStreamIDGenerator, VCSessionParticipantLocalVideoStreamDelegate> {
    VCSessionUplinkBandwidthAllocator *_uplinkBandwidthAllocator;
    unsigned int _currentUplinkTargetBitrate;
    unsigned int _lastSentAudioSampleTime;
    double _lastSentAudioHostTime;
    struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } _audioTimestampRWLock;
    unsigned char _lastAudioPriority;
    unsigned char _lastVideoPriority;
    _Atomic unsigned char _videoPriority;
    BOOL _videoPriorityEnabled;
    BOOL _shouldResize;
    BOOL _enableRedundancy;
    BOOL _isVCMediaQueueScheduled;
    NSMutableSet *_localPublishedStreams;
    float _averageSilenceAudioPower;
    unsigned char _audioPriorityRampUp;
    unsigned char _audioPriorityDecaySlow;
    unsigned char _audioPriorityDecayFast;
    float _audioVoiceDetectionSensitivity;
    float _audioSilencePowerAverageMultiplier;
    unsigned char _forcedAudioPriorityValue;
    double _forcedAudioPriorityLastUpdateTime;
    BOOL _forcedAudioPriorityEnabled;
    VCVideoRule *_videoRule;
    BOOL _speechDetected;
    struct opaqueVCVoiceDetector { } *_voiceDetector;
    double _fecRatio;
    VCAudioPowerSpectrumSource *_powerSpectrumSource;
    int _currentVideoCaptureFrameRate;
    int _maxSupportedMultiwayCameraFrameRate;
    long long _maxSupportedMultiwayVideoResolution;
    unsigned char _presentationState;
    int _videoCaptureSource;
    BOOL _forceMinBitrate;
    unsigned int _minBitrate;
    NSMutableDictionary *_streamInputIDToCaptureSourceIDMap;
    VCSystemAudioCaptureSession *_systemAudioCaptureSession;
    BOOL _isMixingSystemAudio;
    double _spatialAudioDisabledLastUpdateTime;
    NSMutableSet *_generatedStreamIDs;
    NSMutableSet *_generatedSSRCs;
}

@property (nonatomic) BOOL encryptionInfoReceived;
@property (readonly, nonatomic) unsigned short connectionStatsStreamID;
@property (nonatomic) unsigned int uplinkBitrateCapWifi;
@property (nonatomic) unsigned int uplinkBitrateCapCell;
@property (nonatomic) BOOL enableVADFiltering;
@property (copy, nonatomic) NSArray *peerSubscribedStreams;
@property (readonly, nonatomic) NSMutableSet *audioPayloadTypes;
@property (readonly, nonatomic) NSMutableSet *videoPayloadTypes;
@property (readonly, nonatomic) unsigned int currentUplinkTotalBitrate;
@property (readonly, nonatomic) VCMoments *moments;
@property (nonatomic) int currentVideoCaptureFrameRate;
@property (readonly, nonatomic) struct __CFString { } *activeStreamKeys;
@property (readonly, nonatomic) struct _VCSessionParticipantLocalOneToOneSettings { VCRedundancyControllerAudio *audioRedundancyController; VCRedundancyControllerVideo *videoRedundancyController; VCSessionParticipantMediaStreamInfo *audioStreamInfo; VCSessionParticipantMediaStreamInfo *videoStreamInfo; VCSessionParticipantMediaStreamInfo *screenStreamInfo; VCSwitchManager *switchManager; unsigned int targetBitrate; unsigned int rateChangeCounter; BOOL endToEndConnectionReceived; } oneToOneSettings;
@property (nonatomic) BOOL isRemoteOnPeace;
@property (readonly, nonatomic) NSDictionary *streamGroupStateDictionary;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)negotiatorCipherSuite:(unsigned int *)a0 fromMediaStreamConfig:(id)a1;

- (void)setMuted:(BOOL)a0;
- (BOOL)setState:(unsigned int)a0;
- (void)pushAudioSamples:(struct opaqueVCAudioBufferList { } *)a0;
- (void)start;
- (void)sourceFrameRateDidChange:(unsigned int)a0;
- (BOOL)onVideoFrame:(struct opaqueCMSampleBuffer { } *)a0 frameTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 attribute:(struct { BOOL x0; BOOL x1; int x2; BOOL x3; BOOL x4; int x5; unsigned char x6; })a2;
- (void)cleanupStreamInputs;
- (void)dealloc;
- (void)stop;
- (BOOL)isOneToOneModeEnabled;
- (void)setOneToOneModeEnabled:(BOOL)a0;
- (BOOL)configureAudioIOWithDeviceRole:(int)a0 operatingMode:(int)a1;
- (id)getAudioDumpName;
- (void)redundancyController:(id)a0 redundancyPercentageDidChange:(unsigned int)a1;
- (void)redundancyController:(id)a0 redundancyVectorDidChange:(struct { unsigned short x0; struct { unsigned char x0; unsigned char x1; } x1[32]; })a1;
- (void)setMediaSuggestion:(struct VCRateControlMediaSuggestion { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; } *)a0;
- (void)updateWindowState:(int)a0 isLocal:(BOOL)a1 windowRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (void)handleActiveConnectionChange:(id)a0;
- (struct tagVCNetworkStreamIdentifiers { unsigned int x0; unsigned short x1; unsigned short x2; })generateSSRC:(BOOL)a0 streamID:(BOOL)a1 repairStreamID:(BOOL)a2;
- (unsigned int)generateSSRC;
- (void)moments:(id)a0 shouldProcessRequest:(id)a1 recipientID:(id)a2;
- (void)updateMediaSettingsWithConfig:(id)a0;
- (id)initWithConfig:(id)a0 delegate:(id)a1;
- (void)updateAudioSpectrumState;
- (BOOL)isStreamGroupActive:(id)a0;
- (BOOL)completeStreamSetup:(id)a0;
- (id)setupStreamRTP:(id)a0;
- (BOOL)setupStreamGroupMediaSync;
- (void)stopAudioIOCompletion;
- (id)applyVideoEnabledSetting:(BOOL)a0;
- (void)redundancyController:(id)a0 redundancyIntervalDidChange:(double)a1;
- (void)collectVideoChannelMetrics:(struct { unsigned int x0; unsigned int x1[5]; unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; } *)a0;
- (void)collectAudioChannelMetrics:(struct { unsigned int x0; unsigned int x1[5]; unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; } *)a0;
- (void)startVoiceActivityDetection;
- (void)stopVoiceActivityDetection;
- (void)setCellularUniqueTag:(unsigned int)a0;
- (void)thermalLevelDidChange:(int)a0;
- (id)clientCaptureRule;
- (void)avConferencePreviewError:(id)a0;
- (void)cameraAvailabilityDidChange:(BOOL)a0;
- (void)frameRateIsBeingThrottled:(int)a0 thermalLevelDidChange:(BOOL)a1 powerLevelDidChange:(BOOL)a2;
- (void)captureSourcePositionDidChange:(BOOL)a0;
- (void)captureSourceCenterStageEnabledDidChange:(BOOL)a0;
- (void)captureSourcePortraitBlurEnabledDidChange:(BOOL)a0;
- (void)updateUplinkTargetBitrate:(unsigned int)a0;
- (void)updateTargetBitrateOneToOne:(unsigned int)a0 rateChangeCounter:(unsigned int)a1;
- (id)supportedAudioRules;
- (void)updateSupportedAudioRules:(id)a0;
- (void)updateMomentsCapabillities:(unsigned int)a0 imageType:(int)a1 videoCodec:(int)a2;
- (BOOL)containsStreamWithSSRC:(unsigned int)a0;
- (void)didReceiveReportPacket:(struct tagRTCPPACKET { struct tagRTCPCOMMON { unsigned char x0 : 5; unsigned char x1 : 1; unsigned char x2 : 2; unsigned char x3 : 8; unsigned short x4; } x0; union { struct tagSR_RTCP { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; struct tagRTCP_RRB { unsigned int x0; unsigned char x1 : 8; unsigned int x2 : 24; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; } x6[1]; } x0; struct tagRR_RTCP { unsigned int x0; struct tagRTCP_RRB { unsigned int x0; unsigned char x1 : 8; unsigned int x2 : 24; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; } x1[1]; } x1; struct tagSDES_RTCP { unsigned int x0; struct tagRTCPSDES { unsigned char x0; unsigned char x1; char x2[258]; } x1; } x2; struct tagBYE_RTCP { unsigned int x0; } x3; struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x4; struct tagRTCP_APP_LTRP { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x5; struct tagFIR_RTCP { unsigned int x0; unsigned short x1[10]; } x6; struct tagNACK_RTCP { unsigned int x0; unsigned short x1; unsigned short x2; } x7; struct tagRTCP_PSFB_PLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; } x8; struct tagRTCP_PSFB_SLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x9; struct tagRTCP_PSFB_FIR { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned char x2; unsigned char x3[3]; } x10; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x11; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x12; struct tagRTCP_RTPFB_GNACK { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned short x1; unsigned short x2; } x13; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x14; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x15; struct tagRTCP_CUSTOM_SR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_SENDER_INFO { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned char x4 : 4; unsigned char x5 : 4; } x2; struct tagRTCP_CUSTOM_RECEPTION_REPORT { unsigned int x0; unsigned char x1 : 4; unsigned short x2 : 12; unsigned short x3; unsigned short x4; unsigned char x5; unsigned char x6; } x3[1]; } x16; struct tagRTCP_CUSTOM_RR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_RECEIVER_INFO { unsigned char x0 : 4; unsigned char x1 : 4; } x2; struct tagRTCP_CUSTOM_RECEPTION_REPORT { unsigned int x0; unsigned char x1 : 4; unsigned short x2 : 12; unsigned short x3; unsigned short x4; unsigned char x5; unsigned char x6; } x3[1]; } x17; struct tagRTCP_CUSTOM_RCTL { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; struct tagRTCP_CUSTOM_RATE_CONTROL_INFO { unsigned char x0[20]; } x1; } x18; } x1; } *)a0 arrivalNTPTime:(union tagNTP { unsigned long long x0; struct { unsigned int x0; unsigned int x1; } x1; })a1;
- (void)didReceiveCustomReportPacket:(struct tagRTCPPACKET { struct tagRTCPCOMMON { unsigned char x0 : 5; unsigned char x1 : 1; unsigned char x2 : 2; unsigned char x3 : 8; unsigned short x4; } x0; union { struct tagSR_RTCP { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; struct tagRTCP_RRB { unsigned int x0; unsigned char x1 : 8; unsigned int x2 : 24; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; } x6[1]; } x0; struct tagRR_RTCP { unsigned int x0; struct tagRTCP_RRB { unsigned int x0; unsigned char x1 : 8; unsigned int x2 : 24; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; } x1[1]; } x1; struct tagSDES_RTCP { unsigned int x0; struct tagRTCPSDES { unsigned char x0; unsigned char x1; char x2[258]; } x1; } x2; struct tagBYE_RTCP { unsigned int x0; } x3; struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x4; struct tagRTCP_APP_LTRP { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x5; struct tagFIR_RTCP { unsigned int x0; unsigned short x1[10]; } x6; struct tagNACK_RTCP { unsigned int x0; unsigned short x1; unsigned short x2; } x7; struct tagRTCP_PSFB_PLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; } x8; struct tagRTCP_PSFB_SLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x9; struct tagRTCP_PSFB_FIR { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned char x2; unsigned char x3[3]; } x10; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x11; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x12; struct tagRTCP_RTPFB_GNACK { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned short x1; unsigned short x2; } x13; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x14; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x15; struct tagRTCP_CUSTOM_SR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_SENDER_INFO { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned char x4 : 4; unsigned char x5 : 4; } x2; struct tagRTCP_CUSTOM_RECEPTION_REPORT { unsigned int x0; unsigned char x1 : 4; unsigned short x2 : 12; unsigned short x3; unsigned short x4; unsigned char x5; unsigned char x6; } x3[1]; } x16; struct tagRTCP_CUSTOM_RR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_RECEIVER_INFO { unsigned char x0 : 4; unsigned char x1 : 4; } x2; struct tagRTCP_CUSTOM_RECEPTION_REPORT { unsigned int x0; unsigned char x1 : 4; unsigned short x2 : 12; unsigned short x3; unsigned short x4; unsigned char x5; unsigned char x6; } x3[1]; } x17; struct tagRTCP_CUSTOM_RCTL { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; struct tagRTCP_CUSTOM_RATE_CONTROL_INFO { unsigned char x0[20]; } x1; } x18; } x1; } *)a0 arrivalNTPTime:(union tagNTP { unsigned long long x0; struct { unsigned int x0; unsigned int x1; } x1; })a1;
- (long long)maxCaptureResolution;
- (int)maxCaptureCameraFrameRate;
- (unsigned short)generateIDSStreamID;
- (void)setupSystemAudioCapture;
- (id)processCachedParticipantData:(id)a0;
- (BOOL)setupStreamInputsWithConfig:(id)a0;
- (BOOL)setupStreamGroupsWithConfig:(id)a0 negotiatorConfig:(id)a1;
- (BOOL)setupAudioStreamGroupWithStreamConfigs:(id)a0 negotiatorConfig:(id)a1 streamGroupConfiguration:(id)a2;
- (BOOL)setupCameraStreamGroupWithStreamConfigs:(id)a0 negotiatorConfig:(id)a1 streamGroupConfiguration:(id)a2;
- (BOOL)initializeMediaNegotiator;
- (BOOL)createParticipantInfo;
- (void)createOpaqueData;
- (unsigned int)mediaStreamGroupStateToAVCStreamGroupState:(unsigned int)a0;
- (void)updateCameraStreamGroupStateForVideoPaused:(unsigned int *)a0;
- (unsigned int)streamGroupStateForStreamGroup:(id)a0;
- (BOOL)setupAudioStreamsWithStreamConfigurations:(id)a0 mediaNegotiatorConfig:(id)a1 streamGroupConfiguration:(id)a2;
- (void)updatePayloadTypesWithAudioConfigs:(id)a0;
- (BOOL)setupVideoStreamsWithStreamConfigurations:(id)a0 mediaNegotiatorConfig:(id)a1 streamGroupConfiguration:(id)a2;
- (void)updatePayloadTypesWithVideoConfigs:(id)a0;
- (struct opaqueCMFormatDescription { } *)getAudioFormatDescriptionForStreamGroupID:(unsigned int)a0;
- (int)captureSourceIDFromStreamGroupConfig:(id)a0;
- (BOOL)setupStreamGroupWithStreamGroupConfig:(id)a0 negotiatorConfig:(id)a1;
- (BOOL)enableRedundancy:(BOOL)a0;
- (void)updateActiveVoiceOnly;
- (BOOL)reconfigureOneToOneAudioStream:(id)a0 error:(id *)a1;
- (void)registerForVideoCapture:(int)a0;
- (void)deregisterForVideoCapture;
- (void)updateUplinkTargetBitrateForStreamGroups;
- (void)updateTargetBitrateBasedOnCurrentOneToOneSettings;
- (struct CGSize { double x0; double x1; })captureEncodingSize;
- (void)resetOneToOneSettings;
- (BOOL)applyCachedMediaStreamsWithStreamConfigurations:(id)a0 mediaNegotiatorConfig:(id)a1;
- (BOOL)setupVideoStreamsWithStreamConfiguration:(id)a0 streamGroupConfiguration:(id)a1;
- (BOOL)applyCachedMediaStreams:(id)a0 toMultiwayConfig:(id)a1;
- (BOOL)applyCachedStreamGroupMediaStreams:(id)a0 toMultiwayConfig:(id)a1;
- (BOOL)setupAudioStreamsWithStreamConfiguration:(id)a0 streamGroupConfiguration:(id)a1;
- (struct opaqueCMFormatDescription { } *)getCaptionsFormatDescription;
- (id)newVideoSendGroupConfigWithStreamGroupID:(unsigned int)a0 streamGroupConfiguration:(id)a1;
- (BOOL)setupVideoMediaStreamsWithStreamGroupConfiguration:(id)a0 streamGroupConfig:(id)a1 streamGroupID:(unsigned int)a2 mediaType:(unsigned int)a3;
- (id)newStreamInfoWithVideoStreamWithConfiguration:(id)a0 streamGroupID:(unsigned int)a1;
- (void)updateBandwithAllocationTable:(id)a0 mediaType:(unsigned int)a1 streamGroupID:(unsigned int)a2 encoderGroupID:(unsigned int)a3 minNetworkBitrate:(unsigned int)a4 maxNetworkBitrate:(unsigned int)a5;
- (id)newAudioSendGroupConfigWithStreamGroupID:(unsigned int)a0 streamGroupConfiguration:(id)a1;
- (id)newStreamInfoWithAudioStreamWithConfiguration:(id)a0 streamToken:(long long)a1 isStreamGroup:(BOOL)a2 streamGroupID:(unsigned int)a3;
- (id)newAudioStreamSendGroupWithConfig:(id)a0 streamGroupID:(unsigned int)a1;
- (id)newStreamInfoWithVideoStreamWithConfiguration:(id)a0 idsDestination:(id)a1 groupID:(unsigned int)a2;
- (id)newStreamInfoWithAudioStreamWithConfiguration:(id)a0 idsDestination:(id)a1 isStreamGroup:(BOOL)a2 streamGroupID:(unsigned int)a3;
- (void)streamGroupNegotiationVideoConfigForStreamGroup:(id)a0 streamConfig:(id)a1 mediaConfig:(id)a2;
- (id)multiwayAudioStreamNegotiatorConfigForStreamConfig:(id)a0;
- (id)multiwayVideoStreamNegotiatorConfigForStreamConfig:(id)a0 isSubstream:(BOOL)a1;
- (void)initializeMultiwayVideoStreamGroup:(id)a0 forLocalConfig:(id)a1;
- (void)initializeMultiwayAudioStreamGroup:(id)a0 forLocalConfig:(id)a1;
- (id)newStreamGroupNegotiationConfigForStreamGroup:(id)a0;
- (id)newMediaNegotiatorAudioConfiguration;
- (id)featureListString:(id)a0 removingPayload:(int)a1 andPayload:(int)a2;
- (BOOL)initializeStreamGroupsForLocalConfig:(id)a0;
- (void)setupOneToOneAudioRedundancyController;
- (void)setupOneToOneVideoRedundancyController;
- (void)logRemoteParticipantInfo:(id)a0;
- (id)newVideoStreamOneToOneConfiguration;
- (BOOL)setupOneToOneRedundancyControllers;
- (id)newAudioStreamOneToOneConfiguration;
- (BOOL)setupOneToOneVideoStreamWithConfig:(id)a0;
- (id)newScreenStreamOneToOneConfiguration;
- (BOOL)setupScreenStreamWithConfiguration:(id)a0 idsDestination:(id)a1;
- (void)setupOneToOneEncryptionInfoWithConfiguration:(id)a0;
- (void)addCallInfoBlobToParticipantInfo:(id)a0;
- (id)newVideoStreamWithConfig:(id)a0 groupID:(unsigned int)a1;
- (void)setupEncodingModeWithVideoStreamConfig:(id)a0;
- (id)audioRuleCollectionWithAudioStreamConfig:(id)a0;
- (BOOL)checkSubscribedStreamsConsistency:(id)a0;
- (void)applyOneToOneVideoRedundancyPercentage:(unsigned int)a0;
- (void)applyOneToOneAudioRedundancyPercentage:(unsigned int)a0;
- (void)dispatchedUpdateUplinkTargetBitrateForStreamGroups;
- (void)dispatchedUpdateOneToOneMediaStreamsWithTargetBitrate:(unsigned int)a0 rateChangeCounter:(unsigned int)a1;
- (BOOL)shouldSendMedia;
- (void)updateVideoOneToOneBitrate;
- (void)updateAudioPriorityWithSampleBuffer:(struct opaqueVCAudioBufferList { } *)a0;
- (void)dispatchedHandleActiveConnectionChangeForOneToOneMode:(id)a0;
- (void)dispatchedHandleActiveConnectionChangeForMultiway:(id)a0;
- (void)startSystemAudioCapture;
- (void)stopSystemAudioCapture;
- (void)remoteScreenAttributesDidChange:(id)a0;
- (void)applyScreenEnabledSetting:(BOOL)a0;
- (void)updateVideoPaused:(BOOL)a0;
- (void)stopVideoCaptureClient;
- (unsigned int)calculateUplinkTotalBitrateForMediaStreams:(id)a0;
- (id)multiwayVideoStreamConfigs;
- (int)negotiateOneToOne:(id)a0;
- (BOOL)configureWithOneToOneParticipantConfig:(id)a0 shouldConfigureGFTStreams:(BOOL)a1;
- (BOOL)isHighPriorityAudioWithPower:(float)a0 voiceActive:(BOOL)a1;
- (void)generateKeyFrameWithStreamID:(id)a0 firType:(int)a1;
- (void)streamGroup:(id)a0 didSuspendStreams:(BOOL)a1;

@end
