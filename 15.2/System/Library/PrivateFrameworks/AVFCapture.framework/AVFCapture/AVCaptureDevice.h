@class NSString, NSArray, AVCaptureDeviceFormat, AVCaptureDeviceInternal, AVCaptureDeviceInputSource;

@interface AVCaptureDevice : NSObject {
    AVCaptureDeviceInternal *_internal;
}

@property (readonly, nonatomic) NSString *uniqueID;
@property (readonly, nonatomic) NSString *modelID;
@property (readonly, nonatomic) NSString *localizedName;
@property (readonly, nonatomic) NSString *manufacturer;
@property (readonly, nonatomic) int transportType;
@property (readonly, nonatomic, getter=isConnected) BOOL connected;
@property (readonly, nonatomic, getter=isInUseByAnotherApplication) BOOL inUseByAnotherApplication;
@property (readonly, nonatomic, getter=isSuspended) BOOL suspended;
@property (readonly, nonatomic) NSArray *linkedDevices;
@property (readonly, nonatomic) NSArray *formats;
@property (retain, nonatomic) AVCaptureDeviceFormat *activeFormat;
@property (nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } activeVideoMinFrameDuration;
@property (nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } activeVideoMaxFrameDuration;
@property (readonly, nonatomic) NSArray *inputSources;
@property (retain, nonatomic) AVCaptureDeviceInputSource *activeInputSource;

+ (void)setCinematicFramingControlMode:(long long)a0;
+ (void)setBackgroundBlurEnabled:(BOOL)a0;
+ (void)initialize;
+ (BOOL)isEligibleForBackgroundBlur;
+ (id)_devicesWithPriorRegisteredDevices:(id)a0;
+ (void)setUpBackgroundBlurStateOnce;
+ (long long)preferredMicrophoneMode;
+ (void)showSystemUserInterface:(long long)a0;
+ (long long)cinematicFramingControlMode;
+ (id)defaultDeviceWithDeviceType:(id)a0 mediaType:(id)a1 position:(long long)a2;
+ (long long)activeMicrophoneMode;
+ (void)setCinematicFramingEnabled:(BOOL)a0;
+ (id)devices;
+ (long long)backgroundBlurControlMode;
+ (void)_reconnectDevices:(id)a0;
+ (long long)centerStageControlMode;
+ (id)devicesWithMediaType:(id)a0;
+ (BOOL)isCenterStageEnabled;
+ (id)defaultDeviceWithMediaType:(id)a0;
+ (void)setBackgroundBlurControlMode:(long long)a0;
+ (void)_activeMicrophoneModeChanged:(id)a0;
+ (void)setUpMicrophoneModeStateOnce;
+ (long long)authorizationStatusForMediaType:(id)a0;
+ (id)_devices;
+ (BOOL)_defaultCenterStageEnabled;
+ (void)setControlCenterVideoEffectUnavailableReasonsForVideoEffect:(id)a0 reasons:(unsigned long long)a1;
+ (id)_defaultDeviceWithDeviceType:(id)a0 mediaType:(id)a1 position:(long long)a2 prefersUnsuspendedAndAllowsAnyPosition:(BOOL)a3;
+ (void)setUpCenterStageStateOnce;
+ (void)_cinematicFramingEnabledChanged:(id)a0;
+ (void)_backgroundBlurEnabledChanged:(id)a0;
+ (void)setCenterStageControlMode:(long long)a0;
+ (void)_registerOnceForServerConnectionDiedNotification;
+ (void)_preferredMicrophoneModeChanged:(id)a0;
+ (void)requestAccessForMediaType:(id)a0 completionHandler:(id /* block */)a1;
+ (id)deviceWithUniqueID:(id)a0;
+ (void)_filterConnectedLegacyDevices:(id)a0;
+ (id)centerStageAllowList;
+ (BOOL)isBackgroundBlurEnabled;
+ (BOOL)isPortraitEffectEnabled;
+ (id)_legacyDevicesWithMediaType:(id)a0;
+ (void)_filterConnectedDevices:(id)a0 withDeviceTypes:(id)a1 mediaType:(id)a2 position:(long long)a3;
+ (id)extrinsicMatrixFromDevice:(id)a0 toDevice:(id)a1;
+ (id)_devicesWithDeviceTypes:(id)a0 mediaType:(id)a1 position:(long long)a2;
+ (BOOL)isCinematicFramingEnabled;
+ (void)setCenterStageEnabled:(BOOL)a0;

- (BOOL)hasFlash;
- (BOOL)isTorchActive;
- (void)setTimeLapseCaptureRate:(float)a0;
- (struct { float x0; float x1; float x2; })grayWorldDeviceWhiteBalanceGains;
- (BOOL)isFlashActive;
- (BOOL)isFlashAvailable;
- (float)exposureTargetOffset;
- (BOOL)isTorchAvailable;
- (float)timeLapseCaptureRate;
- (void)setGlobalToneMappingEnabled:(BOOL)a0;
- (void)setImageControlMode:(long long)a0;
- (float)ISO;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })exposureDuration;
- (long long)focusMode;
- (void)setGeometricDistortionCorrectionEnabled:(BOOL)a0;
- (float)lensPosition;
- (struct OpaqueCMClock { } *)deviceClock;
- (BOOL)isEyeDetectionSupported;
- (id)bravoCameraSelectionBehavior;
- (void)setDigitalFlashMode:(long long)a0;
- (float)torchLevel;
- (BOOL)supportsAVCaptureSessionPreset:(id)a0;
- (void)setTorchMode:(long long)a0;
- (void)setFaceDetectionDrivenImageProcessingEnabled:(BOOL)a0;
- (float)focalLength;
- (BOOL)isGlobalToneMappingEnabled;
- (long long)minimumFocusDistance;
- (struct { float x0; float x1; })chromaticityValuesForDeviceWhiteBalanceGains:(struct { float x0; float x1; float x2; })a0;
- (struct { float x0; float x1; float x2; })deviceWhiteBalanceGainsForTemperatureAndTintValues:(struct { float x0; float x1; })a0;
- (BOOL)hasMediaType:(id)a0;
- (void)setTimeOfFlightProjectorMode:(long long)a0;
- (void)setFlashMode:(long long)a0;
- (void)setActiveDepthDataFormat:(id)a0;
- (long long)whiteBalanceMode;
- (BOOL)isRampingVideoZoom;
- (long long)flashMode;
- (BOOL)isHEIFSupported;
- (BOOL)isLockingFocusWithCustomLensPositionSupported;
- (void)setNonDestructiveCropAspectRatio:(long long)a0;
- (void)setVideoHDRSuspended:(BOOL)a0;
- (BOOL)isPortraitEffectActive;
- (id)deviceType;
- (BOOL)startUsingDevice:(id *)a0;
- (long long)digitalFlashMode;
- (BOOL)isGeometricDistortionCorrectionSupported;
- (double)maxAvailableVideoZoomFactor;
- (long long)position;
- (void)unlockForConfiguration;
- (void)_setVideoHDREnabled:(BOOL)a0 forceResetVideoHDRSuspended:(BOOL)a1;
- (BOOL)isMachineReadableCodeDetectionSupported;
- (void)close;
- (void)setProvidesStortorgetMetadata:(BOOL)a0;
- (BOOL)isImageControlModeSupported:(long long)a0;
- (void)setVideoZoomFactor:(double)a0;
- (BOOL)isCinematicFramingActive;
- (void)setVideoMinFrameDurationOverride:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 forOwner:(id)a1;
- (BOOL)isHEVCSupported;
- (BOOL)isGeometricDistortionCorrectionEnabled;
- (id)_digitalFlashExposureTimes;
- (float)exposureTargetBias;
- (BOOL)isSpatialOverCaptureEnabled;
- (long long)autoFocusRangeRestriction;
- (int)minMacroblocksForHighProfileUpTo30fps;
- (long long)shallowDepthOfFieldEffectStatus;
- (id)cameraPoseMatrix;
- (void)setAutomaticallyAdjustsImageControlMode:(BOOL)a0;
- (int)hevcTurboModeVersion;
- (void)_setActiveVideoMinFrameDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (BOOL)isWhiteBalanceModeSupported:(long long)a0;
- (void)setAutomaticallyAdjustsVideoHDREnabled:(BOOL)a0;
- (void)setEyeClosedDetectionEnabled:(BOOL)a0;
- (void)resetVideoMinFrameDurationOverrideForOwner:(id)a0;
- (id)virtualDeviceSwitchOverVideoZoomFactors;
- (BOOL)isOpen;
- (void)_setActiveVideoMaxFrameDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (BOOL)isEyeClosedDetectionSupported;
- (BOOL)isFocusPointOfInterestSupported;
- (id)AVVideoSettingsForSessionPreset:(id)a0;
- (BOOL)isProResSupported;
- (void)setSpatialOverCaptureEnabled:(BOOL)a0;
- (struct { int x0; int x1; })maxH264PhotoDimensions;
- (float)maxExposureTargetBias;
- (float)ISODigitalThreshold;
- (void)_setStillImageStabilizationAutomaticallyEnabled:(BOOL)a0;
- (void)setEyeDetectionEnabled:(BOOL)a0;
- (BOOL)isAdjustingFocus;
- (BOOL)isSmileDetectionSupported;
- (void)setPrimaryConstituentDeviceSwitchingBehavior:(long long)a0 restrictedSwitchingBehaviorConditions:(unsigned long long)a1;
- (BOOL)isBackgroundBlurActive;
- (struct { int x0; int x1; })maxH264VideoDimensions;
- (id)activeDepthDataFormat;
- (id)constituentDeviceWithDeviceType:(id)a0;
- (BOOL)isLowLightVideoCaptureEnabled;
- (BOOL)setTorchModeOnWithLevel:(float)a0 error:(id *)a1;
- (long long)primaryConstituentDeviceSwitchingBehavior;
- (void)_checkTCCAccess;
- (id)description;
- (void)_setPhotoSettingsForSceneMonitoring:(id)a0;
- (BOOL)isLensStabilizationSupported;
- (BOOL)isAdjustingWhiteBalance;
- (id)supportedFallbackPrimaryConstituentDevices;
- (BOOL)providesStortorgetMetadata;
- (long long)timeOfFlightBankCount;
- (struct { float x0; float x1; float x2; })deviceWhiteBalanceGainsForChromaticityValues:(struct { float x0; float x1; })a0;
- (struct CGPoint { double x0; double x1; })focusPointOfInterest;
- (struct { float x0; float x1; })temperatureAndTintValuesForDeviceWhiteBalanceGains:(struct { float x0; float x1; float x2; })a0;
- (BOOL)automaticallyAdjustsImageControlMode;
- (void)rampToVideoZoomFactor:(double)a0 withRate:(float)a1;
- (unsigned long long)degradedCaptureQualityFactors;
- (void)setActiveMaxExposureDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (BOOL)isVideoStabilizationSupported;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })activeDepthDataMinFrameDuration;
- (int)faceRectangleAngle;
- (BOOL)isSmoothAutoFocusSupported;
- (void)setAutoFocusRangeRestriction:(long long)a0;
- (BOOL)isFlashSceneDetectedForPhotoOutput;
- (void)setSubjectAreaChangeMonitoringEnabled:(BOOL)a0;
- (BOOL)isBuiltInStereoAudioCaptureSupported;
- (void)setFocusMode:(long long)a0;
- (BOOL)isSmoothAutoFocusEnabled;
- (int)minMacroblocksForHighProfileAbove30fps;
- (void)_setDepthDataDeliveryEnabled:(BOOL)a0;
- (BOOL)wideAngleCameraSourcesFromUltraWide;
- (BOOL)hasTorch;
- (id)supportedMetadataObjectIdentifiers;
- (void)_setCameraCalibrationDataDeliveryEnabled:(BOOL)a0;
- (BOOL)hevcAllowBFramesForHighCTUCount;
- (void)stopUsingDevice;
- (BOOL)isSubjectAreaChangeMonitoringEnabled;
- (void)setExposurePointOfInterest:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)isExposurePointOfInterestSupported;
- (void)setWhiteBalanceMode:(long long)a0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })activeMaxExposureDuration;
- (BOOL)isFlashModeSupported:(long long)a0;
- (void)setExposureTargetBias:(float)a0 completionHandler:(id /* block */)a1;
- (BOOL)cachesFigCaptureSourceConfigurationChanges;
- (void)_setBackgroundBlurAllowed:(BOOL)a0;
- (BOOL)isVariableFrameRateVideoCaptureEnabled;
- (void)setSmoothAutoFocusEnabled:(BOOL)a0;
- (unsigned long long)primaryConstituentDeviceRestrictedSwitchingBehaviorConditions;
- (struct CGPoint { double x0; double x1; })exposurePointOfInterest;
- (BOOL)supportsMultiCamCaptureWithDevice:(id)a0;
- (BOOL)isFaceDetectionDrivenImageProcessingEnabled;
- (BOOL)isNonDestructiveCropEnabled;
- (unsigned long long)activePrimaryConstituentDeviceRestrictedSwitchingBehaviorConditions;
- (BOOL)isLockingWhiteBalanceWithCustomDeviceGainsSupported;
- (BOOL)isLockedForConfiguration;
- (void)rampExponentiallyToVideoZoomFactor:(float)a0 withDuration:(double)a1;
- (void)setActiveColorSpace:(long long)a0;
- (BOOL)isExposureModeSupported:(long long)a0;
- (BOOL)usesQuantizationScalingMatrix_H264_Steep_16_48;
- (struct { float x0; float x1; float x2; })deviceWhiteBalanceGains;
- (double)videoZoomFactor;
- (BOOL)isTimeOfFlightProjectorModeSupported:(long long)a0;
- (BOOL)isHDRSceneDetectedForPhotoOutput;
- (long long)_digitalFlashStatus;
- (long long)nonDestructiveCropAspectRatio;
- (BOOL)isHEVCRelaxedAverageBitRateTargetSupported;
- (BOOL)isCinematicVideoFocusAtPointSupported;
- (long long)torchMode;
- (void)cancelVideoZoomRamp;
- (BOOL)isCenterStageActive;
- (double)minAvailableVideoZoomFactor;
- (void)setLowLightVideoCaptureEnabled:(BOOL)a0;
- (BOOL)isActiveVideoMinFrameDurationSet;
- (BOOL)eyeClosedDetectionEnabled;
- (id)availableBoxedMetadataFormatDescriptions;
- (BOOL)isWideColorSupported;
- (void)_setCenterStageAllowed:(BOOL)a0;
- (void)setCinematicVideoFocusAtPoint:(struct CGPoint { double x0; double x1; })a0 objectID:(long long)a1 isHardFocus:(BOOL)a2 isFixedPlaneFocus:(BOOL)a3;
- (BOOL)isFaceDetectionSupported;
- (long long)timeOfFlightProjectorMode;
- (BOOL)appliesSessionPresetMaxIntegrationTimeOverrideToActiveFormat;
- (BOOL)isCameraIntrinsicMatrixDeliverySupported;
- (id)preferredPrimaryConstituentDevice;
- (void)setSmileDetectionEnabled:(BOOL)a0;
- (float)minExposureTargetBias;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })faceRectangle;
- (id)activePrimaryConstituentDevice;
- (BOOL)smileDetectionEnabled;
- (void)setWhiteBalanceModeLockedWithDeviceWhiteBalanceGains:(struct { float x0; float x1; float x2; })a0 completionHandler:(id /* block */)a1;
- (void)dealloc;
- (void)setVariableFrameRateVideoCaptureEnabled:(BOOL)a0;
- (void)setActiveDepthDataMinFrameDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (BOOL)isConstituentPhotoCalibrationDataSupported;
- (BOOL)isFaceDetectionDuringVideoPreviewSupported;
- (BOOL)isAutoRedEyeReductionSupported;
- (float)maxWhiteBalanceGain;
- (long long)exposureMode;
- (id)digitalFlashSceneForPhotoOutput;
- (BOOL)isFocusedAtMacro;
- (void)setVideoHDREnabled:(BOOL)a0;
- (BOOL)_isFlashScene;
- (BOOL)_isDepthDataDeliveryEnabled;
- (id)systemPressureState;
- (void)setNonDestructiveCropEnabled:(BOOL)a0;
- (BOOL)isAutoFocusRangeRestrictionSupported;
- (void)setExposureMode:(long long)a0;
- (BOOL)eyeDetectionEnabled;
- (BOOL)isHEVCPreferred;
- (BOOL)automaticallyAdjustsVideoHDREnabled;
- (BOOL)isTorchModeSupported:(long long)a0;
- (BOOL)isFocusModeSupported:(long long)a0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })activeMaxExposureDurationClientOverride;
- (int)powerConsumptionAt30FPSForOISMode:(int)a0;
- (void)setFocusPointOfInterest:(struct CGPoint { double x0; double x1; })a0;
- (void)setFocusModeLockedWithLensPosition:(float)a0 completionHandler:(id /* block */)a1;
- (long long)activeColorSpace;
- (BOOL)isActiveVideoMaxFrameDurationSet;
- (BOOL)isAdjustingExposure;
- (void)setExposureModeCustomWithDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 ISO:(float)a1 completionHandler:(id /* block */)a2;
- (id)debugDescription;
- (void)setFallbackPrimaryConstituentDevices:(id)a0;
- (long long)activePrimaryConstituentDeviceSwitchingBehavior;
- (BOOL)lockForConfiguration:(id *)a0;
- (float)lensAperture;
- (id)fallbackPrimaryConstituentDevices;
- (BOOL)open:(id *)a0;
- (long long)imageControlMode;
- (BOOL)isVideoHDRSuspended;
- (double)dualCameraSwitchOverVideoZoomFactor;
- (void)setCachesFigCaptureSourceConfigurationChanges:(BOOL)a0;
- (BOOL)isVideoHDREnabled;
- (id)initSubclass;
- (id)constituentDevices;
- (BOOL)isVirtualDevice;
- (BOOL)_startUsingDevice:(id *)a0;
- (void)_stopUsingDevice;
- (BOOL)isLowLightBoostSupported;
- (BOOL)isLowLightBoostEnabled;
- (BOOL)automaticallyEnablesLowLightBoostWhenAvailable;
- (void)setAutomaticallyEnablesLowLightBoostWhenAvailable:(BOOL)a0;

@end
