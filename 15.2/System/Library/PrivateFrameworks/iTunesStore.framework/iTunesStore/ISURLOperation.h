@class NSURLResponse, NSMutableData, ISURLRequestPerformance, SSBag, SSURLRequestProperties, SSAuthenticationContext, SSMutableURLRequestProperties, NSObject, NSURLCache, ISDataProvider, NSString, SSHTTPArchive, NSURLRequest, SSURLSessionManager, NSArray, NSData, NSNumber, NSCountedSet, NSURLSessionTask;
@protocol ISURLOperationDelegate, OS_dispatch_queue;

@interface ISURLOperation : ISOperation <SSURLSessionManagerDelegate> {
    NSMutableData *_dataBuffer;
    long long _networkRetryCount;
    NSCountedSet *_redirectURLs;
    SSMutableURLRequestProperties *_requestProperties;
    SSURLSessionManager *_urlSessionManager;
    NSURLSessionTask *_urlSessionTask;
    NSObject<OS_dispatch_queue> *_dataBufferAccessQueue;
    SSHTTPArchive *_httpArchive;
    ISURLRequestPerformance *_performanceMetrics;
}

@property (retain, nonatomic, setter=_setAccountDSIDOverride:) NSNumber *_accountDSIDOverride;
@property (retain, setter=_setActiveURLRequest:) NSURLRequest *_activeURLRequest;
@property (getter=_loadsHTTPFailures, setter=_setLoadsHTTPFailures:) BOOL _loadsHTTPFailures;
@property (getter=_usesPrivateCookieStore, setter=_setUsesPrivateCookieStore:) BOOL _usesPrivateCookieStore;
@property (retain) NSURLResponse *response;
@property (readonly) SSHTTPArchive *HTTPArchive;
@property (readonly) ISURLRequestPerformance *performanceMetrics;
@property (getter=_shouldSetCookies, setter=_setShouldSetCookies:) BOOL _shouldSetCookies;
@property BOOL tracksPerformanceMetrics;
@property (nonatomic, getter=isUploadProgressRequested) BOOL uploadProgressRequested;
@property (readonly, copy) NSURLRequest *activeURLRequest;
@property (weak) id<ISURLOperationDelegate> delegate;
@property (retain) ISDataProvider *dataProvider;
@property (retain) SSAuthenticationContext *authenticationContext;
@property (retain) NSString *logKey;
@property (retain, nonatomic) NSArray *passThroughErrors;
@property (copy) SSURLRequestProperties *requestProperties;
@property (readonly, nonatomic) NSNumber *metricsLoadURLSessionDuration;
@property (readonly, nonatomic) NSNumber *metricsLoadURLSamplingPercentage;
@property (readonly, nonatomic) NSNumber *metricsLoadURLSamplingPercentageCachedResponses;
@property (readonly, nonatomic) SSBag *bag;
@property (readonly, nonatomic) BOOL isURLBagRequest;
@property (readonly, nonatomic) NSData *rawResponseData;
@property (readonly, nonatomic) BOOL shouldDisableCellular;
@property (readonly, nonatomic) BOOL shouldRequireCellular;
@property (readonly, nonatomic) BOOL shouldSetCookies;
@property (readonly, nonatomic) NSData *sourceAppAuditTokenData;
@property (readonly, nonatomic) NSString *sourceAppBundleID;
@property (readonly, nonatomic) NSURLCache *URLCache;
@property (readonly, nonatomic) NSString *URLCacheID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)copyUserAgent;
+ (struct _CFURLCache { } *)sharedCFURLCache;
+ (struct __CFURLStorageSession { } *)_sharedCacheStorageSession;

- (void)_sendOutputToDelegate:(id)a0;
- (id)_decodedDataForData:(id)a0;
- (void)URLSession:(id)a0 task:(id)a1 didSendBodyData:(long long)a2 totalBytesSent:(long long)a3 totalBytesExpectedToSend:(long long)a4;
- (void)_sendRequestToDelegate:(id)a0;
- (id)_errorWithDefaultStringsForError:(id)a0;
- (id)URLSession:(id)a0 task:(id)a1 decodedDataForResponseData:(id)a2;
- (BOOL)handleRedirectFromDataProvider:(id)a0 error:(id *)a1;
- (void)_sendContentLengthToDelegate:(long long)a0;
- (id)_copyQueryStringDictionaryForRedirect:(id)a0;
- (void)_handleReceivedData:(id)a0;
- (void)handleResponse:(id)a0;
- (void)run;
- (void)_stopConnection;
- (void)setRequest:(id)a0;
- (id)_sanitizedStringForString:(id)a0;
- (BOOL)_shouldFollowRedirectWithRequest:(id)a0 error:(id *)a1;
- (id)_sanitizedURLForURL:(id)a0;
- (void)URLSession:(id)a0 task:(id)a1 needNewBodyStream:(id /* block */)a2;
- (BOOL)shouldFollowRedirectWithRequest:(id)a0 returningError:(id *)a1;
- (BOOL)_isExternalURL:(id)a0;
- (void)_handleReceivedResponse:(id)a0;
- (id)initWithSessionManager:(id)a0;
- (void)URLSession:(id)a0 dataTask:(id)a1 didReceiveResponse:(id)a2 completionHandler:(id /* block */)a3;
- (id)request;
- (void)_sendResponseToDelegate:(id)a0;
- (id)_activeURL;
- (void).cxx_destruct;
- (void)_logRequest:(id)a0;
- (BOOL)_runRequestWithURL:(id)a0 dataConnectionServiceType:(struct __CFString { } *)a1;
- (void)URLSession:(id)a0 task:(id)a1 didReceiveChallenge:(id)a2 completionHandler:(id /* block */)a3;
- (id)init;
- (void)_willSendRequest:(id)a0;
- (void)_handleFinishedLoading;
- (void)URLSession:(id)a0 dataTask:(id)a1 didReceiveData:(id)a2;
- (BOOL)_validateContentLength:(long long)a0 error:(id *)a1;
- (long long)_defaultAuthChallengeDispositionForChallenge:(id)a0;
- (void)URLSession:(id)a0 task:(id)a1 didFinishCreatingHTTPArchive:(id)a2;
- (void)_retry;
- (id)newRequestWithURL:(id)a0;
- (id)_accountIdentifier;
- (id)_sanitizedDescriptionForObject:(id)a0;
- (void)URLSession:(id)a0 task:(id)a1 didCompleteWithEvent:(id)a2 error:(id)a3;
- (void)_run;
- (id)_errorWithDomain:(id)a0 code:(long long)a1;
- (void)_stopIfCancelled;
- (void)dealloc;
- (void)_logResponseBody:(id)a0;
- (id)_handleRedirectRequest:(id)a0 response:(id)a1;
- (id)_copyConnectionPropertiesWithDataConnectionServiceType:(struct __CFString { } *)a0;
- (void)_updateProgress;
- (BOOL)_isPassThroughStatus:(long long)a0;
- (BOOL)_processResponseData:(id)a0 error:(id *)a1;
- (void)URLSession:(id)a0 task:(id)a1 willPerformHTTPRedirection:(id)a2 newRequest:(id)a3 completionHandler:(id /* block */)a4;
- (id)_stringForCachePolicy:(unsigned long long)a0;
- (void)_performDefaultHandlingForAuthenticationChallenge:(id)a0;
- (id)_requestProperties;
- (id)_copyAuthenticationContext;

@end
