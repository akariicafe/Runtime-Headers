@class SBLockScreenDefaults, UIVisualEffectView, NSNumber, NSString, SBFStatusBarLegibilityView, SBFPagedScrollView, NSArray, CSTeachableMomentsContainerView, CSLayoutStrategy, SBFLockScreenDateView, UIView, CSQuickActionsView, SBUIBackgroundView, UIGestureRecognizer, CSRegionsDebugView, SBSearchGesture, CSScrollModifier, _UILegibilitySettings, UIColor, CSFixedFooterView, UITapGestureRecognizer;
@protocol CSCoverSheetViewDelegate, CSWallpaperView;

@interface CSCoverSheetView : UIView <CSScrollViewDelegate, CSCoverSheetViewTransitionSource, CSScrollableView> {
    UIView *_dateTimeClippingView;
    UIView *_authIndicator;
    UIView *_higherSlideableContentView;
    UIView *_pullDownView;
    UIVisualEffectView *_dateEffectView;
    SBFStatusBarLegibilityView *_statusBarLegibilityView;
    BOOL _viewControllerAppearingOrAppeared;
    BOOL _hasSubviewModifyingView;
    struct { double value; struct { struct { double value; BOOL inclusive; } start; struct { double value; BOOL inclusive; } end; } interval; long long mode; } _transitionContext;
    double _scrollViewStartingXOffset;
    CSScrollModifier *_scrollModifier;
    unsigned long long _initialPageIndex;
    BOOL _shouldModifyPageScrolling;
    SBLockScreenDefaults *_cachedLockScreenDefaults;
}

@property (retain, nonatomic) CSRegionsDebugView *regionsDebugView;
@property (weak, nonatomic) id<CSCoverSheetViewDelegate> delegate;
@property (weak, nonatomic) CSLayoutStrategy *layoutStrategy;
@property (retain, nonatomic) SBFPagedScrollView *scrollView;
@property (retain, nonatomic) NSArray *pageViews;
@property (retain, nonatomic) UIView *mainPageView;
@property (nonatomic) BOOL ignoresOverscrollOnMainPage;
@property (retain, nonatomic) SBFLockScreenDateView *dateView;
@property (retain, nonatomic) CSFixedFooterView *fixedFooterView;
@property (retain, nonatomic) UIView *proudLockContainerView;
@property (retain, nonatomic) UIView *cameraCoveredView;
@property (retain, nonatomic) UIView *poseidonContainerView;
@property (retain, nonatomic) CSTeachableMomentsContainerView *teachableMomentsContainerView;
@property (retain, nonatomic) CSQuickActionsView *quickActionsView;
@property (nonatomic) struct CGPoint { double x; double y; } dateViewOffset;
@property (nonatomic) struct CGPoint { double x; double y; } proudLockIconViewOffset;
@property (nonatomic) NSNumber *proudLockIconViewValue;
@property (nonatomic) long long dateViewPageAlignment;
@property (nonatomic) BOOL forceDateViewCentered;
@property (nonatomic) BOOL dateViewIsVibrant;
@property (retain, nonatomic) UIView *fakeStatusBar;
@property (nonatomic) unsigned long long fakeStatusBarLevel;
@property (retain, nonatomic) UIView *statusBarBackgroundView;
@property (nonatomic) long long statusBarBackgroundPageAlignment;
@property (retain, nonatomic) UIGestureRecognizer *wallpaperGestureRecognizer;
@property (retain, nonatomic) UITapGestureRecognizer *quickNoteGestureRecognizer;
@property (retain, nonatomic) SBSearchGesture *searchGesture;
@property (retain, nonatomic) UIView *bottomPage;
@property (retain, nonatomic) UIView *scalableContentView;
@property (readonly, nonatomic) UIView *slideableContentView;
@property (retain, nonatomic) UIView *modalPresentationView;
@property (retain, nonatomic) UIView *wakeEffectView;
@property (retain, nonatomic) UIView<CSWallpaperView> *wallpaperEffectView;
@property (retain, nonatomic) UIView *tintingView;
@property (retain, nonatomic) SBUIBackgroundView *backgroundView;
@property (retain, nonatomic) SBUIBackgroundView *bedtimeGreetingViewBackgroundView;
@property (retain, nonatomic) UIColor *reduceTransparencyBackingColor;
@property (nonatomic) struct CGPoint { double x; double y; } foregroundViewPositionOffset;
@property (weak, nonatomic) UIView *referenceViewForBelowPresentationContext;
@property (retain, nonatomic) _UILegibilitySettings *legibilitySettings;
@property (nonatomic) BOOL legibilitySettingsOverrideVibrancy;
@property (nonatomic) BOOL statusBarLegibilityEnabled;
@property (nonatomic) unsigned long long targetPageIndexForDraggingEnded;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic, getter=isTransitioning) BOOL transitioning;
@property (readonly, nonatomic) struct { double x0; struct { struct { double x0; BOOL x1; } x0; struct { double x0; BOOL x1; } x1; } x1; long long x2; } transitionContext;
@property (readonly, copy, nonatomic) NSString *coverSheetIdentifier;
@property (readonly, nonatomic) long long participantState;

- (void)setBackgroundStyle:(long long)a0;
- (void)_orderSubviews;
- (void)scrollViewDidEndScrolling:(id)a0;
- (long long)backgroundStyle;
- (void)_addStatusBarLegibilityView;
- (void)_addDateTimeContainer;
- (void)_updateLegibility;
- (void)layoutSubviews;
- (void)scrollViewWillBeginDragging:(id)a0;
- (struct { double x0; struct { struct { double x0; BOOL x1; } x0; struct { double x0; BOOL x1; } x1; } x1; long long x2; })_completedTransitionContextForPreviousTransitionContext:(struct { double x0; struct { struct { double x0; BOOL x1; } x0; struct { double x0; BOOL x1; } x1; } x1; long long x2; })a0 newTransitionContext:(struct { double x0; struct { struct { double x0; BOOL x1; } x0; struct { double x0; BOOL x1; } x1; } x1; long long x2; })a1;
- (void)scrollViewWillBeginScrolling:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_dateViewFrameForPageAlignment:(long long)a0 pageRelativeScrollOffset:(double)a1 outAlignmentPercent:(double *)a2;
- (void)viewControllerDidDisappear;
- (void)updateStatusBarLegibilityForForceLegibilityGradientHidden:(BOOL)a0;
- (void)_layoutFakeStatusBar;
- (void)updateScalableContentTransformWithScale:(double)a0;
- (void)_layoutWallpaperEffectView;
- (void)_addAuthIndicator;
- (void)_addScalableContentViewWithContentView:(id)a0;
- (void)viewControllerWillAppear;
- (void)_setLockScreenDefaults:(id)a0;
- (void)_layoutBottomPage;
- (void)_addScalableContentView;
- (void)_addHigherSlideableContentView;
- (void)_setDateView:(id)a0 forTesting:(BOOL)a1;
- (void)removePullDownContentViewAnimated:(BOOL)a0;
- (void)_addBackgroundView;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)updateBackgroundStyleTransitionProgress:(double)a0;
- (void)_layoutDateView;
- (void)scrollViewWillEndDragging:(id)a0 withVelocity:(struct CGPoint { double x0; double x1; })a1 targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })dateViewPresentationExtentForPageRelativeScrollOffset:(double)a0;
- (void)updateUIForAuthenticated:(BOOL)a0;
- (BOOL)resetScrollViewToMainPageAnimated:(BOOL)a0 withCompletion:(id /* block */)a1;
- (struct CGPoint { double x0; double x1; })_scrollView:(id)a0 adjustedOffsetForOffset:(struct CGPoint { double x0; double x1; })a1 translation:(struct CGPoint { double x0; double x1; })a2 startPoint:(struct CGPoint { double x0; double x1; })a3 locationInView:(struct CGPoint { double x0; double x1; })a4 horizontalVelocity:(inout double *)a5 verticalVelocity:(inout double *)a6;
- (void)cancelTransition;
- (void)beginTransitionToBackgroundStyle:(long long)a0;
- (void)scrollViewDidScroll:(id)a0 withContext:(struct { long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; })a1;
- (void)_layoutQuickActionsView;
- (BOOL)coverSheetScrollView:(id)a0 shouldSetContentOffset:(struct CGPoint { double x0; double x1; })a1 animated:(BOOL)a2;
- (void)addPullDownContentView;
- (void)_layoutStatusBarBackgroundView;
- (void)_addSlideableContentView;
- (void)_layoutAuthIndicator;
- (unsigned long long)_indexOfMainPage;
- (void)scrollViewDidEndDragging:(id)a0 willDecelerate:(BOOL)a1;
- (void)_layoutDateTimeViewClippingView;
- (void).cxx_destruct;
- (void)didAddSubview:(id)a0;
- (void)_removeScalableContentView;
- (struct { double x0; struct { struct { double x0; BOOL x1; } x0; struct { double x0; BOOL x1; } x1; } x1; long long x2; })_currentTransitionContext;
- (void)_layoutTeachableMomentsContainerView;
- (BOOL)resetScrollViewToMainPageAnimated:(BOOL)a0 withAnimationSettings:(id)a1 withCompletion:(id /* block */)a2;
- (void)_layoutFullScreenViews;
- (void)_setupQuickNoteGestureOnScrollView:(BOOL)a0;
- (void)_layoutProudLockView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_overlayClippingFrame;
- (void)completeTransitionToBackgroundStyle:(long long)a0;
- (void)addScalableContentView;
- (void)_layoutHigherSlideableContentView;
- (id)_lockScreenDefaults;
- (void)_setupWallpaperGestureOnScrollView:(BOOL)a0;
- (void)addScalableContentViewWithCustomContentView:(id)a0;
- (void)_layoutStatusBarLegibilityView;
- (BOOL)isTransitioningBackgroundStyle;
- (void)_addTintingView;
- (void)_addScrollView;
- (void)_layoutTintingView;
- (void)removeScalableContentView;
- (BOOL)scrollToPageAtIndex:(unsigned long long)a0 animated:(BOOL)a1 withCompletion:(id /* block */)a2;

@end
