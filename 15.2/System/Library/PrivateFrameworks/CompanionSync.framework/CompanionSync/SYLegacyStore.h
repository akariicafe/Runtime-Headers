@class NSUUID, NSString, SYVectorClock, NSError, NSMutableDictionary, SYRetryTimer, NSObject, SYPersistentStore, NSMutableIndexSet, NMSMessageCenter;
@protocol OS_dispatch_queue, OS_dispatch_source, OS_os_transaction;

@interface SYLegacyStore : SYStore <IDSServiceDelegate, NMSMessageCenterDelegate> {
    unsigned long long _batchCounter;
    NSMutableIndexSet *_batchChunkUnackedIndices;
    BOOL _tracksChanges;
    NSMutableDictionary *_sendSignals;
    SYRetryTimer *_syncRetryTimer;
    NSObject<OS_dispatch_source> *_overflowRetryTimer;
    NSError *_overflowRetryError;
    BOOL _deferredFullSync;
    NSObject<OS_os_transaction> *_transaction;
}

@property (retain, nonatomic) NSString *service;
@property (retain, nonatomic) NSString *databaseFileName;
@property (nonatomic) long long priority;
@property (nonatomic) BOOL encryptPayloads;
@property (nonatomic) BOOL alwaysWins;
@property (retain, nonatomic) SYPersistentStore *persistentStore;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic) struct __CFString { } *loggingFacility;
@property (retain, nonatomic) NSUUID *pairedDeviceID;
@property (nonatomic) BOOL registeredNotificationHandlers;
@property (retain, nonatomic) NMSMessageCenter *messageCenter;
@property (retain, nonatomic) SYVectorClock *vectorClock;
@property (nonatomic) BOOL fullSyncWasRequestedBySlave;
@property (copy, nonatomic) id /* block */ nextBatchStep;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)fullSyncActivityDictionary;

- (double)timeToLive;
- (id)initWithService:(id)a0;
- (BOOL)isPaired;
- (id)initWithBundleIdentifier:(id)a0;
- (void)setTimeToLive:(double)a0;
- (BOOL)objectChanged:(id)a0 sinceVersion:(unsigned long long)a1;
- (long long)state;
- (void)setDelegate:(id)a0;
- (void)messageCenter:(id)a0 didResolveIDSIdentifierForRequest:(id)a1;
- (void)_copyPeerClockFromMessageHeaderIfNecessary:(id)a0;
- (void).cxx_destruct;
- (BOOL)inFullSync;
- (void)setupDatabase;
- (void)_vectorClockUpdated;
- (void)dealloc;
- (BOOL)tracksChanges;
- (void)setTracksChanges:(BOOL)a0;
- (id)initWithService:(id)a0 isGStore:(BOOL)a1 highPriority:(BOOL)a2;
- (id)initWithService:(id)a0 isGStore:(BOOL)a1 highPriority:(BOOL)a2 isMasterStore:(BOOL)a3;
- (id)initWithService:(id)a0 isGStore:(BOOL)a1 priority:(long long)a2 isMasterStore:(BOOL)a3;
- (id)initWithService:(id)a0 isGStore:(BOOL)a1 priority:(long long)a2 isMasterStore:(BOOL)a3 tracksChanges:(BOOL)a4;
- (BOOL)addObject:(id)a0 context:(id)a1 idsOptions:(id)a2 error:(id *)a3;
- (BOOL)updateObject:(id)a0 context:(id)a1 idsOptions:(id)a2 error:(id *)a3;
- (BOOL)deleteObject:(id)a0 context:(id)a1 idsOptions:(id)a2 error:(id *)a3;
- (void)_transaction:(id /* block */)a0 context:(id)a1 idsOptions:(id)a2 blockUntilSent:(BOOL)a3 reportError:(id /* block */)a4;
- (void)setNeedsFullSyncWithContext:(id)a0 idsOptions:(id)a1;
- (id)initWithBundleIdentifier:(id)a0 isGStore:(BOOL)a1 highPriority:(BOOL)a2;
- (id)initWithService:(id)a0 isGStore:(BOOL)a1 highPriority:(BOOL)a2 isMasterStore:(BOOL)a3 tracksChanges:(BOOL)a4;
- (void)setDeliveryQOS:(unsigned int)a0;
- (BOOL)hasCompletedFullSync;
- (long long)maxBytesInFlight;
- (void)setMaxBytesInFlight:(long long)a0;
- (BOOL)inDeltaSync;
- (void)willBeginDeltaSync;
- (void)didEndDeltaSync;
- (void)setupPairingNotifications;
- (id)_getPairedDeviceID;
- (void)_setupMessageCenter_LOCKED;
- (void)_listenForPrefsChangeNotifications;
- (void)_updateMessageCenterPrefs:(id)a0;
- (void)_devicePaired:(id)a0;
- (void)_deviceUnpaired:(id)a0;
- (BOOL)_isUsingGenericCache;
- (BOOL)_isPairedWithDevice:(id)a0;
- (void)postUserNotification:(id)a0 message:(id)a1;
- (void)_postVersionRejectedForMessageID:(id)a0;
- (id)newMessageHeader;
- (void)sendMessage:(id)a0 ofType:(unsigned short)a1 respondingTo:(id)a2 userInfo:(id)a3 idsOptions:(id)a4;
- (id)_pathForMessageCenterCache;
- (BOOL)_checkMessageHeader:(id)a0 messageID:(id)a1;
- (void)handleFullSyncRequest:(id)a0 response:(id)a1;
- (void)_recordLastSeqNo:(id)a0;
- (void)handleSyncAllObjects:(id)a0 response:(id)a1;
- (void)handleBatchSyncStart:(id)a0;
- (void)handleBatchSyncEnd:(id)a0 response:(id)a1;
- (void)handleBatchSyncChunk:(id)a0 response:(id)a1;
- (void)handleChangeMessage:(id)a0;
- (void)performFullSyncToCurrentDBVersion;
- (void)processBatchChunkAck:(unsigned int)a0;
- (void)_retrySync;
- (void)_handleIDSOverflowWithError:(id)a0;
- (void)performFullSyncIfNecessaryAskingDelegate:(BOOL)a0;
- (void)remoteStoreRequestFullSync;
- (BOOL)_shouldIgnoreSyncID:(id)a0;
- (void)_syncEndedWithSyncID:(id)a0;
- (void)remoteStoreAllObjects:(id)a0 fromPeer:(id)a1 clock:(id)a2;
- (void)processBatchSyncStart;
- (BOOL)processBatchChunkAtIndex:(unsigned int)a0 encodedObjects:(id)a1 error:(id *)a2;
- (void)processBatchSyncEnd:(unsigned long long)a0;
- (BOOL)_shouldSkipNonSyncMessages;
- (void)performFullSync;
- (id)wrapMessage:(id)a0 ofType:(unsigned short)a1 respondingTo:(id)a2 userInfo:(id)a3;
- (BOOL)_allowDeltaSyncWithContext:(id)a0 error:(id *)a1;
- (void)handleObjectChanges:(id)a0 contextInfo:(id)a1 idsOptions:(id)a2 blockUntilSent:(BOOL)a3 reportError:(id /* block */)a4;
- (void)_handleObjectChanges:(id)a0 contextInfo:(id)a1 idsOptions:(id)a2 blockUntilSent:(BOOL)a3 reportError:(id /* block */)a4 notifyingTransaction:(id)a5;
- (void)logChanges:(id)a0;
- (void)sendChanges:(id)a0 context:(id)a1 options:(id)a2 sentSignal:(id)a3;
- (void)performFullSyncIfNecessary;
- (void)_postBatchEndMessageWithState:(id)a0 error:(id)a1 then:(id /* block */)a2;
- (BOOL)performBatchedSyncToCurrentDBVersion;
- (void)messageCenter:(id)a0 didReceiveUnknownRequest:(id)a1;
- (void)messageCenter:(id)a0 didResolveIDSIdentifier:(id)a1 forResponse:(id)a2;
- (void)messageCenter:(id)a0 didSuccessfullySendRequestWithIdentifier:(id)a1 userInfo:(id)a2;
- (void)messageCenter:(id)a0 didSuccessfullyDeliverRequestWithIdentifier:(id)a1 userInfo:(id)a2;
- (id)_getPairingStorePath;
- (id)_batchChunkUnackedIndices;
- (void)_prefsChanged;
- (void)setupMessageCenter;
- (BOOL)peerState:(id)a0 fromPeer:(id)a1 matchesExpectationForChangeCount:(unsigned long long)a2 offsetAmount:(unsigned long long *)a3;
- (id)newFullSyncContext;
- (void)_postBatchStartMessageWithState:(id)a0 then:(id /* block */)a1;
- (void)_restartBatchSyncWithState:(id)a0 then:(id /* block */)a1;
- (void)_sendBatchChunk:(id)a0 withState:(id)a1 then:(id /* block */)a2;

@end
