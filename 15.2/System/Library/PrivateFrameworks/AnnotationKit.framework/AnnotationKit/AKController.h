@class AKHighlightAnnotationController, AKLegacyDoodleController, AKFormFeatureDetectorController, AKPageController, AKToolController, NSString, NSArray, AKTextEditorController, AKUndoController, AKMainEventHandler, UIView, PKToolPicker, AKSparseMutableControllerArray, AKActionController, AKSignatureModelController, AKToolbarViewController, AKSidecarController, AKAttributeController, AKModelController, AKStatistics, NSMapTable, AKToolbarView, AKPeripheralAvailabilityManager_iOS;
@protocol PKRulerHostingDelegate, AKControllerDelegateProtocol, AKControllerOverlayInteractionProtocol;

@interface AKController : NSObject {
    BOOL _isEditingAnnotation;
    BOOL _toolPickerVisibleBeforeTextEditing;
}

@property BOOL isTestingInstance;
@property BOOL isTornDown;
@property (retain) AKSparseMutableControllerArray *pageControllers;
@property (retain) NSMapTable *pageModelControllersToPageControllers;
@property (weak) id<AKControllerDelegateProtocol> delegate;
@property (retain) AKActionController *actionController;
@property (retain) AKToolController *toolController;
@property (retain) AKToolbarViewController *toolbarViewController;
@property (retain) AKAttributeController *attributeController;
@property (retain) AKModelController *modelController;
@property (retain) AKUndoController *undoController;
@property (retain) AKSidecarController *sidecarController;
@property (retain) AKMainEventHandler *mainEventHandler;
@property (retain) AKTextEditorController *textEditorController;
@property (retain) AKLegacyDoodleController *legacyDoodleController;
@property (retain) UIView *toolbarView;
@property (retain) AKSignatureModelController *signatureModelController;
@property (retain) AKFormFeatureDetectorController *formDetectionController;
@property (retain) AKHighlightAnnotationController *highlightAnnotationController;
@property (retain) AKStatistics *statisticsLogger;
@property (retain) AKPeripheralAvailabilityManager_iOS *peripheralAvailabilityManager;
@property unsigned long long pasteCascadingMultiplier;
@property long long lastPasteboardChangeCount;
@property unsigned long long creationCascadingMultiplier;
@property (weak) AKPageController *lastCreationCascadingPageController;
@property (nonatomic) BOOL hideAllAdornments;
@property (nonatomic) BOOL isUsedOnDarkBackground;
@property (readonly, nonatomic) NSArray *cachedKeyCommands;
@property double akModelToCanvasFixedPixelScaleOfFirstEncounteredPage;
@property double screenPixelsToCanvasPixelsDownscale;
@property (nonatomic) BOOL isLogging;
@property (nonatomic) BOOL selectNewlyCreatedAnnotations;
@property (nonatomic) BOOL shapeDetectionEnabled;
@property (weak, nonatomic) AKToolbarView *modernToolbarView;
@property (weak, nonatomic) id<AKControllerOverlayInteractionProtocol> overlayInteractionDelegate;
@property (nonatomic) BOOL useHighVisibilityDefaultInks;
@property (readonly, nonatomic) BOOL onlyDrawWithApplePencil;
@property (readonly) BOOL _isInDFRAction;
@property (readonly, nonatomic) PKToolPicker *toolPicker;
@property (nonatomic) BOOL overlayShouldPixelate;
@property (nonatomic) BOOL allEditingDisabled;
@property (nonatomic) BOOL annotationEditingEnabled;
@property (nonatomic) BOOL pencilAlwaysDraws;
@property unsigned long long currentPageIndex;
@property (weak, nonatomic) id<PKRulerHostingDelegate> rulerHostingDelegate;
@property (copy) NSString *author;
@property (readonly, copy, nonatomic) NSString *modifiedImageDescription;

+ (BOOL)automaticallyNotifiesObserversForKey:(id)a0;
+ (void)renderAnnotation:(id)a0 inContext:(struct CGContext { } *)a1;
+ (id)controllerWithDelegate:(id)a0;
+ (id)akBundle;
+ (void)adjustAnnotationBoundsToFitText:(id)a0;
+ (id)colorForHighlightAttributeWithTag:(long long)a0;
+ (id)akBundleIdentifier;
+ (BOOL)canConnectToStylus;
+ (BOOL)hasPressureCapableHardware;
+ (BOOL)_isInLowMemoryEnvironment;
+ (id)markupBarButtonItemWithTarget:(id)a0 action:(SEL)a1;

- (void)undo:(id)a0;
- (id)doubleTapGestureRecognizer;
- (void)teardown;
- (void)_didReceiveMemoryWarning:(id)a0;
- (void)paste:(id)a0;
- (id)panGestureRecognizer;
- (id)initWithDelegate:(id)a0;
- (void)cut:(id)a0;
- (void)copy:(id)a0;
- (id)tapGestureRecognizer;
- (id)initForTesting;
- (id)rotationGestureRecognizer;
- (BOOL)handleEvent:(id)a0;
- (void).cxx_destruct;
- (void)delete:(id)a0;
- (void)redo:(id)a0;
- (void)commitEditing;
- (void)selectAll:(id)a0;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)dealloc;
- (id)pressGestureRecognizer;
- (id)toolbarButtonItemOfType:(unsigned long long)a0;
- (void)duplicate:(id)a0;
- (void)toolPickerVisibilityDidChange:(id)a0;
- (void)highlightableSelectionChanged;
- (void)highlightableSelectionWillBeginChanging;
- (void)highlightableSelectionDidEndChanging;
- (BOOL)isOverlayViewLoadedAtIndex:(unsigned long long)a0;
- (double)currentModelBaseScaleFactorForPageAtIndex:(unsigned long long)a0;
- (long long)currentExifOrientationForPageAtIndex:(unsigned long long)a0;
- (void)prepareOverlayAtIndex:(unsigned long long)a0;
- (id)overlayViewAtIndex:(unsigned long long)a0;
- (void)relinquishOverlayAtIndex:(unsigned long long)a0;
- (void)renderAnnotation:(id)a0 inContext:(struct CGContext { } *)a1;
- (BOOL)supportsImageDescriptionEditing;
- (BOOL)validateUndo:(id)a0;
- (BOOL)validateRedo:(id)a0;
- (void)resetToDefaultToolMode;
- (void)performActionForSender:(id)a0;
- (id)currentPageController;
- (unsigned long long)toolMode;
- (void)_updateGestureDependencyPriority;
- (BOOL)isPresentingPopover;
- (BOOL)validateSender:(id)a0;
- (id)originalOrModifiedImageDescription;
- (void)setModifiedImageDescription:(id)a0;
- (id)imageForToolbarButtonItemOfType:(unsigned long long)a0;
- (BOOL)shouldDrawVariableStrokeDoodles;
- (void)enclosingScrollViewDidScroll:(id)a0;
- (void)_pageModelControllerSelectedAnnotationsChangedNotification:(id)a0;
- (void)_didScrollPDFPage:(id)a0;
- (void)_setupPageModelController:(id)a0;
- (BOOL)validateCut:(id)a0;
- (BOOL)validateCopy:(id)a0;
- (BOOL)validatePaste:(id)a0;
- (BOOL)validateDelete:(id)a0;
- (BOOL)validateDuplicate:(id)a0;
- (BOOL)validateSelectAll:(id)a0;
- (void)showAttributeInspector:(id)a0;
- (BOOL)validateShowAttributeInspector:(id)a0;
- (BOOL)supportForPencilAlwaysDrawsSatisfied;
- (void)setToolMode:(unsigned long long)a0;
- (BOOL)_validateCutCopyDelete;
- (id)pageControllerForAnnotation:(id)a0;
- (BOOL)canBeginEditingTextAnnotation:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_popoverAnchorFrameInModelForAnnotations:(id)a0;
- (void)editTextAnnotation:(id)a0;
- (void)addPopupToAnnotation:(id)a0 openPopup:(BOOL)a1;
- (void)removeNoteFromAnnotation:(id)a0;
- (void)hideSelectionMenu:(id)a0;
- (void)strokeAddedNotification:(id)a0;
- (void)didBeginEditingAnnotation:(id)a0;
- (void)didEndEditingAnnotation:(id)a0;
- (void)updateOverlayViewAtIndex:(unsigned long long)a0;
- (void)reloadVisibleToolbarItemIdentifiers;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentAlignedRectForRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 onPageAtIndex:(unsigned long long)a1;
- (id)keyCommandsForAnnotations;
- (BOOL)canPerformKeyCommandAction:(SEL)a0 withSender:(id)a1 handled:(BOOL *)a2;
- (void)applyCurrentCrop;
- (void)clearUndoStack;
- (void)delayedUndoControllerSetup;
- (BOOL)validateEditTextAnnotation:(id)a0;
- (void)showSelectionMenu:(id)a0;
- (void)_toolpicker_setColor:(id)a0;
- (id)_toolpicker_color;
- (void)_toolpicker_setInkIdentifier:(id)a0;
- (id)_toolpicker_inkIdentifier;
- (id)pageControllerForPageModelController:(id)a0;
- (void)beginLogging:(id)a0 documentType:(id)a1;
- (void)endLogging;

@end
