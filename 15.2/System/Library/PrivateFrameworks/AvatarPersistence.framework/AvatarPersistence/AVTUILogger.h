@class NSString, NSObject;
@protocol OS_os_log;

@interface AVTUILogger : NSObject <AVTUILogger>

@property (readonly, nonatomic) NSObject<OS_os_log> *generalLog;
@property (readonly, nonatomic) NSObject<OS_os_log> *interactionLog;
@property (readonly, nonatomic) NSObject<OS_os_log> *backendLog;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)logDebug:(id)a0;
- (void).cxx_destruct;
- (id)init;
- (void)logRenderingModelColor:(id)a0;
- (void)logRenderingModelPreset:(id)a0;
- (void)logCarouselErrorGettingFrameForElementAtIndex:(unsigned long long)a0;
- (void)logCarouselEndsDraggingWithVelocity:(double)a0 willSwitchIndexPathInsteadOfScrollBack:(BOOL)a1 forHighVelocity:(BOOL)a2;
- (void)logGeneratingImageForRecord:(id)a0 scope:(id)a1 type:(long long)a2;
- (void)logGeneratingImageError:(id)a0;
- (void)logErrorDeletingSomeThumbnail:(id)a0;
- (void)logErrorProcessingChangeTransactionsToUpdateThumbnails:(id)a0;
- (void)updatingThumbnailsForRemoteChanges:(id /* block */)a0;
- (void)logCancelingPreLoadingTask:(id)a0;
- (void)logPreLoadingNeededForIndex:(unsigned long long)a0 section:(unsigned long long)a1;
- (void)logRequestingPreLoadingTask:(id)a0 forIndex:(unsigned long long)a1 section:(unsigned long long)a2;
- (void)logInMemoryCacheStorageForResource:(id)a0;
- (void)logInMemoryCacheHitForResource:(id)a0;
- (void)logInMemoryCacheEvictsResource:(id)a0;
- (void)logCarouselChangesCenterItemTo:(id)a0;
- (void)logErrorUpdatingBodyCarouselVisibleCellAtIndexPath:(id)a0;
- (void)logCarouselCellStartUsingLiveView:(id)a0 associatedTransition:(id)a1;
- (void)logCarouselAddsTransitionToCoordinator:(id)a0;
- (void)logCarouselStopsFocusingOnCenterItem:(id)a0 withCell:(id)a1;
- (void)logCarouselCellStopUsingLiveView:(id)a0 associatedTransition:(id)a1;
- (void)logAVTViewSetAvatar:(id)a0;
- (void)logFetchedOrphanedRecentSticker:(id)a0;
- (void)logFetchedRecentStickerWithNoStickerConfiguration:(id)a0;
- (void)logErrorFetchingRecentStickers:(id)a0;
- (void)logErrorSavingRecentSticker:(id)a0;
- (void)logDidFinishEditingWithSuccess;
- (void)logDidFinishEditingWithError:(id)a0;
- (void)logRequestingThumbnailForIndex:(unsigned long long)a0 section:(id)a1;
- (void)logPerformedRecentStickersMigration:(BOOL)a0;
- (void)logStickerGeneratorPoolDidntHaveAvailableGenerator:(long long)a0 maxCount:(long long)a1;
- (void)logNilImageReturnedFromAVTUIStickerRenderer;
- (void)logRenderingStickerEnd:(id)a0;
- (void)logRenderingStickerStart:(id)a0 forRecord:(id)a1;
- (void)logUpdatingLiveAvatarWithConfiguration:(id)a0;
- (void)logParsingMetadataDefinitionsError:(id)a0;
- (void)logErrorFetchingRecords:(id)a0;
- (void)logStartingPreLoadingTask:(id)a0;
- (void)logDonePreLoadingThumbnailForPreLoadingTask:(id)a0;
- (void)logLookingUpPreLoadedPreset:(id)a0 task:(id)a1;
- (void)logPreLoadingPreset:(id)a0 task:(id)a1;
- (void)logDonePreLoadingPreset:(id)a0 task:(id)a1;
- (void)logErrorSnapshottingAVTView:(id)a0;
- (void)logUsageTrackingRecordCount:(unsigned long long)a0;
- (void)logUsageTrackingSmallDifferencesClusterCount:(unsigned long long)a0;
- (void)logUsageTrackingBigDifferencesClusterCount:(unsigned long long)a0;
- (void)logPaddleViewVideoPlayerFailed:(id)a0;
- (void)logCarouselChangingToSingleMode;
- (void)logCarouselChangingToMultiMode;
- (void)logCarouselDelegateDidFocusRecord:(id)a0;
- (void)logCarouselDelegateWillEndFocusRecord:(id)a0;
- (void)logCarouselDelegateNearnessFactorDidChange:(double)a0 towardRecord:(BOOL)a1 editable:(BOOL)a2;
- (void)logCarouselDelegateDidUpdateRecord:(id)a0;
- (void)logStartTransition:(id)a0 state:(long long)a1;
- (void)logSetupHandlerCompletedForTransition:(id)a0 state:(long long)a1 finished:(BOOL)a2;
- (void)logCancelTransition:(id)a0;
- (void)logStickerSchedulerAddedTask:(id)a0 taskCount:(long long)a1;
- (void)logStickerSchedulerStartedTask:(id)a0 forSchedulerRule:(id)a1;
- (void)logStickerSchedulerCancelledTask:(id)a0;
- (void)logStickerSchedulerCancelledStickerSheetTasksForIdentifier:(id)a0;
- (void)logStickerSchedulerCancelledAllTasks;
- (void)logRenderingRecord:(id)a0 size:(struct CGSize { double x0; double x1; })a1;
- (void)logNilImageReturnedFromAVTAvatarRecordImageProvider;
- (void)logCarouselSnapshotForIndex:(unsigned long long)a0 size:(struct CGSize { double x0; double x1; })a1;
- (void)logThrottlingAVTView;
- (void)logUnthrottlingAVTView;
- (void)logRenderingConfiguration:(id)a0;
- (void)logSnapshotReturnedImage:(id)a0;
- (void)logFileSystemError:(id)a0;
- (void)logCreatingImageStoreForPath:(id)a0;
- (void)logImageStoreBeginSavingImageForPath:(id)a0;
- (void)logImageStoreDoneSavingImageForPath:(id)a0;
- (void)logDeletingImagesWithIdentifierPrefix:(id)a0;
- (void)logImageStoreCacheMiss:(id)a0;
- (void)logImageStoreCacheHitForItemDescription:(id)a0 sizeCost:(unsigned long long)a1;
- (void)logImageStoreSavingError:(id)a0 code:(long long)a1;
- (void)logPerformTransition:(id)a0;
- (void)logTransition:(id)a0 state:(unsigned long long)a1 reachedStage:(unsigned long long)a2;
- (void)logToLivePoseTransitionBegins:(id)a0;
- (void)logToLivePoseTransitionEnds:(id)a0;
- (void)logSingleModeControllerStartUsingLiveView:(id)a0;
- (void)logSingleModeControllerStopUsingLiveView:(id)a0;
- (void)logSingleModeCantSnapshotForLackOfWindow;
- (void)logStickerViewSnapshotForBounds:(id)a0 offset:(struct CGPoint { double x0; double x1; })a1;
- (void)logCoalesceableEventOccured:(id)a0;
- (void)logMissingTombstonedIdentifier;
- (void)logPersistentChangeNotOfInterest:(id)a0;
- (void)logErrorGettingChangedRecordsContentForIdentifiers:(id)a0 error:(id)a1;
- (void)logTooManyAvatars:(unsigned long long)a0 limit:(unsigned long long)a1;
- (void)logUnableToReadRemoteRecord:(id)a0;
- (void)logReadingError:(id)a0;
- (void)logAvatarPreloadBeginForIdentifier:(id)a0;
- (void)logAvatarPreloadEnd;
- (void)logErrorPinningContextToCurrentQueryGenerationToken:(id)a0;
- (void)logErrorMitigatingDuplicates:(id)a0;
- (void)logMaintenanceCompleted;
- (void)runningMaintenance:(id /* block */)a0;
- (void)logDeduplicateRecordWithIdentifier:(id)a0 toNewRecordWithIdentifier:(id)a1;
- (void)logDiscoveredDuplicates:(id)a0 count:(unsigned long long)a1;
- (void)logAvatarsDaemonClientConnectionInterrupted;
- (void)logAvatarsDaemonClientConnectionInvalidated;
- (void)logErrorGettingAvatarsDaemonClientProxy:(id)a0;
- (void)checkingIn:(id /* block */)a0;
- (void)logStartObservingResetSync;
- (void)logMissingResetSyncReasonKey;
- (void)logResetSyncReason:(unsigned long long)a0;
- (void)processingWillResetSyncNotification:(id /* block */)a0;
- (void)processingDidResetSyncNotification:(id /* block */)a0;
- (void)logImportRequestResult:(BOOL)a0 error:(id)a1;
- (void)logMirroringRequestErrorWithCode:(long long)a0 description:(id)a1;
- (void)importingRecords:(id /* block */)a0;
- (void)logExportRequestResult:(BOOL)a0 error:(id)a1;
- (void)exportingRecords:(id /* block */)a0;
- (void)logDispatchingRemoteChangeWithTransactionCount:(unsigned long long)a0 handlersCount:(unsigned long long)a1;
- (void)logStartObservingRemoteChangeNotificationFrom:(id)a0;
- (void)logReceivedRemoteChange:(id)a0;
- (void)logNotificationDoesntContainChangeHistoryToken;
- (void)processingRemoteChangeNotification:(id /* block */)a0;
- (void)logInspectingChangesForExportAfterToken:(id)a0;
- (void)logErrorFetchingChangeHistory:(id)a0;
- (void)logDeletingRecordWithIdentifier:(id)a0;
- (void)logDuplicatingRecordWithIdentifier:(id)a0;
- (void)logCreatingStore:(id)a0;
- (void)logSkippedFetchingRecordsWithReason:(id)a0;
- (void)logFetchedRecords:(unsigned long long)a0 criteria:(long long)a1;
- (void)fetchingRecords:(id /* block */)a0;
- (void)logRecordsNotFoundInRecordStore:(id)a0;
- (void)logRecordsNotFoundInPuppetStore:(id)a0;
- (void)logRecordsNotFoundInAnyStore:(id)a0;
- (void)savingRecords:(id /* block */)a0;
- (void)logErrorDeletingThumbnailsForIdentifier:(id)a0 error:(id)a1;
- (void)deletingRecords:(id /* block */)a0;
- (void)logErrorDuplicatingThumbnailsForIdentifier:(id)a0 error:(id)a1;
- (void)duplicatingRecords:(id /* block */)a0;
- (void)logPostingChangeNotificationForIdentifiers:(id)a0;
- (void)deletingStickerRecentsForRemoteChanges:(id /* block */)a0;
- (void)logReadingBackendAtPath:(id)a0;
- (void)logSavingBackend;
- (void)logSavingError:(id)a0;
- (void)logErrorUpdatingVersion:(id)a0;
- (void)logBackendVersionMismatch:(id)a0 actual:(id)a1;
- (void)logDroppingUnsupportedAvatarRecord:(id)a0;
- (void)logCreatingBackendFolderAtPath:(id)a0;
- (void)logErrorCreatingBackendContent:(id)a0;
- (void)logCreatingBackendDBAtPath:(id)a0;
- (void)logTrackerProcessingChanges:(id)a0 count:(unsigned long long)a1 from:(id)a2;
- (void)logErrorSavingChangeToken:(id)a0 location:(id)a1;
- (void)logCurrentHistoryTokenFileDoesntExist:(id)a0;
- (void)logErrorReadingCurrentHistoryToken:(id)a0;
- (void)savingChangeTrackerToken:(id /* block */)a0;
- (void)logTransactionHasChangesButNoToken;
- (void)logCouldntFindRecordIdentifierForChangeType:(long long)a0 managedObjectID:(id)a1;
- (void)logFoundRecordIdentifier:(id)a0 changeType:(long long)a1 managedObjectID:(id)a2;
- (void)logMigratingSource:(id)a0;
- (void)logErrorUpdatingRecordsForMigration:(id)a0;
- (void)logErrorDeletingMigratedContent:(id)a0;
- (void)migratingPersistedContent:(id /* block */)a0;
- (void)logFoundExistingRecordDuringMigration;
- (void)logNotImportingOnLaunchWithRemainingTime:(double)a0;
- (void)logSyncEnabled;
- (void)logErrorAddingPersistentStore:(id)a0;
- (void)logTearingDownCoreDataStack:(id)a0;
- (void)logErrorTearingDownCoreDataStack:(id)a0;
- (void)logErrorRemovingStoreFolder:(id)a0;
- (void)copyingStorageAside:(id /* block */)a0;
- (void)logUpdatingBackupExclusionStatus:(BOOL)a0;
- (void)logErrorMigratingBackupInclusionStatus:(id)a0;
- (void)logErrorUpdatingBackupInclusionStatus:(id)a0;
- (void)logAvatarsDaemonReceivesIncomingConnection;
- (void)logAvatarsDaemonClientChecksIn:(int)a0;
- (void)logErrorLoadingTemplates:(id)a0;
- (void)logParsingMetadataDefinitions;
- (void)logNoAvatarPreset:(id)a0;
- (void)logAvatarsdExitingWithReason:(id)a0;
- (void)logErrorWhileMigratingBackend:(id)a0;
- (void)logStartingServer;
- (void)settingUpStore:(id /* block */)a0;
- (void)performingMigrationXPCActivity:(id /* block */)a0;
- (void)logMigrationXPCActivityFinished;
- (void)performingUserRequestedBackupActivity:(id /* block */)a0;
- (void)logUserRequestedBackupXPCActivityFinished;
- (void)logErrorSettingUpStore:(id)a0;
- (void)logErrorStartingServer:(id)a0;
- (void)logUnableToCreatePushConnection:(id)a0;
- (void)logPushConnectionReceivedPublicToken:(id)a0;
- (void)logPushConnectionReceivedToken:(id)a0 topic:(id)a1 identifier:(id)a2;
- (void)logPushNotificationReceivedForTopic:(id)a0 payload:(id)a1;
- (void)logChangesRequireExport;
- (void)logChangesRequireThumbnailUpdate;
- (void)logCheckingIfMigrationNeeded;
- (void)logUpdatingThumbnails;
- (void)logSchedulingImport;
- (void)logSchedulingUpdateThumbnails;
- (void)logDeletingStickerRecents;
- (void)logWillResetZone;
- (void)logDidResetZoneWithSuccess:(BOOL)a0 error:(id)a1;
- (void)postingAvatarStoreChangeNotification:(id /* block */)a0;
- (void)logErrorSettingUserDirSuffixForSandbox:(int)a0;
- (void)logGenericSandboxError:(id)a0 error:(int)a1;
- (void)logErrorSandboxInit:(char *)a0;
- (void)logWarningNoHOME;
- (void)restoringStorage:(id /* block */)a0;
- (void)logErrorCopyingStorageAside:(id)a0;
- (void)logErrorMergingCopiedAsideContent:(id)a0;
- (void)logSetupSchedulingMigrationCheck;
- (void)logSetupSchedulingImport;
- (void)logSetupSchedulingExport;
- (void)checkingAccountInfo:(id /* block */)a0;
- (void)logAccountInfo:(id)a0 status:(long long)a1 deviceToDeviceEncryption:(BOOL)a2;
- (void)logErrorGettingAccountInfo:(id)a0;
- (void)logNoProxyToAvatarsDaemon;
- (void)logCarouselTransitionCenterItem:(id)a0 withCell:(id)a1;
- (void)logAVTViewDidRenderAvatar:(id)a0 currentAvatar:(id)a1;
- (void)logAVTViewDidRenderCurrentAvatar:(id)a0;
- (void)logAVTViewCancelingRenderingAvatar:(id)a0;
- (void)logSetupUserHasNoMemojiData;
- (void)logSetupUserImportAttempting:(long long)a0;
- (void)logSetupUserImportFailedToUnarchiveDataAtPath:(id)a0 errorDescription:(id)a1;
- (void)logSetupUserImportSaveError:(id)a0;
- (void)logSetupUserDataImportCheck;
- (void)logSetupUserImportFailedToRemoveFileWithError:(id)a0;
- (void)logFoundExistingRecordDuringMigration:(id)a0;

@end
