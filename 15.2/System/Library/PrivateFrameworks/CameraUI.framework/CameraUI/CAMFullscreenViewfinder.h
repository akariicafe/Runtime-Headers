@class CAMInterfaceModulationView, CEKLightingControl, CAMPreviewAlignmentGuide, CAMPreviewView, CAMModeDial, NSMutableArray, CAMMaxRecordingTimeInstructionLabel, CAMZoomSlider, CAMModeIndicatorView, CAMCreativeCameraButton, CAMControlDrawer, CAMDynamicShutterControl, CAMLowLightInstructionLabel, CAMFlashCompromisedInstructionLabel, CAMTimerIndicatorView, CAMFullscreenModeSelector, CEKLightingNameBadge, CAMPortraitModeInstructionLabel, UILongPressGestureRecognizer, CAMSemanticStylePicker, VKTextLiftingView, CAMFlipButton, CAMZoomControl, CAMAutoMacroButton, CAMImageWell, CAMBadgeTray, CAMFullscreenViewfinderLayout, UIView, CAMFilterNameBadge, CAMPanoramaView, CAMImageAnalysisButton, CAMFreeResourcesInstructionLabel, CAMControlStatusBar, NSMutableDictionary, CAMAdditiveAnimator, NSString, CAMElapsedTimeView, AVSpatialOverCaptureVideoPreviewLayer, CAMViewfinderReticleView, CAMQRCodeInstructionLabel, CAMImageAnalysisInstructionLabel;
@protocol CAMFullscreenViewfinderDelegate;

@interface CAMFullscreenViewfinder : UIView <CAMAdditiveAnimatorDelegate, CAMControlDrawerPresentationDelegate, CEKBadgeViewDelegate, CAMInstructionLabelDelegate, CAMSemanticStylePickerDelegate, CAMViewfinderTransitionable, CAMAccessibilityHUDItemProvider, CAMBarsAccessibilityHUDManagerGestureProvider>

@property (readonly, nonatomic) UIView *_previewContainerView;
@property (readonly, nonatomic) UIView *_modeClippingView;
@property (readonly, nonatomic) CAMViewfinderReticleView *_reticleView;
@property (retain, nonatomic, setter=_setControlDrawer:) CAMControlDrawer *controlDrawer;
@property (retain, nonatomic, setter=_setZoomControl:) CAMZoomControl *zoomControl;
@property (retain, nonatomic, setter=_setZoomSlider:) CAMZoomSlider *zoomSlider;
@property (retain, nonatomic, setter=_setAutoMacroButton:) CAMAutoMacroButton *autoMacroButton;
@property (retain, nonatomic, setter=_setTimerIndicator:) CAMTimerIndicatorView *timerIndicator;
@property (retain, nonatomic, setter=_setTextInteractionBackground:) UIView *_textInteractionBackground;
@property (retain, nonatomic, setter=_setQRCodeInstructionLabel:) CAMQRCodeInstructionLabel *qrCodeInstructionLabel;
@property (retain, nonatomic, setter=_setPortraitInstructionLabel:) CAMPortraitModeInstructionLabel *portraitInstructionLabel;
@property (retain, nonatomic, setter=_setLowLightInstructionLabel:) CAMLowLightInstructionLabel *_lowLightInstructionLabel;
@property (retain, nonatomic, setter=_setFlashCompromisedInstructionLabel:) CAMFlashCompromisedInstructionLabel *flashCompromisedInstructionLabel;
@property (retain, nonatomic, setter=_setImageAnalysisInstructionLabel:) CAMImageAnalysisInstructionLabel *imageAnalysisInstructionLabel;
@property (retain, nonatomic, setter=_setMaxRecordingTimeInstructionLabel:) CAMMaxRecordingTimeInstructionLabel *maxRecordingTimeInstructionLabel;
@property (retain, nonatomic, setter=_setFreeResourcesInstructionLabel:) CAMFreeResourcesInstructionLabel *freeResourcesInstructionLabel;
@property (retain, nonatomic, setter=_setPreviewAlignmentGuide:) CAMPreviewAlignmentGuide *previewAlignmentGuide;
@property (retain, nonatomic, setter=_setBottomLegibilityBackground:) UIView *_bottomLegibilityBackground;
@property (readonly, nonatomic) CAMFullscreenViewfinderLayout *_layout;
@property (readonly, nonatomic, getter=_isUsingCreativeCameraControls) BOOL _usingCreativeCameraControls;
@property (nonatomic, getter=_isControlDrawerPresentedModally, setter=_setControlDrawerPresentedModally:) BOOL _controlDrawerPresentedModally;
@property (retain, nonatomic, setter=_setOverCapturePreviewLayer:) AVSpatialOverCaptureVideoPreviewLayer *_overCapturePreviewLayer;
@property (readonly, nonatomic) CAMAdditiveAnimator *_viewportAnimator;
@property (readonly, nonatomic) CAMInterfaceModulationView *_contentView;
@property (readonly, nonatomic) NSMutableDictionary *_descriptionOverlayViewByKey;
@property (readonly, nonatomic) UIView *_contentClippingContainer;
@property (readonly, nonatomic) NSMutableArray *_semanticStyleBadges;
@property (weak, nonatomic) id<CAMFullscreenViewfinderDelegate> delegate;
@property (readonly, nonatomic, getter=isControlDrawerAllowed) BOOL controlDrawerAllowed;
@property (readonly, nonatomic, getter=isModeUIAllowed) BOOL modeUIAllowed;
@property (nonatomic, getter=isControlDrawerExpanded) BOOL controlDrawerExpanded;
@property (nonatomic, getter=isFlipButtonVisible) BOOL flipButtonVisible;
@property (nonatomic, getter=isZoomControlVisible) BOOL zoomControlVisible;
@property (nonatomic) unsigned long long zoomStyle;
@property (nonatomic, getter=isElapsedTimeViewVisible) BOOL elapsedTimeViewVisible;
@property (nonatomic, getter=isTimerIndicatorVisible) BOOL timerIndicatorVisible;
@property (nonatomic, getter=isPreviewAlignmentGuideVisible) BOOL previewAlignmentGuideVisible;
@property (nonatomic, getter=isLegibilityBackgroundsVisible) BOOL legibilityBackgroundsVisible;
@property (nonatomic) long long visibleInstructionLabel;
@property (nonatomic) long long visibleSecondaryInstructionLabel;
@property (retain, nonatomic) CAMPreviewView *previewView;
@property (nonatomic) long long previewViewOrientation;
@property (nonatomic) long long orientation;
@property (nonatomic) long long material;
@property (readonly, nonatomic, getter=isReticleAnimating) BOOL reticleAnimating;
@property (readonly, nonatomic) CAMSemanticStylePicker *semanticStylePicker;
@property (readonly, nonatomic) CAMDynamicShutterControl *shutterControl;
@property (readonly, nonatomic) CAMControlStatusBar *controlStatusBar;
@property (readonly, nonatomic) CAMBadgeTray *badgeTray;
@property (readonly, nonatomic) CAMModeDial *modeDial;
@property (readonly, nonatomic) CAMModeIndicatorView *modeIndicator;
@property (readonly, nonatomic) CAMFullscreenModeSelector *modeSelector;
@property (readonly, nonatomic) CAMFlipButton *flipButton;
@property (readonly, nonatomic) CAMImageWell *imageWell;
@property (readonly, nonatomic) CAMElapsedTimeView *elapsedTimeView;
@property (retain, nonatomic) CAMPanoramaView *panoramaView;
@property (nonatomic) struct CGSize { double x0; double x1; } panoramaCaptureSize;
@property (readonly, nonatomic) CAMCreativeCameraButton *creativeCameraButton;
@property (readonly, nonatomic) CAMFilterNameBadge *filterNameBadge;
@property (nonatomic, getter=isPortraitControlsAllowed) BOOL portraitControlsAllowed;
@property (nonatomic) long long shallowDepthOfFieldStatus;
@property (readonly, nonatomic) CEKLightingControl *lightingControl;
@property (readonly, nonatomic) CEKLightingNameBadge *lightingNameBadge;
@property (nonatomic) long long viewportAspectRatio;
@property (readonly, nonatomic) UILongPressGestureRecognizer *modeSelectorGestureRecognizer;
@property (nonatomic) unsigned long long interfaceModulation;
@property (retain, nonatomic) CAMImageAnalysisButton *imageAnalysisButton;
@property (nonatomic, getter=isImageAnalysisButtonVisible) BOOL imageAnalysisButtonVisible;
@property (nonatomic) VKTextLiftingView *textInteractionInsert;
@property (nonatomic) BOOL autoMacroButtonVisible;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) long long desiredAspectRatio;

+ (Class)layerClass;
+ (id)darkControlBackgroundColor;
+ (id)lightControlBackgroundColor;

- (void)selectedByAccessibilityHUDManager:(id)a0;
- (void)setOrientation:(long long)a0 animated:(BOOL)a1;
- (id)hudItemForAccessibilityHUDManager:(id)a0;
- (id)touchingRecognizersToCancel;
- (void)layoutSubviews;
- (void)badgeViewDidChangeIntrinsicContentSize:(id)a0;
- (void)removeInflightBlurAnimations;
- (void).cxx_destruct;
- (void)traitCollectionDidChange:(id)a0;
- (id)descriptionOverlayViewForKey:(id)a0;
- (void)instructionLabelDidChangeIntrinsicContentSize:(id)a0;
- (void)prepareForResumingUsingCrossfade;
- (void)setDescriptionOverlayView:(id)a0 forKey:(id)a1;
- (void)setInterfaceModulation:(unsigned long long)a0 animated:(BOOL)a1;
- (void)_handleDirectionIndicatorTapped;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForReticleViewport;
- (id)_createdInstructionLabels;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x2; })_geometryForInstructionLabel:(id)a0 belowInstructionLabelGeometry:(struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x2; })a1 elapsedTimeViewGeometry:(struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x2; })a2;
- (id)_visibleInstructionLabelForInstructionLabelValue:(long long)a0;
- (id)_createdSecondaryInstructionLabels;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForPreviewView;
- (void)_setViewportAnimatorFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForContentClippingContainer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForFlipButton;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x2; })_geometryForBadgeTray;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForImageWell;
- (void)_updateReticleForViewportFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_updatePreviewLayerForPreviewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 viewportFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)_updateModeDialClippingForViewportFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_updatePreviewAlignmentGuideForViewportFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_updateSemanticStylePickerForViewportFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForPreviewOverlaysInViewport:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForModeView;
- (void)_layoutZoomControls;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_imageAnalysisButtonFrameForZoomControl:(id)a0 zoomSlider:(id)a1;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x2; })_geometryForTextInteractionInsertWithViewport:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_autoMacroButtonFrameForZoomControl:(id)a0 zoomSlider:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForControlDrawer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForBottomLegibilityBackground;
- (void)_updateGeometryForElapsedTimeAndInstructionLabels;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForLightingControl;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x2; })_geometryForLandscapeLightingBadge;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x2; })_geometryForBottomCenteredView:(id)a0;
- (void)_layoutSemanticStyleMaskedBadges;
- (void)_layoutPanoramaView;
- (void)_updateSubviewsVisibilityAnimated:(BOOL)a0;
- (void)_updateTintColors;
- (void)_setViewportAnimatorFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withDuration:(double)a1 timingCurve:(id)a2;
- (BOOL)_canUpdatePreviewSemanticStyle;
- (BOOL)_showControlDrawer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_currentFourThreeViewportFrame;
- (double)_centerYForZoomControl:(id)a0 zoomSlider:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_imageAnalysisButtonFrameForCenterY:(double)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_autoMacroButtonFrameForCenterY:(double)a0;
- (BOOL)_showSemanticStylePicker;
- (BOOL)_showLandscapeLightingBadge;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x2; })_geometryForBottomCenteredView:(id)a0 margin:(double)a1;
- (void)setPortraitControlsAllowed:(BOOL)a0 animated:(BOOL)a1;
- (void)_loadPortraitControlsIfNeeded;
- (void)_setNeedsLayoutAnimated:(BOOL)a0;
- (void)setShallowDepthOfFieldStatus:(long long)a0 animated:(BOOL)a1;
- (void)_updatePortraitControlsHighlightAnimated:(BOOL)a0;
- (unsigned long long)_badgeFontStyle;
- (void)reloadSemanticStyleBadgesDelayIfNeeded:(BOOL)a0;
- (BOOL)requestPreviewUpdateForSemanticStyleAnimated:(BOOL)a0;
- (void)setViewportAspectRatio:(long long)a0 animated:(BOOL)a1;
- (void)setControlDrawerExpanded:(BOOL)a0 animated:(BOOL)a1;
- (void)_loadSemanticStyleControlsIfNeeded;
- (void)_loadFilterControlsIfNeeded;
- (BOOL)_showPortraitControls;
- (void)_updateSubviewsVisibilityAnimated:(BOOL)a0 completion:(id /* block */)a1;
- (BOOL)_showModeView;
- (BOOL)_showFilterNameBadge;
- (void)setVisibleInstructionLabel:(long long)a0 animated:(BOOL)a1;
- (void)setVisibleInstructionLabel:(long long)a0 visibleSecondaryInstructionLabel:(long long)a1 animated:(BOOL)a2;
- (void)_createViewIfNeededForInstructionLabel:(long long)a0;
- (void)_transitionView:(id)a0 fromOrientation:(long long)a1 toOrientation:(long long)a2;
- (void)setFlipButtonVisible:(BOOL)a0 animated:(BOOL)a1;
- (void)setZoomControlVisible:(BOOL)a0 animated:(BOOL)a1;
- (void)setAutoMacroButtonVisible:(BOOL)a0 animated:(BOOL)a1;
- (void)setElapsedTimeViewVisible:(BOOL)a0 animated:(BOOL)a1;
- (void)setTimerIndicatorVisible:(BOOL)a0 animated:(BOOL)a1;
- (void)setPreviewAlignmentGuideVisible:(BOOL)a0 animated:(BOOL)a1;
- (void)setLegibilityBackgroundsVisible:(BOOL)a0 animated:(BOOL)a1;
- (void)_insertBackgroundSubview:(id)a0;
- (void)setMaterial:(long long)a0 withDuration:(double)a1;
- (void)setImageAnalysisButtonVisible:(BOOL)a0 animated:(BOOL)a1;
- (void)_iterateViewsForHUDManager:(id)a0 withItemFoundBlock:(id /* block */)a1;
- (BOOL)shouldAccessibilityGestureBeginForHUDManager:(id)a0;
- (void)animator:(id)a0 didUpdateValuesForKeys:(id)a1;
- (void)controlDrawer:(id)a0 didChangeExpanded:(BOOL)a1 forControlType:(long long)a2 animated:(BOOL)a3;
- (void)semanticStylePickerDidChangeSelectedStyle:(id)a0;
- (void)semanticStylePickerDidScroll:(id)a0;
- (id)initWithMetalContext:(id)a0 useCreativeCameraControls:(BOOL)a1;
- (void)presentControlDrawerModally:(BOOL)a0 withControlType:(long long)a1;
- (BOOL)isControlDrawerPresentedModallyWithControlType:(long long)a0;
- (void)dismissModalControlDrawerIfNeeded;
- (void)setControlDrawerAllowed:(BOOL)a0 modeUIAllowed:(BOOL)a1 animated:(BOOL)a2;

@end
