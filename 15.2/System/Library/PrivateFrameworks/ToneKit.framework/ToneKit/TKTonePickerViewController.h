@class MPMediaPickerController, NSString, TKTonePickerTableViewCellLayoutManager, UIImage, MPMusicPlayerController, NSMutableDictionary, TKToneClassicsTableViewController, TKTonePickerController, NSMutableArray, TKVibrationPickerViewController, NSNumber, UIBarButtonItem;
@protocol TKTonePickerStyleProvider, TKTonePickerViewControllerDelegate;

@interface TKTonePickerViewController : UITableViewController <TKVibrationPickerViewControllerDelegate, TKVibrationPickerViewControllerDismissalDelegate, TKTonePickerControllerDelegate, TKTonePickerControllerDelegateInternal, TKTonePickerTableViewControllerHelper, TKTonePickerTableViewLayoutMarginsObserver, TKTonePickerTableViewSeparatorObserver, MPMediaPickerControllerDelegate> {
    TKTonePickerController *_tonePickerController;
    UIImage *_checkmarkImage;
    TKTonePickerTableViewCellLayoutManager *_tableViewCellLayoutManagerForIndentedRows;
    TKTonePickerTableViewCellLayoutManager *_tableViewCellLayoutManagerForUnindentedRows;
    long long _tonePickerTableViewStyle;
    BOOL _showsToneStoreWasSetExplicitly;
    BOOL _allowsAutoScrollingToSelectedTone;
    BOOL _allowsAutoScrollingToSelectedToneWasSetExplicitly;
    BOOL _needsScrollPositionReset;
    UIBarButtonItem *_storeBarButtonItem;
    NSMutableDictionary *_toneSectionHeaderViews;
    MPMediaPickerController *_mediaPickerController;
    NSMutableArray *_mediaItems;
    MPMusicPlayerController *_musicPlayer;
    NSNumber *_playingMediaItemIdentifier;
    TKToneClassicsTableViewController *_toneClassicsTableViewController;
    TKVibrationPickerViewController *_vibrationPickerViewController;
    BOOL _isHandlingSwitchControlValueChanged;
    NSMutableArray *_switchControlsBeingObserved;
}

@property (copy, nonatomic) NSString *accountIdentifier;
@property (nonatomic) BOOL showsStoreButtonInNavigationBar;
@property (nonatomic, setter=_setAllowsAutoScrollingToSelectedTone:) BOOL _allowsAutoScrollingToSelectedTone;
@property (copy, nonatomic, setter=_setOverrideFirstToneSectionTitle:) NSString *_overrideFirstToneSectionTitle;
@property (readonly, nonatomic) long long alertType;
@property (copy, nonatomic) NSString *topic;
@property (nonatomic) BOOL showsDefault;
@property (copy, nonatomic) NSString *defaultToneIdentifier;
@property (nonatomic) BOOL showsNone;
@property (nonatomic, getter=isNoneAtTop) BOOL noneAtTop;
@property (copy, nonatomic) NSString *noneString;
@property (nonatomic) BOOL showsNothingSelected;
@property (nonatomic) BOOL showsToneStore;
@property (copy, nonatomic) NSString *selectedToneIdentifier;
@property (weak, nonatomic) id<TKTonePickerViewControllerDelegate> delegate;
@property (nonatomic) BOOL showsIgnoreMute;
@property (nonatomic) BOOL ignoreMute;
@property (nonatomic) BOOL showsMedia;
@property (nonatomic, getter=isMediaAtTop) BOOL mediaAtTop;
@property (copy, nonatomic) NSNumber *selectedMediaIdentifier;
@property (nonatomic) BOOL showsVibrations;
@property (copy, nonatomic) NSString *selectedVibrationIdentifier;
@property (retain, nonatomic) id<TKTonePickerStyleProvider> styleProvider;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)_checkmarkImage;

- (long long)numberOfSectionsInTableView:(id)a0;
- (double)tableView:(id)a0 heightForRowAtIndexPath:(id)a1;
- (id)tableView:(id)a0 cellForRowAtIndexPath:(id)a1;
- (void)applicationWillSuspend;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)a0;
- (long long)tableView:(id)a0 numberOfRowsInSection:(long long)a1;
- (void)viewDidLayoutSubviews;
- (void)viewWillDisappear:(BOOL)a0;
- (void)addMediaItems:(id)a0;
- (BOOL)_canShowWhileLocked;
- (void)tableView:(id)a0 commitEditingStyle:(long long)a1 forRowAtIndexPath:(id)a2;
- (void)loadView;
- (BOOL)tableView:(id)a0 shouldHighlightRowAtIndexPath:(id)a1;
- (id)tableView:(id)a0 titleForFooterInSection:(long long)a1;
- (double)tableView:(id)a0 heightForHeaderInSection:(long long)a1;
- (id)initWithStyle:(long long)a0;
- (void).cxx_destruct;
- (id)tableView:(id)a0 titleForHeaderInSection:(long long)a1;
- (id)initWithAlertType:(long long)a0;
- (long long)tableView:(id)a0 editingStyleForRowAtIndexPath:(id)a1;
- (void)mediaPicker:(id)a0 didPickMediaItems:(id)a1;
- (void)mediaPickerDidCancel:(id)a0;
- (void)viewDidAppear:(BOOL)a0;
- (void)dealloc;
- (id)tableView:(id)a0 viewForHeaderInSection:(long long)a1;
- (void)tableView:(id)a0 willDisplayCell:(id)a1 forRowAtIndexPath:(id)a2;
- (void)_reloadData;
- (void)tableView:(id)a0 didSelectRowAtIndexPath:(id)a1;
- (id)_musicPlayer;
- (void)vibrationPickerViewController:(id)a0 selectedVibrationWithIdentifier:(id)a1;
- (id)_initWithAlertType:(long long)a0 tableViewStyle:(long long)a1;
- (void)layoutMarginsDidChangeInTonePickerTableView:(id)a0;
- (void)separatorColorDidChangeInTonePickerTableView:(id)a0;
- (void)tonePickerController:(id)a0 didUpdateIgnoreMute:(BOOL)a1 forTonePickerItem:(id)a2 atIndexPath:(id)a3;
- (id)tonePickerController:(id)a0 titleOfMediaItemAtIndex:(unsigned long long)a1;
- (void)_didSelectToneWithIdentifier:(id)a0;
- (void)tonePickerControllerRequestsPresentingVibrationPicker:(id)a0;
- (void)tonePickerController:(id)a0 didSelectMediaItemAtIndex:(unsigned long long)a1 selectionDidChange:(BOOL)a2;
- (void)tonePickerControllerRequestsPresentingMediaItemPicker:(id)a0;
- (void)tonePickerController:(id)a0 requestsPresentingToneClassicsPickerForItem:(id)a1;
- (void)_didSelectMediaItemWithIdentifier:(id)a0;
- (void)tonePickerController:(id)a0 requestsPerformingBatchUpdates:(id /* block */)a1 completion:(id /* block */)a2;
- (void)tonePickerController:(id)a0 didDeletePickerRowItems:(id)a1;
- (void)tonePickerController:(id)a0 didDeleteTonePickerSectionItems:(id)a1;
- (void)tonePickerController:(id)a0 didInsertPickerRowItems:(id)a1;
- (void)tonePickerController:(id)a0 didInsertTonePickerSectionItems:(id)a1;
- (void)tonePickerController:(id)a0 didUpdateHeaderTextOfTonePickerSectionItems:(id)a1;
- (void)tonePickerController:(id)a0 didUpdateFooterTextOfTonePickerSectionItems:(id)a1;
- (void)tonePickerController:(id)a0 didUpdateDownloadProgressOfTonePickerItem:(id)a1;
- (void)tonePickerController:(id)a0 didUpdateTonePickerItem:(id)a1;
- (void)tonePickerController:(id)a0 willBeginPlaybackOfToneWithIdentifier:(id)a1;
- (void)tonePickerControllerDidStopPlaying:(id)a0 withFadeOutDuration:(double)a1;
- (BOOL)tonePickerControllerShouldShowMedia:(id)a0;
- (unsigned long long)numberOfMediaItemsInTonePickerController:(id)a0;
- (id)tonePickerController:(id)a0 identifierOfMediaItemAtIndex:(unsigned long long)a1;
- (unsigned long long)tonePickerController:(id)a0 indexOfMediaItemWithIdentifier:(id)a1;
- (void)tonePickerController:(id)a0 selectedMediaItemWithIdentifier:(id)a1;
- (void)tonePickerControllerRequestsMediaItemsRefresh:(id)a0;
- (void)tonePickerControllerDidReloadTones:(id)a0;
- (void)tonePickerController:(id)a0 selectedToneWithIdentifier:(id)a1;
- (void)tonePickerController:(id)a0 didUpdateCheckedStatus:(BOOL)a1 ofTonePickerItem:(id)a2;
- (void)tonePickerController:(id)a0 didUpdateDetailText:(id)a1 ofTonePickerItem:(id)a2;
- (id)selectedTonePickerItem;
- (void)_handlePreferredContentSizeCategoryDidChangeNotification:(id)a0;
- (void)tonePickerTableViewControllerWillBeDeallocated:(id)a0;
- (void)_handleSwitchControlValueChanged:(id)a0;
- (void)_updateStyleOfTableView:(id)a0 forStyleProvider:(id)a1;
- (void)loadViewForTonePickerTableViewController:(id)a0;
- (void)_updateMinimumTextIndentation;
- (double)_minimumTextIndentationForTableView:(id)a0 withCheckmarkImage:(id)a1;
- (void)_resetScrollingPosition;
- (void)_handleMediaLibraryDidChangeNotification;
- (id)selectedIdentifier:(BOOL *)a0;
- (id)_mediaItemForIdentifier:(id)a0;
- (unsigned long long)_addMediaIdentifierToList:(id)a0;
- (void)_playMediaItemWithIdentifier:(id)a0;
- (void)_didFinishPreparingToPlayMediaItemWithIdentifier:(id)a0 error:(id)a1;
- (void)_configureTextColorOfLabelInCell:(id)a0 shouldTintText:(BOOL)a1 checked:(BOOL)a2;
- (void)updateCell:(id)a0 withCheckedStatus:(BOOL)a1 forTonePickerItem:(id)a2;
- (BOOL)_shouldShowCheckmarkOnTrailingEdge;
- (void)_updateCell:(id)a0 withDownloadProgress:(float)a1 animated:(BOOL)a2;
- (void)tableView:(id)a0 updateCell:(id)a1 withSeparatorForPickerRowItem:(id)a2;
- (id)_pickerRowItemForIndexPath:(id)a0;
- (void)updateDividerContentColorToMatchSeparatorColorInTableView:(id)a0;
- (id)tableView:(id)a0 cellForPickerRowItem:(id)a1;
- (void)tableView:(id)a0 didSelectRowAtIndexPath:(id)a1 forPickerRowItem:(id)a2;
- (id)_customHeaderViewForHeaderInSection:(long long)a0;
- (void)tableView:(id)a0 willDisplayCell:(id)a1 forPickerRowItem:(id)a2;
- (void)updateCell:(id)a0 withDetailText:(id)a1;
- (void)_togglePlayMediaItemWithIdentifier:(id)a0;
- (void)_stopMediaItemPlaybackWithFadeOutDuration:(double)a0;
- (void)vibrationPickerViewControllerWasDismissed:(id)a0;
- (void)tonePickerController:(id)a0 requestsPresentingAlertWithTitle:(id)a1 message:(id)a2;
- (void)tonePickerTableViewWillDisappear:(BOOL)a0;
- (void)removeMediaItems:(id)a0;

@end
