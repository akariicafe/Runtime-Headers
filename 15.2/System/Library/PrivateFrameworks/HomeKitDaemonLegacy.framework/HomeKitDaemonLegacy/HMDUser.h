@class HAPPairingIdentity, HMDAccountIdentifier, HMPhotosPersonManagerSettings, HMDCloudShareTrustManager, HMDUserDataController, NSMutableArray, NSString, HMDCloudShareMessenger, HMDAssistantAccessControl, HMDUserPhotosPersonDataManager, HMDAccountHandle, HMDSettingsControllerDependency, HMFMessageDispatcher, HMBShareUserID, NSObject, NSSet, NSData, AVOutputDeviceAuthorizedPeer, NAFuture, HMDPersonSettingsManager, HMDSiriMultiUserNewLanguageNotificationManager, NSUUID, HMDPhotosPersonManager, HMUserPresenceAuthorization, HMDUserSettingsBackingStoreController, NSNumber, HMDHome;
@protocol HMDUserDataSource, OS_dispatch_queue, HMFLocking;

@interface HMDUser : HMFObject <HMDCloudShareTrustManagerDataSource, HMDCloudShareTrustManagerDelegate, HMDUserDataControllerDelegate, HMDUserSettingsBackingStoreControllerDelegate, HMDUserDataControllerDataSource, HMFLogging, HMFDumpState, HMDBackingStoreObjectProtocol, HMDHomeMessageReceiver, HMDSettingsControllerDelegate, HMDRemoteEventRouterUserAccessControlProvider, HMDUserSettingsInitialValueProviding, NSSecureCoding> {
    id<HMFLocking> _lock;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableArray *_relayAccessTokens;
    HMDAccountHandle *_accountHandle;
    HMDAccountIdentifier *_accountIdentifier;
}

@property (class, readonly) BOOL hasMessageReceiverChildren;
@property (class, readonly) BOOL supportsSecureCoding;

@property (readonly, copy) AVOutputDeviceAuthorizedPeer *av_authorizedPeer;
@property (readonly) BOOL hasCameraClipsAccess;
@property (readonly, copy) NSData *nfcIssuerKeyIdentifier;
@property (readonly, copy, nonatomic) NSString *encodingRemoteDisplayName;
@property (retain) HMDAssistantAccessControl *assistantAccessControl;
@property (retain) HMDSettingsControllerDependency *sharedSettingsControllerDependency;
@property (retain) HMDCloudShareMessenger *shareMessenger;
@property (retain) HMDSettingsControllerDependency *privateSettingsControllerDependency;
@property (retain) HMDUserSettingsBackingStoreController *privateBackingStoreController;
@property (retain) HMDUserPhotosPersonDataManager *photosPersonDataManager;
@property (retain) HMDPersonSettingsManager *personSettingsManager;
@property BOOL needsiTunesMultiUserRepair;
@property (readonly) id<HMDUserDataSource> dataSource;
@property (retain) HMDSiriMultiUserNewLanguageNotificationManager *siriMultiUserNewLanguageNotificationManager;
@property (copy, setter=setUUID:) NSUUID *uuid;
@property (retain) HMFMessageDispatcher *messageDispatcher;
@property (retain) HMBShareUserID *cloudShareID;
@property (weak) HMDHome *home;
@property (copy) HMUserPresenceAuthorization *presenceAuthStatus;
@property unsigned long long privilege;
@property (getter=isRemoteAccessAllowed) BOOL remoteAccessAllowed;
@property (retain, nonatomic) NSNumber *camerasAccessLevelValue;
@property unsigned long long announceAccessLevel;
@property unsigned long long announceNotificationModeForCurrentDevice;
@property (copy) HAPPairingIdentity *pairingIdentity;
@property (copy) HMDAccountIdentifier *accountIdentifier;
@property (retain) HMDCloudShareTrustManager *cloudShareTrustManager;
@property (retain) HMDUserSettingsBackingStoreController *sharedBackingStoreController;
@property (copy) NSString *relayIdentifier;
@property (copy) NSString *userID;
@property (readonly) NSNumber *notificationContextHAPIdentifier;
@property (readonly) NSNumber *notificationContextNFCIdentifier;
@property long long userCloudShareWithOwnerMessagingState;
@property (readonly) NAFuture *cloudShareIDFuture;
@property (readonly, copy) NSString *displayName;
@property (readonly, getter=isAdministrator) BOOL administrator;
@property (readonly, getter=isOwner) BOOL owner;
@property (readonly, getter=isRemoteGateway) BOOL remoteGateway;
@property (readonly, getter=isCurrentUser) BOOL currentUser;
@property (readonly, getter=isValid) BOOL valid;
@property (readonly) NSUUID *assistantAccessControlModelUUID;
@property (readonly, copy) HMPhotosPersonManagerSettings *photosPersonManagerSettings;
@property (readonly) HMDPhotosPersonManager *photosPersonManager;
@property (readonly, getter=isAnnounceAccessAllowed) BOOL announceAccessAllowed;
@property (copy) NSString *accessCode;
@property (retain) NSUUID *accessCodeChangedByUserUUID;
@property (retain) HMDUserDataController *userDataController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) NSUUID *userUUID;
@property (readonly) BOOL isRunningOnHomeOwnersDevice;
@property (readonly) BOOL isCurrentUser;
@property (readonly, copy) NSSet *messageReceiverChildren;
@property (readonly, nonatomic) NSUUID *messageTargetUUID;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;

+ (id)logCategory;
+ (id)UUIDWithUserID:(id)a0 forHomeIdentifier:(id)a1 uuid:(id)a2 pairingIdentity:(id)a3;
+ (id)userIDForAccountHandle:(id)a0;
+ (id)userWithDictionary:(id)a0 home:(id)a1;
+ (id)currentUserWithPrivilege:(unsigned long long)a0 forHome:(id)a1;
+ (id)userDictionaryWithUserID:(id)a0 privilege:(unsigned long long)a1 remoteAccessAllowed:(BOOL)a2 cameraAccessLevel:(unsigned long long)a3 announceAccessAllowed:(id)a4 announceAccessLevel:(unsigned long long)a5;
+ (id)ownerWithUserID:(id)a0 home:(id)a1 pairingIdentity:(id)a2 homeManager:(id)a3;

- (id)dumpState;
- (id)publicKey;
- (id)shortDescription;
- (id)attributeDescriptions;
- (id)account;
- (void)encodeWithCoder:(id)a0;
- (id)logIdentifier;
- (unsigned long long)camerasAccessLevel;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)messageDestination;
- (void)dealloc;
- (id)dictionaryEncoding;
- (void)setDisplayName:(id)a0;
- (id)initWithModelObject:(id)a0;
- (void)unconfigure;
- (void)registerForMessages;
- (void)transactionObjectUpdated:(id)a0 newValues:(id)a1 message:(id)a2;
- (void)transactionObjectRemoved:(id)a0 message:(id)a1;
- (id)modelObjectWithChangeType:(unsigned long long)a0 version:(long long)a1;
- (id)modelObjectWithChangeType:(unsigned long long)a0;
- (id)backingStoreObjects:(long long)a0;
- (id)pairingUsername;
- (void)configureWithHome:(id)a0;
- (BOOL)refreshDisplayName;
- (void)_handleAssistantAccessControlUpdate:(id)a0;
- (void)_handleMediaContentProfileAccessControlUpdate:(id)a0;
- (void)_handleUserListeningHistoryUpdateControlUpdatedAccessoryUUIDs:(id)a0;
- (void)removeAccessoriesFromAssistantAccessControlList:(id)a0;
- (void)migrateCloudZone:(id)a0 migrationQueue:(id)a1 completion:(id /* block */)a2;
- (BOOL)requiresMakoSupport;
- (void)setAccountHandle:(id)a0;
- (id)accountHandle;
- (void)updateRelayIdentifier:(id)a0;
- (BOOL)updateAdministrator:(BOOL)a0;
- (void)removeCloudData;
- (void)addRelayAccessToken:(id)a0;
- (id)relayAccessTokenForAccessory:(id)a0;
- (id)initWithAccountHandle:(id)a0 home:(id)a1 pairingIdentity:(id)a2 privilege:(unsigned long long)a3;
- (void)handleRemovedAccessory:(id)a0;
- (void)handleUserListeningHistoryUpdateControlUpdatedAccessoryUUIDs:(id)a0;
- (void)handleMediaContentProfileAccessControlUpdate:(id)a0;
- (void)handleAssistantAccessControlUpdate:(id)a0;
- (void)didStopBackingStoreController:(id)a0;
- (void)backingStoreController:(id)a0 didUpdatePhotosPersonManagerSettingsModel:(id)a1 previousPhotosPersonManagerSettingsModel:(id)a2;
- (void)didStartBackingStoreController:(id)a0;
- (id)backingStoreController:(id)a0 createParticipantManagerForCloudZone:(id)a1;
- (void)didStartLocalZoneForBackingStoreController:(id)a0;
- (id)ownerForUserSettingsBackingStoreController:(id)a0;
- (id)zoneNameForCloudShareTrustManager:(id)a0;
- (void)didRemoveTrustZoneInCloudShareTrustManager:(id)a0;
- (id)homeForCloudShareTrustManager:(id)a0;
- (BOOL)hasDeviceWithHomeKitVersionGreaterThanVersion:(id)a0;
- (BOOL)cloudShareTrustManager:(id)a0 shouldShareTrustWithUser:(id)a1;
- (void)cloudShareTrustManager:(id)a0 didRemoveUserWithUUID:(id)a1;
- (void)updateCloudShareID:(id)a0;
- (void)didFinishConfiguringForCloudShareTrustManager:(id)a0;
- (void)cloudShareTrustManager:(id)a0 didFetchOwnerCloudShareID:(id)a1;
- (id)ownerForCloudShareTrustManager:(id)a0;
- (BOOL)isOwnerCapableForTrustManager:(id)a0;
- (id)initWithAccountHandle:(id)a0 homeUUID:(id)a1 pairingIdentity:(id)a2 privilege:(unsigned long long)a3;
- (id)relayAccessTokens;
- (id)sharedSettingValuesByKeyPathForAWD;
- (id)privateSettingValuesByKeyPathForAWD;
- (unsigned long long)allowedRemoteEventAccessUserTypes;
- (void)settingsController:(id)a0 didUpdateWithCompletion:(id /* block */)a1;
- (void)applyConditionalValueUpdateToModels:(id)a0;
- (id)settingsControllerFollowerKeyPaths:(id)a0;
- (id)settingsController:(id)a0 willUpdateSettingAtKeyPath:(id)a1 withValue:(id)a2;
- (void)__handleAddedAccount:(id)a0;
- (void)__handleRemovedAccount:(id)a0;
- (void)removeRelayAccessToken:(id)a0;
- (long long)sharedSettingsControllerRunState;
- (id)pushTokensForDevicesObservingSubjectDevice:(id)a0 subActivity:(id)a1;
- (void)userDataControllerDidUpdateUserListeningHistoryUpdateControl:(id)a0;
- (void)userDataControllerDidUpdateMediaContentProfile:(id)a0;
- (id)sharedZoneControllerForUserDataController:(id)a0;
- (void)userDataControllerDidUpdateAssistantAccessControl:(id)a0;
- (BOOL)userDataController:(id)a0 isHAPAccessory:(id)a1;
- (BOOL)userDataController:(id)a0 isAppleMediaAccessory:(id)a1;
- (BOOL)userDataController:(id)a0 isAccessoryUserListeningHistoryUpdateCapable:(id)a1;
- (BOOL)userDataController:(id)a0 isMediaContentProfileCapableAccessoryID:(id)a1;
- (BOOL)userDataController:(id)a0 isPersonalRequestCapableAccessoryID:(id)a1;
- (id)privateZoneControllerForUserDataController:(id)a0;
- (id)allAccessoryUUID;
- (id)initWithAccountHandle:(id)a0 homeUUID:(id)a1 pairingIdentity:(id)a2 privilege:(unsigned long long)a3 dataSource:(id)a4;
- (id)initWithAccountHandle:(id)a0 home:(id)a1 pairingIdentity:(id)a2 privilege:(unsigned long long)a3 dataSource:(id)a4;
- (void)handleUserDataControllerInitialized:(id)a0;
- (void)initializeUserSettingsWithHome:(id)a0;
- (void)_handleCloudShareWithOwnerMessageError;
- (void)recoverUserCloudDataDueToUUIDChangeFromOldUUID:(id)a0;
- (void)_recoverUserSettingsDueToUUIDChange;
- (void)updateSharedBackingStoreControllerParticipants;
- (void)_recoverTrustManagerDueToUUIDChange;
- (void)deregisterForMessages;
- (unsigned long long)_compatiblePrivilege;
- (void)registerIdentity;
- (void)deregisterIdentity;
- (void)_handlePairingIdentityRequest:(id)a0;
- (void)_handleShareLookupInfoRequest:(id)a0;
- (void)_handleMultiUserSharePayloadRequest:(id)a0;
- (void)_sendSecureShareClientPayloadToMostEligibleDevice:(id)a0 completion:(id /* block */)a1;
- (void)_sendAccountMessage:(id)a0 payload:(id)a1 deviceCapabilities:(id)a2 multicast:(BOOL)a3 completion:(id /* block */)a4;
- (void)_handleShareClientRepairRequest:(id)a0;
- (void)_handleNeedsiTunesMultiUserRepair:(id)a0;
- (unsigned long long)defaultAnnounceUserAccessLevel;
- (BOOL)isCurrentUserAndOwner;
- (void)_handleAnnounceSettingsUpdate:(id)a0;
- (BOOL)containsRelayAccessToken:(id)a0;
- (id)_relayAccessTokenForIdentifier:(id)a0;
- (void)_addRelayAccessToken:(id)a0;
- (void)_removeRelayAccessToken:(id)a0;
- (id)updatePhotosPersonManagerSettings:(id)a0;
- (void)configurePhotosPersonDataManager;
- (void)configurePersonSettingsManager;
- (void)_transactionUserUpdated:(id)a0 newValues:(id)a1 message:(id)a2;
- (void)_fixupRelayAccessTokens;
- (void)_migrateRelayAccessTokensCloudZone:(id)a0 migrationQueue:(id)a1 completion:(id /* block */)a2;
- (id)announceUserSettingsModelWithChangeType:(unsigned long long)a0;
- (void)postUserSettingsUpdatedNotificationWithReason:(id)a0;
- (void)removeCloudShareID;
- (id)trustTargetUUID;
- (void)configureCloudShareTrustManager;
- (void)registerIDSActivityObserver:(id)a0 subActivity:(id)a1 subjectDevice:(id)a2;
- (void)updateIDSActivityObserver:(id)a0;
- (void)deregisterIDSActivityObserver:(id)a0 subActivity:(id)a1 subjectDevice:(id)a2;
- (void)deregisterIDSActivityObserver:(id)a0;
- (BOOL)_isExplicitContentValueEnabledForAppleMediaAccessory:(id)a0;

@end
