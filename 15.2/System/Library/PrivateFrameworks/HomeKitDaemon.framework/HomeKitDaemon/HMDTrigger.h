@class NSMutableDictionary, NSDate, HMFMessageDispatcher, NSDictionary, NSObject, HMDTriggerPolicy, NSMutableArray, NSString, HMDDevice, HMDUser, NSSet, NSArray, HMDHome, NSUUID;
@protocol OS_dispatch_queue;

@interface HMDTrigger : HMFObject <HMDBulletinIdentifiers, HMDHomeMessageReceiver, NSSecureCoding, HMFDumpState, HMFLogging, HMDDevicePreferenceDataSource, HMDBackingStoreObjectProtocol> {
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
}

@property (class, readonly) BOOL hasMessageReceiverChildren;
@property (class, readonly) BOOL supportsSecureCoding;

@property (readonly, nonatomic) NSDictionary *actionContext;
@property (readonly, nonatomic) NSDictionary *bulletinContext;
@property (readonly, copy, nonatomic) NSString *contextID;
@property (readonly, copy, nonatomic) NSUUID *contextSPIUniqueIdentifier;
@property (readonly, copy) NSString *urlString;
@property (retain, nonatomic) NSMutableDictionary *actionSetMappings;
@property (retain, nonatomic) NSMutableArray *actionSetUUIDs;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue;
@property (retain, nonatomic) HMFMessageDispatcher *msgDispatcher;
@property (nonatomic) BOOL active;
@property (readonly, nonatomic, getter=isConfigured) BOOL configured;
@property (nonatomic) unsigned long long triggerType;
@property (copy, nonatomic) NSDate *mostRecentFireDate;
@property (retain, nonatomic) NSString *name;
@property (retain, nonatomic) NSString *configuredName;
@property (copy, nonatomic) NSUUID *uuid;
@property (weak, nonatomic) HMDHome *home;
@property (retain, nonatomic) HMDUser *owner;
@property (retain, nonatomic) HMDDevice *owningDevice;
@property (retain, nonatomic) HMDTriggerPolicy *policy;
@property (readonly, nonatomic, getter=isOwnedByThisDevice) BOOL ownedByThisDevice;
@property (readonly, nonatomic) BOOL requiresDataVersion4;
@property (readonly, copy) NSArray *actionSets;
@property (readonly, copy) NSSet *messageReceiverChildren;
@property (readonly, nonatomic) NSUUID *messageTargetUUID;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)logCategory;

- (id)dumpState;
- (void)_activateWithCompletion:(id /* block */)a0;
- (void)removeAccessory:(id)a0;
- (id)attributeDescriptions;
- (void)removeService:(id)a0;
- (void)encodeWithCoder:(id)a0;
- (id)logIdentifier;
- (void)activateWithCompletion:(id /* block */)a0;
- (void)timerFired:(id)a0;
- (void).cxx_destruct;
- (id)initWithCoder:(id)a0;
- (void)invalidate;
- (void)dealloc;
- (void)_registerForMessages;
- (id)initWithName:(id)a0 uuid:(id)a1;
- (void)removeCharacteristic:(id)a0;
- (void)transactionObjectUpdated:(id)a0 newValues:(id)a1 message:(id)a2;
- (void)transactionObjectRemoved:(id)a0 message:(id)a1;
- (BOOL)supportsDeviceWithCapabilities:(id)a0;
- (id)initWithModel:(id)a0 home:(id)a1 message:(id)a2;
- (void)setActionSetForKey:(id)a0 value:(id)a1;
- (id)actionSetForKey:(id)a0;
- (void)removeActionSetForKey:(id)a0;
- (void)removeAllActionSets;
- (id)actionSetMapKeys;
- (BOOL)compatible:(id)a0 user:(id)a1;
- (void)setEnabled:(BOOL)a0 message:(id)a1;
- (BOOL)hasNoActions;
- (void)_checkForNoActions;
- (void)_forceEvaluate;
- (void)removeActionSet:(id)a0 postUpdate:(BOOL)a1;
- (void)fixupForReplacementAccessory:(id)a0;
- (void)reEvaluate:(unsigned long long)a0;
- (void)triggerFired;
- (void)_recentFireDateUpdated:(id)a0;
- (void)sendTriggerFiredNotification:(id)a0;
- (BOOL)_isTriggerFiredNotificationEntitled;
- (BOOL)isAssociatedWithAccessory:(id)a0;
- (void)configure:(id)a0 messageDispatcher:(id)a1 queue:(id)a2;
- (BOOL)shouldActivateOnLocalDevice;
- (void)activateAfterResidentChangeWithCompletion:(id /* block */)a0;
- (BOOL)modelContainsTriggerFired:(id)a0;
- (void)markChangedForMessage:(id)a0;
- (void)markChangedForMessage:(id)a0 triggerModel:(id)a1;
- (void)_activate:(BOOL)a0 completionHandler:(id /* block */)a1;
- (void)_handleRenameRequest:(id)a0;
- (void)_renameRequest:(id)a0;
- (id)canRenameTriggerWithNewName:(id)a0 configuredName:(id)a1 error:(id *)a2;
- (void)_handleAddActionSetRequest:(id)a0;
- (void)_handleAddTriggerOwnedActionSetRequest:(id)a0;
- (void)_handleRemoveActionSetRequest:(id)a0 postUpdate:(BOOL)a1;
- (void)_handleRemoveTriggerOwnedActionSetRequest:(id)a0 postUpdate:(BOOL)a1;
- (void)_handleUpdateActionSetRequest:(id)a0;
- (void)_updateActionSetRequest:(id)a0 postUpdate:(BOOL)a1;
- (void)_actionSetsUpdated:(id)a0 message:(id)a1;
- (void)_handleActivateTriggerRequest:(id)a0;
- (void)_activateTriggerRequest:(id)a0;
- (void)_handleUpdateTriggerPolicyRequest:(id)a0;
- (void)_handleRemoveTriggerPolicyRequest:(id)a0;
- (void)_executeActionSetsWithCompletionHandler:(id /* block */)a0;
- (void)_executeActionSets:(id)a0 captureCurrentState:(BOOL)a1 completionHandler:(id /* block */)a2;
- (void)userDidConfirmExecute:(BOOL)a0 completionHandler:(id /* block */)a1;
- (void)_fillBaseObjectChangeModel:(id)a0;
- (void)_handleTriggerUpdate:(id)a0 message:(id)a1;
- (BOOL)shouldEncodeLastFireDate:(id)a0;
- (void)executeCompleteWithError:(id)a0;
- (void)_transactionObjectUpdated:(id)a0 newValues:(id)a1 message:(id)a2;
- (void)_transactionObjectRemoved:(id)a0 message:(id)a1;
- (id)modelObjectWithChangeType:(unsigned long long)a0 version:(id)a1;
- (id)modelObjectWithChangeType:(unsigned long long)a0;
- (id)backingStoreObjects:(long long)a0;
- (id)emptyModelObject;
- (id)updateEventTriggerMessage:(int)a0 message:(id)a1 relay:(BOOL)a2;
- (void)confirmResident;
- (void)_addActionSet:(id)a0;

@end
