@class NSString, TSARenderingExporter, NSMutableArray;

@interface TSAPdfTagger : NSObject <TSDPdfTagger, TSWPPdfTagger, TSTPdfTagger, TSCHPdfTagger, TSAPdfTagger> {
    BOOL _stateIsValid;
    NSMutableArray *_contextStack;
    NSMutableArray *_tagStack;
    NSMutableArray *_paragraphLevelResolverStack;
}

@property (nonatomic) struct CGContext { } *CGContext;
@property (readonly, weak, nonatomic) TSARenderingExporter *exporter;
@property (nonatomic) unsigned long long taggingPreventionDepth;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)isHeadingStyle:(id)a0 headingIndex:(int *)a1;
+ (BOOL)isHeaderTag:(int)a0;
+ (BOOL)shouldMapDrawableRep:(id)a0;
+ (BOOL)totalCellNumberInAllTablesExceedsMaxAllowedInDocument:(id)a0;

- (void)setState:(id)a0;
- (void)executeBlock:(id /* block */)a0;
- (void)setUp;
- (id)state;
- (void)endPage;
- (void).cxx_destruct;
- (void)pushContext:(id)a0;
- (id)canvas;
- (void)beginPage;
- (id)imager;
- (void)endTag;
- (id)documentRoot;
- (id)initWithRenderingExporter:(id)a0;
- (void)beginObject:(id)a0;
- (void)endObject:(id)a0;
- (unsigned long long)tagStackHeight;
- (id)topOfContextStackWithExpectedClass:(Class)a0;
- (id)topOfContextStack;
- (id)topmostColumnContext;
- (id)topmostTocChunkContext;
- (void)beginTagWithType:(int)a0 tagProperties:(id)a1;
- (int)tagTypeAtDepth:(unsigned long long)a0;
- (void)popTagStackUntilReachingHeight:(unsigned long long)a0;
- (void)popContextWithExpectedClass:(Class)a0;
- (id)topmostContextOfClass:(Class)a0;
- (id)topmostColumn;
- (BOOL)textStorageChunkIsFootnote:(id)a0;
- (void)beginTagWithType:(int)a0;
- (void)restoreStateFromTopOfContextStackWithExpectedClass:(Class)a0;
- (BOOL)topOfContextStackIsParagraph;
- (id)topmostParagraphLevelResolver;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })topmostColumnRange;
- (void)assertTopOfContextStackIsParagraph:(BOOL)a0;
- (void)beginMultiParagraphEntityWithLineFragmentRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (BOOL)currentParagraphNeedsSpans;
- (int)topmostTagType;
- (BOOL)currentParagraphHasContents;
- (void)endMultiParagraphEntityWithLineFragmentRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (unsigned long long)indexOfLastVisibleCharInParagraphBeforeCharIndex:(unsigned long long)a0;
- (unsigned long long)indexOfFirstVisibleCharInParagraphAtOrAfterCharIndex:(unsigned long long)a0;
- (void)assertCharIndexRelativeToParagraphRange:(BOOL)a0;
- (void)executeBlockForCurrentParagraph:(id /* block */)a0;
- (void)advanceParagraphEnumeratorToCharIndex:(unsigned long long)a0;
- (BOOL)charIndexIsAtStartOfParagraph:(unsigned long long)a0;
- (void)beginParagraphWithLineFragmentRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (BOOL)charIndexIsAtEndOfParagraph:(unsigned long long)a0;
- (void)endParagraphWithLineFragmentRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)beginParagraphBodyWithLineFragmentRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)endParagraphBodyWithLineFragmentRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)topmostTextStorage;
- (id)topmostParagraphContext;
- (id)retrieveHighestInfoAtCharIndex:(unsigned long long)a0 returnTagType:(int *)a1;
- (void)dispatchObject:(id)a0 tableBlock:(id /* block */)a1 tocBlock:(id /* block */)a2 drawableBlock:(id /* block */)a3;
- (void)beginTableChunk:(id)a0;
- (void)beginTOCChunk:(id)a0;
- (void)beginDrawable:(id)a0;
- (void)handleObject:(id)a0 tableBlock:(id /* block */)a1 tocBlock:(id /* block */)a2 drawableBlock:(id /* block */)a3;
- (void)endTableChunk:(id)a0;
- (void)endTOCChunk:(id)a0;
- (void)endDrawable:(id)a0;
- (void)beginPencilAnnotation:(id)a0;
- (void)endPencilAnnotation:(id)a0;
- (void)beginFreehandDrawing:(id)a0;
- (void)endFreehandDrawing:(id)a0;
- (void)beginTextStorageChunk:(id)a0 limitSelection:(id)a1;
- (void)endTextStorageChunk:(id)a0;
- (void)beginOneColumnText:(id)a0 column:(id)a1 limitSelection:(id)a2;
- (void)endOneColumnText:(id)a0 column:(id)a1;
- (void)beginTextColumn:(id)a0 limitSelection:(id)a1;
- (void)endTextColumn:(id)a0;
- (void)beginLineFragmentWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)endLineFragmentWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (BOOL)needsSeparateRunsForLineFragmentWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)beginListLabel;
- (void)endListLabel;
- (void)beginLineFragmentBodyWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)endLineFragmentBodyWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)beginPrimaryTextRunWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 hasActualContents:(BOOL)a1;
- (void)endPrimaryTextRunWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 hasActualContents:(BOOL)a1;
- (void)beginAncillaryTextRunWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 baseTextRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)endAncillaryTextRunWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 baseTextRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)beginRubyRunWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 baseTextRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)endRubyRunWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 baseTextRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)beginTateChuYokoRunWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 baseTextRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)endTateChuYokoRunWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 baseTextRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)handleDropCapAdornment:(id)a0;
- (void)beginTableNameForChunk:(id)a0;
- (void)endTableNameForChunk:(id)a0;
- (void)beginTableLayoutSpace:(id)a0;
- (void)endTableLayoutSpace:(id)a0;
- (void)beginTableRow:(unsigned int)a0;
- (void)endTableRow:(unsigned int)a0;
- (void)beginTableCell:(id)a0 withCellID:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a1 cellHasContents:(BOOL)a2 cellIsPrimary:(BOOL)a3;
- (void)endTableCell:(id)a0 withCellID:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a1 cellHasContents:(BOOL)a2 cellIsPrimary:(BOOL)a3;
- (void)beginCheckboxCell:(BOOL)a0;
- (void)endCheckboxCell;
- (void)beginRatingCell:(double)a0;
- (void)endRatingCell;
- (void)beginChartTitle;
- (void)endChartTitle;
- (void)beginComment;
- (void)endComment;
- (unsigned long long)depthOfContext:(id)a0;
- (unsigned long long)depthOfTopmostTagOfType:(int)a0;
- (id)regularDrawableRepForObjectRep:(id)a0;

@end
