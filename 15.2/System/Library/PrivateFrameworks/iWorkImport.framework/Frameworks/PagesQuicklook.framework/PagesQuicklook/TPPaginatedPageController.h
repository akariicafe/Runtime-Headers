@class TPFootnoteLayoutController, TSUMutablePointerSet, TPTextFlowLayoutController, TPTextWrapController, NSMutableArray, TSWPLayoutManager, NSString, TPPageControllerCanvasDelegate, TPPageController, TPBackgroundPaginationController, _TtC14PagesQuicklook17TPPageLayoutCache, _TtC14PagesQuicklook17TPPaginationState, TSWPLayoutMetricsCache;
@protocol TPPageControllerDelegate;

@interface TPPaginatedPageController : TPPageController <TPPageLayoutInfoProvider, TSKChangeSourceObserver, TSWPLayoutOwner> {
    _Atomic int _isScrolling;
    _Atomic int _isZooming;
    BOOL _isObservingNotifications;
    _TtC14PagesQuicklook17TPPageLayoutCache *_pageLayoutCache;
    _TtC14PagesQuicklook17TPPaginationState *_paginationState;
    _TtC14PagesQuicklook17TPPaginationState *_cachedPaginationState;
    TPPageControllerCanvasDelegate *_offscreenSearchDelegate;
    TPFootnoteLayoutController *_footnoteLayoutController;
    BOOL _checkedForBackUp;
    NSMutableArray *_pageGeneratorStack;
    unsigned long long _lastKnownPageCount;
    unsigned long long _completePageCount;
    BOOL _shouldUpdatePageCount;
    BOOL _bodyLayoutInvalidated;
    unsigned long long _didLayOutPageIndex;
    unsigned long long _currentPageBeingLaidOut;
    TSUMutablePointerSet *_layoutObservers;
    TSWPLayoutMetricsCache *_bodyLayoutMetricsCache;
    TPTextFlowLayoutController *_flowController;
    TPTextWrapController *_wrapController;
    double _horizontalGapBetweenPages;
    double _verticalGapBetweenPages;
    unsigned long long _pageHeightCount;
    BOOL _layoutInvalidationPending;
    struct _NSRange { unsigned long long location; unsigned long long length; } _cachedBodyTextRange;
    unsigned long long _cachedPageIndex;
}

@property (readonly, nonatomic) TPPageController *pageController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) TPTextWrapController *d_wrapController;
@property (nonatomic) BOOL allowParagraphMetrics;
@property (nonatomic) BOOL isPaginating;
@property (readonly, weak, nonatomic) id<TPPageControllerDelegate> delegate;
@property (readonly, nonatomic) TSWPLayoutManager *bodyLayoutManager;
@property (readonly, nonatomic) TPBackgroundPaginationController *backgroundPaginationController;
@property (readonly, nonatomic) BOOL isPageLayoutRightToLeft;
@property (readonly, nonatomic) double horizontalPageSeparation;
@property (readonly, nonatomic) double verticalPageSeparation;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;
+ (id)paginatedPageControllerForDelegate:(id)a0;

- (void)teardown;
- (double)headerHeight;
- (id)initWithDelegate:(id)a0;
- (unsigned long long)pageCount;
- (void).cxx_destruct;
- (void)dealloc;
- (double)footerHeight;
- (id)textWrapper;
- (void)canvasDidValidateLayouts:(id)a0;
- (BOOL)caresAboutStorageChanges;
- (void)layoutManagerNeedsLayout:(id)a0;
- (void)layoutManager:(id)a0 didClearDirtyRangeWithDelta:(long long)a1 afterCharIndex:(unsigned long long)a2;
- (void)preprocessChanges:(id)a0 forChangeSource:(id)a1;
- (id)pageInfoForPageIndex:(unsigned long long)a0;
- (id)p_pageInfoForPageAtIndex:(unsigned long long)a0;
- (BOOL)isPaginationComplete;
- (unsigned long long)firstPageIndexNeedingLayout;
- (void)i_invalidatePageIndex:(unsigned long long)a0;
- (void)i_unregisterPageLayout:(id)a0;
- (void)i_registerPageLayout:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })footnoteLayoutRangeForPageIndex:(unsigned long long)a0 forcePagination:(BOOL)a1;
- (void)i_inflateFootnotesInFootnoteContainer:(id)a0;
- (void)i_invalidateFlows:(id)a0 startingPage:(id)a1;
- (id)i_flowLayoutController;
- (void)accquireLockAndPerformAction:(id /* block */)a0;
- (BOOL)canProvideInfoForPageIndex:(unsigned long long)a0;
- (id)headerFooterProviderForPageIndex:(unsigned long long)a0;
- (id)sectionTemplateDrawableProviderForPageIndex:(unsigned long long)a0;
- (unsigned long long)contentFlagsForPageIndex:(unsigned long long)a0;
- (unsigned long long)pageNumberForPageIndex:(unsigned long long)a0;
- (unsigned long long)pageCountForPageIndex:(unsigned long long)a0;
- (BOOL)shouldHeaderFooterBeVisibleForPageIndex:(unsigned long long)a0;
- (id)backgroundFillForPageIndex:(unsigned long long)a0;
- (struct CGPoint { double x0; double x1; })pageOriginForPageIndex:(unsigned long long)a0 allowAfterPaginationPoint:(BOOL)a1;
- (id)i_pageHintForPageIndex:(unsigned long long)a0;
- (void)i_rebuildCachedLayoutChildrenFromStartPage:(unsigned long long)a0 toEndPage:(unsigned long long)a1 setNeedsLayout:(BOOL)a2;
- (void)didLayoutChangingDirtyRanges;
- (id)metricsCacheForStorage:(id)a0;
- (id)topicNumbersForStorage:(id)a0;
- (void)paginateThroughPageIndex:(unsigned long long)a0 forLayoutController:(id)a1;
- (void)i_trimPageAtIndex:(unsigned long long)a0 toCharIndex:(unsigned long long)a1 removeFootnoteReferenceCount:(unsigned long long)a2 removeAutoNumberFootnoteCount:(unsigned long long)a3;
- (unsigned long long)pageIndexForCharIndex:(unsigned long long)a0 forcePagination:(BOOL)a1;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })bodyRangeForPageIndex:(unsigned long long)a0 forcePagination:(BOOL)a1;
- (unsigned long long)pageIndexForAnchoredCharIndex:(unsigned long long)a0 forcePagination:(BOOL)a1;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })documentPageRangeOfSectionIndex:(unsigned long long)a0 forcePagination:(BOOL)a1;
- (unsigned long long)sectionIndexForPageIndex:(unsigned long long)a0 forcePagination:(BOOL)a1;
- (void)withPageLayoutAtIndex:(unsigned long long)a0 preferredLayoutController:(id)a1 executeBlock:(id /* block */)a2;
- (BOOL)isPaginationCompleteThroughPageIndex:(unsigned long long)a0;
- (BOOL)isPaginationInProgress;
- (BOOL)okToAnchorDrawable:(id)a0 toPageIndex:(unsigned long long)a1;
- (BOOL)okToAnchorDrawables:(id)a0 toPageIndex:(unsigned long long)a1;
- (unsigned long long)pageIndexFromCanvasPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)numberOfPagesInEachSection;
- (unsigned long long)lastLaidOutDocumentPageIndex;
- (void)paginateThroughPageIndex:(unsigned long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })pageRectForPageIndex:(unsigned long long)a0 allowAfterPaginationPoint:(BOOL)a1;
- (id)p_paginationState;
- (id)i_pageIndexPathForPageIndex:(unsigned long long)a0 forcePagination:(BOOL)a1 allowAfterPaginationPoint:(BOOL)a2;
- (id)p_sectionAtSectionIndex:(unsigned long long)a0;
- (id)p_pageMasterForPageIndex:(unsigned long long)a0 inSection:(id)a1 sectionHint:(id)a2;
- (id)p_sectionHintForPageIndex:(unsigned long long)a0 forcePagination:(BOOL)a1 allowAfterPaginationPoint:(BOOL)a2;
- (BOOL)canProvideNumberingInfoForPageIndex:(unsigned long long)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })p_rangeOfContinuousSectionsAtPageIndex:(unsigned long long)a0 startPage:(unsigned long long *)a1;
- (id)displayPageNumberForPageIndex:(unsigned long long)a0;
- (id)pageNumberFormatForSectionOnPageIndex:(unsigned long long)a0;
- (id)p_pageHintForPageIndex:(unsigned long long)a0 forcePagination:(BOOL)a1 allowAfterPaginationPoint:(BOOL)a2;
- (id)sectionForPageIndex:(unsigned long long)a0;
- (id)displayPageNumberForCharIndex:(unsigned long long)a0;
- (BOOL)isSectionInfo:(id)a0 onPage:(unsigned long long)a1;
- (void)enumerateHeaderFooterFragmentsOnPageIndex:(unsigned long long)a0 usingBlock:(id /* block */)a1;
- (void)invalidateAllPageLayoutsSizeAndPosition;
- (id)i_columnPriorToPageIndex:(unsigned long long)a0;
- (id)i_columnAfterPageIndex:(unsigned long long)a0;
- (id)i_topicNumberHintsAfterPageIndex:(unsigned long long)a0;
- (id)i_firstChildHintAfterPageIndex:(unsigned long long)a0;
- (void)i_inflateColumnsInBodyLayout:(id)a0;
- (void)p_hasBodyChanged:(id)a0;
- (void)p_destroyBodyLayoutState;
- (void)p_paginateThroughPageIndex:(unsigned long long)a0 forLayoutController:(id)a1 clearOffscreenInfos:(BOOL)a2;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })p_pageRangeForSelection:(id)a0 includingEmptyPages:(BOOL)a1 outEndIsValid:(BOOL *)a2 forcePagination:(BOOL)a3;
- (unsigned long long)p_pageIndexForCharIndex:(unsigned long long)a0 includeEmptyPages:(BOOL)a1 caretAffinity:(int)a2 forcePagination:(BOOL)a3 searchAfterPaginationPoint:(BOOL)a4;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })p_bodyRangeForPageIndex:(unsigned long long)a0 forcePagination:(BOOL)a1 allowAfterPaginationPoint:(BOOL)a2;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })p_anchoredRangeForPageIndex:(unsigned long long)a0 forcePagination:(BOOL)a1 allowAfterPaginationPoint:(BOOL)a2;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })anchoredRangeForPageIndex:(unsigned long long)a0 forcePagination:(BOOL)a1;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })p_footnoteLayoutRangeForPageIndex:(unsigned long long)a0 forcePagination:(BOOL)a1 allowAfterPaginationPoint:(BOOL)a2;
- (unsigned long long)p_pageIndexForAnchoredCharIndex:(unsigned long long)a0 forcePagination:(BOOL)a1 searchAfterPaginationPoint:(BOOL)a2;
- (unsigned long long)p_pageIndexForFootnoteIndex:(unsigned long long)a0 forcePagination:(BOOL)a1 searchAfterPaginationPoint:(BOOL)a2;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })sectionPageRangeForPageIndex:(unsigned long long)a0 forcePagination:(BOOL)a1 outEndIsValid:(BOOL *)a2;
- (id)p_cachedPageLayoutForPageIndex:(unsigned long long)a0 preferredLayoutController:(id)a1;
- (void)p_withPageLayoutAtIndex:(unsigned long long)a0 preferredLayoutController:(id)a1 executeBlock:(id /* block */)a2;
- (id)p_pageIndicesForFlow:(id)a0 withSelection:(id)a1 forcePagination:(BOOL)a2;
- (BOOL)p_isPaginationComplete;
- (BOOL)p_canAnchorDrawable:(id)a0 toPageLayout:(id)a1;
- (void)withPageLayoutAtIndex:(unsigned long long)a0 executeBlock:(id /* block */)a1;
- (void)p_processBodyLayoutInvalidation;
- (unsigned long long)p_pageHintIndexForCharIndex:(unsigned long long)a0;
- (unsigned long long)p_pageHintIndexForAnchoredCharIndex:(unsigned long long)a0;
- (unsigned long long)p_lastValidCharIndex;
- (unsigned long long)p_textPageIndexPrecedingPageIndex:(unsigned long long)a0;
- (void)p_setNeedsLayoutOnPageIndex:(unsigned long long)a0;
- (unsigned long long)p_firstPageColumn;
- (id)p_pageHintForPageIndexPath:(id)a0;
- (unsigned long long)calculatePageIndexFromCanvasPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)p_lastValidPageHint;
- (unsigned long long)pageHeightCountForPageViewState:(long long)a0;
- (void)p_performWithCachedPageLayouts:(id /* block */)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })p_pageRangeAffectedByInfo:(id)a0;
- (unsigned long long)p_backupPageIndexForCharIndex:(unsigned long long)a0;
- (void)p_forceRestartPaginationAndResetMetricsCache:(BOOL)a0;
- (void)p_invalidatePageIndex:(unsigned long long)a0;
- (void)p_interruptBackgroundPagination;
- (void)p_removeDeletedFootnotesOnPageLayout:(id)a0;
- (unsigned long long)p_pageIndexContainingIndex:(unsigned long long)a0 ofType:(unsigned long long)a1;
- (unsigned long long)p_lastValidTextPageIndex;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })pageRangeForSelection:(id)a0 includingEmptyPages:(BOOL)a1 outEndIsValid:(BOOL *)a2;
- (id)p_lastValidTextPageHint:(out unsigned long long *)a0;
- (void)p_processWidowsAndInflationForLayoutController:(id)a0;
- (void)p_checkForBackUp;
- (void)p_layOutNextPageForLayoutController:(id)a0 dirtyRange:(id)a1;
- (BOOL)p_didLayOut;
- (void)p_preparePaginationStateForNextPage;
- (void)p_prepareSectionHintForNextPage;
- (void)p_preparePageHintForNextPage;
- (void)p_layOutIntoPageLayout:(id)a0 outDidSync:(out BOOL *)a1;
- (void)p_notifyObserversDidLayoutWhileSyncing:(BOOL)a0;
- (BOOL)p_isBodyLayoutComplete;
- (void)p_syncFromNextPageWithDirtyRanges:(id)a0 pageTextRange:(const struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;
- (void)p_removeFinishedPageGenerators;
- (void)p_advanceSectionIndex;
- (void)p_layOutTextIntoPageLayout:(id)a0 didSync:(out BOOL *)a1 initialFootnoteIndex:(out unsigned long long *)a2;
- (void)p_updateTextHintAtPageIndexPath:(id)a0 withTarget:(id)a1;
- (void)p_updateNonTextHintAtPageIndexPath:(id)a0 pageLayout:(id)a1;
- (void)p_layOutFootnotesIntoPageLayout:(id)a0;
- (unsigned long long)p_lastValidFootnoteIndex;
- (void)p_performPaginationResetAndMetricsReset:(BOOL)a0;
- (id)p_textPageHintPrecedingPageIndexPath:(id)a0;
- (id)p_pageHintPrecedingPageIndexPath:(id)a0;
- (id)i_textPageHintPrecedingPageIndex:(inout unsigned long long *)a0;
- (void)p_resetPageGenerators;
- (void)p_updatePageCount;
- (void)backgroundPaginationDidEnd;
- (BOOL)p_layOutNextPageOnceWithOffscreenLayoutController;
- (void)p_invalidateThumbnailsFromSectionIndexToEnd:(unsigned long long)a0;
- (id)p_textPageHintFollowingPageIndexPath:(id)a0;
- (void)restoreFromLayoutState:(id)a0;
- (void)saveIntoLayoutState:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })validPageRangeForSelection:(id)a0;
- (id)anchoredDrawablesOnPageIndex:(unsigned long long)a0 forcePagination:(BOOL)a1;
- (BOOL)pageBeginsWithPaginatedAttachment:(unsigned long long)a0;
- (BOOL)pageEndsWithPaginatedAttachment:(unsigned long long)a0;
- (BOOL)pageAtIndexHasBody:(unsigned long long)a0;
- (unsigned long long)pageIndexForAnchoredAttachment:(id)a0 forcePagination:(BOOL)a1;
- (unsigned long long)pageIndexForFootnoteIndex:(unsigned long long)a0 forcePagination:(BOOL)a1;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })sectionBodyRangeForPageIndex:(unsigned long long)a0 forcePagination:(BOOL)a1;
- (unsigned long long)sectionPageIndexForPageIndex:(unsigned long long)a0 forcePagination:(BOOL)a1;
- (BOOL)pageIndexIsFirstPageOfSection:(unsigned long long)a0;
- (id)pageIndicesForPartitionableAttachmentAtBodyCharIndex:(unsigned long long)a0 selectionPath:(id)a1 forcePagination:(BOOL)a2;
- (BOOL)isPaginationCompleteForSelection:(id)a0 inFlow:(id)a1;
- (id)footnoteLayoutController;
- (void)addPaginationObserver:(id)a0;
- (void)removePaginationObserver:(id)a0;
- (struct CGSize { double x0; double x1; })canvasSizeToFitAllPagesForPageViewState:(long long)a0;
- (unsigned long long)adjacentPageIndexForPageIndex:(unsigned long long)a0;
- (void)p_rebuildPageLayoutsContainingDrawableUUIDs:(id)a0;
- (void)p_setNeedsLayoutFromSectionIndexToEnd:(unsigned long long)a0;
- (BOOL)p_couldBeFirstPageIndex:(unsigned long long)a0 forPartitionedAttachmentCharIndex:(unsigned long long)a1;
- (id)p_pageInfosForBodySelection:(id)a0;
- (id)p_pageInfosForFlow:(id)a0 withSelection:(id)a1;
- (void)i_forceRestartPaginationForServer;
- (void)performBlockForExport:(id /* block */)a0;
- (void)allowBackgroundPagination;
- (BOOL)backgroundPaginationWillBegin;
- (BOOL)performBackgroundPagination;
- (void)p_invalidateThumbnailsFromSectionToEnd:(id)a0;
- (void)i_inflateTextFlowsOnPage:(id)a0;
- (void)i_setNeedsDynamicLayoutForLayoutController:(id)a0 onPageIndex:(unsigned long long)a1;
- (void)d_timePaginationResettingMetrics:(BOOL)a0;

@end
