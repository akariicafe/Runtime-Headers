@class TNDocumentRoot, TSWPStorage, NSEnumerator, TSDLayoutController, NSObject, NSMutableArray, NSString, NSSet, TSDInfoGeometry, TSPObject, NSMutableSet, NSArray, TSDColorFill, TNSheetStyle;
@protocol TSDInfo, TSDOwningAttachment;

@interface TNSheet : TSPObject <TNPrintableInfoProviding, TSKDocumentObject, TSKModel, TSCEResolverContainer, TSDDrawableContainerInfo, TSDMutableContainerInfo, TSSStyleClient, TSWPHeaderFooterProvider, TSWPStorageParent> {
    NSMutableArray *_childInfos;
    unsigned int _tableNameCounter;
    TSWPStorage *_headerFooters[2][3];
    NSMutableSet *_remappedTableNames;
}

@property (nonatomic) BOOL inDocument;
@property (readonly, nonatomic) TNDocumentRoot *documentRoot;
@property (nonatomic) unsigned long long layoutDirection;
@property (nonatomic) BOOL printBackgrounds;
@property (nonatomic) BOOL usesSingleHeaderFooter;
@property (readonly, nonatomic) NSArray *headerStorages;
@property (readonly, nonatomic) NSArray *footerStorages;
@property (readonly, nonatomic) BOOL isPrintable;
@property (readonly, nonatomic) NSArray *printableInfos;
@property (retain, nonatomic) TNSheetStyle *style;
@property (readonly, nonatomic) TSDColorFill *backgroundColor;
@property (retain, nonatomic) TSDLayoutController *activeRootSearchLayoutController;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } printMargins;
@property (nonatomic) BOOL inPortraitPageOrientation;
@property (nonatomic) BOOL showPageNumbers;
@property (nonatomic) BOOL shouldPrintComments;
@property (nonatomic) BOOL isAutofitOn;
@property (nonatomic) double contentScale;
@property unsigned long long pageOrder;
@property (getter=isUsingStartPageNumber) BOOL usingStartPageNumber;
@property long long startPageNumber;
@property double pageHeaderInset;
@property double pageFooterInset;
@property (copy, nonatomic) NSArray *childInfos;
@property (copy, nonatomic) NSString *name;
@property (readonly, nonatomic) NSEnumerator *headerFooterFragmentEnumerator;
@property (readonly, nonatomic) double bodyWidth;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL isTopmostContainerInfo;
@property (readonly, nonatomic) BOOL isMaster;
@property (copy, nonatomic) TSDInfoGeometry *geometry;
@property (nonatomic) NSObject<TSDInfo> *parentInfo;
@property (nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment;
@property (readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
@property (readonly, nonatomic, getter=isFloatingAboveText) BOOL floatingAboveText;
@property (readonly, nonatomic, getter=isAnchoredToText) BOOL anchoredToText;
@property (readonly, nonatomic, getter=isInlineWithText) BOOL inlineWithText;
@property (readonly, nonatomic, getter=isInlineWithTextWithWrap) BOOL inlineWithTextWithWrap;
@property (readonly, nonatomic, getter=isAttachedToBodyText) BOOL attachedToBodyText;
@property (nonatomic) BOOL matchesObjectPlaceholderGeometry;
@property (readonly, nonatomic) NSArray *containedModels;
@property (readonly, nonatomic) NSSet *referencedStyles;
@property (readonly, nonatomic) BOOL autoListRecognition;
@property (readonly, nonatomic) BOOL autoListTermination;
@property (readonly, nonatomic) BOOL textIsLinked;
@property (readonly, nonatomic) BOOL preventsComments;
@property (readonly, nonatomic) BOOL preventsChangeTracking;
@property (readonly, nonatomic) BOOL supportsMultipleColumns;
@property (readonly, nonatomic) long long contentWritingDirection;
@property (readonly, nonatomic) BOOL storageChangesInvalidateWrap;
@property (readonly, nonatomic) BOOL supportsVerticalTextLayoutInChildStorages;
@property (readonly, nonatomic) BOOL supportsDropCapsInChildStorages;

+ (BOOL)needsObjectUUID;
+ (id)sheetForSelectionModel:(id)a0 outIsPaginated:(BOOL *)a1;

- (BOOL)isSelectable;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initWithContext:(id)a0;
- (void).cxx_destruct;
- (void)acceptVisitor:(id)a0;
- (Class)repClass;
- (BOOL)isForm;
- (id)copyWithContext:(id)a0;
- (id)childEnumerator;
- (Class)layoutClass;
- (BOOL)shouldBeDisplayed;
- (void)clearBackPointerToParentInfoIfNeeded:(id)a0;
- (BOOL)isThemeContent;
- (void)replaceReferencedStylesUsingBlock:(id /* block */)a0;
- (BOOL)textIsVerticalAtCharIndex:(unsigned long long)a0;
- (void)willBeRemovedFromDocumentRoot:(id)a0;
- (void)wasRemovedFromDocumentRoot:(id)a0;
- (void)adoptStylesheet:(id)a0 withMapper:(id)a1;
- (void)addChildInfo:(id)a0;
- (void)insertChildInfo:(id)a0 atIndex:(unsigned long long)a1;
- (void)insertChildInfo:(id)a0 below:(id)a1;
- (void)insertChildInfo:(id)a0 above:(id)a1;
- (void)moveChildren:(id)a0 toIndexes:(id)a1;
- (void)removeChildInfo:(id)a0;
- (void)replaceChildInfo:(id)a0 with:(id)a1;
- (void)willBeAddedToDocumentRoot:(id)a0 dolcContext:(id)a1;
- (void)wasAddedToDocumentRoot:(id)a0 dolcContext:(id)a1;
- (void)setPrimitiveGeometry:(id)a0;
- (void)loadFromArchive:(const void *)a0 unarchiver:(id)a1;
- (void)saveToArchive:(void *)a0 archiver:(id)a1;
- (double)highestScaleFactorForRenderingDrawableInfo:(id)a0;
- (void)insertContainedModel:(id)a0 atIndex:(unsigned long long)a1;
- (void)removeContainedModel:(id)a0;
- (void)moveModel:(id)a0 toIndex:(unsigned long long)a1;
- (BOOL)canMoveDrawables:(id)a0 toIndexes:(id)a1;
- (id)infoForSelectionPath:(id)a0;
- (id)resolverMatchingName:(id)a0;
- (id)resolversMatchingPrefix:(id)a0;
- (void)loadFromUnarchiver:(id)a0;
- (void)saveToArchiver:(id)a0;
- (BOOL)resolverNameIsUsed:(id)a0;
- (unsigned int)nextUntitledResolverIndex;
- (unsigned int)saveNextUntitledResolverIndex;
- (void)rollbackNextUntitledResolverIndex:(unsigned int)a0;
- (void)addRemappedTableName:(id)a0;
- (id)remappedTableNames;
- (void)clearRemappedTableNames;
- (void)p_setupHeadersFooters;
- (id)initWithContext:(id)a0 suppressingHeaderFooterCreation:(BOOL)a1;
- (void)p_createHeadersFooters:(long long)a0 stylesheet:(id)a1 mayAlreadyExist:(BOOL)a2;
- (id)headerFooter:(long long)a0 fragmentAtIndex:(long long)a1;
- (id)p_newHeaderFooterStorageWithStylesheet:(id)a0;
- (id)p_storagesForHeaderType:(long long)a0;
- (id)printableInfosIncludingComments:(BOOL)a0;
- (void)insertDrawableInfos:(id)a0 atIndex:(unsigned long long)a1 context:(id)a2;
- (id)tableInfos;
- (void)p_dolcDispatch:(id)a0 skippingTextBoxes:(BOOL)a1;
- (void)insertDrawableInfo:(id)a0 atIndex:(unsigned long long)a1 context:(id)a2;
- (void)moveDrawables:(id)a0 toIndexes:(id)a1;
- (void)removeDrawableInfo:(id)a0;
- (void)enumerateHeaderFooterStoragesWithBlock:(id /* block */)a0;
- (long long)headerFooterTypeForModel:(id)a0;
- (long long)headerFragmentIndexForModel:(id)a0;
- (BOOL)isHeaderFooterEmpty:(long long)a0;
- (BOOL)isHeaderFooterEmpty:(long long)a0 fragmentAtIndex:(long long)a1;
- (BOOL)layoutIsRightToLeft;
- (BOOL)layoutIsLeftToRight;
- (void)insertDrawableInfo:(id)a0 context:(id)a1;
- (void)insertDrawableInfos:(id)a0 context:(id)a1;
- (void)removeDrawableInfos:(id)a0;
- (id)chartAndTableInfos;
- (id)chartInfos;
- (id)tableInfoForName:(id)a0 caseSensitive:(BOOL)a1;
- (BOOL)hasReferenceToTables:(id)a0;
- (void)i_importHeadersFooters:(id)a0 headerType:(long long)a1 useSingleHeaderFooter:(BOOL)a2;
- (id)i_newHeaderFooterStorage;
- (struct CGColor { } *)printingBackgroundCGColor;

@end
