@class NSString;

@interface TSCEFormulaObject : NSObject <NSCopying, TSCEFormulaReturning> {
    struct TSCEASTNodeArray { char *x0; unsigned long long x1; unsigned long long x2; BOOL x3; } *_astNodeArray;
    unsigned long long _hash;
}

@property (readonly) BOOL isEmpty;
@property (readonly) BOOL containsInvalidRef;
@property (readonly) BOOL containsUidReferences;
@property (readonly) BOOL hasBadRefWithUidInfo;
@property (readonly) BOOL usesFunctionsWithDateArgs;
@property (readonly) BOOL hasUidTracts;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) TSCEFormulaObject *formulaObject;
@property (readonly) BOOL hasHostCell;
@property (readonly, nonatomic) struct TSKUIDStruct { unsigned long long _lower; unsigned long long _upper; } hostTableUID;
@property (readonly, nonatomic) struct TSKUIDStruct { unsigned long long _lower; unsigned long long _upper; } hostColumnUID;
@property (readonly, nonatomic) struct TSKUIDStruct { unsigned long long _lower; unsigned long long _upper; } hostRowUID;
@property (readonly, nonatomic) struct TSCEFormulaTranslationFlags { unsigned char _flags; } translationFlags;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (struct TSCEValue { union { struct { struct { unsigned long long x0[2]; } x0; unsigned char x1[24]; unsigned short x2; BOOL x3; } x0; unsigned long long x1[9]; } x0; unsigned char x1; })formulaResultForFormattedValue:(const struct TSCEValue { union { struct { struct { unsigned long long x0[2]; } x0; unsigned char x1[24]; unsigned short x2; BOOL x3; } x0; unsigned long long x1[9]; } x0; unsigned char x1; } *)a0 context:(void *)a1 suppressCycleCheck:(BOOL)a2 formatAsPercent:(BOOL)a3;
+ (struct TSCEValue { union { struct { struct { unsigned long long x0[2]; } x0; unsigned char x1[24]; unsigned short x2; BOOL x3; } x0; unsigned long long x1[9]; } x0; unsigned char x1; })formulaResultForFormattedValueWithKnownCycleState:(const struct TSCEValue { union { struct { struct { unsigned long long x0[2]; } x0; unsigned char x1[24]; unsigned short x2; BOOL x3; } x0; unsigned long long x1[9]; } x0; unsigned char x1; } *)a0 context:(void *)a1 isInACycle:(BOOL)a2 outErrorIsDueToCycle:(BOOL *)a3 formatAsPercent:(BOOL)a4;
+ (id)parseFormula:(id)a0 calcEngine:(id)a1 unqualifiedReferenceTableUID:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a2 containingCell:(const struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } *)a3 outError:(id *)a4 outNeedsImportRewrite:(BOOL *)a5 isChartFormula:(BOOL)a6 isSageUpgrade:(BOOL)a7;
+ (id)parseFormula:(id)a0 calcEngine:(id)a1 containingCell:(const struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a2 outError:(id *)a3;

- (struct TSCEValue { union { struct { struct { unsigned long long x0[2]; } x0; unsigned char x1[24]; unsigned short x2; BOOL x3; } x0; unsigned long long x1[9]; } x0; unsigned char x1; })evaluateWithContext:(void *)a0;
- (BOOL)isEqual:(id)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)dealloc;
- (id).cxx_construct;
- (unsigned char)encodeToArchive:(void *)a0 archiver:(id)a1;
- (struct TSCEValue { union { struct { struct { unsigned long long x0[2]; } x0; unsigned char x1[24]; unsigned short x2; BOOL x3; } x0; unsigned long long x1[9]; } x0; unsigned char x1; })evaluateWithContextGridResult:(void *)a0;
- (id)initWithNodeArray:(const struct TSCEASTNodeArray { char *x0; unsigned long long x1; unsigned long long x2; BOOL x3; } *)a0;
- (void)getPrecedents:(void *)a0 calcEngine:(id)a1 hostCell:(const struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a2 doImplicitIntersection:(BOOL)a3 returnUidReferences:(BOOL)a4;
- (id)copyByRemappingOwnerUIDs:(const void *)a0 calcEngine:(id)a1 containingCell:(const struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a2 outBadRefFound:(BOOL *)a3;
- (id)copyByRepairingBadReferences:(struct TSCEFormulaRewriteContext { id x0; id x1; struct TSCEFormulaRewriteContextRecord { struct TSCEFormulaContainingCell { struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x0; struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; struct TSUColumnRowOffset { int x0; int x1; } x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; } x2; } *)a0;
- (id)initWithCreator:(struct TSCEFormulaCreator { id /* block */ x0; })a0;
- (BOOL)isEqualToFormula:(id)a0;
- (id)hostedDescriptionAtCell:(const struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a0;
- (id)copyByRewritingReferencesToUidForm:(struct TSCEFormulaRewriteContext { id x0; id x1; struct TSCEFormulaRewriteContextRecord { struct TSCEFormulaContainingCell { struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x0; struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; struct TSUColumnRowOffset { int x0; int x1; } x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; } x2; } *)a0;
- (id)copyByRewritingReferencesToGeometricForm:(struct TSCEFormulaRewriteContext { id x0; id x1; struct TSCEFormulaRewriteContextRecord { struct TSCEFormulaContainingCell { struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x0; struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; struct TSUColumnRowOffset { int x0; int x1; } x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; } x2; } *)a0;
- (id)initWithArchive:(const void *)a0 isPreUFF:(BOOL)a1;
- (id)copyByOffsettingRelativeReferences:(struct TSUColumnRowOffset { int x0; int x1; })a0;
- (struct TSCEASTNodeArray { char *x0; unsigned long long x1; unsigned long long x2; BOOL x3; } *)astNodeArrayCopy;
- (id)initWithNodeArray:(const struct TSCEASTNodeArray { char *x0; unsigned long long x1; unsigned long long x2; BOOL x3; } *)a0 translationFlags:(struct TSCEFormulaTranslationFlags { unsigned char x0; })a1;
- (const struct TSCEASTNodeArray { char *x0; unsigned long long x1; unsigned long long x2; BOOL x3; } *)const_astNodeArray;
- (void)appendExternalTableUIDs:(void *)a0 groupByUIDs:(void *)a1;
- (struct vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>> { id *x0; id *x1; struct __compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>> { id *x0; } x2; })getCategoryReferencesWithCalcEngine:(id)a0;
- (id)descriptionForLevel:(int)a0;
- (id)initWithCreator:(struct TSCEFormulaCreator { id /* block */ x0; })a0 argInfo:(struct TSCEASTNodeArgInfo { int x0; int x1[3]; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x2; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x3; } *)a1 translationFlags:(struct TSCEFormulaTranslationFlags { unsigned char x0; })a2;
- (id)copyByConvertingColonToColonTract:(struct TSCEFormulaRewriteContext { id x0; id x1; struct TSCEFormulaRewriteContextRecord { struct TSCEFormulaContainingCell { struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x0; struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; struct TSUColumnRowOffset { int x0; int x1; } x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; } x2; } *)a0;
- (BOOL)isEquivalentToFormula:(id)a0 context:(unsigned long long)a1 thisContainingCell:(struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a2 thatContainingCell:(struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a3;
- (id)hostedDescriptionAtCell:(const struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a0 calcEngine:(id)a1 hideUids:(BOOL)a2;
- (id)copyBySettingHostTableUID:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a0 hostColumnUID:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a1 hostRowUID:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a2;
- (id)copyByConvertingColonTractToColon:(struct TSCEFormulaRewriteContext { id x0; id x1; struct TSCEFormulaRewriteContextRecord { struct TSCEFormulaContainingCell { struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x0; struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; struct TSUColumnRowOffset { int x0; int x1; } x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; } x2; } *)a0 breakUpIntoRefs:(BOOL)a1;
- (id)initWithCreator:(struct TSCEFormulaCreator { id /* block */ x0; })a0 translationFlags:(struct TSCEFormulaTranslationFlags { unsigned char x0; })a1;
- (struct TSCEValue { union { struct { struct { unsigned long long x0[2]; } x0; unsigned char x1[24]; unsigned short x2; BOOL x3; } x0; unsigned long long x1[9]; } x0; unsigned char x1; })evaluateWithContext:(void *)a0 isInACycle:(BOOL)a1 outErrorIsDueToCycle:(BOOL *)a2;
- (BOOL)isEquivalentToFormula:(id)a0;
- (id)hostedDescriptionAtCell:(const struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a0 calcEngine:(id)a1;
- (id)sageFormulaStringForContainingCell:(const struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a0 outHasSageUnsupportedFunctions:(BOOL *)a1;
- (id)copyByRewritingForTranspose:(id)a0 calcEngine:(id)a1 containingCell:(const struct TSCEFormulaContainingCell { struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x0; struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x1; BOOL x2; BOOL x3; } *)a2 outTransposeWarning:(BOOL *)a3;
- (id)copyByRewritingWithSpec:(id)a0 calcEngine:(id)a1 containingCell:(const struct TSCEFormulaContainingCell { struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x0; struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x1; BOOL x2; BOOL x3; } *)a2;
- (id)copyByClearingHostCell;
- (id)copyBySettingTranslationFlags:(struct TSCEFormulaTranslationFlags { unsigned char x0; })a0;
- (id)copyByRewritingWithContext:(struct TSCEFormulaRewriteContext { id x0; id x1; struct TSCEFormulaRewriteContextRecord { struct TSCEFormulaContainingCell { struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x0; struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; struct TSUColumnRowOffset { int x0; int x1; } x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; } x2; } *)a0 rewriteBlock:(id /* block */)a1;
- (void)iterateWithBlock:(struct TSCEFormulaRewriteContext { id x0; id x1; struct TSCEFormulaRewriteContextRecord { struct TSCEFormulaContainingCell { struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x0; struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; struct TSUColumnRowOffset { int x0; int x1; } x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; } x2; } *)a0 stop:(BOOL *)a1 block:(id /* block */)a2;
- (id)copyByFreezingRefs:(id)a0 containingCell:(const struct TSCEFormulaContainingCell { struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x0; struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x1; BOOL x2; BOOL x3; } *)a1;
- (id)copyByThawingRefs:(id)a0 containingCell:(const struct TSCEFormulaContainingCell { struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x0; struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x1; BOOL x2; BOOL x3; } *)a1;
- (id)copyByConvertingColonTractToColon:(struct TSCEFormulaRewriteContext { id x0; id x1; struct TSCEFormulaRewriteContextRecord { struct TSCEFormulaContainingCell { struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x0; struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; struct TSUColumnRowOffset { int x0; int x1; } x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; } x2; } *)a0;
- (id)copyByClearingUids:(id)a0 containingTableUID:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a1;
- (id)copyByMakingAllCategoryRefsIndirect:(id)a0 containingCell:(const struct TSCEFormulaContainingCell { struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x0; struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x1; BOOL x2; BOOL x3; } *)a1;
- (id)copyByRemappingHostCellAgnosticOwnerUIDs:(const void *)a0 calcEngine:(id)a1 containingCell:(const struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a2 outError:(BOOL *)a3;
- (id)copyByRemappingOwnerUIDs:(const void *)a0 calcEngine:(id)a1 badRefFound:(BOOL *)a2;
- (id)copyByForceSettingOwnerUIDs:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a0 calcEngine:(id)a1;
- (id)copyByRemappingUids:(const void *)a0 rowMap:(const void *)a1 ownerMap:(const void *)a2 clearIfMissing:(BOOL)a3;
- (id)copyByUpdatingLinkedTable:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a0 outfoundLinkedRef:(BOOL *)a1;
- (id)copyByRewritingForSageExport:(void *)a0 targetDocumentSupportsCrossTableReferences:(BOOL)a1 outshouldBakeWholeFormula:(BOOL *)a2 outFeaturesUsed:(char *)a3;
- (id)copyByRewritingForSageImport:(id)a0 containingCell:(const struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a1;
- (id)copyByRewritingForExcelImport:(void *)a0 outFormulaResult:(struct TSCEValue { union { struct { struct { unsigned long long x0[2]; } x0; unsigned char x1[24]; unsigned short x2; BOOL x3; } x0; unsigned long long x1[9]; } x0; unsigned char x1; } *)a1 outDidModifyFormula:(BOOL *)a2 outFormulaReplacedForExcelCompatWarning:(BOOL *)a3 functionNameReplacedForExcelCompat:(id *)a4 formulaFormatFromCell:(unsigned int)a5;
- (id)copyByRemovingNumberToDateCoercion:(void *)a0 outFormulaResult:(struct TSCEValue { union { struct { struct { unsigned long long x0[2]; } x0; unsigned char x1[24]; unsigned short x2; BOOL x3; } x0; unsigned long long x1[9]; } x0; unsigned char x1; } *)a1 outDidModifyFormula:(BOOL *)a2;
- (id)copyByRewritingForExcelExport:(void *)a0;
- (id)copyByRewritingNumberToDurationForSageImport:(const struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a0 durationUnitLargest:(unsigned char)a1;
- (id)copyByOffsettingRelativeReferences:(id)a0 oldContainingCell:(const struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a1 newContainingTable:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a2 offset:(struct TSUColumnRowOffset { int x0; int x1; })a3;
- (id)copyByRewritingGroupUid:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a0 groupByUID:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a1;

@end
