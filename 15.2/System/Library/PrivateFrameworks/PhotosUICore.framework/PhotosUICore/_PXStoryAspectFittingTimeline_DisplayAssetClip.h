@protocol PXDisplayAsset;

@interface _PXStoryAspectFittingTimeline_DisplayAssetClip : NSObject

@property (nonatomic) struct { struct { long long value; int timescale; unsigned int flags; long long epoch; } start; struct { long long value; int timescale; unsigned int flags; long long epoch; } duration; } clipTimeRange;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } clipFrame;
@property (nonatomic) struct { long long identifier; long long resourceKind; struct CGSize { double width; double height; } clipSize; unsigned long long options; struct { struct { long long value; int timescale; unsigned int flags; long long epoch; } minimumDuration; struct { long long value; int timescale; unsigned int flags; long long epoch; } preferredDuration; struct { long long value; int timescale; unsigned int flags; long long epoch; } maximumDuration; struct { struct { long long value; int timescale; unsigned int flags; long long epoch; } time; long long rank; } preferredCue; char expectedTransitionKind; } durationInfo; long long playbackStyle; struct { struct CGSize { double width; double height; } size; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } preferredCropRect; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } acceptableCropRect; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } faceAreaRect; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } bestPlaybackRect; } assetContentInfo; struct UIEdgeInsets { double top; double left; double bottom; double right; } safeAreaInsets; struct { struct { struct { double preRotationInset; double rotationAngle; double postRotationInset; } top; struct { double preRotationInset; double rotationAngle; double postRotationInset; } left; struct { double preRotationInset; double rotationAngle; double postRotationInset; } bottom; struct { double preRotationInset; double rotationAngle; double postRotationInset; } right; } sourceInsets; struct { struct { double preRotationInset; double rotationAngle; double postRotationInset; } top; struct { double preRotationInset; double rotationAngle; double postRotationInset; } left; struct { double preRotationInset; double rotationAngle; double postRotationInset; } bottom; struct { double preRotationInset; double rotationAngle; double postRotationInset; } right; } targetInsets; struct { long long value; int timescale; unsigned int flags; long long epoch; } duration; } clippingAnimationInfo; struct { struct { struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } t; } sourceContentsRect; struct { struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } t; } targetContentsRect; struct { long long value; int timescale; unsigned int flags; long long epoch; } duration; } kenBurnsAnimationInfo; struct { char orderOutTransition; unsigned char options; struct { long long value; int timescale; unsigned int flags; long long epoch; } duration; char fallbackFromTransitionKind; union { char panDirection; char scaleDirection; char rotateDirection; char wipeKind; } ; union { double scaleRelativeFactor; double rotateAngleInDegrees; char wipeFirstAssetDirection; } ; } transitionInfo; struct { long long mode; float volume; double JCutLength; double LCutLength; double fadeIn; double fadeOut; } audioInfo; } clipInfo;
@property (readonly, nonatomic) unsigned long long orientation;
@property (retain, nonatomic) id<PXDisplayAsset> displayAsset;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } transformedFrame;
@property (nonatomic) double weight;

- (void).cxx_destruct;
- (long long)compareByClipFrameOriginX:(id)a0;
- (long long)compareByClipFrameOriginY:(id)a0;

@end
