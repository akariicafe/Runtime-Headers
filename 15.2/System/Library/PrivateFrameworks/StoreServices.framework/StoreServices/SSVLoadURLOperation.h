@class NSNumber, NSURLRequest, SSVURLBagInterpreter, NSMutableData, SSBag, SSVSAPSignaturePolicy, NSString, NSMutableSet, SSURLBag, SSMetricsPageEvent, SSURLRequestProperties, NSObject, NSData, SSVURLDataConsumer, NSRunLoop, NSCachedURLResponse, NSHTTPURLResponse, NSURL, NSURLCache, AKAppleIDSession, SSVFairPlaySAPSession;
@protocol OS_dispatch_queue, SSVLoadURLOperationDelegate;

@interface SSVLoadURLOperation : NSOperation <SSURLSessionManagerDelegate> {
    AKAppleIDSession *_authKitSession;
    NSMutableData *_dataBuffer;
    SSVURLDataConsumer *_dataConsumer;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSData *_inputData;
    BOOL _iTunesStoreRequest;
    long long _machineDataRetryCount;
    long long _machineDataStyle;
    SSMetricsPageEvent *_metricsPageEvent;
    id /* block */ _outputBlock;
    id /* block */ _prepareRequestBlock;
    NSMutableSet *_protocolRedirectURLs;
    BOOL _recordsMetrics;
    NSURL *_redirectURL;
    NSString *_referrerApplicationName;
    NSString *_referrerURLString;
    NSHTTPURLResponse *_response;
    NSRunLoop *_runLoop;
    SSVFairPlaySAPSession *_sapSession;
    SSVSAPSignaturePolicy *_sapSignaturePolicy;
    BOOL _shouldRetry;
    NSString *_storeFrontSuffix;
    BOOL _stopped;
    SSURLBag *_urlBag;
    SSVURLBagInterpreter *_urlBagInterpreter;
    SSURLRequestProperties *_requestProperties;
    NSURLRequest *_urlRequest;
}

@property long long machineDataStyle;
@property (retain) SSVFairPlaySAPSession *SAPSession;
@property (copy) SSVSAPSignaturePolicy *SAPSignaturePolicy;
@property (weak, nonatomic) id<SSVLoadURLOperationDelegate> delegate;
@property (readonly) NSURL *URL;
@property (readonly) NSURLRequest *URLRequest;
@property (readonly) NSCachedURLResponse *cachedURLResponse;
@property (retain) SSVURLDataConsumer *dataConsumer;
@property (getter=isITunesStoreRequest) BOOL ITunesStoreRequest;
@property (readonly) SSMetricsPageEvent *metricsPageEvent;
@property (retain, nonatomic) SSBag *bag;
@property BOOL recordsMetrics;
@property (copy) NSString *referrerApplicationName;
@property (copy) NSString *referrerURLString;
@property (copy) NSString *storeFrontSuffix;
@property (readonly) NSHTTPURLResponse *URLResponse;
@property (copy) id /* block */ expiredOutputBlock;
@property (copy) id /* block */ outputBlock;
@property (copy) id /* block */ prepareRequestBlock;
@property BOOL shouldSuppressCookies;
@property BOOL shouldSuppressUserInfo;
@property (copy) NSURL *mainDocumentURL;
@property unsigned long long attribution;
@property (readonly, nonatomic) NSNumber *metricsLoadURLSessionDuration;
@property (readonly, nonatomic) NSNumber *metricsLoadURLSamplingPercentage;
@property (readonly, nonatomic) NSNumber *metricsLoadURLSamplingPercentageCachedResponses;
@property (readonly, nonatomic) BOOL isURLBagRequest;
@property (readonly, nonatomic) NSData *rawResponseData;
@property (readonly, nonatomic) SSURLRequestProperties *requestProperties;
@property (readonly, nonatomic) BOOL shouldDisableCellular;
@property (readonly, nonatomic) BOOL shouldRequireCellular;
@property (readonly, nonatomic) BOOL shouldSetCookies;
@property (readonly, nonatomic) NSData *sourceAppAuditTokenData;
@property (readonly, nonatomic) NSString *sourceAppBundleID;
@property (readonly, nonatomic) NSURLCache *URLCache;
@property (readonly, nonatomic) NSString *URLCacheID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)currentAcceptLanguage;

- (void)dispatchSync:(id /* block */)a0;
- (void)dispatchAsync:(id /* block */)a0;
- (void)_finishWithData:(id)a0;
- (void)_runOnce;
- (id)_initSSVLoadURLOperation;
- (void)_stopRunLoop;
- (void)_releaseOutputBlocks;
- (id)initWithURL:(id)a0;
- (id)initWithData:(id)a0 fromOperation:(id)a1;
- (void)configureWithURLBagDictionary:(id)a0;
- (void)configureWithURLBag:(id)a0;
- (void)_finishWithOutput:(id)a0 error:(id)a1;
- (void)_loadURLBagInterpreter;
- (void)_createAuthKitSession;
- (id)initWithURLRequest:(id)a0;
- (void)URLSession:(id)a0 dataTask:(id)a1 didReceiveResponse:(id)a2 completionHandler:(id /* block */)a3;
- (void)main;
- (void).cxx_destruct;
- (id)_newURLRequestWithRedirectURL:(id)a0;
- (void)_applyResponseToMetrics:(id)a0;
- (void)URLSession:(id)a0 task:(id)a1 didReceiveChallenge:(id)a2 completionHandler:(id /* block */)a3;
- (id)init;
- (void)_keepAliveTimer:(id)a0;
- (void)URLSession:(id)a0 dataTask:(id)a1 didReceiveData:(id)a2;
- (id)initWithURLRequestProperties:(id)a0;
- (void)URLSession:(id)a0 task:(id)a1 didCompleteWithEvent:(id)a2 error:(id)a3;
- (int)_runRunLoopUntilStopped;
- (void)_stopIfCancelled;
- (BOOL)_shouldRetryAfterMachineDataRequest:(id)a0;
- (void)_configureWithURLBagInterpreter:(id)a0;
- (void)cancel;
- (void)URLSession:(id)a0 task:(id)a1 willPerformHTTPRedirection:(id)a2 newRequest:(id)a3 completionHandler:(id /* block */)a4;
- (void)_addMachineDataHeadersToRequest:(id)a0 withAccountIdentifier:(id)a1;
- (id)_dataForCachedResponse:(const struct _CFCachedURLResponse { } *)a0;
- (void)_addSAPSignatureToRequest:(id)a0;
- (id)_outputForData:(id)a0 error:(id *)a1;

@end
