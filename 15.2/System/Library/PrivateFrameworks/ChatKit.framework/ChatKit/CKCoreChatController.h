@class CKScheduledUpdater, IMChat, CKFullScreenBalloonViewController, CKViewController, CKTranscriptCollectionView, STLockoutViewController, CKConversation, CKMacToolbarController, NSString, UIProgressView;
@protocol CKCoreTranscriptControllerProtocol, CKCoreChatControllerDelegate;

@interface CKCoreChatController : CKScrollViewController <IMChatSendProgressDelegate, IMSystemMonitorListener>

@property (retain, nonatomic) CKConversation *conversation;
@property (readonly, nonatomic) IMChat *chat;
@property (retain, nonatomic) CKViewController<CKCoreTranscriptControllerProtocol> *collectionViewController;
@property (nonatomic) BOOL initialLayoutComplete;
@property (readonly, nonatomic) double balloonMaxWidth;
@property (readonly, nonatomic) double gradientBottomPlaceholderHeight;
@property (nonatomic) BOOL ignoreLastBalloonVisibleInMarkAsReadCheck;
@property (retain, nonatomic) CKScheduledUpdater *refreshServiceForSendingUpdater;
@property (retain, nonatomic) UIProgressView *progressBar;
@property (nonatomic, getter=isSendingMessage) BOOL sendingMessage;
@property (nonatomic) double sendProgress;
@property (nonatomic) unsigned long long sendProgressSendCount;
@property (nonatomic) unsigned long long sendProgressTotalCount;
@property (retain, nonatomic) CKFullScreenBalloonViewController *fullScreenBalloonViewController;
@property (nonatomic) long long acknowledgmentToSend;
@property (nonatomic) BOOL disableAnimationsUnderTest;
@property (copy, nonatomic) id /* block */ overrideScrollBlock;
@property (retain, nonatomic) STLockoutViewController *lockoutViewController;
@property (nonatomic) BOOL isShowingLockoutView;
@property (retain, nonatomic) CKMacToolbarController *macToolbarController;
@property (weak, nonatomic) id<CKCoreChatControllerDelegate> delegate;
@property (readonly, nonatomic) CKTranscriptCollectionView *collectionView;
@property (readonly, nonatomic) BOOL shouldDismissAfterSend;
@property (readonly, nonatomic) BOOL shouldDisplayTextEntry;
@property (nonatomic) BOOL viewIsVisible;
@property (nonatomic) BOOL transitionedFromComposing;
@property (nonatomic) BOOL userInitiatedTranscriptPush;
@property (nonatomic) BOOL showingInStandAloneWindow;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (Class)transcriptControllerClass;
+ (Class)_gradientReferenceViewClass;

- (void)significantTimeChange;
- (void)systemApplicationDidResume;
- (void)registerNotifications;
- (BOOL)__im_ff_hubbleTranscriptEnabled;
- (void)transcriptCollectionViewController:(id)a0 balloonViewDidRequestStartEditingPayload:(id)a1 forPlugin:(id)a2 allowAllCommits:(BOOL)a3 completionHandler:(id /* block */)a4;
- (void)systemApplicationWillEnterForeground;
- (void)configureWithToolbarController:(id)a0;
- (void)viewWillAppear:(BOOL)a0;
- (void)dismissInlineReplyController:(BOOL)a0;
- (void)providerWillBeRemovedFromToolbarController:(id)a0;
- (BOOL)itemProviderDisablesTouches;
- (id)toolbarItemForIdentifier:(id)a0;
- (BOOL)isInline;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })gradientFrameWithInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a0;
- (void)viewDidLayoutSubviews;
- (void)viewWillDisappear:(BOOL)a0;
- (BOOL)__im_ff_commSafetyUIEnabled;
- (void)fullScreenBalloonViewControllerMessageHighlightButtonDidFinishAnimating:(id)a0;
- (BOOL)__im_ff_isInterstellarEnabled;
- (void)setupStateForLaunchURL:(id)a0;
- (id)scrollView;
- (void)loadView;
- (void)_updateTitleAnimated:(BOOL)a0;
- (id)_handleIDsForCurrentConversation;
- (BOOL)shouldListParticipantsInTitle;
- (void)_transferFinishedNotification:(id)a0;
- (void)_transferRestoredNotification:(id)a0;
- (void)_conversationListFinishedMerging:(id)a0;
- (void)viewDidAppearDeferredSetup;
- (void)_refreshServiceForSending;
- (void)_registerSendProgressDelegate;
- (void)_inviteToViewFocusStatusIfNeeded;
- (void)showFullScreenAcknowledgmentPickerIfNeededForBalloonAtIndexPath:(id)a0;
- (void)_deregisterSendProgressDelegate;
- (BOOL)_shouldAllowReplyFromLockScreen;
- (BOOL)_conversationHasReplyEnabled;
- (BOOL)_shouldAllowReply;
- (BOOL)_deviceIsPasscodeLocked;
- (BOOL)conversationAllowedByScreenTime;
- (void)_removeExistingCollectionViewController;
- (void)_handleTapEventForBalloonView:(id)a0 atIndexPath:(id)a1;
- (void)_handleShowInlineReplyShortcut:(id)a0 atIndexPath:(id)a1;
- (void)_performResume;
- (void)_preferredServiceChangedNotification:(id)a0;
- (void)_downgradeStateChangedNotification:(id)a0;
- (void)_availabilityDaemonDisconnectedNotification:(id)a0;
- (void)_refreshActiveChat:(id)a0;
- (void)parentControllerDidBecomeActive;
- (void)_increaseContrastDidChangeNotification:(id)a0;
- (void)_chatRegistryDidReloadNotification:(id)a0;
- (void)preferredSendingServiceChanged;
- (void)contentInsetWillChange:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a0 animated:(BOOL)a1 duration:(double)a2;
- (void).cxx_destruct;
- (void)chat:(id)a0 progressDidChange:(float)a1 sendingMessages:(id)a2 sendCount:(unsigned long long)a3 totalCount:(unsigned long long)a4 finished:(BOOL)a5;
- (void)contentInsetDidChange;
- (void)keyboardWillHideViaGesture;
- (BOOL)wantsReplyButton;
- (void)_updateNavigationButtons;
- (void)_willSendComposition:(id)a0 inConversation:(id)a1;
- (void)_didSendCompositionInConversation:(id)a0;
- (void)refreshServiceForSending;
- (void)_localeDidChangeNotification:(id)a0;
- (id)_threadChatItemForReplyCountChatItem:(id)a0 chatItems:(id)a1;
- (id)gradientReferenceView;
- (void)presentMacToolbarController;
- (void)prepareForSuspend;
- (void)_updateForNewPreferredService;
- (BOOL)isSafeToMarkAsRead;
- (void)_markAsReadIfNecessary;
- (void)copySelectedChatItemsToPasteboard;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_initialFrameForCollectionView;
- (void)registerNotificationsForConversation:(id)a0;
- (void)_displayNameUpdatedNotification:(id)a0;
- (void)setupScrollingForKeyboardInteraction;
- (void)_handleAvailabilityInvitationReceivedNotification:(id)a0;
- (void)sendComposition:(id)a0;
- (void)_handleAddressBookChangedNotification:(id)a0;
- (void)_handleAvailabilityChangedNotification:(id)a0;
- (void)viewDidAppear:(BOOL)a0;
- (void)dealloc;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })fullScreenBalloonViewControllerSafeAreaLayoutFrame:(id)a0;
- (void)_handleAvailabilityStateChangedNotification:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })fullScreenBalloonViewController:(id)a0 balloonFrameForChatItem:(id)a1;
- (BOOL)fullScreenBalloonViewControllerShouldShowReplyButton:(id)a0;
- (BOOL)fullScreenBalloonViewControllerShouldShowHightlightButton:(id)a0 forChatItem:(id)a1;
- (void)fullScreenBalloonViewController:(id)a0 sendMessageHighlight:(BOOL)a1 forChatItem:(id)a2;
- (void)transcriptCollectionViewController:(id)a0 didSelectItemAtIndexPath:(id)a1;
- (void)transcriptCollectionViewControllerChatItemsDidChange:(id)a0;
- (void)transcriptCollectionViewController:(id)a0 didDeselectItemAtIndexPath:(id)a1;
- (id)textInputContextIdentifier;
- (void)transcriptCollectionViewController:(id)a0 balloonView:(id)a1 tappedForChatItem:(id)a2;
- (void)transcriptCollectionViewController:(id)a0 balloonView:(id)a1 longPressedForItemWithIndexPath:(id)a2;
- (void)transcriptCollectionViewController:(id)a0 balloonView:(id)a1 doubleTappedItemAtIndexPath:(id)a2;
- (void)transcriptCollectionViewController:(id)a0 balloonView:(id)a1 selectedItemAtIndexPath:(id)a2;
- (void)transcriptCollectionViewControllerDidInset:(id)a0;
- (void)transcriptCollectionViewController:(id)a0 balloonView:(id)a1 showInlineReplyForItemWithIndexPath:(id)a2;
- (void)transcriptCollectionViewController:(id)a0 balloonViewTitleTappedForItemWithIndexPath:(id)a1;
- (void)transcriptCollectionViewControllerWillInset:(id)a0 targetContentInset:(inout struct UIEdgeInsets { double x0; double x1; double x2; double x3; } *)a1;
- (BOOL)transcriptCollectionViewControllerShouldPlayAudio:(id)a0;
- (BOOL)transcriptCollectionViewController:(id)a0 balloonView:(id)a1 shouldSelectChatItem:(id)a2;
- (void)transcriptCollectionViewControllerPlayingAudioDidChange:(id)a0;
- (void)transcriptCollectionViewControllerRestingStateDidChange:(id)a0;
- (void)transcriptCollectionViewControllerPerformBatchUpdateCompleted:(id)a0;
- (void)transcriptCollectionViewController:(id)a0 collectionViewContentSizeDidChange:(struct CGSize { double x0; double x1; })a1;
- (void)transcriptCollectionViewControllerWillScrollToBottom:(id)a0;
- (void)transcriptCollectionViewControllerBlockContactButtonTapped:(id)a0;
- (void)transcriptCollectionViewControllerReportSpamButtonTapped:(id)a0;
- (void)transcriptCollectionViewControllerWillDisplayLastBalloon:(id)a0;
- (id)traitCollectionForTranscriptCollectionViewController:(id)a0;
- (void)transcriptCollectionViewControllerDidInsertAssociatedChatItem:(id)a0;
- (double)transcriptCollectionViewController:(id)a0 targetAlphaForChatItem:(id)a1;
- (void)parentControllerDidResume:(BOOL)a0 animating:(BOOL)a1;
- (BOOL)transcriptCollectionViewControllerPlaybackForOutgoingEffectsIsAllowed:(id)a0;
- (BOOL)transcriptCollectionViewController:(id)a0 shouldSetupFullscreenEffectUI:(id)a1;
- (BOOL)transcriptCollectionViewControllerShouldLayoutFullscreenEffects:(id)a0;
- (BOOL)transcriptCollectionViewController:(id)a0 shouldCleanupFullscreenEffectUI:(id)a1;
- (void)_setTitle:(id)a0 animated:(BOOL)a1;
- (id)transcriptCollectionViewControllerAdditionalFullscreenEffectViews:(id)a0;
- (void)transcriptCollectionViewController:(id)a0 willBeginImpactEffectAnimationWithSendAnimationContext:(id)a1;
- (id)initWithConversation:(id)a0;
- (void)_setConversationDeferredSetup;
- (void)transcriptCollectionViewController:(id)a0 didEndImpactEffectAnimationWithSendAnimationContext:(id)a1;
- (void)transcriptCollectionViewController:(id)a0 balloonView:(id)a1 didRequestPresentationStyle:(unsigned long long)a2 forChatItem:(id)a3 allowAllStyles:(BOOL)a4;
- (id)selectedChatItems;
- (BOOL)transcriptCollectionViewController:(id)a0 balloonViewDidRequestCommitPayload:(id)a1 forPlugin:(id)a2 allowAllCommits:(BOOL)a3 error:(id *)a4;
- (void)showFullScreenAcknowledgmentPickerForChatItem:(id)a0;
- (void)_dismissFullScreenBubbleViewControllerAnimated:(BOOL)a0 withSendAnimation:(BOOL)a1 completion:(id /* block */)a2;
- (BOOL)transcriptCollectionViewController:(id)a0 balloonViewDidRequestCommitSticker:(id)a1 forPlugin:(id)a2 allowAllCommits:(BOOL)a3 error:(id *)a4;
- (id)_fullScreenBalloonViewControllerWithChatItem:(id)a0;
- (void)transcriptCollectionViewController:(id)a0 didTapReplyCountStatusButtonForChatItem:(id)a1;
- (BOOL)_controllerEligibleForSetConversation;
- (void)fullScreenBalloonViewController:(id)a0 sendMessageAcknowledgment:(long long)a1 forChatItem:(id)a2;
- (void)fullScreenBalloonViewControllerHandleDismissTap:(id)a0;
- (void)showInlineReplyControllerForChatItem:(id)a0 presentKeyboard:(BOOL)a1;
- (void)fullScreenBalloonViewController:(id)a0 didAppearAnimated:(BOOL)a1;
- (void)fullScreenBalloonViewControllerDidDisappear:(id)a0;
- (void)fullScreenBalloonViewController:(id)a0 willAppearAnimated:(BOOL)a1;
- (void)fullScreenBalloonViewController:(id)a0 willDisappearWithSendAnimation:(BOOL)a1;
- (void)_contentSizeCategoryDidChangeNotification:(id)a0;

@end
