@class NSDate, UIView, CLKComplicationTemplate, CLKDevice, CLKFont, UIImageView, NTKFaceColorScheme, NSString, UIColor;
@protocol NTKComplicationDisplayObserver;

@interface NTKUtilityComplicationView : UIView <NTKTemplateComplicationDisplay, NTKComplicationDisplay> {
    BOOL _highlighted;
    UIColor *_computedForegroundColor;
    UIColor *_computedPlatterColor;
    double _computedForegroundAlpha;
    double _computedForegroundImageAlpha;
}

@property (retain, nonatomic) UIImageView *backgroundPlatter;
@property (nonatomic) double minimumWidth;
@property (retain, nonatomic) UIView *highlightView;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } touchEdgeInsets;
@property (retain, nonatomic) NTKFaceColorScheme *colorScheme;
@property (retain, nonatomic) UIColor *overrideColor;
@property (retain, nonatomic) UIColor *platterColor;
@property (readonly, nonatomic) struct CGSize { double width; double height; } maxSize;
@property (readonly, nonatomic) BOOL editing;
@property (readonly, nonatomic) CLKComplicationTemplate *complicationTemplate;
@property (retain, nonatomic) CLKDevice *device;
@property (retain, nonatomic) UIColor *foregroundColor;
@property (retain, nonatomic) UIColor *shadowColor;
@property (retain, nonatomic) UIColor *accentColor;
@property (nonatomic) BOOL usesLegibility;
@property (nonatomic) double foregroundAlpha;
@property (nonatomic) double foregroundImageAlpha;
@property (nonatomic) unsigned long long placement;
@property (nonatomic) BOOL shouldUseBackgroundPlatter;
@property (nonatomic) BOOL alwaysEnforcePlatterInset;
@property (readonly) NSDate *timeTravelDate;
@property (nonatomic) BOOL useRoundedFontDesign;
@property (nonatomic) double fontWeight;
@property (retain, nonatomic) CLKFont *font;
@property (nonatomic) BOOL useBlockyHighlightCorners;
@property (nonatomic) BOOL shouldScaleAndFadeWhenHighlighting;
@property (nonatomic) double editingRotationAngle;
@property (nonatomic) BOOL suppressesInternalColorOverrides;
@property (weak, nonatomic) id<NTKComplicationDisplayObserver> displayObserver;
@property (nonatomic) BOOL canUseCurvedText;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic) BOOL shouldUseTemplateColors;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)handlesComplicationTemplate:(id)a0;
+ (id)largeComplicationViewForType:(unsigned long long)a0 narrow:(BOOL)a1;
+ (id)smallComplicationViewForType:(unsigned long long)a0;
+ (id)_stopwatchImageProvider;
+ (id)_preferredAdditionalFontSettings;
+ (id)_timerImageProvider;
+ (id)_alarmImageProviderActive:(BOOL)a0;

- (void)layoutSubviews;
- (void)setMaxSize:(struct CGSize { double x0; double x1; })a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (BOOL)pointInside:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (void).cxx_destruct;
- (void)setEditing:(BOOL)a0;
- (void)setComplicationTemplate:(id)a0 reason:(long long)a1;
- (void)applyFaceColor:(unsigned long long)a0 units:(unsigned long long)a1;
- (id)_standardFont;
- (void)applyTransitionFraction:(double)a0 fromFaceColor:(unsigned long long)a1 toFaceColor:(unsigned long long)a2 units:(unsigned long long)a3 brightenedUnits:(unsigned long long)a4;
- (void)setTimeTravelDate:(id)a0 animated:(BOOL)a1;
- (void)applyFaceColorPalette:(id)a0 units:(unsigned long long)a1;
- (void)applyTransitionFraction:(double)a0 fromFaceColorPalette:(id)a1 toFaceColorPalette:(id)a2 units:(unsigned long long)a3 brightenedUnits:(unsigned long long)a4;
- (id)_newImageViewSubview;
- (void)_computeForegroundColor;
- (void)_computePlatterColor;
- (void)_updateForegroundColor;
- (void)_updatePlatterColor;
- (void)_updateLabelsForFontChange;
- (id)_computedForegroundColor;
- (void)_updateForTemplateChange;
- (id)_computedPlatterColor;
- (void)_updateImageViewColor:(id)a0;
- (id)_newHighlightView;
- (void)_computeForegroundAlpha;
- (void)_computeForegroundImageAlpha;
- (void)_enumerateColoringViewsWithBlock:(id /* block */)a0;
- (void)_updateForegroundAlpha;
- (void)_applyForegroundAlpha;
- (void)_enumerateColoringStackedImagesViewsWithBlock:(id /* block */)a0;
- (void)_applyColorScheme:(id)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_touchEdgeInsetsForPlacement:(unsigned long long)a0;
- (double)_widthThatFits;
- (BOOL)shouldUsePlatterInset;
- (id)_backgroundPlatterImage;
- (void)_updateContentForMaxSizeChange;
- (void)_updateContentForEditingChange;
- (id)_smallCapsFont;
- (id)_newLabelSubviewWithFont:(id)a0 variant:(BOOL)a1;
- (id)_newStandardLabelSubviewVariant:(BOOL)a0;
- (id)_newHighlightViewVariant:(BOOL)a0;
- (id)_newImageViewSubviewWithAlpha:(double)a0;
- (void)_updateForegroundImageAlpha;
- (BOOL)isPlacementForTopBezelComplication;
- (void)layoutLabelVertically:(id)a0;
- (void)_updateImageViewAlpha:(id)a0;
- (id)_newDigitalTimeLabelSubviewWithOptions:(unsigned long long)a0;
- (id)_newStandardLabelSubview;
- (id)_newStandardCurvedLabelSubview;
- (id)_newCurvedHighlightView;

@end
