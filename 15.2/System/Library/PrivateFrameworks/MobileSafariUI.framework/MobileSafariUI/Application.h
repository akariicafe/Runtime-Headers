@class BrowserWindowController, ForYouRecommendationMediator, WBSPhishingClassifierController, WBSAllowedLegacyTLSHostManager, NSMutableArray, NSString, BookmarksDatabaseHealthReporter, NSMutableSet, WBSFormAutoFillCorrectionsHistoryObserver, ReadingListLeadImageCache, NSArray, HighlightManager, WBSavedStateManager, WBSUnifiedBarAnalyticsRecorder, SBSAssertion, BrowserController, AutomationController, WBSCyclerConnectionManager, CKContextClient, WBSParsecABGroupManager, WBTabGroupManager, WBSForYouRecentParsecResultsManager, WBDatabaseLockAcquisitor, UIWindow, SystemNoteTakingController;
@protocol WBSPhishingClassifier, WBSUnifiedBarAnalyticsProviding, WBSCloudHistoryServiceProtocol, BSInvalidatable, WBStateProvider, NSObject;

@interface Application : UIApplication <PageLoadTestRunnerDelegate, TabSnapshotCacheStressTestRunnerDelegate, MCProfileConnectionObserver, UIApplicationDelegatePrivate, WBDatabaseLockAcquisitorDelegate, SFUIApplicationModifierFlagsProviding, _SFDownloadDelegate, WBSUnifiedBarAnalyticsRecorderDelegate, BKSMousePointerDeviceObserver, WBSSystemNoteTakingControllerDelegate, SFWebExtensionsControllerDelegate, UIApplicationDelegate, _SFNavigationIntentHandling> {
    BOOL _isReadingDefaults;
    BOOL _shouldReadDefaultsOnResume;
    BOOL _isRunningShowBookmarksTest;
    BOOL _startedBookmarksTest;
    BOOL _isRunningCanvasTest;
    BOOL _willEnterSuspendedState;
    NSMutableSet *_pointerDevices;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _pointerDeviceLock;
    id<BSInvalidatable> _pointerDeviceObserverToken;
    BOOL _finishedLaunching;
    id<WBSCloudHistoryServiceProtocol> _cloudHistory;
    BOOL _resigningActive;
    NSString *_openURLOriginBundleIdentifier;
    WBSFormAutoFillCorrectionsHistoryObserver *_formAutoFillCorrectionsHistoryObserver;
    BookmarksDatabaseHealthReporter *_bookmarksDatabaseHealthReporter;
    unsigned long long _bookmarksDatabaseBackgroundTaskIdentifier;
    WBDatabaseLockAcquisitor *_bookmarksDatabaseBackgroundTaskLockAcquisitor;
    SBSAssertion *_wallpaperSuspensionAssertion;
    WBSCyclerConnectionManager *_cyclerConnectionManager;
    ReadingListLeadImageCache *_readingListImageCache;
    NSMutableArray *_activeDownloads;
    ForYouRecommendationMediator *_forYouRecommendationMediator;
    WBSForYouRecentParsecResultsManager *_forYouRecentParsecResultsManager;
    WBSParsecABGroupManager *_abGroupManager;
    HighlightManager *_highlightManager;
    WBSPhishingClassifierController *_phishingClassifier;
    WBSAllowedLegacyTLSHostManager *_cachedLegacyTLSHostManager;
    SystemNoteTakingController *_systemNoteTakingController;
    id<WBStateProvider> _tabCollection;
    WBSavedStateManager *_savedStateManager;
    WBTabGroupManager *_tabGroupManager;
    WBTabGroupManager *_ephemeralTabGroupManager;
    WBSUnifiedBarAnalyticsRecorder *_unifiedBarAnalyticsRecorder;
    id<NSObject> _developerPreferencesDidChangeNotificationToken;
}

@property (class, readonly, nonatomic) CKContextClient *contextClient;
@property (class, copy, nonatomic) id /* block */ browserControllerUIDelegateProvider;

@property (readonly, nonatomic) BOOL isRunningPPT;
@property (readonly, nonatomic) BOOL shouldRestoreStateForPPT;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BrowserWindowController *browserWindowController;
@property (readonly, nonatomic) NSArray *browserControllers;
@property (readonly, nonatomic) BrowserController *primaryBrowserController;
@property (readonly, nonatomic) BOOL isCloudHistoryEnabled;
@property (readonly, nonatomic) AutomationController *automationController;
@property (readonly, nonatomic) ReadingListLeadImageCache *readingListLeadImageCache;
@property (readonly, nonatomic) BOOL usesDefaultBrowsingModeInAllWindows;
@property (readonly, nonatomic) BOOL usesPrivateBrowsingModeInAnyWindow;
@property (readonly, nonatomic) unsigned long long maximumTabCount;
@property (weak, nonatomic) ForYouRecommendationMediator *existingForYouRecommendationMediator;
@property (readonly, nonatomic) WBSForYouRecentParsecResultsManager *forYouRecentParsecResultsManager;
@property (readonly, nonatomic) WBSParsecABGroupManager *abGroupManager;
@property (readonly, nonatomic) HighlightManager *highlightManager;
@property (readonly, nonatomic) id<WBSPhishingClassifier> phishingClassifier;
@property (readonly, nonatomic) WBSAllowedLegacyTLSHostManager *legacyTLSHostManager;
@property (readonly, nonatomic) SystemNoteTakingController *systemNoteTakingController;
@property (readonly, nonatomic) WBSavedStateManager *savedStateManager;
@property (readonly, nonatomic) WBTabGroupManager *tabGroupManager;
@property (readonly, nonatomic) WBTabGroupManager *ephemeralTabGroupManager;
@property (readonly, nonatomic) BOOL hasPointerDevice;
@property (readonly, nonatomic) BOOL usesLoweredSearchBar;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) long long currentKeyboardModifierFlags;
@property (readonly, nonatomic) id<WBSUnifiedBarAnalyticsProviding> unifiedBarAnalyticsProvider;
@property (retain, nonatomic) UIWindow *window;

+ (void)initialize;
+ (id)sharedApplication;
+ (unsigned long long)systemMemorySize;
+ (void)commandLineTestOption:(int)a0 arg:(const char *)a1;
+ (id)sharedTestRunner;
+ (void)postTestNotificationName:(id)a0 object:(id)a1 userInfo:(id)a2;
+ (void)postTestNotificationName:(id)a0 object:(id)a1;

- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)a0 userInfo:(id)a1;
- (void)profileConnectionDidReceiveRestrictionChangedNotification:(id)a0 userInfo:(id)a1;
- (void)buildMenuWithBuilder:(id)a0;
- (void)downloadDidStart:(id)a0;
- (void)downloadShouldContinueAfterReceivingResponse:(id)a0 decisionHandler:(id /* block */)a1;
- (void)_applicationDidBecomeActive:(id)a0;
- (void)didReceiveMemoryWarning;
- (BOOL)runTest:(id)a0 options:(id)a1;
- (void)dispatchNavigationIntent:(id)a0;
- (void)downloadDidFinish:(id)a0;
- (void)handleNavigationIntent:(id)a0 completion:(id /* block */)a1;
- (void)_readDefaults;
- (void)_applicationWillResignActive:(id)a0;
- (void)applicationWillSuspend;
- (void)applicationWillTerminate;
- (BOOL)application:(id)a0 didFinishLaunchingWithOptions:(id)a1;
- (void)downloadDidFail:(id)a0;
- (void)userDefaultsDidChange:(id)a0;
- (id)_extendLaunchTest;
- (void)_historyWasCleared:(id)a0;
- (void)updateTabCount;
- (void).cxx_destruct;
- (BOOL)canAddNewTabForPrivateBrowsing:(BOOL)a0;
- (void)saveChangesToCloudHistoryStore;
- (void)_applicationDidEnterBackground:(id)a0;
- (void)_applicationWillEnterForeground:(id)a0;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)handleKeyUIEvent:(id)a0;
- (void)mousePointerDevicesDidDisconnect:(id)a0;
- (void)mousePointerDevicesDidConnect:(id)a0;
- (void)_handleHIDEvent:(struct __IOHIDEvent { } *)a0;
- (void)downloadDidReceiveResponse:(id)a0;
- (void)application:(id)a0 didDiscardSceneSessions:(id)a1;
- (id)tabCollection;
- (void)databaseLockAcquisitor:(id)a0 acquiredLock:(BOOL)a1;
- (id)sfWebExtensionsController:(id)a0 navigationIntentUUIDForWindow:(id)a1;
- (id)sfWebExtensionsController:(id)a0 windowForWebView:(id)a1 extension:(id)a2;
- (id)sfWebExtensionsControllerLastFocusedWindow:(id)a0;
- (void)notifyAddedLinkPreviewMetadata:(id)a0 toUserActivity:(id)a1 webView:(id)a2;
- (void)noteTakingController:(id)a0 addHighlightForUserActivity:(id)a1 completion:(id /* block */)a2;
- (BOOL)isNoteTakingControllerSupportedInPrivateBrowsing:(id)a0;
- (void)extensionBaseURIMapChangedForExtensionsController:(id)a0;
- (void)extensionsController:(id)a0 closeOpenExtensionTabsWithBaseURI:(id)a1;
- (void)sfWebExtensionsControllerDidChangeExtensionForPermissionBanner:(id)a0;
- (id)sfWebExtensionsController:(id)a0 reusableTabWithID:(double)a1;
- (id)sfWebExtensionsController:(id)a0 tabForWebView:(id)a1;
- (void)sfWebExtensionsController:(id)a0 createNewTabInWindow:(id)a1 tabIndex:(id)a2 url:(id)a3 makeActive:(BOOL)a4 completionHandler:(id /* block */)a5;
- (id)sfWebExtensionsController:(id)a0 duplicateTab:(id)a1;
- (void)sfWebExtensionsController:(id)a0 relateParentTab:(id)a1 toTab:(id)a2;
- (id)sfWebExtensionsController:(id)a0 tabWithID:(double)a1;
- (void)sfWebExtensionsController:(id)a0 captureVisibleTab:(id)a1 format:(id)a2 quality:(double)a3 completionHandler:(id /* block */)a4;
- (BOOL)sfWebExtensionsController:(id)a0 canSendMessageFromWebView:(id)a1;
- (id)sfWebExtensionsController:(id)a0 windowWithID:(double)a1;
- (id)sfWebExtensionsControllerAllWindows:(id)a0;
- (void)sfWebExtensionsControllerCompileContentBlocker:(id)a0 identifier:(id)a1 rules:(id)a2 completionHandler:(id /* block */)a3;
- (void)sfWebExtensionsControllerContentBlockerListDidChange:(id)a0;
- (void)_saveBrowserState;
- (void)_suspendOrResumeWallpaperAnimationIfNeeded;
- (void)_performBookmarksDatabaseTasksInBackground;
- (void)_reportBookmarksDatabaseHealth;
- (void)_reloadSearchEngines;
- (void)_managedProfileConfigurationDidUpdate;
- (unsigned long long)_maximumTabCount;
- (unsigned long long)_numberOfTabsForPrivateBrowsing:(BOOL)a0;
- (void)auditTabCount;
- (void)_pruneExpiredScenes;
- (void)_prewarmAutomationControllerIfEnabled;
- (void)_export30DaysWorthOfHistoryAfterUpgrade;
- (void)_updateKeyboardCorrectionLearningAllowed;
- (void)_historyHostnamesWereRemoved:(id)a0;
- (void)_appleKeyboardsChanged:(id)a0;
- (void)_updateCloudFeatureAvailability;
- (void)_showSearchEngineAlertIfNeeded;
- (void)_addDefaultsObserver;
- (void)_reportLaunchAnalyticsSoon;
- (void)_downloadDidStartNotification:(id)a0;
- (void)_downloadDidStopNotification:(id)a0;
- (void)_resetCloudHistoryAccountIfNeeded;
- (void)_getBookmarksDataClassEnabledWithCompletionHandler:(id /* block */)a0;
- (id)_browserControllerForExternalNavigation;
- (id)createRecommendationMediatorOrReuseExistingOneIfPossible;
- (id)_browserControllerForApplicationTesting;
- (BOOL)prepareBookmarksTest;
- (BOOL)startCanvasTest:(id)a0;
- (void)prepareTabViewBringUpTest;
- (void)prepareTabViewRotationTest;
- (void)prepareTabViewOpenTest;
- (void)prepareTabViewSelectTest;
- (void)prepareTabViewCloseTest;
- (void)startKeyboardSplitAndMergeTest;
- (void)startKeyboardBringupTest;
- (void)startKeyboardRotationTest;
- (void)runLargeFormFocusTest;
- (void)runLargeFormTypingTest;
- (void)runGeneratePasswordTest;
- (void)runTabOverviewTest;
- (void)runTabSnapshotCacheStressTest;
- (void)runBookmarksViewTest;
- (void)startSearchPerformanceUnifiedFieldKeyTimeTest;
- (void)startSearchPerformanceTest;
- (BOOL)startSidebarTest;
- (BOOL)startTabBarTest;
- (BOOL)startHistoryTest;
- (BOOL)runMemoryOrIOTestWithType:(unsigned long long)a0;
- (void)prepareTabViewScrollTest;
- (void)loadBlankPageforKeyboardTests;
- (void)_loadAlternateHTMLString:(id)a0 completionHandler:(id /* block */)a1;
- (void)_observeNotificationOnce:(id)a0 handler:(id /* block */)a1;
- (void)_loadLargeForm:(id /* block */)a0;
- (void)_typeTextInForm:(id)a0 completionHandler:(id /* block */)a1;
- (void)_runFormTypingTextWithSetupScript:(id)a0;
- (void)_loadTabsForTesting:(unsigned long long)a0 presentTabView:(BOOL)a1 completion:(id /* block */)a2;
- (void)_preparePageLoadTestControllerParameters;
- (void)_prepareTabViewBringUpTest;
- (void)loadTabsForTesting:(unsigned long long)a0 presentTabView:(BOOL)a1;
- (void)startTabViewBringUpTest;
- (void)_prepareTabViewOpenTest;
- (void)startTabViewOpenTest;
- (void)_prepareTabViewSelectTest;
- (void)startTabViewSelectTest;
- (void)_prepareTabViewCloseTest;
- (void)startTabViewCloseTest;
- (void)_prepareTabViewRotationTest;
- (void)startTabViewRotationTest;
- (void)_prepareTabViewScrollTest;
- (void)startTabViewScrollTest;
- (void)loadTabsForTesting:(unsigned long long)a0 presentTabView:(BOOL)a1 completion:(id /* block */)a2;
- (void)_runSidebarTest;
- (void)_populateInMemoryBookmarksDBForTestNamed:(id)a0;
- (void)startedPurpleTest;
- (void)_pollCanvasTest:(id)a0;
- (void)finishedCanvasTestWithURL:(id)a0 forTabDocument:(id)a1;
- (void)finishedPurpleTest:(id)a0;
- (BOOL)overrideBrowserStateForTestNamed:(id)a0 browserController:(id)a1;
- (id)_syntheticHTMLString;
- (void)_runTabBarSwitchTabTest;
- (void)_runTabOverviewScrollPerfTest;
- (void)_runTabOverviewPresentingAndDismissalTest;
- (void)_runTabOverviewOpenNewTabTest;
- (void)startBookmarksTest;
- (void)_switchToBookmarksCollectionForTestNamed:(id)a0;
- (id)_scrollViewForTestNamed:(id)a0;
- (void)startSearchPerformanceTestWithTestStrings:(id)a0;
- (id)_generateMemoryFootprintResults:(id)a0;
- (void)_doSearchTestOnCVC:(id)a0 WithTestStrings:(id)a1 andDispatchGroup:(id)a2;
- (BOOL)_resetHistoryWithCompressedDatabaseAtURL:(id)a0 error:(id *)a1;
- (BOOL)startHistoryLoadTest;
- (void)startCommandLineTest;
- (void)checkExtendedLaunchPageLoad:(id)a0 forTabDocument:(id)a1;
- (id)_numberOption:(id)a0;
- (void)failedPurpleTestWithError:(id)a0;
- (void)finishedBookmarksTest;
- (BOOL)isRunningShowBookmarksTest;
- (BOOL)isRunningCanvasTest;
- (BOOL)didStartBookmarksTest;
- (void)pageLoadTestRunnerFinished:(id)a0;
- (void)tabSnapshotCacheStressTestRunnerDidFinish:(id)a0;

@end
