@class CloudTabStore, _SFBrowserSavedState, TiltedTabView, UIBarButtonItem, CKContextCompleter, TabSnapshotCache, NSMutableArray, NSString, TabOverview, NSTimer, NSArray, TabBarManager, WBWindowState, TabBar, NSSet, UIView, TabDocument, BrowserController, WBTabGroupManager, WBTabGroup, NSUUID, WBSTabOrderManager, UIMenu, NSMapTable, NSHashTable;
@protocol WBSOrderedTab, TabCollectionView, TabThumbnailCollectionView;

@interface TabController : NSObject <TabBarDelegate, TabOverviewDelegate, TabSnapshotCacheDelegate, TiltedTabViewDelegate, TabBarManagerObserving, UITextFieldDelegate, SFTabHoverPreviewControllerDelegate, WBTabGroupManagerObserver, TabDocumentDragDropDataSource, WBSTabOrderProvider> {
    BrowserController *_browserController;
    NSTimer *_saveStateTimer;
    NSTimer *_stateValidateTimer;
    TabDocument *_tabDocumentBeingHiddenFromTabView;
    BOOL _didReadWindowState;
    WBTabGroupManager *_tabGroupManager;
    UIBarButtonItem *_tiltedTabViewAddTabButton;
    UIBarButtonItem *_tiltedTabViewPrivateBrowsingButton;
    NSTimer *_updateContinuityTimer;
    BOOL _tabBarItemsFixed;
    BOOL _tabViewItemsFixed;
    TabSnapshotCache *_snapshotCache;
    BOOL _flushPendingSnapshots;
    id /* block */ _flushPendingSnapshotsCompletion;
    BOOL _didRestoreCloudTabsForEducationDevice;
    BOOL _didReceiveFirstCloudTabDeviceUpdateNotification;
    TabDocument *_tabDocumentBeingDragged;
    NSArray *_tabDocumentsToKeepVisible;
    NSMapTable *_uuidToTabDocumentMap;
    NSHashTable *_documentObservers;
    NSHashTable *_documentObserversToReceiveUpdatesDidEnd;
    long long _documentUpdateCount;
    NSUUID *_blankDocumentGroupIdentifier;
    NSUUID *_privateBlankDocumentGroupIdentifier;
    BOOL _switchingActiveDocument;
    BOOL _isClosingDocuments;
    NSString *_lastSearchTerm;
    NSArray *_searchTermWords;
    unsigned long long _veryRecentlyClosedTabCount;
    unsigned long long _tabsClosedWhileTabViewPresentedCount;
    NSTimer *_veryRecentlyClosedTabCountInvalidationTimer;
    TabDocument *_tabShowingPreview;
    long long _updateTabsSuppressionCount;
    BOOL _suppressSidebarReloadAnimation;
    NSArray *_tabDocumentsThatShouldSuppressOnCreatedEvents;
    NSArray *_tabGroupSuggestions;
    CKContextCompleter *_contextCompleter;
    BOOL _showsTabGroupNameSuggestions;
    id /* block */ _postponedSnapshotInvalidationBlock;
    BOOL _shouldDeferSnapshotRequest;
}

@property (nonatomic, getter=isPrivateBrowsingEnabled) BOOL privateBrowsingEnabled;
@property (readonly, nonatomic) NSArray *tiltedTabViewToolbarItems;
@property (retain, nonatomic) TabDocument *activeTabDocument;
@property (readonly, retain, nonatomic) TabOverview *tabOverview;
@property (readonly, copy, nonatomic) NSMutableArray *tabDocuments;
@property (readonly, copy, nonatomic) NSMutableArray *privateTabDocuments;
@property (readonly, copy, nonatomic) NSArray *allTabDocuments;
@property (readonly, copy, nonatomic) NSSet *allSnapshotIdentifiers;
@property (readonly, nonatomic) unsigned long long numberOfCurrentNonHiddenTabs;
@property (retain, nonatomic) TabDocument *privateActiveTabDocument;
@property (retain, nonatomic) TabDocument *normalActiveTabDocument;
@property (readonly, nonatomic) TabDocument *tabDocumentBeingActivated;
@property (nonatomic) BOOL tabViewDefersActivation;
@property (readonly, nonatomic) BOOL canCloseTab;
@property (readonly, nonatomic) BOOL canCloseOtherTabs;
@property (retain, nonatomic) _SFBrowserSavedState *savedState;
@property (retain, nonatomic) WBWindowState *windowState;
@property (readonly, nonatomic) BOOL updatingTabGroupTabs;
@property (nonatomic) long long privateBrowsingMode;
@property (readonly, nonatomic, getter=isControlledByAutomation) BOOL controlledByAutomation;
@property (readonly, nonatomic) WBSTabOrderManager *tabOrderManager;
@property (readonly, nonatomic) BOOL canAddNewTabForCurrentBrowsingMode;
@property (readonly, nonatomic) TabDocument *tabDocumentForSpotlightSearch;
@property (readonly, nonatomic) CloudTabStore *cloudTabStore;
@property (weak, nonatomic) TabBar *tabBar;
@property (weak, nonatomic) TabBarManager *tabBarManager;
@property (readonly, nonatomic) BOOL hasTabBar;
@property (readonly, retain, nonatomic) TiltedTabView *tiltedTabView;
@property (readonly, nonatomic) BOOL usesTiltedTabView;
@property (readonly, nonatomic) BOOL usesTabOverview;
@property (readonly, nonatomic, getter=isShowingTabView) BOOL showingTabView;
@property (readonly, nonatomic) UIView<TabThumbnailCollectionView> *tabThumbnailCollectionView;
@property (nonatomic) long long tabThumbnailCollectionViewStyle;
@property (nonatomic) BOOL snapshotInvalidationIsPostponed;
@property (copy, nonatomic) id /* block */ postponedSnapshotInvalidationCondition;
@property (nonatomic) BOOL snapshotsAreEnabled;
@property (nonatomic) long long tabDisplayMode;
@property (nonatomic) BOOL shouldTogglePrivateBrowsingOnSplit;
@property (readonly, nonatomic) BOOL hasTabsThatShouldBeObscuredForDigitalHealth;
@property (readonly, nonatomic) NSArray *tabDocumentsMatchingSearchTerm;
@property (readonly, nonatomic) long long visibleTabCollectionViewType;
@property (readonly, nonatomic) BOOL canCreateTabGroupFromCurrentTabs;
@property (readonly, nonatomic) BOOL canRenameActiveTabGroup;
@property (readonly, nonatomic) id /* block */ tabExposeMenuProvider;
@property (readonly, nonatomic) UIMenu *newTabGroupMenu;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) UIView<TabCollectionView> *tabCollectionView;
@property (readonly, copy, nonatomic) NSArray *currentTabDocuments;
@property (retain, nonatomic) WBTabGroup *activeTabGroup;
@property (nonatomic) BOOL tabGroupOverviewIsPresented;
@property (readonly, nonatomic) BOOL createTabGroupAlertIsPresented;
@property (readonly, nonatomic) NSString *moveLocalTabsToNewGroupTitle;
@property (readonly, nonatomic) NSString *activeLibraryType;
@property (readonly, nonatomic) NSArray *tabGroups;
@property (readonly, nonatomic) NSArray *localTabGroups;
@property (readonly, nonatomic) NSArray *syncedTabGroups;
@property (readonly, nonatomic) NSSet *nonActiveTabGroups;
@property (readonly, nonatomic) unsigned long long indexOfSelectedTab;
@property (readonly, nonatomic) id<WBSOrderedTab> selectedTabForTabOrderProvider;
@property (readonly, nonatomic) unsigned long long numberOfTabs;

- (void)clearBrowserController;
- (void)closeAllOpenTabsAnimated:(BOOL)a0;
- (BOOL)tabSnapshotCacheShouldDeferNextSnapshotRequest:(id)a0;
- (void)tabCollectionViewWillDismiss:(id)a0;
- (void)removeDocumentObserver:(id)a0;
- (void)closeTab;
- (void)tabCollectionViewWillPresent:(id)a0;
- (void)tabCollectionViewDidDismiss:(id)a0;
- (id)initWithBrowserController:(id)a0;
- (void)updateSnapshotCacheAndSnapshotActiveTab;
- (id)tabCollectionView:(id)a0 borrowContentViewForItem:(id)a1 withTopBackdropView:(id *)a2 ofHeight:(double)a3;
- (id)blankTabDocumentToReuse;
- (id)openInTabGroupMenuWithNewTabGroupName:(id)a0 URL:(id)a1 descendantCount:(long long)a2 handler:(id /* block */)a3;
- (void)renameTabGroup:(id)a0;
- (void)createNewTabGroup;
- (void)_didReceiveMemoryWarning:(id)a0;
- (void)saveTabDocumentUserActivitySoon:(id)a0;
- (void)tabBarManager:(id)a0 didCreateTabBar:(id)a1;
- (void)willTransitionTabView;
- (id)tabCollectionView:(id)a0 snapshotForItem:(id)a1;
- (void)switchOutOfSyncedTabGroup;
- (id)tabGroupsMenuElementsWithOptions:(unsigned long long)a0 newTabGroupName:(id)a1 hostTitle:(id)a2 descendantCount:(long long)a3 isMoveAction:(BOOL)a4 actionHandler:(id /* block */)a5;
- (void)insertTabDocumentFromTabStateData:(id)a0;
- (id)existingPersistedTitleForTabDocument:(id)a0;
- (void)removeSnapshotCacheObserver:(id)a0;
- (void)updateSelectedTabGroupName;
- (id)blankTabDocumentToReuseAllowingReorder:(BOOL)a0;
- (void)tabHoverPreviewControllerNeedsSnapshotUpdate:(id)a0;
- (void)insertNewTabDocumentWithDefaultOrdering:(id)a0 inBackground:(BOOL)a1 animated:(BOOL)a2;
- (void)tabCollectionView:(id)a0 didSelectItem:(id)a1;
- (unsigned long long)capacityForTabSnapshotCache:(id)a0;
- (void)restoreEducationDeviceTabs;
- (double)tabCollectionViewItemHeaderHeight:(id)a0;
- (void)updateTabViewsAnimatingTabBar:(BOOL)a0;
- (void)tabCollectionViewDidPresent:(id)a0;
- (void)presentAlertToCreateTabGroupFromExistingTabs:(BOOL)a0 withTitle:(id)a1 withMessage:(id)a2 withSuggestedName:(id)a3 okActionTitle:(id)a4 completionHandler:(id /* block */)a5;
- (void)insertNewTabDocument:(id)a0 forcingOrderAfterTabDocument:(id)a1 inBackground:(BOOL)a2 animated:(BOOL)a3;
- (void)updateSnapshotsForTabHoverPreviewIfNeeded;
- (void)tabGroupManager:(id)a0 didUpdateTab:(id)a1 userDriven:(BOOL)a2;
- (void)tabGroupNamingTextDidChange:(id)a0;
- (void)setActiveTabDocument:(id)a0 animated:(BOOL)a1 deferActivation:(BOOL)a2;
- (id)addNewTabGroupWithTitle:(id)a0 fromExistingTabs:(BOOL)a1;
- (void)tabSnapshotCache:(id)a0 didEvictSnapshotWithIdentifier:(id)a1;
- (void)_cloudTabsDidUpdate:(id)a0;
- (id)currentItemForTiltedTabView:(id)a0;
- (void)_validateSavedState:(id)a0;
- (void)updateTabGroupTabWithTabDocument:(id)a0;
- (void)deactivateAllUsageTrackingInformationIfNecessary;
- (id)expectedSuperviewForTiltedTabView:(id)a0;
- (void)closeTabDocuments:(id)a0 animated:(BOOL)a1 allowAddingToRecentlyClosedTabs:(BOOL)a2 showAutoCloseTabsAlert:(BOOL)a3;
- (void)addDocumentObserver:(id)a0;
- (void)makeActiveTabDocumentActive;
- (BOOL)tabCollectionView:(id)a0 validSnapshotExistsForItem:(id)a1;
- (BOOL)tabCollectionView:(id)a0 canCloseItem:(id)a1;
- (void)closeTabsAutomaticallyIfNecessary;
- (void)addSnapshotCacheObserver:(id)a0;
- (id)tabGroupWithUUID:(id)a0;
- (id)tabDocumentForURL:(id)a0;
- (void)updateEducationTabsLastSyncDate;
- (BOOL)switchToTabWithUUID:(id)a0 inTabGroupWithUUID:(id)a1;
- (void)updateLocalTabGroupTitle;
- (id)currentItemForTabOverview:(id)a0;
- (void)tabCollectionViewDidUpdateItemVisibilityOrder:(id)a0;
- (void)_saveStateFromTimer:(id)a0;
- (void)tabGroupManager:(id)a0 didRemoveTabGroup:(id)a1;
- (void)updateActiveTab;
- (void)insertTabDocument:(id)a0 afterTabDocument:(id)a1 inBackground:(BOOL)a2 animated:(BOOL)a3;
- (void)tabOverview:(id)a0 willInteractivelyCloseItem:(id)a1;
- (void)updateTiltedTabViewToolbarItems:(BOOL)a0;
- (id)browserControllerContainingLocalTabGroupUUID:(id)a0;
- (void)tabGroupManager:(id)a0 didUpdateTabsInTabGroup:(id)a1;
- (void)openInitialBlankTabDocumentIfNeeded;
- (BOOL)needsCloudTabPeriodicUpdates;
- (void)tabSnapshotCache:(id)a0 didCacheSnapshotWithIdentifier:(id)a1;
- (void)performBatchUpdatesWithBlock:(id /* block */)a0;
- (void)closeTabDocuments:(id)a0;
- (void)tabGroupManagerDidUpdateTabGroups:(id)a0;
- (void)tabHoverPreviewController:(id)a0 showPreviewForItem:(id)a1;
- (id)tabAtIndex:(unsigned long long)a0;
- (void)updateTabBarAnimated:(BOOL)a0;
- (BOOL)tabBar:(id)a0 canMoveItem:(id)a1;
- (void)willLoseOwnershipOfTabDocument:(id)a0;
- (void)tabDocumentDidUpdateUUID:(id)a0 previousUUID:(id)a1;
- (id /* block */)tabGroupsMenuProviderForTabGroupButton:(BOOL)a0;
- (void)didBeginTrackingSession:(id)a0;
- (void)tabOverviewWillUpdateInteractivePresentation:(id)a0;
- (void)setPrivateBrowsingMode:(long long)a0 animated:(BOOL)a1;
- (void)tabOverviewDidChangeAllowsInteractivePresentation:(id)a0;
- (void)didEndTrackingSession:(id)a0;
- (id)itemsToKeepVisibleForTabOverview:(id)a0;
- (id)itemsToKeepVisibleForTiltedTabView:(id)a0;
- (id)duplicateTabDocument:(id)a0;
- (void)updateTabCount;
- (id)restoreRecentlyClosedTabDocumentWithTabStateData:(id)a0;
- (void)tabSnapshotCacheDidFinishUpdating:(id)a0;
- (void)insertNewBlankTabDocumentAnimated:(BOOL)a0;
- (void)invalidateSnapshotForTabDocument:(id)a0;
- (void)closeOtherTabs;
- (void)textFieldDidBeginEditing:(id)a0;
- (void)selectNextTabGroup;
- (void)didGainOwnershipOfTabDocument:(id)a0;
- (void)adoptTabsFromTabController:(id)a0;
- (void).cxx_destruct;
- (BOOL)canAddNewTabForPrivateBrowsing:(BOOL)a0;
- (void)tabCollectionView:(id)a0 didMoveItem:(id)a1 overItem:(id)a2;
- (void)removeSingleBlankTabFromInactiveTabGroup:(id)a0;
- (id)_currentTabs;
- (void)tabBar:(id)a0 toggleMediaStateMutedForItem:(id)a1;
- (void)createTabGroupFromExistingTabs:(BOOL)a0 completionHandler:(id /* block */)a1;
- (id)contextMenuConfigurationForTabGroup:(id)a0 forPickerSheet:(BOOL)a1;
- (void)moveTabGroup:(id)a0 beforeOrAfterTabGroup:(id)a1;
- (id)cachedContentImageForTabDocument:(id)a0;
- (id)menuForTabGroup:(id)a0 forPickerSheet:(BOOL)a1 forEditMode:(BOOL)a2;
- (void)selectPreviousTabGroup;
- (void)tabCollectionViewDidCancelDismissal:(id)a0;
- (void)tabCollectionViewEndIgnoringUserInteraction:(id)a0 reason:(id)a1;
- (void)closeTabDocument:(id)a0 animated:(BOOL)a1;
- (void)logTabActivationInterval:(double)a0 forActivationType:(long long)a1;
- (BOOL)tabCollectionView:(id)a0 item:(id)a1 matchesSearchText:(id)a2;
- (id)replacePlaceholderTabDocument:(id)a0 withTabDocuments:(id)a1 transitionToDragStateWithBlock:(id /* block */)a2;
- (void)tabGroupManagerDidFinishSetup:(id)a0;
- (void)tabHoverPreviewControllerDismissPreview:(id)a0;
- (void)tabCollectionView:(id)a0 closeItem:(id)a1;
- (id)tabDocumentWithIDForWebExtensions:(double)a0;
- (void)removeSingleBlankTabFromActiveTabGroup;
- (void)tiltedTabView:(id)a0 animateTopBackdropView:(id)a1 hidden:(BOOL)a2;
- (void)insertTabDocuments:(id)a0 beforeTabDocument:(id)a1 inBackground:(BOOL)a2 animated:(BOOL)a3;
- (void)tabSnapshotCache:(id)a0 requestSnapshotWithIdentifier:(id)a1 completion:(id /* block */)a2;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })effectiveSafeAreaInsetsForTabCollectionView:(id)a0;
- (void)openBookmark:(id)a0 inTabGroup:(id)a1;
- (void)openURL:(id)a0 inTabGroup:(id)a1;
- (void)_updateUserActivityTimerFired;
- (void)tabCollectionView:(id)a0 relinquishBorrowedContentView:(id)a1 forItem:(id)a2;
- (id)tabDocumentWithUUID:(id)a0;
- (void)setActiveTabDocument:(id)a0 animated:(BOOL)a1;
- (id)insertInitialBlankTabDocumentWithPrivateBrowsingIfNeeded:(BOOL)a0;
- (id)imageForTabGroup:(id)a0;
- (void)textFieldDidEndEditing:(id)a0;
- (void)flushPendingSnapshotsWithCompletion:(id /* block */)a0;
- (unsigned long long)indexForTab:(id)a0;
- (void)closeTabGroup:(id)a0;
- (void)openNewTabWithOptions:(long long)a0 libraryType:(id)a1 completionHandler:(id /* block */)a2;
- (void)openNewTabWithOptions:(long long)a0 completionHandler:(id /* block */)a1;
- (void)_dismissTabView;
- (void)tabCollectionView:(id)a0 closeCloudTab:(id)a1 onDevice:(id)a2;
- (void)_newTabFromTabViewButton;
- (void)dealloc;
- (void)tiltedTabViewDidEndSearching:(id)a0;
- (void)sortTabsWithMode:(long long)a0;
- (void)hideTabDocuments:(id)a0;
- (void)updateUsageTrackingInformationIfNecessary;
- (BOOL)tabSnapshotCache:(id)a0 shouldRequestSavedSnapshotWithIdentifier:(id)a1;
- (void)closeAllOpenTabsAnimated:(BOOL)a0 temporarily:(BOOL)a1;
- (void)tabCollectionView:(id)a0 item:(id)a1 didProduceNavigationIntent:(id)a2;
- (id)insertPlaceholderTabDocumentAfterDocument:(id)a0;
- (void)_cancelVeryRecentlyClosedTabCountInvalidationTimer;
- (void)tiltedTabViewWillBeginSearching:(id)a0;
- (id)swipeActionsConfigurationForTabGroup:(id)a0 forPickerSheet:(BOOL)a1;
- (void)openTabDocumentForLibraryType:(id)a0;
- (void)unhideTabDocuments:(id)a0;
- (void)tabGroupManager:(id)a0 didUpdateTabGroup:(id)a1;
- (BOOL)tabCollectionView:(id)a0 cloudTab:(id)a1 matchesSearchText:(id)a2;
- (void)replaceTabDocument:(id)a0 withTabDocument:(id)a1;
- (void)evictTabDocument:(id)a0;
- (void)tabCollectionViewBeginIgnoringUserInteraction:(id)a0 reason:(id)a1;
- (void)tabOverview:(id)a0 closeItems:(id)a1;
- (void)requestSnapshotForTabDocument:(id)a0 completion:(id /* block */)a1;
- (void)updateTabGroupTabWithTabDocument:(id)a0 notify:(BOOL)a1;
- (void)removeSnapshotForDocument:(id)a0;
- (void)closeTabDocumentWithURL:(id)a0 UUID:(id)a1;
- (void)closeTabDocuments:(id)a0 animated:(BOOL)a1;
- (id)originatingTabForTab:(id)a0;
- (void)updateHibernatedTabDocumentsSavingState;
- (id)snapshotsToPresistOnDiskForTabSnapshotCache:(id)a0;
- (BOOL)tabOverviewShouldReserveSpaceForSidebarButton:(id)a0;
- (struct CGSize { double x0; double x1; })suggestedSnapshotSizeForTiltedTabView:(id)a0;
- (void)didTransitionTabView;
- (void)moveTabDocument:(id)a0 toTabGroup:(id)a1;
- (void)moveTabDocument:(id)a0 overTabDocument:(id)a1;

@end
