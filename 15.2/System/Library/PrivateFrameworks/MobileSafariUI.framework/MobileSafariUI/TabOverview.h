@class UIVisualEffectView, TabOverviewItemView2, CloudTabItemView, NSMutableArray, NSString, NSMutableSet, NSTimer, NSArray, UITextInputPasswordRules, ReorderingAutoscroller, TabOverviewInterpolatedLocation, UIButton, UIView, UIPointerInteraction, BarButton, CADisplayLink, SFGradientView, UISearchBar, TabExplanationView, ScrollingPanGestureRecognizer, TabOverviewItem, NSIndexSet, UITapGestureRecognizer, NSHashTable;
@protocol TabOverviewDelegate;

@interface TabOverview : UIView <CloudTabTableDelegate, ReorderingAutoscrollerDelegate, _UIBasicAnimationFactory, _UIScrollToTopView, UIGestureRecognizerDelegate, UIPointerInteractionDelegate, UISearchBarDelegate, UISearchBarDelegate_Private, UIKeyInput, SFCapsuleCollectionViewToolbarContentProviding, TabThumbnailCollectionView> {
    NSHashTable *_presentationObservers;
    CADisplayLink *_displayLink;
    TabOverviewInterpolatedLocation *_interpolatedLocation;
    NSArray *_displayedItems;
    BOOL _displayedItemsNeedUpdate;
    ScrollingPanGestureRecognizer *_panRecognizer;
    ScrollingPanGestureRecognizer *_tabCloseRecognizer;
    UITapGestureRecognizer *_tapRecognizer;
    UIPointerInteraction *_cursorInteraction;
    TabOverviewItem *_activeItem;
    TabOverviewItem *_visiblyCenteredItem;
    TabOverviewItem *_interactivelyLiftingItem;
    TabOverviewInterpolatedLocation *_cloudTabsLocation;
    NSArray *_cloudTabDevices;
    NSArray *_cloudTabTables;
    double _cloudTabsHeight;
    CloudTabItemView *_editedCloudTabItemView;
    struct CGPoint { double x; double y; } _lastPanTranslation;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _lastLayoutBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _lastScrollBounds;
    struct CGSize { double width; double height; } _lastContentSize;
    ReorderingAutoscroller *_reorderingAutoscroller;
    double _swipeCloseTranslation;
    TabOverviewItem *_swipeClosingItem;
    NSMutableSet *_deferredClosingItems;
    BOOL _dragging;
    BOOL _horizontalBounceEnabled;
    BOOL _verticalBounceEnabled;
    BOOL _shouldBounceToConstrainedLocation;
    BOOL _usesAccessibilityContentSize;
    BOOL _dismissingWithAddTabAnimation;
    UIVisualEffectView *_header;
    UISearchBar *_searchBar;
    BarButton *_searchCancelButton;
    double _searchBarMinimumWidth;
    BOOL _includeIncomingItemsInSearch;
    UIView *_inputView;
    BOOL _needsResizeHeaderItems;
    UIView *_scrollingContainerView;
    UIView *_gridVisualizationView;
    NSIndexSet *_indexesMatchingSearch;
    BOOL _shouldAnimateDimmingForSearch;
    BOOL _suppressItemAnimation;
    double _bottomKeyboardInset;
    TabOverviewItem *_interactivePresentationStartingItem;
    struct CGPoint { double x; double y; } _interactivePresentationLastOffset;
    double _interactivePresentationLastTimestamp;
    double _interactivePresentationLastLogScale;
    struct CGPoint { double x; double y; } _interactivePresentationVelocity;
    double _interactivePresentationZoomLockStartTime;
    struct CGPoint { double x; double y; } _interactivePresentationZoomLockOffset;
    double _headerHeight;
    NSTimer *_itemActivationTimer;
    NSMutableArray *_itemViewReuseStack;
    BOOL _shouldShowPrivateBrowsingExplanationView;
    TabExplanationView *_explanationView;
    BOOL _explanationViewVisible;
    BOOL _searchBarBackdropStyleUpdated;
    unsigned long long _fadingSnapshotCount;
    double _lastUpdateTime;
    SFGradientView *_statusBarGradient;
    double _privateButtonPreferredWidth;
    long long _lastUsedLayout;
    double _dismissibleSearchBarHeight;
    UIVisualEffectView *_dismissibleSearchBarBackground;
    NSString *_privateBrowsingButtonTitle;
    BOOL _toolbarDismissed;
    BOOL _toolbarBorrowed;
    long long _toolbarAnimationCount;
    UIView *_toolbarSeparator;
    TabOverviewItemView2 *_titleSizingItemView;
}

@property (readonly, nonatomic) BOOL animatingToolbarDismissal;
@property (nonatomic) long long barPlacement;
@property (nonatomic) BOOL targetItemLiftsFromGrid;
@property (readonly, nonatomic) double scalePercentageForActiveItem;
@property (nonatomic) long long presentedTabLayout;
@property (copy, nonatomic) NSArray *items;
@property (readonly, nonatomic) NSArray *alternateItems;
@property (readonly, nonatomic) long long alternateItemPosition;
@property (readonly, nonatomic) NSArray *itemsMatchingSearchTerm;
@property (readonly, nonatomic) NSArray *itemsFullyInView;
@property (nonatomic) BOOL synchronizeClosingItems;
@property (readonly, nonatomic) BOOL allowsInteractivePresentation;
@property (readonly, nonatomic) BOOL presentingInteractively;
@property (retain, nonatomic) TabOverviewItem *itemToActivate;
@property (nonatomic) BOOL defersActivation;
@property (weak, nonatomic) id<TabOverviewDelegate> delegate;
@property (readonly, nonatomic) BarButton *addTabButton;
@property (readonly, nonatomic) BarButton *privateBrowsingButton;
@property (readonly, nonatomic) BarButton *doneButton;
@property (retain, nonatomic) UIButton *sidebarButton;
@property (readonly, nonatomic, getter=isInSteadyState) BOOL inSteadyState;
@property (copy, nonatomic) id /* block */ stateUpdateHandler;
@property (copy, nonatomic) id /* block */ pptStateUpdateHandler;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL hasText;
@property (nonatomic) long long autocapitalizationType;
@property (nonatomic) long long autocorrectionType;
@property (nonatomic) long long spellCheckingType;
@property (nonatomic) long long smartQuotesType;
@property (nonatomic) long long smartDashesType;
@property (nonatomic) long long smartInsertDeleteType;
@property (nonatomic) long long keyboardType;
@property (nonatomic) long long keyboardAppearance;
@property (nonatomic) long long returnKeyType;
@property (nonatomic) BOOL enablesReturnKeyAutomatically;
@property (nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property (copy, nonatomic) NSString *textContentType;
@property (copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property (readonly, nonatomic) long long presentationState;
@property (copy, nonatomic) NSString *searchTerm;
@property (readonly, nonatomic, getter=isSearching) BOOL searching;
@property (readonly, nonatomic) ReorderingAutoscroller *reorderingAutoscroller;
@property (readonly, nonatomic) BOOL supportsSystemDrag;
@property (readonly, nonatomic) unsigned long long layoutAxes;
@property (readonly, nonatomic) BOOL supportsDropTransitionToItemView;
@property (readonly, nonatomic) BOOL canDragOntoActiveTab;
@property (readonly, nonatomic) BOOL hidesInactiveTabs;
@property (readonly, nonatomic) BOOL lastDecelerationWasInterrupted;
@property (readonly, nonatomic) double desiredSnapshotScale;
@property (readonly, nonatomic) unsigned long long snapshotBorderOptions;

+ (void)initialize;

- (void)dismissAnimated:(BOOL)a0;
- (void)_tap:(id)a0;
- (void)_pan:(id)a0;
- (id)_timingFunctionForAnimation;
- (id)_basicAnimationForView:(id)a0 withKeyPath:(id)a1;
- (void)enumerateItemsOrderedByVisibility:(id /* block */)a0;
- (void)layoutSubviews;
- (void)_didReceiveMemoryWarning:(id)a0;
- (void)beginSearching;
- (void)_updateDisplayLink;
- (struct CGSize { double x0; double x1; })snapshotSizeForSuggestedSize:(struct CGSize { double x0; double x1; })a0;
- (BOOL)isScrollEnabled;
- (void)setCloudTabDevices:(id)a0;
- (void)activateItem:(id)a0;
- (void)_displayLinkFired:(id)a0;
- (id)targetedDragPreviewForDroppingItem:(id)a0;
- (struct CGSize { double x0; double x1; })_contentSize;
- (void)deleteBackward;
- (unsigned long long)estimatedSnapshotsPerPageForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withTraitCollection:(id)a1;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (void)searchBarCancelButtonClicked:(id)a0;
- (void)insertText:(id)a0;
- (void)searchBar:(id)a0 textDidChange:(id)a1;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (void)endSearching;
- (void)_activateItemToActivate:(id)a0;
- (void)cloudTabTable:(id)a0 closeCloudTab:(id)a1 onDevice:(id)a2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)searchBarTextDidEndEditing:(id)a0;
- (id)viewForItem:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_searchBar:(id)a0 proposedSearchFieldFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)searchBarTextDidBeginEditing:(id)a0;
- (id)itemAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForItem:(id)a0;
- (id)targetedDragPreviewForLiftingItem:(id)a0;
- (void).cxx_destruct;
- (void)traitCollectionDidChange:(id)a0;
- (void)searchBarSearchButtonClicked:(id)a0;
- (BOOL)canBecomeFirstResponder;
- (id)targetItemForDropAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)inputView;
- (BOOL)isItemAnimating:(id)a0;
- (BOOL)cloudTabTable:(id)a0 shouldDisplayTab:(id)a1;
- (void)willMoveToWindow:(id)a0;
- (id)pointerInteraction:(id)a0 regionForRequest:(id)a1 defaultRegion:(id)a2;
- (void)setShowsPrivateBrowsingExplanationView:(BOOL)a0 animated:(BOOL)a1;
- (void)_scrollToTopFromTouchAtScreenLocation:(struct CGPoint { double x0; double x1; })a0 resultHandler:(id /* block */)a1;
- (void)cloudTabTable:(id)a0 didStartEditingTabItemView:(id)a1;
- (void)cloudTabTable:(id)a0 didFinishEditingTabItemView:(id)a1;
- (void)cloudTabTable:(id)a0 didSelectCloudTab:(id)a1;
- (void)presentAnimated:(BOOL)a0;
- (void)dealloc;
- (void)pressesBegan:(id)a0 withEvent:(id)a1;
- (id)pointerInteraction:(id)a0 styleForRegion:(id)a1;
- (void)didMoveToWindow;
- (void)touchesBegan:(id)a0 withEvent:(id)a1;
- (void)didUpdateFocusInContext:(id)a0 withAnimationCoordinator:(id)a1;
- (void)reorderingAutoscroller:(id)a0 handleScroll:(struct CGPoint { double x0; double x1; })a1;
- (void)_cancelSearch;
- (id)toolbarContentViewForCapsuleCollectionView:(id)a0;
- (double)capsuleCollectionView:(id)a0 heightForToolbarContentView:(id)a1;
- (void)capsuleCollectionView:(id)a0 relinquishToolbarContentView:(id)a1;
- (void)_close:(id)a0;
- (void)test_scrollToTopWithoutAnimation;
- (void)test_simulateScrollByOffset:(struct CGPoint { double x0; double x1; })a0 inTime:(double)a1;
- (void)addPresentationObserver:(id)a0;
- (void)removePresentationObserver:(id)a0;
- (void)attachView:(id)a0 withReferenceRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 toItem:(id)a2;
- (void)endInteractivePresentationAllowingDismissalToTargetItem:(BOOL)a0;
- (void)beginInteractivePresentationWithOffset:(struct CGPoint { double x0; double x1; })a0 scale:(double)a1;
- (double)targetScaleWithTabLayout:(long long)a0;
- (void)updateInteractivePresentationWithOffset:(struct CGPoint { double x0; double x1; })a0 scale:(double)a1 animated:(BOOL)a2;
- (void)endAnimation;
- (void)updateInteractivePresentationWithOffset:(struct CGPoint { double x0; double x1; })a0 scale:(double)a1;
- (void)endInteractivePresentation;
- (void)cancelInteractivePresentation;
- (id)targetedPreviewForDismissingMenuForItem:(id)a0;
- (void)willAnimateDropForItem:(id)a0 withAnimator:(id)a1;
- (void)dismissWithAddTabAnimation;
- (void)setItems:(id)a0 alternateItems:(id)a1 atPosition:(long long)a2;
- (void)updateSnapshotForItem:(id)a0;
- (void)setPrivateBrowsingButtonTitle:(id)a0;
- (void)_tabClose:(id)a0;
- (void)_updateScrollBoundsForKeyboardNotification:(id)a0;
- (void)_dismissWithItemAtCurrentDecelerationFactor:(id)a0;
- (BOOL)_isClosingLastItem;
- (void)copyLocationFromItem:(id)a0 toItem:(id)a1;
- (BOOL)itemHasAttachedView:(id)a0;

@end
