@class NSOrderedSet, CloudTabItemView, NSString, UILongPressGestureRecognizer, NSMutableSet, NSTimer, NSArray, WBSCloudTab, UIPreviewForceInteractionProgress, ReorderingAutoscroller, TiltedTabViewMetrics, UITextInputPasswordRules, UIButton, NSMutableDictionary, UIView, UIPanGestureRecognizer, HighlightRecognizer, SFGradientView, TiltedTabItem, TabExplanationView, UISearchBar, ViewReuseManager, CloudTabTable, UIScrollView, NSMapTable, UITapGestureRecognizer, NSNumber;
@protocol TiltedTabViewDelegate;

@interface TiltedTabView : UIView <CAAnimationDelegate, CloudTabTableDelegate, ReorderingAutoscrollerDelegate, UIGestureRecognizerDelegate, UIScrollViewDelegate, _UIBasicAnimationFactory, UIInteractionProgressObserver, UISearchBarDelegate, UIKeyInput, TabThumbnailCollectionView> {
    BOOL _preparingToTogglePresented;
    UIPanGestureRecognizer *_tabCloseRecognizer;
    UILongPressGestureRecognizer *_tabReorderRecognizer;
    UITapGestureRecognizer *_tabSelectionRecognizer;
    UIScrollView *_scrollView;
    BOOL _suppressingScrollViewDidScroll;
    ViewReuseManager *_viewReuseManager;
    SFGradientView *_statusBarGradient;
    unsigned long long _activeAnimationCount;
    TiltedTabItem *_animatingItem;
    BOOL _startedAnimatingItem;
    UIView *_animatingTopBackdropView;
    TiltedTabItem *_itemToScrollIntoView;
    BOOL _itemToScrollIntoViewScrollsToTop;
    BOOL _topBackdropViewHidden;
    UILongPressGestureRecognizer *_tabPreviewRecognizer;
    UILongPressGestureRecognizer *_tabCommitRecognizer;
    long long _currentTabPreviewState;
    TiltedTabItem *_interactivelyPreviewingItem;
    double _tabPreviewProgress;
    double _tabReadyToCommitProgress;
    UIPreviewForceInteractionProgress *_tabPreviewInteractionProgress;
    UIPreviewForceInteractionProgress *_tabReadyToCommitInteractionProgress;
    TiltedTabItem *_interactivelyClosingItem;
    double _interactiveCloseProgress;
    double _interactiveCloseVelocity;
    TiltedTabItem *_onlyHorizontalVelocityItem;
    BOOL _applyVelocityOnlyToHorizontalPosition;
    TiltedTabItem *_pressedItem;
    HighlightRecognizer *_pressRecognizer;
    NSMapTable *_dragItemViews;
    TiltedTabItem *_interactivelyReorderingItem;
    double _interactiveReorderOffsetDistanceFromTouch;
    double _interactiveReorderOffset;
    BOOL _reorderOffsetNeedsReset;
    BOOL _itemsReordered;
    ReorderingAutoscroller *_reorderingAutoscroller;
    NSOrderedSet *_itemsInvolvedInAnimation;
    NSMutableSet *_itemsCurrentlyClosing;
    NSOrderedSet *_itemsInvolvedInTransition;
    TiltedTabItem *_visiblyCenteredItem;
    BOOL _scrollingToTop;
    UIView *_cloudTabContainer;
    NSArray *_cloudTabDevices;
    NSArray *_cloudTabTables;
    WBSCloudTab *_selectedCloudTab;
    CloudTabTable *_selectedCloudTabTable;
    CloudTabItemView *_editedCloudTabItemView;
    BOOL _cloudTabsNeedLayout;
    NSTimer *_itemActivationTimer;
    UIView *_bottomMaskView;
    BOOL _shouldShowPrivateBrowsingExplanationView;
    BOOL _shouldShowSearchExplanationView;
    TabExplanationView *_explanationView;
    BOOL _explanationViewVisible;
    double _bottomInsetForKeyboard;
    NSArray *_items;
    double _pendingBottomInsetForKeyboard;
    UISearchBar *_searchBar;
    BOOL _hasSearchBarInset;
    BOOL _shouldSendDidEndSearchingToDelegate;
    UIView *_inputView;
    BOOL _isAccessibilityContentSize;
    NSMutableDictionary *_scrollPositions;
    NSNumber *_currentScrollPositionIdentifier;
    double _transitionContentOffsetDeltaY;
    struct CGSize { double width; double height; } _expectedSnapshotImageSize;
}

@property (weak, nonatomic) id<TiltedTabViewDelegate> delegate;
@property (copy, nonatomic) NSArray *items;
@property (readonly, nonatomic) NSArray *itemsMatchingSearchTerm;
@property (readonly, nonatomic) NSArray *itemsFullyInView;
@property (readonly, nonatomic) TiltedTabViewMetrics *metrics;
@property (retain, nonatomic) TiltedTabItem *itemToActivate;
@property (nonatomic) BOOL defersActivation;
@property (retain, nonatomic) TiltedTabItem *itemToAdd;
@property (readonly, nonatomic) BOOL canShowSearchBar;
@property (readonly, nonatomic, getter=isShowingSearchBar) BOOL showingSearchBar;
@property (readonly, nonatomic) BOOL showsPrivateBrowsingExplanationView;
@property (readonly, nonatomic) UIScrollView *test_scrollView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL hasText;
@property (nonatomic) long long autocapitalizationType;
@property (nonatomic) long long autocorrectionType;
@property (nonatomic) long long spellCheckingType;
@property (nonatomic) long long smartQuotesType;
@property (nonatomic) long long smartDashesType;
@property (nonatomic) long long smartInsertDeleteType;
@property (nonatomic) long long keyboardType;
@property (nonatomic) long long keyboardAppearance;
@property (nonatomic) long long returnKeyType;
@property (nonatomic) BOOL enablesReturnKeyAutomatically;
@property (nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property (copy, nonatomic) NSString *textContentType;
@property (copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property (readonly, nonatomic) long long presentationState;
@property (copy, nonatomic) NSString *searchTerm;
@property (readonly, nonatomic, getter=isSearching) BOOL searching;
@property (retain, nonatomic) UIButton *sidebarButton;
@property (readonly, nonatomic) ReorderingAutoscroller *reorderingAutoscroller;
@property (readonly, nonatomic) BOOL supportsSystemDrag;
@property (readonly, nonatomic) unsigned long long layoutAxes;
@property (readonly, nonatomic) BOOL supportsDropTransitionToItemView;
@property (readonly, nonatomic) BOOL canDragOntoActiveTab;
@property (readonly, nonatomic) BOOL hidesInactiveTabs;
@property (readonly, nonatomic) BOOL lastDecelerationWasInterrupted;
@property (readonly, nonatomic) double desiredSnapshotScale;
@property (readonly, nonatomic) unsigned long long snapshotBorderOptions;

- (void)dismissAnimated:(BOOL)a0;
- (void)_keyboardWillAppear:(id)a0;
- (id)_timingFunctionForAnimation;
- (id)_basicAnimationForView:(id)a0 withKeyPath:(id)a1;
- (void)enumerateItemsOrderedByVisibility:(id /* block */)a0;
- (void)layoutSubviews;
- (void)animationDidStop:(id)a0 finished:(BOOL)a1;
- (void)_keyboardWillDisappear:(id)a0;
- (void)safeAreaInsetsDidChange;
- (void)scrollViewWillBeginDragging:(id)a0;
- (void)updateSnapshotForItem:(id)a0 animated:(BOOL)a1;
- (void)beginSearching;
- (struct CGSize { double x0; double x1; })snapshotSizeForSuggestedSize:(struct CGSize { double x0; double x1; })a0;
- (void)interactionProgress:(id)a0 didEnd:(BOOL)a1;
- (void)interactionProgressDidUpdate:(id)a0;
- (void)setCloudTabDevices:(id)a0;
- (void)updateDragPreviewForItem:(id)a0 atPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)activateItem:(id)a0;
- (id)targetedDragPreviewForDroppingItem:(id)a0;
- (void)deleteBackward;
- (long long)positionForBar:(id)a0;
- (void)_layoutItemsWithTransition:(long long)a0;
- (unsigned long long)estimatedSnapshotsPerPageForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withTraitCollection:(id)a1;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (void)searchBarCancelButtonClicked:(id)a0;
- (void)insertText:(id)a0;
- (void)searchBar:(id)a0 textDidChange:(id)a1;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (void)endSearching;
- (void)_activateItemToActivate:(id)a0;
- (BOOL)searchBarShouldEndEditing:(id)a0;
- (void)cloudTabTable:(id)a0 closeCloudTab:(id)a1 onDevice:(id)a2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)searchBarTextDidEndEditing:(id)a0;
- (id)viewForItem:(id)a0;
- (void)_tabCloseRecognized:(id)a0;
- (void)cleanUpDragPreviewForItem:(id)a0;
- (BOOL)scrollViewShouldScrollToTop:(id)a0;
- (void)searchBarTextDidBeginEditing:(id)a0;
- (id)itemAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForItem:(id)a0;
- (id)targetedDragPreviewForLiftingItem:(id)a0;
- (BOOL)itemIsCoveredBySlidingWindow:(id)a0 windowSize:(unsigned long long)a1;
- (void)scrollViewDidEndDragging:(id)a0 willDecelerate:(BOOL)a1;
- (void).cxx_destruct;
- (unsigned long long)countOfVisibleItems;
- (void)scrollViewDidScroll:(id)a0;
- (void)traitCollectionDidChange:(id)a0;
- (id)init;
- (void)searchBarSearchButtonClicked:(id)a0;
- (void)_tabPressUpdated:(id)a0;
- (BOOL)canBecomeFirstResponder;
- (id)targetItemForDropAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_tabSelectionRecognized:(id)a0;
- (id)inputView;
- (BOOL)isItemAnimating:(id)a0;
- (BOOL)gestureRecognizer:(id)a0 shouldReceiveTouch:(id)a1;
- (BOOL)cloudTabTable:(id)a0 shouldDisplayTab:(id)a1;
- (id)_tiltedTabItemForLocation:(struct CGPoint { double x0; double x1; })a0;
- (void)setShowsPrivateBrowsingExplanationView:(BOOL)a0 animated:(BOOL)a1;
- (void)cloudTabTable:(id)a0 didStartEditingTabItemView:(id)a1;
- (BOOL)gestureRecognizerShouldBegin:(id)a0;
- (void)cloudTabTable:(id)a0 didFinishEditingTabItemView:(id)a1;
- (void)setItems:(id)a0 withScrollPositionIdentifier:(id)a1 transition:(long long)a2;
- (void)cloudTabTable:(id)a0 didSelectCloudTab:(id)a1;
- (void)presentAnimated:(BOOL)a0;
- (void)dealloc;
- (void)_tabPreviewGestureRecognized:(id)a0;
- (void)_tabReorderRecognized:(id)a0;
- (void)_closeButtonPressed:(id)a0;
- (void)_tabCommitGestureRecognized:(id)a0;
- (void)reorderingAutoscroller:(id)a0 handleScroll:(struct CGPoint { double x0; double x1; })a1;

@end
