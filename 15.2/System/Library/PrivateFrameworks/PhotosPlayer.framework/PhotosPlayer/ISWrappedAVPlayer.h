@class NSError, NSString, AVPlayer, AVPlayerItem, NSMutableDictionary, NSObject, AVVideoComposition, ISWrappedAVAudioSession;
@protocol OS_dispatch_queue, ISWrappedAVPlayerDelegate;

@interface ISWrappedAVPlayer : ISObservable <ISKVOProxyDelegate> {
    NSObject<OS_dispatch_queue> *_avPlayerQueue;
    NSObject<OS_dispatch_queue> *_ivarQueue;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    AVPlayer *_playerQueue_avPlayer;
    ISWrappedAVAudioSession *_playerQueue_wrappedAudioSession;
    id _playerQueue_playerItemDidPlayToEndObserver;
    AVPlayerItem *_ivarQueue_currentItem;
    long long _ivarQueue_status;
    NSError *_ivarQueue_error;
    float _ivarQueue_rate;
    float _ivarQueue_volume;
    struct { struct { long long value; int timescale; unsigned int flags; long long epoch; } start; struct { long long value; int timescale; unsigned int flags; long long epoch; } duration; } _ivarQueue_loopTimeRange;
    BOOL _ivarQueue_loopingEnabled;
    BOOL _ivarQueue_audioEnabled;
    BOOL _ivarQueue_preventsSleepDuringVideoPlayback;
    BOOL _ivarQueue_suppressesAudioRendering;
    long long _ivarQueue_itemStatus;
    NSError *_ivarQueue_itemError;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _ivarQueue_itemForwardPlaybackEndTime;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _ivarQueue_itemDuration;
    BOOL _ivarQueue_itemPlaybackBufferFull;
    AVVideoComposition *_ivarQueue_itemVideoComposition;
    BOOL _ivarQueue_itemIsLikelyToKeepUp;
    BOOL _ivarQueue_itemPlaybackBufferEmpty;
    NSMutableDictionary *_observersByID;
    void *_ivarQueueIdentifier;
    NSString *_playerKVOIdentifier;
    NSString *_playerItemKVOIdentifier;
}

@property (getter=isLoopingEnabled) BOOL loopingEnabled;
@property BOOL suppressesAudioRendering;
@property (weak) id<ISWrappedAVPlayerDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)observedAVPlayerItemKeys;
+ (id)observedAVPlayerKeys;

- (void)setRate:(float)a0;
- (void)setVolume:(float)a0;
- (id)mutableChangeObject;
- (float)volume;
- (float)rate;
- (void)setAudioEnabled:(BOOL)a0;
- (long long)status;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })currentItemDuration;
- (void)setWrappedAudioSession:(id)a0;
- (void)setPreventsSleepDuringVideoPlayback:(BOOL)a0;
- (void)removeTimeObserver:(id)a0;
- (id)currentItem;
- (void)setLoopingEnabled:(BOOL)a0 withTemplateItem:(id)a1;
- (void)replaceCurrentItemWithPlayerItem:(id)a0;
- (void)setRate:(float)a0 time:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 atHostTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a2;
- (void)prerollAtRate:(float)a0 completionHandler:(id /* block */)a1;
- (void)cancelPendingPrerolls;
- (void)setDimensionsOfReservedVideoMemory:(struct CGSize { double x0; double x1; })a0;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })loopTimeRange;
- (BOOL)isAudioEnabled;
- (void).cxx_destruct;
- (id)init;
- (id)addBoundaryTimeObserverForTimes:(id)a0 queue:(id)a1 usingBlock:(id /* block */)a2;
- (id)addPeriodicTimeObserverForInterval:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 queue:(id)a1 usingBlock:(id /* block */)a2;
- (void)setActionAtItemEnd:(long long)a0;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 toleranceBefore:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 toleranceAfter:(struct { long long x0; int x1; unsigned int x2; long long x3; })a2 completionHandler:(id /* block */)a3;
- (void)pause;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })currentTime;
- (void)setLoopTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0;
- (id)error;
- (void)dealloc;
- (void)setAllowsExternalPlayback:(BOOL)a0;
- (void)_performIvarRead:(id /* block */)a0;
- (void)_performIvarWrite:(id /* block */)a0;
- (void)attachToPlayerLayerIfNeeded:(id)a0;
- (id)currentItemError;
- (BOOL)_isOnIvarQueue;
- (BOOL)preventsSleepDuringVideoPlayback;
- (BOOL)currentItemPlaybackBufferEmpty;
- (BOOL)currentItemPlaybackBufferFull;
- (BOOL)currentItemIsLikelyToKeepUp;
- (long long)currentItemStatus;
- (void)playToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 withInitialRate:(float)a1 overDuration:(double)a2 progressHandler:(id /* block */)a3;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })itemForwardPlaybackEndTime;
- (void)_performPlayerTransaction:(id /* block */)a0;
- (void)replaceCurrentItemWithPlayerItem:(id)a0 thenCall:(id /* block */)a1;
- (id)_initWithAVPlayer:(id)a0;
- (void)setItemForwardEndPlaybackTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (void)observeChangeforKVOProxyIdentifier:(id)a0 keyPath:(id)a1 change:(id)a2;
- (void)_assertOnIvarQueue;
- (id)_playerQueue_avPlayer;
- (void)setItemBlendsVideoFrames:(BOOL)a0;
- (id)_nextObserverUID;
- (void)_playerQueue_startObservingPlayerItem:(id)a0;
- (void)_playerQueue_stopObservingPlayerItem:(id)a0;
- (void)_playerItemDidPlayToEnd:(id)a0;
- (id)_nilOrValue:(id)a0;
- (id)currentItemVideoComposition;
- (void)_playerQueue_updatePlayerItemAudioTracksEnabled;

@end
