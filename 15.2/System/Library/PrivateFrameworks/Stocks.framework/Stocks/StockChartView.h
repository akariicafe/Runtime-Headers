@class ChartUpdater, NSMutableDictionary, UILabel, NSMutableArray, StockChartDisplayMode, ChartTitleLabel, DashedLineView, NSString, ChartHUDView, StockChartData, UIView, Stock, ChartIntervalButtonRow, NSArray, LoadingLabel, NSError, StocksViewController;
@protocol StockChartViewDelegate;

@interface StockChartView : UIView <ChartUpdaterDelegate, ChartIntervalButtonRowDelegate, StockGraphViewContainer, StockUpdateObserver> {
    LoadingLabel *_loadingLabel;
    ChartUpdater *_chartUpdater;
    ChartIntervalButtonRow *_intervalButtonRow;
    NSMutableArray *_axisViews;
    NSMutableArray *_xLabelViews;
    NSMutableArray *_yLabelViews;
    DashedLineView *_previousCloseLine;
    UILabel *_previousCloseLabel;
    ChartTitleLabel *_titleView;
    ChartHUDView *_HUDView;
    BOOL _animating;
    BOOL _layoutPending;
    UIView *_chartTopKeyline;
    UIView *_chartBottomKeyline;
    UIView *_xAxisKeyline;
    NSMutableArray *_displayModes;
    NSMutableDictionary *_graphViews;
}

@property (retain, nonatomic) StockChartDisplayMode *currentDisplayMode;
@property (weak, nonatomic) id<StockChartViewDelegate> chartViewDelegate;
@property (nonatomic) long long preferredInterval;
@property (weak, nonatomic) StocksViewController *controller;
@property (retain, nonatomic) Stock *stock;
@property (retain, nonatomic) StockChartData *chartData;
@property (retain, nonatomic) NSError *error;
@property (readonly, nonatomic) NSArray *alternateDisplayModes;
@property (nonatomic) BOOL drawsBottomLine;
@property (nonatomic) long long selectedInterval;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (struct CGGradient { } *)LineBackgroundGradient;

- (void)layoutIfNeeded;
- (void)reloadData;
- (void)layoutSubviews;
- (BOOL)isLoading;
- (void)_layoutSubviews;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)resetLocale;
- (void)forceLayout;
- (void)setNeedsLayout;
- (void).cxx_destruct;
- (void)clearData;
- (double)horizontalPadding;
- (void)dealloc;
- (BOOL)isLandscape;
- (double)lineGraphBottomPadding;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })lineGraphFrame;
- (void)chartUpdater:(id)a0 didReceiveStockChartData:(id)a1;
- (void)chartUpdater:(id)a0 didFailWithError:(id)a1;
- (id)chartUpdater;
- (void)_prepareXAxisLabelsAndPositions;
- (void)_setHourLabels;
- (void)_setDayLabelsWithInterval:(unsigned int)a0 realTimePositions:(BOOL)a1;
- (void)_setMonthAndYearLabels;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })graphViewFrameForMode:(id)a0;
- (double)widestYLabelWidthForMode:(id)a0;
- (void)stockGraphViewReadyForDisplay:(id)a0;
- (BOOL)hadError;
- (id)initWithInitialDisplayMode:(id)a0 preferredChartInterval:(long long)a1 stockChartViewDelegate:(id)a2;
- (void)setShowingHUD:(BOOL)a0;
- (void)chartIntervalButtonRow:(id)a0 didSelectChartInterval:(long long)a1;
- (void)createYLabelsForMode:(id)a0;
- (void)addDisplayMode:(id)a0;
- (long long)maxSupportedIntervalFromDesiredInterval:(long long)a0;
- (void)_prepareYAxisLabelsAndPositionsForDisplayMode:(id)a0;
- (id)graphViewForMode:(id)a0;
- (void)enumerateGraphsAndDisplayModesUsingBlock:(id /* block */)a0;
- (id)currentGraphView;
- (void)_layoutTopLabelsHidden:(BOOL)a0;
- (void)hideLabelsAxesAndGraphs;
- (void)_setShowingLoadingStatus:(BOOL)a0;
- (void)layoutGraphViews;
- (void)_layoutIntervalButtonRow;
- (BOOL)shouldShowLoadingStatus;
- (void)_layoutVolumeSeparatorLineForGraphRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_layoutYLabels;
- (void)_layoutAxesAndXLabels;
- (void)layoutPreviousClose;
- (BOOL)isCurrentChart;
- (void)renderGraphDataIfNeeded;
- (void)updateHUDView;
- (void)renderGraphDataIfNeededForMode:(id)a0;
- (void)hideOtherGraphViews;
- (void)setLabelsAndAxesAlpha:(double)a0;
- (void)layoutLoadingStatus;
- (void)updateChartViewForSelectedInterval;
- (void)reloadDataIfStale;
- (id)HUDView;
- (double)_evennessOfValue:(double)a0 inRange:(double)a1;
- (void)prepareForTransitionToDisplayMode:(id)a0;
- (void)animateTransitionToDisplayMode:(id)a0;
- (void)didTransitionToDisplayMode:(id)a0;

@end
