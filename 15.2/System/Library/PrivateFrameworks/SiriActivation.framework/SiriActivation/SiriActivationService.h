@class NSMutableDictionary, SASPresentationManager, NSObject, SASHeater, SASSystemState, AFSiriTether, SASBulletinManager, NSString, SASLockStateMonitor, NSTimer, AFPreferences, SASRemoteRequestManager, SASMyriadController, SASTestingInputController;
@protocol OS_dispatch_queue;

@interface SiriActivationService : NSObject <SASRequestOptionsBuilderDataSource, SASHeaterDelegate, SASMyriadControllerDelegate, SASLockStateMonitorDelegate, SASBulletinManagerDelegate, SASStateChangeListener, SASPresentationManagerDelegate> {
    id /* block */ _buttonTrigger;
    NSString *_preheatedPresentation;
    int _voiceTriggerNotifyToken;
    NSObject<OS_dispatch_queue> *_voiceTriggerDispatchQueue;
    NSTimer *_B188ActivationTimer;
    SASMyriadController *_myriadController;
}

@property (retain, nonatomic) SASSystemState *systemState;
@property (retain, nonatomic) AFPreferences *afPreferences;
@property (retain, nonatomic) SASLockStateMonitor *lockStateMonitor;
@property (nonatomic) BOOL xcTestingActive;
@property (retain, nonatomic) NSMutableDictionary *sources;
@property (retain, nonatomic) NSMutableDictionary *activationAssertions;
@property (retain, nonatomic) NSMutableDictionary *buttonEventListeners;
@property (retain, nonatomic) SASHeater *heater;
@property (retain, nonatomic) AFSiriTether *siriTether;
@property (nonatomic) BOOL siriTetherIsAttached;
@property (nonatomic) double activationTimestamp;
@property (nonatomic) BOOL voiceTriggerNotifyTokenIsValid;
@property (retain, nonatomic) SASBulletinManager *bulletinManager;
@property (retain, nonatomic) SASRemoteRequestManager *remoteRequestManager;
@property (retain, nonatomic) SASTestingInputController *testingInputController;
@property (retain, nonatomic) NSMutableDictionary *avExternalButtonEvents;
@property (nonatomic) BOOL buttonDownHasOccurredSinceActivation;
@property (nonatomic) BOOL canActivateFromDirectActionSource;
@property (nonatomic, getter=_pocketStateFetchingInProgressForHeadsetActivation, setter=_setPocketStateFetchingInProgressForHeadsetActivation:) BOOL pocketStateFetchingInProgressForHeadsetActivation;
@property (retain, nonatomic) SASPresentationManager *presentationManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)new;
+ (id)service;

- (id)allBulletins;
- (void)deactivationRequestFromButtonIdentifier:(long long)a0 context:(id)a1 options:(id)a2;
- (void)activationRequestFromBluetoothKeyboardActivation:(long long)a0;
- (id)bulletinForIdentifier:(id)a0;
- (void)prewarmFromButtonIdentifier:(long long)a0 longPressInterval:(double)a1;
- (void)activationRequestFromSpotlightWithContext:(id)a0;
- (void)activationRequestFromContinuityWithContext:(id)a0;
- (void)shouldContinue:(id)a0;
- (void)_updateCanActivateFromDirectActionSource;
- (void)_defrost;
- (void)_handleDesignModeRequest;
- (void)_registerForVoiceTrigger;
- (void)updatePredicatedRecordRoute;
- (void)_handlePocketStateFetchForScreenWakeForPresentationIdentifier:(long long)a0 requestOptions:(id)a1 presentationOptions:(id)a2;
- (void)cancelPrewarmFromButtonIdentifier:(long long)a0;
- (void)_notifySourcesOfCanActivateFromDirectActionSourceChange:(BOOL)a0;
- (BOOL)_isInitialRequest;
- (BOOL)_shouldHandlePocketStateFetchForRequestOptions:(id)a0;
- (void)_handleTapSynthesisIfNeededForButtonIdentifier:(long long)a0 buttonUpTimestamp:(double)a1;
- (void)registerActivationSource:(id)a0 withIdentifier:(id)a1;
- (BOOL)_shouldRejectNewActivations:(long long)a0;
- (void)activationRequestFromRemotePresentationBringUpWithContext:(id)a0;
- (BOOL)requestOptionsBuilder:(id)a0 shouldRequestUseAutomaticEndpointingWithActiviation:(id)a1;
- (void)speechRequestStateDidChange:(long long)a0;
- (void)_cancelActivationPreparationForSetup;
- (void)bulletinManagerDidChangeBulletins:(id)a0;
- (void)siriPresentationFailureWithIdentifier:(long long)a0 error:(id)a1;
- (BOOL)_isVoiceActivationMaskNecessaryWithRequestOptions:(id)a0;
- (void)activationRequestFromButtonIdentifier:(long long)a0 context:(id)a1;
- (BOOL)presentationsAreIdleAndQuiet;
- (void)activationRequestFromVoiceTrigger;
- (void)heaterSuggestsPreheating:(id)a0;
- (void)buttonTapFromButtonIdentifier:(long long)a0;
- (void)_notifyListenersOfButtonDownWithButtonIdentifier:(long long)a0 atTimestamp:(double)a1;
- (void)registerSiriPresentation:(id)a0 withIdentifier:(long long)a1;
- (void)siriPresentationDismissedWithIdentifier:(long long)a0;
- (void)didChangeLockState:(unsigned long long)a0;
- (long long)_requestState;
- (BOOL)handleActivationRequest:(id)a0 systemState:(id)a1;
- (void)_B188ActivationEvent:(long long)a0 context:(id)a1 options:(id)a2;
- (void)unregisterActivationAssertionWithIdentifier:(id)a0;
- (BOOL)requestOptionsBuilder:(id)a0 isPredictedRecordRouteIsZLLWithActiviation:(id)a1;
- (BOOL)_buttonIsAVExternalButton:(long long)a0;
- (void)_activatePresentationWithIdentifier:(long long)a0 requestOptions:(id)a1 analyticsContext:(id)a2;
- (void)_notifyListenersOfButtonUpWithButtonIdentifier:(long long)a0 atTimestamp:(double)a1;
- (void)_unregisterForVoiceTrigger;
- (void)pongWithPresentationIdentifier:(long long)a0;
- (BOOL)isConnectedTo188;
- (void)presentationManager:(id)a0 didEncounterError:(long long)a1;
- (oneway void)activationRequestFromTestRunnerWithContext:(id)a0;
- (void)buttonLongPressFromButtonIdentifier:(long long)a0 context:(id)a1;
- (BOOL)requestOptionsBuilder:(id)a0 isAcousticIdAllowedWithActiviation:(id)a1;
- (void).cxx_destruct;
- (void)siriPresentationDisplayedWithIdentifier:(long long)a0;
- (id)_updateRequestOptionsWithTestingContextFromActivationRequest:(id)a0 requestOptions:(id)a1;
- (unsigned long long)requestOptionsBuilder:(id)a0 currentLockStateForActivation:(id)a1;
- (void)unregisterButtonEventListenerWithIdentifier:(id)a0;
- (void)_notifyListenersOfButtonLongPressWithButtonIdentifier:(long long)a0 atTimestamp:(double)a1;
- (id)init;
- (void)siriPresentationWillDismissWithIdentifier:(long long)a0;
- (BOOL)_shouldEyesFreeCancelScreenWakeForRequestOptions:(id)a0;
- (id)requestOptionsBuilder:(id)a0 optionsForOverriding:(id)a1 withActiviation:(id)a2;
- (void)_logActivationToPowerLogWithReason:(long long)a0;
- (id)_init;
- (void)_dismissSiri:(id)a0;
- (BOOL)_siriIsEnabled;
- (void)unregisterSiriPresentationIdentifier:(long long)a0;
- (void)_cancelPendingActivationEventWithReason:(unsigned long long)a0;
- (void)_preheatPresentation;
- (void)buttonUpFromButtonIdentifier:(long long)a0 deviceIdentifier:(id)a1 timestamp:(double)a2;
- (void)registerActivationAssertion:(id)a0 withIdentifier:(id)a1;
- (void)presentationManager:(id)a0 didChangeShouldRejectNewActivationsTo:(BOOL)a1;
- (BOOL)requestOptionsBuilder:(id)a0 isRequestInitialWithActiviation:(id)a1;
- (id)requestOptionsBuilder:(id)a0 uiPresentationIdentifierWithActivation:(id)a1 activationPresentation:(long long)a2;
- (BOOL)handleActivationRequest:(id)a0;
- (void)dismissSiriWithOptions:(id)a0;
- (void)activationRequestFromVoiceTriggerWithContext:(id)a0;
- (void)_attachToTether;
- (void)activationRequestFromBreadcrumb;
- (void)dealloc;
- (void)activationRequestFromTestingWithContext:(id)a0;
- (void)unregisterActivationSourceIdentifier:(id)a0;
- (void)_notifySourcesOfActiveChange:(BOOL)a0;
- (void)activationRequestFromDirectActionEventWithContext:(id)a0 completion:(id /* block */)a1;
- (void)shouldAbort:(id)a0;
- (void)callStateChangedToIsActive:(BOOL)a0 isOutgoing:(BOOL)a1;
- (void)registerButtonEventListenerServer:(id)a0 identifier:(id)a1;
- (void)activationRequestFromSimpleActivation:(long long)a0;
- (id)bulletinsOnLockScreen;
- (void)_recordTimeIfNeededForButtonIdentifier:(long long)a0 buttonDownTimestamp:(double)a1;
- (BOOL)_shouldRejectActivationWithButtonIdentifier:(long long)a0 activationAssertions:(id)a1;
- (BOOL)_buttonIsTVMicrophoneButton:(long long)a0;
- (void)buttonDownFromButtonIdentifier:(long long)a0 timestamp:(double)a1;

@end
