@class BRCSyncOperationBackoffRatio, BRCItemID, CKOperationGroup, BRCSyncDownOperation, BRCSyncBudgetThrottle, BRCAccountSession, NSMutableArray, NSString, NSMutableSet, BRCThrottleBase, NSError, NSMutableIndexSet, NSArray, NSMutableDictionary, brc_task_tracker, BRCPQLConnection, UMUserSyncTask, NSObject, BRCZoneRowID, BRCDeadlineSource, BRCServerZone, BRCCreateZoneAndSubscribeOperation, BRCSyncOperationThrottle, BRMangledID, NSDate, BRCSyncUpOperation;
@protocol BRCClientZoneDelegate, OS_dispatch_source, OS_dispatch_queue, NSObject;

@interface BRCClientZone : NSObject <BRCReachabilityDelegate, BRCZone> {
    NSString *_ownerName;
    BOOL _isInitialCreation;
    BRCThrottleBase *_readerThrottle;
    BRCCreateZoneAndSubscribeOperation *_createZoneOperation;
    NSObject<OS_dispatch_queue> *_createZoneQueue;
    NSMutableArray *_zoneCreationCompletionBlocks;
    long long _syncUpRetryAfter;
    _Atomic unsigned int _syncState;
    BRCSyncUpOperation *_syncUpOperation;
    NSError *_lastSyncUpError;
    BOOL _lastSyncUpErrorWasOnChainedItem;
    BRCSyncDownOperation *_syncDownOperation;
    id _syncDeadlineSourceResumer;
    NSError *_lastSyncDownError;
    BRCSyncOperationThrottle *_syncUpThrottle;
    BRCSyncBudgetThrottle *_syncUpBudget;
    BRCSyncOperationBackoffRatio *_syncUpBackoffRatio;
    BRCSyncOperationThrottle *_syncDownThrottle;
    NSMutableIndexSet *_appliedTombstoneRanks;
    NSDate *_lastSyncDownDate;
    NSObject<OS_dispatch_source> *_resetTimer;
    NSMutableDictionary *_syncDownBlockToPerformForBookmarkData;
    BOOL _shouldShowiCloudDriveAppInstallationNotification;
    NSMutableDictionary *_itemsBlockedByAssociationForCZMProcessing;
    NSMutableArray *_blocksWaitingOnCrossZoneMoveProcessing;
    NSMutableDictionary *_onDiskBlockToPerformForItemID;
    NSMutableDictionary *_downloadedBlockToPerformForItemID;
    NSMutableDictionary *_syncDownBlockToPerformForItemID;
    NSMutableArray *_nextSyncDownBarriers;
    NSMutableArray *_currentSyncDownBarriers;
    id<NSObject> _hasWorkDidUpdateObserver;
    NSMutableArray *_nextIdleHandlers;
    CKOperationGroup *_syncDownGroup;
    NSMutableArray *_syncDownDependencies;
    NSMutableArray *_allItemsDidUploadTrackers;
    float _syncUpBatchSizeMultiplier;
    UMUserSyncTask *_bubbleSyncTask;
}

@property (retain, nonatomic) BRCServerZone *serverZone;
@property (retain, nonatomic) NSDate *lastAttemptedSyncDownDate;
@property (readonly, nonatomic) NSString *zoneName;
@property (retain, nonatomic) id<BRCClientZoneDelegate> delegate;
@property (retain, nonatomic) BRCAccountSession *session;
@property (readonly, nonatomic) unsigned int state;
@property (readonly, nonatomic) BRCItemID *rootItemID;
@property (readonly, nonatomic) BRMangledID *mangledID;
@property (readonly, nonatomic) BRCPQLConnection *db;
@property (readonly, nonatomic) brc_task_tracker *taskTracker;
@property (readonly, nonatomic) BOOL isCloudDocsZone;
@property (readonly, nonatomic) NSString *osNameRequiredToSync;
@property (readonly, nonatomic) BOOL isForeground;
@property (readonly, nonatomic) BOOL activated;
@property (readonly, nonatomic) unsigned long long currentRequestID;
@property (readonly) unsigned int syncState;
@property (readonly, nonatomic) NSArray *syncThrottles;
@property (readonly, nonatomic) BRCDeadlineSource *syncDeadlineSource;
@property (readonly, nonatomic) BOOL hasHighPriorityWatchers;
@property (readonly, nonatomic) long long lastInsertedRank;
@property (readonly, nonatomic) unsigned int syncUpBatchSize;
@property (readonly, nonatomic) NSMutableSet *itemIDsBlockedFromSyncForCZMProcessing;
@property (readonly, nonatomic) NSMutableDictionary *parentsOfCZMFaults;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL needsSave;
@property (retain, nonatomic) BRCZoneRowID *dbRowID;
@property (readonly, nonatomic) BOOL isSharedZone;
@property (readonly, nonatomic) BOOL isPrivateZone;
@property (readonly, nonatomic) NSMutableDictionary *plist;

- (id)allItems;
- (void)setSyncStateBits:(unsigned int)a0;
- (long long)serverRankByItemID:(id)a0;
- (void)associateWithServerZone:(id)a0 offline:(BOOL)a1;
- (id)serverItemByParentID:(id)a0 andLogicalName:(id)a1;
- (id)faultByParentID:(id)a0 andLogicalName:(id)a1 db:(id)a2;
- (id)itemByRowID:(unsigned long long)a0 db:(id)a1;
- (id)ownerName;
- (id)_cancelAllOperationsForReset;
- (id)_faultsEnumeratorFromRow:(unsigned long long)a0 batchSize:(unsigned long long)a1;
- (void)scheduleSyncDownFirst;
- (BOOL)isSyncBlockedBecauseAppNotInstalled;
- (id /* block */)popOnDiskBlockForItemID:(id)a0;
- (void)scheduleSyncDownForOOBModifyRecordsAck;
- (id)itemByDocumentID:(unsigned int)a0 db:(id)a1;
- (BOOL)isSyncBlocked;
- (id)itemsWithInFlightDiffsEnumerator;
- (long long)throttleHashWithItemID:(id)a0;
- (void)cancelReset;
- (void)_markLatestSyncRequestFailed;
- (BOOL)hasCompletedInitialSyncDownOnce;
- (id)faultByParentID:(id)a0 andPhysicalName:(id)a1;
- (id)serverItemByRank:(long long)a0;
- (void)close;
- (id)reservedItemByParentID:(id)a0 andLogicalName:(id)a1 db:(id)a2;
- (void)notifyClient:(id)a0 afterNextSyncDown:(id /* block */)a1;
- (void)_performAfterResetServerAndClientTruthsAndUnlinkData:(id /* block */)a0;
- (void)createCloudKitZoneWithGroup:(id)a0 completion:(id /* block */)a1;
- (id)documentItemByItemID:(id)a0 db:(id)a1;
- (id)serverItemByRowID:(unsigned long long)a0;
- (BOOL)existsByParentID:(id)a0 andCaseInsensitiveLogicalName:(id)a1 db:(id)a2;
- (void)_mkdirAppLibraryIfNeeded:(id)a0;
- (id)serverItemByItemID:(id)a0;
- (void)_createCloudKitZoneWithGroup:(id)a0 completion:(id /* block */)a1;
- (BOOL)validateItemsLoggingToFile:(struct __sFILE { char *x0; int x1; int x2; short x3; short x4; struct __sbuf { char *x0; int x1; } x5; int x6; void *x7; void /* function */ *x8; void /* function */ *x9; void /* function */ *x10; void /* function */ *x11; struct __sbuf { char *x0; int x1; } x12; struct __sFILEX *x13; int x14; unsigned char x15[3]; unsigned char x16[1]; struct __sbuf { char *x0; int x1; } x17; int x18; long long x19; } *)a0 db:(id)a1;
- (id)syncUpAnalyticsError;
- (void)_removeTargetedAliasesWithCompletionBlock:(id /* block */)a0;
- (BOOL)hasInitialFaultsLive;
- (void)_performAfterResetServerAndClientSharedTruthsAndUnlinkData:(id /* block */)a0;
- (id)itemByFileID:(unsigned long long)a0;
- (void)_removeItemFromCZMProcessingIfNotAssociated:(id)a0;
- (void)_performResetAndWantsUnlink:(BOOL)a0 clientTruthBlock:(id /* block */)a1 completionBlock:(id /* block */)a2;
- (void)performBlock:(id /* block */)a0 whenSyncDownCompletesLookingForItemID:(id)a1;
- (void)scheduleResetServerAndClientTruthsForReason:(id)a0;
- (id)xattrForSignature:(id)a0 db:(id)a1;
- (BOOL)shouldSyncMangledID:(id)a0;
- (void)_allItemsDidUploadWithError:(id)a0;
- (BOOL)removeItemIsDownloadedBlock:(id)a0;
- (void)_finishedReset:(unsigned long long)a0 completionHandler:(id /* block */)a1;
- (void)clearStateBits:(unsigned int)a0;
- (void)_forDBUpgrade_setStateBits:(unsigned int)a0 clearStateBits:(unsigned int)a1;
- (id)itemByParentID:(id)a0 andLogicalName:(id)a1;
- (void)_performAfterResetServerAndClientPrivateTruthsAndUnlinkData:(id /* block */)a0;
- (void)waitForCrossZoneMoveProcessingWithCompletion:(id /* block */)a0;
- (id)itemByItemID:(id)a0 db:(id)a1;
- (BOOL)removeItemOnDiskBlock:(id)a0;
- (void)syncDownOperation:(id)a0 didFinishWithError:(id)a1 status:(long long)a2;
- (void)scheduleSyncDown;
- (BOOL)isSyncBlockedOrBrokenStructure;
- (void)removeSyncDownDependency:(id)a0;
- (float)syncUpBackoffDelay;
- (id)documentItemByItemID:(id)a0;
- (id)itemCountPendingUploadOrSyncUpAndReturnError:(id *)a0;
- (void)handleRootRecordDeletion;
- (id)itemByRowID:(unsigned long long)a0;
- (void)didSyncDownRequestID:(unsigned long long)a0 maxApplyRank:(long long)a1 caughtUpWithServer:(BOOL)a2 syncDownDate:(id)a3;
- (id)documentsNotIdleEnumeratorWithDB:(id)a0;
- (void)_dumpRecursivePropertiesOfItemByRowID:(unsigned long long)a0 context:(id)a1 depth:(int)a2;
- (id)_refreshItemFromDB:(id)a0;
- (void)clearSyncStateBits:(unsigned int)a0;
- (void)scheduleSyncUp;
- (id)itemsEnumeratorWithDB:(id)a0;
- (id)itemByParentID:(id)a0 andLogicalName:(id)a1 db:(id)a2;
- (void)_syncUpOfRecords:(id)a0 createdAppLibraryNames:(id)a1 didFinishWithError:(id)a2 errorWasOnPCSChainedItem:(BOOL)a3;
- (id)itemByFileID:(unsigned long long)a0 db:(id)a1;
- (void)_removeOnDiskBlockToPerformForItemID:(id)a0;
- (void)unregisterAllItemsDidUploadTracker:(id)a0;
- (BOOL)dumpStatusToContext:(id)a0 error:(id *)a1;
- (BOOL)hasInitialFaultsEverLive;
- (id)xattrForSignature:(id)a0;
- (void)beginSyncBubbleActivityIfNecessary;
- (id)itemByParentID:(id)a0 andPhysicalName:(id)a1;
- (void)disconnectNSMDQListenerAsync;
- (void)registerAllItemsDidUploadTracker:(id)a0;
- (BOOL)dumpTablesToContext:(id)a0 includeAllItems:(BOOL)a1 error:(id *)a2;
- (void)didApplyTombstoneForRank:(long long)a0;
- (void)addSyncDownDependency:(id)a0;
- (float)syncUpBackoffRatio;
- (void)clearSyncUpError;
- (id)faultByParentID:(id)a0 andLogicalName:(id)a1;
- (BOOL)setStateBits:(unsigned int)a0;
- (BOOL)validateStructureLoggingToFile:(struct __sFILE { char *x0; int x1; int x2; short x3; short x4; struct __sbuf { char *x0; int x1; } x5; int x6; void *x7; void /* function */ *x8; void /* function */ *x9; void /* function */ *x10; void /* function */ *x11; struct __sbuf { char *x0; int x1; } x12; struct __sFILEX *x13; int x14; unsigned char x15[3]; unsigned char x16[1]; struct __sbuf { char *x0; int x1; } x17; int x18; long long x19; } *)a0 db:(id)a1;
- (void).cxx_destruct;
- (void)signalFaultingWatchersWithError:(id)a0;
- (id)itemByItemID:(id)a0;
- (BOOL)isEqual:(id)a0;
- (BOOL)_dumpItemsToContext:(id)a0 includeAllItems:(BOOL)a1 error:(id *)a2;
- (void)itemCrossZoneMoved:(id)a0 withLookup:(id)a1;
- (void)itemMovedIntoShareInThisZone:(id)a0 associatedItemID:(id)a1;
- (void)_recreateSyncBudgetsAndThrottlesIfNeeded;
- (BOOL)supportsKeepingClientItemsDuringReset;
- (BOOL)existsByParentID:(id)a0 andCaseInsensitiveLogicalName:(id)a1;
- (void)_startSync;
- (id)init;
- (void)didGCTombstoneRanks:(id)a0;
- (void)performBlock:(id /* block */)a0 whenItemWithIDIsOnDisk:(id)a1;
- (id)initWithMangledID:(id)a0 dbRowID:(id)a1 db:(id)a2 plist:(id)a3 session:(id)a4 initialCreation:(BOOL)a5;
- (void)_decreaseSyncUpBatchSizeAfterError;
- (void)performBlock:(id /* block */)a0 whenItemWithIDIsDownloaded:(id)a1;
- (void)_performAfterResetServerAndClientTruthsAndUnlinkDataAndPurgeTheZone:(id /* block */)a0;
- (id)syncDownAnalyticsError;
- (id)serverItemByItemID:(id)a0 db:(id)a1;
- (void)_prepareForForegroundSyncDown;
- (BOOL)_crossZoneMoveDocumentsToZone:(id)a0;
- (void)_cancelSyncDownFromDBCorruption;
- (id)directoryOrRootItemIDByFileID:(unsigned long long)a0;
- (void)_enumerateFaultsWithBlock:(id /* block */)a0 rowID:(unsigned long long)a1 batchSize:(unsigned long long)a2;
- (id)reservedItemByParentID:(id)a0 andLogicalName:(id)a1;
- (void)_markRequestIDAcked;
- (id)syncDownImmediately;
- (BOOL)existsByItemID:(id)a0 db:(id)a1;
- (void)updateWithPlist:(id)a0;
- (void)enumerateFaultsAsyncWithBlock:(id /* block */)a0 batchSize:(unsigned long long)a1;
- (BOOL)isEqualToClientZone:(id)a0;
- (void)_reset:(unsigned long long)a0 completionHandler:(id /* block */)a1;
- (void)scheduleReset:(unsigned long long)a0 completionHandler:(id /* block */)a1;
- (void)_removeDownloadedBlockToPerformForItemID:(id)a0;
- (void)resume;
- (void)didClearOutOfQuota;
- (BOOL)dumpActivityToContext:(id)a0 includeExpensiveActivity:(BOOL)a1 error:(id *)a2;
- (void)flushAppliedTombstones;
- (void)scheduleSyncDownWithGroup:(id)a0;
- (char)itemTypeByItemID:(id)a0 db:(id)a1;
- (void)associateWithServerZone:(id)a0;
- (BOOL)isSyncBlockedBecauseOSNeedsUpgrade;
- (id)directoryOrRootItemIDByFileID:(unsigned long long)a0 db:(id)a1;
- (void)_appendToString:(id)a0 descriptionOfFieldNamed:(id)a1 inResultSet:(id)a2 pos:(int *)a3 containsSize:(BOOL)a4 context:(id)a5;
- (void)_removeItemAndProcessForCrossZoneMove:(id)a0;
- (void)dealloc;
- (BOOL)_resetItemsTable;
- (id)asPrivateClientZone;
- (void)resetSyncBudgetAndThrottle;
- (void)_fixupMissingCrossMovedItems;
- (id)itemsParentedToThisZoneButLivingInAnOtherZone;
- (BOOL)_hasAllItemsDidUploadHandlers;
- (void)_startDownloadingItemForCrossZoneMoveIfNecessary:(id)a0;
- (unsigned int)_activateState:(unsigned int)a0 origState:(unsigned int)a1;
- (id)sizeOfItemsNeedingSyncUpOrUploadAndReturnError:(id *)a0;
- (id)asSharedClientZone;
- (void)scheduleReset:(unsigned long long)a0;
- (BOOL)existsByItemID:(id)a0;
- (id)descriptionWithContext:(id)a0;
- (id)itemByParentID:(id)a0 andPhysicalName:(id)a1 db:(id)a2;
- (void)scheduleResetServerAndClientTruthsForReason:(id)a0 completionHandler:(id /* block */)a1;
- (void)_increaseSyncUpBatchSizeAfterSuccess;
- (BOOL)removeSyncDownForItemIDBlock:(id)a0;
- (void)resetSyncUpBackoffRatio;
- (void)networkReachabilityChanged:(BOOL)a0;
- (id)itemByDocumentID:(unsigned int)a0;
- (void)recomputeAllItemsDidUploadState;
- (void)learnCKInfosFromSavedRecords:(id)a0 isOutOfBandModifyRecords:(BOOL)a1;
- (long long)serverRankByItemID:(id)a0 db:(id)a1;
- (id /* block */)popDownloadedBlockForItemID:(id)a0;
- (id)serverItemByRowID:(unsigned long long)a0 db:(id)a1;
- (void)_removeAllShareAcceptanceBlocks;
- (void)_finishedProcessingItemThatMovedToThisZone:(id)a0;
- (id)serverItemByParentID:(id)a0 andLogicalName:(id)a1 db:(id)a2;
- (unsigned long long)nextSyncUpRequestID;
- (BOOL)handleZoneLevelErrorIfNeeded:(id)a0;
- (id)faultByParentID:(id)a0 andPhysicalName:(id)a1 db:(id)a2;

@end
