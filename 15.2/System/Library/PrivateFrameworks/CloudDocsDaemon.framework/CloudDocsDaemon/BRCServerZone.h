@class NSMutableDictionary, NSString, BRMangledID, BRCPendingChangesStream, BRCSyncContext, BRCAccountSession, BRCServerChangeState, CKRecordZoneID, BRCZoneRowID, BRCClientZone, BRCPQLConnection;

@interface BRCServerZone : NSObject <BRCJobsMatching, BRCZone> {
    BRCSyncContext *_metadataSyncContext;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) BRCServerChangeState *changeState;
@property (readonly, nonatomic) BRCClientZone *clientZone;
@property (retain, nonatomic) BRCAccountSession *session;
@property (readonly, nonatomic) NSString *zoneName;
@property (readonly, nonatomic) NSString *ownerName;
@property (readonly, nonatomic) CKRecordZoneID *zoneID;
@property (readonly, nonatomic) BRCSyncContext *metadataSyncContext;
@property (readonly, nonatomic) BRCSyncContext *metadataSyncContextIfExists;
@property (readonly, nonatomic) BRMangledID *mangledID;
@property (readonly, nonatomic) BRCPendingChangesStream *pendingChanges;
@property (readonly, nonatomic) unsigned int state;
@property (readonly) BOOL isCloudDocsZone;
@property (nonatomic) BOOL needsSave;
@property (retain, nonatomic) BRCZoneRowID *dbRowID;
@property (readonly, nonatomic) BOOL isSharedZone;
@property (readonly, nonatomic) BOOL isPrivateZone;
@property (readonly, nonatomic) BRCPQLConnection *db;
@property (readonly, nonatomic) NSMutableDictionary *plist;

- (id)matchingJobsWhereSQLClause;
- (id)jobsDescription;
- (BOOL)validateItemsLoggingToFile:(struct __sFILE { char *x0; int x1; int x2; short x3; short x4; struct __sbuf { char *x0; int x1; } x5; int x6; void *x7; void /* function */ *x8; void /* function */ *x9; void /* function */ *x10; void /* function */ *x11; struct __sbuf { char *x0; int x1; } x12; struct __sFILEX *x13; int x14; unsigned char x15[3]; unsigned char x16[1]; struct __sbuf { char *x0; int x1; } x17; int x18; long long x19; } *)a0 db:(id)a1;
- (id)initWithMangledID:(id)a0 dbRowID:(id)a1 plist:(id)a2 session:(id)a3;
- (id)asSharedZone;
- (void)clearStateBits:(unsigned int)a0;
- (id)itemByItemID:(id)a0 db:(id)a1;
- (void)removeForegroundClient:(id)a0;
- (id)itemsEnumeratorWithDB:(id)a0;
- (id)deleteAllContentsOperation;
- (BOOL)dumpStatusToContext:(id)a0 error:(id *)a1;
- (id)xattrForSignature:(id)a0;
- (BOOL)dumpTablesToContext:(id)a0 includeAllItems:(BOOL)a1 error:(id *)a2;
- (BOOL)setStateBits:(unsigned int)a0;
- (BOOL)validateStructureLoggingToFile:(struct __sFILE { char *x0; int x1; int x2; short x3; short x4; struct __sbuf { char *x0; int x1; } x5; int x6; void *x7; void /* function */ *x8; void /* function */ *x9; void /* function */ *x10; void /* function */ *x11; struct __sbuf { char *x0; int x1; } x12; struct __sFILEX *x13; int x14; unsigned char x15[3]; unsigned char x16[1]; struct __sbuf { char *x0; int x1; } x17; int x18; long long x19; } *)a0 db:(id)a1;
- (void).cxx_destruct;
- (id)itemByItemID:(id)a0;
- (BOOL)isEqual:(id)a0;
- (void)deleteAllContentsOnServerWithCompletionBlock:(id /* block */)a0;
- (id)asPrivateZone;
- (BOOL)allocateRanksWhenCaughtUp:(BOOL)a0;
- (id)descriptionWithContext:(id)a0;
- (void)addForegroundClient:(id)a0;
- (BOOL)resetServerTruth;
- (void)destroyPendingChangesDBOnQueue:(BOOL)a0;
- (void)forceMoveToCloudDocs;
- (void)scheduleMoveToCloudDocs;
- (BOOL)serverZoneIsCreated;
- (BOOL)shouldRecreateServerZoneAfterError:(id)a0;
- (BOOL)_saveItemID:(id)a0 stat:(id)a1 serverMetrics:(id)a2 record:(id)a3 origName:(id)a4 base:(id)a5 no:(id)a6 ext:(id)a7;
- (BOOL)_saveItemID:(id)a0 stat:(id)a1 serverMetrics:(id)a2 record:(id)a3 error:(id *)a4;
- (BOOL)_saveItemID:(id)a0 version:(id)a1 record:(id)a2 iWorkSharingOptions:(unsigned long long)a3;
- (BOOL)_saveEditedDirOrDocStructureRecord:(id)a0 error:(id *)a1;
- (BOOL)_saveEditedAliasRecord:(id)a0 zonesNeedingAllocRanks:(id)a1 error:(id *)a2;
- (BOOL)_saveEditedSymlinkRecord:(id)a0 error:(id *)a1;
- (BOOL)_saveEditedFinderBookmarkRecord:(id)a0 error:(id *)a1;
- (BOOL)_saveEditedDocumentContentRecord:(id)a0 error:(id *)a1;
- (BOOL)_saveEditedShareRecord:(id)a0 error:(id *)a1;
- (BOOL)_saveEditedRecord:(id)a0 zonesNeedingAllocRanks:(id)a1 error:(id *)a2;
- (void)_reportCantSaveProblem:(id)a0 record:(id)a1;
- (BOOL)_markItemDeadForRecordID:(id)a0;
- (BOOL)_markShareIDDead:(id)a0;
- (id)_structurePrefixForType:(char)a0;
- (void)handleBrokenStructure;
- (BOOL)_recoverFromCorruptShareOptionsWithItemType:(char)a0 itemID:(id)a1 parentID:(id)a2 sharingOptions:(unsigned long long)a3;
- (unsigned long long)_saveInconsistentStateWithRequestID:(unsigned long long)a0 serverChangeToken:(id)a1 editedRecords:(id)a2 deletedRecordIDs:(id)a3 deletedShareRecordIDs:(id)a4 syncStatus:(long long)a5;
- (BOOL)_savePendingChangesEditedStructureRecordsIgnoringRecordIDs:(id)a0 zonesNeedingAllocRanks:(id)a1;
- (BOOL)_savePendingChangesDeletedRecordIDsIgnoringRecordIDs:(id)a0;
- (BOOL)_saveEditedStructureRecords:(id)a0 zonesNeedingAllocRanks:(id)a1;
- (BOOL)_saveDeletedRecordIDs:(id)a0;
- (BOOL)_savePendingChangesEditedContentRecordsIgnoringRecordIDs:(id)a0 zonesNeedingAllocRanks:(id)a1;
- (BOOL)_saveEditedContentRecords:(id)a0 zonesNeedingAllocRanks:(id)a1;
- (BOOL)_savePendingChangesSharesIgnoringRecordIDs:(id)a0 zonesNeedingAllocRanks:(id)a1;
- (BOOL)_saveEditedShareRecords:(id)a0 deletedShareRecordIDs:(id)a1 zonesNeedingAllocRanks:(id)a2;
- (void)_collectTombstoneForRank:(unsigned long long)a0;
- (BOOL)resetServerTruthAndDestroyZone:(BOOL)a0;
- (void)activateWithClientZone:(id)a0 offline:(BOOL)a1;
- (void)deactivateFromClientZone;
- (BOOL)hasXattrWithSignature:(id)a0;
- (BOOL)storeXattr:(id)a0;
- (unsigned long long)didSyncDownRequestID:(unsigned long long)a0 serverChangeToken:(id)a1 editedRecords:(id)a2 deletedRecordIDs:(id)a3 deletedShareRecordIDs:(id)a4 movedZoneNames:(id)a5 allocRankZones:(id *)a6 syncStatus:(long long)a7 savedDirectly:(BOOL *)a8;
- (void)collectTombstoneRanks:(id)a0;
- (void)saveQueryRecords:(id)a0;
- (id)directDirectoryChildItemIDsOfParentEnumerator:(id)a0;

@end
