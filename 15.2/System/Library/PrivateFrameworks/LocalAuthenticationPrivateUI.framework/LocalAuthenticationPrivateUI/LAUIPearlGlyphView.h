@class LAUIMetalRenderLoop, NSString, UIView, LAUICheckmarkLayer, CALayer, CAShapeLayer, LAUICubicBSplineRenderer, LAUIPearlGlyphViewStaticResources, UIColor;
@protocol LAUIPearlGlyphViewDelegate;

@interface LAUIPearlGlyphView : UIView <LAUIMetalRenderLoopDelegate> {
    LAUIPearlGlyphViewStaticResources *_sharedResources;
    double _maximumFramerate;
    double _scale;
    LAUICheckmarkLayer *_checkmarkLayer;
    BOOL _delegateRespondsToWillRender;
    UIView *_containerView;
    LAUIMetalRenderLoop *_renderLoop;
    CALayer *_layer;
    BOOL _invalidated;
    BOOL _rendererPaused;
    BOOL _inWindow;
    unsigned long long _externalAnimationCount;
    double _overdrawRatio;
    struct CGSize { double width; double height; } _boundsSize;
    struct CGSize { double width; double height; } _drawableSize;
    BOOL _contentLayerNeedsMaskUpdate;
    CAShapeLayer *_contentLayerMask;
    LAUICubicBSplineRenderer *_renderer;
    BOOL _modelDirty;
    BOOL _panning;
    double _lastUpdateTime;
    BOOL _animating;
    unsigned long long _cornerID;
    struct unordered_map<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>>>> { struct __hash_table<std::__hash_value_type<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 6>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>> { float __value_; } __p3_; } __table_; } _cornerStates;
    struct set<unsigned long, std::less<unsigned long>, std::allocator<unsigned long>> { struct __tree<unsigned long, std::less<unsigned long>, std::allocator<unsigned long>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<unsigned long, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::less<unsigned long>> { unsigned long long __value_; } __pair3_; } __tree_; } _duplicateCornerIdentifiers;
    void /* unknown type, empty encoding */ _ringPoint;
    unsigned long long _eyeID;
    unsigned long long _noseID;
    unsigned long long _mouthID;
    struct unordered_map<unsigned long, std::unordered_map<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_map<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>>>>> { struct __hash_table<std::__hash_value_type<unsigned long, std::unordered_map<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_map<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_map<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_map<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>>>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_map<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_map<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>>>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_map<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_map<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>>>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_map<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>>>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_map<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>>>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_map<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_map<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>>>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_map<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>>>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_map<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_map<unsigned long, std::array<LAUI_uniform_cubic_b_spline_renderer::spline_instance_state, 3>>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>> { float __value_; } __p3_; } __table_; } _faceStates;
    struct double4x4 { void /* unknown type, empty encoding */ columns[4]; } _cameraTransform;
    struct map<unsigned long, std::set<unsigned long>, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, std::set<unsigned long>>>> { struct __tree<std::__value_type<unsigned long, std::set<unsigned long>>, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, std::set<unsigned long>>, std::less<unsigned long>, true>, std::allocator<std::__value_type<unsigned long, std::set<unsigned long>>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned long, std::set<unsigned long>>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, std::set<unsigned long>>, std::less<unsigned long>, true>> { unsigned long long __value_; } __pair3_; } __tree_; } _rendererIdentifiers;
    struct global_state { float accumulator_growth; float accumulator_persistence; float accumulator_luminance_alpha_factor; float blur_scale; float k; float epsilon; } _normalRenderState;
    struct global_state { float accumulator_growth; float accumulator_persistence; float accumulator_luminance_alpha_factor; float blur_scale; float k; float epsilon; } _blurredRenderState;
    void /* unknown type, empty encoding */ _idleColor;
    void /* unknown type, empty encoding */ _defaultColor;
    void /* unknown type, empty encoding */ _oscillatingColor;
    void /* unknown type, empty encoding */ _successColor;
    void /* unknown type, empty encoding */ _processingColor;
    void /* unknown type, empty encoding */ _finishedColor;
    BOOL _finishedColorOverridden;
    BOOL _reduceBlur;
    long long _priorState;
    BOOL _changingState;
    BOOL _stateChangeAnimated;
    unsigned long long _stateChangeCounter;
    struct vector<void (^)(bool), std::allocator<void (^)(bool)>> { id /* block */ *__begin_; id /* block */ *__end_; struct __compressed_pair<void (^__strong *)(bool), std::allocator<void (^)(bool)>> { id /* block */ *__value_; } __end_cap_; } _completionHandlers;
    struct CGColorSpace { } *_colorSpace;
}

@property (nonatomic) BOOL inApplicationContext;
@property (readonly, nonatomic) long long style;
@property (readonly, nonatomic) UIColor *finishedColor;
@property (readonly, nonatomic) BOOL hideFace;
@property (readonly, nonatomic) long long state;
@property (nonatomic, getter=isPaused) BOOL paused;
@property (nonatomic) BOOL feedbackEnabled;
@property (readonly, nonatomic) CALayer *contentLayer;
@property (weak, nonatomic) id<LAUIPearlGlyphViewDelegate> delegate;
@property (nonatomic, getter=isWireframeEnabled) BOOL wireframeEnabled;
@property (nonatomic) struct { void /* unknown type, empty encoding */ x0[4]; } modelTransform;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedStaticResources;
+ (void)invokeSuccessFeedback;
+ (id)collectPipelineDescriptors;

- (void)layoutSubviews;
- (void)applicationDidBecomeActive:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)initWithStyle:(long long)a0;
- (void).cxx_destruct;
- (void)setState:(long long)a0 animated:(BOOL)a1;
- (id)init;
- (void)setStyle:(long long)a0 animated:(BOOL)a1;
- (void)invalidate;
- (void)dealloc;
- (void)didMoveToWindow;
- (id).cxx_construct;
- (void)setFinishedColor:(id)a0 animated:(BOOL)a1;
- (void)setState:(long long)a0 animated:(BOOL)a1 withCompletion:(id /* block */)a2;
- (void)setHideFace:(BOOL)a0 animated:(BOOL)a1;
- (void)_executeCompletionHandlers:(BOOL)a0;
- (void)setInApplicationContext:(BOOL)a0;
- (void)renderLoop:(id)a0 drawAtTime:(double)a1;
- (BOOL)inApplicationContext;
- (void)renderLoop:(id)a0 drawableSizeDidChange:(struct CGSize { double x0; double x1; })a1;
- (void)_applyStyle;
- (void)reduceTransparencyDidChange:(id)a0;
- (void)reduceMotionDidChange:(id)a0;
- (void)_updateReduceBlurState;
- (void)_createStates;
- (void)_applyBlurRadius;
- (void)_applyStateAnimated:(BOOL)a0;
- (void /* unknown type, empty encoding */)_extractColorVectorFromColor:(id)a0;
- (void)_applyCheckmarkColor;
- (void)_updateRendererPaused:(BOOL)a0;
- (void)purgeBuffers;
- (void)beginExternalAnimation;
- (void)endExternalAnimation;

@end
