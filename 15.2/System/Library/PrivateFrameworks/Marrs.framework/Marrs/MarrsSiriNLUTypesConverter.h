@interface MarrsSiriNLUTypesConverter : NSObject

+ (struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; })NSString2StdString:(id)a0;
+ (id)stdString2NSString:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; })a0;
+ (struct vector<std::string, std::allocator<std::string>> { void *x0; void *x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void *x0; } x2; })NSMutableArrayNSString2StdVectorStdString:(id)a0;
+ (id)StdVectorStdString2NSMutableArrayNSString:(struct vector<std::string, std::allocator<std::string>> { void *x0; void *x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void *x0; } x2; })a0;
+ (struct QRToken { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct vector<std::string, std::allocator<std::string>> { void *x0; void *x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void *x0; } x2; } x2; BOOL x3; BOOL x4; unsigned long long x5; unsigned long long x6; double x7; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x8; BOOL x9; })internalTokentoPluginToken:(id)a0;
+ (struct QRToken { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct vector<std::string, std::allocator<std::string>> { void *x0; void *x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void *x0; } x2; } x2; BOOL x3; BOOL x4; unsigned long long x5; unsigned long long x6; double x7; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x8; BOOL x9; })toPluginToken:(id)a0;
+ (struct Uuid { unsigned long long x0; unsigned long long x1; })toPluginUuid:(id)a0;
+ (id)internalTokenfromPluginToken:(struct QRToken { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct vector<std::string, std::allocator<std::string>> { void *x0; void *x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void *x0; } x2; } x2; BOOL x3; BOOL x4; unsigned long long x5; unsigned long long x6; double x7; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x8; BOOL x9; })a0;
+ (id)fromPluginToken:(struct QRToken { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct vector<std::string, std::allocator<std::string>> { void *x0; void *x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void *x0; } x2; } x2; BOOL x3; BOOL x4; unsigned long long x5; unsigned long long x6; double x7; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x8; BOOL x9; })a0;
+ (id)fromPluginUuid:(struct Uuid { unsigned long long x0; unsigned long long x1; })a0;
+ (struct QRUtterance { struct Uuid { unsigned long long x0; unsigned long long x1; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct vector<marrs::qr::orchestration::QRToken, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken *x0; struct QRToken *x1; struct __compressed_pair<marrs::qr::orchestration::QRToken *, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken *x0; } x2; } x2; struct vector<marrs::qr::orchestration::QRToken, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken *x0; struct QRToken *x1; struct __compressed_pair<marrs::qr::orchestration::QRToken *, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken *x0; } x2; } x3; double x4; })toPluginUtterance:(id)a0;
+ (id)fromPluginUtterance:(struct QRUtterance { struct Uuid { unsigned long long x0; unsigned long long x1; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct vector<marrs::qr::orchestration::QRToken, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken *x0; struct QRToken *x1; struct __compressed_pair<marrs::qr::orchestration::QRToken *, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken *x0; } x2; } x2; struct vector<marrs::qr::orchestration::QRToken, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken *x0; struct QRToken *x1; struct __compressed_pair<marrs::qr::orchestration::QRToken *, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken *x0; } x2; } x3; double x4; })a0;
+ (int)fromPluginQRRewriteType:(int)a0;
+ (struct QRInteraction { struct vector<marrs::qr::orchestration::QRUtterance, std::allocator<marrs::qr::orchestration::QRUtterance>> { struct QRUtterance *x0; struct QRUtterance *x1; struct __compressed_pair<marrs::qr::orchestration::QRUtterance *, std::allocator<marrs::qr::orchestration::QRUtterance>> { struct QRUtterance *x0; } x2; } x0; struct vector<marrs::qr::orchestration::QRUtterance, std::allocator<marrs::qr::orchestration::QRUtterance>> { struct QRUtterance *x0; struct QRUtterance *x1; struct __compressed_pair<marrs::qr::orchestration::QRUtterance *, std::allocator<marrs::qr::orchestration::QRUtterance>> { struct QRUtterance *x0; } x2; } x1; struct vector<marrs::qr::orchestration::QRToken, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken *x0; struct QRToken *x1; struct __compressed_pair<marrs::qr::orchestration::QRToken *, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken *x0; } x2; } x2; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x3; BOOL x4; unsigned long long x5; })toPluginInteraction:(id)a0;
+ (id)fromPluginHypothesis:(struct QRHypothesis { struct Uuid { unsigned long long x0; unsigned long long x1; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; double x2; int x3; })a0;
+ (int)fromPluginQRRepetitionType:(int)a0;
+ (id)fromPluginInteraction:(struct QRInteraction { struct vector<marrs::qr::orchestration::QRUtterance, std::allocator<marrs::qr::orchestration::QRUtterance>> { struct QRUtterance *x0; struct QRUtterance *x1; struct __compressed_pair<marrs::qr::orchestration::QRUtterance *, std::allocator<marrs::qr::orchestration::QRUtterance>> { struct QRUtterance *x0; } x2; } x0; struct vector<marrs::qr::orchestration::QRUtterance, std::allocator<marrs::qr::orchestration::QRUtterance>> { struct QRUtterance *x0; struct QRUtterance *x1; struct __compressed_pair<marrs::qr::orchestration::QRUtterance *, std::allocator<marrs::qr::orchestration::QRUtterance>> { struct QRUtterance *x0; } x2; } x1; struct vector<marrs::qr::orchestration::QRToken, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken *x0; struct QRToken *x1; struct __compressed_pair<marrs::qr::orchestration::QRToken *, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken *x0; } x2; } x2; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x3; BOOL x4; unsigned long long x5; })a0;
+ (struct unique_ptr<marrs::qr::orchestration::QRRequest, std::default_delete<marrs::qr::orchestration::QRRequest>> { struct __compressed_pair<marrs::qr::orchestration::QRRequest *, std::default_delete<marrs::qr::orchestration::QRRequest>> { struct QRRequest *x0; } x0; })toPluginRequestPtr:(id)a0;
+ (struct QRRequest { struct Uuid { unsigned long long x0; unsigned long long x1; } x0; struct vector<marrs::qr::orchestration::QRInteraction, std::allocator<marrs::qr::orchestration::QRInteraction>> { struct QRInteraction *x0; struct QRInteraction *x1; struct __compressed_pair<marrs::qr::orchestration::QRInteraction *, std::allocator<marrs::qr::orchestration::QRInteraction>> { struct QRInteraction *x0; } x2; } x1; })toPluginRequestObj:(id)a0;
+ (id)fromPluginResponsePtr:(const void *)a0;
+ (id)fromPluginResponseObj:(const void *)a0;

@end
