@interface TSPRegistry : NSObject {
    struct unordered_map<unsigned int, const google::protobuf::Message *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, const google::protobuf::Message *>>> { struct __hash_table<std::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, const google::protobuf::Message *>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>> { float __value_; } __p3_; } __table_; } _messageTypeToPrototypeMap;
    struct unordered_map<const google::protobuf::Descriptor *, unsigned int, TSP::DescriptorHash, std::equal_to<const google::protobuf::Descriptor *>, std::allocator<std::pair<const google::protobuf::Descriptor *const, unsigned int>>> { struct __hash_table<std::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, std::__unordered_map_hasher<const google::protobuf::Descriptor *, std::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, TSP::DescriptorHash, std::equal_to<const google::protobuf::Descriptor *>, true>, std::__unordered_map_equal<const google::protobuf::Descriptor *, std::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, std::equal_to<const google::protobuf::Descriptor *>, TSP::DescriptorHash, true>, std::allocator<std::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<const google::protobuf::Descriptor *, std::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, TSP::DescriptorHash, std::equal_to<const google::protobuf::Descriptor *>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<const google::protobuf::Descriptor *, std::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, std::equal_to<const google::protobuf::Descriptor *>, TSP::DescriptorHash, true>> { float __value_; } __p3_; } __table_; } _descriptorToMessageTypeMap;
    struct unordered_map<unsigned int, const char *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, const char *>>> { struct __hash_table<std::__hash_value_type<unsigned int, const char *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, const char *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, const char *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, const char *>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, const char *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, const char *>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, const char *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, const char *>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, const char *>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, const char *>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, const char *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, const char *>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, const char *>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, const char *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, const char *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>> { float __value_; } __p3_; } __table_; } _messageTypeToClassnameMap;
    struct unordered_map<const char *, unsigned int, TSP::CStringHash, TSP::CStringEqualTo, std::allocator<std::pair<const char *const, unsigned int>>> { struct __hash_table<std::__hash_value_type<const char *, unsigned int>, std::__unordered_map_hasher<const char *, std::__hash_value_type<const char *, unsigned int>, TSP::CStringHash, TSP::CStringEqualTo, true>, std::__unordered_map_equal<const char *, std::__hash_value_type<const char *, unsigned int>, TSP::CStringEqualTo, TSP::CStringHash, true>, std::allocator<std::__hash_value_type<const char *, unsigned int>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const char *, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const char *, unsigned int>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const char *, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const char *, unsigned int>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const char *, unsigned int>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const char *, unsigned int>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const char *, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<const char *, unsigned int>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<const char *, unsigned int>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<const char *, std::__hash_value_type<const char *, unsigned int>, TSP::CStringHash, TSP::CStringEqualTo, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<const char *, std::__hash_value_type<const char *, unsigned int>, TSP::CStringEqualTo, TSP::CStringHash, true>> { float __value_; } __p3_; } __table_; } _classnameToMessageTypeMap;
    struct unordered_map<unsigned int, __unsafe_unretained Class, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, __unsafe_unretained Class>>> { struct __hash_table<std::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, __unsafe_unretained Class>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>> { float __value_; } __p3_; } __table_; } _messageTypeToClassMap;
}

+ (id)sharedRegistry;
+ (void)setInitializationHandler:(id /* block */)a0;

- (id)description;
- (void).cxx_destruct;
- (id)init;
- (void)dealloc;
- (id).cxx_construct;
- (void)setMessageType:(unsigned int)a0 messagePrototype:(const struct Message { void /* function */ **x0; struct InternalMetadata { void *x0; } x1; } *)a1 descriptor:(const void *)a2 unarchiveClassname:(const char *)a3;
- (void)setUpgradeMessageType:(unsigned int)a0 messagePrototype:(const struct Message { void /* function */ **x0; struct InternalMetadata { void *x0; } x1; } *)a1 unarchiveClassname:(const char *)a2;
- (void)setOverrideMessageType:(unsigned int)a0 messagePrototype:(const struct Message { void /* function */ **x0; struct InternalMetadata { void *x0; } x1; } *)a1 descriptor:(const void *)a2 unarchiveClassname:(const char *)a3;
- (void)setDeprecatedMessageType:(unsigned int)a0;
- (unsigned int)messageTypeForUnarchiveClassname:(const char *)a0;
- (const struct Message { void /* function */ **x0; struct InternalMetadata { void *x0; } x1; } *)messagePrototypeForMessageType:(unsigned int)a0;
- (unsigned int)messageTypeForDescriptor:(const void *)a0;
- (void)registerPersistenceMessages;
- (void)setUpgradeMessageType:(unsigned int)a0 messagePrototype:(const struct Message { void /* function */ **x0; struct InternalMetadata { void *x0; } x1; } *)a1 unarchiveClass:(Class)a2 unarchiveClassname:(const char *)a3;
- (void)resetForMessageType:(unsigned int)a0 descriptor:(const void *)a1;
- (void)setMessageType:(unsigned int)a0 forUnarchiveClassname:(const char *)a1;
- (void)setOverrideMessageType:(unsigned int)a0 messagePrototype:(const struct Message { void /* function */ **x0; struct InternalMetadata { void *x0; } x1; } *)a1 descriptor:(const void *)a2;
- (Class)unarchiveClassForMessageType:(unsigned int)a0;

@end
