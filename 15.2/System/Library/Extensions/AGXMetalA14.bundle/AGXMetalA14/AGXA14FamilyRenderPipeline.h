@class AGXA14FamilyVertexProgram, NSString, AGXA14FamilyDevice, AGXA14FamilyBuffer, MTLDebugInstrumentationData, AGXA14FamilyFragmentProgram;
@protocol MTLDevice;

@interface AGXA14FamilyRenderPipeline : _MTLRenderPipelineState <MTLRenderPipelineStateSPI> {
    struct RenderPipeline { struct FragmentProgramVariant *fragment_variant; struct VertexProgramVariant *vertex_variant; struct TileProgramVariant *tile_variant; struct ObjectProgramVariant *object_variant; struct MeshProgramVariant *mesh_variant; struct IOGPUResourceInfo { struct __IOSurface *iosurface; unsigned long resourceSize : 56; unsigned char iosurfaceField : 8; unsigned int resourceID; } resource_info[12]; unsigned int resource_info_count; unsigned int vertex_resource_mask; unsigned int fragment_resource_mask; unsigned int object_resource_mask; unsigned int mesh_resource_mask; BOOL owns_variants; unsigned int max_vertex_amplification_count; float sample_coverage; unsigned int sample_mask; unsigned int sample_count; BOOL rasterization_enabled; BOOL render_tile_pipeline; int tess_winding; int tess_partition_mode; int tess_resource_type; int tess_factor_step_function; int tess_factor_format; unsigned int max_tessellation_factor; BOOL tessellation_factor_scale_enabled; BOOL finalized; BOOL supports_indirect_command_buffers; BOOL requires_binary_linking_bindings; BOOL descendent_pipeline; struct ISPTokenIndirect { union _AgxPppStateHeader { unsigned int all; unsigned char bytes[4]; struct { unsigned char PresFrgCommonCtl : 1; unsigned char PresFrgCommonCtlPso : 1; unsigned char PresFrgFaceCtlF : 1; unsigned char PresFrgFaceCtlFPso : 1; unsigned char PresFrgFaceStencilF : 1; unsigned char PresFrgFaceCtlB : 1; unsigned char PresFrgFaceCtlBPso : 1; unsigned char PresFrgFaceStencilB : 1; unsigned char PresFrgDbsc : 1; unsigned char ViewportStateIs16 : 1; unsigned char PresRegionClip : 1; unsigned char PresViewport : 1; unsigned char ViewportCount : 4; unsigned char PresWclamp : 1; unsigned char PresOutselects : 1; unsigned char PresVaryingWord0 : 1; unsigned char PresVaryingWord1 : 1; unsigned char PresFrgUscEsl2 : 1; unsigned char PresPppctrl : 1; unsigned char PresPppctrlPso : 1; unsigned char PresFrgShaderWords : 1; unsigned char PresFrgVisQueryTagFlush : 1; unsigned char PresFrgVisQueryTagFlushPso : 1; unsigned char PresVsAmplifyCtrl : 1; unsigned char PresVsOutputSize : 1; unsigned char PresAmplifyVaryingWords : 1; unsigned char LastPipe : 1; unsigned char ContextSwitch : 1; unsigned char Terminate : 1; } bits; } header; union _AgxPppStateFrgCommonCtlPso { unsigned int all; unsigned char bytes[4]; struct { unsigned char FrontFaceDir : 1; unsigned char Cullmode : 2; unsigned char RSVD0 : 4; unsigned char InBatchWindow : 1; unsigned char TagsortFlushCtl : 2; unsigned char RSVD1 : 3; unsigned char TagsortAccumDisable : 1; unsigned char Visbool : 1; unsigned char Vistest : 1; unsigned char Scenable : 1; unsigned char Dbenable : 1; unsigned char FaceStencilPres : 1; unsigned char TwoSided : 1; unsigned char RectWarpDisable : 1; unsigned char Tagwritedisable : 1; unsigned char TwoPassFbOpa : 1; unsigned char MidRenderCompute : 1; unsigned char RSVD2 : 1; unsigned char SampleMaskSelect : 1; unsigned char TriMergeDisable : 1; unsigned char OverlapCheckMode : 1; unsigned char UscEsl2 : 1; unsigned char Passtype : 3; } bits; } ctl; union _AgxPppStateFrgFaceCtlFPso { unsigned int all; unsigned char bytes[4]; struct { unsigned char Sref : 8; unsigned short Pointlinewidth : 10; unsigned char FillModeOverride : 2; unsigned char Linefilllastpixel : 1; unsigned char Dwritedisable : 1; unsigned char FsDepthDirQual : 2; unsigned char Dcmpmode : 3; unsigned char RSVD0 : 1; unsigned char Objtype : 4; } bits; } fa; union _AgxPppStateFrgFaceCtlBPso { unsigned int all; unsigned char bytes[4]; struct { unsigned char Sref : 8; unsigned short Pointlinewidth : 10; unsigned char FillModeOverride : 2; unsigned char Linefilllastpixel : 1; unsigned char Dwritedisable : 1; unsigned char FsDepthDirQual : 2; unsigned char Dcmpmode : 3; unsigned char RSVD0 : 1; unsigned char Objtype : 4; } bits; } ba; union _AgxPppStateFrgVisQueryTagFlushPso { unsigned int all; unsigned char bytes[4]; struct { unsigned int TagsortFlushData : 17; unsigned short VisQueryIndex : 15; } bits; } vis_query_tag_flush; } isp_state; struct CullTokenIndirect { union _AgxPppStateHeader { unsigned int all; unsigned char bytes[4]; struct { unsigned char PresFrgCommonCtl : 1; unsigned char PresFrgCommonCtlPso : 1; unsigned char PresFrgFaceCtlF : 1; unsigned char PresFrgFaceCtlFPso : 1; unsigned char PresFrgFaceStencilF : 1; unsigned char PresFrgFaceCtlB : 1; unsigned char PresFrgFaceCtlBPso : 1; unsigned char PresFrgFaceStencilB : 1; unsigned char PresFrgDbsc : 1; unsigned char ViewportStateIs16 : 1; unsigned char PresRegionClip : 1; unsigned char PresViewport : 1; unsigned char ViewportCount : 4; unsigned char PresWclamp : 1; unsigned char PresOutselects : 1; unsigned char PresVaryingWord0 : 1; unsigned char PresVaryingWord1 : 1; unsigned char PresFrgUscEsl2 : 1; unsigned char PresPppctrl : 1; unsigned char PresPppctrlPso : 1; unsigned char PresFrgShaderWords : 1; unsigned char PresFrgVisQueryTagFlush : 1; unsigned char PresFrgVisQueryTagFlushPso : 1; unsigned char PresVsAmplifyCtrl : 1; unsigned char PresVsOutputSize : 1; unsigned char PresAmplifyVaryingWords : 1; unsigned char LastPipe : 1; unsigned char ContextSwitch : 1; unsigned char Terminate : 1; } bits; } header; float w_clamp; union _AgxPppStatePppCtrlPso { unsigned int all; unsigned char bytes[4]; struct { unsigned char Cullmode : 2; unsigned char RSVD0 : 2; unsigned char Wbuffen : 1; unsigned char Wclampen : 1; unsigned char Pretransform : 1; unsigned char FlatshadeVtx : 2; unsigned char Drawclippededges : 1; unsigned char ClipMode : 2; unsigned char PrimitiveIdPres : 1; unsigned char RSVD1 : 2; unsigned char PrimMsaa : 1; unsigned char FrontFaceDir : 1; unsigned char RasterizerDiscard : 1; unsigned short RSVD2 : 14; } bits; } ctl; } cull_state; struct RenderPipeline *sw_tessellation_pipelines[3]; BOOL mesh_pipeline; struct ComputeSize3D { unsigned int x; unsigned int y; unsigned int z; } os_tg_dims; struct ComputeSize3D { unsigned int x; unsigned int y; unsigned int z; } ms_tg_dims; struct ComputeSize3D { unsigned int x; unsigned int y; unsigned int z; } max_mesh_tgs; unsigned int payload_buff_size; struct ExecuteIndirectPipelineState { unsigned long long pipeline_state_gpu_address; struct Allocation { char *cpu_ptr_; unsigned long long gpu_address_; unsigned long long size_; struct _Resource *resource_; struct Heap *heap_; } allocation; struct IOGPUResourceInfo { struct __IOSurface *iosurface; unsigned long resourceSize : 56; unsigned char iosurfaceField : 8; unsigned int resourceID; } pipeline_resource_info; } ei_state; struct Allocation { unsigned int index; void *pool; BOOL directly_assigned; } resource_indirection_heap_allocation; AGXA14FamilyDevice *device_obj; struct RuntimeState { struct RetainedObjCPointer<AGXA14FamilyBuffer *> { AGXA14FamilyBuffer *ptr; } got; struct RetainedObjCPointer<AGXA14FamilyBuffer *> { AGXA14FamilyBuffer *ptr; } global_constructors; struct RetainedObjCPointer<AGXA14FamilyBuffer *> { AGXA14FamilyBuffer *ptr; } builtin_state_buffer; struct unordered_map<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>>> { struct __hash_table<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::hash<std::string>, std::equal_to<std::string>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::equal_to<std::string>, std::hash<std::string>, true>> { float __value_; } __p3_; } __table_; } resolved_symbols; unsigned int max_temporary_register_count; unsigned int total_spill_buffer_bytes; unsigned int max_call_stack_depth; unsigned int total_tls_size; unsigned int global_constructor_count; BOOL has_side_effects; BOOL requires_builtin_state; unsigned long long got_size; } vertex_loader_runtime_state; struct RuntimeState { struct RetainedObjCPointer<AGXA14FamilyBuffer *> { AGXA14FamilyBuffer *ptr; } got; struct RetainedObjCPointer<AGXA14FamilyBuffer *> { AGXA14FamilyBuffer *ptr; } global_constructors; struct RetainedObjCPointer<AGXA14FamilyBuffer *> { AGXA14FamilyBuffer *ptr; } builtin_state_buffer; struct unordered_map<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>>> { struct __hash_table<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::hash<std::string>, std::equal_to<std::string>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::equal_to<std::string>, std::hash<std::string>, true>> { float __value_; } __p3_; } __table_; } resolved_symbols; unsigned int max_temporary_register_count; unsigned int total_spill_buffer_bytes; unsigned int max_call_stack_depth; unsigned int total_tls_size; unsigned int global_constructor_count; BOOL has_side_effects; BOOL requires_builtin_state; unsigned long long got_size; } fragment_loader_runtime_state; struct RuntimeState { struct RetainedObjCPointer<AGXA14FamilyBuffer *> { AGXA14FamilyBuffer *ptr; } got; struct RetainedObjCPointer<AGXA14FamilyBuffer *> { AGXA14FamilyBuffer *ptr; } global_constructors; struct RetainedObjCPointer<AGXA14FamilyBuffer *> { AGXA14FamilyBuffer *ptr; } builtin_state_buffer; struct unordered_map<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>>> { struct __hash_table<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::hash<std::string>, std::equal_to<std::string>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::equal_to<std::string>, std::hash<std::string>, true>> { float __value_; } __p3_; } __table_; } resolved_symbols; unsigned int max_temporary_register_count; unsigned int total_spill_buffer_bytes; unsigned int max_call_stack_depth; unsigned int total_tls_size; unsigned int global_constructor_count; BOOL has_side_effects; BOOL requires_builtin_state; unsigned long long got_size; } tile_loader_runtime_state; struct RuntimeState { struct RetainedObjCPointer<AGXA14FamilyBuffer *> { AGXA14FamilyBuffer *ptr; } got; struct RetainedObjCPointer<AGXA14FamilyBuffer *> { AGXA14FamilyBuffer *ptr; } global_constructors; struct RetainedObjCPointer<AGXA14FamilyBuffer *> { AGXA14FamilyBuffer *ptr; } builtin_state_buffer; struct unordered_map<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>>> { struct __hash_table<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::hash<std::string>, std::equal_to<std::string>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::equal_to<std::string>, std::hash<std::string>, true>> { float __value_; } __p3_; } __table_; } resolved_symbols; unsigned int max_temporary_register_count; unsigned int total_spill_buffer_bytes; unsigned int max_call_stack_depth; unsigned int total_tls_size; unsigned int global_constructor_count; BOOL has_side_effects; BOOL requires_builtin_state; unsigned long long got_size; } object_loader_runtime_state; struct RuntimeState { struct RetainedObjCPointer<AGXA14FamilyBuffer *> { AGXA14FamilyBuffer *ptr; } got; struct RetainedObjCPointer<AGXA14FamilyBuffer *> { AGXA14FamilyBuffer *ptr; } global_constructors; struct RetainedObjCPointer<AGXA14FamilyBuffer *> { AGXA14FamilyBuffer *ptr; } builtin_state_buffer; struct unordered_map<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>>> { struct __hash_table<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::hash<std::string>, std::equal_to<std::string>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::equal_to<std::string>, std::hash<std::string>, true>> { float __value_; } __p3_; } __table_; } resolved_symbols; unsigned int max_temporary_register_count; unsigned int total_spill_buffer_bytes; unsigned int max_call_stack_depth; unsigned int total_tls_size; unsigned int global_constructor_count; BOOL has_side_effects; BOOL requires_builtin_state; unsigned long long got_size; } mesh_loader_runtime_state; struct PipelineDylibResources<AGX::G13::ObjClasses, AGX::G13::Classes, AGX::ICBType::Render> { struct vector<std::shared_ptr<AGX::G13::DynamicLibrary>, std::allocator<std::shared_ptr<AGX::G13::DynamicLibrary>>> { void *__begin_; void *__end_; struct __compressed_pair<std::shared_ptr<AGX::G13::DynamicLibrary> *, std::allocator<std::shared_ptr<AGX::G13::DynamicLibrary>>> { void *__value_; } __end_cap_; } dylibs; struct vector<const IOGPUResourceInfo *, std::allocator<const IOGPUResourceInfo *>> { struct IOGPUResourceInfo **__begin_; struct IOGPUResourceInfo **__end_; struct __compressed_pair<const IOGPUResourceInfo **, std::allocator<const IOGPUResourceInfo *>> { struct IOGPUResourceInfo **__value_; } __end_cap_; } dylib_resource_infos; unsigned long long base_dylib_resource_info_count; } vertex_dylib_resources; struct PipelineDylibResources<AGX::G13::ObjClasses, AGX::G13::Classes, AGX::ICBType::Render> { struct vector<std::shared_ptr<AGX::G13::DynamicLibrary>, std::allocator<std::shared_ptr<AGX::G13::DynamicLibrary>>> { void *__begin_; void *__end_; struct __compressed_pair<std::shared_ptr<AGX::G13::DynamicLibrary> *, std::allocator<std::shared_ptr<AGX::G13::DynamicLibrary>>> { void *__value_; } __end_cap_; } dylibs; struct vector<const IOGPUResourceInfo *, std::allocator<const IOGPUResourceInfo *>> { struct IOGPUResourceInfo **__begin_; struct IOGPUResourceInfo **__end_; struct __compressed_pair<const IOGPUResourceInfo **, std::allocator<const IOGPUResourceInfo *>> { struct IOGPUResourceInfo **__value_; } __end_cap_; } dylib_resource_infos; unsigned long long base_dylib_resource_info_count; } fragment_dylib_resources; struct PipelineDylibResources<AGX::G13::ObjClasses, AGX::G13::Classes, AGX::ICBType::Render> { struct vector<std::shared_ptr<AGX::G13::DynamicLibrary>, std::allocator<std::shared_ptr<AGX::G13::DynamicLibrary>>> { void *__begin_; void *__end_; struct __compressed_pair<std::shared_ptr<AGX::G13::DynamicLibrary> *, std::allocator<std::shared_ptr<AGX::G13::DynamicLibrary>>> { void *__value_; } __end_cap_; } dylibs; struct vector<const IOGPUResourceInfo *, std::allocator<const IOGPUResourceInfo *>> { struct IOGPUResourceInfo **__begin_; struct IOGPUResourceInfo **__end_; struct __compressed_pair<const IOGPUResourceInfo **, std::allocator<const IOGPUResourceInfo *>> { struct IOGPUResourceInfo **__value_; } __end_cap_; } dylib_resource_infos; unsigned long long base_dylib_resource_info_count; } tile_dylib_resources; struct PipelineDylibResources<AGX::G13::ObjClasses, AGX::G13::Classes, AGX::ICBType::Render> { struct vector<std::shared_ptr<AGX::G13::DynamicLibrary>, std::allocator<std::shared_ptr<AGX::G13::DynamicLibrary>>> { void *__begin_; void *__end_; struct __compressed_pair<std::shared_ptr<AGX::G13::DynamicLibrary> *, std::allocator<std::shared_ptr<AGX::G13::DynamicLibrary>>> { void *__value_; } __end_cap_; } dylibs; struct vector<const IOGPUResourceInfo *, std::allocator<const IOGPUResourceInfo *>> { struct IOGPUResourceInfo **__begin_; struct IOGPUResourceInfo **__end_; struct __compressed_pair<const IOGPUResourceInfo **, std::allocator<const IOGPUResourceInfo *>> { struct IOGPUResourceInfo **__value_; } __end_cap_; } dylib_resource_infos; unsigned long long base_dylib_resource_info_count; } object_dylib_resources; struct PipelineDylibResources<AGX::G13::ObjClasses, AGX::G13::Classes, AGX::ICBType::Render> { struct vector<std::shared_ptr<AGX::G13::DynamicLibrary>, std::allocator<std::shared_ptr<AGX::G13::DynamicLibrary>>> { void *__begin_; void *__end_; struct __compressed_pair<std::shared_ptr<AGX::G13::DynamicLibrary> *, std::allocator<std::shared_ptr<AGX::G13::DynamicLibrary>>> { void *__value_; } __end_cap_; } dylibs; struct vector<const IOGPUResourceInfo *, std::allocator<const IOGPUResourceInfo *>> { struct IOGPUResourceInfo **__begin_; struct IOGPUResourceInfo **__end_; struct __compressed_pair<const IOGPUResourceInfo **, std::allocator<const IOGPUResourceInfo *>> { struct IOGPUResourceInfo **__value_; } __end_cap_; } dylib_resource_infos; unsigned long long base_dylib_resource_info_count; } mesh_dylib_resources; struct unordered_map<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>, std::hash<id<MTLFunction>>, std::equal_to<id<MTLFunction>>, std::allocator<std::pair<const id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>>> { struct __hash_table<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::__unordered_map_hasher<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::hash<id<MTLFunction>>, std::equal_to<id<MTLFunction>>, true>, std::__unordered_map_equal<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::equal_to<id<MTLFunction>>, std::hash<id<MTLFunction>>, true>, std::allocator<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::hash<id<MTLFunction>>, std::equal_to<id<MTLFunction>>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::equal_to<id<MTLFunction>>, std::hash<id<MTLFunction>>, true>> { float __value_; } __p3_; } __table_; } vertex_visible_function_handle_map; struct unordered_map<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>, std::hash<id<MTLFunction>>, std::equal_to<id<MTLFunction>>, std::allocator<std::pair<const id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>>> { struct __hash_table<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::__unordered_map_hasher<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::hash<id<MTLFunction>>, std::equal_to<id<MTLFunction>>, true>, std::__unordered_map_equal<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::equal_to<id<MTLFunction>>, std::hash<id<MTLFunction>>, true>, std::allocator<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::hash<id<MTLFunction>>, std::equal_to<id<MTLFunction>>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::equal_to<id<MTLFunction>>, std::hash<id<MTLFunction>>, true>> { float __value_; } __p3_; } __table_; } fragment_visible_function_handle_map; struct unordered_map<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>, std::hash<id<MTLFunction>>, std::equal_to<id<MTLFunction>>, std::allocator<std::pair<const id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>>> { struct __hash_table<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::__unordered_map_hasher<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::hash<id<MTLFunction>>, std::equal_to<id<MTLFunction>>, true>, std::__unordered_map_equal<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::equal_to<id<MTLFunction>>, std::hash<id<MTLFunction>>, true>, std::allocator<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::hash<id<MTLFunction>>, std::equal_to<id<MTLFunction>>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::equal_to<id<MTLFunction>>, std::hash<id<MTLFunction>>, true>> { float __value_; } __p3_; } __table_; } tile_visible_function_handle_map; struct unordered_map<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>, std::hash<id<MTLFunction>>, std::equal_to<id<MTLFunction>>, std::allocator<std::pair<const id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>>> { struct __hash_table<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::__unordered_map_hasher<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::hash<id<MTLFunction>>, std::equal_to<id<MTLFunction>>, true>, std::__unordered_map_equal<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::equal_to<id<MTLFunction>>, std::hash<id<MTLFunction>>, true>, std::allocator<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::hash<id<MTLFunction>>, std::equal_to<id<MTLFunction>>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::equal_to<id<MTLFunction>>, std::hash<id<MTLFunction>>, true>> { float __value_; } __p3_; } __table_; } object_visible_function_handle_map; struct unordered_map<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>, std::hash<id<MTLFunction>>, std::equal_to<id<MTLFunction>>, std::allocator<std::pair<const id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>>> { struct __hash_table<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::__unordered_map_hasher<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::hash<id<MTLFunction>>, std::equal_to<id<MTLFunction>>, true>, std::__unordered_map_equal<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::equal_to<id<MTLFunction>>, std::hash<id<MTLFunction>>, true>, std::allocator<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::hash<id<MTLFunction>>, std::equal_to<id<MTLFunction>>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::equal_to<id<MTLFunction>>, std::hash<id<MTLFunction>>, true>> { float __value_; } __p3_; } __table_; } mesh_visible_function_handle_map; struct unordered_map<unsigned long long, AGXA14FamilyVisibleFunctionTable *, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, AGXA14FamilyVisibleFunctionTable *>>> { struct __hash_table<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>> { float __value_; } __p3_; } __table_; } heap_index_vft_map; struct VisibleFunctionTableHeap *clone_visible_function_table_heap; void *program_varying_table; } _impl;
    AGXA14FamilyFragmentProgram *_fp;
    AGXA14FamilyVertexProgram *_vp;
    AGXA14FamilyRenderPipeline *_basePipeline;
}

@property (readonly) unsigned long long maxTileStorageLength;
@property (readonly) unsigned long long maxTotalThreadsPerThreadgroup;
@property (readonly) unsigned long long allocatedSize;
@property (readonly, nonatomic) unsigned long long resourceIndex;
@property (readonly, nonatomic) unsigned long long gpuAddress;
@property (readonly) long long textureWriteRoundingMode;
@property (readonly) unsigned long long uniqueIdentifier;
@property (readonly, retain, nonatomic) MTLDebugInstrumentationData *vertexDebugInstrumentationData;
@property (readonly, retain, nonatomic) MTLDebugInstrumentationData *fragmentDebugInstrumentationData;
@property (readonly, retain, nonatomic) MTLDebugInstrumentationData *tileDebugInstrumentationData;
@property (readonly) NSString *label;
@property (readonly) id<MTLDevice> device;
@property (readonly) BOOL threadgroupSizeMatchesTileSize;
@property (readonly) unsigned long long imageblockSampleLength;
@property (readonly) BOOL supportIndirectCommandBuffers;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)initWithParent:(id)a0;
- (unsigned long long)imageblockMemoryLengthForDimensions:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a0;
- (id)newVisibleFunctionTableWithDescriptor:(id)a0 stage:(unsigned long long)a1;
- (unsigned int)getFragmentShaderTelemetryID;
- (id)initWithDevice:(id)a0 pipelineStateDescriptor:(id)a1;
- (id)newVisibleFunctionTableFromVertexStageWithDescriptor:(id)a0;
- (id)newVisibleFunctionTableFromTileStageWithDescriptor:(id)a0;
- (id)vertexFunctionHandleWithFunction:(id)a0;
- (unsigned int)getVertexShaderTelemetryID;
- (unsigned long long)imageBlockSampleLength;
- (id)newIntersectionFunctionTableWithDescriptor:(id)a0 stage:(unsigned long long)a1;
- (void).cxx_destruct;
- (unsigned long long)staticThreadgroupMemoryLength;
- (id)newRenderPipelineStateWithAdditionalBinaryFunctions:(id)a0 fragmentAdditionalBinaryFunctions:(id)a1 error:(id *)a2;
- (id)fragmentFunctionHandleWithFunction:(id)a0;
- (void)dealloc;
- (id).cxx_construct;
- (id)tileFunctionHandleWithFunction:(id)a0;
- (id)newVisibleFunctionTableFromFragmentStageWithDescriptor:(id)a0;
- (id)pipelineBinaries;
- (id)newVertexShaderDebugInfo;
- (id)newFragmentShaderDebugInfo;
- (unsigned long long)imageBlockMemoryLengthForDimensions:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a0;
- (id)objectFunctionHandleWithFunction:(id)a0;
- (id)meshFunctionHandleWithFunction:(id)a0;

@end
