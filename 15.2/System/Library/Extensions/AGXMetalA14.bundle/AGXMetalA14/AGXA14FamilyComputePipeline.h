@class NSString, AGXA14FamilyComputeProgram, AGXA14FamilyDevice, AGXA14FamilyBuffer, MTLDebugInstrumentationData;
@protocol MTLDevice;

@interface AGXA14FamilyComputePipeline : _MTLComputePipelineState <MTLComputePipelineStateSPI> {
    struct ComputePipeline { unsigned long long maximum_ray_payload_size; unsigned long long maximum_ray_payload_alignment; struct ComputeProgramVariant *compute_variant; BOOL supports_indirect_command_buffers; BOOL requires_binary_linking_bindings; BOOL finalized; BOOL descendent_pipeline; struct ExecuteIndirectPipelineState { unsigned long long pipeline_state_gpu_address; struct Allocation { char *cpu_ptr_; unsigned long long gpu_address_; unsigned long long size_; struct _Resource *resource_; struct Heap *heap_; } allocation; struct IOGPUResourceInfo { struct __IOSurface *iosurface; unsigned long resourceSize : 56; unsigned char iosurfaceField : 8; unsigned int resourceID; } pipeline_resource_info; } ei_state; struct Allocation { unsigned int index; void *pool; BOOL directly_assigned; } resource_indirection_heap_allocation; AGXA14FamilyDevice *device_obj; struct RuntimeState { struct RetainedObjCPointer<AGXA14FamilyBuffer *> { AGXA14FamilyBuffer *ptr; } got; struct RetainedObjCPointer<AGXA14FamilyBuffer *> { AGXA14FamilyBuffer *ptr; } global_constructors; struct RetainedObjCPointer<AGXA14FamilyBuffer *> { AGXA14FamilyBuffer *ptr; } builtin_state_buffer; struct unordered_map<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>>> { struct __hash_table<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::hash<std::string>, std::equal_to<std::string>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, AGX::DynamicLoader<AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses>::ExternalSymbolInfo>, std::equal_to<std::string>, std::hash<std::string>, true>> { float __value_; } __p3_; } __table_; } resolved_symbols; unsigned int max_temporary_register_count; unsigned int total_spill_buffer_bytes; unsigned int max_call_stack_depth; unsigned int total_tls_size; unsigned int global_constructor_count; BOOL has_side_effects; BOOL requires_builtin_state; unsigned long long got_size; } loader_runtime_state; struct PipelineDylibResources<AGX::G13::ObjClasses, AGX::G13::Classes, AGX::ICBType::Compute> { struct vector<std::shared_ptr<AGX::G13::DynamicLibrary>, std::allocator<std::shared_ptr<AGX::G13::DynamicLibrary>>> { void *__begin_; void *__end_; struct __compressed_pair<std::shared_ptr<AGX::G13::DynamicLibrary> *, std::allocator<std::shared_ptr<AGX::G13::DynamicLibrary>>> { void *__value_; } __end_cap_; } dylibs; struct vector<const IOGPUResourceInfo *, std::allocator<const IOGPUResourceInfo *>> { struct IOGPUResourceInfo **__begin_; struct IOGPUResourceInfo **__end_; struct __compressed_pair<const IOGPUResourceInfo **, std::allocator<const IOGPUResourceInfo *>> { struct IOGPUResourceInfo **__value_; } __end_cap_; } dylib_resource_infos; unsigned long long base_dylib_resource_info_count; } dylib_resources; struct unordered_map<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>, std::hash<id<MTLFunction>>, std::equal_to<id<MTLFunction>>, std::allocator<std::pair<const id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>>> { struct __hash_table<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::__unordered_map_hasher<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::hash<id<MTLFunction>>, std::equal_to<id<MTLFunction>>, true>, std::__unordered_map_equal<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::equal_to<id<MTLFunction>>, std::hash<id<MTLFunction>>, true>, std::allocator<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::hash<id<MTLFunction>>, std::equal_to<id<MTLFunction>>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<id<MTLFunction>, std::__hash_value_type<id<MTLFunction>, RetainedObjCPointer<AGXA14FamilyFunctionHandle *>>, std::equal_to<id<MTLFunction>>, std::hash<id<MTLFunction>>, true>> { float __value_; } __p3_; } __table_; } function_handle_map; struct unordered_map<unsigned long long, AGXA14FamilyVisibleFunctionTable *, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, AGXA14FamilyVisibleFunctionTable *>>> { struct __hash_table<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, AGXA14FamilyVisibleFunctionTable *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>> { float __value_; } __p3_; } __table_; } heap_index_vft_map; struct VisibleFunctionTableHeap *clone_visible_function_table_heap; void *intersection_fn_variant_sets; } _impl;
    AGXA14FamilyComputeProgram *_cp;
    AGXA14FamilyComputePipeline *_basePipeline;
}

@property (readonly) unsigned long long maxTotalThreadsPerThreadgroup;
@property (readonly) unsigned long long threadExecutionWidth;
@property (readonly) unsigned long long staticThreadgroupMemoryLength;
@property (readonly) unsigned long long allocatedSize;
@property (readonly) long long textureWriteRoundingMode;
@property (readonly, nonatomic) unsigned long long resourceIndex;
@property (readonly, nonatomic) unsigned long long gpuAddress;
@property (readonly) unsigned long long uniqueIdentifier;
@property (readonly, retain, nonatomic) MTLDebugInstrumentationData *debugInstrumentationData;
@property (readonly) NSString *label;
@property (readonly) id<MTLDevice> device;
@property (readonly) BOOL supportIndirectCommandBuffers;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)initWithParent:(id)a0;
- (unsigned long long)imageblockMemoryLengthForDimensions:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a0;
- (id)newIntersectionFunctionTableWithDescriptor:(id)a0;
- (id)initWithDevice:(id)a0 pipelineStateDescriptor:(id)a1;
- (unsigned int)getComputeKernelTelemetryID;
- (id)functionHandleWithFunction:(id)a0;
- (id)newVisibleFunctionTableWithDescriptor:(id)a0;
- (void).cxx_destruct;
- (id)newComputePipelineStateWithAdditionalBinaryFunctions:(id)a0 error:(id *)a1;
- (void)dealloc;
- (id).cxx_construct;
- (id)pipelineBinaries;
- (unsigned long long)imageBlockMemoryLengthForDimensions:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a0;

@end
