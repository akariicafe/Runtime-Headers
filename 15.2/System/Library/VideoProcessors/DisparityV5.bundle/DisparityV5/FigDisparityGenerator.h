@class GDCTransform, NSString, AdaptativeClamping, NSArray, FigRegToolboxGPU, FigDisparityMetadata, Calibration, NSDictionary, Demosaic, FigMetalContext, DisparityDiagnostics, NSMutableDictionary;
@protocol DisparityProcessorInferenceDelegate;

@interface FigDisparityGenerator : NSObject <ImageBufferProcessor> {
    GDCTransform *_gdcTransform;
    Demosaic *_referenceDemosaic;
    Demosaic *_auxiliaryDemosaic;
    Calibration *_calibration;
    AdaptativeClamping *_clamping;
    FigRegToolboxGPU *_keypointDetRtb;
    struct { float x0; float x1; float x2; float x3; float x4; float x5; } *_keypointListRtb;
    unsigned int _keypointGridWidth;
    unsigned int _keypointGridHeight;
    unsigned int _keypointsCount;
    unsigned int _keypointsTemplateRadius;
    unsigned int _keypointsSearchRadius;
    float _keypointsMinCornerScore;
    float _keypointsMinNccScore;
    float _keypointsMinSelectionScore;
    unsigned int _inputImageWidth;
    unsigned int _inputImageHeight;
    unsigned int _scalerOutputWidth;
    unsigned int _scalerOutputHeight;
    unsigned int _auxiliaryPaddedHalfResWidth;
    unsigned int _auxiliaryPaddedHalfResHeight;
    unsigned int _disparityWidth;
    unsigned int _disparityHeight;
    struct __CVBuffer { } *_refHalfResRGBAPixelBuffer;
    struct __CVBuffer { } *_auxHalfResRGBAPixelBuffer;
    struct __CVBuffer { } *_refHalfResLumaPixelBuffer;
    struct __CVBuffer { } *_auxHalfResRectifiedRGBAPixelBuffer;
    struct __CVBuffer { } *_refLowResRectifiedRGBAPixelBuffer;
    struct __CVBuffer { } *_auxLowResRectifiedRGBAPixelBuffer;
    struct __CVBuffer { } *_rectifiedDisparityMap;
    NSDictionary *_auxiliaryMeta;
    NSDictionary *_referenceMeta;
    double *_adaptiveCorrectionKeypointsReferenceDistorted;
    double *_adaptiveCorrectionKeypointsAuxiliaryDistorted;
    DisparityDiagnostics *_diagnostics;
    NSArray *_portsToConfig;
    NSMutableDictionary *_disparityTuningParameters;
    BOOL _isPrewarming;
    struct CalModel { double focalLengthPix[2]; double opticalCenterX[2]; double opticalCenterY[2]; double extrinRotRefefenceToAuxiliary[12]; } _correctedCalibration;
    struct { float distortPolynomCoefficients[8]; float undistortPolynomCoefficients[8]; float centerX; float centerY; float originalImageWidth; float originalImageHeight; float pixelSize; float homography[9]; float inverseHomography[9]; struct CGSize { double width; double height; } canvasResolution; BOOL applyZTransform; int samplerType; } _gdcParametersReference;
    struct { float distortPolynomCoefficients[8]; float undistortPolynomCoefficients[8]; float centerX; float centerY; float originalImageWidth; float originalImageHeight; float pixelSize; float homography[9]; float inverseHomography[9]; struct CGSize { double width; double height; } canvasResolution; BOOL applyZTransform; int samplerType; } _gdcParametersAuxiliary;
    float _canonicalDisparityScaleFactorOut;
    BOOL _isShaderHarvesting;
}

@property (readonly, nonatomic) FigDisparityMetadata *shiftMapMetadata;
@property (retain, nonatomic) NSDictionary *options;
@property (nonatomic) BOOL shouldComputeDisparityWhenCalibrationFails;
@property (nonatomic) BOOL equalizeTeleGainToMatchReference;
@property (readonly, nonatomic) FigMetalContext *metalContext;
@property (readonly, nonatomic) NSDictionary *disparityDiagnosticMetadata;
@property (nonatomic) struct opaqueCMSampleBuffer { } *referenceSampleBuffer;
@property (nonatomic) struct opaqueCMSampleBuffer { } *auxiliarySampleBuffer;
@property (nonatomic) struct __CVBuffer { } *outputShiftmap;
@property (weak, nonatomic) id<DisparityProcessorInferenceDelegate> disparityInferenceProcessorDelegate;
@property (nonatomic) struct { unsigned long long inputImageWidth; unsigned long long inputImageHeight; unsigned long long outputDisparityWidth; unsigned long long outputDisparityHeight; float maxPaddingFactor; unsigned int keypointGridWidth; unsigned int keypointGridHeight; } disparityConfig;
@property (retain, nonatomic) NSDictionary *tuningParameters;
@property (retain, nonatomic) NSDictionary *cameraInfoByPortType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)releaseResources;
- (int)prewarm;
- (int)resetState;
- (int)purgeResources;
- (int)prewarmWithTuningParameters:(id)a0;
- (int)process;
- (int)finishProcessing;
- (int)setup;
- (void).cxx_destruct;
- (id)init;
- (int)prepareToProcess:(unsigned int)a0;
- (BOOL)allocateResources:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; float x4; unsigned int x5; unsigned int x6; } *)a0;
- (void)dealloc;
- (BOOL)allocateResources;
- (id)initWithCommandQueue:(id)a0;
- (BOOL)isImageFullResolution:(struct __CVBuffer { } *)a0;
- (BOOL)isImageScalerOutputResolution:(struct __CVBuffer { } *)a0;
- (BOOL)_extractAndRunSanityChecks;
- (id)selectTuningParametersForCapture;
- (int)_detectKeypoints:(float)a0;
- (void)fillShiftMapMetadataWithCalModel:(struct CalModel { double x0[2]; double x1[2]; double x2[2]; double x3[12]; } *)a0 referenceGDC:(struct { float x0[8]; float x1[8]; float x2; float x3; float x4; float x5; float x6; float x7[9]; float x8[9]; struct CGSize { double x0; double x1; } x9; BOOL x10; int x11; } *)a1 auxiliaryGDC:(struct { float x0[8]; float x1[8]; float x2; float x3; float x4; float x5; float x6; float x7[9]; float x8[9]; struct CGSize { double x0; double x1; } x9; BOOL x10; int x11; } *)a2;
- (int)_demosaic:(float)a0;

@end
