@class FigMetalContext;
@protocol MTLComputePipelineState, MTLBuffer;

@interface SparseRenderer : NSObject {
    FigMetalContext *_mtlCtx;
    id<MTLComputePipelineState> _precalcLUTs_kernel;
    id<MTLComputePipelineState> _preprocess_kernel;
    id<MTLComputePipelineState> _xhlrbScan_kernel;
    id<MTLComputePipelineState> _xhlrbDiffuse_kernel;
    id<MTLComputePipelineState> _xhlrbCopyBack_kernel;
    id<MTLComputePipelineState> _sparsePreFilteringX_kernel;
    id<MTLComputePipelineState> _sparsePreFilteringY_kernel;
    id<MTLComputePipelineState> _sparseSampling_kernel_withAlpha;
    id<MTLComputePipelineState> _sparseSampling_kernel_noAlpha;
    id<MTLComputePipelineState> _sparseSampling_opt2x_kernel_withAlpha;
    id<MTLComputePipelineState> _sparseSampling_opt2x_kernel_noAlpha;
    id<MTLComputePipelineState> _sparseAntiAliasingX_kernel;
    id<MTLComputePipelineState> _sparseAntiAliasingY_kernel;
    id<MTLComputePipelineState> _sparseYUVOutput1_kernel;
    id<MTLComputePipelineState> _sparseYUVOutput2_kernel;
    id<MTLBuffer> _sparseSampling_stepsLUT;
    id<MTLBuffer> _sparseSampling_baseVecsLUT;
    BOOL _shadersLoaded;
    BOOL _segmentsLUTValid;
    struct rendering_config_params { float simulatedAperture; float defaultSimulatedAperture; float preFilterBlurStrength; int preFilterRadius; float maxBlur; float sharpRadius; float softRadius; float lumaNoiseModelCoeff; float lumaNoiseAmplitude; float highlightBoostGain; int nRings; float basePixelWeight; float antiAliasBlurStrength; int antiAliasRadius; float relativeWeightThreshold; float alphaEpsilon; float alphaGain; float shapeObstructionCoeff; float ringAmplitude; float ringSharpness; float blendingQuarterResAlphaGain; float blendingFullResAlphaGain; int xhlrbIterations; float xhlrbBlurRadiusT0; float xhlrbBlurRadiusT1; float xhlrbMaxIntensityT0; float xhlrbMaxIntensityT1; float xhlrbMinIntensityT0; float xhlrbMinIntensityT1; float xhlrbPreFilterGain; float xhlrbWeightGain; float xhlrbIntensityGain; int xhlrbTileSize; } _config_params;
}

- (id)initWithMetalContext:(id)a0;
- (void).cxx_destruct;
- (void)dealloc;
- (void)constAddUint16:(id)a0 name:(id)a1 value:(unsigned int)a2;
- (void)constAddFp16asUInt16:(id)a0 name:(id)a1 value:(float)a2;
- (int)setOptions:(const struct rendering_config_params { float x0; float x1; float x2; int x3; float x4; float x5; float x6; float x7; float x8; float x9; int x10; float x11; float x12; int x13; float x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; int x22; float x23; float x24; float x25; float x26; float x27; float x28; float x29; float x30; float x31; int x32; } *)a0 isPrewarm:(BOOL)a1;
- (void)constAddFp16:(id)a0 name:(id)a1 value:(float)a2;
- (int)enqueueRenderingUsingResources:(id)a0 threadgroupSizes:(const struct threadgroup_sizes_config { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x2; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x3; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x4; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x5; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x6; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x7; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x8; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x9; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x10; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x11; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x12; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x13; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x14; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x15; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x16; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x17; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x18; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x19; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x20; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x21; } *)a1 renderingConfig:(const struct rendering_config_params { float x0; float x1; float x2; int x3; float x4; float x5; float x6; float x7; float x8; float x9; int x10; float x11; float x12; int x13; float x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; int x22; float x23; float x24; float x25; float x26; float x27; float x28; float x29; float x30; float x31; int x32; } *)a2 inputBlurMap:(id)a3 inputAlpha:(id)a4 inputLuma:(id)a5 inputChroma:(id)a6 outputLuma:(id)a7 outputChroma:(id)a8;
- (int)loadShaders;
- (void)constAddInt16:(id)a0 name:(id)a1 value:(int)a2;
- (void)constAddFp32asUInt32:(id)a0 name:(id)a1 value:(float)a2;
- (int)validateInputsWithResources:(id)a0 threadgroupSizes:(const struct threadgroup_sizes_config { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x2; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x3; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x4; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x5; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x6; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x7; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x8; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x9; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x10; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x11; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x12; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x13; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x14; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x15; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x16; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x17; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x18; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x19; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x20; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x21; } *)a1 inputBlurMap:(id)a2 inputAlpha:(id)a3 inputLuma:(id)a4 inputChroma:(id)a5 outputLuma:(id)a6 outputChroma:(id)a7;
- (struct rendering_dynamic_params { void /* unknown type, blank encoding */ x0; void /* unknown type, blank encoding */ x1; void /* unknown type, blank encoding */ x2; void /* unknown type, blank encoding */ x3; void /* unknown type, blank encoding */ x4; void /* unknown type, blank encoding */ x5; void /* unknown type, blank encoding */ x6; })computeDynamicParams;
- (int)enqueuePreProcessingUsingResources:(id)a0 threadgroupSizes:(const struct threadgroup_sizes_config { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x2; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x3; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x4; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x5; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x6; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x7; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x8; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x9; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x10; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x11; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x12; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x13; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x14; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x15; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x16; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x17; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x18; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x19; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x20; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x21; } *)a1 blurMap:(id)a2 luma:(id)a3 chroma:(id)a4;
- (int)enqueueHighlightRecoveryUsingResources:(id)a0 dynamicParams:(const struct rendering_dynamic_params { void /* unknown type, blank encoding */ x0; void /* unknown type, blank encoding */ x1; void /* unknown type, blank encoding */ x2; void /* unknown type, blank encoding */ x3; void /* unknown type, blank encoding */ x4; void /* unknown type, blank encoding */ x5; void /* unknown type, blank encoding */ x6; } *)a1;
- (int)enqueuePreFilteringUsingResources:(id)a0 dynamicParams:(const struct rendering_dynamic_params { void /* unknown type, blank encoding */ x0; void /* unknown type, blank encoding */ x1; void /* unknown type, blank encoding */ x2; void /* unknown type, blank encoding */ x3; void /* unknown type, blank encoding */ x4; void /* unknown type, blank encoding */ x5; void /* unknown type, blank encoding */ x6; } *)a1 threadgroupSizes:(const struct threadgroup_sizes_config { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x2; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x3; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x4; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x5; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x6; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x7; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x8; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x9; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x10; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x11; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x12; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x13; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x14; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x15; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x16; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x17; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x18; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x19; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x20; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x21; } *)a2;
- (int)enqueueRenderingUsingResources:(id)a0 dynamicParams:(const struct rendering_dynamic_params { void /* unknown type, blank encoding */ x0; void /* unknown type, blank encoding */ x1; void /* unknown type, blank encoding */ x2; void /* unknown type, blank encoding */ x3; void /* unknown type, blank encoding */ x4; void /* unknown type, blank encoding */ x5; void /* unknown type, blank encoding */ x6; } *)a1 threadgroupSizes:(const struct threadgroup_sizes_config { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x2; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x3; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x4; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x5; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x6; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x7; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x8; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x9; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x10; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x11; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x12; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x13; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x14; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x15; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x16; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x17; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x18; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x19; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x20; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x21; } *)a2 inputAlpha:(id)a3;
- (int)enqueueAntiAliasingUsingResources:(id)a0 dynamicParams:(const struct rendering_dynamic_params { void /* unknown type, blank encoding */ x0; void /* unknown type, blank encoding */ x1; void /* unknown type, blank encoding */ x2; void /* unknown type, blank encoding */ x3; void /* unknown type, blank encoding */ x4; void /* unknown type, blank encoding */ x5; void /* unknown type, blank encoding */ x6; } *)a1 threadgroupSizes:(const struct threadgroup_sizes_config { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x2; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x3; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x4; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x5; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x6; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x7; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x8; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x9; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x10; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x11; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x12; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x13; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x14; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x15; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x16; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x17; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x18; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x19; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x20; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x21; } *)a2;
- (int)enqueueOutputGenerationUsingResources:(id)a0 threadgroupSizes:(const struct threadgroup_sizes_config { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x2; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x3; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x4; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x5; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x6; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x7; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x8; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x9; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x10; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x11; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x12; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x13; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x14; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x15; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x16; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x17; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x18; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x19; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x20; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x21; } *)a1 inputAlpha:(id)a2 inputLuma:(id)a3 inputChroma:(id)a4 outputLuma:(id)a5 outputChroma:(id)a6;
- (void)constAddFp32:(id)a0 name:(id)a1 value:(float)a2;
- (void)constAddInt32:(id)a0 name:(id)a1 value:(int)a2;

@end
