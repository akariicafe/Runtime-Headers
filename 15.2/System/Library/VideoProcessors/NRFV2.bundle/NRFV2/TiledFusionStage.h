@class DeepFusionPostEspressoStage, NSString, FigMetalContext, DeepFusionLaplacianPyramid, DeepFusionGaussianPyramid, NSObject, DeepFusionPreEspressoStage;
@protocol MTLComputePipelineState, MTLTexture, OS_dispatch_queue;

@interface TiledFusionStage : NSObject {
    FigMetalContext *_metal;
    int _networkVersion;
    void *_espresso_ctx;
    DeepFusionPreEspressoStage *_preEspressoStage;
    void *_espresso_plan;
    struct { void *plan; int network_index; } _espresso_net;
    NSString *_espressoModelVersion;
    DeepFusionPostEspressoStage *_postEspresso;
    struct DFApplyEspressoOutputUniforms { void /* unknown type, empty encoding */ yuvDeghostsingMinValue; float lumaSlope; void /* unknown type, empty encoding */ yuvSkinSlope; float lumaSkySlope; void /* unknown type, empty encoding */ yuvGlobalAlpha; int level; struct TileBounds { int index; int in_x; int in_y; int in_w; int in_h; int out_x; int out_y; int out_w; int out_h; int padding; } tile; float scaleFactor; int texturenessType; float clippingThresholdLow; float clippingThresholdHigh; float shadingSuppressionPower; BOOL isMotionBelowThreshold; float fusionLscAmpFactor; float fusionLscOffsetFactor; float fusionLumaSlope; float fusionLumaMid; float fusionChromaGlobalFactor; float highlightFusionAlpha; float lscGainGreenMax; BOOL hasSIFR; void /* unknown type, empty encoding */ fullSize; struct NoiseDivisorQuantizationBoundaries { float minValue; float maxValue; } slQuantBounds; float colorMatchStart; float colorMatchEnd; float edgeMatchStart; float edgeMatchEnd; float aeShutterTimeRatio; float desaturateYThreshold; float desaturateSigmaSquaredInverse; float desaturateStrength; struct { void /* unknown type, empty encoding */ columns[3]; } colorCorrectionMatrix; struct { void /* unknown type, empty encoding */ columns[3]; } inverseColorCorrectionMatrix; float haloSuppressionStrength; float darkEdgeSupressionLumaThresholdHigh; float darkEdgeSupressionLumaThresholdLow; float darkEdgeSupressionLumaDiffThreshold; } _uniforms[4];
    struct __IOSurface *_inputSurf[2][4];
    struct __IOSurface *_outputSurf[2][4];
    struct __CVBuffer *_inputSurfPb[2][4];
    struct __CVBuffer *_outputSurfPb[2][4];
    int _padding;
    unsigned int _tileWidth;
    unsigned int _tileHeight;
    unsigned long long tileBufferStride;
    id<MTLComputePipelineState> _kernelYUV420ToTile;
    id<MTLComputePipelineState> _kernelSyntheticLongHighlightFixYUV420ToTile;
    DeepFusionGaussianPyramid *_YUVGaussian[2][2];
    DeepFusionLaplacianPyramid *_YUVLaplacian[2][2];
    DeepFusionGaussianPyramid *_YUVNoisePyramid[2][2];
    id<MTLTexture> _dfTexIn[2][4];
    id<MTLTexture> _dfTexOut[2][4];
    id<MTLTexture> _synthRefNoisePretuning[2];
    NSObject<OS_dispatch_queue> *_espressoCallbackQueue;
    int _loadedEspressoModel;
}

@property (nonatomic) BOOL isHarvesting;

- (id)platformIdentifier;
- (void).cxx_destruct;
- (void)dealloc;
- (int)compileShaders;
- (id)initWithContext:(id)a0 preEspressoStage:(id)a1 networkVersion:(int)a2;
- (int)initializePyramids;
- (int)runWithReferenceLuma:(id)a0 referenceChroma:(id)a1 longLuma:(id)a2 longChroma:(id)a3 preFusionMap:(id)a4 slFusionMap:(id)a5 slQuantBounds:(struct NoiseDivisorQuantizationBoundaries { float x0; float x1; } *)a6 longFusionMap:(id)a7 skinMask:(id)a8 skyMask:(id)a9 lscGains:(id)a10 totalGain:(float)a11 outLuma:(id)a12 outChroma:(id)a13 deferredProcessingPlist:(id)a14 lscGainGreenMax:(float)a15 EVM_EV0_motionScore:(float)a16 eitRatio:(float)a17 aeShutterTimeRatio:(float)a18 hasSIFR:(BOOL)a19 isStationary:(BOOL)a20 isSyntheticLongWithRealLong:(BOOL)a21 colorCorrection:(struct { void /* unknown type, empty encoding */ x0[3]; })a22 espressoModel:(int)a23 noiseEstimationParams:(struct NoiseEstimationParameters { float x0; float x1; float x2; struct DeepFusionFrameMeta *x3; id x4; id x5; float x6; struct NoiseDivisorQuantizationBoundaries { float x0; float x1; } x7; } *)a24 espressoModelForTuning:(int)a25 sideCar:(id)a26 intermediateEncodingParams:(const struct IntermediateEncodingParameters { float x0; float x1; } *)a27;
- (int)computeAMBNRDenoiseBoostMap:(id)a0 longFusionMap:(id)a1 ev0FusionMap:(id)a2 ev0Metadata:(struct frameMetadata { int x0; BOOL x1; BOOL x2; BOOL x3; long long x4; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; } x5; BOOL x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; int x8; BOOL x9; struct ltmCurves { union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x0; union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x1; struct { unsigned short x0; unsigned short x1[0]; } x2; unsigned short x3[257]; struct { unsigned short x0; unsigned short x1[0]; } x4; unsigned short x5[257]; float x6; } x10; struct { void /* unknown type, empty encoding */ x0[3]; } x11; BOOL x12; BOOL x13; int x14; struct FaceDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; unsigned short x2; unsigned short x3; } x15[10]; int x16; struct BodyDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; } x17[10]; BOOL x18; struct LocalHistogramClippingDataGeneric { unsigned short x0; unsigned int x1; struct *x2; } x19; } *)a3 longMetadata:(struct frameMetadata { int x0; BOOL x1; BOOL x2; BOOL x3; long long x4; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; } x5; BOOL x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; int x8; BOOL x9; struct ltmCurves { union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x0; union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x1; struct { unsigned short x0; unsigned short x1[0]; } x2; unsigned short x3[257]; struct { unsigned short x0; unsigned short x1[0]; } x4; unsigned short x5[257]; float x6; } x10; struct { void /* unknown type, empty encoding */ x0[3]; } x11; BOOL x12; BOOL x13; int x14; struct FaceDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; unsigned short x2; unsigned short x3; } x15[10]; int x16; struct BodyDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; } x17[10]; BOOL x18; struct LocalHistogramClippingDataGeneric { unsigned short x0; unsigned int x1; struct *x2; } x19; } *)a4 numEV0:(int)a5 deferredProcessingPlist:(id)a6 espressoModel:(int)a7 isSyntheticLongWithRealLong:(BOOL)a8 totalGain:(float)a9;
- (void)unloadEspressoNetwork;
- (int)loadEspressoNetworkFromPath:(const char *)a0 andStoreNetwork:(struct { void *x0; int x1; } *)a1 andPlan:(void **)a2;
- (int)allocateEspressoBuffers;
- (void)freeEspressoBuffers:(BOOL)a0;
- (void)freeAllEspressoBuffers;
- (int)maybeLoadEspressoNetwork:(int)a0;
- (int)stage1GPUonTile:(struct TileBounds { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; } *)a0 refLuma:(id)a1 referenceChroma:(id)a2 longLuma:(id)a3 longChroma:(id)a4 lscGains:(id)a5 slFusionMap:(id)a6 longFusionMap:(id)a7 eitRatio:(float)a8 hasSIFR:(BOOL)a9 noiseEstimationParams:(struct NoiseEstimationParameters { float x0; float x1; float x2; struct DeepFusionFrameMeta *x3; id x4; id x5; float x6; struct NoiseDivisorQuantizationBoundaries { float x0; float x1; } x7; } *)a10 intermediateEncodingParams:(const struct IntermediateEncodingParameters { float x0; float x1; } *)a11;
- (int)stage2ANEonTile:(struct TileBounds { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; } *)a0;
- (int)stage3GPUonTile:(struct TileBounds { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; } *)a0 preFusionMap:(id)a1 slFusionMap:(id)a2 longFusionMap:(id)a3 skinMask:(id)a4 skyMask:(id)a5 lscGains:(id)a6 outLuma:(id)a7 outChroma:(id)a8 espressoModelForTuning:(int)a9;
- (unsigned long long)computeTileSizeForPixelFormat:(unsigned long long)a0;

@end
