@class NSString, NWConcrete_nw_endpoint_handler, NSObject;
@protocol OS_nw_path, OS_xpc_object, OS_nw_protocol_metadata, OS_nw_write_request, OS_nw_path_flow_registration, OS_dispatch_queue, OS_nw_array, OS_nw_content_context, OS_nw_fd_wrapper, OS_nw_endpoint, OS_nw_error, OS_nw_channel, OS_nw_read_request, OS_nw_protocol_definition, OS_nw_context, OS_nw_dictionary, OS_nw_parameters;

@interface NWConcrete_nw_endpoint_flow : NSObject <OS_nw_endpoint_flow> {
    NSObject<OS_nw_path> *connected_path;
    NSObject<OS_nw_path> *flow_path;
    NWConcrete_nw_endpoint_flow *internally_retained_object;
    unsigned char initialized_protocol_callbacks : 1;
    unsigned char started : 1;
    unsigned char setup_protocols : 1;
    unsigned char started_protocols : 1;
    unsigned char is_viable : 1;
    unsigned char is_connected : 1;
    unsigned char has_connected : 1;
    unsigned char initial_payload_sent : 1;
    unsigned char assigned_initial_writes : 1;
    unsigned char is_channel : 1;
    unsigned char is_multipath : 1;
    unsigned char multipath_nat64_query_outstanding : 1;
    unsigned char custom_protocols_only : 1;
    unsigned char is_flow_divert : 1;
    unsigned char multilayer_packet_logging : 1;
    unsigned char has_progress_target : 1;
    unsigned char path_is_direct : 1;
    unsigned char should_ignore_path_result : 1;
    unsigned char reported_do_not_reuse : 1;
    unsigned char in_setup_protocols : 1;
    NWConcrete_nw_endpoint_flow *clone_from_flow;
    struct nw_protocol_identifier { char name[32]; int level; int mapping; } protocol_identifier;
    struct nw_protocol_callbacks { void /* function */ *add_input_handler; void /* function */ *remove_input_handler; void /* function */ *replace_input_handler; void /* function */ *connect; void /* function */ *disconnect; void /* function */ *connected; void /* function */ *disconnected; void /* function */ *error; void /* function */ *input_available; void /* function */ *output_available; void /* function */ *get_input_frames; void /* function */ *get_output_frames; void /* function */ *finalize_output_frames; void /* function */ *link_state; void /* function */ *get_parameters; void /* function */ *get_path; void /* function */ *get_local_endpoint; void /* function */ *get_remote_endpoint; void /* function */ *register_notification; void /* function */ *unregister_notification; void /* function */ *notify; void /* function */ *updated_path; void /* function */ *supports_external_data; void /* function */ *input_finished; void /* function */ *output_finished; void /* function */ *get_output_local_endpoint; void /* function */ *get_output_interface; void /* function */ *waiting_for_output; void /* function */ *copy_info; void /* function */ *add_listen_handler; void /* function */ *remove_listen_handler; void /* function */ *get_message_properties; void /* function */ *reset; void /* function */ *input_flush; } protocol_callbacks;
    struct nw_listen_protocol_callbacks { void /* function */ *new_flow; void /* function */ *disconnected; } listen_callbacks;
    struct nw_flow_protocol { struct nw_protocol { unsigned char flow_id[16]; struct nw_protocol_identifier *identifier; struct nw_protocol_callbacks *callbacks; struct nw_protocol *output_handler; void *handle; struct nw_protocol *default_input_handler; void *output_handler_context; } protocol; struct nw_listen_protocol { struct nw_listen_protocol_callbacks *callbacks; struct nw_protocol *protocol_handler; void *protocol_handler_context; void *handle; } listen_protocol; NWConcrete_nw_endpoint_handler *handler; NSObject<OS_nw_parameters> *parameters; NSObject<OS_nw_context> *context; NSObject<OS_nw_write_request> *write_requests; NSObject<OS_nw_read_request> *read_requests; NSObject<OS_nw_content_context> *last_output_context; NSObject<OS_nw_protocol_metadata> *metadata; NSObject<OS_nw_protocol_metadata> *input_metadata; NSObject<OS_nw_content_context> *output_context; NSObject<OS_nw_dictionary> *input_contexts; NSObject<OS_nw_content_context> *single_input_context; struct nw_frame_array_s { struct nw_frame *tqh_first; struct nw_frame **tqh_last; } pending_input_frames; NSObject<OS_nw_array> *final_read_list; NSObject<OS_nw_error> *last_error; unsigned char initialized : 1; unsigned char last_output_context_pending : 1; unsigned char servicing_reads : 1; unsigned char input_finished : 1; unsigned char waiting_for_initial_read : 1; unsigned char deferred_final_read : 1; unsigned char delivered_final_read : 1; unsigned char flow_unregistered : 1; unsigned char flow_disconnected : 1; unsigned char waiting_for_connected : 1; unsigned char unused : 6; unsigned char __pad[6]; } shared_protocol;
    NSObject<OS_nw_read_request> *new_flow_read_requests;
    struct nw_protocol { unsigned char x0[16]; struct nw_protocol_identifier *x1; struct nw_protocol_callbacks *x2; struct nw_protocol *x3; void *x4; struct nw_protocol *x5; void *x6; } *transport_protocol;
    struct nw_protocol { unsigned char x0[16]; struct nw_protocol_identifier *x1; struct nw_protocol_callbacks *x2; struct nw_protocol *x3; void *x4; struct nw_protocol *x5; void *x6; } *tls_protocol;
    struct nw_protocol { unsigned char x0[16]; struct nw_protocol_identifier *x1; struct nw_protocol_callbacks *x2; struct nw_protocol *x3; void *x4; struct nw_protocol *x5; void *x6; } *joined_protocol;
    struct nw_protocol_identifier { char x0[32]; int x1; int x2; } *ip_protocol_identifier;
    NSObject<OS_nw_protocol_definition> *multiplexed_message_definition;
    struct nw_protocol { unsigned char x0[16]; struct nw_protocol_identifier *x1; struct nw_protocol_callbacks *x2; struct nw_protocol *x3; void *x4; struct nw_protocol *x5; void *x6; } *multiplexed_message_protocol;
    struct tcp_info { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; int x18; unsigned int x19; unsigned long long x20; unsigned long long x21; unsigned long long x22; unsigned long long x23; unsigned long long x24; unsigned long long x25; unsigned long long x26; unsigned long long x27; unsigned long long x28; unsigned char x29; unsigned char x30; unsigned short x31; unsigned long long x32; unsigned long long x33; unsigned long long x34; unsigned long long x35; unsigned long long x36; unsigned long long x37; unsigned long long x38; unsigned long long x39; unsigned long long x40; unsigned long long x41; unsigned long long x42; unsigned long long x43; struct tcp_conn_status { union { struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; } x0; unsigned int x1; } x0; } x44; unsigned char x45 : 1; unsigned char x46 : 1; unsigned char x47 : 1; unsigned char x48 : 1; unsigned char x49 : 1; unsigned char x50 : 1; unsigned char x51 : 1; unsigned char x52 : 1; unsigned char x53 : 1; unsigned char x54 : 1; unsigned char x55 : 1; unsigned char x56 : 1; unsigned char x57 : 1; unsigned char x58 : 1; unsigned char x59 : 1; unsigned char x60 : 1; unsigned char x61 : 1; unsigned char x62 : 1; unsigned char x63 : 1; unsigned char x64 : 1; unsigned char x65 : 1; unsigned char x66 : 1; unsigned char x67 : 1; unsigned char x68 : 1; unsigned char x69 : 1; unsigned char x70 : 1; unsigned char x71 : 1; unsigned char x72 : 1; unsigned int x73; unsigned int x74; unsigned int x75; unsigned int x76; unsigned int x77; unsigned int x78; unsigned int x79; unsigned int x80; unsigned int x81; unsigned long long x82; unsigned int x83; } *tcp_info;
    struct tcp_connection_info { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned char x16 : 1; unsigned char x17 : 1; unsigned char x18 : 1; unsigned char x19 : 1; unsigned char x20 : 1; unsigned char x21 : 1; unsigned char x22 : 1; unsigned char x23 : 1; unsigned char x24 : 1; unsigned char x25 : 1; unsigned char x26 : 1; unsigned char x27 : 1; unsigned char x28 : 1; unsigned char x29 : 1; unsigned char x30 : 1; unsigned int x31 : 17; unsigned long long x32; unsigned long long x33; unsigned long long x34; unsigned long long x35; unsigned long long x36; unsigned long long x37; unsigned long long x38; } *tcp_connection_info;
    struct nw_data_transfer_snapshot { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; unsigned long long x12; unsigned long long x13; unsigned long long x14; } *data_transfer_snapshot;
    unsigned long long snapshot_length;
    unsigned int snapshot_count;
    NSObject<OS_nw_path_flow_registration> *flow_registration;
    NSObject<OS_dispatch_queue> *client_queue;
    id /* block */ read_close_handler;
    id /* block */ write_close_handler;
    struct nw_hash_table { } *multiplexed_flow_table;
    NSObject<OS_nw_error> *last_error;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock;
    NSObject<OS_nw_fd_wrapper> *connected_fd_wrapper;
    unsigned int pending_write_bytes;
    int pre_connected_fd;
    NSObject<OS_nw_channel> *channel;
    struct nw_protocol { unsigned char x0[16]; struct nw_protocol_identifier *x1; struct nw_protocol_callbacks *x2; struct nw_protocol *x3; void *x4; struct nw_protocol *x5; void *x6; } *socket_protocol;
    struct _DNSServiceRef_t { } *sleep_proxy_ref;
    NSObject<OS_xpc_object> *flow_divert_token;
    NSObject<OS_nw_endpoint> *flow_divert_endpoint;
    NSObject<OS_nw_endpoint> *proxy_original_endpoint;
    unsigned short protocol_log_id_num;
    unsigned char keepalive_event_enabled : 1;
    unsigned long long first_keepalive_time;
    unsigned int keepalive_count;
    unsigned int configured_keepalive_count;
    unsigned int configured_keepalive_interval;
    id /* block */ adaptive_read_event_handler;
    id /* block */ adaptive_write_event_handler;
    id /* block */ keepalive_event_handler;
    id /* block */ metadata_changed_event_handler;
    NSObject<OS_nw_array> *connected_metadata;
    NSObject<OS_nw_array> *connection_wide_metadata;
    unsigned long long sent_application_byte_count;
    unsigned long long received_application_byte_count;
    unsigned char connection_uuid[16];
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)cancelWithHandler:(id)a0 forced:(BOOL)a1;
- (void)startWithHandler:(id)a0;
- (void)updatePathWithHandler:(id)a0;
- (void).cxx_destruct;
- (id)init;
- (void)dealloc;

@end
