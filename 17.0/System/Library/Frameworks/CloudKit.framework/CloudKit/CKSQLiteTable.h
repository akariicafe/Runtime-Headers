@class NSString, NSArray, CKSQLiteDatabase, NSMutableDictionary, CKSQLiteTableGroup, NSDictionary, NSObject, NSMutableArray, NSNumber;

@interface CKSQLiteTable : NSObject <CKSQLiteDatabaseKeyValueProperties> {
    CKSQLiteDatabase *_db;
    struct { struct _opaque_pthread_mutex_t { long long x0; char x1[56]; } x0; struct _opaque_pthread_cond_t { long long x0; char x1[40]; } x1; _Atomic unsigned long long x2; } *_serializer;
    struct { struct _opaque_pthread_mutex_t { long long x0; char x1[56]; } x0; struct _opaque_pthread_cond_t { long long x0; char x1[40]; } x1; _Atomic unsigned long long x2; } *_dbSerializer;
    NSMutableDictionary *_compiledStatementsByLabel;
    NSMutableArray *_referencedGroups;
    NSDictionary *_referencedTablesByProperty;
    BOOL _entriesUseArchivingInit;
}

@property (weak, nonatomic) CKSQLiteTableGroup *tableGroup;
@property (retain, nonatomic) NSObject *databaseManagerData;
@property (retain, nonatomic) id tocTableEntry;
@property (readonly, copy, nonatomic) NSString *logicalTableName;
@property (readonly, copy, nonatomic) NSString *dbTableName;
@property (readonly, nonatomic) NSArray *primaryKeyProperties;
@property (readonly, nonatomic) BOOL isIntegerPrimaryKeyTable;
@property (readonly, nonatomic) NSString *primaryKeyProperty;
@property (readonly, nonatomic) NSNumber *primaryKeyPropertyInfo;
@property (readonly, nonatomic) BOOL databaseTableWasCreated;
@property (nonatomic) BOOL logOperations;

+ (void)initialize;
+ (Class)entryClass;
+ (id)allPropertyNames;
+ (unsigned long long)dbVersion;
+ (id)dbProperties;
+ (void)enumeratePropertyDataWithBlock:(id /* block */)a0;
+ (id)copyOfEntry:(id)a0;
+ (void)decodeEntry:(id)a0 withCoder:(id)a1;
+ (id)descriptionOfEntry:(id)a0;
+ (id)descriptionOfProperties:(id)a0 from:(id)a1;
+ (void)encodeEntry:(id)a0 withCoder:(id)a1;
+ (BOOL)entriesHaveEqualProperties:(id)a0 other:(id)a1 includePrimaryKeys:(BOOL)a2;
+ (void)enumerateClassPropertyDictionariesWithBlock:(id /* block */)a0;
+ (id)flattenedDBProperties;
+ (unsigned long long)hashForEntry:(id)a0;
+ (id)nonKeyProperties;
+ (unsigned int)propertyCount;
+ (id)propertyInfo:(id)a0;
+ (void)setValue:(id)a0 forProperty:(id)a1 propertyInfo:(id)a2 inObject:(id)a3;
+ (BOOL)shouldValidateEntryClass;
+ (Class)tableClassWithName:(id)a0 properties:(id)a1 version:(unsigned long long)a2 entryClass:(Class)a3;
+ (BOOL)useNSCoding;
+ (id)valueForProperty:(id)a0 propertyInfo:(id)a1 inObject:(id)a2;
+ (id)valueForProperty:(id)a0 propertyInfo:(id)a1 inObject:(id)a2 allowFetchingUnsetPropertySentinel:(BOOL)a3;

- (id)db;
- (id)performTransaction:(id /* block */)a0;
- (id)deleteObject:(id)a0;
- (id)init;
- (id)wakeFromDatabase;
- (id)setNumberValue:(id)a0 forKey:(id)a1;
- (id)setDateValue:(id)a0 forKey:(id)a1;
- (void)cacheStatement:(id)a0;
- (void)addTransactionCompletionHandler:(id /* block */)a0;
- (id)setStringValue:(id)a0 forKey:(id)a1;
- (void)setDbTableName:(id)a0;
- (id)dateValueForKey:(id)a0 error:(id *)a1;
- (id)setDataValue:(id)a0 forKey:(id)a1;
- (id)initWithLogicalTableName:(id)a0;
- (id)setUUIDValue:(id)a0 forKey:(id)a1;
- (id)description;
- (id)createTableSQL;
- (void).cxx_destruct;
- (id)setObjectValue:(id)a0 forKey:(id)a1;
- (id)insertObject:(id)a0;
- (id)stringValueForKey:(id)a0 error:(id *)a1;
- (void)serialize:(id /* block */)a0;
- (id)numberValueForKey:(id)a0 error:(id *)a1;
- (unsigned long long)count:(id *)a0;
- (id)UUIDValueForKey:(id)a0 error:(id *)a1;
- (id)dataValueForKey:(id)a0 error:(id *)a1;
- (id)objectValueForKey:(id)a0 error:(id *)a1;
- (BOOL)hasEntry:(id)a0 error:(id *)a1;
- (id)predicateForMatchingPrimaryKeys;
- (void)_addPredicateForMatching:(id)a0 toStatement:(id)a1;
- (id)_bindProperties:(id)a0 valueObject:(id)a1 inStatement:(id)a2 includePrimaryKeys:(BOOL)a3;
- (id)_fetchPropertiesUsingStatement:(id)a0 inObject:(id)a1 matchingDBProperties:(id)a2 label:(id)a3;
- (id)_performEnumerationWithBlock:(id /* block */)a0 usingEnumerator:(id /* block */)a1;
- (id)_performInsertOrUpdateStatement:(id)a0 usingObject:(id)a1;
- (id)_predicateForMatchingProperties:(id)a0;
- (void)_setupActivityEntry:(id)a0;
- (id)_statementForFetchingEntriesMatchingObject:(id)a0 label:(id)a1 error:(id *)a2 setupBlock:(id /* block */)a3;
- (id)_valueDictionaryForProperties:(id)a0 inObject:(id)a1 nilPropertyError:(id *)a2 selForNilPropertyError:(SEL)a3;
- (void)activityTriggerWasRolledBack;
- (void)activityTriggered:(id)a0;
- (id)addPredicateToStatement:(id)a0 predicate:(id /* block */)a1;
- (void)assertNotSerialized;
- (void)assertSerialized;
- (id)checkConstraintForProperty:(id)a0;
- (id)compiledStatementWithLabel:(id)a0 creationBlock:(id /* block */)a1;
- (unsigned long long)countOfEntriesMatching:(id)a0 label:(id)a1 error:(id *)a2 predicate:(id /* block */)a3;
- (unsigned long long)deleteAllEntries:(id *)a0;
- (unsigned long long)deleteEntriesMatching:(id)a0 label:(id)a1 error:(id *)a2 predicate:(id /* block */)a3;
- (id)deletePrimaryKeyValue:(id)a0;
- (id)didCreateDatabaseTable;
- (id)entriesMatchingObject:(id)a0 label:(id)a1 error:(id *)a2 setupBlock:(id /* block */)a3;
- (id)entriesWithValues:(id)a0 label:(id)a1 error:(id *)a2 setupBlock:(id /* block */)a3;
- (id)entryEnumerator:(id *)a0;
- (id)entryWithPrimaryKey:(id)a0 fetchProperties:(id)a1 error:(id *)a2;
- (id)entryWithValues:(id)a0 label:(id)a1 error:(id *)a2 setupBlock:(id /* block */)a3;
- (id)enumerateEntriesWithBlock:(id /* block */)a0;
- (id)extraGroupTables:(id)a0;
- (id)fetchAllEntries:(id *)a0;
- (id)fetchAllProperties:(id)a0;
- (id)fetchProperties:(id)a0 inObject:(id)a1 matchingDBProperties:(id)a2 label:(id)a3;
- (id)fetchProperties:(id)a0 label:(id)a1 error:(id *)a2;
- (id)finishInitializing;
- (BOOL)hasEntries:(id *)a0;
- (id)insertObject:(id)a0 orUpdateProperties:(id)a1 label:(id)a2;
- (id)maximumValueOfProperty:(id)a0 error:(id *)a1;
- (BOOL)migrateDataFromTable:(id)a0 error:(id *)a1;
- (BOOL)migrateEntryDataFromTable:(id)a0 entry:(id)a1 toEntry:(id)a2 addedProperties:(id)a3;
- (id)minimumValueOfProperty:(id)a0 error:(id *)a1;
- (id)newEntryObject;
- (id)newEntryObjectFromStatement:(id)a0 error:(id *)a1;
- (id)performInTransaction:(id /* block */)a0;
- (id)primaryKeyValuesInEntry:(id)a0;
- (id)referenceProperties;
- (id)requestCallbackWithDate:(id)a0 coalescingInterval:(double)a1 minimumSeparation:(double)a2;
- (unsigned long long)setProperties:(id)a0 valuesToStore:(id)a1 inEntriesMatching:(id)a2 label:(id)a3 error:(id *)a4 predicate:(id /* block */)a5;
- (void)setValue:(id)a0 forProperty:(id)a1 propertyInfo:(id)a2 inObject:(id)a3;
- (id)setupReferencedTableCache;
- (long long)sizeOfProperty:(id)a0 error:(id *)a1;
- (long long)sizeOfProperty:(id)a0 inEntriesMatching:(id)a1 label:(id)a2 error:(id *)a3 predicate:(id /* block */)a4;
- (long long)sizeOfProperty:(id)a0 inEntry:(id)a1 label:(id)a2 error:(id *)a3;
- (id)statementForFetchingProperties:(id)a0 inEntriesMatchingColumns:(id)a1 error:(id *)a2;
- (long long)sumOfProperty:(id)a0 error:(id *)a1;
- (long long)sumOfProperty:(id)a0 inEntriesMatching:(id)a1 label:(id)a2 error:(id *)a3 predicate:(id /* block */)a4;
- (id)tableForReferenceProperty:(id)a0;
- (id)tableForReferenceProperty:(id)a0 block:(id /* block */)a1;
- (id)updateProperties:(id)a0 usingObject:(id)a1 label:(id)a2;
- (id)updateUsingObject:(id)a0;
- (id)valueForProperty:(id)a0 propertyInfo:(id)a1 inObject:(id)a2;

@end
