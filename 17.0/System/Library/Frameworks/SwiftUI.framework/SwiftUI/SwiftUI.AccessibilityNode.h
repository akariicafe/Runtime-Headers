@class NSString, NSArray, UIBezierPath, AXChartDescriptor, NSAttributedString, UIResponder;
@protocol _TtP7SwiftUI28PlatformAccessibilityElement_;

@interface SwiftUI.AccessibilityNode : UIResponder <UIAccessibilityContainerDataTable, UIAccessibilityContainerDataTableCell, AXContainerDataSeries, AXChart> {
    void /* unknown type, empty encoding */ id;
    void /* unknown type, empty encoding */ version;
    void /* unknown type, empty encoding */ children;
    void /* unknown type, empty encoding */ bridgedChild;
    void /* unknown type, empty encoding */ parent;
    void /* unknown type, empty encoding */ viewRendererHost;
    void /* unknown type, empty encoding */ environment;
    void /* unknown type, empty encoding */ attachmentsStorage;
    void /* unknown type, empty encoding */ cachedCombinedAttachment;
    void /* unknown type, empty encoding */ platformElementPropertiesDirty;
    void /* unknown type, empty encoding */ platformRotorStorage;
    void /* unknown type, empty encoding */ cachedIsPlaceholderOrIgnored;
    void /* unknown type, empty encoding */ relationshipScope;
}

@property (nonatomic) BOOL isAccessibilityElement;
@property (nonatomic) unsigned long long accessibilityTraits;
@property (nonatomic, copy) NSString *accessibilityLabel;
@property (nonatomic, copy) NSArray *accessibilityUserInputLabels;
@property (nonatomic, copy) NSArray *accessibilityAttributedUserInputLabels;
@property (nonatomic, retain) NSAttributedString *accessibilityAttributedLabel;
@property (nonatomic, copy) NSString *accessibilityValue;
@property (nonatomic, retain) NSAttributedString *accessibilityAttributedValue;
@property (nonatomic, copy) NSString *accessibilityHint;
@property (nonatomic, retain) NSAttributedString *accessibilityAttributedHint;
@property (nonatomic, copy) NSString *accessibilityLanguage;
@property (nonatomic, copy) NSString *accessibilityTextualContext;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } accessibilityFrame;
@property (nonatomic, retain) UIBezierPath *accessibilityPath;
@property (nonatomic, readonly) BOOL _accessibilityIsHostNode;
@property (nonatomic, readonly) id<_TtP7SwiftUI28PlatformAccessibilityElement_> _accessibilityNodeRepresentedElement;
@property (nonatomic, readonly) NSArray *_accessibilityNodeChildrenUnsorted;
@property (nonatomic, copy) NSArray *accessibilityElements;
@property (nonatomic) struct CGPoint { double x0; double x1; } accessibilityActivationPoint;
@property (nonatomic, copy) NSArray *accessibilityDragSourceDescriptors;
@property (nonatomic, copy) NSArray *accessibilityDropPointDescriptors;
@property (nonatomic) BOOL accessibilityViewIsModal;
@property (nonatomic) BOOL accessibilityElementsHidden;
@property (nonatomic) BOOL shouldGroupAccessibilityChildren;
@property (nonatomic) long long accessibilityNavigationStyle;
@property (nonatomic) long long accessibilityContainerType;
@property (nonatomic) BOOL accessibilityRespondsToUserInteraction;
@property (nonatomic, readonly) BOOL _accessibilityExplicitlyNonInteractable;
@property (nonatomic, copy) NSArray *accessibilityCustomActions;
@property (nonatomic) unsigned long long accessibilityDirectTouchOptions;
@property (nonatomic, readonly) NSArray *_accessibilityUserDefinedLinkedUIElements;
@property (nonatomic, copy) NSArray *accessibilityCustomRotors;
@property (nonatomic, copy) NSString *accessibilityIdentifier;
@property (nonatomic, retain) AXChartDescriptor *accessibilityChartDescriptor;
@property (nonatomic, readonly) UIResponder *nextResponder;

- (id)init;
- (void)dealloc;
- (void)accessibilityIncrement;
- (id)_accessibilityUserTestingChildren;
- (void).cxx_destruct;
- (void)accessibilityDecrement;
- (BOOL)accessibilityActivate;
- (id)accessibilityContainer;
- (void)accessibilityElementDidBecomeFocused;
- (void)accessibilityElementDidLoseFocus;
- (BOOL)accessibilityPerformEscape;
- (BOOL)accessibilityPerformMagicTap;
- (BOOL)accessibilityScroll:(long long)a0;
- (BOOL)accessibilityZoomInAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)accessibilityZoomOutAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)_accessibilityCanPerformAction:(int)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_accessibilityBoundsForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (BOOL)_accessibilityCanPerformEscapeAction;
- (BOOL)_accessibilityDataSeriesIncludesTrendlineInSonification;
- (id)_accessibilityDataSeriesMinimumValueForAxis:(long long)a0;
- (double)_accessibilityDataSeriesSonificationDuration;
- (BOOL)_accessibilityDataSeriesSupportsSummarization;
- (long long)_accessibilityDataSeriesType;
- (id)_accessibilityDataSeriesValueDescriptionForPosition:(double)a0 axis:(long long)a1;
- (BOOL)_accessibilityIsChartElement;
- (BOOL)_accessibilityIsFirstSiblingForType:(unsigned long long)a0;
- (BOOL)_accessibilityIsRTL;
- (double)_accessibilityMinValue;
- (id)_accessibilityRoleDescription;
- (BOOL)_accessibilitySupportsActivateAction;
- (id)_accessibilityUserTestingVisibleAncestor;
- (id)_accessibilityUserTestingParent;
- (unsigned long long)_accessibilityAutomationType;
- (id)_accessibilityDataSeriesGridlinePositionsForAxis:(long long)a0;
- (id)_accessibilityDataSeriesMaximumValueForAxis:(long long)a0;
- (id)_accessibilityDataSeriesName;
- (BOOL)_accessibilityDataSeriesSupportsSonification;
- (id)_accessibilityDataSeriesTitleForAxis:(long long)a0;
- (id)_accessibilityDataSeriesUnitLabelForAxis:(long long)a0;
- (id)_accessibilityDataSeriesValuesForAxis:(long long)a0;
- (long long)_accessibilityExpandedStatus;
- (id)_accessibilityHeadingLevel;
- (double)_accessibilityMaxValue;
- (double)_accessibilityNumberValue;
- (long long)accessibilityColumnCount;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityColumnRange;
- (id)accessibilityCustomAttribute:(id)a0;
- (id)accessibilityCustomContent;
- (id)accessibilityDataTableCellElementForRow:(long long)a0 column:(long long)a1;
- (id)accessibilityHeaderElementsForColumn:(long long)a0;
- (id)accessibilityHeaderElementsForRow:(long long)a0;
- (long long)accessibilityRowCount;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityRowRange;
- (id)accessibilityURL;

@end
