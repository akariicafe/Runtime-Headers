@class CARSessionStatus, MPAVRoutingController, NSMapTable, MPAVClippingTableView, UITableView, MPVolumeGroupSliderCoordinator, NSDictionary, UIColor, MPAVEndpointRoute, NSString, MPAVRoute, MPSectionedCollection, NSMutableSet, MPWeakTimer, NSNumber, NSArray, MPAVRoutingViewControllerUpdate;
@protocol MPAVRoutingViewControllerThemeDelegate, MPAVRoutingViewControllerDelegate;

@interface MPAVRoutingViewController : UIViewController <CARSessionObserving, UITableViewDataSource, UITableViewDelegate, MPAVRoutingControllerDelegate, MPAVRoutingTableViewCellDelegate> {
    MPAVClippingTableView *_tableView;
    MPAVRoutingViewControllerUpdate *_pendingUpdate;
    MPAVRoutingViewControllerUpdate *_optimisticUpdate;
    BOOL _isAnimatingUpdate;
    MPAVRoute *_displayedEndpointRoute;
    MPSectionedCollection *_routingViewItems;
    NSArray *_cachedPickedRoutes;
    NSArray *_cachedDisplayableAvailableRoutes;
    NSArray *_cachedPendingPickedRoutes;
    NSArray *_cachedDisplayAsPickedRoutes;
    NSArray *_cachedVolumeCapableRoutes;
    NSDictionary *_cachedRouteGrouping;
    NSMutableSet *_expandedGroupUIDs;
    MPWeakTimer *_updateTimer;
    MPAVRoutingController *_routingController;
    long long _routeDiscoveryMode;
    UIColor *_tableCellsBackgroundColor;
    UIColor *_tableCellsContentColor;
    int _airPlayPasswordAlertDidAppearToken;
    int _airPlayPasswordAlertDidCancelToken;
    BOOL _airPlayPasswordAlertDidAppearTokenIsValid;
    BOOL _needsDisplayedRoutesUpdate;
    BOOL _suspendedDiscoveryModeDueToApplicationState;
    BOOL _shouldAutomaticallyUpdateRoutesList;
    BOOL _shouldPickRouteOnSelection;
    BOOL _onScreen;
    BOOL _hasUserSelections;
    CARSessionStatus *_carPlayStatus;
    unsigned long long _updatesSincePresentation;
    long long _discoveryModeBeforeEnteringBackground;
}

@property (readonly, nonatomic, getter=isInCarPlay) BOOL inCarPlay;
@property (weak, nonatomic) id<MPAVRoutingViewControllerThemeDelegate> themeDelegate;
@property (readonly, nonatomic) MPAVRoutingController *_routingController;
@property (retain, nonatomic) MPAVEndpointRoute *endpointRoute;
@property (readonly, nonatomic) UITableView *_tableView;
@property (readonly, nonatomic) double _normalCellHeight;
@property (readonly, nonatomic) double _expandedCellHeight;
@property (nonatomic, getter=_continuousCornerRadius, setter=_setContinuousCornerRadius:) double continuousCornerRadius;
@property (retain, nonatomic, setter=_setTableCellsBackgroundColor:) UIColor *_tableCellsBackgroundColor;
@property (retain, nonatomic, setter=_setTableCellsContentColor:) UIColor *_tableCellsContentColor;
@property (nonatomic, setter=_setShouldAutomaticallyUpdateRoutesList:) BOOL _shouldAutomaticallyUpdateRoutesList;
@property (nonatomic, setter=_setShouldPickRouteOnSelection:) BOOL _shouldPickRouteOnSelection;
@property (retain, nonatomic) NSMapTable *outputDeviceVolumeSliders;
@property (retain, nonatomic) MPVolumeGroupSliderCoordinator *groupSliderCoordinator;
@property (nonatomic) BOOL sortByIsVideoRoute;
@property (readonly, nonatomic) unsigned long long style;
@property (weak, nonatomic) id<MPAVRoutingViewControllerDelegate> delegate;
@property (nonatomic, setter=setAVItemType:) long long avItemType;
@property (nonatomic) unsigned long long mirroringStyle;
@property (nonatomic) unsigned long long iconStyle;
@property (nonatomic) BOOL allowMirroring;
@property (copy, nonatomic) NSNumber *discoveryModeOverride;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)routingControllerAvailableRoutesDidChange:(id)a0;
- (id)tableView:(id)a0 viewForHeaderInSection:(long long)a1;
- (long long)numberOfSectionsInTableView:(id)a0;
- (void)routingCellDidTapToExpand:(id)a0;
- (void)viewWillAppear:(BOOL)a0;
- (void)_registerNotifications;
- (id)tableView:(id)a0 cellForRowAtIndexPath:(id)a1;
- (void)_unregisterNotifications;
- (void)dealloc;
- (BOOL)_operationRequiresOptimisticState:(long long)a0 routes:(id)a1;
- (long long)tableView:(id)a0 numberOfRowsInSection:(long long)a1;
- (void)viewWillLayoutSubviews;
- (id)initWithStyle:(unsigned long long)a0;
- (void)tableView:(id)a0 willDisplayCell:(id)a1 forRowAtIndexPath:(id)a2;
- (double)tableView:(id)a0 heightForRowAtIndexPath:(id)a1;
- (void)setOptimisticUpdate:(id)a0;
- (void)tableView:(id)a0 didSelectRowAtIndexPath:(id)a1;
- (id)_displayableRoutesInRoutes:(id)a0;
- (void)routingController:(id)a0 shouldHijackRoute:(id)a1 alertStyle:(long long)a2 busyRouteName:(id)a3 presentingAppName:(id)a4 completion:(id /* block */)a5;
- (id)groupUIDForRoute:(id)a0;
- (void)resetDisplayedRoutes;
- (void)viewDidLoad;
- (void)_applyUpdate:(id)a0;
- (double)tableView:(id)a0 heightForHeaderInSection:(long long)a1;
- (BOOL)_wouldShareAudioForPickedRoute:(id)a0 operation:(long long)a1 pickedRoutes:(id)a2;
- (id)tableView:(id)a0 titleForHeaderInSection:(long long)a1;
- (double)tableView:(id)a0 estimatedHeightForRowAtIndexPath:(id)a1;
- (void)sessionDidConnect:(id)a0;
- (id)_stateDumpObject;
- (void)_setupUpdateTimerIfNecessary;
- (id)_createSectionedCollection:(id)a0 withPickedRoutes:(id)a1;
- (void)_updateDisplayedRoutes;
- (BOOL)hasCarKitRoute;
- (id)initWithNibName:(id)a0 bundle:(id)a1;
- (id)endpointGroupUID;
- (void)routingController:(id)a0 pickedRoutesDidChange:(id)a1;
- (void)_setNeedsDisplayedRoutesUpdate;
- (void).cxx_destruct;
- (void)routingController:(id)a0 didFailToPickRouteWithError:(id)a1;
- (void)_collapseAllGroups;
- (void)viewDidMoveToWindow:(id)a0 shouldAppearOrDisappear:(BOOL)a1;
- (id)_displayAsPickedRoutesInRoutes:(id)a0;
- (void)viewDidAppear:(BOOL)a0;
- (void)updateExpandedGroups;
- (void)sessionDidDisconnect:(id)a0;
- (void)viewDidDisappear:(BOOL)a0;
- (void)_setNeedsRouteDiscoveryModeUpdate;
- (struct CGSize { double x0; double x1; })preferredContentSize;
- (void)_enqueueUpdate:(id)a0;
- (BOOL)isInVehicle;
- (void)resetScrollPosition;
- (void)_applicationDidEnterBackgroundNotification:(id)a0;
- (void)_applicationWillEnterForegroundNotification:(id)a0;
- (void)_beginRouteDiscovery;
- (void)_configureCell:(id)a0 forIndexPath:(id)a1;
- (id)_createRefreshUpdate;
- (id)_createReloadUpdate;
- (id)_createRoutingViewItemsForRoutes:(id)a0;
- (void)_createUpdateWithCompletion:(id /* block */)a0;
- (id)_createVolumeSlider;
- (void)_diplayShareAudioDisabledAlertForReason:(id)a0;
- (void)_endRouteDiscovery;
- (void)_endUpdates;
- (void)_initWithStyle:(unsigned long long)a0 routingController:(id)a1;
- (void)_registerCarPlayObserver;
- (void)_setRouteDiscoveryMode:(long long)a0;
- (BOOL)_shouldDisplayRouteAsPicked:(id)a0;
- (double)_tableViewFooterViewHeight;
- (double)_tableViewHeaderViewHeight;
- (double)_tableViewHeightAccordingToDataSource;
- (id)_volumeCapableRoutesInRoutes:(id)a0;
- (void)_volumeSliderVolumeControlAvailabilityDidChangeNotification:(id)a0;
- (void)enqueueRefreshUpdate;
- (id)initWithStyle:(unsigned long long)a0 routingController:(id)a1;
- (void)registerTableViewCells;
- (void)routingCell:(id)a0 mirroringSwitchValueDidChange:(BOOL)a1;
- (BOOL)shouldGroupRoutingViewItems;
- (BOOL)shouldOverrideContentSizeCategory:(id)a0;

@end
