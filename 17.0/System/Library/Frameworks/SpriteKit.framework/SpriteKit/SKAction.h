@interface SKAction : NSObject <NSCopying, NSSecureCoding> {
    struct SKCAction { void /* function */ **x0; unsigned int x1; float x2; id /* block */ x3; id x4; BOOL x5; double x6; double x7; float x8; float x9; double x10; BOOL x11; BOOL x12; id /* block */ x13; long long x14; float x15; float x16; float x17; float x18; } *_caction;
}

@property (class, readonly) BOOL supportsSecureCoding;

@property (nonatomic) BOOL finished;
@property (nonatomic) double duration;
@property (nonatomic) long long timingMode;
@property (copy, nonatomic) id /* block */ timingFunction;
@property (nonatomic) double speed;

+ (id)unhide;
+ (id)setTexture:(id)a0;
+ (id)play;
+ (id)pause;
+ (id)stop;
+ (Class)unarchiver:(id)a0 cannotDecodeObjectOfClassName:(id)a1 originalClasses:(id)a2;
+ (id)runBlock:(id /* block */)a0;
+ (id)hide;
+ (id)fadeInWithDuration:(double)a0;
+ (id)fadeOutWithDuration:(double)a0;
+ (id)sequence:(id)a0;
+ (id)removeFromParent;
+ (id)group:(id)a0;
+ (id)animateWithWarps:(id)a0 times:(id)a1 restore:(BOOL)a2;
+ (id)runBlock:(id /* block */)a0 queue:(id)a1;
+ (id)actionNamed:(id)a0;
+ (id)actionNamed:(id)a0 duration:(double)a1;
+ (id)actionNamed:(id)a0 fromURL:(id)a1;
+ (id)actionNamed:(id)a0 fromURL:(id)a1 duration:(double)a2;
+ (void)addActionsToCachedActionTable:(id)a0;
+ (id)animateWithNormalTextures:(id)a0 timePerFrame:(double)a1;
+ (id)animateWithNormalTextures:(id)a0 timePerFrame:(double)a1 resize:(BOOL)a2 restore:(BOOL)a3;
+ (id)animateWithTextures:(id)a0 timePerFrame:(double)a1;
+ (id)animateWithTextures:(id)a0 timePerFrame:(double)a1 resize:(BOOL)a2 restore:(BOOL)a3;
+ (id)animateWithWarps:(id)a0 times:(id)a1;
+ (id)applyAngularImpulse:(double)a0 duration:(double)a1;
+ (id)applyForce:(struct CGVector { double x0; double x1; })a0 atPoint:(struct CGPoint { double x0; double x1; })a1 duration:(double)a2;
+ (id)applyForce:(struct CGVector { double x0; double x1; })a0 duration:(double)a1;
+ (id)applyImpulse:(struct CGVector { double x0; double x1; })a0 atPoint:(struct CGPoint { double x0; double x1; })a1 duration:(double)a2;
+ (id)applyImpulse:(struct CGVector { double x0; double x1; })a0 duration:(double)a1;
+ (id)applyTorque:(double)a0 duration:(double)a1;
+ (id)changeChargeBy:(float)a0 duration:(double)a1;
+ (id)changeChargeTo:(float)a0 duration:(double)a1;
+ (id)changeMassBy:(float)a0 duration:(double)a1;
+ (id)changeMassTo:(float)a0 duration:(double)a1;
+ (id)changeObstructionBy:(float)a0 duration:(double)a1;
+ (id)changeObstructionTo:(float)a0 duration:(double)a1;
+ (id)changeOcclusionBy:(float)a0 duration:(double)a1;
+ (id)changeOcclusionTo:(float)a0 duration:(double)a1;
+ (id)changePlaybackRateBy:(float)a0 duration:(double)a1;
+ (id)changePlaybackRateTo:(float)a0 duration:(double)a1;
+ (id)changeReverbBy:(float)a0 duration:(double)a1;
+ (id)changeReverbTo:(float)a0 duration:(double)a1;
+ (id)changeVolumeBy:(float)a0 duration:(double)a1;
+ (id)changeVolumeTo:(float)a0 duration:(double)a1;
+ (void)clearActionTableCache;
+ (id)colorizeWithColor:(id)a0 colorBlendFactor:(double)a1 duration:(double)a2;
+ (id)colorizeWithColorBlendFactor:(double)a0 duration:(double)a1;
+ (void)convertAction:(id)a0 toDuration:(double)a1;
+ (id)customActionWithDuration:(double)a0 actionBlock:(id /* block */)a1;
+ (id)fadeAlphaBy:(double)a0 duration:(double)a1;
+ (id)fadeAlphaTo:(double)a0 duration:(double)a1;
+ (id)falloffBy:(float)a0 duration:(double)a1;
+ (id)falloffTo:(float)a0 duration:(double)a1;
+ (id)findNamedActionInBundle:(id)a0;
+ (id)followPath:(struct CGPath { } *)a0 asOffset:(BOOL)a1 orientToPath:(BOOL)a2 duration:(double)a3;
+ (id)followPath:(struct CGPath { } *)a0 asOffset:(BOOL)a1 orientToPath:(BOOL)a2 speed:(double)a3;
+ (id)followPath:(struct CGPath { } *)a0 duration:(double)a1;
+ (id)followPath:(struct CGPath { } *)a0 speed:(double)a1;
+ (id)javaScriptActionWithDuration:(double)a0 script:(id)a1;
+ (id)moveBY:(struct CGVector { double x0; double x1; })a0 duration:(double)a1;
+ (id)moveBy:(struct CGVector { double x0; double x1; })a0 duration:(double)a1;
+ (id)moveByX:(double)a0 y:(double)a1 duration:(double)a2;
+ (id)moveTo:(struct CGPoint { double x0; double x1; })a0 duration:(double)a1;
+ (id)moveToX:(double)a0 duration:(double)a1;
+ (id)moveToY:(double)a0 duration:(double)a1;
+ (id)performSelector:(SEL)a0 onTarget:(id)a1;
+ (id)playSoundFileNamed:(id)a0;
+ (id)playSoundFileNamed:(id)a0 atPosition:(struct CGPoint { double x0; double x1; })a1 waitForCompletion:(BOOL)a2;
+ (id)playSoundFileNamed:(id)a0 waitForCompletion:(BOOL)a1;
+ (id)reachTo:(struct CGPoint { double x0; double x1; })a0 rootNode:(id)a1 duration:(double)a2;
+ (id)reachTo:(struct CGPoint { double x0; double x1; })a0 rootNode:(id)a1 velocity:(double)a2;
+ (id)reachToNode:(id)a0 rootNode:(id)a1 duration:(double)a2;
+ (id)reachToNode:(id)a0 rootNode:(id)a1 velocity:(double)a2;
+ (id)recursivePathsForResourcesOfType:(id)a0 inDirectory:(id)a1;
+ (id)repeatAction:(id)a0 count:(unsigned long long)a1;
+ (id)repeatActionForever:(id)a0;
+ (id)resizeByWidth:(double)a0 height:(double)a1 duration:(double)a2;
+ (id)resizeToHeight:(double)a0 duration:(double)a1;
+ (id)resizeToWidth:(double)a0 duration:(double)a1;
+ (id)resizeToWidth:(double)a0 height:(double)a1 duration:(double)a2;
+ (id)rotateByAngle:(double)a0 duration:(double)a1;
+ (id)rotateToAngle:(double)a0 duration:(double)a1;
+ (id)rotateToAngle:(double)a0 duration:(double)a1 shortestUnitArc:(BOOL)a2;
+ (id)runAction:(id)a0 onChildWithName:(id)a1;
+ (id)scaleBy:(double)a0 duration:(double)a1;
+ (id)scaleTo:(double)a0 duration:(double)a1;
+ (id)scaleToSize:(struct CGSize { double x0; double x1; })a0 duration:(double)a1;
+ (id)scaleXBy:(double)a0 y:(double)a1 duration:(double)a2;
+ (id)scaleXTo:(double)a0 duration:(double)a1;
+ (id)scaleXTo:(double)a0 y:(double)a1 duration:(double)a2;
+ (id)scaleYTo:(double)a0 duration:(double)a1;
+ (id)setNormalTexture:(id)a0;
+ (id)setNormalTexture:(id)a0 resize:(BOOL)a1;
+ (id)setTexture:(id)a0 resize:(BOOL)a1;
+ (id)speedBy:(double)a0 duration:(double)a1;
+ (id)speedTo:(double)a0 duration:(double)a1;
+ (id)stereoPanBy:(float)a0 duration:(double)a1;
+ (id)stereoPanTo:(float)a0 duration:(double)a1;
+ (id)strengthBy:(float)a0 duration:(double)a1;
+ (id)strengthTo:(float)a0 duration:(double)a1;
+ (id)waitForDuration:(double)a0;
+ (id)waitForDuration:(double)a0 withRange:(double)a1;
+ (id)warpTo:(id)a0 duration:(double)a1;

- (void)commonInit;
- (id)init;
- (void)dealloc;
- (void)encodeWithCoder:(id)a0;
- (id)copy;
- (BOOL)isEqualToAction:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)subactions;
- (struct SKCAction { void /* function */ **x0; unsigned int x1; float x2; id /* block */ x3; id x4; BOOL x5; double x6; double x7; float x8; float x9; double x10; BOOL x11; BOOL x12; id /* block */ x13; long long x14; float x15; float x16; float x17; float x18; } *)caction;
- (double)ratioForTime:(double)a0;
- (id)reversedAction;
- (void)setCppAction:(void *)a0;
- (void)updateWithTarget:(id)a0 forTime:(double)a1;
- (void)wasAddedToTarget:(id)a0 atTime:(double)a1;
- (void)wasPausedWithTarget:(id)a0 atTime:(double)a1;
- (void)wasRemovedFromTarget:(id)a0 atTime:(double)a1;
- (void)willResumeWithTarget:(id)a0 atTime:(double)a1;
- (void)willStartWithTarget:(id)a0 atTime:(double)a1;

@end
