@interface SNTimeUtils : NSObject

+ (void)clipTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 toBounds:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a1 handler:(id /* block */)a2;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })loopTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 withinTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a1 error:(id *)a2;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })addOffset:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 toTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a1;
+ (id)addOffset:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 toTimeRanges:(id)a1;
+ (id)addOffset:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 toTimes:(id)a1;
+ (id)audioTimeAdvancedByFrames:(unsigned int)a0 fromTime:(id)a1;
+ (BOOL)checkTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 hasTimescale:(int)a1;
+ (BOOL)checkTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 isEqualToOther:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a1;
+ (BOOL)checkTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 isIdenticalToOther:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a1;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })clipTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 toBounds:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a1;
+ (id /* block */)comparatorOrderingTimeValuesEarliestToLatest;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })convertScaleForTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 toValue:(int)a1 preferShrinkingWhenRounding:(BOOL)a2;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })convertScaleForTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 toValue:(int)a1 startRoundingMethod:(unsigned int)a2 durationRoundingMethod:(unsigned int)a3;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })divideTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 byTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 error:(id *)a2;
+ (id)endTimesFromTimeRangeCollection:(id)a0;
+ (id)integerDivideTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 byTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 roundingMethod:(unsigned int)a2 error:(id *)a3;
+ (id)latestEndTimeInTimeRangeCollection:(id)a0;
+ (id)latestTimeInTimeCollection:(id)a0;
+ (id)loopTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 withinTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a1 error:(id *)a2;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })makeInvalidTimeRange;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })moveInStepsFromTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 towardTargetTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 stepSize:(struct { long long x0; int x1; unsigned int x2; long long x3; })a2 roundingMethod:(unsigned int)a3 movementHandler:(id /* block */)a4 error:(id *)a5;
+ (id)multiplesOfTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 count:(unsigned long long)a1;
+ (id)multiplesOfTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 fromOffset:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 count:(unsigned long long)a2;
+ (id)multiplesOfTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 withinTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a1 error:(id *)a2;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })negateTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
+ (long long)orderingFromEarliestToLatestCompareTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 toOther:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
+ (long long)orderingFromEarliestToLatestCompareTimeValue:(id)a0 toOther:(id)a1;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })remainderOfDividingTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 byTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 error:(id *)a2;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })roundTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 toMultipleOf:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 relativeTo:(struct { long long x0; int x1; unsigned int x2; long long x3; })a2 roundingMethod:(unsigned int)a3 error:(id *)a4;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })selectEarliestBetweenTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 andTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })selectLatestBetweenTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 andTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
+ (id)splitTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 atEachMultipleOf:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 error:(id *)a2;
+ (id)splitTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 atEachMultipleOf:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 fromOffset:(struct { long long x0; int x1; unsigned int x2; long long x3; })a2 error:(id *)a3;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })standardizeTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 negativeShouldResideInTimescale:(BOOL)a1;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })standardizeTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 directionShouldBePositive:(BOOL)a1;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })standardizeTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 directionShouldBePositive:(BOOL)a1 negativeShouldResideInTimescale:(BOOL)a2;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })standardizeTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 negativeShouldResideInTimeScale:(BOOL)a1;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })subtractOffset:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 fromTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a1;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })timeFromAVAudioTime:(id)a0;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })timeRangeSteppingFromTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 towardTargetTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 stepSize:(struct { long long x0; int x1; unsigned int x2; long long x3; })a2 roundingMethod:(unsigned int)a3 error:(id *)a4;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })timeSinceBeginningOfTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 toTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })timeSinceBeginningOfTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 toTimeWithinRange:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 error:(id *)a2;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })timeToEndOfTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 fromTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })timeToEndOfTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 fromTimeWithinRange:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 error:(id *)a2;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })timeWithinTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 precedingEndByMaxTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
+ (BOOL)validateTimeContainedInTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 time:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 error:(id *)a2;
+ (BOOL)validateTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a0 hasTimescale:(int)a1 error:(id *)a2;

- (id)init;

@end
