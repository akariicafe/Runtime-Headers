@class EKDayOccurrenceTravelTimeView, NSObject, UIView, CUIKOROccurrenceState, EKEvent, NSString, EKEventGestureController, UITraitCollection, UIPointerInteraction, UIEditMenuInteraction, UIColor, UIImageView;
@protocol EKDayOccurrenceViewDelegate;

@interface EKDayOccurrenceView : UIView <CUIKOROccurrenceState, UIPointerInteractionDelegate, UIEditMenuInteractionDelegate, NSCopying, EKDayOccurrenceTravelTimeViewMetricsDelegate> {
    UIImageView *_eventBackgroundView;
    UIImageView *_contentView;
    UIImageView *_travelBackgroundView;
    EKDayOccurrenceTravelTimeView *_travelTimeContentView;
    BOOL _needsContentCalc;
    BOOL _needsBackgroundImageUpdate;
    UIView *_startResizeHandle;
    UIView *_endResizeHandle;
    double _originalXBeforeOffset;
    unsigned char _touchKeptInsideOccurrence : 1;
    unsigned char _offsetContentForLandscape : 1;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _padding;
    unsigned long long _bottomPinningState;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _unpinnedEventBackgroundFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _unpinnedTravelBackgroundFrame;
    UIView *_pinFadeView;
    long long _currentRequestId;
    unsigned long long _invalidatedRequestOptions;
    struct CGPoint { double x; double y; } _contentLocationDuringReducedProcessing;
    UIColor *_stagedBackgroundColor;
    BOOL _editMenuPresented;
    EKEventGestureController *_gestureController;
    UIPointerInteraction *_pointerInteraction;
    UIEditMenuInteraction *_editMenuInteraction;
}

@property (nonatomic) BOOL touchesAreBeingTracked;
@property (weak, nonatomic) NSObject<EKDayOccurrenceViewDelegate> *delegate;
@property (weak, nonatomic) EKDayOccurrenceView *selectedCopy;
@property (nonatomic) BOOL isVibrant;
@property (readonly, nonatomic) BOOL visibleHeightLocked;
@property (nonatomic) double visibleHeight;
@property (retain, nonatomic) EKEvent *occurrence;
@property (nonatomic) BOOL selected;
@property (nonatomic) BOOL dimmed;
@property (nonatomic) BOOL allDayDrawingStyle;
@property (nonatomic) BOOL drawsResizeHandles;
@property (nonatomic) BOOL usesSmallText;
@property (nonatomic) BOOL hideBackgroundImage;
@property (nonatomic) BOOL hideText;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } margin;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } padding;
@property (nonatomic) BOOL isSelectedCopyView;
@property (nonatomic) double travelTimeSubviewHeightInPoints;
@property (nonatomic) BOOL isProposedTime;
@property (nonatomic) long long birthdayCount;
@property (nonatomic, getter=isTentative) BOOL tentative;
@property (nonatomic, getter=isDeclined) BOOL declined;
@property (nonatomic, getter=isCancelled) BOOL cancelled;
@property (nonatomic) BOOL needsReply;
@property (nonatomic, getter=isAllDay) BOOL allDay;
@property (nonatomic, getter=isBirthday) BOOL birthday;
@property (nonatomic) double cappedColorBarHeight;
@property (nonatomic) BOOL showsTravelTime;
@property (nonatomic) double travelTime;
@property (nonatomic) long long routingMode;
@property (nonatomic) BOOL reduceLayoutProcessingForAnimation;
@property (nonatomic) double topPinningProximity;
@property (nonatomic) double bottomPinningProximity;
@property (readonly, nonatomic) BOOL isPinned;
@property (nonatomic) BOOL pointerInteractionDisabled;
@property (nonatomic) BOOL hasPrecedingDuration;
@property (nonatomic) BOOL hasTrailingDuration;
@property (nonatomic) double topYBoundaryForText;
@property (readonly, nonatomic) CUIKOROccurrenceState *currentImageState;
@property (readonly, nonatomic) BOOL isSelected;
@property (readonly, nonatomic) BOOL isDimmed;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } backgroundRect;
@property (readonly, nonatomic) double travelTimeHeight;
@property (readonly, nonatomic) long long userInterfaceStyle;
@property (readonly, nonatomic) long long horizontalSizeClass;
@property (readonly, nonatomic) UITraitCollection *traitCollection;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)clearCaches;
+ (double)minNaturalTextHeightForEvent:(id)a0 usingSmallText:(BOOL)a1 sizeClass:(long long)a2;
+ (id)framePathForExternalDragOperationWithSize:(struct CGSize { double x0; double x1; })a0;
+ (id)occurrenceViewWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
+ (double)minimumHeightForSizeClass:(long long)a0 orientation:(long long)a1;
+ (void)_clearViewCache;
+ (double)minimumHeightForSizeClass:(long long)a0 orientation:(long long)a1 isAllDay:(BOOL)a2 usesSmallText:(BOOL)a3;
+ (double)barToBarHorizontalDistanceIncludingBarWidth;
+ (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })defaultMargin;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentStretchRectForFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
+ (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })defaultPadding;
+ (double)minimumHeightForSizeClass:(long long)a0 orientation:(long long)a1 isAllDay:(BOOL)a2;
+ (double)enoughHeightForOneLineForEvent:(id)a0 usingSmallText:(BOOL)a1 sizeClass:(long long)a2;
+ (id)imageForExternalDragOperationFromEvent:(id)a0 style:(long long)a1;
+ (id)_viewCache;
+ (double)barToBarGapWidth;
+ (double)bottomShadowMargin;

- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_computeTravelTimeContentRect;
- (void)_updateColors;
- (void)_invalidateTravelTimeImage;
- (double)viewMaxNaturalTextHeight;
- (void)touchesCancelled:(id)a0 withEvent:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })editMenuInteraction:(id)a0 targetRectForConfiguration:(id)a1;
- (void)_addEditMenuInteractionIfNeeded;
- (id)editMenuInteraction:(id)a0 menuForConfiguration:(id)a1 suggestedActions:(id)a2;
- (void)editMenuInteraction:(id)a0 willDismissMenuForConfiguration:(id)a1 animator:(id)a2;
- (void)dealloc;
- (void)forceUpdateContentWithPayload:(id)a0;
- (void)setAllDayDrawingStyle:(BOOL)a0 animated:(BOOL)a1;
- (void)_addTravelTimeSubviews;
- (BOOL)pointInside:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (long long)_compareOccurrenceViewForSelectedCopyOrdering:(id)a0;
- (BOOL)_isAboveAllDayOccurrenceView:(id)a0;
- (int)dragTypeFromPoint:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)_isBelowOccurrenceView:(id)a0 overlapToIgnore:(double)a1;
- (void)prepareForReuse;
- (void)_updateCornerRadius;
- (void)removeFromSuperview;
- (void)_updateContentWithPayload:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)dismissEditingMenu;
- (void)animateToFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 isAllDay:(BOOL)a1 beginFromCurrentState:(BOOL)a2 whenFinished:(id /* block */)a3;
- (void)didMoveToSuperview;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_setEditingMenuEnabled:(BOOL)a0;
- (BOOL)hasIcon;
- (void)touchesBegan:(id)a0 withEvent:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameOfOpaqueContent;
- (void)setHideText:(BOOL)a0 animate:(BOOL)a1;
- (id)pointerInteraction:(id)a0 regionForRequest:(id)a1 defaultRegion:(id)a2;
- (void)_setUpInteractions;
- (void)_resetContentViewPosition;
- (struct CGSize { double x0; double x1; })_contentViewContentSize;
- (BOOL)_isTimedOccurrenceDrawingStyle;
- (long long)_compareOccurrenceViewLeftToRight:(id)a0;
- (void)_invalidateCurrentRequest;
- (long long)_compareOccurrenceViewTopToBottomLeftToRight:(id)a0;
- (void).cxx_destruct;
- (void)forceUpdateColors;
- (void)_invalidateContentBounds;
- (void)_removeTravelTimeSubviews;
- (double)enoughHeightForOneLine;
- (void)_removeEditMenuInteractionIfNeeded;
- (BOOL)_isAboveOccurrenceView:(id)a0 overlapToIgnore:(double)a1;
- (void)_invalidateBackgroundImage;
- (id)pointerInteraction:(id)a0 styleForRegion:(id)a1;
- (long long)compareOccurrenceViewForTabOrdering:(id)a0;
- (BOOL)_contentViewHasContent;
- (void)fadeInContentViewAt:(double)a0 minWidth:(double)a1 animated:(BOOL)a2;
- (void)_updateResizeHandleLocations;
- (void)touchesEnded:(id)a0 withEvent:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForText;
- (void)_updateContentImageViewIfNeeded;
- (void)setUserInteractionEnabled:(BOOL)a0;
- (void)layoutSubviews;
- (void)presentEditingMenuFromGestureController:(id)a0;
- (id)_newResizeHandleView;
- (void)touchesMoved:(id)a0 withEvent:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameMutatedForProximityToHourLine:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)bringResizeHandlesToFront;
- (void)_invalidateTextImage;
- (BOOL)_isBelowAllDayOccurrenceView:(id)a0;
- (void)_invalidateAllImages;
- (id)arrayOfResizeHandles;
- (void)requestContentIfNeeded:(unsigned long long)a0 completion:(id /* block */)a1;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (BOOL)resetContentViewToOriginalState:(BOOL)a0;
- (long long)_compareOccurrenceViewTopToBottom:(id)a0;
- (double)_verticalContentInset;
- (void)updateAlpha;

@end
