@class NSString, PGManagerWorkingContext, PGPhotosChallengeMetricEventFetchHelper, PGPrecisionRecallEvaluation, PGEventLabelingConfiguration, NSDictionary, CLSCurationSession, CLSCurationContext;

@interface PGPhotosChallengeMetricEvent : PGAbstractMetricEvent {
    PGManagerWorkingContext *_workingContext;
    PGPhotosChallengeMetricEvent *_subMetricEvent;
    PGEventLabelingConfiguration *_eventLabelingConfiguration;
    NSDictionary *_payload;
}

@property (nonatomic) unsigned long long algorithmVersion;
@property (nonatomic) unsigned long long graphSchemaVersion;
@property (readonly, nonatomic) NSString *photoLibrarySize;
@property (nonatomic) unsigned long long photosModelVersion;
@property (retain, nonatomic) NSString *questionTypeString;
@property (nonatomic) unsigned short questionMetricType;
@property (nonatomic) unsigned long long questionVersion;
@property (retain, nonatomic) PGPrecisionRecallEvaluation *evaluation;
@property (retain, nonatomic) CLSCurationSession *curationSession;
@property (retain, nonatomic) CLSCurationContext *curationContext;
@property (retain, nonatomic) PGPhotosChallengeMetricEventFetchHelper *metricsCache;

+ (BOOL)_isHighPrecisionLandscapeAsset:(id)a0;
+ (BOOL)_isHighPrecisionCityscapeAsset:(id)a0;
+ (id)_isVIPStringForResult:(BOOL)a0;
+ (id)_passedFilteringStringForResult:(BOOL)a0;
+ (id)_passedHighPrecisionStringForResult:(BOOL)a0;
+ (unsigned long long)algorithmVersionFromQuestionMetricType:(unsigned short)a0 withEventLabelingConfiguration:(id)a1;
+ (id)allMetricEventsWithGraphManager:(id)a0;
+ (unsigned long long)meaningInferenceAlgorithmForQuestionMetricType:(unsigned short)a0 withEventLabelingConfiguration:(id)a1;
+ (id)meaningLabelFromMeaningQuestionMetricType:(unsigned short)a0;
+ (id)personActivityMeaningLabelFromMeaningQuestionMetricType:(unsigned short)a0;
+ (id)questionEntityTypesFromQuestionMetricType:(unsigned short)a0;
+ (unsigned short)questionTypeFromQuestionMetricType:(unsigned short)a0;
+ (id)relationshipLabelFromRelationshipQuestionMetricType:(unsigned short)a0;
+ (id)stringFromQuestionMetricType:(unsigned short)a0;
+ (unsigned short)wallpaperSuggestionSubtypeForQuestionMetricType:(unsigned short)a0;

- (id)payload;
- (id)identifier;
- (void).cxx_destruct;
- (id)_relationshipInferenceResultsForQuestionMetricType:(unsigned short)a0 personUUIDs:(id)a1;
- (void)gatherMetricsWithProgressBlock:(id /* block */)a0;
- (id)_ageCategoryInferenceResultsForAgeCategoryByPersonUUIDs:(id)a0;
- (id)_businessInferenceResultsForBusinessIdByAssetIds:(id)a0;
- (id)_currentPetInferenceResultsForPetUUIDs:(id)a0;
- (void)_deleteOutdatedPetQuestionsWithValidPetUUIDs:(id)a0;
- (id)_featuredPhotoInferenceResultsForAnswerDateByAssetIds:(id)a0 questionMetricType:(unsigned short)a1;
- (id)_fetchPersonFromAsset:(id)a0 detectionType:(short)a1;
- (id)_frequentLocationInferenceResultsForLocationByAssetIds:(id)a0 locationType:(id)a1;
- (void)_gatherDeferredSuggestionInferencesForQuestions:(id)a0 momentUUIDS:(id)a1 inferenceResults:(id)a2 reasonResultByAssetIdentifier:(id)a3 progressBlock:(id /* block */)a4;
- (void)_gatherMetricsForAgeCategoryQuestions:(id)a0 progressBlock:(id /* block */)a1;
- (void)_gatherMetricsForBusinessQuestions:(id)a0 progressBlock:(id /* block */)a1;
- (void)_gatherMetricsForCameraLibrarySwitchQuestions:(id)a0 progressBlock:(id /* block */)a1;
- (void)_gatherMetricsForExhaustiveMomentLabelingQuestions:(id)a0 questionMetricType:(unsigned short)a1 isEventLabelingMetricEvent:(BOOL)a2 progressBlock:(id /* block */)a3;
- (void)_gatherMetricsForExternalAssetRelevanceQuestions:(id)a0 questionMetricType:(unsigned short)a1 progressBlock:(id /* block */)a2;
- (void)_gatherMetricsForFeaturedPhotoQuestions:(id)a0 questionMetricType:(unsigned short)a1 progressBlock:(id /* block */)a2;
- (void)_gatherMetricsForFrequentLocationQuestions:(id)a0 questionMetricType:(unsigned short)a1 progressBlock:(id /* block */)a2;
- (void)_gatherMetricsForHighlightTitlingQuestions:(id)a0 progressBlock:(id /* block */)a1;
- (void)_gatherMetricsForHolidayQuestions:(id)a0 progressBlock:(id /* block */)a1;
- (void)_gatherMetricsForLocationRepresentativeAssetQuestions:(id)a0 questionMetricType:(unsigned short)a1 progressBlock:(id /* block */)a2;
- (void)_gatherMetricsForMeaningQuestions:(id)a0 questionMetricType:(unsigned short)a1 progressBlock:(id /* block */)a2;
- (void)_gatherMetricsForMemoryQuestions:(id)a0 questionMetricType:(unsigned short)a1 progressBlock:(id /* block */)a2;
- (void)_gatherMetricsForNamingQuestions:(id)a0 progressBlock:(id /* block */)a1;
- (void)_gatherMetricsForPersonActivityMeaningQuestions:(id)a0 questionMetricType:(unsigned short)a1 progressBlock:(id /* block */)a2;
- (void)_gatherMetricsForPetKnowledgeQuestions:(id)a0 progressBlock:(id /* block */)a1;
- (void)_gatherMetricsForPetQuestions:(id)a0 progressBlock:(id /* block */)a1;
- (void)_gatherMetricsForPublicEventQuestions:(id)a0 progressBlock:(id /* block */)a1;
- (void)_gatherMetricsForRelationshipQuestions:(id)a0 questionMetricType:(unsigned short)a1 progressBlock:(id /* block */)a2;
- (void)_gatherMetricsForSharedLibraryAssetsQuestions:(id)a0 progressBlock:(id /* block */)a1;
- (void)_gatherMetricsForSharedLibraryStartQuestions:(id)a0 progressBlock:(id /* block */)a1;
- (void)_gatherMetricsForSyndicatedAssetsQuestions:(id)a0 progressBlock:(id /* block */)a1;
- (void)_gatherMetricsForTripKeyQuestions:(id)a0 progressBlock:(id /* block */)a1;
- (void)_gatherMetricsForTripTitlingQuestions:(id)a0 progressBlock:(id /* block */)a1;
- (void)_gatherMetricsForWallpaperQuestions:(id)a0 questionMetricType:(unsigned short)a1 progressBlock:(id /* block */)a2;
- (void)_gatherNearLiveSuggestionInferencesForQuestions:(id)a0 inferenceResults:(id)a1 reasonResultByAssetIdentifier:(id)a2 progressBlock:(id /* block */)a3;
- (id)_getInferredReasonFromMatchedConditions:(id)a0 withFallbackReason:(id)a1;
- (id)_groundTruthByAssetIdentifiersFromQuestions:(id)a0;
- (id)_groundTruthByPersonUUIDFromQuestions:(id)a0;
- (id)_groundTruthForAgeCategoryFromQuestions:(id)a0;
- (id)_groundTruthForBusinessFromQuestions:(id)a0;
- (id)_groundTruthForCurrentPetInferenceFromQuestions:(id)a0;
- (id)_groundTruthForFeaturedPhotoFromQuestions:(id)a0;
- (id)_groundTruthForFrequentLocationFromQuestions:(id)a0;
- (id)_groundTruthForHolidayFromQuestions:(id)a0;
- (id)_groundTruthForNamingFromQuestions:(id)a0;
- (id)_groundTruthForPublicEventFromQuestions:(id)a0;
- (id)_groundTruthForTitlingQuestions:(id)a0 questionType:(unsigned short)a1;
- (id)_groundTruthForTripTitlingQuestions:(id)a0;
- (id)_holidayInferenceResultsForHolidayNameByAssetIds:(id)a0;
- (BOOL)_inferenceResultForPersonNode:(id)a0 questionMetricType:(unsigned short)a1;
- (id)_inferredReasonForLocationRepresentativeAssets:(id)a0;
- (id)_inferredResultsForLocationRepresentativeAssets:(id)a0;
- (id)_inferredResultsForTitlingQuestionsEntityIdentifiers:(id)a0;
- (id)_locationRepresentativeAssetFromQuestion:(id)a0;
- (id)_locationRepresentativeAssetsGroundTruthByAssetIdentifiersFromQuestions:(id)a0;
- (id)_meaningInferenceResultsForMeaningLabel:(id)a0 assetIds:(id)a1;
- (id)_meaningInferenceResultsForMeaningLabel:(id)a0 momentUUIDs:(id)a1 isEventLabelingMetricEvent:(BOOL)a2;
- (id)_meaningLabelsOfMomentNode:(id)a0 forMeaningLabel:(id)a1 isEventLabelingMetricEvent:(BOOL)a2;
- (id)_namingInferenceResultsForContactIdentifierByPersonUUIDs:(id)a0;
- (id)_personActivityMeaningInferenceResultsForPersonActivityMeaningLabel:(id)a0 assetIds:(id)a1;
- (id)_publicEventInferenceResultsForPublicEventIdByAssetIds:(id)a0;
- (id)_reasonResultByAssetEntityIdentifierForTitlingQuestions:(id)a0 questionType:(unsigned short)a1;
- (id)_reasonResultByAssetSyndicationIdentifierForQuestions:(id)a0;
- (id)_reasonResultsForQuestions:(id)a0 inferenceResults:(id)a1 inferenceReasons:(id)a2;
- (id)_syndicatedAssetFromQuestion:(id)a0;
- (id)_syndicatedAssetsGroundTruthByAssetIdentifiersFromQuestions:(id)a0;
- (id)_syndicatedAssetsInferenceResultsForAssetSyndicationIdentifiers:(id)a0;
- (id)_tripTitlingReasonResultByAssetEntityIdentifierForQuestions:(id)a0;
- (id)_vipPersonIdentifiersWithCurationContext:(id)a0;
- (id)_vipPetIdentifiersWithCurationContext:(id)a0;
- (id)groundTruthByMomentUUIDFromExhaustiveMomentLabelingQuestions:(id)a0 meaningLabel:(id)a1 withMetricsCache:(id)a2;
- (id)initWithWorkingContext:(id)a0 questionMetricType:(unsigned short)a1 metricEventFetchHelper:(id)a2;
- (id)memoryCategorySubCategoryByQuestionMetricType;
- (id)payloadForVerification;
- (void)setSubMetricEvent:(id)a0;

@end
