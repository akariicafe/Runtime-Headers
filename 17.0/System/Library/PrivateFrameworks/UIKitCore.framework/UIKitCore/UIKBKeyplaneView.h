@class UIKBCacheToken, NSMutableDictionary, UIKBRenderFactory, UIKBScreenTraits, UIView, NSString, UIKBRenderingContext, UIKBTree, UIKBRenderConfig, UIKBKeyViewAnimator, UIKeyboardEmojiKeyDisplayController, UIKBKeyView, UIKBSplitImageView;
@protocol UIKBKeyplaneViewDelegate;

@interface UIKBKeyplaneView : UIKBSplitImageView <UIKBCacheableView> {
    UIKBKeyView *_candidateGapView;
    NSMutableDictionary *_subviewIndex;
    NSMutableDictionary *_activeViewIndex;
    NSMutableDictionary *_renderedKeyViews;
    NSMutableDictionary *_delayedDeactivationKeys;
    BOOL _shouldDrawRect;
    UIKBSplitImageView *_keyBorders;
    UIKBSplitImageView *_keyBackgrounds;
    UIKBSplitImageView *_keyCaps;
}

@property (weak, nonatomic) id<UIKBKeyplaneViewDelegate> delegate;
@property (retain, nonatomic) UIKBTree *keyplane;
@property (retain, nonatomic) UIKBTree *defaultKeyplane;
@property (retain, nonatomic) UIKBCacheToken *cacheToken;
@property (retain, nonatomic) UIKBCacheToken *defaultKeyplaneCacheToken;
@property (retain, nonatomic) UIKBRenderConfig *renderConfig;
@property (retain, nonatomic) UIKBRenderingContext *renderingContext;
@property (retain, nonatomic) UIKBRenderFactory *factory;
@property (retain, nonatomic) UIKBKeyViewAnimator *keyViewAnimator;
@property (retain, nonatomic) UIKeyboardEmojiKeyDisplayController *emojiKeyManager;
@property (retain, nonatomic) UIKBScreenTraits *overrideScreenTraits;
@property (nonatomic) BOOL suppressDrawing;
@property (readonly, nonatomic) UIView *keyplaneMaskView;
@property (readonly, nonatomic) NSString *cacheKey;
@property (readonly, nonatomic) BOOL cacheDeferable;
@property (readonly, nonatomic) double cachedWidth;
@property (readonly, nonatomic) BOOL keepNonPersistent;
@property (readonly, nonatomic) long long assetIdiom;
@property (readonly, nonatomic) long long cacheDeferPriority;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)viewForKey:(id)a0;
- (void)dimKeys:(id)a0;
- (BOOL)_shouldInheritScreenScaleAsContentScaleFactor;
- (id)cacheKeysForRenderFlags:(id)a0;
- (void)drawContentsOfRenderers:(id)a0;
- (void)willMoveToWindow:(id)a0;
- (void)dealloc;
- (id)cacheIdentifierForKey:(id)a0 withState:(int)a1;
- (void)displayLayer:(id)a0;
- (void)setState:(int)a0 forKey:(id)a1;
- (void)_generateRenderingContextIfNeeded;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_safeFrameForKeyViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inContainer:(id)a1 forKey:(id)a2;
- (BOOL)validForKeyplane:(id)a0 withVisualStyle:(int)a1;
- (void)removeFromSuperview;
- (void)deactivateAdaptiveKey:(id)a0;
- (BOOL)_shouldUseUnifiedKeyView:(id)a0 forState:(int)a1;
- (BOOL)shouldAnimateOutKeyView:(id)a0;
- (void)_generateFactoryIfNeeded;
- (BOOL)useDefaultKeyplaneCacheTokenForRenderFlags:(long long)a0;
- (void)deactivateKeys;
- (void)addKeyToDelayedDeactivationSet:(id)a0;
- (void)purgeSubviews;
- (BOOL)_shouldAllowKey:(id)a0;
- (void)setState:(int)a0 forKey:(id)a1 withReason:(id)a2 force:(BOOL)a3;
- (void)setContentScaleFactor:(double)a0;
- (id)containingViewForKey:(id)a0 withState:(int)a1 wantsActiveOut:(BOOL *)a2;
- (BOOL)isPasscodeStyle;
- (void)prepareForDisplay;
- (void)activateKeys;
- (id)existingVariantsKeyViewForKey:(id)a0;
- (void)purgeActiveKeyViews;
- (BOOL)_canDrawContent;
- (void)deactivateKey:(id)a0 previousState:(int)a1;
- (void)removeKeyFromDelayedDeactivationSet:(id)a0;
- (id)viewForKey:(id)a0 state:(int)a1;
- (void)deactivateKey:(id)a0 previousState:(int)a1 keyView:(id)a2;
- (void)_updateKeyplaneMaskView;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 keyplane:(id)a1;
- (void).cxx_destruct;
- (int)stateForKey:(id)a0;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (void)purgeFactory;
- (void)purgeLayerContents;
- (void)updateFrameForKey:(id)a0;
- (void)hideKeyCaps:(BOOL)a0 andControlKeysWithInteractionTypes:(id)a1;
- (unsigned long long)cornerMaskForKey:(id)a0 recursive:(BOOL)a1;
- (void)layoutSubviews;
- (id)activeKeyViews;
- (void)deactivateKeysWithReason:(id)a0 force:(BOOL)a1;
- (void)cancelDelayedDeactivation;
- (id)cacheIdentifierForKey:(id)a0;
- (void)hideKeyCaps:(BOOL)a0;
- (void)purgeKeyViews;
- (BOOL)shouldAnimateInKeyView:(id)a0;
- (BOOL)retestSelectedVariantIndexForKey:(id)a0 atPoint:(struct CGPoint { double x0; double x1; })a1 phase:(long long)a2;
- (void)orientKeyCapForKey:(id)a0 orientation:(long long)a1;

@end
