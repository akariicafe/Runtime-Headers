@class NSUUID, NSString, NSArray, UIViewAnimationState, UIViewPropertyAnimatorTrackingState, NSMutableDictionary, _UICompoundObjectMap, NSMutableArray, _UIAppCACommitFuture, CAMediaTimingFunction;
@protocol UITimingCurveProvider;

@interface UIViewPropertyAnimator : NSObject <_UIBasicAnimationFactory, UIInteractionProgressObserver, UIViewAnimatingPrivate, UIViewImplicitlyAnimating, NSCopying> {
    UIViewPropertyAnimatorTrackingState *_trackingState;
    NSString *_trackingDescription;
    double _fractionComplete;
    double _fractionCompleteWhenContinued;
    double _drag;
    BOOL _pausedAsSpring;
    BOOL _optionsAreExplicit;
    BOOL _addedPacingAnimation;
    BOOL _hasFinalized;
    double _baseDuration;
    double _delay;
    UIViewPropertyAnimator *_outerAnimator;
    NSString *_pacingAnimationKey;
    CAMediaTimingFunction *_timingFunctionPriorToPause;
    CAMediaTimingFunction *_timingFunctionWhenPaused;
    id<UITimingCurveProvider> _timingProviderWhenContinued;
    _UICompoundObjectMap *_originalToValueMap;
    _UICompoundObjectMap *_originalFromValueMap;
    _UICompoundObjectMap *_additiveOffsetsForAnimationKeysMap;
    _UICompoundObjectMap *_continuedWithSpringForAnimationKeyMap;
    _UIAppCACommitFuture *_caContinuationCommitFuture;
}

@property (nonatomic, getter=_animationState, setter=_setAnimationState:) long long animationState;
@property (readonly, nonatomic) BOOL useCoreAnimation;
@property (nonatomic) double internalDuration;
@property (retain, nonatomic, getter=_animations, setter=_setAnimations:) NSMutableArray *animations;
@property (retain, nonatomic, getter=_completions, setter=_setCompletions:) NSMutableArray *completions;
@property (retain, nonatomic, getter=_viewAnimationState, setter=_setViewAnimationState:) UIViewAnimationState *viewAnimationState;
@property (retain, nonatomic, getter=_trackingIdentifier, setter=_setTrackingIdentifier:) NSUUID *trackingIdentifier;
@property (nonatomic, getter=_finishingPosition, setter=_setFinishingPosition:) long long finishingPosition;
@property (retain, nonatomic, getter=_animationDescriptionMap, setter=setAnimationDescriptionMap:) NSMutableDictionary *animationDescriptionMap;
@property (nonatomic, getter=_options, setter=_setOptions:) unsigned long long options;
@property (nonatomic, getter=_isStarting, setter=_setStarting:) BOOL starting;
@property (nonatomic, getter=_isPausedOnCompletion, setter=_setPausedOnCompletion:) BOOL pausedOnCompletion;
@property (copy, nonatomic, setter=_setTimingParameters:) id<UITimingCurveProvider> timingParameters;
@property (nonatomic, setter=_setShouldLayoutSubviews:) BOOL shouldLayoutSubviews;
@property (nonatomic) double pacedFractionComplete;
@property (nonatomic, getter=isIntrospectable) BOOL introspectable;
@property (readonly, nonatomic) NSArray *animationDescriptions;
@property (readonly, nonatomic) double duration;
@property (readonly, nonatomic) double delay;
@property (nonatomic, getter=isUserInteractionEnabled) BOOL userInteractionEnabled;
@property (nonatomic, getter=isManualHitTestingEnabled) BOOL manualHitTestingEnabled;
@property (nonatomic, getter=isInterruptible) BOOL interruptible;
@property (nonatomic) BOOL scrubsLinearly;
@property (nonatomic) BOOL pausesOnCompletion;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) double unitDuration;
@property (readonly, nonatomic) long long state;
@property (readonly, nonatomic, getter=isRunning) BOOL running;
@property (nonatomic, getter=isReversed) BOOL reversed;
@property (nonatomic) double fractionComplete;

+ (void)_setTrackedAnimationsStartPaused:(BOOL)a0;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)a0;
+ (void)_saveTrackingAnimator:(id)a0 forUUID:(id)a1 andDescription:(id)a2;
+ (double)_delayForAnimation:(id)a0 forLayer:(id)a1;
+ (void)_removeTrackingAnimator:(id)a0 forUUID:(id)a1 andDescription:(id)a2;
+ (id)_animatorsForTrackedAnimationsUUID:(id)a0;
+ (void)_setTrackedAnimationsOptimizationsEnabled:(BOOL)a0;
+ (void)removeObserved:(id)a0 forObservingAnimatorWithId:(id)a1;
+ (void)_saveReferenceToActivePropertyAnimator:(id)a0;
+ (id)_currentTrackedAnimationsUUID;
+ (id)_trackAdditiveAnimationWithAnimator:(id)a0 nonAdditiveAnimation:(id)a1 withAnimationKey:(id)a2 forKeyPath:(id)a3 forLayer:(id)a4;
+ (BOOL)_trackedAnimationsScrubLinearly;
+ (id)_propertyAnimatorWithUUID:(id)a0;
+ (id /* block */)_animationBlockForTrackingAnimation:(id)a0 animator:(id)a1 trackingSetup:(id /* block */)a2;
+ (BOOL)_trackedAnimationsOptimizationsEnabled;
+ (BOOL)_trackedAnimationsUserInteractionEnabled;
+ (BOOL)_canEnableTrackingAnimationsWithAnimators;
+ (id)_trackAnimationWithAnimator:(id)a0 forLayer:(id)a1 forAnimationKey:(id)a2 trackingSetup:(id /* block */)a3;
+ (id)_startTrackingAnimations;
+ (void)_saveReferenceToPropertyAnimator:(id)a0;
+ (void)_removeReferenceToPropertyAnimatorWithTrackingIdentifier:(id)a0;
+ (void)_setTrackedAnimationsScrubLinearly:(BOOL)a0;
+ (void)_setTrackedAnimationsUserInteractionEnabled:(BOOL)a0;
+ (id)runningPropertyAnimatorWithDuration:(double)a0 delay:(double)a1 options:(unsigned long long)a2 animations:(id /* block */)a3 completion:(id /* block */)a4;
+ (id)_originalFromValueForKey:(id)a0 inLayer:(id)a1 forAnimatorWithTrackingIdentifier:(id)a2;
+ (id)_animatorWithTimingAttributesMatchingAnimation:(id)a0 forLayer:(id)a1 wasReused:(BOOL *)a2;
+ (BOOL)_containsAnimatorForTrackedAnimationsUUID:(id)a0;
+ (void)_finishTrackingAnimations;
+ (BOOL)_trackedAnimationsStartPaused;
+ (id)_getPropertyAnimationForState:(id)a0;
+ (void)animator:(id)a0 isObserving:(id)a1;
+ (id)_trackNonAdditiveAnimationWithAnimator:(id)a0 forLayer:(id)a1 forKey:(id)a2;
+ (void)_removeReferenceToActivePropertyAnimator:(id)a0;
+ (id)observedsOfAnimatorWithTrackingId:(id)a0;
+ (id)_currentPropertyAnimator;
+ (BOOL)_trackingAnimationsCurrentlyEnabled;
+ (id)_currentTrackedAnimationsState;
+ (id)_animatorForTrackedAnimationsUUID:(id)a0;
+ (void)removeAllObservedForObservingAnimatorWithId:(id)a0;
+ (id)_performWhileTrackingAnimations:(id /* block */)a0;

- (BOOL)_pausesOnCompletion;
- (id)_stateAsString;
- (double)_additiveOffsetForKey:(id)a0 inLayer:(id)a1;
- (void)_setAddedPacingAnimation:(BOOL)a0 animationKey:(id)a1;
- (void)startAnimationAsPaused:(BOOL)a0;
- (void)_scheduleCACommitFuture;
- (void)finalizeStoppedAnimationWithPosition:(long long)a0;
- (BOOL)_shouldAnimateAdditivelyForView:(id)a0 withKeyPath:(id)a1;
- (void)_setKVOCompliantState:(long long)a0 fromState:(long long)a1;
- (void)_runCompletions:(long long)a0 finished:(BOOL)a1;
- (id)initWithMass:(double)a0 stiffness:(double)a1 damping:(double)a2 initialVelocity:(struct CGVector { double x0; double x1; })a3 animations:(id /* block */)a4;
- (id)initWithDuration:(double)a0 timingParameters:(id)a1;
- (void)_setKVOCompliantRunning:(BOOL)a0;
- (void)_runAnimations;
- (void)_setupAssociatedViewAnimationState:(id)a0;
- (id)_newAnimationUpdateForProperty:(id)a0 implicit:(BOOL)a1 additive:(BOOL)a2;
- (void)interactionProgressDidUpdate:(id)a0;
- (void)_setOriginalFromValue:(id)a0 forKey:(id)a1 inLayer:(id)a2;
- (double)_dragAdjustedDuration;
- (void)clearAnimationDescriptions;
- (void)_setupAnimationTracking:(id /* block */)a0;
- (void)addAnimations:(id /* block */)a0 delayFactor:(double)a1;
- (void)pauseAnimation;
- (void)_setKVOCompliantState:(long long)a0;
- (void)_setOriginalToValue:(id)a0 forKey:(id)a1 inLayer:(id)a2;
- (id)animationsDescription;
- (double)_drag;
- (BOOL)_computeSmallestDisplacementFractionComplete:(double *)a0;
- (BOOL)_isActive;
- (id)_currentTimingFunction;
- (id)init;
- (void)startAnimationAfterDelay:(double)a0;
- (BOOL)_addedPacingAnimation;
- (void)_notePropertyAnimationUpdate:(id)a0 forView:(id)a1;
- (void)interactionProgress:(id)a0 didEnd:(BOOL)a1;
- (void)dealloc;
- (double)_pauseAnimation:(id)a0;
- (BOOL)_generatePointValueSpringAnimationsForKeyPath:(id)a0;
- (void)stopAnimation:(BOOL)a0;
- (id)_originalFromValueForKey:(id)a0 inLayer:(id)a1;
- (void)finishAnimationAtPosition:(long long)a0;
- (void)startAnimation;
- (void)addAnimations:(id /* block */)a0 delayFactor:(double)a1 durationFactor:(double)a2;
- (void)_restoreLayerValueIfReversed:(id)a0 animation:(id)a1 toValue:(id)a2;
- (id)_explicitAnimationUpdateForProperty:(id)a0 forView:(id)a1 withValue:(id)a2;
- (void)addCompletion:(id /* block */)a0;
- (id)_basicAnimationForView:(id)a0 withKeyPath:(id)a1;
- (void)continueAnimationWithTimingParameters:(id)a0 durationFactor:(double)a1;
- (id)_animationDescriptionForView:(id)a0;
- (void)addAnimations:(id /* block */)a0;
- (BOOL)_wasContinuedWithNewSpringForAnimationKey:(id)a0 forLayer:(id)a1;
- (void)_setupWithDuration:(double)a0 timingParameters:(id)a1 animations:(id /* block */)a2;
- (double)_effectiveAdditiveOffsetForKey:(id)a0 inLayer:(id)a1;
- (void)_untrackPropertyAnimationsForKeys:(id *)a0 inLayer:(id)a1;
- (id)initWithDuration:(double)a0 curve:(long long)a1 animations:(id /* block */)a2;
- (void)_springAnimationForXComponent:(id *)a0 forYComponent:(id *)a1;
- (id)initWithDuration:(double)a0 dampingRatio:(double)a1 animations:(id /* block */)a2;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void).cxx_destruct;
- (BOOL)_setContinuedWithNewSpring:(BOOL)a0 forAnimationKey:(id)a1 forLayer:(id)a2;
- (id)_previousAnimatorForKeyPath:(id)a0 inLayer:(id)a1 compoundKeys:(id *)a2;
- (void)_setAdditiveOffset:(double)a0 forKey:(id)a1 inLayer:(id)a2;
- (void)_executeCompletionHandlerWithFinalPosition:(long long)a0;
- (unsigned long long)_optionsForNestedLegacyAnimation:(unsigned long long)a0;
- (void)continueAnimation;
- (BOOL)_computeDisplacementFractionComplete:(id)a0 withKey:(id)a1 inLayer:(id)a2 fromValue:(id)a3 toValue:(id)a4 fractionComplete:(double *)a5 displacement:(double *)a6;
- (void)_setKVOCompliantReversed:(BOOL)a0;
- (id)_originalToValueForKey:(id)a0 inLayer:(id)a1;
- (void)_clearAnimationState;
- (void)pauseAnimationTransiently;
- (id)initWithDuration:(double)a0 controlPoint1:(struct CGPoint { double x0; double x1; })a1 controlPoint2:(struct CGPoint { double x0; double x1; })a2 animations:(id /* block */)a3;
- (void)_continueWithTimingParameters:(id)a0 duration:(double)a1;
- (id)timingFunctionForPause;
- (void)_setPausesOnCompletion:(BOOL)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;

@end
