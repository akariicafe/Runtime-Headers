@class _UIDatePickerMode, _UIPassthroughScrollInteraction, UIFont, UILabel, UIDatePicker, NSLocale, UIColor, NSCalendar, _UIDatePickerWheelsTimeLabel, _UIControlEventsGestureRecognizer, NSString, _UIDatePickerNumericKeyboardViewController, _UIDatePickerDataModel;

@interface _UIDatePickerView : UIPickerView <_UIDatePickerCalendarTimeLabelDelegate, _UIDatePickerWheelsTimeLabelDelegate, UIGestureRecognizerDelegateInternal, UIPopoverPresentationControllerDelegate, _UIPassthroughScrollInteractionDelegate, _UIControlEventsGestureRecognizerDelegate, UIPickerViewDelegate, UIPickerViewDataSource, _UIDatePickerWheelsViewComponent> {
    long long _loadingDate;
    BOOL _allowsZeroTimeInterval;
    _UIDatePickerMode *_mode;
    UILabel *_hourLabel;
    UILabel *_minuteLabel;
    int _expectedAMPM;
    struct { unsigned char staggerTimeIntervals : 1; unsigned char loadingDateOrTime : 1; unsigned char highlightsToday : 1; unsigned char usesBlackChrome : 1; unsigned char updatingWithKeyInput : 1; unsigned char isPendingManualKeyboardPresentation : 1; unsigned char isPresentingManualKeyboard : 1; unsigned char selectionBarTableHidden : 1; unsigned char receivedTextInputUpdate : 1; unsigned char isPresentingOrDismissingKeyboard : 1; } _datePickerFlags;
    _UIPassthroughScrollInteraction *_passthroughInteraction;
}

@property (readonly, nonatomic) _UIDatePickerNumericKeyboardViewController *numericKeyboardViewController;
@property (readonly, nonatomic) _UIDatePickerWheelsTimeLabel *timeInputLabel;
@property (readonly, nonatomic) _UIControlEventsGestureRecognizer *controlEventsGestureRecognizer;
@property (nonatomic) BOOL passthroughInteractionEnabled;
@property (nonatomic) BOOL highlightsToday;
@property (readonly, nonatomic) NSCalendar *calendar;
@property (readonly, nonatomic) NSLocale *locale;
@property (readonly, nonatomic, getter=_amPmValue) long long amPmValue;
@property (readonly, nonatomic, getter=_hrMinFont) UIFont *hrMinFont;
@property (retain, nonatomic) _UIDatePickerDataModel *data;
@property (nonatomic) double timeInterval;
@property (nonatomic, getter=_usesBlackChrome, setter=_setUsesBlackChrome:) BOOL usesBlackChrome;
@property (nonatomic, getter=_allowsZeroCountDownDuration, setter=_setAllowsZeroCountDownDuration:) BOOL allowsZeroCountDownDuration;
@property (nonatomic, getter=_allowsZeroTimeInterval, setter=_setAllowsZeroTimeInterval:) BOOL allowsZeroTimeInterval;
@property (readonly, nonatomic) double contentWidth;
@property (readonly, nonatomic, getter=_isTimeIntervalMode) BOOL isTimeIntervalMode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic, getter=_highlightColor, setter=_setHighlightColor:) UIColor *highlightColor;
@property (retain, nonatomic, getter=_textColor, setter=_setTextColor:) UIColor *textColor;
@property (retain, nonatomic, getter=_textShadowColor, setter=_setTextShadowColor:) UIColor *textShadowColor;
@property (retain, nonatomic, getter=_magnifierLineColor, setter=_setMagnifierLineColor:) UIColor *magnifierLineColor;
@property (weak, nonatomic) UIDatePicker *datePicker;
@property (readonly, nonatomic) long long datePickerStyle;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } appliedInsetsToEdgeOfContent;

- (void)willMoveToSuperview:(id)a0;
- (void)_setMode:(id)a0;
- (void)_gestureRecognizerFailed:(id)a0;
- (void)willMoveToWindow:(id)a0;
- (void)dealloc;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (BOOL)gestureRecognizer:(id)a0 shouldReceiveTouch:(id)a1;
- (void)controlEventsGestureRecognizer:(id)a0 recognizedControlEvent:(unsigned long long)a1 withEvent:(id)a2;
- (id)shadowColor;
- (void)presentationControllerDidDismiss:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)gestureRecognizer:(id)a0 shouldBeRequiredToFailByGestureRecognizer:(id)a1;
- (void)popoverPresentationController:(id)a0 willRepositionPopoverToRect:(inout struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1 inView:(inout id *)a2;
- (void)presentationControllerWillDismiss:(id)a0;
- (void)_hardwareKeyboardAvailabilityChanged:(id)a0;
- (void).cxx_destruct;
- (void)pickerTableView:(id)a0 didChangeSelectionBarRowFrom:(long long)a1 to:(long long)a2;
- (void)layoutSubviews;
- (BOOL)passthroughScrollInteractionDidRecognize:(id)a0;
- (BOOL)gestureRecognizer:(id)a0 shouldRequireFailureOfGestureRecognizer:(id)a1;
- (BOOL)_contentHuggingDefault_isUsuallyFixedWidth;
- (void)scrollViewWillBeginDragging:(id)a0;
- (BOOL)passthroughScrollInteraction:(id)a0 shouldInteractAtLocation:(struct CGPoint { double x0; double x1; })a1 withEvent:(id)a2;
- (double)contentWidth;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (void)didChangeRoundsToMinuteInterval;
- (BOOL)highlightsToday;
- (long long)numberOfComponentsInPickerView:(id)a0;
- (double)_tableRowHeight;
- (void)_updateLocaleTimeZoneOrCalendar;
- (id)_viewForSelectedRowInComponent:(long long)a0;
- (void)didChangeLocale;
- (void)_UIAppearance_setTextColor:(id)a0;
- (id)_componentsSelectedAfterEnforcingValidityOfComponents:(id)a0 withLastManipulatedComponent:(long long)a1;
- (id)_contentViewForSizingLabelForPositioningInComponent:(long long)a0;
- (id)_currentTimeFormat;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_currentTimeInputLabelFrame;
- (void)_disableCustomKeyboardIfNecessary;
- (void)_dismissManualKeyboard;
- (void)_doneLoadingDateOrTime;
- (void)_enableCustomKeyboardIfNecessary;
- (id)_existingLabelForCalendarUnit:(unsigned long long)a0;
- (void)_fadeLabelForCalendarUnit:(unsigned long long)a0 toText:(id)a1 animated:(BOOL)a2;
- (void)_hidePickerViewSelectionBarForTimeInputLabel:(BOOL)a0;
- (id)_hoursStringForHour:(long long)a0;
- (void)_installTimeInputLabelIfNeeded;
- (id)_labelForCalendarUnit:(unsigned long long)a0 createIfNecessary:(BOOL)a1;
- (id)_labelTextForCalendarUnit:(unsigned long long)a0;
- (void)_loadDateAnimated:(BOOL)a0;
- (id)_makeNewCalendarUnitLabel;
- (id)_minutesStringForHour:(long long)a0 minutes:(long long)a1;
- (unsigned long long)_permittedArrowDirectionForKeyboardPopover;
- (void)_positionLabel:(id)a0 forCalendarUnit:(unsigned long long)a1 relativeTo:(id)a2 order:(long long)a3;
- (void)_removeUnitLabels;
- (void)_resetSelectionOfTables;
- (void)_selectRow:(long long)a0 inComponent:(long long)a1 animated:(BOOL)a2 notify:(BOOL)a3;
- (int)_selectedHourForColumn:(int)a0;
- (int)_selectedMinuteForColumn:(int)a0;
- (id)_selectedTextForCalendarUnit:(unsigned long long)a0;
- (long long)_selectionBarRowInComponent:(long long)a0;
- (void)_setHidesLabels:(BOOL)a0;
- (void)_setLabel:(id)a0 forCalendarUnit:(unsigned long long)a1 animated:(BOOL)a2;
- (BOOL)_shouldInstallTimeInputLabelForDatePickerMode:(long long)a0;
- (BOOL)_showingDate;
- (void)_uninstallTimeInputLabelIfNeeded;
- (void)_updateDateForNewDateRange;
- (BOOL)_updateDateOrTime;
- (void)_updateEnabledCellsIncludingWMDCells:(BOOL)a0;
- (void)_updateLabelColors;
- (void)_updateLabels:(BOOL)a0;
- (void)_updateTextColorForCalendarUnitLabel:(id)a0;
- (void)_updateTimeInputLabelConfiguration;
- (void)_updateTimeInputLabelPosition;
- (void)_updateWheelsForUpdatedTextInputWithForcedUpdate:(BOOL)a0;
- (void)_updateWheelsLabelForCurrentDateComponents;
- (BOOL)_updatedLastSelectedComponentsByValidatingSelectedDateWithLastManipulatedComponent:(long long)a0;
- (long long)datePickerMode;
- (void)didChangeCalendar;
- (void)didChangeDateFrom:(id)a0 animated:(BOOL)a1;
- (void)didChangeMaximumDate;
- (void)didChangeMinimumDate;
- (void)didChangeMinuteInterval;
- (void)didChangeMode;
- (void)didChangeTimeZone;
- (void)didChangeToday;
- (void)didReset;
- (void)displaySelectedDateAnimated:(BOOL)a0;
- (BOOL)hasDefaultSize;
- (long long)keyboardTypeForTimeLabel:(id)a0;
- (void)pickerView:(id)a0 didSelectRow:(long long)a1 inComponent:(long long)a2;
- (long long)pickerView:(id)a0 numberOfRowsInComponent:(long long)a1;
- (double)pickerView:(id)a0 rowHeightForComponent:(long long)a1;
- (id)pickerView:(id)a0 viewForRow:(long long)a1 forComponent:(long long)a2 reusingView:(id)a3;
- (double)pickerView:(id)a0 widthForComponent:(long long)a1;
- (id)primaryFirstResponder;
- (void)setHighlightsToday:(BOOL)a0;
- (BOOL)staggerTimeIntervals;
- (BOOL)timeLabel:(id)a0 didReceiveText:(id)a1;
- (void)timeLabel:(id)a0 didUpdateText:(id)a1;
- (BOOL)timeLabelCanBecomeFirstResponder:(id)a0;
- (void)timeLabelDidBecomeFirstResponder:(id)a0;
- (void)timeLabelDidBeginEditing:(id)a0;
- (void)timeLabelDidEndEditing:(id)a0;
- (void)timeLabelDidFailToBecomeFirstResponder:(id)a0;
- (void)timeLabelDidResignFirstResponder:(id)a0;
- (BOOL)timeLabelShouldSuppressSoftwareKeyboard:(id)a0;
- (void)timeLabelWillBecomeFirstResponder:(id)a0;
- (void)wheelsTimeLabel:(id)a0 didChangeVisibility:(BOOL)a1;
- (BOOL)wheelsTimeLabelShouldReceiveInteraction:(id)a0;

@end
