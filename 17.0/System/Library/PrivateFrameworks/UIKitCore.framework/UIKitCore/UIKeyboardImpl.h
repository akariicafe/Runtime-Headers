@class UITextRange, TIKeyboardCandidateResultSet, TIKeyboardCandidate, UIDictationPopoverController, TIKeyboardInputManagerState, UIContinuousPathIntroductionView, NSMutableDictionary, _UITextInteractionEditMenuAssistant, UILexicon, TISmartPunctuationController, UIKBEditingGesturesIntroduction, NSNumber, UIKBAutofillController, UIPhysicalKeyboardEvent, UIKeyboardInputModeIndicatorController, UIKBRTIPartner, NSUUID, UIKeyboardScheduledTask, NSMutableArray, UIAutocorrectBubbleContainer, UIView, _UIKeyboardImplHeldOperation, UIKeyboardTaskQueue, UIDelayedAction, UITextInteractionSelectableInputDelegate, TIKeyboardInputManagerStub, UITextInputTraits, _UIStringAndPositionPair, _UIActionWhenIdle, UITextInputArrowKeyHistory, UIEditMenuInteraction, KFAViewController, UIKeyboardCandidateController, UIKeyboardAutocorrectionController, TICandidateRequestToken, _UIStickerPickerKeyboardSession, TUIKeyboardBackendController, _UIKeyboardImplProxy, TIDocumentState, UITextInteractionAssistant, NSArray, _UIKeyboardTextSelectionInteraction, NSAttributedString, UIKeyboardEmojiPopoverController, _UIKeyboardTextSelectionController, NSString, TIKeyboardTouchEvent, _UITextChoiceAccelerationAssistant, TIKeyboardState, UIResponder, UIAutocorrectInlinePrompt, NSDictionary, UIKBInputDelegateManager, UIPressAndHoldPopoverController, TIKeyboardLayout, UIKeyboardLayout, UIInlineTextCompletionController;
@protocol UIKeyboardImplGeometryDelegate, UIInlineTextCompletionLearning, UIKeyboardCandidateList, AFUIPanel_Staging, _UITextInputUserInteractionDelegate, _UIInvalidatable, UIKeyInput, _UIKBFeedbackGenerating, UITextCursorAssertion;

@interface UIKeyboardImpl : UIView <_UIIVCResponseDelegateImpl, _UIKeyboardTextSelectionGestureControllerDelegate, UIKeyboardCandidateControllerDelegate, TIKeyboardInputManagerToImplProtocol, UIPopoverPresentationControllerDelegate, UIKeyboardInputModeIndicatorControllerDelegate, UIInlineTextCompletionControllerDelegate, _UITextChoicesAssistantDelegate, _UIStickerPickerKeyboardSessionDelegate, UIKeyboardImplStateProtocol, UIKBRTIPartnerDelegate, UIKeyboardCandidateListDelegate, UIKeyboardLayoutSizeDelegate, UITextInputDelegatePrivate> {
    id<UIKeyInput> m_delegate;
    UITextInteractionSelectableInputDelegate *m_selectableDelegate;
    UIKeyboardTaskQueue *m_taskQueue;
    BOOL m_keyboardDelegateStateNeedsRefresh;
    long long m_textInputSource;
    UIView *m_languageIndicator;
    NSString *m_previousInputString;
    UIKeyboardAutocorrectionController *m_autocorrectionController;
    UIAutocorrectInlinePrompt *m_autocorrectPrompt;
    TIKeyboardCandidateResultSet *m_candidateResultSet;
    id<UIKeyboardCandidateList> m_candidateList;
    UIView *m_markedTextOverlay;
    UIKeyboardLayout *m_layout;
    NSMutableDictionary *m_keyedLayouts;
    UIKeyboardScheduledTask *m_autoDeleteTask;
    unsigned int m_autoDeleteCount;
    double m_autoDeleteLastDelete;
    double m_autoDeleteInterval;
    unsigned int m_autoDeleteShiftCharacter;
    double m_autoDeleteCurrentForceMultipler;
    double m_autoDeleteCurrentForce;
    BOOL m_autoDeleteUseForce;
    UIDelayedAction *m_longPressAction;
    long long m_originalOrientation;
    struct CGPoint { double x; double y; } m_inputPoint;
    int m_changeCount;
    double m_changeTime;
    struct __CFRunLoopObserver { } *m_observer;
    unsigned long long m_textInputChangingCount;
    BOOL m_textInputChangingText;
    BOOL m_textInputChangingDirection;
    BOOL m_textInputUpdatingSelection;
    BOOL m_disableSyncTextChanged;
    BOOL m_disableClearingTextSuggestions;
    BOOL m_wasDelegateSetupWithRTIClient;
    UITextInputTraits *m_defaultTraits;
    UITextInputTraits *m_traits;
    UITextInputTraits *m_overrideTraits;
    int m_returnKeyState;
    BOOL m_returnKeyEnabledInLayout;
    long long m_currentDirection;
    UILexicon *m_recentInputs;
    BOOL m_autoDeleteOK;
    BOOL m_autocapitalizationPreference;
    BOOL m_autocorrectionPreference;
    BOOL m_autoshift;
    BOOL m_caretShowingNow;
    BOOL m_changeNotificationDisabled;
    BOOL m_correctionLearningAllowed;
    BOOL m_delegateIsSMSTextView;
    BOOL m_doubleSpacePeriodWasAppliedInCurrentContext;
    BOOL m_doubleSpacePeriodPreference;
    BOOL m_hardwareKeyboardAttached;
    BOOL m_inDealloc;
    BOOL m_initializationDone;
    BOOL m_selecting;
    BOOL m_shift;
    BOOL m_shiftLocked;
    BOOL m_shiftLockedEnabled;
    BOOL m_settingShift;
    BOOL m_suggestionsShownForCurrentDeletion;
    BOOL m_originalShouldSkipCandidateSelection;
    BOOL m_suppressGeometryChangeNotifications;
    BOOL m_acceptingCandidate;
    BOOL m_didAutomaticallyInsertSpace;
    BOOL m_didSyncDocumentStateToInputDelegate;
    BOOL m_userChangedSelection;
    BOOL m_shouldChargeKeys;
    BOOL m_longPress;
    BOOL m_replacingWord;
    BOOL m_shiftNeedsUpdate;
    BOOL m_shiftPreventAutoshift;
    BOOL m_shiftHeldDownNeedsUpdated;
    BOOL m_clientVariantSupportEnabled;
    BOOL m_clientVariantSupportEnabledEver;
    NSMutableArray *m_keyplaneNamesPreviousDelegate;
    NSMutableArray *m_keyplaneNamesCurrentDelegate;
    BOOL m_isRotating;
    BOOL m_preRotateShift;
    BOOL m_preRotateShiftLocked;
    BOOL m_suppressUpdateCandidateView;
    BOOL m_shouldUpdateCacheOnInputModesChange;
    BOOL m_rivenCenterFilled;
    double m_splitProgress;
    BOOL m_needsCandidates;
    BOOL m_shouldSkipCandidateGeneration;
    BOOL m_updateLayoutOnShowKeyboard;
    int _currentAlertReason;
    BOOL m_layoutAllowsCP;
    BOOL m_needsPasteSupportUpdate;
    BOOL m_delegateSupportsImagePaste;
    BOOL m_remoteDelegateSupportsImagePaste;
    BOOL m_didUpdateCapsLockLanguageSwitchSetting;
    BOOL m_shouldEnableCapsLockLanguageSwitchByDefault;
    UIPhysicalKeyboardEvent *m_previousGlobeKeyEvent;
    BOOL m_delegateAdoptsKeyboardInput;
    BOOL m_delegateAdoptsTextInput;
    BOOL m_delegateAdoptsTextInputPrivate;
    BOOL m_delegateAdoptsWebTextInputPrivate;
    BOOL m_delegateAdoptsWKInteraction;
    BOOL m_delegateAdoptsKeyInputPrivate;
    BOOL m_delegateAdoptsRTISourceSession;
    BOOL m_firstResponderAdoptsTextInput;
    UIResponder<UIKeyInput> *_forwardingInputDelegate;
    BOOL _forwardingInputDelegateConformsToWKInteraction;
    BOOL _shouldRespectForwardingInputDelegate;
    BOOL m_scrolling;
    BOOL m_hasInputOnAcceptCandidate;
    BOOL m_maximizing;
    BOOL m_usesAutoShiftFor3PK;
    unsigned long long m_previousSpaceKeyBehavior;
    unsigned long long m_previousReturnKeyBehavior;
    BOOL m_usesCandidateSelection;
    BOOL m_UsedCandidateSelection;
    BOOL m_hasEditedMarkedTextInExtendedView;
    BOOL m_updatingLayout;
    BOOL m_needsToRecomputeDesirableModes;
    BOOL m_isCapsLocked;
    UITextInputTraits *m_traitsForPreviousDelegate;
    UIDelayedAction *m_detachHardwareKeyboardAction;
    UIDelayedAction *m_updateLastUsedInputModeAction;
    UIDelayedAction *m_idleDetection;
    UIDelayedAction *m_resumeDictationForResponderChange;
    UIDelayedAction *m_showCursorAccessory;
    id<_UIInvalidatable> m_hideCursorAccessoriesAssertion;
    UIView *m_capsLockSign;
    long long m_userInteraction;
    BOOL m_didAutomaticallyInsertSpaceBeforeChangingInputMode;
    BOOL m_didExtendLongPressDelayForContinuousPath;
    BOOL m_inHandleKeyTextCommandForCurrentEvent;
    BOOL m_inHandleKeyAppCommandForCurrentEvent;
    BOOL m_webEventWasHandledAsKeyCommand;
    BOOL m_webEventWasHandledByInputManager;
    BOOL m_webEventIsKeyDown;
    BOOL m_needsOneShotGenerateCandidatesAfterStoppingAutoDelete;
    BOOL m_disableAutocapitalization;
    int m_predictionType;
    BOOL m_repeatDeleteFromHardwareKeyboard;
    long long m_cachedAutofillMode;
    long long m_autofillSubMode;
    BOOL m_isAutofilling;
    long long m_pendingAutofillIndex;
    BOOL m_ignoreSelectionChange;
    BOOL m_suppressingDocumentAssertions;
    BOOL m_repeatDeleteWord;
    struct _NSRange { unsigned long long location; unsigned long long length; } m_textAlternativesRange;
    NSDictionary *m_autofillCustomInfo;
    unsigned long long m_numCPwords;
    _UIKeyboardImplProxy *m_implProxy;
    UIKeyboardScheduledTask *m_delayDeleteTask;
    id /* block */ _deferredUpdateTask;
    UIContinuousPathIntroductionView *_continuousPathIntroductionView;
    UIKBEditingGesturesIntroduction *_editingGestureIntroductionView;
    BOOL m_editingTraitsMarkedDirty;
    BOOL m_selectionIsEmpty;
    NSMutableDictionary *m_hardwareKeyDownCodeToEventMap;
    UIKeyboardEmojiPopoverController *_emojiPopoverController;
    UIDictationPopoverController *_dictationPopoverController;
    UIPressAndHoldPopoverController *_pressAndHoldPopoverController;
    id<AFUIPanel_Staging> _autoFillPanel;
    BOOL _emojiPopoverToRestoreAfterRotation;
    BOOL _isSettingDelegate;
    BOOL _isSettingExtensionInputMode;
    BOOL _needsUpdateAssistantView;
    double m_bottomPadding;
    unsigned long long _serviceRole;
    BOOL _skipRecomputeInputMode;
    UIKBRTIPartner *_remoteTextInputPartner;
    UITextInputTraits *_remoteTextInputTraits;
    BOOL m_policyDelegateResult;
    BOOL m_shouldSuppressAssistantBar;
    BOOL m_shouldSuppressSoftwareKeyboard;
    BOOL m_inputModeSwitcherVisible;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } m_editMenuFrame;
    UIView *m_keyboardWindowSnapshot;
    UIDelayedAction *m_dictationMenuAction;
    int m_keyboardMenuType;
    int m_presentingKeyboardMenuType;
    id<UITextCursorAssertion> m_dictationIndicatorAssertion;
    UIEditMenuInteraction *m_editMenuInteraction;
    UIView *m_tipView;
    _UIStickerPickerKeyboardSession *_stickerPickerSession;
    NSAttributedString *_inlineCompletionAsMarkedText;
    id /* block */ _waitingOnPerformAutocorrect;
    UITextRange *_pendingAutocorrectRange;
    BOOL m_shouldClearTextSuggestions;
    BOOL m_pendingRestoreTextSuggestions;
    _UIKeyboardImplHeldOperation *_pendingKeyupOperation;
    BOOL m_usesSystemKeyboardForASP;
    long long _id;
}

@property (class, nonatomic) struct CGPoint { double x0; double x1; } floatingPersistentOffset;
@property (class, readonly, nonatomic) struct CGPoint { double x0; double x1; } floatingNormalizedPersistentOffset;

@property (readonly, nonatomic) TIKeyboardInputManagerStub *inputManager;
@property (retain, nonatomic) id changedDelegate;
@property (readonly, nonatomic) UIKeyboardAutocorrectionController *autocorrectionController;
@property (readonly, nonatomic) UIKeyboardCandidateController *candidateController;
@property (retain, nonatomic) TIKeyboardInputManagerState *inputManagerState;
@property (nonatomic, setter=_setShouldSuppressAssistantBar:) BOOL _shouldSuppressAssistantBar;
@property (readonly, nonatomic) UITextInteractionAssistant *textInteractionAssistant;
@property (readonly, nonatomic) _UITextInteractionEditMenuAssistant *_editMenuAssistant;
@property (readonly, nonatomic) _UITextChoiceAccelerationAssistant *_textChoicesAssistant;
@property (readonly, nonatomic) UIKeyboardInputModeIndicatorController *inputModeIndicatorController;
@property (readonly, nonatomic) UIKBRTIPartner *remoteTextInputPartner;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) unsigned long long serviceRole;
@property (nonatomic) BOOL skipRecomputeInputMode;
@property (nonatomic) BOOL prewarmsPredictiveCandidates;
@property (retain, nonatomic) UITextInputArrowKeyHistory *arrowKeyHistory;
@property (readonly, nonatomic) TIKeyboardInputManagerStub *inputManager;
@property (retain, nonatomic) TIKeyboardInputManagerState *inputManagerState;
@property (readonly, nonatomic) TUIKeyboardBackendController *backendController;
@property (retain, nonatomic) UIKBInputDelegateManager *inputDelegateManager;
@property (copy, nonatomic) id /* block */ externalTask;
@property (retain, nonatomic) UIPhysicalKeyboardEvent *eventForCurrentWebEvent;
@property (readonly, nonatomic) UIKeyboardAutocorrectionController *autocorrectionController;
@property (readonly, nonatomic) UIKeyboardCandidateController *candidateController;
@property (readonly, nonatomic) TISmartPunctuationController *smartPunctuationController;
@property (retain, nonatomic) TIKeyboardTouchEvent *touchEventWaitingForKeyInputEvent;
@property (retain, nonatomic) _UIActionWhenIdle *delayedCandidateRequest;
@property (retain, nonatomic) UIKeyboardScheduledTask *autocorrectPromptTask;
@property (readonly, nonatomic) UIInlineTextCompletionController *inlineTextCompletionController;
@property (retain, nonatomic) _UITextChoiceAccelerationAssistant *customInputDelegateChoiceAccelerationAssistant;
@property (retain, nonatomic) _UIKeyboardTextSelectionController *customInputDelegateSelectionController;
@property (retain, nonatomic) _UIKeyboardTextSelectionInteraction *customInputDelegateSelectionInteraction;
@property (retain, nonatomic) id<UITextCursorAssertion> cursorAssertion;
@property (retain, nonatomic) id<UITextCursorAssertion> capslockAssertion;
@property (retain, nonatomic) id<UITextCursorAssertion> inputModeAssertion;
@property (retain, nonatomic) _UIActionWhenIdle *deferredDidSetDelegateAction;
@property (retain, nonatomic) id changedDelegate;
@property (retain, nonatomic) NSUUID *resigningRTISessionIdentifier;
@property (retain, nonatomic) UIView *internationalKeyIntroductionView;
@property (nonatomic) BOOL committingCandidate;
@property (nonatomic) BOOL hardwareKeyboardIsSeen;
@property (nonatomic) BOOL handlingKeyCommandFromHardwareKeyboard;
@property (nonatomic) BOOL disableSmartInsertDelete;
@property (retain, nonatomic) UIKBAutofillController *autofillController;
@property (readonly, nonatomic) BOOL canShowPredictionBar;
@property (retain, nonatomic) TICandidateRequestToken *currentCandidateRequest;
@property (retain, nonatomic) NSDictionary *currentCandidateRequestInfo;
@property (retain, nonatomic) TIKeyboardCandidate *autocorrectionToAcceptBeforeProgressiveCandidates;
@property (retain, nonatomic) UIDelayedAction *updateCapsLockDelayOverrideForNonTyping;
@property (nonatomic) long long candidateViewOffset;
@property (retain, nonatomic) NSString *deletedString;
@property (nonatomic) BOOL floatingForced;
@property (nonatomic) BOOL syncingDictationLanguageForInputModeSwitch;
@property (copy, nonatomic) NSArray *characterRectsForCharacterRange;
@property (readonly, nonatomic) UIKeyboardLayout *activeLayout;
@property (retain, nonatomic) NSNumber *isAttachedHardwareKeyboard;
@property (retain, nonatomic) UIAutocorrectBubbleContainer *autocorrectBubbleContainer;
@property (retain, nonatomic) UIKeyboardInputModeIndicatorController *inputModeIndicatorController;
@property (copy, nonatomic) id /* block */ chooseSupplementalCandidateCompletion;
@property (nonatomic) unsigned long long lastDeletionCountForFastDelete;
@property (weak, nonatomic) UIView *overlayContainerObserved;
@property (nonatomic) void *skippedEndInputSession;
@property (retain, nonatomic) NSUUID *skippedEndInputSessionID;
@property (retain, nonatomic) KFAViewController *keyboardFeedbackAssistantViewController;
@property (nonatomic) BOOL _mimicShiftBeingHeld;
@property (readonly, nonatomic) BOOL isSettingDelegate;
@property (nonatomic) BOOL hasPreviousKeyResponder;
@property (nonatomic) BOOL hasNextKeyResponder;
@property (readonly, nonatomic) TIKeyboardState *keyboardState;
@property (weak, nonatomic) id<_UITextInputUserInteractionDelegate> userInteractionDelegate;
@property (nonatomic) BOOL shouldIgnoreTextInputChanges;
@property (copy, nonatomic) id /* block */ didTeardownExistingDelegate;
@property (copy, nonatomic) id /* block */ willSetupNewDelegate;
@property (nonatomic) BOOL forCustomInputView;
@property (nonatomic) BOOL showInputModeIndicator;
@property (nonatomic) BOOL showsCandidateBar;
@property (readonly, nonatomic) BOOL shouldShowCandidateBar;
@property (nonatomic) BOOL receivedCandidatesInCurrentInputMode;
@property (nonatomic) BOOL showsCandidateInline;
@property (nonatomic) BOOL geometryIsChanging;
@property (readonly, nonatomic) BOOL continuousPathUnderway;
@property (readonly, nonatomic) BOOL isRotating;
@property (readonly, nonatomic) BOOL updatingPreferences;
@property (nonatomic) BOOL automaticMinimizationEnabled;
@property (nonatomic) double deleteWordLastDelete;
@property (nonatomic) BOOL shouldSkipCandidateSelection;
@property (readonly, nonatomic) BOOL isDefaultPrediction;
@property (readonly, nonatomic) BOOL isAutofillPrediction;
@property (readonly, nonatomic) UIKeyboardTaskQueue *taskQueue;
@property (readonly, nonatomic) _UIKeyboardTextSelectionController *textSelectionController;
@property (nonatomic) BOOL suppressUpdateLayout;
@property (nonatomic) BOOL suppressUpdateShiftState;
@property (nonatomic) BOOL suppressUpdateAssistantView;
@property (nonatomic) BOOL suppressUpdateInputMode;
@property (nonatomic) BOOL animateUpdateBars;
@property (readonly, nonatomic) BOOL delegateRequiresKeyEvents;
@property (nonatomic) BOOL shouldUpdateLayoutAutomatically;
@property (nonatomic) BOOL isCallingTextChangedDuringInputModeSwitch;
@property (retain, nonatomic) UIResponder<UIKeyInput> *delegate;
@property (retain, nonatomic) NSString *activeDictationLanguage;
@property (readonly) BOOL centerFilled;
@property BOOL rivenSplitLock;
@property (readonly) unsigned long long minimumTouchesForTranslation;
@property (readonly, nonatomic) BOOL splitTransitionInProgress;
@property (getter=isFloatingLocked) BOOL lockFloating;
@property (nonatomic, getter=isInHardwareKeyboardMode) BOOL inHardwareKeyboardMode;
@property (nonatomic) unsigned long long requestedInteractionModel;
@property (weak, nonatomic) id<UIKeyboardImplGeometryDelegate> geometryDelegate;
@property (retain, nonatomic) id<_UIKBFeedbackGenerating> feedbackGenerator;
@property (retain, nonatomic) _UIStringAndPositionPair *lastMatchedSupplementalCandidate;
@property (retain, nonatomic) _UIStringAndPositionPair *pendingSupplementalCandidateToInsert;
@property (nonatomic) unsigned long long lastChooseSupplementalItemToInsertCallbackIdentifier;
@property (retain, nonatomic) TIKeyboardLayout *layoutForKeyHitTest;
@property (readonly, nonatomic) double timestampOfLastTouchesEnded;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) id<UIInlineTextCompletionLearning> inlineTextCompletionLearner;
@property (readonly, nonatomic) UITextInputTraits *textInputTraits;
@property (readonly, nonatomic) TIDocumentState *documentState;
@property (readonly, nonatomic) UIView *inputOverlayContainer;
@property (readonly, nonatomic) BOOL delegateSupportsCorrectionUI;
@property (readonly, nonatomic) BOOL inlineTextCompletionAllowedForAutocorrectionType;
@property (readonly, nonatomic) BOOL isSelecting;
@property (readonly, nonatomic) BOOL showingEmojiSearch;
@property (nonatomic) BOOL performingRemoteTextOperations;
@property (readonly, nonatomic) BOOL needAutofillLogin;
@property (nonatomic) BOOL canSuggestSupplementalItemsForCurrentSelection;

+ (void)applicationDidBecomeActive:(id)a0;
+ (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })deviceSpecificPaddingForInterfaceOrientation:(long long)a0 inputMode:(id)a1;
+ (BOOL)smartInsertDeleteIsEnabled;
+ (id)sharedInstance;
+ (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })deviceSpecificStaticHitBufferForInterfaceOrientation:(long long)a0 inputMode:(id)a1;
+ (struct CGSize { double x0; double x1; })defaultSizeForInterfaceOrientation:(long long)a0;
+ (double)persistentSplitProgress;
+ (void)setPersistentOffset:(struct CGPoint { double x0; double x1; })a0;
+ (void)applicationWillResignActive:(id)a0;
+ (struct CGSize { double x0; double x1; })sizeForInterfaceOrientation:(long long)a0 ignoreInputView:(BOOL)a1;
+ (void)applicationWillEnterForeground:(id)a0;
+ (double)keyboardWidthForScreen:(id)a0 withOrientation:(long long)a1;
+ (BOOL)isSplit;
+ (id)keyboardWindow;
+ (id)uniqueNumberPadInputModesFromInputModes:(id)a0 forKeyboardType:(long long)a1;
+ (void)_clearHardwareKeyboardMinimizationPreference;
+ (struct CGPoint { double x0; double x1; })persistentOffset;
+ (struct CGPoint { double x0; double x1; })normalizedPersistentOffsetIgnoringState;
+ (double)floatingHeight;
+ (BOOL)showsGlobeAndDictationKeysExternally;
+ (struct CGSize { double x0; double x1; })keyboardSizeForInterfaceOrientation:(long long)a0;
+ (void)setFloating:(BOOL)a0;
+ (void)setFloating:(BOOL)a0 positionedAtOffset:(struct CGPoint { double x0; double x1; })a1 animated:(BOOL)a2;
+ (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })requestedFloatingInsets;
+ (void)refreshRivenStateWithTraits:(id)a0 isKeyboard:(BOOL)a1;
+ (void)sendPerformanceNotification:(id)a0;
+ (void)setPersistentSplitProgress:(double)a0;
+ (double)additionalInstanceHeightForInterfaceOrientation:(long long)a0;
+ (double)additionalInstanceHeight;
+ (double)splitProgress;
+ (void)releaseSharedInstance;
+ (BOOL)overrideNativeScreen;
+ (struct CGPoint { double x0; double x1; })normalizedPersistentOffset;
+ (BOOL)isHardwareShiftKeyBeingHeld;
+ (BOOL)supportsFloating;
+ (struct CGPoint { double x0; double x1; })_screenPointFromNormalizedPoint:(struct CGPoint { double x0; double x1; })a0;
+ (BOOL)isActivatingForeground;
+ (double)topMarginForInterfaceOrientation:(long long)a0;
+ (BOOL)isHardwareCommandKeyBeingHeld;
+ (long long)floatingIdiom;
+ (BOOL)isFloatingForced;
+ (double)floatingWidth;
+ (BOOL)isFloating;
+ (struct CGPoint { double x0; double x1; })defaultUndockedOffsetForFloating:(BOOL)a0;
+ (void)applicationDidReceiveMemoryWarning:(id)a0;
+ (void)sendPerformanceNotification:(id)a0 userInfo:(id)a1;
+ (BOOL)rivenTranslationPreference;
+ (Class)layoutClassForCurrentInputMode;
+ (Class)layoutClassForInputMode:(id)a0 keyboardType:(long long)a1 screenTraits:(id)a2;
+ (double)additionalInstanceHeightForInterfaceOrientation:(long long)a0 hasInputView:(BOOL)a1;
+ (BOOL)keyboardOrientation:(long long)a0 isEquivalentToOrientation:(long long)a1;
+ (id)activeInstance;
+ (id)normalizedInputModesFromPreference;
+ (BOOL)shouldAccessInputManagerService;
+ (struct CGSize { double x0; double x1; })sizeForInterfaceOrientation:(long long)a0;
+ (void)purgeImageCache;
+ (void)performWithoutFloatingLock:(id /* block */)a0;
+ (id)keyboardScreen;
+ (void)switchControlStatusDidChange:(id)a0;
+ (id)sharedInstanceForCustomInputView:(BOOL)a0;
+ (BOOL)isDictationPopoverEnabled;
+ (void)setParentTestForProfiling:(id)a0;
+ (struct CGPoint { double x0; double x1; })_normalizedScreenPoint:(struct CGPoint { double x0; double x1; })a0;
+ (void)suppressSetPersistentOffset:(BOOL)a0;
+ (BOOL)rivenPreference;
+ (BOOL)rivenShouldUndock;
+ (BOOL)_isInputEligibleForSpaceAutodelete:(id)a0;
+ (BOOL)rivenInstalled;
+ (BOOL)shouldMergeAssistantBarWithKeyboardLayout;
+ (void)applicationWillSuspend:(id)a0;
+ (void)applicationDidEnterBackground:(id)a0;
+ (BOOL)supportsSplit;
+ (double)floatingScreenWidthToEmulate;
+ (void)setFloating:(BOOL)a0 positionedAtDefaultOffsetAnimated:(BOOL)a1;

- (void)forwardDictationEvent_stopDictationIgnoreFinalizePhrases;
- (void)applyAssistantItem:(id)a0;
- (BOOL)hardwareKeyboardAttached;
- (void)_updateKeyboardLanguage:(id)a0;
- (BOOL)handleMoveResponderWithShift:(BOOL)a0;
- (void)_clearDictationMenuTimer:(BOOL)a0;
- (void)showNextCandidates;
- (void)forwardKeyboardEventBackToDestination:(id)a0;
- (id)remoteTextEditingMetadata;
- (void)keyboardFeedbackAssistantControllerDidFinish;
- (void)setCandidates:(id)a0;
- (void)_setInputManager:(id)a0;
- (BOOL)playInputClick;
- (void)updateDoubleSpacePeriodStateForString:(id)a0;
- (void)handleDeleteAsRepeat:(BOOL)a0 executionContext:(id)a1;
- (unsigned long long)_updateAutocorrectionPreferenceForTraitsWithCurrentPreference:(BOOL)a0;
- (void)insertTextSuggestionCandidate:(id)a0;
- (BOOL)disableInputBars;
- (void)configureTipViewWithTitle:(id)a0 description:(id)a1;
- (void)inputManagerDidGenerateAutocorrections:(id)a0 forPredictiveInput:(id)a1 executionContext:(id)a2;
- (void)acceptHandwritingCandidate;
- (unsigned long long)phraseBoundary;
- (void)cleanUpBeforeInputModeSwitch;
- (void)addInputString:(id)a0 withFlags:(unsigned long long)a1;
- (void)showDictationMenuIfNeeded;
- (void)forwardKeyboardCameraEvent_startCameraInput:(id)a0;
- (void)syncDocumentStateToInputDelegate;
- (void)performKeyboardOutputAsInputViewControllerOutput:(id)a0;
- (BOOL)shouldAllowTwoFingerSelectionGestureOnView:(id)a0;
- (void)displayAutoFillPopoverIfAutoFillModeDetected;
- (void)handleRemoteKeyboardCameraEvent_startCameraInput:(id)a0;
- (void)reinitializeAfterInputModeSwitch:(BOOL)a0;
- (void)addInputString:(id)a0 withFlags:(unsigned long long)a1 withInputManagerHint:(id)a2;
- (void)textSelectionInteractionWillBegin:(id)a0;
- (void)proceedShouldReturnIfNeededForASP;
- (void)acceptPredictiveInput:(id)a0 executionContext:(id)a1;
- (BOOL)keyboardDrawsOpaque;
- (void)updateObserverState;
- (void)performKeyBehaviorCommitInline;
- (id)acceptCurrentCandidate;
- (id)markedTextOverlay;
- (BOOL)acceptInputString:(id)a0;
- (BOOL)isDictationPopoverPresented;
- (void)adjustCapsLockDelayOverride;
- (BOOL)callLayoutUsesAutoShift;
- (void)candidateListAcceptCandidate:(id)a0;
- (BOOL)shouldShowContinuousPathIntroductionView;
- (void)geometryChangeDone:(BOOL)a0;
- (void)autocorrectionAnimationDidStopWithAutocorrectionView:(id)a0;
- (unsigned long long)handleKeyCommand:(id)a0 repeatOkay:(BOOL *)a1 options:(unsigned long long)a2;
- (void)showKeyboardWithoutSuppressionPolicy;
- (id)keyboardWindowSnapshot;
- (BOOL)isShiftLocked;
- (void)forceShiftUpdateIfKeyboardStateChanged;
- (void)clearKeyboardWindowSnapshot;
- (void)clearAutoDeleteTimer;
- (void)performReturn;
- (void)delayedInit;
- (void)generateCandidatesAsynchronouslyWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 selectedCandidate:(id)a1;
- (void)handleIdleDetectionAction;
- (void)didSetDelegate;
- (id)_rangeForSupplementalItemText:(id)a0;
- (BOOL)isEmojiPopoverPresented;
- (void)updateKeyboardStateForDeletion;
- (id)_remoteAppId;
- (void)refreshKeyboardStateUpdatingSecureCandidateRenderTraits:(BOOL)a0;
- (void)cancelCandidateRequests;
- (void)clearUpdateLastUsedInputModeAction;
- (void)_nop;
- (void)setShouldSkipCandidateSelection:(BOOL)a0 userInitiated:(BOOL)a1;
- (void)optOutASPInTextField;
- (void)callLayoutSetShift:(BOOL)a0;
- (BOOL)needsToDeferUpdateTextCandidateView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRectToAutocorrectRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 delegateView:(id)a1 container:(id)a2;
- (void)showSelectionCommands;
- (void)removeCapsLockDelayOverride;
- (BOOL)preferFallbackAutofillGroup;
- (BOOL)handleInputManagerBasedKeybind:(id)a0 testOnly:(BOOL)a1;
- (void)performKeyBehaviorConfirm;
- (void)handleDelete;
- (void)addInputString:(id)a0;
- (id)responderStylingTraitsForceEditingMask:(BOOL)a0;
- (void)trackUsageForAcceptedAutocorrection:(id)a0 promptWasShowing:(BOOL)a1;
- (void)forwardDictationEvent_updateIdleDetection:(long long)a0;
- (id)remoteTextInputPartnerPrivate;
- (BOOL)_isAutoFillPopoverTypeExplicit:(int)a0;
- (void)handleAutoFillPasswordPopoverCommand;
- (BOOL)_shouldRequestInputManagerSyncForKeyboardOutputCallbacks:(id)a0;
- (BOOL)allowsReachableKeyboard;
- (BOOL)isRTIClient;
- (void)setKeyboardInputMode:(id)a0 userInitiated:(BOOL)a1 updateIndicator:(BOOL)a2 executionContext:(id)a3;
- (void)recomputeActiveInputModesWithExtensions:(BOOL)a0 allowNonLinguisticInputModes:(BOOL)a1;
- (BOOL)returnKeyEnabled;
- (id)inlineCompletionAsMarkedText;
- (void)handleKeyboardInput:(id)a0 executionContext:(id)a1;
- (void)keyDeactivated;
- (BOOL)isCapsLockSignOn;
- (void)setInputPoint:(struct CGPoint { double x0; double x1; })a0;
- (int)textInputChangingCount;
- (void)prepareForSelectionChange;
- (BOOL)_canHandleResponderCommandConservatively:(SEL)a0;
- (void)presentKeyboardPopoverWithType:(int)a0 keyString:(id)a1 completion:(id /* block */)a2;
- (void)candidateListInvalidateSelection:(id)a0;
- (void)clearInputForMarkedText;
- (void)setSplitProgress:(double)a0;
- (void)handleRemoteDictationEvent_updateIdleDetection:(long long)a0;
- (void)removeAllDynamicDictionaries;
- (void)deleteFromInput;
- (BOOL)_shouldSuppressSoftwareKeyboardIgnoringPolicyDelegate:(BOOL)a0;
- (void)lookUpResponderChainForCustomInputView;
- (void)_setAutofillGroup:(id)a0;
- (void)setCaretBlinks:(BOOL)a0;
- (void)clearExcessKeyboardMemory;
- (void)setInlineCompletionAsMarkedText:(id)a0 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 inputString:(id)a2 searchString:(id)a3;
- (void)trackResponderForAutofillIfNeeded:(id)a0;
- (void)applicationResumedEventsOnly:(id)a0;
- (void)flushDelayedTasks;
- (void)releaseSuppressUpdateCandidateView;
- (double)scaleCurrentForceFrom:(double)a0 to:(double)a1;
- (id)searchStringForMarkedText;
- (void)setChanged;
- (void)updateCandidateDisplay;
- (double)convertForceToGrams:(double)a0;
- (void)setAutocorrection:(id)a0;
- (void)showTextAlternativesInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)completeDelete;
- (void)longPressAction:(id)a0;
- (void)clearCursorAccessory;
- (void)sendKeyboardDismissalNotification;
- (void)removeAutocorrectPrompt;
- (void)copyOperation;
- (void)performKeyboardOutput:(id)a0 checkingDelegate:(BOOL)a1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forCustomInputView:(BOOL)a1;
- (BOOL)usesContinuousPath;
- (void)setDocumentStateForAutocorrection:(id)a0;
- (void)updateNoContentViews;
- (void)cleanupKeyboardPopover:(id)a0;
- (void)keyboardInputModeIndicatorControllerDismissIndicator:(id)a0;
- (void)setPreviousGlobeKeyEvent:(id)a0;
- (void)removeAutocorrection;
- (void)didChangeForwardingInputDelegate:(id)a0;
- (void)acceptCandidate:(id)a0;
- (BOOL)hasDelegate;
- (void)performHitTestForTouchEvent:(id)a0 executionContextPassingNSNumber:(id)a1;
- (void)_updateDelegateRequiresKeyEventsFromRemoteTextInput;
- (id)emojiPopoverController;
- (void)pasteOperation;
- (void)_updateCanSuggestSupplementalItemsForCurrentSelection;
- (id)inputForMarkedText;
- (void)syncInputManagerToAcceptedAutocorrection:(id)a0 forInput:(id)a1;
- (BOOL)changeNotificationDisabled;
- (void)clearLongPressTimer;
- (void)prepareForGeometryChange;
- (void)underlineCandidate:(id)a0;
- (void)postInputViewControllerShouldUpdateNotification:(id)a0;
- (void)removeTextChoicePromptWithUnderline;
- (unsigned long long)maxNumberOfProactiveCells;
- (void)callLayoutUpdateRecentInputs;
- (BOOL)suppliesCompletions;
- (void)willSetupNewDelegate:(id /* block */)a0;
- (BOOL)hasAutocorrectPrompt;
- (BOOL)shouldUnderlineCandidate:(id)a0;
- (void)rejectAutocorrection:(id)a0;
- (void)clearDelayDeleteTimer;
- (void)adjustPhraseBoundaryInForwardDirection:(BOOL)a0 granularity:(int)a1 executionContext:(id)a2;
- (void)reloadCurrentInputMode;
- (BOOL)shouldUseCarPlayModes;
- (void)finishSetExtensionInputMode:(id)a0 didChangeDirection:(BOOL)a1;
- (void)callLayoutSetAutoshift:(BOOL)a0;
- (void)enableTransientInputDelegateSelectionMode;
- (BOOL)isUsingDictationLayout;
- (id)currentKey;
- (BOOL)isEmojiPopoverBeingPresented;
- (void)acceptCandidate:(id)a0 forInput:(id)a1;
- (void)handleModifiersChangeForKeyEvent:(id)a0 executionContext:(id)a1;
- (void)handleRemoteDictationEvent_setEditMenuFrame:(id)a0;
- (void)handleAcceptedCandidate:(id)a0 executionContext:(id)a1;
- (void)willDismissEditMenu;
- (void)presentPressAndHoldPopoverWithKeyString:(id)a0;
- (BOOL)shouldLoadAutofillSignUpInputViewController;
- (BOOL)transitionInProgress;
- (id)autocorrectionRecordForWord:(id)a0;
- (id)acceptInlineCandidate;
- (void)replaceAllTextInResponder:(id)a0 withText:(id)a1;
- (id)_targetForResponderCommand:(SEL)a0;
- (BOOL)callLayoutIsGeometricShiftOrMoreKeyForTouch:(id)a0;
- (id)responderForSendCurrentLocation;
- (BOOL)isPredictionViewControllerVisible;
- (void)createTypoTrackerReport;
- (void)updateLayoutAndSetShift;
- (void)setDocumentState:(id)a0;
- (id)updatedKeyBehaviors;
- (void)removeSupplementalLexicon:(id)a0;
- (BOOL)autocorrectSpellingEnabled;
- (void)deleteFromInputWithFlags:(unsigned long long)a0 executionContext:(id)a1;
- (BOOL)supportsSetPhraseBoundary;
- (id)_passwordRules;
- (BOOL)callShouldInsertText:(id)a0;
- (void)clearIdleDetectionAction;
- (unsigned long long)textLengthToDeleteBeforeSelectedRangeForSmartDelete;
- (void)revealHiddenCandidates;
- (void)_showKeyboardIgnoringPolicyDelegate:(BOOL)a0;
- (void)dismissPressAndHoldPopover;
- (void)completeHandleAutoDelete;
- (id)keyplaneView;
- (id)keyboardMenuElements;
- (void)processPayloadInfo:(id)a0;
- (void)updateInputModeLastChosenPreference;
- (void)_setDelegate:(id)a0 existingDelegate:(id)a1 force:(BOOL)a2 delayEndInputSession:(BOOL)a3;
- (void)setCorrectionLearningAllowed:(BOOL)a0;
- (BOOL)delegateAlreadyInAutofillGroup;
- (void)saveInputModesPreference:(id)a0;
- (void)setInHardwareKeyboardMode:(BOOL)a0 shouldMoveKeyboard:(BOOL)a1;
- (void)clearCapsLockDelayOverrideTimer;
- (void)finishSetKeyboardInputMode:(id)a0 previousInputMode:(id)a1 didChangeDirection:(BOOL)a2;
- (void)updateKeyboardConfigurations;
- (long long)_needAutofillCandidate:(id)a0;
- (BOOL)_shouldMinimizeForHardwareKeyboard;
- (void)resumeDictationForResponderChange;
- (BOOL)willDoubleSpacePeriodForInputString:(id)a0 afterSpace:(BOOL)a1 elapsedTime:(double)a2;
- (void)recomputeActiveInputModesWithExtensions:(BOOL)a0;
- (void)updateInputOverlayForContainerFrameChange;
- (void)showPreviousCandidate;
- (void)_updateSoundPreheatingForWindow:(id)a0;
- (id)inputOverlayContainerForCandidateView:(BOOL)a0;
- (void)scribbleWillBeginWriting:(id)a0;
- (long long)_autoFillModeForPopoverType:(int)a0;
- (void)acceptCurrentCandidateIfSelectedWithExecutionContext:(id)a0;
- (void)releaseInputManagerIfInactive;
- (void)touchDictationMenuTimer:(BOOL)a0;
- (void)refreshAutofillModeIfNecessary;
- (void)_updateKeyboardConfigurations;
- (void)acceptPredictiveInput:(id)a0;
- (long long)_textInputSourceForDelegate:(id)a0;
- (void)updateHardwareKeyboardLayout:(BOOL)a0;
- (BOOL)cursorIsAtEndOfMarkedText;
- (void)generateAutofillCandidate;
- (void)updateInputManagerAutocapitalizationType;
- (BOOL)uncachedDelegateSupportsImagePaste;
- (void)completeAddInputString:(id)a0;
- (BOOL)canPresentDictationMenuWithAnimationStyle:(long long)a0;
- (void)textSuggestionDidChange:(id)a0;
- (void)_didChangeKeyplaneWithContext:(id)a0;
- (void)startAutoDeleteTimerForForce:(double)a0;
- (void)generateAutocorrectionsWithCompletionHandler:(id /* block */)a0;
- (void)updateKeyboardEventsLagging:(id)a0;
- (BOOL)_showsScribbleIconsInAssistantView;
- (id)inputModeLastUsedPreference;
- (void)layoutDidResize;
- (void)cancelAllKeyEvents;
- (void)performAutoDeleteNumberOfTimes:(unsigned long long)a0 deleteOneWord:(BOOL)a1 forwardToInputSource:(BOOL)a2;
- (void)_handleWebKeyEvent:(id)a0 withIndex:(unsigned long long)a1 inInputString:(id)a2;
- (id)desirableInputModesWithExtensions:(BOOL)a0;
- (BOOL)inputUIHandleTabWithShift:(BOOL)a0 testOnly:(BOOL)a1;
- (id)updateSecureCandidateRenderTraits;
- (id)keyboardMenuTipIdentifier;
- (void)applicationResumed:(id)a0;
- (BOOL)_canHandleResponderCommand:(SEL)a0;
- (void)touchLongPressTimerWithDelay:(double)a0;
- (void)setLayoutAllowsContinuousPath:(BOOL)a0;
- (void)touchLongPressTimerWithDelay:(double)a0 userInfo:(id)a1;
- (void)_stopAutoDeleteAtDocumentStart;
- (BOOL)editingTraitsMarkedDirty;
- (void)_willReplaceText:(id)a0 withSupplementalCandidate:(id)a1;
- (void)addSupplementalLexicon:(id)a0;
- (void)updateReturnKey;
- (void)didChangePhraseBoundary;
- (BOOL)callLayoutIgnoresShiftState;
- (BOOL)supportsNumberKeySelection;
- (void)handleAutofillCredentialSaveIfNeeded:(id)a0;
- (void)completeHandleKeyEvent:(id)a0;
- (void)presentEmojiPopoverViaTrigger:(id)a0 completion:(id /* block */)a1;
- (void)clearSelection;
- (void)setOverrideTextInputTraits:(id)a0;
- (void)queueDelayedTask:(id /* block */)a0;
- (void)completeAcceptCandidate:(id)a0;
- (BOOL)checkSpellingPreference;
- (id)_remoteLocalizedAppName;
- (void)setKeyboardInputMode:(id)a0 userInitiated:(BOOL)a1;
- (void)_resetCapsLock;
- (void)_remapKeyEvent:(id)a0 withKeyEventMap:(id)a1;
- (BOOL)insertTextIfShould:(id)a0;
- (void)touchUpdateLastUsedInputModeAction;
- (void)inputManagerDidGenerateCandidateResultSet:(id)a0;
- (void)setInputModeToNextASCIICapableInPreferredList;
- (void)acceptFirstCandidate;
- (void)setInputModeToNextInPreferredListWithExecutionContext:(id)a0;
- (void)setShiftLockedForced:(BOOL)a0;
- (BOOL)hasEditableMarkedText;
- (BOOL)_canDeleteForward;
- (BOOL)canPresentEmojiPopover;
- (void)_noteInlineCompletionAsMarkedText:(id)a0;
- (void)setUsesCandidateSelection:(BOOL)a0;
- (void)enable;
- (void)dismissFloatingKeyboardFromPencilKitIfNeeded;
- (void)presentDictationMenu;
- (BOOL)shouldApplyKeyboardCommandToUIHost;
- (void)dismissContinuousPathIntroductionView;
- (void)updateForChangedSelection;
- (void)_forwardNeededShiftStatesToDestination;
- (void)performKeyboardOutputInfo:(id)a0;
- (void)deleteOnceFromInputWithExecutionContext:(id)a0;
- (void)candidateListSelectionDidChange:(id)a0;
- (BOOL)usesAutocorrectionLists;
- (void)setLayoutRenderConfig:(id)a0;
- (void)moveCursorByAmount:(long long)a0;
- (void)scheduleReplacementsWithOptions:(unsigned long long)a0;
- (void)keyActivated;
- (BOOL)usesContinuousPathProgressiveCandidates;
- (void)_configureMarkedTextAttributesForConversion:(id)a0 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 highlightRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)textAccepted:(id)a0 executionContext:(id)a1;
- (id)_layout;
- (BOOL)handleReturnKey:(BOOL)a0;
- (void)handleAutoDeleteWithExecutionContext:(id)a0;
- (BOOL)isPressAndHoldPopoverPresented;
- (void)dismissDictationMenu;
- (BOOL)performKeyboardEvent:(id)a0;
- (BOOL)textInputTraitsNeedContactAutoFill;
- (void)deleteBackwardAndNotifyAtEnd:(BOOL)a0 deletionCount:(unsigned long long)a1 reinsertTextInLoop:(BOOL)a2;
- (BOOL)handleKeyAppCommandForCurrentEvent;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })deviceSpecificPaddingForInterfaceOrientation:(long long)a0 inputMode:(id)a1;
- (void)setDelegate:(id)a0 force:(BOOL)a1 delayEndInputSession:(BOOL)a2;
- (void)setInHardwareKeyboardMode:(BOOL)a0 forceRebuild:(BOOL)a1 shouldMoveKeyboard:(BOOL)a2;
- (BOOL)isCapsLockSwitchEnabled;
- (void)setInSplitKeyboardMode:(BOOL)a0;
- (id)inputEventForInputString:(id)a0;
- (void)setKeyboardMinimizedByDictation:(BOOL)a0;
- (void)hideKeyboardIgnoringHardwareLayouts:(BOOL)a0;
- (void)adjustAutoDeleteTimerForForce:(double)a0;
- (void)clearDictationMenuTimer;
- (void)showFirstTextAlternativeWithRangeAdjustment:(long long)a0;
- (void)showCursorAccessory;
- (void)handleObserverCallback;
- (void)_teardownExistingDelegate:(id)a0 forSetDelegate:(id)a1 force:(BOOL)a2 delayEndInputSession:(BOOL)a3;
- (BOOL)shouldGenerateCandidatesAfterSelectionChange;
- (BOOL)usesCandidateSelection;
- (void)notifyInputSourceStateChangeIfNeeded;
- (void)endObservingInputOverlayContainerFrame;
- (BOOL)delegateIsSMSTextView;
- (id)savedAutocorrectionListForCandidate:(id)a0;
- (BOOL)presentTextCompletionAsMarkedText:(id)a0;
- (void)generateAutocorrectionWithExecutionContext:(id)a0;
- (void)updateKeyboardStateForReplacingText:(id)a0 withText:(id)a1;
- (BOOL)isAutoFillMode;
- (void)handleGrammarCorrectionEntries:(id)a0;
- (id)dynamicCaretList;
- (id)_remoteUnlocalizedAppName;
- (id)_contentsOfUsernameField;
- (void)clearAnimations;
- (void)showKeyboardIfNeeded;
- (id)inputStringFromPhraseBoundary;
- (void)presentTextChoicePromptForRange:(id)a0;
- (void)setShiftNeedsUpdate;
- (void)acceptInlineCompletionWithCompletionHandler:(id /* block */)a0;
- (id)editMenuTipView;
- (void)textDidScroll;
- (BOOL)shouldRapidDeleteWithDelegate;
- (void)performSendAction;
- (void)setShiftOffIfNeeded;
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)a0;
- (id)_supplementalCandidateIcon:(id)a0;
- (void)setSplit:(BOOL)a0 animated:(BOOL)a1;
- (BOOL)shouldPrioritizeTextSuggestionsOverCandidateResultSet:(id)a0;
- (void)touchDelayDeleteTimerWithThreshold:(double)a0;
- (void)syncKeyboardToConfiguration:(id)a0;
- (id)_autofillGroup;
- (void)setTextInputChangesIgnored:(BOOL)a0;
- (void)setUserSelectedCurrentCandidate:(BOOL)a0;
- (void)forwardDictationEvent_movePopoverView:(id)a0;
- (BOOL)liveConversionEnabled;
- (void)updateIdleDetection:(long long)a0;
- (void)postInputResponderCapabilitiesChangedNotification;
- (void)beginFloatingTransitionFromPanGestureRecognizer:(id)a0;
- (id)_activeAssertionController;
- (void)undoWithKeyboardInput:(id)a0;
- (BOOL)isDictationMenuPresented;
- (void)dismissDictationTip;
- (BOOL)handleInputSwitcherForKeyEvent:(id)a0;
- (void)forwardDictationEvent_handleDictationShouldPause:(BOOL)a0 withNewDelagate:(BOOL)a1;
- (void)handleAutoFillCreditCardDetected;
- (void)removeTextChoicePromptAndAutocorrection;
- (void)adjustSegmentSize:(long long)a0;
- (BOOL)insertsSpaceAfterPredictiveInput;
- (BOOL)layoutIsResizing;
- (id)textContentTypeForCurrentInputDelegate;
- (long long)needAutofillCandidate:(id)a0;
- (void)handleAutoFillPasswordDetected;
- (id)physicalKeyboardEventWithInput:(id)a0 inputFlags:(int)a1;
- (void)willReplaceTextInRangedSelectionWithKeyboardInput;
- (void)setDelegate:(id)a0 force:(BOOL)a1;
- (void)presentEditingIntroductionView;
- (void)finishSetInputMode:(id)a0 didChangeDirection:(BOOL)a1;
- (void)playDeleteKeyFeedbackRepeat:(BOOL)a0 rapid:(BOOL)a1;
- (BOOL)handleKeyTextCommandForCurrentEvent;
- (BOOL)shiftLockPreference;
- (void)textFrameChanged:(id)a0;
- (void)clearInput;
- (id)autocorrectPromptRectsForInput:(id)a0;
- (BOOL)canShowAppConnections;
- (id)_sessionIdentifier;
- (BOOL)capsLockKeyHasLanguageSwitchLabel;
- (void)startAutoDeleteTimer;
- (void)updateFromTextInputTraits;
- (void)defaultsDidChange;
- (id)implProxy;
- (void)clearRecentInput;
- (id)_getLocalizedInputMode;
- (void)completeAcceptCandidateBeforeAddingInputObject:(id)a0 executionContext:(id)a1;
- (void)didAcceptAutocorrection:(id)a0 inputCandidate:(id)a1 wordTerminator:(id)a2 learningFlagsMask:(unsigned long long)a3;
- (BOOL)hasInlineCompletionAsMarkedText;
- (void)updateLayoutIfNecessary;
- (void)updateDefaultsWithResults:(id /* block */)a0;
- (BOOL)textInputTraitsNeedOneTimeCode;
- (BOOL)isSelectionAtSentenceAutoshiftBoundary;
- (void)updateAutocorrectPrompt:(id)a0 correctionRects:(id)a1;
- (id)acceptAutocorrectionForWordTerminator:(id)a0;
- (int)changeCount;
- (void)clearLayouts;
- (double)timeoutForCurrentForce;
- (void)representDictationMenu;
- (long long)_positionInCandidateList:(id)a0;
- (void)cutOperation;
- (void)handleStickerEvent_presentCard;
- (void)_postInputResponderChangedNotification;
- (void)clearAutocorrectPromptTimer;
- (void)moveCursorLeftShifted:(BOOL)a0;
- (BOOL)handleTabWithShift:(BOOL)a0 beforePublicKeyCommands:(BOOL)a1 isMoveAction:(BOOL)a2 testOnly:(BOOL)a3;
- (void)_setKeyboardInputMode:(id)a0 userInitiated:(BOOL)a1 updateIndicator:(BOOL)a2 force:(BOOL)a3 executionContext:(id)a4;
- (BOOL)smartInsertDeleteIsEnabled;
- (void)prepareForFloatingTransition:(BOOL)a0;
- (void)performKeyBehaviorConfirmFirstCandidate;
- (void)setEditMenuFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_handleKeyEvent:(id)a0 executionContext:(id)a1;
- (void)textChanged:(id)a0 executionContext:(id)a1;
- (void)pauseDictationForResponderChange;
- (void)refreshKeyboardState;
- (void)updateKeyboardOutput:(id)a0 withInputForSmartPunctuation:(id)a1 keyboardConfiguration:(id)a2;
- (void)hardwareKeyboardAvailabilityDidChange:(id)a0;
- (id)_getCurrentKeyboardName;
- (BOOL)handleKeyInputMethodCommandForCurrentEvent;
- (void)textAccepted:(id)a0;
- (void)acceptAutocorrectionAndEndComposition;
- (void)handleRemoteIndirectGestureWithState:(id)a0;
- (void)insertedAccentVariantFromPopover:(id)a0;
- (void)modifyTextInputTraits:(id /* block */)a0 forceSync:(BOOL)a1;
- (void)acceptAutocorrectionWithCompletionHandler:(id /* block */)a0;
- (void)callLayoutUpdateReturnKey;
- (void)hardwareKeyboardAvailabilityChanged;
- (void)updateForHandBiasChange;
- (void)removeCandidateList;
- (void)performDelete;
- (id)textSuggestions;
- (BOOL)caretVisible;
- (BOOL)callShouldInsertText:(id)a0 onDelegate:(id)a1;
- (BOOL)checkSpellingPreferenceForTraits;
- (void)addInputObject:(id)a0;
- (BOOL)_isValidKeyInput:(id)a0;
- (void)addInputString:(id)a0 fromVariantKey:(BOOL)a1;
- (id)textCompletionInputRectsFromFirstRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 lastRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)setShiftPreventAutoshift:(BOOL)a0;
- (unsigned long long)_handleKeyCommandCommon:(id)a0 options:(unsigned long long)a1;
- (void)updateDelegatePasteSupport;
- (BOOL)insertAutoFillTextSuggestion:(id)a0;
- (void)prepareKeyboardInputModeFromPreferences:(id)a0;
- (void)syncInputManagerToKeyboardStateWithExecutionContext:(id)a0;
- (id)autocorrectPrompt;
- (void)updateIsAttachedHardwareKeyboard;
- (void)handleDictationForResponderChange;
- (void)setShift:(BOOL)a0 autoshift:(BOOL)a1;
- (id)delegateAsResponder;
- (void)skipHitTestForTouchEvent:(id)a0;
- (void)deleteFromInputWithFlags:(unsigned long long)a0;
- (void)jumpToCompositions;
- (BOOL)shouldUseAdaptiveDelete;
- (void)completeUpdateForChangedSelection:(BOOL)a0;
- (void)_performInputViewControllerOutput:(id)a0;
- (BOOL)caretBlinks;
- (void)ejectKeyDown;
- (BOOL)shouldSwitchInputMode:(id)a0;
- (void)touchAutocorrectPromptTimer;
- (void)forceShiftUpdate;
- (id)returnKeyDisplayName;
- (BOOL)_cancelOperation:(BOOL)a0 testOnly:(BOOL)a1;
- (void)_addInputString:(id)a0 withFlags:(unsigned long long)a1 withInputManagerHint:(id)a2;
- (void)moveCursorRightShifted:(BOOL)a0;
- (void)removeRecentInput:(id)a0 completionHandler:(id /* block */)a1;
- (void)updateTextCandidateView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })correctionRect;
- (void)setDefaultTextInputTraits:(id)a0;
- (id)generateAutocorrectionListForSelectedText;
- (void)setPendingAutofillIndex:(long long)a0;
- (BOOL)displaysCandidates;
- (void)updateInputAssistantButtonItems;
- (void)updateStylingTraitsIfNeeded;
- (void)textWillScroll;
- (void)movePhraseBoundaryToDirection:(long long)a0 granularity:(long long)a1;
- (void)provideAutoFillTypingUpdatesIfNecessary;
- (BOOL)acceptAutofillExtraCandidateIfNeeded:(id)a0;
- (void)hideInternationalKeyIntroductionIfNeeded;
- (void)stopAutoDelete;
- (id)_fallbackAutofillGroup;
- (BOOL)shouldShowEditingIntroductionView;
- (BOOL)isAutoShifted;
- (void)handleClearWithExecutionContext:(id)a0;
- (void)setAutocorrectSpellingEnabled:(BOOL)a0;
- (id)updateKeyBehaviors:(id)a0 withBehaviors:(id)a1 forState:(id)a2;
- (void)dismissAutoFillPopover;
- (void)updateShiftState;
- (BOOL)autocapitalizationPreference;
- (void)handleClear;
- (void)setCapsLockIfNeeded;
- (void)handleAutoFillCreditCardPopoverCommand;
- (void)updateTextInputKeyboardSource;
- (void)performSendCurrentLocation;
- (BOOL)_shouldSuppressSoftwareKeyboard;
- (BOOL)deleteForwardAndNotify:(BOOL)a0;
- (void)didPresentMemojiCard;
- (void)updateSmartPunctuationOptionsForLocaleIdentifier:(id)a0;
- (double)shouldExtendLongPressAction:(id)a0;
- (void)setInputModeFromPreferences;
- (void)performKeyboardOutputOnInputSourceSession:(id /* block */)a0 shouldFlush:(BOOL)a1;
- (void)dismissDictationPopoverAndCancelDictation;
- (void)callLayoutUpdateAllLocalizedKeys;
- (void)generateCandidatesWithOptions:(int)a0;
- (void)layoutHasChanged;
- (void)didClearText;
- (BOOL)textInputTraitsNeedAutofill;
- (void)setShiftLocked:(BOOL)a0;
- (BOOL)keyboardLayoutIsInAnotherProcess;
- (BOOL)shouldShowDictationKey;
- (id)emojiCandidate:(id)a0;
- (void)setInputModeSwitcherVisibleInRemote:(BOOL)a0;
- (void)handleRemoteDictationEvent_handleTip:(id)a0;
- (void)insertCustomTextSuggestion:(id)a0;
- (BOOL)canUseCandidateBarAsSupplementToInlineView;
- (void)setInitialDirection;
- (void)_deactiveActiveKeys;
- (void)setKeyboardInputModeFromPreferences:(id)a0;
- (void)completeAddInputString:(id)a0 generateCandidates:(BOOL)a1;
- (void)_performTextOperationsForAutoFill:(id)a0;
- (BOOL)_shouldLoadPredictionsBasedOnCurrentTraits;
- (void)acceptingCandidateWithTrigger:(id)a0;
- (void)updateInputDelegateForRemoteTraitChange:(id)a0 forceSync:(BOOL)a1;
- (BOOL)acceptWord:(id)a0 firstDelete:(unsigned long long)a1 forInput:(id)a2;
- (BOOL)shouldRapidDelete;
- (void)flushTouchEventWaitingForKeyInputEventIfNecessary;
- (void)presentKeyboardMenu:(int)a0;
- (void)touchLongPressTimer;
- (BOOL)textInputTraitsNeedAutofillExcludeOneTimeCodeAndContact;
- (long long)autofillSubMode;
- (id)UILanguagePreference;
- (void)triggerPendingKeyup;
- (void)addInputEvent:(id)a0 executionContext:(id)a1;
- (void)generateCandidatesAsynchronously;
- (void)updateLegacyAutocorrectPromptWithAutocorrection:(id)a0 parentView:(id)a1 correctionRects:(id)a2;
- (void)emojiSearchWillInsertEmoji:(id)a0 forSearchQuery:(id)a1;
- (void)handleRemoteDictationEvent_startDictation;
- (id)inputWordForTerminatorAtSelection;
- (BOOL)_handleKeyCommand:(id)a0;
- (BOOL)canPasteImage;
- (void)setSelectionWithPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)endAcceptingInlineCompletionByDirectTap;
- (void)takeTextInputTraitsFromDelegate;
- (void)remoteControlReceivedWithEvent:(id)a0;
- (void)finishSplitTransitionWithProgress:(double)a0;
- (void)showNextPage;
- (void)presentDictationPopover;
- (void)addInputString:(id)a0 withFlags:(unsigned long long)a1 executionContext:(id)a2;
- (BOOL)isTrackpadMode;
- (void)updateDictationPopoverLocationIfNeeded;
- (void)skipHitTestForTouchEvents:(id)a0;
- (void)didDismissMemojiCard;
- (BOOL)canHandleDelete;
- (void)updateLayoutIfNeeded;
- (void)generateCandidates;
- (void)finishTextChanged;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })deviceSpecificStaticHitBufferForInterfaceOrientation:(long long)a0 inputMode:(id)a1;
- (void)toggleShift;
- (void)textChanged:(id)a0;
- (void)setPreviousInputString:(id)a0;
- (BOOL)isSyncingDictationLanguageForInputModeSwitch;
- (void)_setTransientSelectionModeEnabled:(BOOL)a0 forInputDelegate:(id)a1;
- (BOOL)isLongPress;
- (void)trackUsageForCandidateAcceptedAction:(id)a0;
- (void)forwardDictationEvent_stopDictation:(BOOL)a0;
- (void)deleteBackwardAndNotify:(BOOL)a0;
- (id)_rtiDocumentStateForAutoFillPopover;
- (BOOL)nextInputWouldStartSentence;
- (id)stopDictationMenuElementsForTextInputView:(id)a0;
- (void)_setShiftLockedEnabled:(BOOL)a0;
- (void)removeTextChoiceUnderlinesInRange:(id)a0;
- (void)pushAutocorrections:(id)a0 requestToken:(id)a1;
- (void)callChanged;
- (void)handleAutoDeleteContinuationOnDestinationWithDeletionCount:(unsigned long long)a0;
- (void)setCaretVisible:(BOOL)a0;
- (BOOL)shouldAllowRepeatEvent:(id)a0;
- (BOOL)inputModeSwitcherVisible;
- (int)returnKeyType;
- (void)acceptCurrentCandidateIfSelected;
- (void)updateAssistantView;
- (void)updateAutocorrectPrompt:(id)a0;
- (void)removeTextCompletionFromMarkedText:(id)a0;
- (BOOL)delayedCandidateList;
- (void)dismissEditingIntroductionView;
- (void)toggleSoftwareKeyboard;
- (void)refreshSecureCandidatesIfNecessary;
- (BOOL)shouldShowModelessInputTip;
- (unsigned long long)autocorrectionPreferenceForTraits;
- (struct CGSize { double x0; double x1; })defaultSizeForInterfaceOrientation:(long long)a0;
- (BOOL)isAutoDeleteActive;
- (void)updateCandidateDisplayAsyncWithCandidateSet:(id)a0;
- (void)_shouldClearTextSuggestions:(BOOL)a0;
- (id)rangeForTextCompletionInput:(id)a0;
- (void)handleEmojiInput:(id)a0 keyboardState:(id)a1;
- (BOOL)_needsCandidates;
- (id)_getAutocorrection;
- (void)updateInputManagerMode;
- (void)setHardwareKeyboardsSeenPreference:(id)a0;
- (BOOL)handleTabWithShift:(BOOL)a0;
- (void)logHandwritingData;
- (long long)preferredCandidateViewTypeForCandidateResultSet:(id)a0;
- (void)forwardKeyboardCameraEvent_selfDestruct;
- (void)setEditingTraitsMarkedDirty:(BOOL)a0;
- (void)changingContextWithTrigger:(id)a0;
- (void)presentDictationMenuWithAnimationStyle:(long long)a0;
- (void)forwardDictationEvent_handleTip:(id)a0 title:(id)a1;
- (void)updateAssistantViewInfo:(id)a0;
- (BOOL)nextCharacterIsWordCharacter;
- (void)beginAcceptingInlineCompletionByDirectTap;
- (void)_clearAutofillGroup;
- (void)restoreTextSuggestions;
- (void)keyboardDidHide:(id)a0;
- (void)setChangeNotificationDisabled:(BOOL)a0;
- (void)removeInlineTextCompletionPrompt;
- (void)handleRemoteDictationEvent_cancelDictation;
- (void)_wheelChangedWithEvent:(id)a0;
- (id)_remoteAssociatedDomains;
- (BOOL)shouldSwitchFromInputManagerMode:(id)a0 toInputMode:(id)a1;
- (void)_inputManagerDidGenerateSupplementalCandidates:(id)a0;
- (void)_local_acceptAutocorrection;
- (void)_cancelPendingSupplementalCandidateInsertion;
- (void)handleAutoFillContactDetected;
- (void)keyboardSceneDelegate:(id)a0 stoppedPinningInputViewsOnBehalfOfResponder:(id)a1;
- (void)collapseSelection;
- (id)acceptCurrentCandidateForInput:(id)a0;
- (id)_autofillContext;
- (void)setAutocorrectionList:(id)a0;
- (void)handleDeleteWithExecutionContext:(id)a0;
- (void)handleKeyEvent:(id)a0;
- (BOOL)shouldAcceptCandidate:(id)a0 beforeInputString:(id)a1;
- (unsigned long long)delegateConformanceType;
- (void)_dynamicUserInterfaceTraitDidChange;
- (id)editMenuInteraction:(id)a0 menuForConfiguration:(id)a1 suggestedActions:(id)a2;
- (void)handleEventFromRemoteSource_insertAutofillContent:(id)a0;
- (BOOL)keyboardIsKeyPad;
- (BOOL)shiftLockedEnabled;
- (void)updateShowCandidateBar;
- (void)generateReplacementsForString:(id)a0 candidatesHandler:(id /* block */)a1 executionContext:(id)a2;
- (void)willMoveToWindow:(id)a0;
- (void)clearForwardingInputDelegateAndResign:(BOOL)a0;
- (void)finishLayoutToCurrentInterfaceOrientation;
- (void)unmarkText:(id)a0;
- (BOOL)performKeyboardOutput:(id)a0 checkingDelegate:(BOOL)a1 forwardToRemoteInputSource:(BOOL)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForKeylayoutName:(id)a0;
- (void)setReturnKeyEnabled:(BOOL)a0;
- (BOOL)handleMoveCursorToEndOfLine:(BOOL)a0 beforePublicKeyCommands:(BOOL)a1 testOnly:(BOOL)a2 savedHistory:(id)a3 force:(BOOL)a4 canHandleSelectableInputDelegateCommand:(id /* block */)a5 keyEvent:(id)a6;
- (void)touchDictationMenuTimer;
- (void)presentDictationMenuTipWithTitle:(id)a0 description:(id)a1;
- (void)callLayoutUpdateLocalizedKeys;
- (void)dealloc;
- (void)_handleWebKeyEvent:(id)a0 withIndex:(unsigned long long)a1 inInputString:(id)a2 executionContext:(id)a3;
- (void)setCandidateDisplayIsExtended:(BOOL)a0;
- (void)_setSuggestions:(id)a0;
- (BOOL)isMinimized;
- (void)setInputMode:(id)a0;
- (BOOL)hasMarkedText;
- (id)delegate;
- (void)handleDelayedActionLongPress:(id)a0;
- (void)insertSticker:(id)a0;
- (id)asynchronousInputDelegate;
- (void)setCapsLockSign;
- (void)setShouldUpdateCacheOnInputModesChange:(BOOL)a0;
- (void)updateForChangedSelectionWithExecutionContext:(id)a0;
- (void)pushCandidateResultSet:(id)a0 requestToken:(id)a1;
- (void)setSuggestions:(id)a0;
- (BOOL)showsDedicatedEmojiKeyAlongsideGlobeButton;
- (void)completeDeleteFromInput;
- (id)inputSystemSourceSession;
- (id)inputDelegate;
- (void)_moveWithEvent:(id)a0;
- (id)markedText;
- (void)_conditionallyNotifyPredictionsAreAvailableForCandidates:(id)a0 containingProactiveTriggers:(BOOL)a1;
- (id)_payloadForSticker:(id)a0;
- (void)updateLayout;
- (void)addWordTerminator:(id)a0 afterSpace:(BOOL)a1 afterAcceptingCandidate:(id)a2 elapsedTime:(double)a3 executionContext:(id)a4;
- (void)forwardKeyboardCameraEvent_updatePreviewText:(id)a0 asMarkedText:(BOOL)a1;
- (BOOL)keyboardInputModeIndicatorControllerShouldPresentIndicator:(id)a0;
- (BOOL)shouldApplyKeyboardInputToUIHost;
- (void)handleKeyEvent:(id)a0 executionContext:(id)a1;
- (void)cancelDictationOnSendReturnKeyPressed;
- (void)_reloadInputViewsForSameDelegate:(id)a0 existingDelegate:(id)a1 force:(BOOL)a2 delayEndInputSession:(BOOL)a3;
- (void)clearDelegate;
- (BOOL)supportsScheduleReplacementsAfterDeletionToEndOfWord;
- (BOOL)pointInside:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (BOOL)doubleSpacePeriodPreference;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })getCorrectionRectIsVertical:(BOOL *)a0;
- (void)performKeyboardOutput:(id)a0;
- (void)handleRemoteDictationEvent_stopDictation:(BOOL)a0;
- (BOOL)_isKeyCommand:(id)a0;
- (void)_setCandidateController:(id)a0;
- (void)_acceptAutofillCandidateRequiringAuthentication:(id)a0 payloadDelegate:(id)a1 executionContext:(id)a2;
- (void)acceptAutocorrectionWithCompletionHandler:(id /* block */)a0 requestedByRemoteInputDestination:(BOOL)a1;
- (BOOL)canPresentPressAndHoldPopover:(id)a0;
- (BOOL)_shouldSuppressSoftwareKeyboardAndAssistantView;
- (void)insertDictationResult:(id)a0;
- (void)dismissKeyboard;
- (void)handleClearWithInsertBeforeAdvance:(id)a0;
- (BOOL)_containsUsernamePasswordPairsInAutofillGroup:(id)a0;
- (BOOL)currentKeyboardTraitsAllowCandidateBarWhileIgnoringHidePredictionTrait:(BOOL)a0;
- (void)detach;
- (BOOL)_insertSupplementalCandidate:(id)a0 overridingCandidateText:(id)a1;
- (void)_notifyDidTeardownExistingDelegate:(id)a0 newDelegate:(id)a1;
- (BOOL)inlineTextCompletionAllowedForTraits;
- (void)smartSelectionForTextInDocument:(id)a0 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 options:(unsigned long long)a2 completion:(id /* block */)a3;
- (void)startDelayDeleteTimer;
- (void)setTwoFingerTapTimestamp:(double)a0;
- (void)setShiftStatesNeededInDestination:(BOOL)a0 autoShifted:(BOOL)a1 shiftLocked:(BOOL)a2;
- (BOOL)_shouldSuppressSoftwareKeyboardForResponder:(id)a0 ignoringPolicyDelegate:(BOOL)a1;
- (void)_requestInputManagerSync;
- (void)_updateTextInputPencilSource;
- (void)handleRemoteDictationEvent_switchToDictationLanguage:(id)a0;
- (BOOL)keyboardIsInPencilTextInputMode;
- (BOOL)noContent;
- (void)performBlockWithTextInputChangesIgnoredForNonMacOS:(id /* block */)a0;
- (void)longPressAction;
- (void)updateForExpectedRemoteDocumentStateChange:(id)a0 selectedTextRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 forceSync:(BOOL)a2;
- (void)selectionWillChange:(id)a0;
- (BOOL)_handlesKeyCommandForEvent:(id)a0;
- (void)generateCandidatesFromReplacements;
- (void)showKeyboard;
- (void)updateDoubleSpacePeriodStateForCharacter:(unsigned int)a0;
- (void)setInputMode:(id)a0 userInitiated:(BOOL)a1;
- (id)_rangeForAutocorrectionText:(id)a0;
- (void)removeFromSuperview;
- (BOOL)hideAccessoryViewsDuringSplit;
- (BOOL)isMemberOfAutofillGroup:(id)a0;
- (id)window;
- (void)presentKeyboardFeedbackAssistantViewControllerForLogURL:(id)a0;
- (void)resetInputDelegate;
- (BOOL)shouldForwardInsertSpaceAfterAcceptingPredictiveInput:(id)a0;
- (void)performKeyboardOutputAsInputViewControllerOutput:(id)a0 textInputSource:(long long)a1;
- (BOOL)suppressOptOutASPCandidateUpdateForDelegate:(id)a0;
- (void)presentationControllerDidDismiss:(id)a0;
- (void)syncDocumentStateToInputDelegateWithExecutionContext:(id)a0;
- (BOOL)textInputTraitsNeedSignup;
- (BOOL)_shouldLoadAutofillSignUpInputViewController;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)didAcceptAutocorrection:(id)a0 inputCandidate:(id)a1 wordTerminator:(id)a2;
- (BOOL)dontPushOneTimeCode;
- (void)hideKeyboard;
- (void)didMoveToSuperview;
- (void)_postInputResponderCapabilitiesChangedNotificationWithOutput:(id)a0 selectionChanged:(BOOL)a1;
- (void)didApplyAutocorrection:(id)a0 autocorrectPromptFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)_handleAutoFillPopoverCommandWithType:(int)a0 action:(SEL)a1;
- (id)layoutState;
- (BOOL)isShiftKeyBeingHeld;
- (void)notifyShiftState;
- (void)handleEmojiPopoverKeyCommand;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)acceptRecentInput:(id)a0;
- (BOOL)deleteForwardAndNotify:(BOOL)a0 producedByDeleteInput:(BOOL)a1;
- (BOOL)isOutOfProcess;
- (void)keyboardSceneDelegate:(id)a0 startedPinningInputViewsOnBehalfOfResponder:(id)a1;
- (BOOL)handleKeyCommandsBeforePublicAsInputUIHost:(id)a0;
- (void)performKeyboardOutput:(id)a0 forwardToRemoteInputSource:(BOOL)a1;
- (BOOL)isShifted;
- (void)clearTextAlternativesRange;
- (BOOL)canHandleKeyHitTest;
- (id)internationalKeyDisplayStringOnEmojiKeyboard;
- (BOOL)shouldAcceptContinuousPathConversion:(id)a0;
- (void)clearTransientState;
- (void)animateAutocorrectionToText:(id)a0 fromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)assertTextForDictation;
- (BOOL)isCallingInputDelegate;
- (void)replaceText:(id)a0;
- (void)_generateTextSuggestionForKeyboardCamera;
- (void)beginObservingInputOverlayContainerFrame;
- (id)inputModePreference;
- (void)_notifyWillSetupNewDelegate:(id)a0 existingDelegate:(id)a1;
- (void)inputManagerDidGenerateAutocorrections:(id)a0 executionContext:(id)a1;
- (BOOL)shouldUsePinyinStyleRowNavigation;
- (void)clearDetachHardwareKeyboardAction;
- (void)_dictationDidRecieveDidBeginDictationNotification:(id)a0;
- (BOOL)_handleKeyInputMethodCommandForEvent:(id)a0 canHandleAppKeyCommand:(BOOL)a1;
- (void)_handleWebKeyEvent:(id)a0 withEventType:(int)a1 withInputString:(id)a2 withInputStringIgnoringModifiers:(id)a3 executionContext:(id)a4;
- (void)clearRemoteTextInputPartner;
- (BOOL)canHandlePresses:(id)a0 withEvent:(id)a1;
- (void)dismissEmojiPopoverBeforeCleanup:(BOOL)a0;
- (BOOL)handleVerticalArrow:(BOOL)a0 shiftDown:(BOOL)a1 beforePublicKeyCommands:(BOOL)a2 testOnly:(BOOL)a3 isVerticalCandidate:(BOOL)a4 hasCandidatesForTypedInput:(BOOL)a5 inputDelegateCommandEnabled:(BOOL)a6 canHandleInputDelegateCommand:(id /* block */)a7 savedHistory:(id)a8 keyCommandTypeHandled:(unsigned long long *)a9 keyEvent:(id)a10;
- (void)acceptPredictiveInput:(id)a0 appendSeparator:(BOOL)a1;
- (void)clearChangeTimeAndCount;
- (void)clearShiftState;
- (BOOL)globeKeyDisplaysAsEmojiKey;
- (void)_dispatchInsertionPointEnteredText:(id)a0 range:(id)a1 withSupplementalCandidate:(id)a2;
- (BOOL)acceptWord:(id)a0 firstDelete:(unsigned long long)a1;
- (void)dismissInputModeIndicator;
- (void)dismissTextChoicePrompt;
- (void)handleRemoteDictationEvent_movePopoverView:(id)a0;
- (void)setAttributedMarkedText:(id)a0 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 inputString:(id)a2 searchString:(id)a3;
- (void)_acceptSupplementalCandidate:(id)a0 completion:(id /* block */)a1;
- (void)_setupDelegate:(id)a0 delegateSame:(BOOL)a1 hardwareKeyboardStateChanged:(BOOL)a2 endingInputSessionIdentifier:(id)a3 force:(BOOL)a4 delayEndInputSession:(BOOL)a5;
- (void)updateDictationPopoverLocationForCandidateInlineView:(id)a0 yOffset:(double)a1;
- (void)popoverPresentationController:(id)a0 willRepositionPopoverToRect:(inout struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1 inView:(inout id *)a2;
- (void)flushKeyboardOutputOnInputSourceSession;
- (void)handleEventFromRemoteSource_chooseSupplementalItem:(id)a0 toReplaceText:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })subtractKeyboardFrameFromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)scheduleReplacementsAfterDeletionToEndOfWord;
- (void)acceptPredictiveInput:(id)a0 appendSeparator:(BOOL)a1 executionContext:(id)a2;
- (BOOL)callLayoutIsShiftKeyPlaneChooser;
- (void)handleEventFromRemoteSource_insertionPointEnteredText:(id)a0 withSupplementalCandidate:(id)a1;
- (void)performOnInputSourceSessionActionSelector:(SEL)a0;
- (void)_updateKeyboardSuppression:(id)a0;
- (void)deleteHandwritingStrokesAtIndexes:(id)a0;
- (void)forwardDictationEvent_switchToDictationInputModeWithOptions:(id)a0;
- (id)attributedText;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (unsigned long long)_clipCornersOfView:(id)a0;
- (void)acceptAutocorrectionForWordTerminator:(id)a0 executionContextPassingTIKeyboardCandidate:(id)a1;
- (void)handleEventCallbackFromRemoteDestination_didChooseSupplementalItem:(id)a0 toReplaceText:(id)a1;
- (void)skipHitTestForTouchEvent:(id)a0 delayed:(BOOL)a1;
- (void)_updateExternalDeviceInputSettingForWindow:(id)a0;
- (void)dismissEmojiPopoverIfNecessaryWithCompletion:(id /* block */)a0;
- (void)enableTransientSelectionMode;
- (void)_insertionPointExitedRangeWithSupplementalCandidate;
- (BOOL)_shouldAcceptAutocorrectionOnSelectionChange;
- (void)updateChangeTimeAndIncrementCount;
- (long long)needAutofill;
- (void)setLabel:(id)a0 forKey:(id)a1;
- (BOOL)callShouldDeleteWithWordCountForRapidDelete:(int)a0 characterCountForRapidDelete:(int)a1;
- (void)handleRemoteDictationEvent_stopDictationIgnoreFinalizePhrases;
- (id)replacementsFromSelectedText;
- (void)cancelSplitTransition;
- (void)handleDeleteWordWithExecutionContext:(id)a0;
- (id)_getCurrentKeyplaneName;
- (id)documentIdentifierForInputDelegate:(id)a0;
- (void)forwardDictationEvent_resumeDictation;
- (BOOL)handleKeyCommand:(id)a0 repeatOkay:(BOOL *)a1 beforePublicKeyCommands:(BOOL)a2;
- (void)selectionDidChange:(id)a0;
- (BOOL)presentationControllerShouldDismiss:(id)a0;
- (unsigned int)setMarkedText:(id)a0 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 inputString:(id)a2 lastInputString:(id)a3 searchString:(id)a4 candidateOffset:(long long)a5 liveConversionSegments:(id)a6 highlighSegmentIndex:(unsigned long long)a7;
- (BOOL)shouldShowLongPredictionList;
- (BOOL)_isShowingCandidateUIWithAvailableCandidates;
- (void)forwardDictationEvent_cancelDictation;
- (id)hardwareKeyboardsSeenPreference;
- (BOOL)isEmojiPopoverVisibleOrDismissing;
- (BOOL)delegateSuggestionsForCurrentInput;
- (BOOL)shouldShowInternationalKeyIntroduction;
- (BOOL)autocorrectionPreference;
- (id)acceptInlineCandidateForInput:(id)a0;
- (BOOL)callLayoutIsShiftKeyBeingHeld;
- (void)acceptCandidate:(id)a0 forInput:(id)a1 executionContext:(id)a2;
- (void)handleEventFromRemoteSource_cancelChooseSupplementalItemToInsert;
- (void)insertedEmojiFromPopover:(id)a0 selectionMethod:(id)a1;
- (void)handleStringInput:(id)a0 withFlags:(unsigned long long)a1 withInputManagerHint:(id)a2 executionContext:(id)a3;
- (BOOL)shouldShowInternationalKey;
- (void)trackUsageForPromptedCorrection:(id)a0 inputString:(id)a1 previousPrompt:(id)a2;
- (void)updateAutocorrectContainerWithAutocorrection:(id)a0 parentView:(id)a1 correctionRects:(id)a2;
- (BOOL)shouldDeleteAutospaceBeforeTerminator:(id)a0;
- (void)presentContinuousPathIntroductionView;
- (void)callLayoutLongPressAction;
- (void)_tagTouchForTypingMenu:(unsigned int)a0;
- (void)removeASPVisualEffectsIfNecessary:(id)a0;
- (void)restoreFocusFromEntryPoint:(struct CGPoint { double x0; double x1; })a0;
- (double)biasedKeyboardWidthRatio;
- (void)touchAutoDeleteTimerWithThreshold:(double)a0 adjustForPartialCompletion:(BOOL)a1;
- (void)setRemoteDictationPopover:(id)a0;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })dragGestureRectInView:(id)a0;
- (BOOL)assertTextForRemoteDocument:(id)a0 withSelectionDelta:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 updatingSelection:(BOOL)a2;
- (void)fadeAutocorrectPrompt;
- (void)documentStateFromInputDelegate:(id /* block */)a0;
- (void)updateHardwareKeyboardLayout;
- (id)_getAutocorrectionList;
- (void).cxx_destruct;
- (BOOL)isDictationLanguageMenuPresented;
- (void)performKeyboardOutputAsRTIClient:(id)a0;
- (long long)currentHandBias;
- (BOOL)shouldShowCandidateBarIfReceivedCandidatesInCurrentInputMode:(BOOL)a0 ignoreHidePredictionTrait:(BOOL)a1;
- (void)_suppressSoftwareKeyboardStateChangedIgnoringPolicyDelegate:(BOOL)a0;
- (void)updateLayoutToCurrentInterfaceOrientation;
- (void)addInputString:(id)a0 withFlags:(unsigned long long)a1 withInputManagerHint:(id)a2 executionContext:(id)a3;
- (void)_presentDictationMenuIfAllowed;
- (unsigned int)_setAttributedMarkedText:(id)a0 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 inputString:(id)a2 lastInputString:(id)a3 searchString:(id)a4 compareAttributes:(BOOL)a5;
- (void)becomeFirstResponderAndMakeVisible:(BOOL)a0;
- (void)dismissDictationPopover;
- (void)handleRemoteDictationEvent_switchToDictationInputModeWithOptions:(id)a0;
- (void)keyboardInputModeIndicatorControllerPresentIndicator:(id)a0 reason:(id)a1;
- (void)performOperations:(id /* block */)a0 withTextInputSource:(long long)a1;
- (void)removeSpaceAfterEmojiForInputString:(id)a0;
- (void)removeTextChoiceUnderlines;
- (void)_processInputViewControllerKeyboardOutput:(id)a0 executionContext:(id)a1;
- (void)updateAutocorrectPrompt:(id)a0 executionContext:(id)a1;
- (void)removeTextChoicePrompt;
- (void)finishSetInputModeToNextInPreferredListWithExecutionContext:(id)a0 withPreviousInputMode:(id)a1;
- (void)forwardStickerEvent_presentCard;
- (void)handleAutoFillContactPopoverCommand;
- (void)releaseInputManager;
- (void)refreshRivenPreferences;
- (BOOL)_hasCandidates;
- (BOOL)shouldApplyAcceptedAutocorrection:(id)a0;
- (BOOL)userSelectedCurrentCandidate;
- (void)clearAutofillGroup;
- (void)deleteBackward;
- (void)handleUpdateLastUsedInputModeAction:(id)a0;
- (BOOL)isEmojiPopoverBeingDismissed;
- (void)selectionScrolling:(id)a0;
- (void)sendCallbacksForPostCorrectionsRemoval;
- (void)handleEventFromRemoteDestination_canSuggestSupplementalItemsForCurrentSelection:(BOOL)a0;
- (void)clearLanguageIndicator;
- (void)dismissKeyboardPopover:(id)a0 beforeCleanup:(BOOL)a1 completion:(id /* block */)a2;
- (void)_ensureRTIConnection;
- (void)_didReplaceText:(id)a0 withSupplementalCandidate:(id)a1;
- (void)hideKeyboardWithoutPreflightChecks;
- (void)presentDictationMenuTip:(id)a0;
- (BOOL)_shouldSuppressSoftwareKeyboardByDictation;
- (void)_setNeedsCandidates:(BOOL)a0;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (void)deactivateLayout;
- (void)handleWebViewCredentialsSaveForWebsiteURL:(id)a0 user:(id)a1 password:(id)a2 passwordIsAutoGenerated:(BOOL)a3;
- (void)_completePerformInputViewControllerOutput:(id)a0 executionContext:(id)a1;
- (void)textWillChange:(id)a0;
- (id)buildInputSourceState;
- (BOOL)predictionFromPreference;
- (BOOL)isCapsLockASCIIToggle;
- (BOOL)candidateSelectionPredictionForTraits;
- (BOOL)delegateSupportsImagePaste;
- (id)generateAutocorrectionReplacements:(id)a0;
- (BOOL)handleCandidateListNavigation:(unsigned int)a0 hasCandidatesForTypedInput:(BOOL)a1 shiftDown:(BOOL)a2 keyCommandTypeHandled:(unsigned long long *)a3 allowRepeat:(BOOL *)a4 beforePublic:(BOOL)a5 keyEvent:(id)a6;
- (void)disableTransientSelectionMode;
- (void)responseContextDidChange;
- (id)_keyboardBehaviorState;
- (void)_setAutocorrects:(BOOL)a0;
- (BOOL)shouldAllowSelectionGestures:(BOOL)a0 atPoint:(struct CGPoint { double x0; double x1; })a1 toBegin:(BOOL)a2;
- (void)_handleWebKeyEvent:(id)a0 withInputString:(id)a1 executionContext:(id)a2;
- (void)applicationSuspendedEventsOnly:(id)a0;
- (void)setShift:(BOOL)a0;
- (void)_selectionScrolling:(BOOL)a0 scroller:(id)a1;
- (void)showInternationalKeyIntroductionIfNeededWithPreviousInputMode:(id)a0;
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)a0 preserveIfPossible:(BOOL)a1;
- (void)_setWaitingOnPerformAutocorrect:(id /* block */)a0;
- (void)acceptAutocorrection;
- (void)generateAutofillCandidateByAddingTask:(BOOL)a0;
- (BOOL)maximizing;
- (BOOL)handleMoveCursorToStartOfLine:(BOOL)a0 beforePublicKeyCommands:(BOOL)a1 testOnly:(BOOL)a2 savedHistory:(id)a3 force:(BOOL)a4 canHandleSelectableInputDelegateCommand:(id /* block */)a5 keyEvent:(id)a6;
- (void)handleEventFromRemoteSource_insertSupplementalCandidate:(id)a0 textToCommit:(id)a1;
- (BOOL)isMemberOfPossibleAutofillGroup:(id)a0;
- (void)handleDeletionForCandidate:(id)a0;
- (void)sendCallbacksForPreCorrectionsDisplay;
- (void)clearInputWithCandidatesCleared:(BOOL)a0;
- (void)setDelegate:(id)a0;
- (void)_performKeyboardOutput:(id /* block */)a0 respectingForwardingDelegate:(BOOL)a1;
- (void)detachHardwareKeyboard;
- (void)handleRemoteDictationEvent_resumeDictation;
- (void)performStopAutoDeleteAtDocumentStart;
- (long long)adaptivePresentationStyleForPresentationController:(id)a0 traitCollection:(id)a1;
- (BOOL)_shouldEmitString:(id)a0 forKeyEvent:(id)a1;
- (void)playDeleteKeyFeedbackIfNecessaryRepeat:(BOOL)a0 rapid:(BOOL)a1;
- (void)_attemptAuthenticationWithMessage:(id)a0;
- (void)_dispatchInsertionPointExitedRangeWithSupplementalCandidate;
- (void)_handleKeyBehavior:(unsigned long long)a0 forKeyType:(id)a1;
- (BOOL)handleTabWithShift:(BOOL)a0 beforePublicKeyCommands:(BOOL)a1;
- (void)forwardDictationEvent_switchToDictationLanguage:(id)a0;
- (void)insertText:(id)a0 withAlternativePredictions:(id)a1;
- (void)performKeyboardOutputOnInputSourceSession:(id /* block */)a0;
- (void)prepareLayoutForInterfaceOrientation:(long long)a0;
- (void)layoutSubviews;
- (void)updateInputDelegateForRemoteDocumentStateChange:(id)a0 selectedTextRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 hasText:(BOOL)a2 forceSync:(BOOL)a3;
- (void)nonDestructivelyDismissKeyboard;
- (void)performHitTestForTouchEvents:(id)a0 executionContextPassingNSNumber:(id)a1;
- (BOOL)accessibilityUsesExtendedKeyboardPredictionsEnabled;
- (void)setCandidateList:(id)a0;
- (void)_handleWebKeyEvent:(id)a0 withEventType:(unsigned long long)a1 withInputString:(id)a2 withInputStringIgnoringModifiers:(id)a3;
- (void)_showAutofillExtras;
- (void)handleEventFromRemoteSource_insertionPointExitedTextWithSupplementalItems;
- (id)handleReplacement:(id)a0 forSpaceAndInput:(id)a1;
- (void)candidateBarDidExtendWithGesture;
- (void)updateKeyboardStateForInsertion:(id)a0;
- (BOOL)usesAutoDeleteWord;
- (id)_getCandidateList;
- (BOOL)_isShowingSuggestionForKeyboardCamera;
- (void)_scheduleInputAdditionOrDeletion:(id /* block */)a0;
- (BOOL)cursorIsAtStartOfInlineCompletionMarkedText;
- (id)candidateList;
- (void)_deleteFromInputWithFlags:(unsigned long long)a0;
- (void)updateTextInputKeyboardSource:(id)a0;
- (void)_acceptAutocorrection;
- (void)animateAutocorrectionToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 fromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (id)handleDeleteAutospaceForInputString:(id)a0 afterSpace:(BOOL)a1;
- (BOOL)handleHorizontalArrow:(BOOL)a0 shiftDown:(BOOL)a1 beforePublicKeyCommands:(BOOL)a2 testOnly:(BOOL)a3 isVerticalCandidate:(BOOL)a4 hasCandidatesForTypedInput:(BOOL)a5 shouldNavigateCandidateList:(BOOL)a6 canHandleInputDelegateCommand:(id /* block */)a7 savedHistory:(id)a8 keyCommandTypeHandled:(unsigned long long *)a9 keyEvent:(id)a10;
- (BOOL)isCurrentEditResponderInEditingMode;
- (void)insertAttributedText:(id)a0;
- (BOOL)keyboardsExpandedPreference;
- (BOOL)applyAutocorrection:(id)a0;
- (BOOL)canPresentOrDismissEmojiPopover;
- (void)setInputMode:(id)a0 userInitiated:(BOOL)a1 updateIndicator:(BOOL)a2 executionContext:(id)a3;
- (id /* block */)_acquireWaitingOnPerformAutocorrect;
- (double)lastTouchDownTimestamp;
- (unsigned int)assertIntermediateText:(id)a0;
- (void)finishLayoutChangeWithArguments:(id)a0;
- (void)setInputManagerFromCurrentInputMode;
- (void)_setShouldSuppressSoftwareKeyboard:(BOOL)a0;
- (BOOL)shouldShowKeyboardMenu;
- (BOOL)needOneTimeCodeAutofill;
- (void)completeDeleteOnceFromInputWithCharacterBefore:(unsigned int)a0;
- (BOOL)pointInside:(struct CGPoint { double x0; double x1; })a0 forEvent:(struct __GSEvent { } *)a1;
- (void)_setKeyboardInputMode:(id)a0 userInitiated:(BOOL)a1 force:(BOOL)a2;
- (id)autocorrectPromptRectsFromFirstDelegateRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 lastDelegateRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)hideDictationMenuIfNeeded:(BOOL)a0;
- (BOOL)isCurrentEditResponderWebKit;
- (void)didMoveToWindow;
- (void)performTextOperationActionSelector:(SEL)a0;
- (void)removeAutocorrectPromptAndCandidateList;
- (void)acceptAutocorrection:(id)a0 executionContextPassingTIKeyboardCandidate:(id)a1;
- (void)updateDocumentViewsAfterKeyboardOutput:(id)a0;
- (void)stickerPickerKeyboardSessionDidFinish;
- (void)textDidChange:(id)a0;
- (void)_updateInputViewControllerOutput:(id)a0 forKeyboardOutput:(id)a1;
- (void)setRemoteDelegateSupportsImagePaste:(BOOL)a0;
- (void)addInputObject:(id)a0 executionContext:(id)a1;
- (void)syncInputManagerToKeyboardState;
- (void)handleKeyWithString:(id)a0 forKeyEvent:(id)a1 executionContext:(id)a2;
- (void)_presentKeyboardPopoverWithType:(int)a0 keyString:(id)a1 popoverController:(id)a2 textInputView:(id)a3 caretRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a4 isVerticalText:(BOOL)a5 completion:(id /* block */)a6;
- (void)clearTimers;
- (void)forwardDictationEvent_startDictation;
- (void)emojiSearchWillInsertEmoji:(id)a0 forSearchQuery:(id)a1 selectionMethod:(id)a2 inputType:(id)a3;
- (void)setInHardwareKeyboardMode:(BOOL)a0 forceRebuild:(BOOL)a1;
- (void)traitCollectionDidChange;
- (id)_autocorrectionListDemotingAutocorrectionFromList:(id)a0;
- (id)stopDictationMenuElements;
- (void)updateReturnKey:(BOOL)a0;

@end
