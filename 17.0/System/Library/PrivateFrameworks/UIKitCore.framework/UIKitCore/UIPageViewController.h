@class NSHashTable, _UIPageViewControllerContentView, NSArray, NSString, _UIPageCurl, UITapGestureRecognizer, NSMutableDictionary, NSDictionary, UIPanGestureRecognizer, NSMutableArray, _UIQueuingScrollView;
@protocol UIPageViewControllerDelegate, UIPageViewControllerDataSource;

@interface UIPageViewController : UIViewController <UIGestureRecognizerDelegate, _UIQueuingScrollViewDelegate, _UIQueuingScrollViewDataSource> {
    id<UIPageViewControllerDelegate> _delegate;
    id<UIPageViewControllerDataSource> _dataSource;
    long long _transitionStyle;
    long long _navigationOrientation;
    long long _spineLocation;
    BOOL _doubleSided;
    BOOL _pageControlRequiresValidation;
    _UIPageCurl *_pageCurl;
    UIPanGestureRecognizer *_panGestureRecognizer;
    UITapGestureRecognizer *_tapGestureRecognizer;
    BOOL _stashingViewControllersForRotation;
    NSMutableArray *_rotationSnapshotViews;
    long long _spineLocationPriorToInterfaceRotation;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _tapRegionInsets;
    struct CGSize { double width; double height; } _tapRegionBreadths;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _effectiveTapRegionInsets;
    struct CGSize { double width; double height; } _effectiveTapRegionBreadths;
    struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *_tapRegions;
    double _pageSpacing;
    NSMutableDictionary *_cachedViewControllersForCurl;
    NSHashTable *_cachedViewControllersForScroll;
    NSDictionary *_incomingAndOutgoingViewControllersForManualTransition;
    long long _lastKnownNavigationDirection;
    long long _disableAutorotationCount;
    struct { unsigned char delegateWantsTransitionWillBegin : 1; unsigned char delegateWantsTransitionCompleted : 1; unsigned char delegateWantsTransitionsFinished : 1; unsigned char delegateCustomizesSpineLocationForInterfaceOrientation : 1; unsigned char delegateSupportedInterfaceOrientations : 1; unsigned char delegatePreferredInterfaceOrientationForPresentation : 1; unsigned char dataSourceSuppliesBeforeViewController : 1; unsigned char dataSourceSuppliesAfterViewController : 1; unsigned char dataSourceSuppliesPageCount : 1; unsigned char dataSourceSuppliesPageNumber : 1; } _delegateFlags;
    id<UIPageViewControllerDataSource> _unsafeUnretainedDataSource;
    id<UIPageViewControllerDelegate> _unsafeUnretainedDelegate;
}

@property (readonly, nonatomic) long long _transitionStyle;
@property (readonly, nonatomic) long long _navigationOrientation;
@property (retain, nonatomic, setter=_setViewControllers:) NSArray *_viewControllers;
@property (retain, nonatomic, setter=_setViewControllersStashedForRotation:) NSArray *_viewControllersStashedForRotation;
@property (readonly, nonatomic, getter=_isPageControlVisible) BOOL _pageControlVisible;
@property (readonly, nonatomic) _UIPageViewControllerContentView *_contentView;
@property (readonly, nonatomic) _UIQueuingScrollView *_scrollView;
@property (nonatomic, setter=_setPageSpacing:) double _pageSpacing;
@property (readonly, nonatomic, getter=_isInterfaceRotating) BOOL _interfaceRotating;
@property (weak, nonatomic) id<UIPageViewControllerDelegate> delegate;
@property (weak, nonatomic) id<UIPageViewControllerDataSource> dataSource;
@property (readonly, nonatomic) long long transitionStyle;
@property (readonly, nonatomic) long long navigationOrientation;
@property (readonly, nonatomic) long long spineLocation;
@property (nonatomic, getter=isDoubleSided) BOOL doubleSided;
@property (readonly, nonatomic) NSArray *gestureRecognizers;
@property (readonly, nonatomic) NSArray *viewControllers;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)_isSupportedTransitionStyle:(long long)a0;
+ (id)stringForSpineLocation:(long long)a0;
+ (id)_outgoingViewControllerKeys;
+ (BOOL)_isSpineLocation:(long long)a0 supportedForTransitionStyle:(long long)a1;
+ (BOOL)_isNavigationOrientation:(long long)a0 supportedForTransitionStyle:(long long)a1;
+ (id)_incomingViewControllerKeys;
+ (BOOL)doesOverridePreferredInterfaceOrientationForPresentation;

- (BOOL)_hasPreferredInterfaceOrientationForPresentation;
- (void)_beginDisablingInterfaceAutorotation;
- (BOOL)shouldAutorotateToInterfaceOrientation:(long long)a0;
- (void)willAnimateRotationToInterfaceOrientation:(long long)a0 duration:(double)a1;
- (long long)preferredInterfaceOrientationForPresentation;
- (void)didRotateFromInterfaceOrientation:(long long)a0;
- (void)_marginInfoForChild:(id)a0 leftMargin:(double *)a1 rightMargin:(double *)a2;
- (BOOL)_shouldPersistViewWhenCoding;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_edgeInsetsForChildViewController:(id)a0 insetsAreAbsolute:(BOOL *)a1;
- (id)_deepestActionResponder;
- (void)willRotateToInterfaceOrientation:(long long)a0 duration:(double)a1;
- (void)viewWillAppear:(BOOL)a0;
- (BOOL)shouldAutomaticallyForwardAppearanceMethods;
- (void)dealloc;
- (void)encodeWithCoder:(id)a0;
- (id)preferredFocusedView;
- (void)loadView;
- (void)_endDisablingInterfaceAutorotation;
- (unsigned long long)supportedInterfaceOrientations;
- (id)initWithNibName:(id)a0 bundle:(id)a1;
- (void)viewWillDisappear:(BOOL)a0;
- (void)_handlePanGesture:(id)a0;
- (void).cxx_destruct;
- (void)viewDidAppear:(BOOL)a0;
- (void)viewDidDisappear:(BOOL)a0;
- (id)initWithCoder:(id)a0;
- (BOOL)shouldAutomaticallyForwardRotationMethods;
- (void)_cacheViewControllerForScroll:(id)a0;
- (BOOL)_canHandleGestures;
- (void)_child:(id)a0 beginAppearanceTransition:(BOOL)a1 animated:(BOOL)a2;
- (void)_child:(id)a0 beginAppearanceTransitionIfPossible:(BOOL)a1 animated:(BOOL)a2;
- (BOOL)_child:(id)a0 canBeginAppearanceTransition:(BOOL)a1;
- (void)_child:(id)a0 didRotateFromInterfaceOrientation:(long long)a1;
- (void)_child:(id)a0 endAppearanceTransitionIfPossible:(BOOL)a1;
- (void)_child:(id)a0 willAnimateRotationToInterfaceOrientation:(long long)a1 duration:(double)a2;
- (void)_child:(id)a0 willRotateToInterfaceOrientation:(long long)a1 duration:(double)a2;
- (BOOL)_childCanEndAppearanceTransition:(id)a0;
- (void)_childEndAppearanceTransition:(id)a0;
- (struct CGSize { double x0; double x1; })_contentSizeForSize:(struct CGSize { double x0; double x1; })a0;
- (void)_contentViewFrameOrBoundsDidChange;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_disabledScrollingRegion;
- (struct CGSize { double x0; double x1; })_effectiveTapRegionBreadths;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_effectiveTapRegionInsets;
- (void)_flushViewController:(id)a0 animated:(BOOL)a1;
- (BOOL)_gestureRecognizerShouldBegin:(id)a0;
- (void)_handlePagingInDirection:(long long)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (void)_handleTapGesture:(id)a0;
- (id)_incomingViewControllersForGestureDrivenCurlInDirection:(long long)a0;
- (void)_invalidateEffectiveTapRegions;
- (void)_invalidatePageCurl;
- (void)_invalidateViewControllersStashedForCurlFromDataSource;
- (BOOL)_isCurrentViewControllerStateValid;
- (long long)_navigationEndDirectionInResponseToPanGestureRecognizer:(id)a0 suggestedVelocity:(double *)a1;
- (id)_pageControl;
- (void)_pageControlValueChanged:(id)a0;
- (void)_populateIncomingViewControllersInMap:(id)a0 withViewControllers:(id)a1 forCurlInDirection:(long long)a2;
- (void)_populateOutgoingViewControllersInMap:(id)a0;
- (id)_queuingScrollView:(id)a0 viewBefore:(BOOL)a1 view:(id)a2;
- (long long)_requestSpineLocationForInterfaceOrientationAndUpdateStashedViewControllers:(long long)a0;
- (void)_sendChildViewWill:(BOOL)a0 appear:(BOOL)a1 animated:(BOOL)a2;
- (void)_setDisabledScrollingRegion:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_setSpineLocation:(long long)a0;
- (void)_setTapRegionBreadths:(struct CGSize { double x0; double x1; })a0;
- (void)_setTapRegionInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a0;
- (void)_setViewControllers:(id)a0 withCurlOfType:(long long)a1 fromLocation:(struct CGPoint { double x0; double x1; })a2 direction:(long long)a3 animated:(BOOL)a4 notifyDelegate:(BOOL)a5 completion:(id /* block */)a6;
- (void)_setViewControllers:(id)a0 withScrollInDirection:(long long)a1 animated:(BOOL)a2 completion:(id /* block */)a3;
- (BOOL)_shouldBeginNavigationInDirection:(long long *)a0 inResponseToPanGestureRecognizer:(id)a1;
- (BOOL)_shouldCompleteManualCurlWithSuggestedVelocity:(double *)a0;
- (BOOL)_shouldFlipInRightToLeft;
- (BOOL)_shouldNavigateInDirection:(long long *)a0 inResponseToTapGestureRecognizer:(id)a1;
- (BOOL)_shouldNavigateInDirection:(long long *)a0 inResponseToVelocity:(double *)a1 ofGestureRecognizedByPanGestureRecognizer:(id)a2;
- (struct CGSize { double x0; double x1; })_tapRegionBreadths;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_tapRegionInsets;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)_tapRegions;
- (void)_updatePageControlViaDataSourceIfNecessary;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_validRangeForPresentationOfViewControllersWithSpineLocation:(long long)a0;
- (id)_validatedViewControllersForPresentationOfViewControllers:(id)a0 validRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (id)_validatedViewControllersForTransitionWithViewControllers:(id)a0 animated:(BOOL)a1;
- (id)_viewControllerAfterViewController:(id)a0;
- (id)_viewControllerBefore:(BOOL)a0 viewController:(id)a1;
- (id)_viewControllerBeforeViewController:(id)a0;
- (id)_viewControllersForCurlWithViewControllers:(id)a0 direction:(long long)a1;
- (id)_viewControllersForPendingSpineLocation:(long long)a0;
- (id)initWithTransitionStyle:(long long)a0 navigationOrientation:(long long)a1 options:(id)a2;
- (void)queuingScrollView:(id)a0 attemptToPageInDirection:(long long)a1;
- (void)queuingScrollView:(id)a0 didBailoutOfScrollAndRevealedView:(id)a1;
- (void)queuingScrollView:(id)a0 didCommitManualScroll:(BOOL)a1 toRevealView:(id)a2 concealView:(id)a3 direction:(long long)a4 animated:(BOOL)a5 canComplete:(BOOL)a6;
- (void)queuingScrollView:(id)a0 didEndManualScroll:(BOOL)a1 toRevealView:(id)a2 direction:(long long)a3 animated:(BOOL)a4 didFinish:(BOOL)a5 didComplete:(BOOL)a6;
- (void)queuingScrollView:(id)a0 didFlushView:(id)a1 animated:(BOOL)a2;
- (id)queuingScrollView:(id)a0 viewAfterView:(id)a1;
- (id)queuingScrollView:(id)a0 viewBeforeView:(id)a1;
- (void)queuingScrollView:(id)a0 willManuallyScroll:(BOOL)a1 toRevealView:(id)a2 concealView:(id)a3 animated:(BOOL)a4;
- (void)queuingScrollViewDidFinishScrolling:(id)a0;
- (BOOL)queuingScrollViewShouldLayoutSubviews:(id)a0;
- (void)setViewControllers:(id)a0 direction:(long long)a1 animated:(BOOL)a2 completion:(id /* block */)a3;
- (void)viewWillUnload;

@end
