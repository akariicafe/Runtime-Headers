@class UIColor, CAShapeLayer, UILabel, CALayer, _UIBatteryViewAXHUDImageCacheInfo;

@interface _UIBatteryView : UIView <_UIStatusBarView>

@property (readonly, nonatomic) CAShapeLayer *bodyShapeLayer;
@property (readonly, nonatomic) CAShapeLayer *pinShapeLayer;
@property (readonly, nonatomic) CAShapeLayer *boltMaskShapeLayer;
@property (readonly, nonatomic) CAShapeLayer *boltShapeLayer;
@property (readonly, nonatomic) CAShapeLayer *percentFillShapeLayer;
@property (retain, nonatomic) UILabel *percentageLabel;
@property (retain, nonatomic) _UIBatteryViewAXHUDImageCacheInfo *accessibilityHUDImageCacheInfo;
@property (retain, nonatomic) CALayer *bodyLayer;
@property (retain, nonatomic) CALayer *pinLayer;
@property (retain, nonatomic) CALayer *boltMaskLayer;
@property (retain, nonatomic) CALayer *boltLayer;
@property (retain, nonatomic) CALayer *fillLayer;
@property (retain, nonatomic) CALayer *percentFillLayer;
@property (nonatomic) long long internalSizeCategory;
@property (nonatomic) BOOL rounded;
@property (nonatomic) BOOL showsPercentage;
@property (nonatomic) double bodyColorAlpha;
@property (nonatomic) double pinColorAlpha;
@property (copy, nonatomic) UIColor *inactiveColor;
@property (readonly, nonatomic) BOOL hasValidIconSize;
@property (nonatomic) long long sizeCategory;
@property (nonatomic) double chargePercent;
@property (nonatomic) long long chargingState;
@property (nonatomic) BOOL saverModeActive;
@property (nonatomic) long long lowBatteryMode;
@property (nonatomic) double lowBatteryChargePercentThreshold;
@property (readonly, nonatomic, getter=isLowBattery) BOOL lowBattery;
@property (nonatomic) BOOL showsInlineChargingIndicator;
@property (copy, nonatomic) UIColor *fillColor;
@property (copy, nonatomic) UIColor *bodyColor;
@property (copy, nonatomic) UIColor *pinColor;
@property (copy, nonatomic) UIColor *boltColor;
@property (nonatomic) long long iconSize;

+ (struct CGSize { double x0; double x1; })_batterySizeForIconSize:(long long)a0;
+ (id)_boltBezierPathForSize:(struct CGSize { double x0; double x1; })a0;
+ (double)_outsideCornerRadiusForIconSize:(long long)a0;
+ (id)_pinBezierPathForSize:(struct CGSize { double x0; double x1; })a0 isComplex:(BOOL)a1;
+ (double)_insideCornerRadiusForIconSize:(long long)a0;
+ (double)_lineWidthAndInterspaceForIconSize:(long long)a0;
+ (struct CGSize { double x0; double x1; })_pinSizeForIconSize:(long long)a0;
+ (id)_boltMaskBezierPath;

- (void)__resetBoltLayers;
- (double)_percentageFontCondensedWhenChargingForIconSize:(long long)a0;
- (double)_percentageFontSizeForTraitCollection:(id)a0;
- (double)_outsideCornerRadiusForTraitCollection:(id)a0;
- (void)_notifyDidFinishAnimatingBoltToVisible:(BOOL)a0;
- (BOOL)_shouldShowBolt;
- (double)_insideCornerRadiusForTraitCollection:(id)a0;
- (double)_percentageFontSizeForIconSize:(long long)a0;
- (double)_percentTextXAdjustmentWhenFullForTraitCollection:(id)a0;
- (void)_updateLightningBoltAndPercentagePosition;
- (double)_percentTextVerticalAdjustmentForIconSize:(long long)a0;
- (void)_notifyWillBeginAnimatingBoltToVisible:(BOOL)a0;
- (id)accessibilityHUDRepresentation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_updateBodyLayers;
- (void)_willBeginAnimatingBoltToVisible:(BOOL)a0;
- (void)setRounded:(BOOL)a0 iconSize:(long long)a1;
- (void)_updateFillColor;
- (double)_percentageBatteryBoltScaleFactorMultiplier;
- (double)_batteryBoltLargeScaleFactor;
- (id)_batteryUnfilledColor;
- (double)_percentTextXAdjustmentWhenFullForIconSize:(long long)a0;
- (void)_updateTransform;
- (void)_updateBodyColors;
- (void)_updatePercentageFont;
- (void)_didFinishAnimatingBoltToVisible:(BOOL)a0;
- (BOOL)_batteryTextIsCutout;
- (double)_batteryBoltSmallScaleFactor;
- (double)_percentTextVerticalAdjustmentForTraitCollection:(id)a0;
- (void)_updateBolt;
- (void)_createBodyLayers;
- (double)_batteryBoltPositionOffsetForTraitCollection:(id)a0;
- (void)_updateBatteryFillColor;
- (void)_updateFillLayer;
- (void)_createFillLayer;
- (void)__updateFillLayer;
- (void)_unflipBoltIfNecessary;
- (void)_fillLayerFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0 cornerRadius:(double *)a1;
- (void)_updateForObservedTraitChange;
- (id)_batteryTextColor;
- (void)_updatePercentage;
- (id)_batteryFillColor;
- (id)initWithSizeCategory:(long long)a0;
- (struct CGSize { double x0; double x1; })_batterySizeForTraitCollection:(id)a0;
- (void)_createBoltLayersWithSize:(struct CGSize { double x0; double x1; })a0;
- (double)_lineWidthAndInterspaceForTraitCollection:(id)a0;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (BOOL)_percentageFontCondensedWhenChargingForTraitCollection:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_bodyRectForTraitCollection:(id)a0;
- (struct { double x0; double x1; })_baselineOffsetsAtSize:(struct CGSize { double x0; double x1; })a0;
- (struct CGSize { double x0; double x1; })_pinSizeForTraitCollection:(id)a0;
- (void).cxx_destruct;
- (double)_batteryBoltScaleFactorMultiplier;
- (void)layoutSubviews;
- (id)initWithCoder:(id)a0;
- (void)_commonInit;

@end
