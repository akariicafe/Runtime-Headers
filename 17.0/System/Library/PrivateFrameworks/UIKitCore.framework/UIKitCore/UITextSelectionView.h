@class UITextInteractionAssistant, NSArray, UITextSelection, UIView, CAKeyframeAnimation, UITextRangeView;

@interface UITextSelectionView : UIView {
    UITextSelection *m_selection;
    UITextRangeView *m_rangeView;
    BOOL m_caretShowingNow;
    BOOL m_caretAnimating;
    BOOL m_ghostApperarance;
    BOOL m_caretVisible;
    BOOL m_activated;
    BOOL m_wasShowingCommands;
    BOOL m_delayShowingCommands;
    BOOL m_dictationReplacementsMode;
    BOOL m_shouldEmphasizeNextSelectionRects;
    int m_showingCommandsCounter;
    BOOL m_deferSelectionCommands;
    struct __CFRunLoopObserver { } *m_observer;
    BOOL m_activeCaret;
    BOOL m_isSuspended;
    int m_showingCommandsCounterForRotate;
    unsigned long long _activeGrabberSuppressionAssertions;
    CAKeyframeAnimation *_caretBlinkAnimation;
    id _floatingCaretBlinkAssertion;
    unsigned long long _viewDidCommitNotification;
    unsigned long long _viewDidStopNotification;
    id /* block */ _hideSelectionCommandsWorkItem;
}

@property (readonly, nonatomic) UIView *caretView;
@property (readonly, nonatomic) UIView *floatingCaretView;
@property (readonly, nonatomic) UITextRangeView *rangeView;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } stashedCaretRect;
@property (nonatomic) BOOL isIndirectFloatingCaret;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } previousGhostCaretRect;
@property (readonly, weak, nonatomic) UITextInteractionAssistant *interactionAssistant;
@property (readonly, nonatomic) UITextSelection *selection;
@property (nonatomic) BOOL caretBlinks;
@property (nonatomic) BOOL visible;
@property (nonatomic) BOOL forceRangeView;
@property (readonly, nonatomic) BOOL selectionCommandsShowing;
@property (retain, nonatomic) NSArray *replacements;
@property (readonly, nonatomic) BOOL isInstalledInSelectionContainerView;
@property (nonatomic) BOOL caretVisible;
@property (nonatomic) BOOL ghostAppearance;
@property (nonatomic) BOOL activeFlattened;
@property (nonatomic) BOOL alertFlattened;
@property (nonatomic) BOOL sheetFlattened;
@property (nonatomic) BOOL popoverFlattened;
@property (nonatomic) BOOL navigationTransitionFlattened;
@property (nonatomic) int applicationDeactivationReason;

- (void)showSelectionCommands;
- (void)clearRangeAnimated:(BOOL)a0;
- (BOOL)affectedByScrollerNotification:(id)a0;
- (id)dynamicCaretList;
- (void)inputViewDidChange;
- (void)updateSelectionWithDocumentPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)prepareForMagnification;
- (void)didSuspend:(id)a0;
- (void)_showCommandsWithReplacements:(id)a0 forDictation:(BOOL)a1 afterDelay:(double)a2;
- (void)selectionChanged;
- (void)scaleDidChange:(id)a0;
- (void)endFloatingCursor;
- (void)mustFlattenForResignActive:(id)a0;
- (void)willResume:(id)a0;
- (void)willMoveToWindow:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })clippedTargetRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })selectionBoundingBox;
- (void)dealloc;
- (void)setEmphasisOnNextSelectionRects;
- (void)inputViewDidMove;
- (void)configureForPencilDeletionPreviewMode;
- (struct CGPoint { double x0; double x1; })floatingCursorPositionForPoint:(struct CGPoint { double x0; double x1; })a0 lineSnapping:(BOOL)a1;
- (void)beginFloatingCursorAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)mustFlattenForAlert:(id)a0;
- (void)hideSelectionCommands;
- (void)animateExpanderOn:(id)a0;
- (id)_customSelectionContainerView;
- (void)layoutChangedByScrolling:(BOOL)a0;
- (void)configureForHighlightMode;
- (void)detach;
- (void)inputViewWillMove:(id)a0;
- (BOOL)_viewUsesAsynchronousProtocol;
- (void)tintColorDidChange;
- (void)updateFloatingCursorAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)_shouldUseIndirectFloatingCaret;
- (void)showSelectionCommandsAfterDelay:(double)a0;
- (void)appearOrFadeIfNecessary;
- (void)deactivateAndCollapseSelection:(BOOL)a0;
- (void)saveDeactivationReason:(id)a0;
- (BOOL)_editMenuIsVisible;
- (void)removeFromSuperview;
- (void)selectionWillTranslateForReachability:(id)a0;
- (void)willMoveToSuperview;
- (void)didMoveToSuperview;
- (void)cancelDelayedCommandRequests;
- (void)mustFlattenForNavigationTransition:(id)a0;
- (void)invalidate;
- (void)mustFlattenForPopover:(id)a0;
- (void)willRotate:(id)a0;
- (BOOL)point:(struct CGPoint { double x0; double x1; })a0 isNearCursorRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)configureForPencilHighlightMode;
- (struct CGPoint { double x0; double x1; })floatingCursorPositionForPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)animateCaret:(id)a0 toPosition:(struct CGPoint { double x0; double x1; })a1 withSize:(struct CGSize { double x0; double x1; })a2;
- (void)canExpandAfterBecomeActive:(id)a0;
- (void)activate;
- (void)_showSelectionCommandsForContextMenu:(BOOL)a0;
- (id)scrollView;
- (void)updateFloatingCursorAtPoint:(struct CGPoint { double x0; double x1; })a0 animated:(BOOL)a1;
- (void)installIfNecessary;
- (void)willBeginFloatingCursor:(BOOL)a0;
- (void)showReplacementsWithGenerator:(id)a0 forDictation:(BOOL)a1 afterDelay:(double)a2;
- (void)doneMagnifying;
- (void)updateDocumentHasContent:(BOOL)a0;
- (BOOL)shouldSuppressSelectionHandles;
- (id)caretViewColor;
- (void)selectionWillScroll:(id)a0;
- (void)_presentEditMenuWithPreferredDirection:(long long)a0 replacements:(id)a1;
- (id)_editMenuSourceWindow;
- (void)showCalloutBarAfterDelay:(double)a0;
- (void)updateBaseIsStartWithDocumentPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)deferredUpdateSelectionRects;
- (void)selectionDidScroll:(id)a0;
- (void)viewAnimate:(id)a0;
- (void)showCommandsWithReplacements:(id)a0;
- (void)hideCaret:(int)a0;
- (void)releaseGrabberHandleSuppressionAssertion:(id)a0;
- (BOOL)isValid;
- (void)windowDidResignOrBecomeKey;
- (void)inputModeDidChange:(id)a0;
- (void)validateWithInteractionAssistant:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })selectionBoundingBoxForRects:(id)a0;
- (void)clearCaret;
- (id)_actingParentViewForGestureRecognizers;
- (void).cxx_destruct;
- (void)beginFloatingCaretView;
- (void)animateBoxShrinkOn:(id)a0;
- (id)menuInteraction;
- (void)updateSelectionRectsIfNeeded;
- (BOOL)activeCaret;
- (void)animatePulsingDirectCaret:(id)a0;
- (void)showCaret:(int)a0;
- (void)calculateReplacementsWithGenerator:(id)a0 andShowAfterDelay:(double)a1;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (void)textSelectionViewActivated:(id)a0;
- (void)deferredUpdateSelectionCommands;
- (void)updateSelectionDots;
- (void)scaleWillChange:(id)a0;
- (void)canExpandAfterNavigationTransition:(id)a0;
- (id)ghostCaretViewColor;
- (void)mustFlattenForSheet:(id)a0;
- (void)addCaretToSubview;
- (void)animatePulsingIndirectCaret:(id)a0;
- (id)dynamicCaret;
- (void)canExpandAfterSheet:(id)a0;
- (id)initWithInteractionAssistant:(id)a0;
- (void)_setCaretBlinkAnimationEnabled:(BOOL)a0;
- (void)canExpandAfterAlert:(id)a0;
- (void)configureForSelectionMode;
- (void)_showCaret:(int)a0;
- (void)didRotate:(id)a0;
- (void)configureForReplacementMode;
- (BOOL)shouldBeVisible;
- (void)_registerForViewAnimationNotificationsIfNecessary;
- (void)inputViewWillAnimate;
- (void)endFloatingCaretView;
- (void)showInitialCaret;
- (void)canExpandAfterPopover:(id)a0;
- (void)updateSelectionRects;
- (BOOL)_updateEditMenuPositionForPreferredArrowDirection:(long long)a0 replacements:(id)a1;
- (BOOL)_activeAndVisible;
- (void)deactivate;
- (void)inputViewDidAnimate;
- (void)selectionDidTranslateForReachability:(id)a0;
- (void)updateRangeViewForSelectionMode;
- (void)_showCommandsWithReplacements:(id)a0 isForContextMenu:(BOOL)a1 forDictation:(BOOL)a2 arrowDirection:(long long)a3;
- (id)floatingCaretViewColor;
- (void)_updateViewAnimateNotificationObservationIfNecessary;
- (void)inputViewWillChange;
- (void)_unregisterForViewAnimationNotificationsIfNecessary;
- (void)hideSelectionCommandsAfterDelay:(double)a0 reason:(long long)a1;
- (void)_hideCaret:(int)a0;
- (void)updateSelectionCommands;
- (void)_hideSelectionCommandsWithReason:(long long)a0;
- (id)obtainGrabberSuppressionAssertion;

@end
