@class TNPrintProperties, TNSheet, NSArray, TNPageCoordinateDictionary, TSUPointerKeyDictionary, NSObject, TNAnnotationPrintingHelper, NSMapTable, TNDocumentRoot;
@protocol TNPageControllerDelegate, TNPrintableInfoProviding;

@interface TNPageController : NSObject <TNAnnotationPrintingHelperDataSource>

@property (class, readonly, copy, nonatomic) NSMapTable *cachedAutoFitContentScaleDictionary;

@property (retain, nonatomic) TNPageCoordinateDictionary *pageLayoutCache;
@property (retain, nonatomic) TSUPointerKeyDictionary *hintCacheDictionary;
@property (retain, nonatomic) TSUPointerKeyDictionary *infoProviderPageCountCache;
@property (retain, nonatomic) TNPageCoordinateDictionary *headerLayerCache;
@property (retain, nonatomic) TNPageCoordinateDictionary *footerLayerCache;
@property (readonly, nonatomic) NSMapTable *addendumContentCache;
@property (nonatomic) long long cachedPageCountDuringDynamicContentScaleChange;
@property (readonly, nonatomic) TNAnnotationPrintingHelper *annotationPrintingHelper;
@property (nonatomic) long long priorPageCount;
@property (nonatomic) long long subsequentPageCount;
@property (nonatomic) BOOL pageCountsValid;
@property (nonatomic) BOOL computingPageCounts;
@property (nonatomic) struct TSUCellCoord { unsigned int row; unsigned short column; BOOL _preserveRow; BOOL _preserveColumn; } maxPageCoordinate;
@property (nonatomic) BOOL maxPageCoordinateValid;
@property (retain, nonatomic) TNPrintProperties *printProperties;
@property (nonatomic, getter=isProcessingChanges) BOOL processingChanges;
@property (nonatomic) BOOL updateViewScaleForDrawablesChangeAfterProcessingChanges;
@property (nonatomic) BOOL postAutoFitContentScaleDidChangeNotificationAfterProcessingChanges;
@property (nonatomic) BOOL postAdditionalContentChangedNotificationAfterProcessingChanges;
@property (readonly, nonatomic) BOOL inDynamicContentScaleChange;
@property (weak, nonatomic) TNDocumentRoot *documentRoot;
@property (weak, nonatomic) NSObject<TNPageControllerDelegate> *delegate;
@property (readonly, nonatomic, getter=isInteractive) BOOL interactive;
@property (readonly, nonatomic) TNSheet *sheet;
@property (weak, nonatomic) NSObject<TNPrintableInfoProviding> *infoProvider;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } pageSize;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } contentFrame;
@property (readonly, nonatomic, getter=isPortrait) BOOL portrait;
@property (readonly, nonatomic) unsigned long long numPages;
@property (readonly, nonatomic) double contentScale;
@property (nonatomic) double userViewScale;
@property (nonatomic) double headerTextHeight;
@property (nonatomic) double footerTextHeight;
@property (readonly, nonatomic) NSArray *additionalContentProviders;

+ (double)autoFitContentScaleForInfoProvider:(id)a0;
+ (double)p_unclampedAutoFitContentScaleForInfoProvider:(id)a0;

- (unsigned long long)pageCount;
- (void)dealloc;
- (void).cxx_destruct;
- (id)initWithDocumentRoot:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })printingLayoutRectForPageIndex:(unsigned long long)a0;
- (void)updateViewScale;
- (id)_createPageLayoutForCoordinate:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a0;
- (id)_printableInfos;
- (struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })pageCoordinateForMaxVisiblePage;
- (BOOL)_hasAddendumContent;
- (BOOL)_isPageAddendumAtPageCoordinate:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a0;
- (BOOL)_isPageAddendumAtPageIndex:(unsigned long long)a0;
- (id)_layoutsForPageIndex:(unsigned long long)a0;
- (void)_measureHeadersAndFootersIfNecessary;
- (struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })_pageCoordinateWithPageSize:(struct CGSize { double x0; double x1; })a0 forPoint:(struct CGPoint { double x0; double x1; })a1;
- (unsigned long long)_pageIndexForPageCoordinate:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a0;
- (void)_postAdditionalContentChangedNotification;
- (void)_resetAnnotationPrintingHelper;
- (BOOL)_shouldPrintComments;
- (void)_updateCanvasViewScale;
- (id)addendumPageTitleOfAnnotationPrintingHelper:(id)a0;
- (id)additionalContentProviderAtPageIndex:(unsigned long long)a0 outPageIndexInProvider:(out unsigned long long *)a1;
- (void)annotationPrintingHelper:(id)a0 enumerateLayoutsByPageWithBlock:(id /* block */)a1;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })annotationPrintingHelper:(id)a0 inversePureTransformInRootForContentAtPageIndex:(unsigned long long)a1;
- (id)annotationPrintingHelper:(id)a0 layoutsForPageIndex:(unsigned long long)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })availableRectForAddendumContentOfAnnotationPrintingHelper:(id)a0;
- (void)canvasViewScaleDidChange:(double)a0;
- (double)contentScaleOfAnnotationPrintingHelper:(id)a0;
- (struct CGSize { double x0; double x1; })contentSizeForCanvasLayer;
- (void)didEnterPrintPreview;
- (void)didExitPrintPreview;
- (void)drawAdditionalContentForPageIndex:(unsigned long long)a0 inContext:(struct CGContext { } *)a1;
- (void)enumerateAnnotationPagesWithBlock:(id /* block */)a0;
- (void)enumerateLayoutsByPageWithBlock:(id /* block */)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })firstPartitionFrameForInfo:(id)a0 outStartPageCoordinate:(out struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } *)a1;
- (void)i_addChildLayer:(id)a0 atAddendumPageCoordinate:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a1;
- (id)i_childLayersAtAddendumPageCoordinate:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a0;
- (void)i_invalidateForHeaderChange;
- (void)i_invalidateHintCache;
- (void)i_invalidatePageLayoutCache;
- (id)i_layerForHeaderType:(long long)a0 fragment:(long long)a1 atPageCoordinate:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a2;
- (void)i_setLayer:(id)a0 forHeaderType:(long long)a1 fragment:(long long)a2 atPageCoordinate:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a3;
- (void)invalidateCachedAutoFitContentScaleForInfoProvider:(id)a0;
- (void)invalidateDrawableLayouts;
- (void)invalidatePageLayout;
- (void)invalidatePageLayoutGeometries;
- (BOOL)isPagePlaceholderAtPageCoordinate:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a0;
- (void)layoutInPageRange:(struct { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; })a0 forLayoutController:(id)a1;
- (void)layoutPrintableInfosIntoPageLayout:(id)a0 atPageCoordinate:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a1;
- (unsigned long long)numPagesForAddenda;
- (unsigned long long)numPagesForContent;
- (void)p_clearHintCache;
- (void)p_computePriorPageCountForCurrentSheet;
- (void)p_computeSubsequentPageCountForCurrentSheet;
- (void)p_didEndDynamicContentScaleChange:(id)a0;
- (BOOL)p_headersOrFootersContainPageNumberRelatedAttachments;
- (id)p_hintCacheForInfo:(id)a0;
- (void)p_invalidateCachedAutoFitContentScaleForInfoProvider:(id)a0 notify:(BOOL)a1;
- (void)p_invalidatePageCounts;
- (id)p_layoutForInfo:(id)a0 atCoordinate:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a1 parentLayout:(id)a2;
- (void)p_layoutInfo:(id)a0 intoPageLayout:(id)a1 atPageCoordinate:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a2;
- (void)p_measureHeadersAndFooters;
- (struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })p_pageCoordinateForPageLayoutAtDevicePoint:(struct CGPoint { double x0; double x1; })a0;
- (long long)p_pageCountForInfoProvider:(id)a0;
- (id)p_pageInfoForPageAtIndex:(unsigned long long)a0;
- (id)p_pageLayoutAtCoordinate:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a0;
- (id)p_pageLayoutAtCoordinate:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a0 shouldCachePageLayout:(BOOL)a1;
- (void)p_postAutoFitContentScaleDidChangeNotification;
- (long long)p_priorPageCount;
- (long long)p_updateCachedPageCountForCurrentInfoProvider;
- (void)p_updateVisiblePageRange:(struct { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; })a0 forLayoutController:(id)a1;
- (void)p_willBeginDynamicContentScaleChange:(id)a0;
- (struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })pageCoordinateForDrawableAtUnscaledPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })pageCoordinateForPageIndex:(unsigned long long)a0;
- (struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })pageCoordinateForPageLayoutAtUnscaledPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)pageInfoForPageIndex:(unsigned long long)a0;
- (id)pageLayoutGeometryForPageCoordinate:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a0;
- (id)pageLayoutGeometryForPrintingAtPageCoordinate:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a0;
- (unsigned long long)pageNumberForPageCoordinate:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a0;
- (struct { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; })pageRangeForContent;
- (struct { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; })pageRangeForContentAndAddendaWithUpperBound:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a0;
- (struct { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; })pageRangeForContentWithUpperBound:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a0;
- (struct { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; })pageRangeForInfo:(id)a0 upperBound:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a1;
- (struct { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; })pageRangeForPageIndex:(unsigned long long)a0;
- (struct { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; })pageRangeWithPlaceholdersWithUpperBound:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a0;
- (struct CGSize { double x0; double x1; })pageSizeWithGutter;
- (double)printViewDefaultUserViewScale;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForAddendumContentOfAnnotationPrintingHelper:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForFlagContentOfAnnotationPrintingHelper:(id)a0;
- (void)registerPageLayout:(id)a0 atPageCoordinate:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a1;
- (void)removeLayoutsFromPages;
- (BOOL)shouldPrintCommentsOfAnnotationPrintingHelper:(id)a0;
- (BOOL)shouldSuppressBackgroundsForPageIndex:(unsigned long long)a0;
- (void)updateContentScale;
- (void)updatePrintMargins;
- (void)updateUserViewScale;
- (double)userViewScaleForCanvasViewScale:(double)a0;

@end
