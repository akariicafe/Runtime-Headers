@class NSString, TSTTableInfo, TSCECalculationEngine, TSTGroupBy, TSCECategoryRef, TSKDocumentRoot, TSTUIDRectRef, TSTReferenceColorHelper, TSKChangeNotifier;

@interface TSTReferenceNode : TSTExpressionNode <NSCopying> {
    NSString *_refString;
    NSString *_formulaPlainText;
}

@property (readonly, nonatomic) TSKDocumentRoot *documentRoot;
@property (readonly, nonatomic) TSKChangeNotifier *changeNotifier;
@property (nonatomic) BOOL hasCachedIsValidReference;
@property (nonatomic) BOOL cachedIsValidReference;
@property (readonly, weak, nonatomic) TSCECalculationEngine *calcEngine;
@property (readonly, nonatomic) TSTUIDRectRef *uidRectRef;
@property (readonly, nonatomic) struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } tableUID;
@property (nonatomic) struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } hostTableUID;
@property (nonatomic) struct TSCECellRef { struct TSUCellCoord { unsigned int row; unsigned short column; BOOL _preserveRow; BOOL _preserveColumn; } coordinate; struct TSKUIDStruct { unsigned long long _lower; unsigned long long _upper; } _tableUID; } hostCellRef;
@property (readonly, nonatomic) TSTTableInfo *tableInfo;
@property (readonly, nonatomic) TSTGroupBy *groupBy;
@property (readonly) struct TSUViewCellCoord { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; } viewTopLeftCoord;
@property (readonly) struct TSUViewCellCoord { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; } viewBottomRightCoord;
@property (readonly) struct TSUModelCellCoord { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; } baseTopLeftCoord;
@property (readonly) struct TSUModelCellCoord { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; } baseBottomRightCoord;
@property (readonly) struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } viewBoundingBox;
@property (readonly) struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } baseBoundingBox;
@property (nonatomic) unsigned char basePreserveFlags;
@property (nonatomic) unsigned char viewPreserveFlags;
@property (nonatomic) unsigned char rangeContext;
@property (readonly, nonatomic) BOOL isNonSpanningRangeExpression;
@property (readonly, nonatomic) BOOL isRangeExpression;
@property (readonly, nonatomic) BOOL isLocalReference;
@property (nonatomic, getter=isRangeWithFunction) BOOL rangeWithFunction;
@property (nonatomic) BOOL isBlankForKeyboardInsertion;
@property (readonly, nonatomic) BOOL suppressAutomaticNamedReferenceInvalidation;
@property (readonly, nonatomic) BOOL spansAllColumns;
@property (readonly, nonatomic) BOOL spansAllRows;
@property (readonly, nonatomic) BOOL isSingleColumnSpanningReference;
@property (readonly, nonatomic) BOOL isSingleRowSpanningReference;
@property (readonly, nonatomic) BOOL isCategoryRef;
@property (readonly, nonatomic) BOOL isCategorySummaryRef;
@property (readonly, nonatomic) BOOL isSpanningCategorySummaryRef;
@property (retain, nonatomic) TSCECategoryRef *categoryRef;
@property (readonly, nonatomic) struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } categoryRefTableUID;
@property (readonly, nonatomic) BOOL suppressReferenceOptionsMenu;
@property (readonly, nonatomic) BOOL isResizable;
@property (retain, nonatomic) TSTReferenceColorHelper *referenceColorHelper;

+ (struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; })p_cellRangeForSingleCategoryRefInViewRangeRef:(const void *)a0 inTable:(id)a1 rangeContext:(unsigned char)a2;
+ (struct RefTypeHolder<TSCERangeRef, 1> { struct TSCERangeRef { struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x0; })p_expandedViewRangeRefForViewRangeRef:(const void *)a0 forLabelRowsInTable:(id)a1;
+ (BOOL)p_rangeRef:(const struct TSCERangeRef { struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a0 isContainedWithinSummaryAndLabelRowsInTable:(id)a1;
+ (id)p_singleCategoryRefForViewRangeRef:(const void *)a0 rangeContext:(unsigned char)a1 calculationEngine:(id)a2 hostCellRef:(const struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a3;
+ (id)p_spanningCategoryRefForViewRangeRef:(const void *)a0 groupByUid:(struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; })a1 categoryLevel:(unsigned char)a2 calculationEngine:(id)a3;
+ (unsigned char)preserveFlagsForReference:(const struct TSCERangeRef { struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a0 calcEngine:(id)a1;

- (unsigned long long)hash;
- (void)dealloc;
- (void)invalidate;
- (id).cxx_construct;
- (id)string;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (int)tokenType;
- (void)saveToArchiver:(id)a0;
- (void)loadFromArchive:(const void *)a0 unarchiver:(id)a1;
- (void)loadFromUnarchiver:(id)a0;
- (void)saveToArchive:(void *)a0 archiver:(id)a1;
- (void)processChanges:(id)a0 forChangeSource:(id)a1;
- (id)viewTractRef;
- (id)baseTractRef;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray { char *x0; unsigned long long x1; unsigned long long x2; BOOL x3; } *)a0 hostCell:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a1 symbolTable:(void *)a2;
- (void)excludeSummaryAndLabelRows;
- (id)exportString;
- (id)formulaPlainText;
- (id)initAsCopyOf:(id)a0 intoContext:(id)a1 children:(id)a2;
- (id)initWithContext:(id)a0 calculationEngine:(id)a1 baseRangeRef:(const void *)a2 preserveFlags:(unsigned char)a3 hostCellRef:(const struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a4 referenceColorHelper:(id)a5 suppressAutomaticNamedReferenceInvalidation:(BOOL)a6;
- (id)initWithContext:(id)a0 calculationEngine:(id)a1 categoryRef:(id)a2 hostCellRef:(const struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a3 referenceColorHelper:(id)a4;
- (id)initWithContext:(id)a0 calculationEngine:(id)a1 chromeRangeRef:(const void *)a2 preserveFlags:(unsigned char)a3 hostCellRef:(const void *)a4 referenceColorHelper:(id)a5 suppressAutomaticNamedReferenceInvalidation:(BOOL)a6;
- (id)initWithContext:(id)a0 calculationEngine:(id)a1 uidRectRef:(id)a2 categoryRef:(id)a3 hostCellRef:(const struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a4 referenceColorHelper:(id)a5 suppressAutomaticNamedReferenceInvalidation:(BOOL)a6;
- (id)initWithContext:(id)a0 calculationEngine:(id)a1 uidRectRef:(id)a2 hostCellRef:(const struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a3 referenceColorHelper:(id)a4 suppressAutomaticNamedReferenceInvalidation:(BOOL)a5;
- (id)initWithContext:(id)a0 calculationEngine:(id)a1 viewRangeRef:(const void *)a2 preserveFlags:(unsigned char)a3 hostCellRef:(const void *)a4 referenceColorHelper:(id)a5 suppressAutomaticNamedReferenceInvalidation:(BOOL)a6;
- (id)initWithReferenceStart:(id)a0 referenceEnd:(id)a1 suppressAutomaticNamedReferenceInvalidation:(BOOL)a2;
- (void)insertFormulaText:(id)a0 includeWhitespace:(BOOL)a1;
- (BOOL)isEqualToExpressionNode:(id)a0;
- (BOOL)isValidReference;
- (struct RefTypeHolder<TSCERangeRef, 1> { struct TSCERangeRef { struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x0; })p_boundingViewRangeRef;
- (void)p_buildASTNodeArray:(struct TSCEASTNodeArray { char *x0; unsigned long long x1; unsigned long long x2; BOOL x3; } *)a0 forCoord:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a1 preserveFlags:(unsigned char)a2 hostCell:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a3;
- (id)p_categoryRefViewTractRef;
- (id)p_convertCategoryRefToRelativeForHostCell:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a0;
- (void)p_resetMenu;
- (id)p_subregionForRange:(id)a0 rangeContext:(unsigned char)a1;
- (struct TSTCSENodeData { unsigned long long x0; unsigned long long x1; })recordHashesForSubexpressions:(id)a0;
- (id)referenceAsStringWithContext:(id)a0;
- (void)setBaseRangeRef:(const void *)a0 preserveFlags:(unsigned char)a1;
- (void)setChromeRangeRef:(const void *)a0 preserveFlags:(unsigned char)a1;
- (void)setViewRangeRef:(const void *)a0 preserveFlags:(unsigned char)a1;
- (id)subregionForRange:(id)a0;
- (id)subregionForReference:(id)a0 range:(id)a1;
- (struct RefTypeHolder<TSCERangeRef, 1> { struct TSCERangeRef { struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x0; })viewRangeRefDeprecated;

@end
