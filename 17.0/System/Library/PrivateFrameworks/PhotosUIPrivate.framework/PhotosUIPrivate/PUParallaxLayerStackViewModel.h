@class PUParallaxLayerStackViewManager, NSString, PFWallpaperCompoundDeviceConfiguration, PFWallpaperCompoundLayerStack, PXUpdater, PFParallaxLayerStack, NSDictionary, PFPosterOrientedLayout, PIParallaxStyle;
@protocol PISegmentationItem;

@interface PUParallaxLayerStackViewModel : PXObservable <PUParallaxLayerStackMutableViewModel, NSCopying>

@property (readonly, nonatomic) PXUpdater *updater;
@property (retain, nonatomic) PFParallaxLayerStack *portraitLayerStack;
@property (retain, nonatomic) PFParallaxLayerStack *landscapeLayerStack;
@property (nonatomic) long long orientation;
@property (nonatomic) unsigned long long currentLayerStackPropertiesChange;
@property (nonatomic) unsigned long long stylePropertiesChange;
@property (retain, nonatomic) id<PISegmentationItem> segmentationItem;
@property (retain, nonatomic) PFWallpaperCompoundDeviceConfiguration *layoutConfiguration;
@property (retain, nonatomic) NSString *clockLayerOrder;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } currentNormalizedVisibleFrame;
@property (nonatomic) BOOL clockAppearsAboveForeground;
@property (nonatomic) BOOL didSetContainerFrame;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } portraitVisibleFrame;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } landscapeVisibleFrame;
@property (nonatomic) BOOL needsToAdjustVisibleFrame;
@property (nonatomic) BOOL visibleFrameCrossesHeadroomBoundary;
@property (retain, nonatomic) PFPosterOrientedLayout *initialPortraitLayout;
@property (copy, nonatomic) NSDictionary *debugHUDRepresentation;
@property (readonly, nonatomic) PFPosterOrientedLayout *currentLayout;
@property (readonly, nonatomic) PFWallpaperCompoundLayerStack *compoundLayerStack;
@property (readonly, nonatomic) long long environment;
@property (readonly, nonatomic) PUParallaxLayerStackViewManager *viewManager;
@property (readonly, nonatomic) PFParallaxLayerStack *currentLayerStack;
@property (readonly, nonatomic) long long deviceOrientation;
@property (readonly, nonatomic) long long layoutOrder;
@property (readonly, nonatomic) PIParallaxStyle *style;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } imageSize;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } extendedImageRect;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } settlingEffectBounds;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } contentRect;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } containerFrame;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } visibleFrame;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } inactiveFrame;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } normalizedVisibleFrame;
@property (readonly, nonatomic) unsigned long long clockIntersection;
@property (readonly, nonatomic) BOOL depthEnabled;
@property (readonly, nonatomic) BOOL appliesDepthToAllOrientations;
@property (readonly, nonatomic) BOOL settlingEffectEnabled;
@property (readonly, nonatomic) BOOL parallaxDisabled;
@property (readonly, nonatomic) BOOL canApplyParallax;
@property (readonly, nonatomic) BOOL hasEnoughRoomForParallax;
@property (readonly, nonatomic) struct CGPoint { double x; double y; } parallaxVector;
@property (readonly, nonatomic) double headroomVisibilityAmount;
@property (readonly, nonatomic) BOOL canEnableDepthEffect;
@property (readonly, nonatomic) BOOL canEnableSettlingEffect;
@property (readonly, nonatomic) BOOL canCreateSettlingEffectLayerView;
@property (readonly, nonatomic) BOOL hasMatte;
@property (readonly, nonatomic) long long backlightLuminance;
@property (readonly, nonatomic) double visibilityAmount;
@property (readonly, nonatomic) BOOL showsDebugHUD;
@property (readonly, nonatomic) BOOL mainLayersArePruned;
@property (readonly, nonatomic) BOOL shouldLoopSettlingEffectForGallery;
@property (nonatomic) double desiredHeadroomVisibilityAmount;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (unsigned long long)_changeDescriptorBetweenOldStyle:(id)a0 newStyle:(id)a1;

- (void)performChanges:(id /* block */)a0;
- (id)init;
- (void)didPerformChanges;
- (void)setDepthEnabled:(BOOL)a0;
- (void)setDeviceOrientation:(long long)a0;
- (void)_setNeedsUpdate;
- (void)setVisibleFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setStyle:(id)a0;
- (void).cxx_destruct;
- (void)setCurrentLayout:(id)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)_updateOrientation;
- (void)setNormalizedVisibleFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setClockIntersection:(unsigned long long)a0;
- (void)setSettlingEffectEnabled:(BOOL)a0;
- (void)didEndChangeHandling;
- (void)_updateHeadroomVisibilityAmount;
- (void)_updateLayerStackPropertiesForAllOrientations:(id /* block */)a0 changeDescriptor:(unsigned long long)a1;
- (void)pruneMainLayers;
- (void)setLayoutOrder:(long long)a0;
- (void)_invalidateClockAppearsAboveForeground;
- (void)_invalidateCurrentLayerStack;
- (void)_invalidateCurrentLayout;
- (void)_invalidateCurrentNormalizedVisibleRect;
- (void)_invalidateDebugHUDRepresentation;
- (void)_invalidateDesiredHeadroomVisibilityAmount;
- (void)_invalidateHeadroomVisibilityAmount;
- (void)_invalidateInitialPortraitLayout;
- (void)_invalidateLayoutConfiguration;
- (void)_invalidateOrientation;
- (void)_invalidateVisibleFrameCrossesHeadroomBoundary;
- (void)_invalidateVisibleFrameWithContainerFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_layoutRectForViewRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_signalLayerStackPropertiesChange:(unsigned long long)a0;
- (void)_signalStylePropertiesChange:(unsigned long long)a0;
- (void)_updateClockAppearsAboveForeground;
- (void)_updateCurrentLayerStack;
- (void)_updateCurrentLayerStackProperties:(id /* block */)a0 changeDescriptor:(unsigned long long)a1;
- (void)_updateCurrentLayout;
- (void)_updateCurrentNormalizedVisibleRect;
- (void)_updateDebugHUDRepresentation;
- (void)_updateDesiredHeadroomVisibilityAmount;
- (void)_updateInitialPortraitLayout;
- (void)_updateLayoutConfiguration;
- (void)_updateVisibleFrameCrossesHeadroomBoundary;
- (void)_updateVisibleFrameWithContainerFrame;
- (void)_updateVisibleFrameWithContainerFrameSetFirstTime:(BOOL)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_viewRectForLayoutRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)initWithCompoundLayerStack:(id)a0 style:(id)a1;
- (id)initWithSegmentationItem:(id)a0 compoundLayerStack:(id)a1 style:(id)a2;
- (id)initWithSegmentationItem:(id)a0 initialStyle:(id)a1 compoundLayerStack:(id)a2;
- (BOOL)representsPureStyle;
- (void)setAppliesDepthToAllOrientations:(BOOL)a0;
- (void)setBacklightLuminance:(long long)a0;
- (void)setClockAreaLuminance:(double)a0;
- (void)setContainerFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setCurrentLayerStack:(id)a0;
- (void)setHeadroomVisibilityAmount:(double)a0;
- (void)setNormalizedVisibleFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 animated:(BOOL)a1;
- (void)setNormalizedVisibleFrameForInactiveOrientation:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setParallaxDisabled:(BOOL)a0;
- (void)setParallaxVector:(struct CGPoint { double x0; double x1; })a0;
- (void)setShouldLoopSettlingEffectForGallery:(BOOL)a0;
- (void)setShowsDebugHUD:(BOOL)a0;
- (void)setVisibilityAmount:(double)a0;
- (void)updateBackfillLayersFromLayerStack:(id)a0;
- (void)updateHeadroomLayerFromLayerStack:(id)a0;
- (void)updateLayerStack:(id)a0;
- (void)updateSettlingEffectWithSegmentationItem:(id)a0 layerStack:(id)a1;

@end
