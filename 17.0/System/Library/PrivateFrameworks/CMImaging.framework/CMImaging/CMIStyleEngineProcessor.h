@class CMIStyleEngineSolveLinearSystem, NSDictionary, CMIStyleEngineApplyStyle, FigMetalContext, CMIStyleEngineCreateSpotlights, NSString, CMIExternalMemoryResource, CMIStyleEngineConfiguration, NSArray, NSData, CMIStyleEngineCreateWeightPlanes, CMIStyleEngineCreateLinearSystem, CMIStyleEngineIntegrateCoefficients;
@protocol MTLTexture, MTLBuffer, MTLCommandQueue;

@interface CMIStyleEngineProcessor : NSObject <MetalImageBufferProcessor> {
    id<MTLTexture> _inputTexture;
    id<MTLTexture> _outputTexture;
    id<MTLTexture> _inputThumbnailTexture;
    id<MTLTexture> _targetThumbnailTexture;
    struct CGSize { double width; double height; } _imageSize;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _inputImageRect;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _outputImageRect;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _regionToRender;
    struct __CVMetalTextureCache { } *_textureCache;
    FigMetalContext *_metalContext;
    unsigned long long _memoryAllocationType;
    BOOL _performLearning;
    BOOL _performIntegration;
    BOOL _performApplication;
    BOOL _outputCoefficientsReady;
    unsigned int _weightPlaneCount;
    float _weightPlaneStandardDeviation;
    BOOL _doWeightPlaneColorSplit;
    float _weightPlaneColorSplitStrength;
    id<MTLTexture> _weightPlanesTexture;
    id<MTLBuffer> _weightPlanesNormalizationBuffer;
    id<MTLBuffer> _weightPlanesThresholdCalculationBuffer;
    CMIStyleEngineCreateWeightPlanes *_createWeightPlanes;
    void /* unknown type, empty encoding */ _spotlightCount;
    id<MTLTexture> _spotlightTopLeftTexture;
    id<MTLTexture> _spotlightTopEdgeTexture;
    id<MTLTexture> _spotlightTopRightTexture;
    id<MTLTexture> _spotlightLeftEdgeTexture;
    id<MTLTexture> _spotlightRightEdgeTexture;
    id<MTLTexture> _spotlightBottomLeftTexture;
    id<MTLTexture> _spotlightBottomEdgeTexture;
    id<MTLTexture> _spotlightBottomRightTexture;
    id<MTLTexture> _spotlightCentralTexture;
    CMIStyleEngineCreateSpotlights *_createSpotlights;
    BOOL _spotlightsCreated;
    float _extLambda;
    float _tikLambdaConstant;
    float _tikLambdaLinear;
    float _tikLambdaQuadratic;
    float _learningModulationStrength;
    float _learningModulationOffset;
    id<MTLBuffer> _polyExpandedInputBuffer;
    id<MTLBuffer> _pairExpandedWeightsBuffer;
    id<MTLTexture> _polyExpandedTargetTexture;
    NSArray *_lhs;
    NSArray *_lhsDiagSums;
    NSArray *_rhs;
    NSArray *_priorFactorForLHS;
    NSArray *_priorFactorForRHS;
    CMIStyleEngineCreateLinearSystem *_createLinearSystem;
    NSArray *_linSysSolution;
    NSArray *_linSysStatus;
    id<MTLBuffer> _linSysStatusFlagBuffer;
    CMIStyleEngineSolveLinearSystem *_solveLinearSystem;
    id<MTLBuffer> _coefficientsBuffer;
    id<MTLTexture> _integratedCoefficientsTexture;
    CMIStyleEngineIntegrateCoefficients *_integrateCoefficients;
    id<MTLTexture> _residualsTexture;
    CMIStyleEngineApplyStyle *_applyStyle;
}

@property (retain, nonatomic) id<MTLTexture> inputThumbnailTexture;
@property (nonatomic) struct __CVBuffer { } *inputThumbnailPixelBuffer;
@property (retain, nonatomic) id<MTLTexture> inputTexture;
@property (nonatomic) struct __CVBuffer { } *inputPixelBuffer;
@property (retain, nonatomic) id<MTLTexture> outputTexture;
@property (nonatomic) struct __CVBuffer { } *outputPixelBuffer;
@property (retain, nonatomic) id<MTLTexture> targetThumbnailTexture;
@property (nonatomic) struct __CVBuffer { } *targetThumbnailPixelBuffer;
@property (retain, nonatomic) id<MTLTexture> inputWeightPlaneTexture;
@property (retain, nonatomic) id<MTLTexture> inputLearningModulationMaskTexture;
@property (retain, nonatomic) NSData *inputLinearSystemCoefficients;
@property (readonly, nonatomic) NSData *outputLinearSystemCoefficients;
@property (readonly, nonatomic) id<MTLTexture> outputIntegratedCoefficients;
@property (readonly, nonatomic) id<MTLBuffer> outputLinearSystemStatusFlag;
@property (retain, nonatomic) CMIStyleEngineConfiguration *configuration;
@property (nonatomic) struct CGSize { double width; double height; } imageSize;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } inputImageRect;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } outputImageRect;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } regionToRender;
@property (retain, nonatomic) id<MTLCommandQueue> metalCommandQueue;
@property (readonly, nonatomic) BOOL supportsExternalMemoryResource;
@property (retain, nonatomic) CMIExternalMemoryResource *externalMemoryResource;
@property (retain, nonatomic) NSDictionary *tuningParameters;
@property (retain, nonatomic) NSDictionary *cameraInfoByPortType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (int)resetState;
- (int)prewarm;
- (void)dealloc;
- (int)finishProcessing;
- (int)process;
- (void).cxx_destruct;
- (int)prepareToProcess:(unsigned int)a0;
- (int)purgeResources;
- (int)setup;
- (id)externalMemoryDescriptorForConfiguration:(id)a0;
- (int)_bindAllInternalIOTextures;
- (int)_bindPixelBufferToTexture:(struct __CVBuffer { } *)a0 usage:(unsigned long long)a1 textuePtr:(id *)a2;
- (int)_checkConfiguration;
- (int)_checkIOTexturePair;
- (int)_checkROISpecification;
- (int)_checkThumbnailTexturePair;
- (int)_createMetalStages;
- (unsigned int)_linearSystemCount;
- (unsigned int)_linearSystemNumberOfExpansionTerms;
- (unsigned int)_linearSystemNumberOfPolynomials;
- (unsigned int)_linearSystemSize;
- (id)initWithOptionalMetalCommandQueue:(id)a0;

@end
