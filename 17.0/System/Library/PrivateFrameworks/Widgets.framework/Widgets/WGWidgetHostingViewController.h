@class NSMutableDictionary, NSMapTable, NSDate, NSObject, _WGWidgetRemoteViewController, WGWidgetLifeCycleSequence, UIView, NSString, NSTimer, _WGBrokenWidgetView, _WGCAPackageView, BSAuditToken, _WGLockedOutWidgetView, WGWidgetInfo;
@protocol WGWidgetHostingViewControllerDelegate, WGWidgetHostingViewControllerHost, OS_dispatch_semaphore, OS_dispatch_queue, NSCopying;

@interface WGWidgetHostingViewController : UIViewController

@property (copy, nonatomic) NSString *appBundleID;
@property (readonly, copy, nonatomic, getter=_containerIdentifier) NSString *containerIdentifier;
@property (readonly, nonatomic, getter=_activeLifeCycleSequence) WGWidgetLifeCycleSequence *activeLifeCycleSequence;
@property (nonatomic, getter=_connectionState, setter=_setConnectionState:) long long connectionState;
@property (readonly, nonatomic, getter=_proxyConnectionQueue) NSObject<OS_dispatch_queue> *proxyConnectionQueue;
@property (readonly, nonatomic, getter=_proxyRequestQueue) NSObject<OS_dispatch_queue> *proxyRequestQueue;
@property (readonly, nonatomic, getter=_diskWriteQueue) NSObject<OS_dispatch_queue> *diskWriteQueue;
@property (retain, nonatomic, getter=_remoteViewController, setter=_setRemoteViewController:) _WGWidgetRemoteViewController *remoteViewController;
@property (copy, nonatomic, getter=_extensionRequest, setter=_setExtensionRequest:) id<NSCopying> extensionRequest;
@property (retain, nonatomic, getter=_contentProvidingView, setter=_setContentProvidingView:) UIView *contentProvidingView;
@property (retain, nonatomic, getter=_snapshotView, setter=_setSnapshotView:) _WGCAPackageView *snapshotView;
@property (nonatomic, getter=_snapshotViewBounds, setter=_setSnapshotBounds:) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } snapshotViewBounds;
@property (nonatomic, getter=_isEncodingLayerTree, setter=_setEncodingLayerTree:) BOOL encodingLayerTree;
@property (nonatomic, getter=_didRequestViewInset, setter=_setDidRequestViewInset:) BOOL didRequestViewInset;
@property (weak, nonatomic, getter=_disconnectionTimer, setter=_setDisconnectionTimer:) NSTimer *disconnectionTimer;
@property (retain, nonatomic, getter=_viewWillAppearSemaphore, setter=_setViewWillAppearSemaphore:) NSObject<OS_dispatch_semaphore> *viewWillAppearSemaphore;
@property (retain, nonatomic, getter=_viewWillDisappearSemaphore, setter=_setViewWillDisappearSemaphore:) NSObject<OS_dispatch_semaphore> *viewWillDisappearSemaphore;
@property (copy, nonatomic, getter=_remoteViewControllerConnectionHandler, setter=_setRemoteViewControllerConnectionHandler:) id /* block */ remoteViewControllerConnectionHandler;
@property (copy, nonatomic, getter=_remoteViewControllerDisconnectionHandler, setter=_setRemoteViewControllerDisconnectionHandler:) id /* block */ remoteViewControllerDisconnectionHandler;
@property (retain, nonatomic, getter=_lastUnanticipatedDisconnectionDate, setter=_setLastUnanticipatedDisconnectionDate:) NSDate *lastUnanticipatedDisconnectionDate;
@property (readonly, nonatomic, getter=_openAppearanceTransactions) NSMapTable *openAppearanceTransactions;
@property (nonatomic, getter=_didUpdate, setter=_setDidUpdate:) BOOL didUpdate;
@property (nonatomic, setter=_setImplementsPerformUpdate:) BOOL implementsPerformUpdate;
@property (nonatomic, getter=_isBlacklisted, setter=_setBlacklisted:) BOOL blacklisted;
@property (retain, nonatomic, getter=_brokenView, setter=_setBrokenView:) _WGBrokenWidgetView *brokenView;
@property (retain, nonatomic, getter=_lockedOutView, setter=_setLockedOutView:) _WGLockedOutWidgetView *lockedOutView;
@property (retain, nonatomic, getter=_sequenceIDsToOutstandingWidgetUpdateCompletionHandlers, setter=_setSequenceIDsToOutstandingWidgetUpdateCompletionHandlers:) NSMutableDictionary *sequenceIDsToOutstandingWidgetUpdateCompletionHandlers;
@property (nonatomic, getter=_isIgnoringParentAppearState, setter=_setIgnoringParentAppearState:) BOOL ignoringParentAppearState;
@property (readonly, nonatomic) WGWidgetInfo *widgetInfo;
@property (readonly, copy, nonatomic) NSString *widgetIdentifier;
@property (readonly, copy, nonatomic) NSString *displayName;
@property (readonly, weak, nonatomic) BSAuditToken *auditToken;
@property (weak, nonatomic) id<WGWidgetHostingViewControllerDelegate> delegate;
@property (weak, nonatomic) id<WGWidgetHostingViewControllerHost> host;
@property (readonly, nonatomic) long long largestAvailableDisplayMode;
@property (readonly, nonatomic) long long activeDisplayMode;
@property (nonatomic) long long userSpecifiedDisplayMode;
@property (readonly, nonatomic, getter=isRemoteViewVisible) BOOL remoteViewVisible;
@property (readonly, nonatomic, getter=isSnapshotLoaded) BOOL snapshotLoaded;
@property (readonly, nonatomic, getter=isBrokenViewVisible) BOOL brokenViewVisible;
@property (readonly, nonatomic, getter=isLockedOut) BOOL lockedOut;
@property (nonatomic) double cornerRadius;
@property (nonatomic) unsigned long long maskedCorners;
@property (nonatomic) BOOL disconnectsImmediately;

+ (void)setWidgetSnapshotTimestampsEnabled:(BOOL)a0;
+ (BOOL)_canWidgetHostCaptureSnapshotForSequence:(id)a0;
+ (BOOL)_canWidgetHostConnectRemoteViewControllerByCancellingDisappearanceForSequence:(id)a0;
+ (BOOL)_canWidgetHostConnectRemoteViewControllerByRequestingForSequence:(id)a0 disconnectionTimer:(id)a1 connectionState:(long long)a2;
+ (BOOL)_canWidgetHostDisconnectRemoteViewControllerForSequence:(id)a0 disconnectionTimer:(id)a1 coalesce:(BOOL)a2;
+ (BOOL)_canWidgetHostEndSequenceByDisconnectingRemoteViewControllerForSequence:(id)a0;
+ (BOOL)_canWidgetHostInsertRemoteViewForSequence:(id)a0;
+ (BOOL)_canWidgetHostRequestRemoteViewControllerForSequence:(id)a0;

- (void)viewWillAppear:(BOOL)a0;
- (BOOL)shouldAutomaticallyForwardAppearanceMethods;
- (void)dealloc;
- (void)traitCollectionDidChange:(id)a0;
- (void)viewDidLoad;
- (id)description;
- (void)viewWillDisappear:(BOOL)a0;
- (BOOL)_canShowWhileLocked;
- (void).cxx_destruct;
- (void)viewDidAppear:(BOOL)a0;
- (void)setPreferredContentSize:(struct CGSize { double x0; double x1; })a0;
- (void)viewDidDisappear:(BOOL)a0;
- (id)_cancelTouches;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_layoutMargins;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_marginInsets;
- (void)_removeItemAtURL:(id)a0;
- (void)_enqueueRequest:(id /* block */)a0 inQueue:(id)a1 trampolinedToMainQueue:(BOOL)a2 withDescription:(id)a3;
- (void)_initiateNewSequenceIfNecessary;
- (void)_removeItemAsynchronouslyAtURL:(id)a0;
- (BOOL)isLinkedOnOrAfterSystemVersion:(id)a0;
- (void)requestSettingsIconWithHandler:(id /* block */)a0;
- (void)_abortActiveSequence;
- (void)_attemptReconnectionAfterUnanticipatedDisconnection;
- (void)_beginRemoteViewControllerAppearanceTransitionIfNecessary:(BOOL)a0 semaphore:(id)a1 animated:(BOOL)a2 completion:(id /* block */)a3;
- (void)_beginSequenceWithReason:(id)a0 completion:(id /* block */)a1 updateHandler:(id /* block */)a2;
- (BOOL)_canInsertRemoteView:(id *)a0;
- (void)_captureLayerTree:(id /* block */)a0;
- (void)_captureSnapshotAndBeginDisappearanceTransitionForSequence:(id)a0 completionHandler:(id /* block */)a1;
- (void)_connectRemoteViewControllerForReason:(id)a0 sequence:(id)a1 completionHandler:(id /* block */)a2;
- (void)_disconnectRemoteViewControllerForReason:(id)a0 sequence:(id)a1 coalesce:(BOOL)a2 completionHandler:(id /* block */)a3;
- (void)_disconnectRemoteViewControllerForSequence:(id)a0 completion:(id /* block */)a1;
- (void)_disconnectionTimerDidFire:(id)a0;
- (void)_endRemoteViewControllerAppearanceTransitionIfNecessary;
- (void)_endRemoteViewControllerAppearanceTransitionIfNecessaryWithCompletion:(id /* block */)a0;
- (void)_endSequence:(id)a0 withReason:(id)a1 completion:(id /* block */)a2;
- (void)_enqueueDisconnectionRequestForSequence:(id)a0 endTransitionBlock:(id /* block */)a1 completion:(id /* block */)a2;
- (void)_enqueueRemoteServiceRequest:(id /* block */)a0 withDescription:(id)a1;
- (void)_finishDisconnectingRemoteViewControllerForSequence:(id)a0 error:(id)a1 completion:(id /* block */)a2;
- (BOOL)_hasOutstandingUpdateRequestForSequence:(id)a0;
- (void)_insertAppropriateContentView;
- (void)_insertBrokenView;
- (void)_insertContentProvidingSubview:(id)a0 sequence:(id)a1 completion:(id /* block */)a2;
- (void)_insertLockedOutViewWithExplanation:(id)a0;
- (void)_insertSnapshotViewIfAppropriate;
- (void)_insertSnapshotWithCompletionHandler:(id /* block */)a0;
- (void)_invalidateDisconnectionTimer;
- (void)_invalidateSnapshotWithForce:(BOOL)a0 removingSnapshotFilesForActiveDisplayMode:(BOOL)a1 completionHandler:(id /* block */)a2;
- (void)_invalidateVisibleFrame;
- (BOOL)_isActiveSequence:(id)a0;
- (void)_layoutMarginsDidChange;
- (void)_loadSnapshotViewFromDiskIfNecessary:(id /* block */)a0;
- (BOOL)_managingContainerIsVisible;
- (struct CGSize { double x0; double x1; })_maxSizeForDisplayMode:(long long)a0;
- (void)_noteOutstandingUpdateRequestForSequence:(id)a0;
- (void)_packageViewFromURL:(id)a0 reply:(id /* block */)a1;
- (void)_packageViewWithBlock:(id /* block */)a0 reply:(id /* block */)a1;
- (void)_performUpdateForSequence:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)_purgeLegacySnapshotsIfNecessary;
- (void)_registerUpdateRequestCompletionHandler:(id /* block */)a0 forSequence:(id)a1;
- (void)_removeAllSnapshotFilesDueToIssue:(BOOL)a0;
- (void)_removeAllSnapshotFilesForActiveDisplayMode;
- (void)_removeAllSnapshotFilesInActiveDisplayModeForAllButActiveUserInterfaceStyle;
- (void)_removeAllSnapshotFilesInActiveDisplayModeForContentSizeCategory:(id)a0;
- (void)_removeAllSnapshotFilesMatchingPredicate:(id)a0 dueToIssue:(BOOL)a1;
- (void)_requestInsertionOfRemoteViewAfterViewWillAppearForSequence:(id)a0 completionHandler:(id /* block */)a1;
- (void)_requestRemoteViewControllerForSequence:(id)a0 completionHander:(id /* block */)a1;
- (void)_requestVisibilityStateUpdateForPossiblyAppearing:(BOOL)a0 sequence:(id)a1;
- (void)_rowHeightDidChange:(id)a0;
- (void)_scheduleDisconnectionTimerForSequence:(id)a0 endTransitionBlock:(id /* block */)a1 completion:(id /* block */)a2;
- (void)_setLargestAvailableDisplayMode:(long long)a0;
- (void)_setupRequestQueue;
- (BOOL)_shouldRemoveSnapshotWhenNotVisible;
- (id)_snapshotIdentifierForLayoutMode:(long long)a0;
- (void)_synchronizeGeometryWithSnapshot;
- (void)_updatePreferredContentSizeWithHeight:(double)a0;
- (id /* block */)_updateRequestForSequence:(id)a0;
- (void)_updateWidgetWithCompletionHandler:(id /* block */)a0;
- (void)_validateSnapshotViewForActiveLayoutMode;
- (id)_widgetSnapshotURLForLayoutMode:(long long)a0 ensuringDirectoryExists:(BOOL)a1;
- (id)_widgetSnapshotURLForSnapshotIdentifier:(id)a0;
- (id)_widgetSnapshotURLForSnapshotIdentifier:(id)a0 ensuringDirectoryExists:(BOOL)a1;
- (void)handleReconnectionRequest:(id)a0;
- (id)initWithWidgetInfo:(id)a0 delegate:(id)a1 host:(id)a2;
- (void)invalidateCachedSnapshotWithCompletionHandler:(id /* block */)a0;
- (void)invalidateCachedSnapshotWithURL:(id)a0 completionHandler:(id /* block */)a1;
- (void)managingContainerDidDisappear:(id)a0;
- (void)managingContainerWillAppear:(id)a0;
- (void)maximumSizeDidChangeForDisplayMode:(long long)a0;
- (void)requestIconWithHandler:(id /* block */)a0;
- (void)setActiveDisplayMode:(long long)a0;
- (void)setLockedOut:(BOOL)a0 withExplanation:(id)a1;
- (void)widget:(id)a0 didTerminateWithError:(id)a1;

@end
