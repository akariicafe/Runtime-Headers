@class SBIconListModel, SBIconListViewLayoutMetrics, SBHIconSettings, SBIconView, NSMutableArray, NSString, SBIcon, NSMutableSet, SBFolderIconImageCache, NSArray, NSMutableDictionary, NSPointerArray, SBHIconImageCache, SBIconWidgetIntroductionPopoverView, NSLayoutConstraint, SBIconListViewDraggingDestinationDelegate, SBIconWidgetIntroductionView, _UILegibilitySettings, SBIconListViewIconLocationTransitionHandler, SBFolder, NSMapTable, SBHIconEditingSettings, NSHashTable;
@protocol SBIconListViewDragDelegate, SBIconViewProviding, SBIconWidgetIntroductionDelegate, SBIconListLayout, SBIconListLayoutProvider, SBIconListLayoutDelegate;

@interface SBIconListView : UIView <SBIconObserver, PTSettingsKeyObserver, SBHIconLayoutHidingAssertionDelegate, SBIconViewObserver, SBIconListModelObserver, SBIconViewQuerying, SBHVisibleContentPresenter, SBHIconLayoutHiding, BSDescriptionProviding> {
    NSMutableSet *_removedIcons;
    BOOL _needsLayout;
    BOOL _inLayout;
    BOOL _rotating;
    BOOL _ignoreNextWindowChange;
    BOOL _performingSpecialIconAnimations;
    NSMapTable *_iconViews;
    NSMapTable *_specialIconAnimations;
    NSMapTable *_pausedLayoutForIconViews;
    NSHashTable *_iconVisibilityAssertions;
    NSHashTable *_placeholderAssertions;
    NSHashTable *_layoutHidingAssertions;
    NSMutableDictionary *_groupNamesToCaptureOnlyBackgroundViews;
    NSMapTable *_iconsToCaptureOnlyBackgroundAssertions;
    NSMutableSet *_draggingIconViews;
    SBIconListViewDraggingDestinationDelegate *_draggingDelegate;
    struct __CFRunLoopObserver { } *_layoutRunLoopObserver;
    NSHashTable *_layoutObservers;
    NSPointerArray *_overridingLayoutDelegates;
    SBIconListViewLayoutMetrics *_cachedMetrics;
    NSMutableArray *_wrappingFocusGuideViews;
    double _widgetIntroductionPopOverTopAnchorOffset;
    double _desiredLaserPaddingX;
    double _desiredLaserPaddingY;
    BOOL _laserPadUsesAllAvailableSpace;
    SBHIconSettings *_iconSettings;
    SBHIconEditingSettings *_iconEditingSettings;
}

@property (class, readonly, nonatomic) long long rotationAnchor;
@property (class, readonly, nonatomic) unsigned long long defaultIconViewConfigurationOptions;

@property (retain, nonatomic) SBIconListViewIconLocationTransitionHandler *currentIconLocationTransitionHandler;
@property (weak, nonatomic) id<SBIconWidgetIntroductionDelegate> widgetIntroductionDelegate;
@property (retain, nonatomic) SBIconWidgetIntroductionView *pronouncedContainerView;
@property (retain, nonatomic) SBIconWidgetIntroductionPopoverView *widgetIntroductionPopover;
@property (retain, nonatomic) NSLayoutConstraint *widgetIntroductionPopoverTopAnchorConstraint;
@property (retain, nonatomic) NSLayoutConstraint *widgetIntroductionPopoverLeadingAnchorConstraint;
@property (nonatomic) BOOL isWidgetIntroductionVertical;
@property (retain, nonatomic) SBFolder *temporaryFolder;
@property (retain, nonatomic) SBIconListModel *temporaryModel;
@property (nonatomic) BOOL modelHasNonDefaultSizedIcons;
@property (copy, nonatomic) NSString *iconLocationWithoutWidgets;
@property (copy, nonatomic) NSString *iconLocationWithWidgets;
@property (retain, nonatomic) SBIconView *canceledDraggingIconView;
@property (retain, nonatomic) SBIcon *extraIconForFolderCollapseSpecialIconAnimation;
@property (retain, nonatomic) SBIconListModel *displayedModel;
@property (readonly, copy, nonatomic) NSString *layoutDescription;
@property (readonly, nonatomic) Class baseIconViewClass;
@property (readonly, nonatomic) unsigned long long iconRowsForCurrentOrientation;
@property (readonly, nonatomic) unsigned long long iconColumnsForCurrentOrientation;
@property (readonly, nonatomic) struct SBHIconGridSize { unsigned short x0; unsigned short x1; } gridSizeForCurrentOrientation;
@property (readonly, nonatomic) unsigned long long iconsInRowForSpacingCalculation;
@property (readonly, nonatomic) unsigned long long iconRowsForSpacingCalculation;
@property (readonly, nonatomic) unsigned long long maximumIconCount;
@property (retain, nonatomic) id<SBIconListLayoutProvider> layoutProvider;
@property (readonly, nonatomic) id<SBIconListLayout> layout;
@property (nonatomic) long long orientation;
@property (readonly, nonatomic) BOOL adaptsOrientationToTraitCollection;
@property (readonly, nonatomic, getter=isVertical) BOOL vertical;
@property (nonatomic, getter=isEditing) BOOL editing;
@property (nonatomic, getter=isPurged) BOOL purged;
@property (nonatomic, getter=isLayoutReversed) BOOL layoutReversed;
@property (nonatomic) unsigned long long automaticallyReversedLayoutOrientations;
@property (nonatomic) BOOL pausesIconsForScrolling;
@property (nonatomic) BOOL adjustsColumnPositionsForFullScreenWidth;
@property (nonatomic) unsigned long long userInterfaceLayoutDirectionHandling;
@property (readonly, nonatomic) long long userInterfaceLayoutDirection;
@property (nonatomic) unsigned long long iconViewConfigurationOptions;
@property (retain, nonatomic) _UILegibilitySettings *legibilitySettings;
@property (weak, nonatomic) id<SBIconListLayoutDelegate> layoutDelegate;
@property (retain, nonatomic) SBIconListModel *model;
@property (weak, nonatomic) id<SBIconViewProviding> iconViewProvider;
@property (readonly, copy, nonatomic) NSArray *icons;
@property (readonly, copy, nonatomic) NSArray *visibleIcons;
@property (readonly, nonatomic, getter=isEmpty) BOOL empty;
@property (readonly, nonatomic, getter=isFull) BOOL full;
@property (copy, nonatomic) NSString *iconLocation;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } alignmentIconSize;
@property (nonatomic) BOOL automaticallyAdjustsLayoutMetricsToFit;
@property (readonly, nonatomic) double horizontalIconPadding;
@property (readonly, nonatomic) double verticalIconPadding;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } additionalLayoutInsets;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } iconLayoutRect;
@property (nonatomic) struct CGSize { double width; double height; } iconSpacing;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } effectiveIconSpacing;
@property (nonatomic) BOOL boundsSizeTracksContentSize;
@property (readonly, nonatomic) SBIconListViewLayoutMetrics *layoutMetrics;
@property (readonly, nonatomic) unsigned long long gridCellInfoOptions;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } visibleColumnRange;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } visibleRowRange;
@property (nonatomic) struct SBIconListPredictedVisibleColumn { unsigned long long column; double confidence; } predictedVisibleColumn;
@property (nonatomic) struct SBIconListPredictedVisibleRow { unsigned long long row; double confidence; } predictedVisibleRow;
@property (nonatomic, getter=isDragSpringloadingEnabled) BOOL dragSpringloadingEnabled;
@property (readonly, nonatomic) BOOL iconsNeedLayout;
@property (nonatomic) double iconContentScale;
@property (weak, nonatomic) id<SBIconListViewDragDelegate> dragDelegate;
@property (copy, nonatomic) NSString *iconDragTypeIdentifier;
@property (nonatomic) BOOL wantsFastIconReordering;
@property (nonatomic, getter=isOccluded) BOOL occluded;
@property (retain, nonatomic) SBFolderIconImageCache *folderIconImageCache;
@property (retain, nonatomic) SBHIconImageCache *iconImageCache;
@property (readonly, nonatomic, getter=isTransitioningIconLocation) BOOL transitioningIconLocation;
@property (nonatomic) BOOL alignsIconsOnPixelBoundaries;
@property (nonatomic) long long layoutInsetsMode;
@property (readonly, nonatomic) unsigned long long numberOfDisplayedIconViews;
@property (nonatomic, getter=isVisiblySettled) BOOL visiblySettled;
@property (readonly, nonatomic) unsigned long long iconViewUserVisibilityStatus;
@property (nonatomic) BOOL allowsGaps;
@property (nonatomic) BOOL addsFocusGuidesForWrapping;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) unsigned long long contentVisibility;

+ (id)dominoAnimator;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })defaultFrameForOrientation:(long long)a0;
+ (id)defaultAnimator;
+ (unsigned long long)gridCellInfoOptionsWithInterfaceOrientation:(long long)a0 reversedLayout:(BOOL)a1;
+ (unsigned long long)gridCellInfoOptionsWithInterfaceOrientation:(long long)a0 reversedLayout:(BOOL)a1 allowGaps:(BOOL)a2;
+ (id)builtInAnimatorForAnimationType:(long long)a0;
+ (id)multiStageAnimator;
+ (id)clusterAnimator;
+ (id)layoutMetricsForParameters:(struct SBIconListLayoutMetricsParameters { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; double x1; struct UIEdgeInsets { double x0; double x1; double x2; double x3; } x2; long long x3; long long x4; unsigned long long x5; unsigned long long x6; struct SBHIconGridSizeClassSizes { struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x0; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x1; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x2; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x3; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x4; } x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; struct CGSize { double x0; double x1; } x12; struct CGSize { double x0; double x1; } x13; double x14; struct CGSize { double x0; double x1; } x15; unsigned long long x16; } *)a0 listModel:(id)a1;

- (void)layoutHidingAssertionDidChange:(id)a0;
- (struct CGPoint { double x0; double x1; })centerForIconAtIndex:(unsigned long long)a0;
- (unsigned long long)gridCellIndexForIconView:(id)a0;
- (void)hideAllIcons;
- (BOOL)_iconMatchingCoordinateBeginsInThatRow:(struct SBIconCoordinate { long long x0; long long x1; })a0 metrics:(id)a1;
- (struct CGPoint { double x0; double x1; })centerForIcon:(id)a0;
- (void)popIconView:(id)a0;
- (void)stopAnimatingPronouncedContainerAndPopoverView;
- (void)layoutHidingAssertionDidInvalidate:(id)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })layoutInsetsForOrientation:(long long)a0;
- (unsigned long long)iconIndexForCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0 metrics:(id)a1;
- (void)removeAllIconViews;
- (void)performDefaultAnimatedRemovalForIconViews:(id)a0 completionHandler:(id /* block */)a1;
- (struct CGPoint { double x0; double x1; })originForIconAtCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0 metrics:(id)a1;
- (struct SBIconCoordinate { long long x0; long long x1; })coordinateAtPoint:(struct CGPoint { double x0; double x1; })a0 metrics:(id)a1;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_allIconsVisibleColumnOrRowRange;
- (void)iconGridSizeClassDidChange:(id)a0;
- (void)fadeInIcon:(id)a0;
- (void)iconList:(id)a0 didRemoveIcon:(id)a1;
- (unsigned long long)indexOfIcon:(id)a0;
- (BOOL)hasOverridingLayoutDelegates;
- (void)iconList:(id)a0 didReplaceIcon:(id)a1 withIcon:(id)a2;
- (void)getLayoutMetricsParameters:(struct SBIconListLayoutMetricsParameters { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; double x1; struct UIEdgeInsets { double x0; double x1; double x2; double x3; } x2; long long x3; long long x4; unsigned long long x5; unsigned long long x6; struct SBHIconGridSizeClassSizes { struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x0; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x1; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x2; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x3; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x4; } x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; struct CGSize { double x0; double x1; } x12; struct CGSize { double x0; double x1; } x13; double x14; struct CGSize { double x0; double x1; } x15; unsigned long long x16; } *)a0;
- (void)_informLayoutObserversNumberOfPlaceholdersOrLayoutHiddenIconsChanged;
- (struct CGPoint { double x0; double x1; })originForIconAtCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0;
- (void)removeIconView:(id)a0;
- (unsigned long long)indexForCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0 forOrientation:(long long)a1 metrics:(id)a2;
- (id)iconAtCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0 metrics:(id)a1;
- (struct SBIconCoordinate { long long x0; long long x1; })coordinateForIcon:(id)a0;
- (id)removedIcons;
- (struct CGPoint { double x0; double x1; })centerForIconCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0;
- (id)beginTransitionToIconLocation:(id)a0 reason:(id)a1;
- (void)setIconsLabelAlpha:(double)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForCellAtIconCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0 metrics:(id)a1 options:(unsigned long long)a2;
- (void)removePlaceholderAssertion:(id)a0;
- (id)dequeueReusableIconView;
- (void)layoutWidgetIntroductionViews;
- (void)iconView:(id)a0 willCancelDragForItem:(id)a1;
- (void)_addIconViewsForIcons:(id)a0 metrics:(id)a1;
- (BOOL)getIconStartGridCellIndex:(unsigned long long *)a0 gridSize:(struct SBHIconGridSize { unsigned short x0; unsigned short x1; } *)a1 forGridCellIndex:(unsigned long long)a2 metrics:(id)a3;
- (struct SBHIconGridSize { unsigned short x0; unsigned short x1; })iconGridSizeForClass:(unsigned long long)a0;
- (unsigned long long)indexForCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0 forOrientation:(long long)a1;
- (void)setVisibleColumnRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 predictedVisibleColumn:(struct SBIconListPredictedVisibleColumn { unsigned long long x0; double x1; })a1;
- (void)updateEditingStateAnimated:(BOOL)a0;
- (void)markIcon:(id)a0 asNeedingAnimation:(long long)a1;
- (unsigned long long)gridCellIndexForCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0 metrics:(id)a1;
- (void)_captureOnlyBackgroundAssertionDidInvalidate:(id)a0;
- (struct CGPoint { double x0; double x1; })centerForIconCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0 metrics:(id)a1;
- (void)_insertCaptureOnlyBackgroundViewForInsertingIconViewIfNecessary:(id)a0;
- (void)removePronouncedContainerView;
- (void)popIcon:(id)a0;
- (BOOL)shouldReparentView:(id)a0;
- (void)_cleanupIconViewsForRemovedIcons:(id)a0;
- (struct SBIconCoordinate { long long x0; long long x1; })iconCoordinateForGridCellIndex:(unsigned long long)a0 metrics:(id)a1;
- (void)layoutIconsNow;
- (BOOL)hasTemporaryModel;
- (BOOL)containsWidget;
- (struct SBIconImageInfo { struct CGSize { double x0; double x1; } x0; double x1; double x2; })iconImageInfoForGridSizeClass:(unsigned long long)a0;
- (void)addPronouncedContainerViewWithDelegate:(id)a0 vertical:(BOOL)a1;
- (id)makeIconView;
- (void)getLayoutMetricsParameters:(struct SBIconListLayoutMetricsParameters { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; double x1; struct UIEdgeInsets { double x0; double x1; double x2; double x3; } x2; long long x3; long long x4; unsigned long long x5; unsigned long long x6; struct SBHIconGridSizeClassSizes { struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x0; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x1; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x2; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x3; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x4; } x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; struct CGSize { double x0; double x1; } x12; struct CGSize { double x0; double x1; } x13; double x14; struct CGSize { double x0; double x1; } x15; unsigned long long x16; } *)a0 orientation:(long long)a1;
- (struct CGSize { double x0; double x1; })iconImageSizeForGridSizeClass:(unsigned long long)a0;
- (unsigned long long)rowAtPoint:(struct CGPoint { double x0; double x1; })a0 metrics:(id)a1;
- (id)addPlaceholderAtGridCellIndex:(unsigned long long)a0 gridSizeClass:(unsigned long long)a1 reason:(id)a2 options:(unsigned long long)a3;
- (id)visibleGridCellIndexesWithMetrics:(id)a0;
- (id)gridCellInfo;
- (void)layoutIconsIfNeeded;
- (id)iconVisibilityInfoForRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 normalized:(BOOL)a1;
- (void)placeholderAssertionDidChangePosition:(id)a0;
- (void)_getDragRegionRects:(struct SBIconListViewCellDragRegionRects { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x5; } *)a0 forIconView:(id)a1;
- (void)_addIconViewsForIcons:(id)a0;
- (id)iconViewForGridCellIndex:(unsigned long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForIcon:(id)a0;
- (struct CGPoint { double x0; double x1; })_alignedIconPointForPoint:(struct CGPoint { double x0; double x1; })a0;
- (unsigned long long)gridCellIndexForIcon:(id)a0;
- (struct SBIconCoordinate { long long x0; long long x1; })iconCoordinateForIndex:(unsigned long long)a0 forOrientation:(long long)a1;
- (BOOL)_allowsFocusToLeaveViaHeading:(unsigned long long)a0;
- (id)iconViewForCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0;
- (BOOL)isDock;
- (void)pauseLayout:(BOOL)a0 forIconView:(id)a1 withReason:(id)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_introductionContainerViewFrameForView:(id)a0;
- (id)addPlaceholderRepresentingIcon:(id)a0 reason:(id)a1 options:(unsigned long long)a2;
- (BOOL)containsIcon:(id)a0;
- (void)removeShowAllIconsAssertion:(id)a0;
- (void)performZoomInSpecialIconAnimationWithIcon:(id)a0 completionHandler:(id /* block */)a1;
- (id)iconAtCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0;
- (struct SBHIconGridRange { unsigned long long x0; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x1; })gridRangeForIconAtIndex:(unsigned long long)a0;
- (void)didAddIconView:(id)a0;
- (unsigned long long)bestGridCellIndexForInsertingIcon:(id)a0 atCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a1;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })cursorHitTestingInsetsForIconSpacing:(struct CGSize { double x0; double x1; })a0;
- (void)updateIconLocationWithNonDefaultSizedIcons;
- (void)performZoomOutSpecialIconAnimationWithIcon:(id)a0 completionHandler:(id /* block */)a1;
- (unsigned long long)rowAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)layoutFocusGuides;
- (void)layoutAndCreateIcon:(id)a0 atIndex:(unsigned long long)a1;
- (BOOL)isLayoutPausedForIconView:(id)a0;
- (unsigned long long)dragHitRegionForPoint:(struct CGPoint { double x0; double x1; })a0 icon:(id)a1;
- (struct SBIconCoordinate { long long x0; long long x1; })_coordinateAfterCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0 rows:(unsigned long long)a1 columns:(unsigned long long)a2 metrics:(id)a3;
- (BOOL)isDisplayingWidgetIntroduction;
- (struct CGPoint { double x0; double x1; })centerForIcon:(id)a0 metrics:(id)a1;
- (void)showAllIcons;
- (void)ignoreNextWindowChange;
- (id)requireAllIconsShownForReason:(id)a0;
- (void)performSpecialIconAnimation:(long long)a0 icon:(id)a1 completionHandler:(id /* block */)a2;
- (void)_updateVisibleIconViewsWithOldVisibleGridCellIndexes:(id)a0 metrics:(id)a1;
- (struct CGPoint { double x0; double x1; })originForIconAtIndex:(unsigned long long)a0;
- (double)layoutScale;
- (void)iconLocationTransitionHandler:(id)a0 completeTransition:(BOOL)a1;
- (void)_applyIconPaddingSettings;
- (id)addPlaceholderAtGridCellIndex:(unsigned long long)a0 representingIcon:(id)a1 reason:(id)a2 options:(unsigned long long)a3;
- (void)removeIconViewConfigurationOption:(unsigned long long)a0;
- (void)fadeInIconView:(id)a0;
- (id)beginHidingIconsFromLayout:(id)a0 reason:(id)a1 options:(unsigned long long)a2;
- (void)regenerateTemporaryDisplayedModelIfNecessary;
- (double)continuousCornerRadiusForGridSizeClass:(unsigned long long)a0;
- (BOOL)isRTL;
- (void)configureIconView:(id)a0 forIcon:(id)a1;
- (void)iconList:(id)a0 didAddIcon:(id)a1;
- (long long)layoutOrientation;
- (id)firstIconViewForIcon:(id)a0 inLocations:(id)a1;
- (void)addDragObserver:(id)a0 forDropSession:(id)a1;
- (void)removeAllIconAnimations;
- (void)iconList:(id)a0 didMoveIcon:(id)a1;
- (void)willMoveToWindow:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })fullRectForCellAtIconCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0 metrics:(id)a1 options:(unsigned long long)a2;
- (id)initWithModel:(id)a0 layoutProvider:(id)a1 iconLocation:(id)a2 orientation:(long long)a3 iconViewProvider:(id)a4;
- (void)dealloc;
- (BOOL)isDisplayingIconView:(id)a0;
- (void)performDefaultAnimatedLayoutUpdateForIconView:(id)a0 withParameters:(struct SBIconListLayoutAnimationParameters { struct CGPoint { double x0; double x1; } x0; double x1; struct SBIconImageInfo { struct CGSize { double x0; double x1; } x0; double x1; double x2; } x2; BOOL x3; struct SBIconCoordinate { long long x0; long long x1; } x4; BOOL x5; BOOL x6; unsigned long long x7; })a1;
- (struct CGSize { double x0; double x1; })alignmentIconViewSize;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForIconCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0;
- (void)layoutIconsIfNeeded:(double)a0;
- (void)performCollapseFolderWithContainedIconSpecialIconAnimationWithIcon:(id)a0 completionHandler:(id /* block */)a1;
- (void)setIconsNeedLayout;
- (id)succinctDescriptionBuilder;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForDefaultSizedCellAtCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0 metrics:(id)a1;
- (double)horizontalBumpForColumn:(unsigned long long)a0 metrics:(id)a1;
- (void)willRotateWithTransitionCoordinator:(id)a0;
- (BOOL)isShowingAllIcons;
- (struct CGPoint { double x0; double x1; })originForIcon:(id)a0;
- (id)displayedIconViewForIcon:(id)a0;
- (void)enumerateIconViewsUsingBlock:(id /* block */)a0;
- (BOOL)restoreDraggedIconView:(id)a0;
- (void)iconViewDidEndDrag:(id)a0;
- (unsigned long long)folderMutationOptionsForIconLayoutHidingAssertion:(id)a0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)performSpecialIconAnimationsWithCompletionHandler:(id /* block */)a0;
- (void)layoutIconsIfNeededWithAnimationType:(long long)a0 options:(unsigned long long)a1;
- (unsigned long long)columnAtPoint:(struct CGPoint { double x0; double x1; })a0 metrics:(id)a1 fractionOfDistanceThroughColumn:(double *)a2;
- (unsigned long long)rowForIcon:(id)a0;
- (void)startAnimatingPronouncedContainerAndPopoverView;
- (id)temporarilyMappedIconForIcon:(id)a0;
- (struct SBHIconGridRange { unsigned long long x0; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x1; })iconGridRangeForIndex:(unsigned long long)a0 metrics:(id)a1;
- (unsigned long long)iconGridSizeClassForIconGridSize:(struct SBHIconGridSize { unsigned short x0; unsigned short x1; })a0;
- (id)descriptionBuilderWithMultilinePrefix:(id)a0;
- (BOOL)isDisplayingIcon:(id)a0 inLocations:(id)a1;
- (void)updateIconViewForIcon:(id)a0 toIcon:(id)a1;
- (id)tintColor;
- (void)didAddSubview:(id)a0;
- (BOOL)isDisplayingIconView:(id)a0 inLocation:(id)a1;
- (BOOL)isDisplayingIcon:(id)a0;
- (void)updateIconLocationWithNonDefaultSizedIcons:(BOOL)a0;
- (id)widgetIconsForIntroductionContainerView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForIconAtIndex:(unsigned long long)a0;
- (id)layoutMetricsForOrientation:(long long)a0;
- (unsigned long long)listMutationOptionsForIconLayoutHidingAssertion:(id)a0;
- (void)bringWidgetIntroductionPopoverToFront;
- (void)enumerateDisplayedIconViewsUsingBlock:(id /* block */)a0;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_updateEditingStateForIcons:(id)a0 animated:(BOOL)a1;
- (id)visibleGridCellIndexes;
- (id)effectiveLayoutDelegateForSelector:(SEL)a0;
- (unsigned long long)columnAtPoint:(struct CGPoint { double x0; double x1; })a0 fractionOfDistanceThroughColumn:(double *)a1;
- (void)layoutIconsIfNeededUsingAnimator:(id)a0 options:(unsigned long long)a1;
- (void)enumerateVisibleIconsUsingBlock:(id /* block */)a0;
- (void)enumerateDisplayedIconViewsForIcon:(id)a0 usingBlock:(id /* block */)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })fullRectForDefaultSizedCellAtCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0 metrics:(id)a1;
- (id)visibleIconIndexes;
- (struct SBIconCoordinate { long long x0; long long x1; })_coordinateBeforeCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0 rows:(unsigned long long)a1 columns:(unsigned long long)a2 metrics:(id)a3;
- (id)descriptionWithMultilinePrefix:(id)a0;
- (void)_removeCaptureOnlyBackgroundViewForRemovedIconIfNecessary:(id)a0;
- (id)iconViewForIcon:(id)a0;
- (void)addLayoutObserver:(id)a0;
- (void)layoutAndCreateIcon:(id)a0;
- (void)settings:(id)a0 changedValueForKey:(id)a1;
- (unsigned long long)iconIndexForGridCellIndex:(unsigned long long)a0 metrics:(id)a1;
- (void)_teardownLayoutRunloopObserverIfNeeded;
- (id)addOverridingLayoutDelegate:(id)a0 reason:(id)a1;
- (id)firstIconViewForIcon:(id)a0 excludingLocations:(id)a1;
- (double)_leadingSpacingForWidgetIntroductionPopoverView;
- (void)setVisibleRowRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 predictedVisibleRow:(struct SBIconListPredictedVisibleRow { unsigned long long x0; double x1; })a1;
- (void).cxx_destruct;
- (void)updateReversedLayoutBasedOnOrientation;
- (void)_removeIconViewsForIcons:(id)a0;
- (unsigned long long)bestIndexForInsertingIcon:(id)a0 atCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a1;
- (unsigned long long)columnAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)firstIconViewForIcon:(id)a0;
- (id)_iconForDragItem:(id)a0;
- (void)setAlphaForAllIcons:(double)a0;
- (double)_topSpacingForWidgetIntroductionPopoverView;
- (id)iconAtGridCellIndex:(unsigned long long)a0 metrics:(id)a1;
- (id)succinctDescription;
- (struct CGSize { double x0; double x1; })iconImageSize;
- (void)_getRTLAwareRowIndex:(long long *)a0 columnIndex:(long long *)a1 forGridCellIndex:(unsigned long long)a2 iconGridSize:(struct SBHIconGridSize { unsigned short x0; unsigned short x1; })a3 metrics:(id)a4;
- (void)_setupLayoutRunLoopObserver;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForDefaultSizedCellsOfSize:(struct SBHIconGridSize { unsigned short x0; unsigned short x1; })a0 startingAtCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a1 metrics:(id)a2;
- (void)enumerateIconsUsingBlock:(id /* block */)a0;
- (void)layoutSubviews;
- (id)iconViewForIcon:(id)a0 location:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForIconCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0 metrics:(id)a1;
- (void)iconLocationTransitionHandler:(id)a0 setProgress:(double)a1;
- (void)removeLayoutObserver:(id)a0;
- (struct CGPoint { double x0; double x1; })centerForIconAtIndex:(unsigned long long)a0 metrics:(id)a1;
- (void)_insertOrRemoveCaptureOnlyBackgroundViewIfNecessaryForIconView:(id)a0;
- (struct SBIconCoordinate { long long x0; long long x1; })coordinateAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)allowsAddingIconCount:(unsigned long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForDefaultSizedCellsOfSizeClass:(unsigned long long)a0 startingAtCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a1 metrics:(id)a2;
- (struct SBIconCoordinate { long long x0; long long x1; })coordinateForIconAtIndex:(unsigned long long)a0;
- (struct CGPoint { double x0; double x1; })fractionalCoordinateAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)removeOverridingLayoutDelegateAssertion:(id)a0;
- (BOOL)getIconGridRange:(struct SBHIconGridRange { unsigned long long x0; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x1; } *)a0 forGridCellIndex:(unsigned long long)a1 metrics:(id)a2;
- (struct SBIconCoordinate { long long x0; long long x1; })iconCoordinateForIndex:(unsigned long long)a0 metrics:(id)a1;
- (void)didMoveToWindow;
- (void)setVisibleColumnRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 predictedVisibleColumn:(struct SBIconListPredictedVisibleColumn { unsigned long long x0; double x1; })a1 visibleRowRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 predictedVisibleRow:(struct SBIconListPredictedVisibleRow { unsigned long long x0; double x1; })a3;
- (struct CGPoint { double x0; double x1; })originForIconAtCoordinate:(struct SBIconCoordinate { long long x0; long long x1; })a0 metrics:(id)a1 options:(unsigned long long)a2;
- (id)iconAtPoint:(struct CGPoint { double x0; double x1; })a0 index:(unsigned long long *)a1;
- (BOOL)isDisplayingIcon:(id)a0 inLocation:(id)a1;
- (void)addIconViewConfigurationOption:(unsigned long long)a0;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;

@end
