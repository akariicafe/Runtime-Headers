@class PXStoryHUDViewConfiguration, NSProgress, PXStorySmartGradientAdjustment, PXStoryModel, PXGRegionMaskEffect, NSString, PXStoryRectAnimation, PXGTextLegibilityEffect, PXGCombinedEffect, PXGDisplayAssetVideoPresentationController, PXStoryTextResourceInfo, NSIndexSet, NSTimer, PXGLayout, PXStoryColorNormalizationEffect, PXStoryTiltedEdgeInsetsAnimation, PXStoryAnimationController, PXStoryColorNormalizationAdjustment, PXGColorGradingEffect;
@protocol PXDisplayAsset, PXStoryResource, PXStoryClip, PXStoryStyleDescriptor;

@interface PXStoryClipLayout : PXGLayout <PXGDisplayAssetSource, PXChangeObserver, PXStoryTitleInternationalStylePreferencesObserver, PXGStringSource, PXGSolidColorSource, PXStoryDiagnosticHUDContentProvider> {
    struct { unsigned long long needsUpdate; unsigned long long updated; BOOL isPerformingUpdate; BOOL willPerformUpdate; } _updateFlags;
    unsigned int _contentSpriteIndex;
    unsigned int _diagnosticHUDSpriteIndex;
    unsigned int _primaryDividerSpriteIndex;
    unsigned int _secondaryDividerSpriteIndex;
    unsigned char _contentVersion;
    long long _resourceKind;
    double _resourceContentAspectRatio;
    unsigned char _HUDContentVersion;
    BOOL _isFeedThumbnail;
}

@property (readonly, nonatomic) PXStoryAnimationController *animationController;
@property (retain, nonatomic) id<PXStoryResource> resource;
@property (nonatomic) unsigned long long assetPresentationStyles;
@property (retain, nonatomic) PXGDisplayAssetVideoPresentationController *videoPresentationController;
@property (nonatomic) long long colorGradeKind;
@property (retain, nonatomic) PXGColorGradingEffect *colorGradingEffect;
@property (retain, nonatomic) PXStoryColorNormalizationEffect *colorNormalizationEffect;
@property (retain, nonatomic) PXGTextLegibilityEffect *textLegibilityEffect;
@property (retain, nonatomic) PXStoryColorNormalizationAdjustment *colorNormalizationAdjustment;
@property (retain, nonatomic) PXGRegionMaskEffect *topEdgeMaskEffect;
@property (retain, nonatomic) PXGRegionMaskEffect *leftEdgeMaskEffect;
@property (retain, nonatomic) PXGRegionMaskEffect *bottomEdgeMaskEffect;
@property (retain, nonatomic) PXGRegionMaskEffect *rightEdgeMaskEffect;
@property (retain, nonatomic) PXGRegionMaskEffect *leftEdgeClippingMaskEffect;
@property (retain, nonatomic) PXGRegionMaskEffect *rightEdgeClippingMaskEffect;
@property (retain, nonatomic) PXGCombinedEffect *combinedEffect;
@property (retain, nonatomic) PXStorySmartGradientAdjustment *smartGradientAdjustment;
@property (copy, nonatomic) NSIndexSet *segmentIdentifiers;
@property (nonatomic) BOOL isSegmentVisible;
@property (nonatomic) long long offsetFromCurrentSegment;
@property (readonly, nonatomic) BOOL isPlayheadInVideoTimeRange;
@property (readonly, nonatomic) BOOL isPlayheadInAudioTimeRange;
@property (readonly, nonatomic) BOOL wasPlayheadMovedManually;
@property (readonly, nonatomic) float currentAudioVolume;
@property (retain, nonatomic) id musicDuckingToken;
@property (retain, nonatomic) id<PXDisplayAsset> displayAsset;
@property (nonatomic) struct CGSize { double width; double height; } presentedKenBurnsAnimationContentSize;
@property (nonatomic) struct { struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } t; } presentedKenBurnsAnimationCurrentRect;
@property (nonatomic) struct { struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } t; } preferredPresentedContentsRect;
@property (nonatomic) struct { struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } t; } presentedContentsRect;
@property (nonatomic) struct { struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } t; } contentsRectOverride;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } contentSpriteNormalizedFrameOverride;
@property (readonly, nonatomic) long long contentSpriteNormalizedFrameOverrideCoordinateSystem;
@property (nonatomic) BOOL shouldAutoplay;
@property (nonatomic) struct { struct { long long value; int timescale; unsigned int flags; long long epoch; } start; struct { long long value; int timescale; unsigned int flags; long long epoch; } duration; } autoplayTimeRange;
@property (nonatomic) BOOL isReadyForAutoplay;
@property (retain, nonatomic) PXStoryTiltedEdgeInsetsAnimation *clippingAnimation;
@property (retain, nonatomic) PXStoryRectAnimation *kenBurnsAnimation;
@property (nonatomic) BOOL wantsHUD;
@property (retain, nonatomic) NSTimer *HUDTimer;
@property (readonly, nonatomic) PXStoryHUDViewConfiguration *HUDConfiguration;
@property (nonatomic) BOOL shouldAspectFitContent;
@property (nonatomic) BOOL shouldObserveInternationalStyleTitlePreferences;
@property (retain, nonatomic) PXStoryTextResourceInfo *currentTextResourceInfo;
@property (retain, nonatomic) PXStoryTextResourceInfo *relativeTextResourceInfo;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } textResourceSpriteFrame;
@property (nonatomic) struct CGSize { double width; double height; } textResourceContentSize;
@property (nonatomic) unsigned char textResourceContentVersion;
@property (retain, nonatomic) NSProgress *textFrameProgress;
@property (retain, nonatomic) id<PXStoryClip> clip;
@property (nonatomic) struct { struct { long long value; int timescale; unsigned int flags; long long epoch; } start; struct { long long value; int timescale; unsigned int flags; long long epoch; } duration; } clipTimeRange;
@property (retain, nonatomic) PXStoryModel *model;
@property (retain, nonatomic) id<PXStoryStyleDescriptor> overrideStyleInfo;
@property (weak, nonatomic) PXGLayout *timelineLayout;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } clippingInsets;
@property (nonatomic) BOOL canShowDynamicContent;
@property (nonatomic) BOOL canShowColorNormalizedContent;
@property (nonatomic) BOOL canShowTextLegibilityEffect;
@property (nonatomic) BOOL canShowHUD;
@property (nonatomic) BOOL canAspectFitContent;
@property (nonatomic) long long customColorGradeKind;
@property (nonatomic) double manualContentsRectAmount;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } manualContentsRect;
@property (nonatomic) struct { union { struct { float topLeft; float topRight; float bottomLeft; float bottomRight; } ; float byIndex[4]; } ; } cornerRadius;
@property (nonatomic) BOOL disableClippingAnimation;
@property (readonly, nonatomic) struct { unsigned int x0; } contentSpriteEntity;
@property (nonatomic) double relativeZPositionAboveLegibilityGradients;
@property (nonatomic) float contentAlpha;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } contentBounds;
@property (nonatomic) BOOL useContentBoundsForContentEdgeInsets;
@property (nonatomic) struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } contentsRectTransform;
@property (nonatomic) float contentScale;
@property (nonatomic) struct { struct { double preRotationInset; double rotationAngle; double postRotationInset; } top; struct { double preRotationInset; double rotationAngle; double postRotationInset; } left; struct { double preRotationInset; double rotationAngle; double postRotationInset; } bottom; struct { double preRotationInset; double rotationAngle; double postRotationInset; } right; } contentEdgeInsets;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } primaryDividerBounds;
@property (nonatomic) struct CGSize { double width; double height; } primaryDividerScale;
@property (nonatomic) double primaryDividerAlpha;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } secondaryDividerBounds;
@property (nonatomic) struct CGSize { double width; double height; } secondaryDividerScale;
@property (nonatomic) double secondaryDividerAlpha;
@property (nonatomic) struct CGSize { double width; double height; } displayedTimelineOriginalSize;
@property (nonatomic) BOOL contentPrefersPresentationTypeView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)shouldContinueKenBurnsAnimationFromPreviousPresentedContentSize:(struct CGSize { double x0; double x1; })a0 toCurrentContentSize:(struct CGSize { double x0; double x1; })a1;

- (void)didUpdate;
- (void)alphaDidChange;
- (id)init;
- (Class)viewClassForSpriteAtIndex:(unsigned int)a0 inLayout:(id)a1;
- (unsigned long long)supportedDisplayAssetPresentationStylesInLayout:(id)a0;
- (void)observable:(id)a0 didChange:(unsigned long long)a1 context:(void *)a2;
- (void)dealloc;
- (void)entityManagerDidChange;
- (void)willUpdate;
- (id)colorAtIndex:(unsigned int)a0 inLayout:(id)a1;
- (id)axSpriteIndexes;
- (void)update;
- (unsigned long long)desiredPlaceholderStyleInLayout:(id)a0;
- (void)displayScaleDidChange;
- (void)_invalidateContent;
- (id)adjustmentForDisplayAsset:(id)a0 spriteIndex:(unsigned int)a1 inLayout:(id)a2;
- (void)referenceDepthDidChange;
- (void)getDetailedPresentedPlacement:(id)a0 forItemReference:(id)a1;
- (id)attributedStringForSpriteAtIndex:(unsigned int)a0 inLayout:(id)a1;
- (id)stringAtIndex:(unsigned int)a0 inLayout:(id)a1;
- (void)_updateContent;
- (void).cxx_destruct;
- (long long)stringDrawingOptionsForSpriteAtIndex:(unsigned int)a0 inLayout:(id)a1;
- (id)axVisibleSpriteIndexes;
- (id)viewUserDataForSpriteAtIndex:(unsigned int)a0 inLayout:(id)a1;
- (long long)verticalAlignmentForStringAtIndex:(unsigned int)a0 inLayout:(id)a1;
- (BOOL)useLowMemoryDecodeInLayout:(id)a0;
- (id)displayAssetFetchResultForSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x0; unsigned int x1; })a0 inLayout:(id)a1;
- (void)contentSizeDidChange;
- (void)referenceSizeDidChange;
- (id)stringAttributesAtIndex:(unsigned int)a0 inLayout:(id)a1;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })paddingForSpriteAtIndex:(unsigned int)a0 inLayout:(id)a1;
- (void)setDetailedPlacementOverride:(id)a0 forItemReference:(id)a1;
- (void)_invalidateTextLegibilityEffect;
- (void)_updateColorNormalizationEffect;
- (void)_updateResource;
- (void)_updateWantsHUD;
- (void)_updateOffsetFromCurrentSegment;
- (unsigned long long)axFocusabilityForSpriteAtIndex:(unsigned int)a0;
- (id)spriteReferenceForContentSprite;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_denormalizeRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 coordinateSystem:(long long)a1;
- (id)_effectWithClass:(Class)a0 reusableInstance:(id)a1;
- (long long)_effectiveColorGradeKind;
- (void)_invalidateAnimations;
- (void)_invalidateAssetPresentationStyles;
- (void)_invalidateColorGradeKind;
- (void)_invalidateColorGradingEffect;
- (void)_invalidateColorNormalizationEffect;
- (void)_invalidateCombinedEffect;
- (void)_invalidateContentMode;
- (void)_invalidateContentStyle;
- (void)_invalidateContentVersion;
- (void)_invalidateDisplayAsset;
- (void)_invalidateEdgeMaskEffects;
- (void)_invalidateHUD;
- (void)_invalidateIsSegmentVisible;
- (void)_invalidateModelPresentedTextProperties;
- (void)_invalidateMusicDucking;
- (void)_invalidateOffsetFromCurrentSegment;
- (void)_invalidatePlayheadState;
- (void)_invalidateResource;
- (void)_invalidateSegmentIdentifiers;
- (void)_invalidateShouldAutoplay;
- (void)_invalidateSmartGradientAdjustment;
- (void)_invalidateTextResourceSpriteFrame;
- (void)_invalidateVideoPresentationController;
- (void)_invalidateVideoPresentationControllerState;
- (void)_invalidateWantsHUD;
- (BOOL)_isDisplayingContentOfAsset:(id)a0;
- (BOOL)_isDisplayingTextResourceType:(long long)a0;
- (id)_maskEffectForEdge:(unsigned int)a0 tiltedInset:(struct { double x0; double x1; double x2; })a1 bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 reusableInstance:(id)a3;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_normalizeRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 coordinateSystem:(long long)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_referenceRectForNormalizedCoordinateSystem:(long long)a0;
- (id)_textForHUD;
- (unsigned long long)_titleKind;
- (void)_updateAnimations;
- (void)_updateAssetPresentationStyles;
- (void)_updateColorGradeKind;
- (void)_updateColorGradingEffect;
- (void)_updateCombinedEffect;
- (void)_updateContentMode;
- (void)_updateContentStyle;
- (void)_updateDisplayAsset;
- (void)_updateEdgeMaskEffects;
- (void)_updateHUD;
- (void)_updateIsSegmentVisible;
- (void)_updateModelPresentedTextProperties;
- (void)_updateMusicDucking;
- (void)_updatePlayheadState;
- (void)_updateSegmentIdentifiers;
- (void)_updateShouldAutoplay;
- (void)_updateSmartGradientAdjustment;
- (void)_updateTextLegibilityEffect;
- (void)_updateTextResourceSpriteFrame;
- (void)_updateVideoPresentationController;
- (void)_updateVideoPresentationControllerState;
- (void)_validateVideoPlaybackState;
- (struct CGSize { double x0; double x1; })attributedStringBoundingSizeForSpriteAtIndex:(unsigned int)a0 inLayout:(id)a1;
- (id)diagnosticErrorsByComponentForHUDType:(long long)a0;
- (id)diagnosticTextForHUDType:(long long)a0 displaySize:(struct CGSize { double x0; double x1; })a1;
- (id)drawingContextForSpriteAtIndex:(unsigned int)a0 inLayout:(id)a1;
- (void)internationalStyleTitlePreferencesDidChange;
- (BOOL)isDisplayingSubtitle;
- (BOOL)isDisplayingTitle;
- (id)itemPlacementSourceIdentifier;
- (unsigned long long)presentationIntentForSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x0; unsigned int x1; })a0 inLayout:(id)a1;
- (void)setContentSpriteNormalizedFrameOverride:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 coordinateSystem:(long long)a1;
- (void)setIsPlayheadInVideoTimeRange:(BOOL)a0 isPlayheadInAudioTimeRange:(BOOL)a1 wasPlayheadMovedManually:(BOOL)a2 currentAudioVolume:(float)a3;
- (BOOL)shouldApplyCleanApertureCropToStillImagesInLayout:(id)a0;
- (id)videoPresentationControllerForDisplayAsset:(id)a0 spriteIndex:(unsigned int)a1 inLayout:(id)a2;

@end
