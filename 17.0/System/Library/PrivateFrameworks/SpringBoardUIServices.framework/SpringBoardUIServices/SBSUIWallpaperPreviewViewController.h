@class SBFWallpaperOptions, SBSUIWallpaperProgressHUD, PBUIWallpaperOptions, NSDictionary, _UILegibilitySettings, SBFLockScreenDateViewController, NSString, PBUIWallpaperConfigurationManager, NSTimer, AVURLAsset, _SBSUIOrientedImageView, SBFWallpaperCoreAnalyticsLogger, PBUIWallpaperConfiguration, UIImage;
@protocol SBSUIWallpaperPreviewViewControllerDelegate, SBFLegibilitySettingsProviderDelegate;

@interface SBSUIWallpaperPreviewViewController : UIViewController <PBUILegibilitySettingsProviderDelegate, SBSUIWallpaperPreviewViewDelegate, SBFLegibilitySettingsProvider> {
    NSTimer *_dateTimer;
    PBUIWallpaperConfigurationManager *_wallpaperConfigurationManager;
    PBUIWallpaperConfiguration *_wallpaperConfiguration;
    PBUIWallpaperConfiguration *_initialConfiguration;
    NSDictionary *_wallpaperImageDict;
    NSDictionary *_proceduralWallpaper;
    NSDictionary *_proceduralWallpaperOptions;
    BOOL _allowScrolling;
    long long _variant;
    NSString *_name;
    BOOL _colorSamplingEnabled;
    AVURLAsset *_video;
    NSDictionary *_videoDict;
    double _stillTimeInVideo;
    PBUIWallpaperOptions *_options;
    NSDictionary *_optionsDict;
    BOOL _enableButtons;
    BOOL _disableContents;
    BOOL _disableParallax;
    SBSUIWallpaperProgressHUD *_hud;
    _SBSUIOrientedImageView *_homeScreenPreviewView;
    SBFLockScreenDateViewController *_dateViewController;
    SBFWallpaperCoreAnalyticsLogger *_wallpaperCoreAnalyticsLogger;
}

@property (weak, nonatomic) id<SBSUIWallpaperPreviewViewControllerDelegate> previewDelegate;
@property (readonly) UIImage *wallpaperImage;
@property (readonly, copy, nonatomic) SBFWallpaperOptions *wallpaperOptions;
@property (nonatomic) BOOL motionEnabled;
@property (nonatomic) BOOL irisEnabled;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } cropRect;
@property (nonatomic) double zoomScale;
@property (nonatomic) double parallaxFactor;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) _UILegibilitySettings *legibilitySettings;
@property (weak, nonatomic) id<SBFLegibilitySettingsProviderDelegate> delegate;

- (id)initWithWallpaperVariant:(long long)a0;
- (void)viewWillAppear:(BOOL)a0;
- (void)dealloc;
- (void)traitCollectionDidChange:(id)a0;
- (void)loadView;
- (BOOL)prefersStatusBarHidden;
- (id)initWithImage:(id)a0;
- (id)initWithNibName:(id)a0 bundle:(id)a1;
- (void)viewWillDisappear:(BOOL)a0;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void).cxx_destruct;
- (void)providerLegibilitySettingsChanged:(id)a0;
- (void)viewDidAppear:(BOOL)a0;
- (void)viewDidDisappear:(BOOL)a0;
- (id)_dateView;
- (id)_previewView;
- (long long)_wallpaperType;
- (double)_parallaxFactor;
- (id)_wallpaperView;
- (void)_enableIrisOrParallaxIfEligible;
- (void)_startDateTimer;
- (void)_updateDateView;
- (void)_applyHomeScreenPreview;
- (id)_colorWallpaperViewWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 variant:(long long)a1 configuration:(id)a2;
- (void)_displaySettingWallpaperHUD;
- (void)_logWallpaperChangeForLocations:(long long)a0;
- (id)_previewViewIfLoaded;
- (id)_proceduralWallpaperViewWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 variant:(long long)a1 configuration:(id)a2;
- (void)_setImageWallpaperForLocationsOnMainThread:(long long)a0 completionHandler:(id /* block */)a1;
- (void)_setProceduralWallpaperForLocationsOnMainThread:(long long)a0 completionHandler:(id /* block */)a1;
- (void)_setWallpaperForLocationsOnMainThread:(long long)a0 completionHandler:(id /* block */)a1;
- (void)_setWallpaperImagesOnMainThread:(id)a0 options:(id)a1 locations:(long long)a2 completionHandler:(id /* block */)a3;
- (void)_stopDateTimer;
- (id)_wallpaperConfigurationManager;
- (id)_wallpaperTypeDescription;
- (id)_wallpaperViewIfLoaded;
- (id)_wallpaperViewWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)_wallpaperViewWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 image:(id)a1 video:(id)a2 videoURL:(id)a3 stillTimeInVideo:(double)a4 supportsCropping:(BOOL)a5 variant:(long long)a6 needsWallpaperDimming:(BOOL)a7;
- (id)_wallpaperViewWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 variant:(long long)a1 options:(id)a2;
- (BOOL)colorSamplingEnabled;
- (id)initWithImage:(id)a0 name:(id)a1;
- (id)initWithImage:(id)a0 name:(id)a1 video:(id)a2 time:(double)a3;
- (id)initWithImage:(id)a0 video:(id)a1 variant:(long long)a2 options:(id)a3 disableSegmentedControl:(BOOL)a4 enableButtons:(BOOL)a5 disableContents:(BOOL)a6;
- (id)initWithImages:(id)a0 videos:(id)a1 variant:(long long)a2 options:(id)a3 disableSegmentedControl:(BOOL)a4 enableButtons:(BOOL)a5 disableContents:(BOOL)a6;
- (id)initWithImages:(id)a0 videos:(id)a1 variant:(long long)a2 options:(id)a3 disableSegmentedControl:(BOOL)a4 enableButtons:(BOOL)a5 disableContents:(BOOL)a6 disableParallax:(BOOL)a7;
- (id)initWithProceduralWallpaper:(id)a0 options:(id)a1;
- (id)initWithProceduralWallpaper:(id)a0 options:(id)a1 variant:(long long)a2 disableSegmentedControl:(BOOL)a3 enableButtons:(BOOL)a4 disableContents:(BOOL)a5;
- (id)initWithScrollableImage:(id)a0;
- (id)initWithScrollableImage:(id)a0 video:(id)a1 time:(double)a2;
- (void)setColorSamplingEnabled:(BOOL)a0;
- (void)setImageWallpaperForLocations:(long long)a0 completionHandler:(id /* block */)a1;
- (void)setMotionEnabled:(BOOL)a0 updateParallaxOnWallpaperView:(BOOL)a1;
- (void)setWallpaperForLocations:(long long)a0;
- (void)setWallpaperForLocations:(long long)a0 completionHandler:(id /* block */)a1;
- (void)setWallpaperImages:(id)a0 options:(id)a1 locations:(long long)a2;
- (void)setWallpaperImages:(id)a0 options:(id)a1 locations:(long long)a2 completionHandler:(id /* block */)a3;
- (void)userDidTapOnCancelButton:(id)a0;
- (void)userDidTapOnIrisButton:(id)a0;
- (void)userDidTapOnParallaxButton:(id)a0;
- (void)userDidTapOnSetButton:(id)a0;

@end
