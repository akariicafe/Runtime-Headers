@class CPSActionButton, MKMapView, NSArray, NSTimer, CLLocationManager, CPSPanViewController, NSMutableDictionary, CPSPointsOfInterestPickerViewController, UILayoutGuide, NSString, CPSPointsOfInterestMapControlsViewController, CLLocation;

@interface CPSPointsOfInterestMapViewController : CPSBaseEntityContentViewController <MKMapViewDelegate, CPSPointsOfInterestMapDelegate, CPSPointsOfInterestPickerDelegate, CPSPanEventDelegate, CPSButtonDelegate, CPSActionButtonLayoutDelegate, CPSLinearFocusProviding, CLLocationManagerDelegate>

@property (retain, nonatomic) CPSPointsOfInterestPickerViewController *pickerViewController;
@property (retain, nonatomic) CPSPointsOfInterestMapControlsViewController *mapControlsViewController;
@property (retain, nonatomic) MKMapView *mapView;
@property (retain, nonatomic) UILayoutGuide *mapVisibleRegionGuide;
@property (readonly, nonatomic) struct { struct CLLocationCoordinate2D { double x0; double x1; } x0; struct { double x0; double x1; } x1; } mapVisibleRegion;
@property (nonatomic) BOOL centerMapPending;
@property (retain, nonatomic) NSArray *pickerModeConstraints;
@property (retain, nonatomic) NSArray *panModeConstraints;
@property (readonly, nonatomic) NSMutableDictionary *annotations;
@property (retain, nonatomic) NSMutableDictionary *clusterAnnotations;
@property (retain, nonatomic) CPSPanViewController *panViewController;
@property (copy, nonatomic) id /* block */ panCompletionHandler;
@property (retain, nonatomic) CPSActionButton *donePanningButton;
@property (retain, nonatomic) NSTimer *panTimer;
@property (retain, nonatomic) CLLocationManager *locationManager;
@property (readonly, nonatomic, getter=isLocationAuthorized) BOOL locationAuthorized;
@property (readonly, nonatomic) CLLocation *userLocation;
@property (nonatomic) BOOL hasPerformedInitialLayout;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL useRightHandDriveFocusGuide;

- (struct CGSize { double x0; double x1; })buttonSize;
- (void)viewDidLayoutSubviews;
- (void)locationManagerDidChangeAuthorization:(id)a0;
- (void)viewDidLoad;
- (id)preferredFocusEnvironments;
- (void)zoomOut;
- (id)font;
- (void)didMoveToParentViewController:(id)a0;
- (void).cxx_destruct;
- (void)locationManager:(id)a0 didUpdateLocations:(id)a1;
- (void)viewDidAppear:(BOOL)a0;
- (void)zoomIn;
- (void)locationManager:(id)a0 didFailWithError:(id)a1;
- (id)_linearFocusMovementSequences;
- (void)setupViews;
- (id)mapView:(id)a0 clusterAnnotationForMemberAnnotations:(id)a1;
- (void)mapView:(id)a0 didAddAnnotationViews:(id)a1;
- (void)mapView:(id)a0 didSelectAnnotationView:(id)a1;
- (void)mapView:(id)a0 regionDidChangeAnimated:(BOOL)a1;
- (id)mapView:(id)a0 viewForAnnotation:(id)a1;
- (void)mapViewDidFinishRenderingMap:(id)a0 fullyRendered:(BOOL)a1;
- (id)template;
- (id)buttonBackgroundColor;
- (void)didSelectButton:(id)a0;
- (id)pointsOfInterest;
- (void)highlightModel:(id)a0;
- (void)zoomToLocation:(id)a0;
- (void)dismissPanView:(id)a0;
- (id)_linearFocusItems;
- (void)_notifyRegionDidChange;
- (void)_updateFocusedItem;
- (void)beginPanningWithCompletion:(id /* block */)a0;
- (double)buttonRadius;
- (void)centerMap;
- (void)didUpdateEntity:(id)a0;
- (id)initWithEntity:(id)a0 resourceProvider:(id)a1;
- (void)panBeganWithDirection:(long long)a0;
- (void)panEndedWithDirection:(long long)a0;
- (void)panWithDirection:(long long)a0;
- (void)picker:(id)a0 didDeselectModel:(id)a1;
- (void)picker:(id)a0 didHighlightModel:(id)a1;
- (void)picker:(id)a0 didSelectModel:(id)a1;
- (void)picker:(id)a0 didUnhighlightModel:(id)a1;
- (void)reloadAnnotations:(BOOL)a0;
- (void)setUpLocationManager;
- (void)setUpMapView;
- (void)setUpPanView;
- (void)unhighlightModel:(id)a0;
- (void)updateMapViewEdgeInsetsFittingAnnotations:(BOOL)a0;

@end
