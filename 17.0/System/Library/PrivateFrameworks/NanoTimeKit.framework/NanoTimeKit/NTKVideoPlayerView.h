@class NTKVideoPlayerDataSource, NSString, UIImageView, NTKTaskScheduler, UIView, CLKVideoPlayerView;
@protocol NTKVideoPlayerViewFaceDelegate;

@interface NTKVideoPlayerView : UIView <CLKVideoPlayerViewDelegate> {
    NTKTaskScheduler *_taskScheduler;
    UIView *_curtainView;
    UIView *_posterContainerView;
    UIImageView *_posterImageView;
    CLKVideoPlayerView *_videoPlayerView;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _videoPlayerEdgeInsets;
    long long _currentDataMode;
    unsigned long long _prerollState;
    BOOL _videoPlayerInViewHierarchy;
    BOOL _isHandlingTapGesture;
    BOOL _paused;
    BOOL _frozen;
    BOOL _slow;
    BOOL _orbing;
}

@property (weak, nonatomic) id<NTKVideoPlayerViewFaceDelegate> delegate;
@property (retain, nonatomic) NTKVideoPlayerDataSource *dataSource;
@property (nonatomic) unsigned long long playerBehavior;
@property (nonatomic) double fadeAnimationDuration;
@property (nonatomic) BOOL shouldApplyVideoInsetToPosterImage;
@property (nonatomic, getter=isPausedViewEnabled) BOOL pausedViewEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_mediaServicesWereReset:(id)a0;
- (void)didAddSubview:(id)a0;
- (void)handleScreenOff;
- (void).cxx_destruct;
- (void)_pause;
- (void)layoutSubviews;
- (BOOL)_shouldPause;
- (id)videoPlayerView;
- (void)setPosterImage:(id)a0;
- (void)videoPlayerViewDidBeginPlaying:(id)a0;
- (void)_advanceListingForEvent:(unsigned long long)a0;
- (void)_cancelScheduledPreroll;
- (void)_createCurtainView;
- (void)_createPosterImageView;
- (void)_createVideoPlayerViewIfNeeded;
- (void)_fadeFromCurtainViewIfVisible;
- (void)_fadeFromPosterImageAndCurtainViewIfVisible;
- (void)_fadeFromPosterImageIfVisible:(id /* block */)a0;
- (void)_fadeToCurtainView:(id /* block */)a0;
- (void)_fadeToPosterImage;
- (void)_handleScreenWake;
- (void)_hideCurtainView;
- (void)_hidePosterImageView;
- (void)_loadCurrentListing;
- (void)_loadVideoPlayerView;
- (void)_play;
- (void)_playIfNotPaused;
- (void)_playNextVideoForEvent:(unsigned long long)a0 animated:(BOOL)a1;
- (void)_prerollVideo;
- (void)_queueSubsequentListingIfSupported;
- (void)_removeCurrentVideo;
- (void)_resetVideoPlayer;
- (void)_rewindLoadedVideoToBeginning;
- (void)_schedulePreroll;
- (BOOL)_shouldChangeVideoOnTap;
- (BOOL)_shouldChangeVideoOnWake;
- (BOOL)_shouldPlayVideoOnTap;
- (void)_showCurtainView;
- (void)_showPosterImageView;
- (void)_unloadVideoPlayerView;
- (void)_updatePauseState;
- (void)applyDataMode:(long long)a0 comingFromDataMode:(long long)a1;
- (void)applyFrozen:(BOOL)a0;
- (void)applyOrbing:(BOOL)a0;
- (void)applySlow:(BOOL)a0;
- (void)faceLibraryWasDismissed;
- (void)handleOrdinaryScreenWake;
- (void)handleScreenOn;
- (void)handleStyleDidChange;
- (void)handleWristRaiseScreenWake;
- (void)setVideoPlayerInset:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a0;
- (void)setVideoPlayerResizeGravity:(long long)a0;
- (void)setVideoPlayerTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a0;
- (void)transitionToEditing;
- (void)videoPlayerView:(id)a0 didFinishPrerolling:(BOOL)a1;
- (void)videoPlayerViewDidBeginPlayingQueuedVideo:(id)a0;
- (void)videoPlayerViewDidPauseAfterPlayingVideoToEnd:(id)a0;
- (void)videoPlayerViewWasTapped;

@end
