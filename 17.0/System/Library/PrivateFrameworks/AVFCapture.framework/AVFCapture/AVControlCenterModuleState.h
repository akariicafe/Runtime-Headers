@class NSString, NSDictionary, NSMutableDictionary, NSArray;

@interface AVControlCenterModuleState : NSObject {
    NSString *_bundleID;
    BOOL _isVOIPApp;
    BOOL _isOptedInForBackgroundBlur;
    BOOL _isOptedInForStudioLight;
    BOOL _isOptedInForReactionEffects;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _stateLock;
    BOOL _holdingStateLock;
    BOOL _centerStageSupported;
    long long _centerStageControlMode;
    BOOL _centerStageEnabled;
    NSString *_centerStageControlModeKey;
    NSString *_centerStageEnabledKey;
    NSString *_centerStageUnavailableReasonsKey;
    BOOL _backgroundBlurSupported;
    long long _backgroundBlurControlMode;
    BOOL _backgroundBlurEnabled;
    NSString *_backgroundBlurControlModeKey;
    NSString *_backgroundBlurEnabledKey;
    NSString *_backgroundBlurUnavailableReasonsKey;
    float _backgroundBlurAperture;
    NSString *_backgroundBlurApertureKey;
    BOOL _studioLightingSupported;
    long long _studioLightingControlMode;
    BOOL _studioLightingEnabled;
    NSString *_studioLightingControlModeKey;
    NSString *_studioLightingEnabledKey;
    NSString *_studioLightingUnavailableReasonsKey;
    float _studioLightingIntensity;
    NSString *_studioLightingIntensityKey;
    BOOL _reactionsEnabled;
    BOOL _gesturesEnabled;
    BOOL _reactionEffectsSupported;
    NSMutableDictionary *_previousReactionStateByDeviceIdentifier;
    NSString *_reactionsEnabledKey;
    NSString *_gesturesEnabledKey;
    NSString *_reactionsUnavailableReasonsKey;
    NSString *_reactionTriggeredKey;
    NSString *_reactionsInProgressKey;
    BOOL _micModesSupported;
    BOOL _auVoiceIOBypassVoiceProcessing;
    NSString *_auVoiceIOBypassVoiceProcessingKey;
    long long _microphoneMode;
    long long _activeMicrophoneMode;
    NSString *_microphoneModeKey;
    NSString *_activeMicrophoneModeKey;
    NSArray *_supportedMicrophoneModes;
    NSString *_supportedMicrophoneModesKey;
    NSArray *_hiddenMicrophoneModes;
    NSString *_hiddenMicrophoneModesKey;
    NSString *_startPanningAtPointKey;
    NSString *_panWithTranslationKey;
    NSString *_manualFramingVideoZoomFactorKey;
    NSString *_performOneShotFramingKey;
    NSString *_resetFramingKey;
    NSString *_oneShotFramingCompletedKey;
    NSString *_resetFramingCompletedKey;
    NSString *_panningAnglesKey;
    NSString *_centerStageFieldOfViewRestrictedToWideKey;
    NSString *_manualFramingDeviceTypeKey;
    NSString *_dockedTrackingActiveKey;
    double _currentPanningAngleX;
    double _currentPanningAngleY;
    double _currentOriginalZoomFactor;
    long long _manualFramingDeviceType;
    NSDictionary *_zoomFactorConstantsByManualFramingDeviceType;
}

@property (readonly, getter=isActive) BOOL active;
@property BOOL centerStageSupported;
@property BOOL backgroundBlurSupported;
@property BOOL studioLightingSupported;
@property BOOL reactionEffectsSupported;
@property BOOL micModesSupported;
@property (readonly) BOOL manualFramingIsAtDefault;
@property BOOL centerStageFieldOfViewRestrictedToWide;
@property long long manualFramingDeviceType;
@property (readonly) NSDictionary *zoomFactorConstantsByManualFramingDeviceType;

+ (id)moduleStateForBundleID:(id)a0 micModesSupported:(BOOL)a1;

- (void)startPanningAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)resetFraming;
- (unsigned long long)unavailableReasonsForVideoEffect:(id)a0;
- (struct AudioValueRange { double x0; double x1; })getEffectIntensityRangeForVideoEffect:(id)a0;
- (float)getEffectIntensityForVideoEffect:(id)a0;
- (long long)microphoneMode;
- (void)dealloc;
- (void)performOneShotFraming;
- (float)getEffectIntensityDefaultForVideoEffect:(id)a0;
- (void)performReactionEffect:(id)a0 forCaptureDeviceWithID:(id)a1;
- (void)panWithTranslation:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)isEnabledForVideoEffect:(id)a0;
- (long long)controlModeForVideoEffect:(id)a0;
- (id)hiddenMicrophoneModes;
- (long long)activeMicrophoneMode;
- (void)installProprietaryDefaultsHandlers;
- (BOOL)setMicrophoneMode:(long long)a0;
- (id)supportedMicrophoneModes;
- (double)manualFramingOriginalVideoZoomFactor;
- (BOOL)setEnabled:(BOOL)a0 forVideoEffect:(id)a1;
- (void)_handlePanningAnglesUpdate:(id)a0;
- (id)initForBundleID:(id)a0 micModesSupported:(BOOL)a1;
- (BOOL)manualFramingEnabledForDevice:(id)a0;
- (void)enableBlackenFrames:(BOOL)a0 forDeviceUID:(id)a1;
- (void)updateActiveReactions:(id)a0 currentRenderPTS:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 requestedTriggers:(int)a2 forCaptureDeviceWithID:(id)a3;
- (BOOL)setEffectIntensityForVideoEffect:(float)a0 forVideoEffect:(id)a1;
- (double)_defaultOriginalVideoZoomFactor;
- (void)_checkManualFramingDefaultStateWithNewOriginalZoomFactor:(double)a0;
- (void)_proprietaryDefaultChanged:(id)a0 keyPath:(id)a1 context:(void *)a2;
- (BOOL)supportsVideoEffect:(id)a0;
- (void)setManualFramingOriginalZoomFactor:(double)a0 convertedZoomFactor:(double)a1;
- (void)_handleBackPropagatedVideoZoomFactorUpdate:(id)a0;
- (BOOL)voiceProcessingBypassed;

@end
