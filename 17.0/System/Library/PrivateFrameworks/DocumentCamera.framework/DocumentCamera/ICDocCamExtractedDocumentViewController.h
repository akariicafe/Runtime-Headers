@class UIPageViewController, UIBarButtonItem, UILabel, NSIndexPath, NSMutableArray, UILongPressGestureRecognizer, UIAccessibilityHUDItem, NSString, ICDocCamDocumentInfoCollection, UIButton, ICDocCamImageCache, UICollectionView, UIView, ICDocCamReorderingThumbnailCollectionViewLayout, ICDocCamFilterViewController, NSLayoutConstraint, ICDocCamExtractedThumbnailContainerView, UICollectionViewController, CIContext, UIStackView, UIAlertController, UIToolbar, UIImageView, UIScrollView, UIColor;
@protocol ICDocCamExtractedDocumentControllerDelegate, DCScanDataDelegate;

@interface ICDocCamExtractedDocumentViewController : UIViewController <CAAnimationDelegate, UIPageViewControllerDataSource, UIPageViewControllerDelegate, ICDocCamZoomablePageContentDelegate, ICDocCamFilterViewDelegate, UICollectionViewDataSource, UICollectionViewDelegate, ICDocCamThumbnailViewLayoutDelegate, UIScrollViewDelegate, UIPageViewControllerDelegatePrivate, ICDocCamExtractedThumbnailContainerViewDelegate, UITextFieldDelegate, UIGestureRecognizerDelegate, DCUnsavedDataDelegate>

@property (retain, nonatomic) UIBarButtonItem *trashButtonItem;
@property (retain, nonatomic) UIBarButtonItem *rotateButtonItem;
@property (retain, nonatomic) UIBarButtonItem *filterButtonItem;
@property (retain, nonatomic) UIBarButtonItem *addButtonItem;
@property (retain, nonatomic) UIBarButtonItem *actionButtonItem;
@property (retain, nonatomic) UIBarButtonItem *doneButtonItem;
@property (retain, nonatomic) UIBarButtonItem *retakeButtonItem;
@property (retain, nonatomic) UIBarButtonItem *filterButtonItemForNavBar;
@property (retain, nonatomic) UIBarButtonItem *trashButtonItemForNavBar;
@property (retain, nonatomic) UIBarButtonItem *rotateButtonItemForNavBar;
@property (retain, nonatomic) UIBarButtonItem *recropButtonItem;
@property (retain, nonatomic) UIBarButtonItem *recropButtonItemForNavBar;
@property (nonatomic) BOOL rotationUnderWay;
@property (weak, nonatomic) UIToolbar *bottomToolbar;
@property (weak, nonatomic) UIView *topToolbar;
@property (retain, nonatomic) UILabel *pageIndexLabel;
@property (retain, nonatomic) UIButton *collectionTitleButton;
@property (retain, nonatomic) UIView *titleViewWrapper;
@property (retain, nonatomic) UIStackView *titleView;
@property (retain, nonatomic) NSLayoutConstraint *titleViewWrapperWidthConstraint;
@property (retain, nonatomic) NSLayoutConstraint *titleViewWrapperHeightConstraint;
@property (retain, nonatomic) UIPageViewController *pageViewController;
@property (weak, nonatomic) UIView *pageViewControllerContainerView;
@property (nonatomic) long long presentationPageIndex;
@property (retain, nonatomic) UICollectionViewController *thumbnailCollectionViewController;
@property (retain, nonatomic) UICollectionView *thumbnailCollectionView;
@property (retain, nonatomic) ICDocCamExtractedThumbnailContainerView *thumbnailContainerView;
@property (retain, nonatomic) UIBarButtonItem *thumbnailContainerViewItem;
@property (nonatomic) int mode;
@property (retain, nonatomic) ICDocCamDocumentInfoCollection *documentInfoCollection;
@property (retain, nonatomic) ICDocCamImageCache *imageCache;
@property (retain, nonatomic) UILongPressGestureRecognizer *imageLongPressGestureRecognizer;
@property (retain, nonatomic) UILongPressGestureRecognizer *thumbnailLongPressGestureRecognizer;
@property (retain, nonatomic) NSIndexPath *movingIndexPath;
@property (nonatomic) double movingXPosition;
@property (nonatomic) double movingYPosition;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } menuControllerTargetRect;
@property (weak, nonatomic) id<ICDocCamExtractedDocumentControllerDelegate> delegate;
@property (weak, nonatomic) UIAlertController *editTitleAlert;
@property (retain, nonatomic) CIContext *sharedCoreImageContext;
@property (nonatomic) struct CGSize { double width; double height; } previousViewSize;
@property (nonatomic) BOOL isScrollingBetweenPages;
@property (readonly, nonatomic) BOOL isPageViewControllerScrolled;
@property (readonly, nonatomic) BOOL shouldDisableActions;
@property (retain, nonatomic) UIScrollView *pageViewControllerScrollView;
@property (retain, nonatomic) NSMutableArray *documentsToUpdateWhenScrollingStops;
@property (readonly, nonatomic) ICDocCamReorderingThumbnailCollectionViewLayout *thumbnailCollectionViewLayout;
@property (readonly, nonatomic) BOOL shouldDisableSharrow;
@property (nonatomic) long long lastAXProposedIndexForReordering;
@property (nonatomic) BOOL barsShouldBeHidden;
@property (nonatomic) BOOL cameraRestricted;
@property (retain, nonatomic) ICDocCamFilterViewController *filterViewController;
@property (retain, nonatomic) NSLayoutConstraint *pageViewLeadingConstraint;
@property (retain, nonatomic) NSLayoutConstraint *pageViewTrailingConstraint;
@property (retain, nonatomic) NSLayoutConstraint *pageViewTopConstraint;
@property (retain, nonatomic) NSLayoutConstraint *pageViewBottomConstraint;
@property (nonatomic) BOOL statusBarWasHiddenWhenDoneTapped;
@property (nonatomic) BOOL statusBarWasHiddenWhenRetakeTapped;
@property (nonatomic) BOOL adjustPageViewControllerForMarkup;
@property (nonatomic) BOOL isAnimatingPageViewController;
@property (retain, nonatomic) UIAccessibilityHUDItem *hudItemForAccessibilityLargerText;
@property (retain, nonatomic) UILongPressGestureRecognizer *axHUDLongPressGestureRecognizer;
@property (nonatomic) BOOL layoutHasHappened;
@property (retain, nonatomic) UIColor *defaultCollectionViewTitleTintColor;
@property (retain, nonatomic) UIColor *darkenedCollectionViewTitleTintColor;
@property (readonly, nonatomic) id<DCScanDataDelegate> scanCollectionDataDelegate;
@property (readonly, nonatomic) id<DCScanDataDelegate> selectedScanDataDelegate;
@property (readonly, nonatomic) UIImageView *currentImageView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })targetRectForOrientation:(long long)a0 window:(id)a1;

- (void)scrollViewDidEndDecelerating:(id)a0;
- (id)undoManager;
- (struct CGSize { double x0; double x1; })collectionView:(id)a0 layout:(id)a1 sizeForItemAtIndexPath:(id)a2;
- (void)collectionView:(id)a0 didSelectItemAtIndexPath:(id)a1;
- (void)viewWillAppear:(BOOL)a0;
- (void)dealloc;
- (void)collectionView:(id)a0 moveItemAtIndexPath:(id)a1 toIndexPath:(id)a2;
- (void)updateLayout;
- (void)traitCollectionDidChange:(id)a0;
- (void)viewWillLayoutSubviews;
- (BOOL)collectionView:(id)a0 canMoveItemAtIndexPath:(id)a1;
- (void)viewDidLayoutSubviews;
- (void)contentSizeCategoryDidChange:(id)a0;
- (void)viewDidLoad;
- (long long)preferredStatusBarStyle;
- (void)scrollViewDidEndDragging:(id)a0 willDecelerate:(BOOL)a1;
- (void)copy:(id)a0;
- (void)share:(id)a0;
- (BOOL)prefersStatusBarHidden;
- (BOOL)_canShowWhileLocked;
- (BOOL)canBecomeFirstResponder;
- (void).cxx_destruct;
- (void)viewDidAppear:(BOOL)a0;
- (long long)collectionView:(id)a0 numberOfItemsInSection:(long long)a1;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (id)currentBackgroundColor;
- (long long)preferredStatusBarUpdateAnimation;
- (void)viewDidDisappear:(BOOL)a0;
- (void)scrollViewDidScroll:(id)a0;
- (id)collectionView:(id)a0 cellForItemAtIndexPath:(id)a1;
- (void)scrollViewWillBeginDragging:(id)a0;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (BOOL)canPerformAction:(SEL)a0 withSender:(id)a1;
- (void)delete:(id)a0;
- (void)_pageViewControllerDidFinishTransitions:(id)a0;
- (BOOL)accessibilityPerformEscape;
- (void)pageViewController:(id)a0 didFinishAnimating:(BOOL)a1 previousViewControllers:(id)a2 transitionCompleted:(BOOL)a3;
- (id)pageViewController:(id)a0 viewControllerAfterViewController:(id)a1;
- (id)pageViewController:(id)a0 viewControllerBeforeViewController:(id)a1;
- (void)pageViewController:(id)a0 willTransitionToViewControllers:(id)a1;
- (id)rootView;
- (id)viewControllerAtIndex:(unsigned long long)a0;
- (id)_accessibilitySpeakThisElementsAndStrings;
- (BOOL)accessibilityScrollLeftPage;
- (BOOL)accessibilityScrollRightPage;
- (void)prepareForDismissal;
- (void)doneAction:(id)a0;
- (void)updateForAccessibilityDarkerSystemColors;
- (id)currentDocument;
- (void)deleteButtonAction:(id)a0;
- (id)croppedButNotFilteredImageForDocInfo:(id)a0;
- (void)didUpdateDocumentImage:(id)a0;
- (void)didUpdateDocumentInfoArrayNewCurrentDocument:(id)a0;
- (void)didUpdateDocumentTitle:(id)a0;
- (id)initWithDelegate:(id)a0 documentInfoCollection:(id)a1 imageCache:(id)a2 currentIndex:(long long)a3 mode:(int)a4;
- (void)shareAction:(id)a0;
- (void)addImageAction:(id)a0;
- (void)defaultsChanged;
- (BOOL)thumbnailContainerViewIsVisible;
- (BOOL)filterViewControllerApplyToAll:(short)a0;
- (void)respondToImageLongPressGesture:(id)a0;
- (void)updateTitleView;
- (void)alertAndDiscardMarkup;
- (BOOL)cameraDisabled;
- (void)changePage:(long long)a0;
- (void)collectionNameTapped:(id)a0;
- (struct CGSize { double x0; double x1; })collectionView:(id)a0 imageSizeAtIndex:(long long)a1;
- (id)croppedAndFilteredmageForDocumentAtIndex:(long long)a0;
- (id)croppedButNotFilteredImageForDocumentAtIndex:(long long)a0;
- (BOOL)currentImageHasMarkup;
- (id)currentPageContentViewController;
- (void)deleteCurrentPage;
- (void)deselectFilterButtons;
- (void)didDismissMarkupViewController;
- (unsigned long long)documentCount;
- (void)filterButtonAction:(id)a0;
- (BOOL)filterViewControllerCanApplyToAll:(short)a0;
- (BOOL)filterViewControllerDidSelectFilter:(short)a0;
- (struct CGSize { double x0; double x1; })frameSizeForImageSize:(struct CGSize { double x0; double x1; })a0;
- (void)handleAccessibilityLongPressOnCollectionTitle:(id)a0;
- (void)hideBarsForZoomablePageContentViewController:(id)a0;
- (void)hideFilterViewIfNecessary;
- (id)imageForDocInfo:(id)a0 newFilter:(short)a1;
- (BOOL)imageIsPortrait:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })imageRectWithZoomAndPanForIndexPath:(id)a0;
- (struct CGSize { double x0; double x1; })imageSizeForDocumentAtIndex:(long long)a0;
- (id)indexPathForCurrentDocument;
- (BOOL)isShowingBarsForZoomablePageContentViewController:(id)a0;
- (id)makeUIImageFromCIImage:(id)a0;
- (double)normalizedPageViewControllerScrollPosition;
- (long long)orientationRotated90DegreesFromOrientation:(long long)a0;
- (id)orientationString:(long long)a0;
- (void)pencilDownInZoomablePageContentViewController:(id)a0;
- (void)recreateThumbnailContainerWithWidth:(double)a0 leadingTrailingMargin:(double)a1;
- (void)recropButtonPressed:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })recropTargetForIndexPath:(id)a0;
- (void)resetImageCentering;
- (void)respondToThumbnailLongPressGesture:(id)a0;
- (void)retakeAction:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })retakeTargetForIndexPath:(id)a0;
- (void)rotateAction:(id)a0;
- (void)rotateCurrentImage;
- (void)selectFilterButtons;
- (void)setCurrentThumbnailItem:(unsigned long long)a0 animated:(BOOL)a1;
- (void)setImage:(id)a0 forCell:(id)a1 useResizedImage:(BOOL)a2;
- (void)setupAccessibilityInfo;
- (void)setupThumbnailViewController;
- (void)showBarsForZoomablePageContentViewController:(id)a0;
- (void)showFilterViewIfNecessary;
- (void)showPrimaryControllerForNotes:(id)a0 animated:(BOOL)a1;
- (void)showViewControllerAtIndex:(unsigned long long)a0 animated:(BOOL)a1;
- (void)speakAccessibilityAnnouncementForMovingItemFromIndexPath:(id)a0 toIndexPath:(id)a1;
- (void)speakAccessibilityAnnouncementForReorderIfNecessaryForProposedIndexPath:(id)a0;
- (void)startMarkupViewController;
- (void)switchBarVisibilityForZoomablePageContentViewController:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })targetViewRect;
- (void)thumbnailContainerView:(id)a0 moveItemFromIndex:(long long)a1 toIndex:(long long)a2;
- (unsigned long long)thumbnailContainerViewCurrentIndex:(id)a0;
- (void)thumbnailContainerViewDecrementCurrentIndex:(id)a0;
- (void)thumbnailContainerViewIncrementCurrentIndex:(id)a0;
- (BOOL)thumbnailContainerViewIsVisible:(id)a0;
- (unsigned long long)thumbnailContainerViewNumberOfItems:(id)a0;
- (BOOL)thumbnailContainerViewSupportsReordering:(id)a0;
- (double)thumbnailToolbarHeight;
- (id)truncatedString:(id)a0 clipLength:(unsigned long long)a1;
- (void)updateDocumentImage:(id)a0;
- (void)updateFilterButtonItemAccessibilityInfo;
- (void)updateFilterViewLayoutIfNeeded;
- (void)updateImage:(id)a0 document:(id)a1 withFilterType:(short)a2;
- (void)updateImageViewAccessibilityForPageContentViewController:(id)a0;
- (void)updatePageIndicatorForPageIndex:(long long)a0;
- (void)updatePageViewControllerConstraints:(BOOL)a0 animationBlock:(id /* block */)a1 completionBlock:(id /* block */)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })zoomTargetForIndexPath:(id)a0;

@end
