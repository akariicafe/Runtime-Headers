@class NSDate, NSString, NSArray, ASLocation, ASEventUID, ASTimeZone, ASRecurrence, NSCalendarDate, NSNumber;

@interface ASEvent : ASChangedCollectionLeaf <NSSecureCoding, ESDataElement>

@property (class, readonly) BOOL supportsSecureCoding;

@property (nonatomic) int meetingResponseToEmailAbout;
@property (nonatomic) BOOL calculateNextStatusAsIfMeetingRequest;
@property (nonatomic) BOOL shouldUpdateStatus;
@property (nonatomic) BOOL cachedOrganizerIsSelf;
@property (nonatomic) BOOL haveCheckedOrganizerEmail;
@property (nonatomic) BOOL isAttendeeUpdateOnly;
@property (nonatomic) BOOL isDTStampUpdateOnly;
@property (readonly, nonatomic) int calAttendeeStatus;
@property (readonly, nonatomic) int calAttendeePendingStatus;
@property (readonly, nonatomic) int CalCalendarItemStatus;
@property (readonly, nonatomic) NSCalendarDate *startDateForCalFramework;
@property (readonly, nonatomic) NSCalendarDate *endDateForCalFramework;
@property (readonly, nonatomic) NSString *uidForCalFramework;
@property (retain, nonatomic) NSDate *exceptionDate;
@property (readonly, nonatomic) BOOL hasOccurrenceInTheFuture;
@property (readonly, nonatomic) BOOL isTombstoneEndTimeInFuture;
@property (nonatomic) int meetingResponseForEmail;
@property (nonatomic) void *calEvent;
@property (nonatomic) int localMask;
@property (nonatomic) int itemStatus;
@property (retain, nonatomic) ASTimeZone *timeZone;
@property (retain, nonatomic) NSNumber *allDayEvent;
@property (retain, nonatomic) NSString *body;
@property (nonatomic) BOOL bodyTruncated;
@property (retain, nonatomic) NSNumber *busyStatus;
@property (retain, nonatomic) NSArray *categories;
@property (retain, nonatomic) NSDate *dTStamp;
@property (retain, nonatomic) NSDate *endTime;
@property (retain, nonatomic) ASLocation *location;
@property (retain, nonatomic) NSNumber *meetingStatus;
@property (retain, nonatomic) NSString *organizerEmail;
@property (retain, nonatomic) NSString *organizerName;
@property (retain, nonatomic) NSNumber *reminderMinsBefore;
@property (retain, nonatomic) NSNumber *sensitivity;
@property (retain, nonatomic) NSString *subject;
@property (retain, nonatomic) NSDate *startTime;
@property (retain, nonatomic) NSArray *from;
@property (retain, nonatomic) NSNumber *disallowNewTimeProposal;
@property (retain, nonatomic) NSString *onlineMeetingExternalLink;
@property (retain, nonatomic) NSDate *tombstoneEndTime;
@property (retain, nonatomic) ASEventUID *eventUID;
@property (nonatomic) BOOL doNotSendBody;
@property (retain, nonatomic) NSArray *attendees;
@property (retain, nonatomic) NSArray *attendeesPendingDeletion;
@property (retain, nonatomic) ASRecurrence *recurrence;
@property (retain, nonatomic) NSArray *exceptions;
@property (retain, nonatomic) NSNumber *responseRequested;
@property (retain, nonatomic) NSNumber *responseType;
@property (retain, nonatomic) NSDate *appointmentReplyTime;
@property (retain, nonatomic) NSArray *attachments;
@property (retain, nonatomic) NSArray *deletedAttachmentsIDs;
@property (retain, nonatomic) NSString *responseComment;
@property (retain, nonatomic) NSDate *proposedStartTime;
@property (retain, nonatomic) NSDate *proposedEndTime;
@property (nonatomic) BOOL isOrganizerUpdate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)parsingLeafNode;
+ (void)_setFakeDTStampDateForUnitTests:(id)a0;
+ (BOOL)acceptsTopLevelLeaves;
+ (id)asParseRules;
+ (id)attendeeExternalRepClasses;
+ (id)calendarItemExternalRepClasses;
+ (id)eventWithCalEvent:(void *)a0 serverID:(id)a1 account:(id)a2;
+ (BOOL)frontingBasicTypes;
+ (BOOL)notifyOfUnknownTokens;
+ (BOOL)parsingWithSubItems;
+ (void)setSystemTimeZoneNameForUnitTests:(id)a0;

- (id)init;
- (void)dealloc;
- (void)encodeWithCoder:(id)a0;
- (BOOL)isEqualToEvent:(id)a0;
- (long long)dataclass;
- (void).cxx_destruct;
- (id)initWithCoder:(id)a0;
- (BOOL)deleteFromContainer:(void *)a0;
- (BOOL)loadLocalItemWithAccount:(id)a0;
- (BOOL)saveServerIDToExistingItem;
- (BOOL)saveWithLocalObject:(void *)a0 toContainer:(void *)a1 shouldMergeProperties:(BOOL)a2 outMergeDidChooseLocalProperties:(BOOL *)a3 account:(id)a4;
- (void)setLocalItem:(void *)a0;
- (void)loadClientIDs;
- (BOOL)_bailIfNotNewestDataForAccount:(id)a0;
- (id)_attachmentFromAttachmentRef:(void *)a0;
- (void)_determineSelfnessWithLocalEvent:(void *)a0 forAccount:(id)a1;
- (void)_loadAttachmentsChangesForEvent:(void *)a0 account:(id)a1;
- (void)_loadAttributesFromCalEvent:(void *)a0 forAccount:(id)a1;
- (int)_meetingResponseShouldUseEmail:(BOOL)a0 shouldFilterForEmail:(BOOL)a1;
- (int)_nextAttendeeStatusWithOldStatus:(int)a0 account:(id)a1;
- (int)_nextAttendeeStatusWithOldStatus:(int)a0 meetingClassType:(int)a1 account:(id)a2;
- (int)_nextEventStatusWithOldStatus:(int)a0 account:(id)a1;
- (int)_nextEventStatusWithOldStatus:(int)a0 meetingClassType:(int)a1 account:(id)a2;
- (void)_sanitizeLocalExceptionsForAccount:(id)a0;
- (BOOL)_selfIsMoreCorrectThanOtherEvent:(id)a0 account:(id)a1;
- (id)_transformedEndDateForActiveSync:(id)a0 isFloating:(BOOL)a1;
- (id)_transformedEndDateForCalFramework:(id)a0 startDate:(id)a1;
- (id)_transformedStartDateForActiveSync:(id)a0 isFloating:(BOOL)a1;
- (id)_transformedStartDateForCalFramework:(id)a0;
- (void)appendActiveSyncDataForTask:(id)a0 toWBXMLData:(id)a1;
- (BOOL)cachedOrganizerIsSelfWithAccount:(id)a0;
- (void *)copySelfAttendeeGeneratedIfNecessaryWithLocalEvent:(void *)a0 forAccount:(id)a1;
- (BOOL)deleteFromCalendar;
- (id)eventByMergingInEvent:(id)a0 account:(id)a1;
- (id)eventByMergingInLosingEvent:(id)a0 account:(id)a1;
- (BOOL)fillOutMissingExternalIdsForAccountID:(id)a0;
- (id)fullOrganizerString;
- (void)informExceptionsThatParentIsReadyForAccount:(id)a0;
- (id)initWithCalEvent:(void *)a0 serverID:(id)a1 account:(id)a2;
- (BOOL)loadCalRecordForAccount:(id)a0;
- (int)meetingResponseForAccount:(id)a0;
- (void)parseASParseContext:(id)a0 root:(id)a1 parent:(id)a2 callbackDict:(id)a3 streamCallbackDict:(id)a4 account:(id)a5;
- (void)postProcessApplicationData;
- (BOOL)purgeAttendeesPendingDeletionForAccountID:(id)a0;
- (BOOL)saveDetachedEventsWithExistingRecord:(void *)a0 intoCalendar:(void *)a1 shouldMergeProperties:(BOOL)a2 outMergeDidChooseLocalProperties:(BOOL *)a3 account:(id)a4;
- (BOOL)saveServerIDAndUidToCalendar;
- (BOOL)saveToCalendarWithExistingRecord:(void *)a0 intoCalendar:(void *)a1 shouldMergeProperties:(BOOL)a2 outMergeDidChooseLocalProperties:(BOOL *)a3 account:(id)a4;
- (int)selfAttendeeMeetingResponse;
- (BOOL)setCalEventWithExistingRecord:(void *)a0 intoCalendar:(void *)a1;
- (BOOL)shouldUseInMemoryAttendeesForAccount:(id)a0 numExistingAttendees:(unsigned long long)a1;
- (id)timeZoneForCalFramework;
- (id)timeZoneNameForCalFramework;
- (id)uidGeneratedIfNecessaryWithLocalEvent:(void *)a0 forAccount:(id)a1;
- (void)updateAttachmentsForAccountID:(id)a0;
- (BOOL)verifyExternalIdsForAccountID:(id)a0;

@end
