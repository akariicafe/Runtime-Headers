@class NSHTTPURLResponse, NSDate, NSURLSession, NSThread, ASTaskManager, NSString, DATaskManager, NSURLRequest, NSTimer, ASParseContext, ASItem, NSURLSessionDataTask, NSError;

@interface ASTask : NSObject <DATask, NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate> {
    BOOL _haveSwitchedCodePage;
    BOOL _haveParsedCommand;
    NSHTTPURLResponse *_response;
    NSURLSession *_session;
    NSURLSessionDataTask *_dataTask;
    NSURLRequest *_request;
    BOOL _isFakingIt;
    BOOL _didSendRequest;
    BOOL _didFailWithError;
    BOOL _didCancel;
    BOOL _didReceiveResponse;
    BOOL _didReceiveData;
    BOOL _didFinishLoading;
    BOOL _didReset;
    BOOL _finished;
    BOOL _finishedByTimeoutEnforcer;
    int _numBadPasswordResponses;
    BOOL _haveCheckedForTopLevelError;
    BOOL _handledTopLevelError;
    int _taskID;
    int _modalReason;
    int _modalPushCount;
    NSString *_lastKnownPolicyKey;
    NSError *_passwordNotificationError;
    NSDate *_dateConnectionWentOut;
    BOOL _retry;
    int _serverRequestedRetryCount;
}

@property (retain, nonatomic) DATaskManager *strongTaskManagerDuringDelegateCallout;
@property (retain, nonatomic) NSString *lastKnownPassword;
@property (retain, nonatomic) NSTimer *timeoutEnforcer;
@property (nonatomic) BOOL isLoadedOnMainThread;
@property (retain, nonatomic) NSThread *thread;
@property (weak, nonatomic) ASTaskManager *taskManager;
@property (weak, nonatomic) id delegate;
@property (readonly, nonatomic) ASParseContext *parseContext;
@property (retain, nonatomic) id context;
@property (nonatomic) int interfaceBinding;
@property (nonatomic) BOOL isExclusive;
@property (retain, nonatomic) ASItem *currentlyParsingItem;
@property (nonatomic) BOOL askedToCancelWhileModal;
@property (nonatomic) long long sentBytesCount;
@property (nonatomic) long long receivedBytesCount;
@property (copy, nonatomic) NSString *sourceApplicationBundleIdentifier;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)_restoreDefaultTaskTimeout;
+ (void)_setDefaultTaskTimeout:(double)a0 failureFallbackTimeout:(double)a1;

- (double)percentComplete;
- (void)URLSession:(id)a0 dataTask:(id)a1 didReceiveResponse:(id)a2 completionHandler:(id /* block */)a3;
- (void)URLSession:(id)a0 dataTask:(id)a1 didReceiveData:(id)a2;
- (id)requestBody;
- (void)URLSession:(id)a0 task:(id)a1 didReceiveChallenge:(id)a2 completionHandler:(id /* block */)a3;
- (id)init;
- (double)timeoutInterval;
- (void)reset;
- (void)dealloc;
- (void)URLSession:(id)a0 didBecomeInvalidWithError:(id)a1;
- (id)contentType;
- (void)URLSession:(id)a0 task:(id)a1 willPerformHTTPRedirection:(id)a2 newRequest:(id)a3 completionHandler:(id /* block */)a4;
- (int)taskID;
- (id)command;
- (void)URLSession:(id)a0 didReceiveChallenge:(id)a1 completionHandler:(id /* block */)a2;
- (void)URLSession:(id)a0 task:(id)a1 didCompleteWithError:(id)a2;
- (void)URLSession:(id)a0 task:(id)a1 needNewBodyStream:(id /* block */)a2;
- (void).cxx_destruct;
- (void)URLSession:(id)a0 task:(id)a1 didFinishCollectingMetrics:(id)a2;
- (id)httpMethod;
- (void)finishWithError:(id)a0;
- (id)_url;
- (void)loadRequest:(id)a0;
- (void)performTask;
- (void)cancelTaskWithReason:(int)a0 underlyingError:(id)a1;
- (id)onBehalfOfBundleIdentifier;
- (BOOL)shouldHoldPowerAssertion;
- (void)startModal;
- (int)numDownloadedElements;
- (void)tearDownResources;
- (BOOL)_canAuthenticateAgainstProtectionSpace:(id)a0;
- (void)_handleAuthenticationChallenge:(id)a0 completionHandler:(id /* block */)a1;
- (id)_applyAuthenticationChain:(id)a0 toRequest:(id)a1;
- (void)_assignConnectionProperties:(id)a0 toSessionConfiguration:(id)a1;
- (void)_failImmediately;
- (void)_handleBadPasswordResponse;
- (id)_requestForLogging;
- (id)_sessionForLogging;
- (void)reportStatusWithError:(id)a0;
- (void)_handleCompletion;
- (id)_getCredential:(id)a0;
- (void)_handleCredentialRenewalResult:(id)a0;
- (BOOL)processContext:(id)a0;
- (id)_HTTPMethodForRequest:(id)a0;
- (void)_URLSessionDataTaskDidReceiveData:(id)a0;
- (void)_URLSessionDidBecomeInvalidWithError:(id)a0;
- (void)_URLSessionTaskDidCompleteWithError:(id)a0;
- (void)_addAuthToRequest:(id)a0;
- (void)_continuePerformTask;
- (id)_easVersion;
- (BOOL)_handleCertificateError:(id)a0;
- (void)_handleCompletionError:(id)a0;
- (BOOL)_handleRedirect:(id)a0;
- (void)_initFakeParseContext;
- (BOOL)_isWBXML;
- (id)_policyKey;
- (void)_popModal;
- (void)_pushModalForReason:(int)a0;
- (void)_setHTTPParametersOnRequest:(id)a0 outBodyStream:(id *)a1 outBodyData:(id *)a2;
- (BOOL)_shouldRedirectToHTTPForRequest:(id)a0;
- (BOOL)_shouldSendAuthForRequest:(id)a0;
- (BOOL)_shouldUseUsernamePasswordForAuthenticationMethod:(id)a0;
- (void)_tearDownResourcesHelper;
- (void)_timeoutEnforcerFired:(id)a0;
- (void)_unitTestFinished;
- (BOOL)attemptRetryWithStatus:(long long)a0 error:(id)a1;
- (BOOL)checkForErrorInContext:(id)a0;
- (int)commandCode;
- (void)didCallOutToDelegate;
- (void)didProcessContext:(id)a0;
- (void)finishWithError:(id)a0 afterDelegateCallout:(id /* block */)a1;
- (BOOL)getTopLevelToken:(char *)a0 outStatusCodePage:(char *)a1 outStatusToken:(char *)a2;
- (void)handleTopLevelErrorStatus:(id)a0;
- (BOOL)isInCallOutToDelegate;
- (id)parameterData;
- (id)requestBodyStreamOutKnownSize:(int *)a0;
- (BOOL)requiresEASVersionInformaton;
- (BOOL)requiresEASVersionUpdate;
- (id)responseContentType;
- (BOOL)shouldHandlePasswordErrors;
- (BOOL)shouldHandleServerErrorRetryLater;
- (BOOL)shouldLogIncomingData;
- (BOOL)shouldReportTimeInNetwork;
- (BOOL)shouldStallAfterConnectionLost;
- (void)taskManagerDidFailToUpdatePolicyKey;
- (void)taskManagerDidFindEASVersion;
- (void)taskManagerDidUpdatePolicyKey;
- (long long)taskStatusForError:(id)a0;
- (long long)taskStatusForExchangeStatus:(int)a0;
- (void)tearDownResourcesAndCancelTask;
- (void)tearDownResourcesButLeaveSessionAlone;
- (void)willCallOutToDelegate;
- (void)willProcessContext;

@end
