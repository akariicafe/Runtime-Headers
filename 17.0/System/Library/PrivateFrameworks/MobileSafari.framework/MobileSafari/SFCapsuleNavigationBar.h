@class NSMutableDictionary, SFUnifiedTabBarItemTitleContainerView, _SFBarTheme, UIAction, PKScribbleInteraction, UILayoutGuide, UIView, NSString, _SFFluidProgressView, UITextField, NSIndexSet, NSMutableSet, NSArray, SFNavigationBarItem, NSNumber, NSTimer;
@protocol WBSUserDefaultObservation, _SFPopoverSourceInfo, SFCapsuleContentViewSizeUpdating, _SFBarRegistrationToken, _SFNavigationBarDelegateCommon;

@interface SFCapsuleNavigationBar : UIControl <SFNavigationBarItemObserver, _SFBarRegistrationObserving, SFCapsuleContentView, _SFFluidProgressViewDelegate, PKScribbleInteractionDelegate, _SFNavigationBarCommon> {
    SFUnifiedTabBarItemTitleContainerView *_titleContainer;
    NSMutableDictionary *_buttons;
    NSArray *_externalLeadingButtons;
    NSArray *_leadingButtons;
    UIView *_searchIndicatorView;
    UIAction *_currentAction;
    id<_SFBarRegistrationToken> _registration;
    NSArray *_leadingButtonConstraints;
    NSArray *_trailingButtonConstraints;
    NSArray *_buttonSpacingGuides;
    NSArray *_textVerticalAlignmentConstraints;
    UILayoutGuide *_textVerticalAlignmentGuide;
    _SFFluidProgressView *_progressView;
    NSArray *_labelLayoutInfos;
    NSArray *_iconLayoutInfos;
    NSIndexSet *_indexesOfIconsAfterTitle;
    NSMutableSet *_hiddenLabelTypes;
    NSTimer *_subtitleTimer;
    double _lastTitleContainerWidth;
    BOOL _isForSizing;
    BOOL _deferButtonAlphaUpdatesDuringLayout;
    id<WBSUserDefaultObservation> _debugObservation;
    NSArray *_progressViewConstraints;
}

@property (readonly, copy, nonatomic, getter=_labelTypes) NSArray *labelTypes;
@property (readonly, copy, nonatomic, getter=_iconTypes) NSArray *iconTypes;
@property (nonatomic, getter=_hidesTitle, setter=_setHidesTitle:) BOOL hidesTitle;
@property (retain, nonatomic) SFNavigationBarItem *item;
@property (copy, nonatomic) NSArray *leadingButtons;
@property (copy, nonatomic) NSArray *trailingButtons;
@property (nonatomic) BOOL isSelected;
@property (nonatomic) BOOL isMinimized;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } keyContentRect;
@property (nonatomic) long long layoutStyle;
@property (readonly, nonatomic) BOOL showingTransientLabel;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } urlSize;
@property (weak, nonatomic) id<_SFNavigationBarDelegateCommon> delegate;
@property (readonly, nonatomic) PKScribbleInteraction *scribbleInteraction;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<SFCapsuleContentViewSizeUpdating> sizeUpdater;
@property (nonatomic, setter=setHighlighted:) BOOL isHighlighted;
@property (copy, nonatomic) id /* block */ highlightObserver;
@property (retain, nonatomic) _SFBarTheme *theme;
@property (nonatomic) double minimizationPercent;
@property (nonatomic) struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } keyContentTransform;
@property (nonatomic) double nonKeyContentAlpha;
@property (readonly, nonatomic) double keyContentBaselineBottomInset;
@property (readonly, nonatomic) double keyContentCapHeightTopInset;
@property (readonly, nonatomic) NSNumber *microphoneContentOriginX;
@property (nonatomic) struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } microphoneContentTransform;
@property (copy, nonatomic) id /* block */ buttonPointerStyleProvider;
@property (weak, nonatomic) UIView *unclippedContainer;
@property (readonly, nonatomic) UITextField *textField;
@property (readonly, copy, nonatomic) NSArray *popoverPassthroughViews;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } URLOutlineFrameInNavigationBarSpace;
@property (readonly, nonatomic) id<_SFPopoverSourceInfo> formatMenuButtonPopoverSourceInfo;
@property (readonly, nonatomic) id<_SFPopoverSourceInfo> URLOutlinePopoverSourceInfo;

+ (BOOL)requiresConstraintBasedLayout;

- (void)updateAccessibilityIdentifier;
- (void)setMinimized:(BOOL)a0;
- (void)willChangeToMinimized:(BOOL)a0 coordinator:(id)a1;
- (void)_invalidateHeight;
- (void)navigationBarItemDidUpdateShowsStopReloadButtons:(id)a0;
- (void)cancelTrackingWithEvent:(id)a0;
- (void)_updateTitleContainerAlpha;
- (void)navigationBarItemDidUpdateFormatButtonSelected:(id)a0;
- (void)navigationBarItemDidUpdateText:(id)a0;
- (void)_updateLabelContentsAtIndexes:(id)a0 iconsAtIndexes:(id)a1;
- (void)navigationBarItemDidUpdateSecurityAnnotation:(id)a0;
- (void)_updateShowsPrivateAnnotation;
- (void)traitCollectionDidChange:(id)a0;
- (BOOL)_transitionFromButtons:(id)a0 toButtons:(id)a1 withConstraintsToDeactivate:(id)a2;
- (void)_createLeadingButtonConstraints;
- (void)_startTemporaryLabelTimerIfNeeded;
- (void)prepareForReuse;
- (id)initForSizingWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)initForSizingWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 layoutStyle:(long long)a1;
- (void)prepareForSizingNavigationBar:(id)a0;
- (void)_updateLabelContents;
- (void)animateLinkImage:(struct CGImage { } *)a0 fromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 inView:(id)a2 toBarItem:(long long)a3 afterImageDisappearsBlock:(id /* block */)a4 afterDestinationLayerBouncesBlock:(id /* block */)a5;
- (BOOL)_scribbleInteraction:(id)a0 shouldBeginAtLocation:(struct CGPoint { double x0; double x1; })a1;
- (void)_updateSecurityAnnotation;
- (void)updateConstraints;
- (void)navigationBarItemDidUpdateShowsLockIcon:(id)a0;
- (BOOL)_showsReaderAvailabilityText;
- (id)_iconForLabelType:(long long)a0;
- (id)popoverSourceInfoForBarItem:(long long)a0;
- (id)_textStyleForLabelType:(long long)a0 withLabelTypes:(id)a1;
- (BOOL)_shouldHideButtons;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })urlOutlineFrameRelativeToView:(id)a0;
- (id)_textForSubtitleType:(long long)a0;
- (void)animateSafariIconLinkFromPoint:(struct CGPoint { double x0; double x1; })a0 inView:(id)a1;
- (BOOL)_shouldCenterLabels;
- (void)navigationBarItemDidUpdateStopReloadButtonShowsStop:(id)a0;
- (BOOL)_shouldCenterButtonsBetweenEdgeAndTitle:(id)a0;
- (BOOL)_isTemporaryLabel:(long long)a0;
- (void)fluidProgressViewDidShowProgress:(id)a0;
- (BOOL)_shouldHideButtonsForMinimized:(BOOL)a0;
- (void)_updateLabelTypesAnimated:(BOOL)a0;
- (void)navigationBarItemDidUpdateShowsTranslationButton:(id)a0;
- (void)navigationBarItemDidUpdateShowsSearchIndicator:(id)a0;
- (void).cxx_destruct;
- (struct CGPoint { double x0; double x1; })_minimumEdgeMargin;
- (BOOL)_scribbleInteractionIsEnabled:(id)a0;
- (BOOL)_showsSearchIconInTitleContainer;
- (double)horizontalPointerPaddingForButton:(id)a0;
- (struct CGPoint { double x0; double x1; })_titleToEdgeMargin;
- (void)navigationBarItemDidUpdateShowsExtensionsAvailability:(id)a0;
- (double)_titleToButtonSpacing;
- (void)_subtitleTimerFired:(id)a0;
- (void)navigationBarItemDidUpdateShowsReaderButton:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 layoutStyle:(long long)a1;
- (void)navigationBarItemDidUpdateShowsTranslationIcon:(id)a0;
- (void)navigationBarItemDidUpdateShowsSiriReaderPlayingIcon:(id)a0;
- (BOOL)_scribbleInteraction:(id)a0 focusWillTransformElement:(id)a1;
- (void)_subtitleMarqueeStarted:(id)a0;
- (void)_updateButtonsTransform;
- (BOOL)_showsTranslationAvailabilityText;
- (double)_interButtonSpacing;
- (void)navigationBarItemDidUpdateNeedsExtensionBadge:(id)a0;
- (void)_createTrailingButtonConstraints;
- (void)layoutSubviews;
- (id)_textColorForLabelType:(long long)a0;
- (void)_updatePlaceholderText;
- (void)_setLabelTypes:(id)a0 iconTypes:(id)a1 animated:(BOOL)a2;
- (void)_scribbleInteraction:(id)a0 didFinishWritingInElement:(id)a1;
- (void)didCompleteBarRegistrationWithToken:(id)a0;
- (void)fluidProgressViewWillShowProgress:(id)a0;
- (void)_updateButtonAlphaForMinimizedPercent:(double)a0;
- (void)_scribbleInteraction:(id)a0 willBeginWritingInElement:(id)a1;
- (void)setSelected:(BOOL)a0;
- (id)initWithCoder:(id)a0;
- (void)_updateShowsProgressView;
- (void)_updatePageFormatButtonForNavigationBarItem:(id)a0 shouldResetDiscovery:(BOOL)a1;
- (id)_horizontalAlignmentConstraintForLabel:(id)a0;
- (void)navigationBarItemDidUpdateMediaStateIcon:(id)a0;
- (void)_updateProgressViewFillColor;

@end
