@class TSTTableStyle, TSTCell, TSTCellDictionary, TSKDocumentRoot, TSWPShapeStyle, TSTTableDataStore, TSTCellStyle, TSWPStorage, NSString, TSWPParagraphStyle, TSDFill, NSArray, TSDStroke;

@interface TSTTableModel : TSPObject {
    TSTTableDataStore *mDataStore;
    struct __CFUUID { } *mTableID;
    struct __CFUUID { } *mFromTableID;
    unsigned short mNumberOfRows;
    unsigned short mNumberOfColumns;
    unsigned short mNumberOfHeaderRows;
    unsigned short mNumberOfHeaderColumns;
    unsigned short mNumberOfFooterRows;
    BOOL mHeaderRowsFrozen;
    BOOL mHeaderColumnsFrozen;
    unsigned short mNumberOfFilteredRows;
    double mDefaultRowHeight;
    double mDefaultColumnWidth;
    NSString *mTableName;
    BOOL mTableNameEnabled;
    double mTableNameHeight;
    BOOL mTableNameBorderEnabled;
    BOOL mRepeatingHeaderRowsEnabled;
    BOOL mRepeatingHeaderColumnsEnabled;
    unsigned long long mPresetIndex;
    BOOL mStyleApplyClearsAll;
    struct { TSTTableStyle *tableStyle; TSTCellStyle *bodyCellStyle; TSTCellStyle *headerRowCellStyle; TSTCellStyle *headerColumnCellStyle; TSTCellStyle *footerRowCellStyle; TSWPParagraphStyle *bodyTextStyle; TSWPParagraphStyle *headerRowTextStyle; TSWPParagraphStyle *headerColumnTextStyle; TSWPParagraphStyle *footerRowTextStyle; TSWPParagraphStyle *tableNameStyle; TSWPShapeStyle *tableNameShapeStyle; } mStyles;
    struct _TSTDefaultCellBlock { TSTCell *defaultBodyCell; TSTCell *defaultHeaderRowCell; TSTCell *defaultHeaderColumnCell; TSTCell *defaultFooterRowCell; } mDefaultCells;
    TSWPStorage *mDeprecatedProvider;
}

@property (readonly, nonatomic) TSKDocumentRoot *documentRoot;
@property (readonly, nonatomic) struct __CFUUID { } *tableID;
@property (readonly, nonatomic) struct __CFUUID { } *fromTableID;
@property (retain, nonatomic) NSString *tableName;
@property (nonatomic) BOOL tableNameEnabled;
@property (nonatomic) double tableNameHeight;
@property (nonatomic) BOOL tableNameBorderEnabled;
@property (readonly, nonatomic) TSDStroke *tableNameBorderStroke;
@property (nonatomic) BOOL repeatingHeaderRowsEnabled;
@property (nonatomic) BOOL repeatingHeaderColumnsEnabled;
@property (nonatomic) BOOL styleApplyClearsAll;
@property (readonly, nonatomic) BOOL hasTableBorder;
@property (readonly, nonatomic) BOOL hasAlternatingRows;
@property (nonatomic) unsigned short numberOfRows;
@property (nonatomic) unsigned short numberOfColumns;
@property (nonatomic) unsigned short numberOfHeaderRows;
@property (nonatomic) unsigned short numberOfFooterRows;
@property (nonatomic) unsigned short numberOfHeaderColumns;
@property (readonly, nonatomic) unsigned short numberOfHiddenRows;
@property (readonly, nonatomic) unsigned short numberOfHiddenColumns;
@property (readonly, nonatomic) unsigned short numberOfUserHiddenRows;
@property (readonly, nonatomic) unsigned short numberOfUserHiddenColumns;
@property (readonly, nonatomic) unsigned short numberOfVisibleBodyRows;
@property (readonly, nonatomic) unsigned short numberOfVisibleBodyColumns;
@property (nonatomic) unsigned long long presetIndex;
@property (nonatomic) BOOL headerRowsFrozen;
@property (nonatomic) BOOL headerColumnsFrozen;
@property (readonly, nonatomic) TSTTableStyle *tableStyle;
@property (readonly, nonatomic) TSTCellStyle *bodyCellStyle;
@property (readonly, nonatomic) TSTCellStyle *headerRowCellStyle;
@property (readonly, nonatomic) TSTCellStyle *headerColumnCellStyle;
@property (readonly, nonatomic) TSTCellStyle *footerRowCellStyle;
@property (readonly, nonatomic) TSWPParagraphStyle *bodyTextStyle;
@property (readonly, nonatomic) TSWPParagraphStyle *headerRowTextStyle;
@property (readonly, nonatomic) TSWPParagraphStyle *headerColumnTextStyle;
@property (readonly, nonatomic) TSWPParagraphStyle *footerRowTextStyle;
@property (readonly, nonatomic) TSWPParagraphStyle *tableNameStyle;
@property (readonly, nonatomic) TSWPShapeStyle *tableNameShapeStyle;
@property (readonly, nonatomic) TSTCell *defaultBodyCell;
@property (readonly, nonatomic) TSTCell *defaultHeaderRowCell;
@property (readonly, nonatomic) TSTCell *defaultHeaderColumnCell;
@property (readonly, nonatomic) TSTCell *defaultFooterRowCell;
@property (readonly, nonatomic) TSDFill *backgroundFill;
@property (readonly, nonatomic) TSDFill *bodyFill;
@property (readonly, nonatomic) TSDFill *headerColumnsFill;
@property (readonly, nonatomic) TSDFill *headerRowsFill;
@property (readonly, nonatomic) TSDFill *footerRowsFill;
@property (readonly, nonatomic) TSDStroke *borderStrokeEvenIfNotVisible;
@property (readonly, nonatomic) TSDStroke *parentBorderStroke;
@property (readonly, nonatomic) TSDStroke *bodyColumnStroke;
@property (readonly, nonatomic) TSDStroke *bodyRowStroke;
@property (readonly, nonatomic) TSDStroke *headerColumnBorderStroke;
@property (readonly, nonatomic) TSDStroke *headerColumnBodyColumnStroke;
@property (readonly, nonatomic) TSDStroke *headerColumnBodyRowStroke;
@property (readonly, nonatomic) TSDStroke *headerColumnSeparatorStroke;
@property (readonly, nonatomic) TSDStroke *headerRowBorderStroke;
@property (readonly, nonatomic) TSDStroke *headerRowBodyColumnStroke;
@property (readonly, nonatomic) TSDStroke *headerRowBodyRowStroke;
@property (readonly, nonatomic) TSDStroke *headerRowSeparatorStroke;
@property (readonly, nonatomic) TSDStroke *footerRowBorderStroke;
@property (readonly, nonatomic) TSDStroke *footerRowBodyColumnStroke;
@property (readonly, nonatomic) TSDStroke *footerRowBodyRowStroke;
@property (readonly, nonatomic) TSDStroke *footerRowSeparatorStroke;
@property (nonatomic) BOOL wasUnarchivedFromAProvidedTable;
@property (readonly, nonatomic) TSTCellDictionary *cellsPendingWrite;
@property NSArray *rowHeights;
@property NSArray *columnWidths;

+ (struct { struct { unsigned short x0; unsigned char x1; unsigned char x2; } x0; struct { unsigned short x0; unsigned short x1; } x1; })cellRangeForTableArea:(unsigned int)a0 givenTableSize:(struct { unsigned short x0; unsigned short x1; })a1 numberOfHeaderRows:(unsigned short)a2 numberOfFooterRows:(unsigned short)a3 numberOfHeaderColumns:(unsigned short)a4;
+ (unsigned int)tableAreaForCellID:(struct { unsigned short x0; unsigned char x1; unsigned char x2; })a0 inTableWithHeaderColumns:(unsigned short)a1 headerRows:(unsigned short)a2 footerRows:(unsigned short)a3 totalRows:(unsigned short)a4;
+ (id)unnamedTableString;

- (struct { struct { unsigned short x0; unsigned char x1; unsigned char x2; } x0; struct { unsigned short x0; unsigned short x1; } x1; })range;
- (id)dataStore;
- (void)validate;
- (id)init;
- (void)dealloc;
- (void)setTableID:(struct __CFUUID { } *)a0;
- (struct { struct { unsigned short x0; unsigned char x1; unsigned char x2; } x0; struct { unsigned short x0; unsigned short x1; } x1; })bodyRange;
- (struct { struct { unsigned short x0; unsigned char x1; unsigned char x2; } x0; struct { unsigned short x0; unsigned short x1; } x1; })bodyColumnRange;
- (void)adoptStylesheet:(id)a0 withMapper:(id)a1;
- (id)allRichTextPayloadStorages;
- (id)bandedFillObject;
- (struct { struct { unsigned short x0; unsigned char x1; unsigned char x2; } x0; struct { unsigned short x0; unsigned short x1; } x1; })bodyRowRange;
- (struct { struct { unsigned short x0; unsigned char x1; unsigned char x2; } x0; struct { unsigned short x0; unsigned short x1; } x1; })cellRangeForTableArea:(unsigned int)a0;
- (id)cellRegionWithConditionalStyleMatchingCell:(struct { unsigned short x0; unsigned char x1; unsigned char x2; })a0;
- (int)defaultCell:(id)a0 forTableArea:(unsigned int)a1;
- (id)defaultCellForTableArea:(unsigned int)a0;
- (id)defaultCellStyleForTableArea:(unsigned int)a0;
- (void)defaultStrokesForCellID:(struct { unsigned short x0; unsigned char x1; unsigned char x2; })a0 inTableWithHeaderColumns:(unsigned short)a1 headerRows:(unsigned short)a2 footerRows:(unsigned short)a3 totalColumns:(unsigned short)a4 totalRows:(unsigned short)a5 tableArea:(unsigned int)a6 outTopStroke:(id *)a7 outLeftStroke:(id *)a8 outBottomStroke:(id *)a9 outRightStroke:(id *)a10;
- (void)defaultStrokesForCellID:(struct { unsigned short x0; unsigned char x1; unsigned char x2; })a0 outTopStroke:(id *)a1 outLeftStroke:(id *)a2 outBottomStroke:(id *)a3 outRightStroke:(id *)a4;
- (id)defaultTextStyleForTableArea:(unsigned int)a0;
- (struct { struct { unsigned short x0; unsigned char x1; unsigned char x2; } x0; struct { unsigned short x0; unsigned short x1; } x1; })footerRowRange;
- (BOOL)hasMergeRanges;
- (struct { struct { unsigned short x0; unsigned char x1; unsigned char x2; } x0; struct { unsigned short x0; unsigned short x1; } x1; })headerColumnRange;
- (struct { struct { unsigned short x0; unsigned char x1; unsigned char x2; } x0; struct { unsigned short x0; unsigned short x1; } x1; })headerRowRange;
- (int)hidingStateForColumn:(unsigned char)a0;
- (int)hidingStateForRow:(unsigned short)a0;
- (id)initWithContext:(id)a0 fromSourceModel:(id)a1 region:(id)a2 tableInfo:(id)a3;
- (id)initWithContext:(id)a0 rows:(unsigned short)a1 columns:(unsigned short)a2 styles:(id)a3 tableInfo:(id)a4;
- (BOOL)isColumnHidden:(unsigned char)a0 forAction:(int)a1;
- (BOOL)isRowHidden:(unsigned short)a0 forAction:(int)a1;
- (void)mapTableStylesToStylesheet:(id)a0 withMapper:(id)a1;
- (id)mergedGridIndicesForDirection:(int)a0;
- (struct { struct { unsigned short x0; unsigned char x1; unsigned char x2; } x0; struct { unsigned short x0; unsigned short x1; } x1; })minPopulatedCellRange;
- (void)moveCalcEngineReferencesFromSourceTable:(struct __CFUUID { } *)a0 sourceRange:(struct { struct { unsigned short x0; unsigned char x1; unsigned char x2; } x0; struct { unsigned short x0; unsigned short x1; } x1; })a1 sourceOffset:(struct { int x0; int x1; })a2;
- (void)p_fetchCellHoldingReadLock:(void *)a0 returnCode:(void *)a1;
- (void)p_releaseExistingDefaultStyles;
- (void)p_scaleStrokeFromProperty:(int)a0 style:(id)a1 pmap:(id)a2 scale:(double)a3;
- (void)p_scaleStrokesOnCell:(id)a0 atCellID:(struct { unsigned short x0; unsigned char x1; unsigned char x2; })a1 transformedObjects:(id)a2 scale:(double)a3;
- (void)private_validateMergeCellsPedantically;
- (void)resetStyles:(id)a0;
- (void)setBodyCellStyle:(id)a0;
- (void)setBodyTextStyle:(id)a0;
- (void)setDrawableIsBeingCopied:(BOOL)a0;
- (void)setFooterRowCellStyle:(id)a0;
- (void)setFooterRowTextStyle:(id)a0;
- (void)setHeaderColumnCellStyle:(id)a0;
- (void)setHeaderColumnTextStyle:(id)a0;
- (void)setHeaderRowCellStyle:(id)a0;
- (void)setHeaderRowTextStyle:(id)a0;
- (void)setHeight:(double)a0 ofRow:(unsigned short)a1;
- (void)setStorageParentToInfo:(id)a0;
- (void)setTableNameShapeStyle:(id)a0;
- (void)setTableNameStyle:(id)a0;
- (void)setTableStyle:(id)a0;
- (void)setWidth:(double)a0 ofColumn:(unsigned char)a1;
- (void)setupDefaultCells;
- (unsigned int)tableAreaForCellID:(struct { unsigned short x0; unsigned char x1; unsigned char x2; })a0;
- (void)transformStrokes:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a0 transformedObjects:(id)a1 inBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (void)upgradeFromPreUFF;
- (BOOL)useBandedFill;
- (void)validateStyles;

@end
