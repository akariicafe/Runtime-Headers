@class XBSnapshotContainerIdentity, NSString, NSDate, UIImage, XBDisplayEdgeInsetsWrapper, NSSet, NSDictionary, NSMutableDictionary, BSAtomicFlag, NSObject, XBStatusBarSettings, XBApplicationSnapshotGenerationContext;
@protocol XBSnapshotManifestStore, OS_os_transaction;

@interface XBApplicationSnapshot : NSObject <NSSecureCoding, BSDescriptionProviding> {
    NSMutableDictionary *_variantsByID;
    NSDate *_expirationDate;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _contentFrame;
    UIImage *_cachedImage;
    unsigned long long _imageAccessCount;
    BOOL _invalidated;
    BOOL _keepImageAccessUntilExpiration;
    BOOL _keepImageAccessForPreHeat;
    BSAtomicFlag *_hasProtectedContent;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _loadImageLock;
    NSString *_baseLogIdentifier;
    NSString *_logIdentifier;
    BOOL _logContainerIdentifierDirty;
    NSObject<OS_os_transaction> *_cachedImageTransaction;
}

@property (class, copy, nonatomic) NSSet *secureCodableCustomExtendedDataClasses;
@property (class, readonly) BOOL supportsSecureCoding;

@property (readonly, copy, nonatomic) NSString *_sortableLaunchInterfaceIdentifier;
@property (readonly, copy, nonatomic) NSString *_sortableRequiredOSVersion;
@property (readonly, copy, nonatomic) NSString *_sortableName;
@property (readonly, copy, nonatomic) NSString *_sortableScheme;
@property (readonly, retain, nonatomic) XBStatusBarSettings *_sortableStatusBarSettings;
@property (readonly, nonatomic) unsigned long long _interfaceOrientationMask;
@property (readonly, nonatomic) unsigned long long _contentTypeMask;
@property (copy) XBSnapshotContainerIdentity *containerIdentity;
@property (copy, nonatomic) id /* block */ imageGenerator;
@property (copy, nonatomic) NSString *dataProviderClassName;
@property (copy, nonatomic, getter=_relativePath, setter=_setRelativePath:) NSString *relativePath;
@property (copy, nonatomic, setter=_setPath:) NSString *path;
@property (copy, nonatomic, getter=filename, setter=_setFilename:) NSString *filename;
@property (readonly, nonatomic, getter=_store) id<XBSnapshotManifestStore> store;
@property (readonly, nonatomic) NSString *logIdentifier;
@property (nonatomic) long long fileLocation;
@property (copy, nonatomic) NSString *variantID;
@property (copy, nonatomic) NSString *launchInterfaceIdentifier;
@property (nonatomic) double imageScale;
@property (nonatomic, getter=isImageOpaque) BOOL imageOpaque;
@property (nonatomic) struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } imageTransform;
@property (nonatomic) long long imageOrientation;
@property (readonly, nonatomic) XBApplicationSnapshotGenerationContext *generationContext;
@property (readonly, copy, nonatomic) NSString *identifier;
@property (readonly, copy, nonatomic) NSString *groupID;
@property (copy, nonatomic) NSString *name;
@property (copy, nonatomic) NSString *scheme;
@property (copy, nonatomic) NSString *requiredOSVersion;
@property (readonly, nonatomic) BOOL fileExists;
@property (readonly, nonatomic) long long fileFormat;
@property (readonly, nonatomic) NSDate *creationDate;
@property (retain, nonatomic) NSDate *lastUsedDate;
@property (retain, nonatomic) NSDate *expirationDate;
@property (readonly, nonatomic, getter=isExpired) BOOL expired;
@property (nonatomic) long long contentType;
@property (nonatomic, getter=isFullScreen) BOOL fullScreen;
@property (nonatomic) struct CGSize { double width; double height; } referenceSize;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } naturalSize;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } contentFrame;
@property (readonly, nonatomic) BOOL hasFullSizedContent;
@property (nonatomic) long long interfaceOrientation;
@property (nonatomic) long long userInterfaceStyle;
@property (retain, nonatomic) XBDisplayEdgeInsetsWrapper *customSafeAreaInsets;
@property (copy, nonatomic) XBStatusBarSettings *statusBarSettings;
@property (nonatomic) long long classicMode;
@property (nonatomic) long long compatibilityMode;
@property (nonatomic) long long backgroundStyle;
@property (readonly, nonatomic) BOOL hasProtectedContent;
@property (copy) NSDictionary *extendedData;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)isValidImageFileExtension:(id)a0;
+ (id)normalizeSnapshotName:(id)a0;
+ (struct CGImage { } *)_createCGImageWithPreferredOptions:(id)a0 fromCGImage:(struct CGImage { } *)a1;
+ (id)dataForImage:(id)a0 withFormat:(long long)a1;
+ (id)_allSecureCodingClassesIncludingDefaultAndClientSpecified;

- (id)variants;
- (void)_commonInitWithIdentifier:(id)a0;
- (id)descriptionWithoutVariants;
- (void)setImageGeneratingByProvider:(id)a0 withBlockingImageGenerator:(id /* block */)a1;
- (void)loadImageForPreHeat;
- (id)_configureDefaultPathWithinGroupForFormat:(long long)a0;
- (id)init;
- (void)dealloc;
- (id)_createVariantWithIdentifier:(id)a0;
- (void)_locked_loadImageViaGeneratorFunction:(id /* block */)a0;
- (id)succinctDescriptionBuilder;
- (void)setExpirationDate:(id)a0;
- (id)imageForInterfaceOrientation:(long long)a0;
- (BOOL)hasCachedImage;
- (void)_locked_loadImageViaGenerationContext:(id)a0 options:(unsigned long long)a1;
- (BOOL)_synchronized_hasCachedImage:(id *)a0;
- (void)encodeWithCoder:(id)a0;
- (void)beginImageAccessUntilExpiration;
- (id)variantWithIdentifier:(id)a0;
- (void)_invalidate;
- (void)_endPreHeatImageAccess;
- (BOOL)_hasGenerationContext;
- (id)expirationDate;
- (id)descriptionBuilderWithMultilinePrefix:(id)a0;
- (void)_manifestQueueDecode_setStore:(id)a0;
- (void)_cacheImage:(id)a0;
- (void)_setHasProtectedContent:(BOOL)a0;
- (id)imageForInterfaceOrientation:(long long)a0 generationOptions:(unsigned long long)a1;
- (void)_purgeCachedImageIfAppropriate:(BOOL)a0;
- (void)loadImage;
- (id)_cachedImage;
- (void)loadImageWithGenerationOptions:(unsigned long long)a0;
- (BOOL)isValid;
- (id)_initWithContainerIdentity:(id)a0 store:(id)a1 groupID:(id)a2 generationContext:(id)a3;
- (id)descriptionWithMultilinePrefix:(id)a0;
- (id)_sanitizedPathForPath:(id)a0;
- (BOOL)_path:(id)a0 isRelativeToPath:(id)a1 outRelativePath:(id *)a2;
- (BOOL)_generateImageIfPossible;
- (id)_descriptionBuilderWithMultilinePrefix:(id)a0 includeVariants:(BOOL)a1;
- (void)_synchronized_evaluateImageAccessUntilExpirationEnablingIfNecessary:(BOOL)a0;
- (BOOL)_synchronized_isExpired;
- (void)willDeleteVariant:(id)a0;
- (void).cxx_destruct;
- (void)_beginPreHeatImageAccess;
- (long long)_fileLocation;
- (BOOL)_isInvalidated;
- (void)_configureWithPath:(id)a0;
- (BOOL)isValidWithReason:(id *)a0;
- (id)succinctDescription;
- (void)clearImageGenerator;
- (BOOL)isEqual:(id)a0;
- (void)purgeImage;
- (BOOL)_validateWithContainerIdentity:(id)a0;
- (BOOL)_shouldDeleteFileOnPurge:(id *)a0;
- (void)_locked_synchronized_loadImageViaFile;
- (id)descriptionForStateCaptureWithMultilinePrefix:(id)a0;
- (id)cachedImageForInterfaceOrientation:(long long)a0;
- (void)beginImageAccess;
- (id)_determineRelativePathForPath:(id)a0 location:(long long *)a1;
- (void)endImageAccess;
- (void)_setFileLocation:(long long)a0;
- (id)initWithCoder:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_referenceBounds;

@end
