@class NSString, NSArray, AXMTaskDispatcher, _AXMVisionEngineAnalysisTask, AXMSequenceRequestManager, NSObject, AXMService, NSMutableArray, AXMImageRegistrationNode, AXMVisionEngineCache;
@protocol OS_dispatch_queue;

@interface AXMVisionEngine : NSObject <AXMVisionEngineNodeConnectionDelegate, AXMTaskDispatcherDelegate, AXMServiceDelegate, NSCopying, NSSecureCoding, AXMDescribing> {
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableArray *_queue_sourceNodes;
    NSMutableArray *_queue_evaluationNodes;
    AXMImageRegistrationNode *_queue_imageRegistrationNode;
    NSMutableArray *_queue_resultHandlers;
    BOOL _queue_shouldNotifyServiceOfEngineConfigChange;
    _AXMVisionEngineAnalysisTask *_queue_currentTask;
}

@property (class, readonly) BOOL supportsSecureCoding;

@property (copy) NSString *identifier;
@property (retain, nonatomic) AXMService *axMediaUtilsService;
@property (retain, nonatomic) AXMVisionEngineCache *cache;
@property (retain, nonatomic) AXMTaskDispatcher *taskDispatcher;
@property (retain, nonatomic) AXMSequenceRequestManager *sequenceRequestManager;
@property (readonly, nonatomic) NSArray *sourceNodes;
@property (readonly, nonatomic) NSArray *evaluationNodes;
@property long long maximumQueueSize;
@property BOOL prioritySchedulingEnabled;
@property BOOL prioritySchedulingAllowMultipleNodeExecution;
@property unsigned long long thresholdPriority;
@property (nonatomic) BOOL imageRegistrationFilteringEnabled;
@property (nonatomic) long long minimumImageRegistrationSignalLevel;
@property (readonly, nonatomic) BOOL isCachingEnabled;
@property (readonly, nonatomic) long long cacheSize;
@property (nonatomic, getter=areDiagnosticsEnabled) BOOL diagnosticsEnabled;
@property (nonatomic) BOOL disableResultLogging;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)initWithIdentifier:(id)a0;
- (void)encodeWithCoder:(id)a0;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)_commonInit;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)purgeResources:(id /* block */)a0;
- (void)addSourceNodes:(id)a0 evaluationNodes:(id)a1;
- (void)captureSessionNodeDidDropFrame:(id)a0;
- (void)_invokeFullQueueResultHandlersForContext:(id)a0;
- (void)_invokeResultHandlers:(id)a0 withError:(id)a1;
- (void)_invokeResultHandlers:(id)a0 withResult:(id)a1;
- (BOOL)_queue_activeEvaluationNodesExclusivelyUseVisionFramework:(id)a0;
- (id)_queue_activeEvaluationNodesForOptions:(id)a0 applyPriorityScheduling:(BOOL)a1 prioritySchedulingAllowMultipleNodeExecution:(BOOL)a2;
- (void)_queue_addResultHandler:(id /* block */)a0;
- (void)_queue_evaluateWithSource:(id)a0 context:(id)a1;
- (id)_queue_evaluationNodeWithIdentifier:(id)a0;
- (void)_queue_handleEvaluatedContext:(id)a0 result:(id)a1 error:(id)a2;
- (void)_queue_logEvaluatedResult:(id)a0;
- (id)_queue_makeUniqueIdentifierForNode:(Class)a0;
- (BOOL)_queue_nodeIdentifierExists:(id)a0;
- (void)_queue_remotelyEvaluateWithSource:(id)a0 context:(id)a1;
- (void)_queue_removeAllResultHandlers;
- (void)_queue_removeResultHandler:(id /* block */)a0;
- (BOOL)_queue_shouldContinueWithoutResultHandlers:(id)a0;
- (BOOL)_queue_shouldEvaluateNode:(id)a0 withOptions:(id)a1;
- (id)_queue_sourceNodeWithIdentifier:(id)a0;
- (void)addEvaluationNode:(id)a0;
- (void)addResultHandler:(id /* block */)a0;
- (void)addSourceNode:(id)a0;
- (void)axMediaUtilitiesService:(id)a0 eventOccurred:(long long)a1;
- (void)axmAppendRecursiveDescription:(id)a0 withIndentation:(long long)a1;
- (id)axmDescription;
- (BOOL)canAddEvaluationNode:(id)a0;
- (BOOL)canAddEvaluationNodeClass:(Class)a0;
- (BOOL)canAddSourceNode:(id)a0;
- (BOOL)canAddSourceNodeClass:(Class)a0;
- (void)captureSessionNodeDidBeginProcessingFrames:(id)a0;
- (void)captureSessionNodeDidEndProcessingFrames:(id)a0;
- (void)captureSessionNodeWillProcessFrame:(id)a0;
- (BOOL)diagnosticsEnabled:(id)a0;
- (void)disableResultCaching;
- (void)dispatcher:(id)a0 handleTask:(id)a1;
- (void)enableResultCachingWithCacheSize:(long long)a0;
- (BOOL)engineWillAcceptTiggerWithSource:(id)a0;
- (id)evaluationNodeWithIdentifier:(id)a0;
- (void)insertEvaluationNode:(id)a0 atIndex:(long long)a1;
- (void)insertSourceNode:(id)a0 atIndex:(long long)a1;
- (BOOL)isEqualToEngine:(id)a0;
- (id)makeUniqueIdentifierForNode:(Class)a0;
- (BOOL)nodeIdentifierExists:(id)a0;
- (void)prewarmEngine;
- (void)removeAllEvaluationNodes;
- (void)removeAllResultHandlers;
- (void)removeAllSourceNodes;
- (void)removeEvaluationNode:(id)a0;
- (void)removeResultHandler:(id /* block */)a0;
- (void)removeSourceNode:(id)a0;
- (id)resultHandlers;
- (id)sourceNodeWithIdentifier:(id)a0;
- (void)triggerWithSource:(id)a0 context:(id)a1;
- (void)updateEngineConfiguration:(id /* block */)a0;

@end
