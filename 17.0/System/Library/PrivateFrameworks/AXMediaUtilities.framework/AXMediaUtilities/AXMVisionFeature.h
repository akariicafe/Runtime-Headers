@class NSMutableDictionary, AXMVisionFeatureFaceDetectionResult, NSDictionary, NSObject, CMDeviceMotion, AXMVisionFeatureAestheticsResult, AXMVisionFeatureAssetMetadata, NSString, AXMVisionFeatureColorInfo, NSSet, NSMutableSet, AXMTranslatedText, NSArray;
@protocol NSSecureCoding;

@interface AXMVisionFeature : NSObject <AXMJSONSerializable, NSSecureCoding> {
    unsigned long long _featureType;
    NSArray *_subfeatures;
    NSString *_barcodeType;
    long long _ocrFeatureType;
    NSArray *_effectiveTextDetectionLocales;
    double _creationDate;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _frame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _normalizedFrame;
    NSString *_value;
    BOOL _isValueSpeakable;
    AXMVisionFeatureColorInfo *_colorInfo;
    AXMVisionFeatureAssetMetadata *_assetMetadata;
    double _blur;
    double _brightness;
    double _confidence;
    BOOL _isLowConfidence;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _horizonTransform;
    float _horizonAngle;
    AXMVisionFeatureFaceDetectionResult *_faceDetectionResult;
    unsigned long long _faceId;
    struct { void /* unknown type, empty encoding */ columns[4]; } _facePose;
    struct CGSize { double width; double height; } _canvasSize;
    NSString *_modelID;
    NSString *_classificationLabel;
    NSString *_classificationLocalizedValue;
    NSString *_caption;
    AXMTranslatedText *_translatedCaption;
    NSMutableDictionary *_featureGates;
    NSMutableSet *_detectorSceneClassIds;
    NSString *_sceneClassId;
    NSString *_mediaAnalysisImageCaption;
    double _mediaAnalysisImageCaptionConfidence;
    AXMTranslatedText *_mediaAnalysisTranslatedImageCaption;
    AXMVisionFeatureFaceDetectionResult *_mediaAnalysisFaceDetectionResult;
    unsigned long long _mediaAnalysisFaceId;
}

@property (class, readonly) BOOL supportsSecureCoding;

@property (retain, nonatomic) NSObject<NSSecureCoding> *userContext;
@property (retain, nonatomic) NSDictionary *debugRectangles;
@property (retain, nonatomic) NSString *overrideLabel;
@property (readonly, nonatomic) unsigned long long featureType;
@property (readonly, nonatomic) BOOL isBarcode;
@property (readonly, nonatomic) BOOL isFace;
@property (readonly, nonatomic) BOOL isRealtimeFace;
@property (readonly, nonatomic) BOOL isPerson;
@property (readonly, nonatomic) BOOL isSceneClassification;
@property (readonly, nonatomic) BOOL isObjectClassification;
@property (readonly, nonatomic) BOOL isNSFWClassification;
@property (readonly, nonatomic) BOOL isSignificantEventClassification;
@property (readonly, nonatomic) BOOL isBrightness;
@property (readonly, nonatomic) BOOL isBlur;
@property (readonly, nonatomic) BOOL isHorizon;
@property (readonly, nonatomic) BOOL isColor;
@property (readonly, nonatomic) BOOL isMediaLegibility;
@property (readonly, nonatomic) BOOL isAssetMetadata;
@property (readonly, nonatomic) BOOL isRectangle;
@property (readonly, nonatomic) BOOL isModelClassification;
@property (readonly, nonatomic) BOOL isCaption;
@property (readonly, nonatomic) BOOL isMotion;
@property (readonly, nonatomic) BOOL isCameraMetadata;
@property (readonly, nonatomic) BOOL isProminentObject;
@property (readonly, nonatomic) BOOL isIconClass;
@property (readonly, nonatomic) BOOL isImageAesthetics;
@property (readonly, nonatomic) BOOL isOCR;
@property (readonly, nonatomic) BOOL isTextDocument;
@property (readonly, nonatomic) BOOL isTextRegion;
@property (readonly, nonatomic) BOOL isTextLine;
@property (readonly, nonatomic) BOOL isTextSequence;
@property (readonly, nonatomic) BOOL isTable;
@property (readonly, nonatomic) BOOL isTableRow;
@property (readonly, nonatomic) BOOL isTableColumn;
@property (readonly, nonatomic) BOOL isTableCell;
@property (readonly, nonatomic) BOOL isNutritionLabel;
@property (readonly, nonatomic) BOOL isTextCharacter;
@property (readonly, nonatomic) BOOL isTextDiacritic;
@property (readonly, nonatomic) BOOL isEnvelope;
@property (readonly, nonatomic) BOOL isReceipt;
@property (readonly, nonatomic) BOOL isMediaAnalysisImageCaption;
@property (readonly, nonatomic) BOOL isMediaAnalysisSceneClassification;
@property (readonly, nonatomic) BOOL isMediaAnalysisObjectClassification;
@property (readonly, nonatomic) BOOL isMediaAnalysisProminentObject;
@property (readonly, nonatomic) BOOL isMediaAnalysisNSFWClassification;
@property (readonly, nonatomic) BOOL isMediaAnalysisSignificantEventClassification;
@property (readonly, nonatomic) BOOL isMediaAnalysisFace;
@property (readonly, nonatomic) NSArray *recognizedTextFeatures;
@property (readonly, nonatomic) NSArray *subfeatures;
@property (readonly, nonatomic) double creationDate;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } canvasSize;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } frame;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } normalizedFrame;
@property (readonly, nonatomic) double confidence;
@property (readonly, nonatomic) BOOL isLowConfidence;
@property (readonly, nonatomic) NSString *value;
@property (readonly, nonatomic) NSArray *values;
@property (readonly, nonatomic) BOOL isValueSpeakable;
@property (readonly, nonatomic) NSString *classificationLabel;
@property (readonly, nonatomic) NSString *classificationLocalizedValue;
@property (nonatomic) long long uiClass;
@property (readonly, nonatomic) NSString *caption;
@property (readonly, nonatomic) AXMTranslatedText *translatedCaption;
@property (readonly, nonatomic) NSString *barcodeType;
@property (readonly, nonatomic) long long ocrFeatureType;
@property (readonly, nonatomic) AXMVisionFeatureColorInfo *colorInfo;
@property (readonly, nonatomic) AXMVisionFeatureAssetMetadata *assetMetadata;
@property (readonly, nonatomic) double blur;
@property (readonly, nonatomic) NSString *mediaAnalysisImageCaption;
@property (readonly, nonatomic) double mediaAnalysisImageCaptionConfidence;
@property (readonly, nonatomic) AXMTranslatedText *mediaAnalysisTranslatedImageCaption;
@property (readonly, nonatomic) AXMVisionFeatureFaceDetectionResult *mediaAnalysisFaceDetectionResult;
@property (readonly, nonatomic) unsigned long long mediaAnalysisFaceId;
@property (readonly, nonatomic) double brightness;
@property (readonly, nonatomic) AXMVisionFeatureFaceDetectionResult *faceDetectionResult;
@property (readonly, nonatomic) unsigned long long faceId;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } unpaddedDetectedFaceRect;
@property (readonly, nonatomic) struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } horizonTransform;
@property (readonly, nonatomic) float horizonAngle;
@property (readonly, nonatomic) AXMVisionFeatureAestheticsResult *aestheticsResult;
@property (readonly, nonatomic) CMDeviceMotion *deviceMotion;
@property (readonly, nonatomic) long long deviceOrientation;
@property (readonly, nonatomic) long long cameraType;
@property (readonly, nonatomic) NSDictionary *featureGates;
@property (readonly, nonatomic) NSSet *detectorSceneClassIds;
@property (readonly, nonatomic) NSString *sceneClassId;
@property (nonatomic) BOOL captionMayContainSensitiveContent;
@property (nonatomic) struct CGPoint { double x; double y; } activationPoint;
@property (readonly, nonatomic) NSDictionary *dictionaryRepresentation;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)nameForUIClass:(long long)a0;
+ (id)textLineWithText:(id)a0 boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 recognizedTextFeatures:(id)a2 canvasSize:(struct CGSize { double x0; double x1; })a3;
+ (long long)uiClassForName:(id)a0;
+ (void)_append:(id)a0 toList:(id)a1;
+ (id)featureWithMetadata:(id)a0 interfaceOrientation:(long long)a1 isMirrored:(BOOL)a2 canvasSize:(struct CGSize { double x0; double x1; })a3;
+ (id)nameForOCRType:(long long)a0;
+ (id)nutritionLabelWithText:(id)a0 isSpeakable:(BOOL)a1 boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 rows:(id)a3 canvasSize:(struct CGSize { double x0; double x1; })a4;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_aspectFaceRectFromSquareFaceRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 sizeInPixels:(struct CGSize { double x0; double x1; })a1;
+ (id)envelopeRegion:(id)a0 boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 confidence:(double)a2 canvasSize:(struct CGSize { double x0; double x1; })a3;
+ (id)envelopeWithText:(id)a0 isSpeakable:(BOOL)a1 boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 regions:(id)a3 canvasSize:(struct CGSize { double x0; double x1; })a4;
+ (id)featureWithAssetMetadata:(id)a0;
+ (id)featureWithCameraType:(long long)a0;
+ (id)featureWithCaptionResult:(id)a0 confidence:(double)a1 translatedCaption:(id)a2 modelIdentifier:(id)a3 canvasSize:(struct CGSize { double x0; double x1; })a4 isLowConfidence:(BOOL)a5;
+ (id)featureWithColorInfo:(id)a0 canvasSize:(struct CGSize { double x0; double x1; })a1;
+ (id)featureWithDeviceMotion:(id)a0 orientation:(long long)a1;
+ (id)featureWithFaceDetectionResult:(id)a0 canvasSize:(struct CGSize { double x0; double x1; })a1;
+ (id)featureWithIconClass:(id)a0 confidence:(double)a1;
+ (id)featureWithImageAestheticsObservation:(id)a0;
+ (id)featureWithMediaAnalysisFaceDetectionResult:(id)a0 canvasSize:(struct CGSize { double x0; double x1; })a1;
+ (id)featureWithMediaAnalysisImageCaptionResult:(id)a0 confidence:(double)a1 translatedCaption:(id)a2;
+ (id)featureWithMediaAnalysisTaxonomyNode:(id)a0 canvasSize:(struct CGSize { double x0; double x1; })a1;
+ (id)featureWithMediaLegibility:(id)a0;
+ (id)featureWithTaxonomyNode:(id)a0 canvasSize:(struct CGSize { double x0; double x1; })a1;
+ (id)featureWithVisionRequest:(id)a0 axElementRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 confidence:(double)a2 uiClass:(long long)a3 label:(id)a4 canvasSize:(struct CGSize { double x0; double x1; })a5;
+ (id)featureWithVisionRequest:(id)a0 blurValue:(float)a1 canvasSize:(struct CGSize { double x0; double x1; })a2;
+ (id)featureWithVisionRequest:(id)a0 brightnessValue:(float)a1 canvasSize:(struct CGSize { double x0; double x1; })a2;
+ (id)featureWithVisionRequest:(id)a0 horizonResult:(id)a1 canvasSize:(struct CGSize { double x0; double x1; })a2;
+ (id)featureWithVisionRequest:(id)a0 modelClassificationResult:(id)a1 modelIdentifier:(id)a2 canvasSize:(struct CGSize { double x0; double x1; })a3;
+ (id)featureWithVisionRequest:(id)a0 rectangleResult:(id)a1 canvasSize:(struct CGSize { double x0; double x1; })a2;
+ (id)filterFeatureList:(id)a0 basedOnSceneClassIdsForFeature:(id)a1;
+ (id)flattenedFeatureList:(id)a0;
+ (id)groupedFeatureWithElementRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 uiClass:(long long)a1 confidence:(double)a2 label:(id)a3 canvasSize:(struct CGSize { double x0; double x1; })a4 subElements:(id)a5;
+ (id)localizedStringForLocation:(long long)a0 isSubjectImplicit:(BOOL)a1;
+ (long long)locationForNormalizedFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 previousLocation:(long long)a1 usingThirds:(BOOL)a2;
+ (id)mediaAnalysisNSFWClassificationWithCategory:(id)a0 confidence:(float)a1 canvasSize:(struct CGSize { double x0; double x1; })a2;
+ (id)mediaAnalysisObjectClassificationWithLabel:(id)a0 localizedValue:(id)a1 boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 confidence:(float)a3 canvasSize:(struct CGSize { double x0; double x1; })a4 sceneClassId:(id)a5;
+ (id)mediaAnalysisProminentObjectWithBoundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 canvasSize:(struct CGSize { double x0; double x1; })a1 confidence:(double)a2;
+ (id)mediaAnalysisSceneClassificationWithLabel:(id)a0 localizedValue:(id)a1 confidence:(float)a2 canvasSize:(struct CGSize { double x0; double x1; })a3;
+ (id)mediaAnalysisSignificantEventClassificationWithCategory:(id)a0 confidence:(float)a1 canvasSize:(struct CGSize { double x0; double x1; })a2;
+ (id)nameForFeatureType:(unsigned long long)a0;
+ (id)nameForLocation:(long long)a0;
+ (id)nsfwClassificationWithCategory:(id)a0 confidence:(float)a1 canvasSize:(struct CGSize { double x0; double x1; })a2;
+ (id)objectClassificationWithLabel:(id)a0 localizedValue:(id)a1 boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 confidence:(float)a3 canvasSize:(struct CGSize { double x0; double x1; })a4 sceneClassId:(id)a5;
+ (id)personWithBoundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 confidence:(double)a1 canvasSize:(struct CGSize { double x0; double x1; })a2;
+ (id)prominentObjectWithBoundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 canvasSize:(struct CGSize { double x0; double x1; })a1 confidence:(double)a2;
+ (id)receiptWithText:(id)a0 isSpeakable:(BOOL)a1 boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 regions:(id)a3 canvasSize:(struct CGSize { double x0; double x1; })a4;
+ (id)sceneClassificationWithLabel:(id)a0 localizedValue:(id)a1 confidence:(float)a2 canvasSize:(struct CGSize { double x0; double x1; })a3;
+ (id)significantEventClassificationWithCategory:(id)a0 confidence:(float)a1 canvasSize:(struct CGSize { double x0; double x1; })a2;
+ (id)tableCellWithText:(id)a0 boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 confidence:(double)a2 recognizedTextFeatures:(id)a3 canvasSize:(struct CGSize { double x0; double x1; })a4 isHeader:(BOOL)a5;
+ (id)tableColumnWithText:(id)a0 boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 cells:(id)a2 canvasSize:(struct CGSize { double x0; double x1; })a3;
+ (id)tableRowWithText:(id)a0 boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 cells:(id)a2 canvasSize:(struct CGSize { double x0; double x1; })a3;
+ (id)tableWithText:(id)a0 isSpeakable:(BOOL)a1 boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 rows:(id)a3 columns:(id)a4 canvasSize:(struct CGSize { double x0; double x1; })a5 isIncomplete:(BOOL)a6;
+ (id)textDocumentWithText:(id)a0 isSpeakable:(BOOL)a1 boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 regions:(id)a3 canvasSize:(struct CGSize { double x0; double x1; })a4;
+ (id)textRegionWithText:(id)a0 isSpeakable:(BOOL)a1 boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 lines:(id)a3 canvasSize:(struct CGSize { double x0; double x1; })a4;
+ (id)textSequence:(id)a0 boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 recognizedTextFeatures:(id)a2 confidence:(double)a3 canvasSize:(struct CGSize { double x0; double x1; })a4;
+ (id)unitTestingFaceFeature;
+ (id)unitTestingFaceFeatureWithSize:(struct CGSize { double x0; double x1; })a0 faceFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
+ (id)unitTestingFeature;
+ (id)unitTestingFeatureWithType:(unsigned long long)a0 canvasSize:(struct CGSize { double x0; double x1; })a1 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 value:(id)a3 barcodeType:(id)a4 ocrFeatureType:(long long)a5 subFeatures:(id)a6;
+ (id)unitTestingFeatureWithType:(unsigned long long)a0 canvasSize:(struct CGSize { double x0; double x1; })a1 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 value:(id)a3 valueIsSpeakable:(BOOL)a4 barcodeType:(id)a5 ocrFeatureType:(long long)a6 subFeatures:(id)a7;
+ (id)unitTestingHorizonFeature;
+ (id)unitTestingProminentObjectFeature;
+ (id)unitTestingTeatureWithType:(unsigned long long)a0 axElementRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 confidence:(double)a2 uiClass:(long long)a3 label:(id)a4 canvasSize:(struct CGSize { double x0; double x1; })a5;

- (id)_init;
- (void)encodeWithCoder:(id)a0;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)_nameForOCRFeatureType:(long long)a0;
- (void)_serializeWithCoder:(id)a0 orDictionary:(id)a1;
- (void)addFeatureGate:(id)a0 userInfo:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundingBoxForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)effectiveTextDetectionLocales;
- (struct { void /* unknown type, empty encoding */ x0[4]; })facePose;
- (BOOL)isEnvelopeRegion;
- (BOOL)isEqualToAXMVisionFeature:(id)a0;
- (BOOL)isMediaAnalysisSignificantEventlassification;
- (long long)locationUsingThirds:(BOOL)a0 withFlippedYAxis:(BOOL)a1;

@end
