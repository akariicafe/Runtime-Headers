@class NSDictionary, HMFTimer, HMMTRAttestationDataStore, CBCentralManager, HMMTROTAProviderDelegate, NSMutableArray, NSMutableSet, MTRDeviceController, HMMTRSoftwareUpdateProvider, HMMTRVendorMetadataStore, HMMTRUIDialogPresenter, HMMTRSystemCommissionerPairingManager, NSString, HMMTRMatterKeypair, NSObject, HAPPowerManager, NSData, HMMTRStorage, HMMTRAccessoryServer, HMMTRRegulatoryInfo, HMMTRAttestationStatus, HMMTROperationalCertificateIssuer, NSDate, HMMTRResidentStateManager, NSNumber;
@protocol HMMTRAccessoryServerBrowserDelegate, HAPAccessoryServerBrowserDelegate, OS_dispatch_queue, OS_nw_browser;

@interface HMMTRAccessoryServerBrowser : HAPAccessoryServerBrowser <HMMTRStorageDelegate, HMFLogging, HAPPowerManagerProtocol, HMFTimerDelegate, CBCentralManagerDelegate>

@property (readonly, nonatomic) NSMutableSet *stagedAccessoryServers;
@property (readonly, nonatomic) HMMTROTAProviderDelegate *otaProviderDelegate;
@property (weak, nonatomic) id<HAPAccessoryServerBrowserDelegate> delegate;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue;
@property unsigned long long restartCount;
@property BOOL pendingMatterStackRestart;
@property (retain, nonatomic) HAPPowerManager *powerManager;
@property (retain, nonatomic) NSObject<OS_nw_browser> *bonjourBrowser;
@property (retain, nonatomic) NSMutableArray *bonjourBrowserChanges;
@property (retain, nonatomic) CBCentralManager *cbCentral;
@property (nonatomic) BOOL bleScanActive;
@property (nonatomic) BOOL requestedBLEScan;
@property (retain, nonatomic) NSNumber *systemCommissionerFabricID;
@property (readonly, nonatomic) NSMutableArray *matterStackRestartHandlers;
@property (retain, nonatomic) HMFTimer *diagnosticsTimer;
@property (retain, nonatomic) NSDate *diagnosticTimerStart;
@property (readonly, nonatomic) HMMTROperationalCertificateIssuer *nocIssuer;
@property (retain, nonatomic) NSNumber *currentFabricID;
@property unsigned long long browserState;
@property (retain) NSDictionary *matterStorageItems;
@property (retain, nonatomic) NSNumber *configuredPreWarmTargetFabricID;
@property BOOL userOwnsConfiguredPreWarmTargetFabric;
@property (retain, nonatomic) NSNumber *preWarmedFabricID;
@property BOOL preWarmTargetIsSystemCommissionerFabric;
@property (retain, nonatomic) NSMutableSet *nodesAddedToHome;
@property (readonly, nonatomic) BOOL isCurrentDevicePrimaryResident;
@property (readonly) MTRDeviceController *deviceController;
@property (readonly) NSData *appleHomeFabricRootPublicKey;
@property (retain, nonatomic) HMMTRMatterKeypair *nocSigner;
@property (retain, nonatomic) HMMTRMatterKeypair *systemCommissionerNocSigner;
@property (retain, nonatomic) HMMTRMatterKeypair *operationalKeyPair;
@property (readonly, nonatomic) NSMutableSet *discoveredAccessoryServers;
@property (readonly, getter=isSystemCommissionerMode) BOOL systemCommissionerMode;
@property (readonly, nonatomic, getter=isSystemCommissionerFeatureEnabled) BOOL systemCommissionerFeatureEnabled;
@property (readonly, nonatomic) HMMTRRegulatoryInfo *regulatoryInfo;
@property (retain, nonatomic) HMMTRAccessoryServer *commissioneeAccessoryServer;
@property (readonly, nonatomic) HMMTRStorage *storage;
@property (readonly, nonatomic) HMMTRResidentStateManager *residentStateManager;
@property (readonly, nonatomic) HMMTRVendorMetadataStore *vendorMetadataStore;
@property (readonly, nonatomic) HMMTRAttestationDataStore *attestationDataStore;
@property (readonly, nonatomic) HMMTRAttestationStatus *attestationStatus;
@property (readonly, nonatomic) HMMTRUIDialogPresenter *uiDialogPresenter;
@property (readonly, nonatomic) HMMTRSystemCommissionerPairingManager *systemCommissionerPairingManager;
@property (weak, nonatomic) id<HMMTRAccessoryServerBrowserDelegate> accessoryServerBrowserDelegate;
@property (readonly) NSData *systemCommissionerFabricRootPublicKey;
@property (readonly, nonatomic) HMMTRSoftwareUpdateProvider *softwareUpdateProvider;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)logCategory;

- (long long)linkType;
- (void)centralManagerDidUpdateState:(id)a0;
- (void)timerDidFire:(id)a0;
- (void)centralManager:(id)a0 didDiscoverPeripheral:(id)a1 advertisementData:(id)a2 RSSI:(id)a3;
- (void)matchAccessoryServerWithSetupID:(id)a0 serverIdentifier:(id)a1 completionHandler:(id /* block */)a2;
- (void)_setReachability:(BOOL)a0 forServer:(id)a1;
- (void)startDiscoveringAccessoryServers;
- (id)logIdentifier;
- (void)setDelegate:(id)a0 queue:(id)a1;
- (void).cxx_destruct;
- (void)discoverAccessoryServerWithIdentifier:(id)a0;
- (void)stopDiscoveringAccessoryServers;
- (BOOL)_delegateRespondsToSelector:(SEL)a0;
- (int)_initializeAndStartBonjourBrowser;
- (void)devicePowerStateChanged:(unsigned long long)a0;
- (void)clearPreWarmTarget;
- (void)createNewFabricDataForFabricID:(id)a0 completion:(id /* block */)a1;
- (void)createNewFabricIDWithCompletion:(id /* block */)a0;
- (void)discardStagedAccessoryServerWithIdentifier:(id)a0 completionHandler:(id /* block */)a1;
- (void)fetchCommissioningCertificatesForSharedAdminWithDeviceNodeID:(id)a0 sharedUserIdentifier:(id)a1 publicKey:(id)a2 fabricID:(id)a3 completionHandler:(id /* block */)a4;
- (void)handleHomeAddedAccessoryWithNodeID:(id)a0;
- (void)handlePairingCompletionForAccessoryWithNodeID:(id)a0 fabricID:(id)a1 vendorID:(id)a2 productID:(id)a3 configNumber:(id)a4 category:(id)a5 topology:(id)a6;
- (void)handleSystemKeychainStoreUpdatedNotification:(id)a0;
- (id)initWithQueue:(id)a0 storeDirectoryURL:(id)a1;
- (void)prepareForPairingWithSetupPayload:(id)a0 fabricID:(id)a1 owner:(BOOL)a2 completionHandler:(id /* block */)a3;
- (void)setPreWarmTargetToFabricWithID:(id)a0 isOwner:(BOOL)a1;
- (void)setPreWarmTargetToSystemCommissionerFabric;
- (void)stageAccessoryServerWithSetupPayload:(id)a0 fabricID:(id)a1 deviceCredentialHandler:(id /* block */)a2 wifiScanResultsHandler:(id /* block */)a3 threadScanResultsHandler:(id /* block */)a4 readyToCancelHandler:(id /* block */)a5 progressUpdateHandler:(id /* block */)a6 scanningNetworks:(BOOL)a7 completionHandler:(id /* block */)a8;
- (id)stagedAccessoryServerWithIdentifier:(id)a0;
- (void)startBluetoothScan;
- (void)stopBluetoothScan;
- (void)handlePrimaryResidentDataReady;
- (void)_handleAddOrUpdateWithDiscriminator:(id)a0 vendorID:(id)a1 productID:(id)a2 overBLE:(BOOL)a3;
- (void)restartMatterStackWithFabricID:(id)a0;
- (void)_callMatterStackRestartHandlers;
- (unsigned long long)_generateNodeID;
- (void)_accessoryServerForSystemCommissionerDeviceWithNodeID:(id)a0 matterStackRestartHandler:(id /* block */)a1 completionHandler:(id /* block */)a2;
- (id)_allServers;
- (void)_cleanupDisappearedServersOverBLE;
- (void)_cleanupDiscoveredServers;
- (void)_cleanupDiscoveredServersWithCompletion:(id /* block */)a0;
- (void)_cleanupLocallyDiscoveredServers;
- (void)_cleanupStagedServers;
- (void)_clearLocallyDiscoveredFlags;
- (id)_createCHIPAccessoryForNodeID:(unsigned long long)a0;
- (id)_createCHIPAccessoryForNodeID:(unsigned long long)a0 ifPaired:(BOOL)a1 fatalError:(id *)a2;
- (void)_deleteOldPairings;
- (id)_discoveredServerWithDiscriminator:(id)a0 vendorID:(id)a1 productID:(id)a2;
- (int)_discriminator:(id *)a0 vendorID:(id *)a1 productID:(id *)a2 CM:(id *)a3 fromTXTRecord:(id)a4;
- (void)_fetchDevicePairingsForSystemCommissionerDeviceWithNodeID:(id)a0 completionHandler:(id /* block */)a1;
- (void)_fetchDevicePairingsForSystemCommissionerDeviceWithNodeID:(id)a0 matterStackRestartHandler:(id /* block */)a1 completionHandler:(id /* block */)a2;
- (unsigned long long)_getRandomFabricId;
- (id)_getSystemCommissionerFabricRootCertificateWithIndex:(id)a0 ipk:(id *)a1 controllerNodeID:(id *)a2;
- (void)_handleBLEAddOrUpdateWithDiscriminator:(id)a0 vendorID:(id)a1 productID:(id)a2;
- (void)_handleBonjourAddOrUpdateWithDiscriminator:(id)a0 vendorID:(id)a1 productID:(id)a2;
- (void)_handleBonjourBrowserBatchResults;
- (void)_handleBonjourRemoveWithDiscriminator:(id)a0 vendorID:(id)a1 productID:(id)a2 txtRecordRemove:(BOOL)a3;
- (void)_invalidateAccessoryServer:(id)a0 withCompletion:(id /* block */)a1;
- (BOOL)_isDevicePaired:(unsigned long long)a0;
- (BOOL)_isSystemCommissionerFeaturePreferenceEnabled;
- (void)_preWarmCommissioningSession;
- (void)_prepareForPairingWithSetupPayload:(id)a0 fabricID:(id)a1 hasPriorSuccessfulPairing:(BOOL)a2 category:(id)a3 completionHandler:(id /* block */)a4;
- (void)_prepareServerForBLEDiscovery;
- (void)_queueBonjourBrowserOldResult:(id)a0 newResult:(id)a1;
- (void)_reenumeratePairedDevices;
- (void)_reportAccessoriesKnownToSystemCommissioner;
- (void)_restartMatterStackWithFabricID:(id)a0;
- (id)_serverFromMTSDevicePairing:(id)a0;
- (void)_setupPairedDevices;
- (void)_stageAccessoryServerWithSetupPayload:(id)a0 fabricID:(id)a1 deviceCredentialHandler:(id /* block */)a2 wifiScanResultsHandler:(id /* block */)a3 threadScanResultsHandler:(id /* block */)a4 readyToCancelHandler:(id /* block */)a5 progressUpdateHandler:(id /* block */)a6 scanningNetworks:(BOOL)a7 hasPriorSuccessfulPairing:(BOOL)a8 category:(id)a9 completionHandler:(id /* block */)a10;
- (void)_startChipStackWithFabricID:(id)a0;
- (void)_stopMatterStack;
- (void)_updateCentralManager;
- (void)_updateLocallyDiscoveredServerPairedStates;
- (id)_updateSystemCommissionerFabricIDAndGetIndex;
- (void)accessoryServerForSystemCommissionerDeviceWithNodeID:(id)a0 matterStackRestartHandler:(id /* block */)a1 completionHandler:(id /* block */)a2;
- (id)accessoryServerWithNodeID:(id)a0;
- (void)announceOtaProviderForNodeID:(id)a0;
- (void)cleanUpStaleSystemCommissionerPairingsWithNewlyPairedUUID:(id)a0 vendorID:(id)a1 productID:(id)a2 serialNumber:(id)a3 setupPayload:(id)a4;
- (void)commitStagedAccessoryServer:(id)a0;
- (void)createNewSystemCommissionerFabricNodeIDWithCompletion:(id /* block */)a0;
- (id)createSystemCommissionerFabricNOCWithSigningCertificate:(id)a0 operationalPublicKey:(struct __SecKey { } *)a1 fabricID:(id)a2 nodeID:(id)a3 caseAuthenticatedTags:(id)a4 error:(id *)a5;
- (void)fetchAllDevicePairingsForSystemCommissionerDeviceWithNodeID:(id)a0 completionHandler:(id /* block */)a1;
- (void)fetchCommissioningCertificatesForAccessoryWithOperationalPublicKey:(id)a0 completionHandler:(id /* block */)a1;
- (void)fetchCommissioningCertificatesForSharedAdminWithDeviceNodeID:(id)a0 publicKey:(id)a1 fabricID:(id)a2 completionHandler:(id /* block */)a3;
- (void)fetchCommissioningCertificatesFromOwnerForPublicKey:(id)a0 fabricID:(id)a1 completionHandler:(id /* block */)a2;
- (void)fetchOrCreateSystemCommissionerRootCertificateWithCompletion:(id /* block */)a0;
- (void)fetchPreferredThreadCredentialsForServer:(id)a0 withCompletion:(id /* block */)a1;
- (void)finishSystemCommissionerFabricCommissioningWithFabricID:(id)a0 rootCACert:(id)a1 ipk:(id)a2 controllerNodeID:(id)a3 commissoneeNodeID:(id)a4 queue:(id)a5 completion:(id /* block */)a6;
- (void)handleDeviceNoLongerPrimaryResidentWithCompletion:(id /* block */)a0;
- (void)invalidateAccessoryServer:(id)a0;
- (void)invalidateAccessoryServer:(id)a0 withCompletion:(id /* block */)a1;
- (void)invalidateAllDiscoveredServers;
- (void)invalidateAllDiscoveredServersWithCompletion:(id /* block */)a0;
- (id)nodeIDForFabricID:(id)a0 deviceIdentifier:(id)a1;
- (void)notifyPairingCompletionForAccessoryServer:(id)a0;
- (void)openCommissioningWindowForSystemCommissionerDeviceWithNodeID:(id)a0 duration:(double)a1 completionHandler:(id /* block */)a2;
- (void)readCommissioningWindowStatusForSystemCommissionerDeviceWithNodeID:(id)a0 completionHandler:(id /* block */)a1;
- (void)removeAllDevicePairingsForSystemCommissionerDeviceWithNodeID:(id)a0 completionHandler:(id /* block */)a1;
- (void)removeDevicePairingFabricForSystemCommissionerDeviceWithNodeID:(id)a0 fabric:(id)a1 completionHandler:(id /* block */)a2;
- (void)removeSystemCommissionerFabricAccessoryWithNodeID:(id)a0 completionHandler:(id /* block */)a1;
- (void)restartMatterStackForSystemCommissionerFabricWithCompletionHandler:(id /* block */)a0;
- (void)restartMatterStackWithFabricID:(id)a0 completion:(id /* block */)a1;
- (void)setSystemCommissionerMode:(BOOL)a0;
- (void)setupPairedDevices;
- (void)stageAccessoryServerWithSetupPayload:(id)a0 fabricID:(id)a1 completionHandler:(id /* block */)a2;
- (void)stageAccessoryServerWithSetupPayload:(id)a0 hasPriorSuccessfulPairing:(BOOL)a1 category:(id)a2 completionHandler:(id /* block */)a3;
- (void)stopMatterStackWithCompletion:(id /* block */)a0;
- (void)storageDidBecomeAvailable:(id)a0;
- (void)storageDidUpdateData:(id)a0 isLocalChange:(BOOL)a1;
- (BOOL)systemCommissionerMode;

@end
