@class NSLocale;

@interface CHRecognizerConfiguration : NSObject {
    unsigned long long _language;
    unsigned long long _script;
}

@property (readonly, nonatomic) int mode;
@property (readonly, copy, nonatomic) NSLocale *locale;
@property (readonly, nonatomic) int contentType;
@property (readonly, nonatomic) int contentTypeForNoSpaceRecognition;
@property (readonly, nonatomic) int autoCapitalizationMode;
@property (readonly, nonatomic) int autoCorrectionMode;
@property (readonly, nonatomic) int baseWritingDirection;
@property (readonly, nonatomic) BOOL enableCachingIfAvailable;
@property (readonly, nonatomic) BOOL enableGen2ModelIfAvailable;
@property (readonly, nonatomic) BOOL enableGen2CharacterLMIfAvailable;

+ (BOOL)isLocaleSupported:(id)a0 withMode:(int)a1;
+ (id)forcedGen2ModelLocaleForLocale:(id)a0;
+ (id)modelNameKorean;
+ (id)modelNameArabic;
+ (id)allNonLatinModelNames;
+ (id)defaultActiveCharacterSetForLocale:(id)a0;
+ (id)defaultActiveCharacterSetForLocales:(id)a0;
+ (id)defaultLocaleForRecognitionType:(int)a0 withMode:(int)a1;
+ (struct CGSize { double x0; double x1; })defaultMinimumDrawingSize;
+ (long long)drawingStrokeLimitForLocale:(id)a0;
+ (id)effectiveRecognitionLocales:(id)a0 recognitionMode:(int)a1;
+ (BOOL)isSupportedCyrillicScriptLocale:(id)a0 withMode:(int)a1;
+ (BOOL)isSupportedLatinScriptLocale:(id)a0 withMode:(int)a1;
+ (id)localeForScriptClass:(id)a0;
+ (id)localesByLanguageGroup:(id)a0;
+ (id)localesForScriptClassification:(id)a0 selectedScriptCodepoints:(id)a1;
+ (id)modelNameChinese;
+ (id)modelNameCyrillic;
+ (id)modelNameJapanese;
+ (id)modelNameLatin;
+ (id)modelNameThai;
+ (id)modelNameVietnamese;
+ (id)parametersOverride;
+ (id)recognitionEngineCachingKeyForRecognitionLocale:(id)a0;
+ (void)setParametersOverride:(id)a0;
+ (BOOL)shouldAddSpaceToNeutralQuotationMarks:(id)a0;
+ (BOOL)shouldAdjustGroupingForLocale:(id)a0;
+ (BOOL)shouldAdjustGroupingHeuristicsForVeryComplexCharacters:(id)a0;
+ (BOOL)shouldAllowSpaceInsertionGestureForLocale:(id)a0;
+ (BOOL)shouldApplyLatinSpacingForLocale:(id)a0;
+ (BOOL)shouldApplyThaiSpacingForLocale:(id)a0;
+ (BOOL)shouldForceNoAlternativeRecognitionCandidates:(id)a0;
+ (BOOL)shouldInsertSpaceBetweenPreviousChar:(id)a0 andNextChar:(id)a1 inLocale:(id)a2 inString:(id)a3 atRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a4 withQuoteCount:(id)a5;
+ (BOOL)shouldPerformStrictCandidateFiltering:(id)a0;
+ (BOOL)shouldRefinePrefixQueryMatchesForLocale:(id)a0;
+ (BOOL)shouldRemoveSpaceBetweenPreviousChar:(id)a0 andNextChar:(id)a1 inLocale:(id)a2;
+ (BOOL)shouldSwapCyrillicTopResult:(id)a0 topRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 englishResult:(id)a2 englishRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 prevousGroupTopString:(id)a4;
+ (BOOL)shouldUseFullWidthSpaceBasedOnContextForLocale:(id)a0;
+ (BOOL)shouldUseStrokeReorderingForMode:(int)a0;
+ (double)skipLatinActivationThreshold;
+ (id)spellCheckingLocaleForRecognitionLocale:(id)a0 string:(id)a1;
+ (id)stringForAutoCapitalizationMode:(int)a0;
+ (id)stringForAutoCorrectionMode:(int)a0;
+ (id)stringForBaseWritingDirection:(int)a0;
+ (id)stringForRecognitionContentType:(int)a0;
+ (id)stringForRecognitionMode:(int)a0;
+ (id)swappableColumnIndexesFromResults:(id)a0 locales:(id)a1;
+ (id)swappableColumnIndexesFromResults:(id)a0 locales:(id)a1 topLocaleIndex:(long long)a2;
+ (long long)writingOrientationForLocale:(id)a0;

- (id)description;
- (void).cxx_destruct;
- (int)effectiveAutoCapitalizationMode;
- (id)newSpellChecker;
- (BOOL)shouldApplyDiacriticSensitivity;
- (BOOL)shouldComposeLexiconWithNetwork;
- (BOOL)shouldRecoverCyrillicCandidates;
- (BOOL)shouldApplySemanticTokenization;
- (BOOL)shouldIdentifyChangeableColumns;
- (id)configurationKey;
- (id /* block */)decodingCommitActionBlock;
- (long long)engineCandidateCount;
- (id)forcedActiveCharacterSet;
- (BOOL)hasSamePostProcessingAsConfiguration:(id)a0;
- (BOOL)hasSameResourcesAsConfiguration:(id)a0;
- (id)initWithMode:(int)a0 locale:(id)a1 contentType:(int)a2 autoCapitalizationMode:(int)a3 autoCorrectionMode:(int)a4 baseWritingDirection:(int)a5 enableCachingIfAvailable:(BOOL)a6 enableGen2ModelIfAvailable:(BOOL)a7 enableGen2CharacterLMIfAvailable:(BOOL)a8;
- (id)initWithMode:(int)a0 locale:(id)a1 contentType:(int)a2 enableCachingIfAvailable:(BOOL)a3 enableGen2ModelIfAvailable:(BOOL)a4 enableGen2CharacterLMIfAvailable:(BOOL)a5;
- (BOOL)isEqualToRecognizerConfiguration:(id)a0;
- (id)languageResourceBundleWithStaticLexicon:(struct _LXLexicon { } *)a0 customLexicon:(struct _LXLexicon { } *)a1 wordLanguageModel:(void *)a2;
- (void /* function */ *)lexiconStringNormalizationFunction;
- (id)linguisticResourcesFallbackLocale;
- (long long)maxRecognitionResultDefaultCount;
- (int)mecabraInputMethodType;
- (unsigned long long)mixedScriptPenalty;
- (void *)newCJKStaticLexicon;
- (id)newCTCRecognitionModel;
- (id)newCTCTextDecoderWithStaticLexicon:(struct _LXLexicon { } *)a0 customLexicon:(struct _LXLexicon { } *)a1 wordLanguageModel:(void *)a2;
- (void *)newCharacterLanguageModelAndMap:(void *)a0 force:(BOOL)a1;
- (struct CHNeuralNetwork { void /* function */ *x0; BOOL x1; struct CHCodeMap *x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; id x7; id x8; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x9; } *)newFreeFormEngine;
- (void *)newGrammarFST;
- (id)newMecabraWrapper;
- (id)newMergedResultPostProcessorWithStaticLexicon:(struct _LXLexicon { } *)a0 customLexicon:(struct _LXLexicon { } *)a1 stringChecker:(id)a2;
- (id)newOVSStringCheckerWithStaticLexicon:(struct _LXLexicon { } *)a0 customLexicon:(struct _LXLexicon { } *)a1;
- (id)newPatternFST;
- (struct _LXLexicon { } *)newPhraseLexicon:(id *)a0;
- (id)newPostProcessorWithStaticLexicon:(struct _LXLexicon { } *)a0 customLexicon:(struct _LXLexicon { } *)a1 phraseLexicon:(struct _LXLexicon { } *)a2 customPhraseLexicon:(struct _LXLexicon { } *)a3 textReplacements:(id)a4 postProcessingFST:(id)a5 wordLM:(void *)a6 mecabraWrapper:(id)a7 ovsStringChecker:(id)a8 spellChecker:(id)a9 lmVocabulary:(void *)a10 maxResultCount:(long long)a11;
- (void *)newRadicalClusterFST;
- (struct CHNeuralNetwork { void /* function */ *x0; BOOL x1; struct CHCodeMap *x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; id x7; id x8; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x9; } *)newRecognitionEngine;
- (struct _LXLexicon { } *)newSecondaryStaticLexicon:(id *)a0;
- (struct _LXLexicon { } *)newStaticLexicon:(id *)a0;
- (struct VariantMap { int *x0; int *x1; int *x2; int x3; int *x4; unsigned long long x5; } *)newTransliterationVariantMap;
- (void *)newWordLanguageModel;
- (void *)newWordLanguageModelForRecognizer:(id)a0 async:(BOOL)a1 synchronizationQueue:(id)a2;
- (id /* block */)pathScoringFunctionForLanguageResourceBundle:(id)a0;
- (struct _LXLexicon { } *)postProcessorLexiconWithStaticLexicon:(struct _LXLexicon { } *)a0 secondaryLexicon:(struct _LXLexicon { } *)a1;
- (long long)precedingSpaceDefaultBehavior;
- (unsigned int)requiredInappropriateFilteringFlags;
- (id)sharedPostProcessingFST;
- (BOOL)shouldAddAlternativeWidthCandidates;
- (BOOL)shouldApplyCandidatesThresholding;
- (BOOL)shouldApplyChinesePostProcessing;
- (BOOL)shouldApplyLMRescoring;
- (BOOL)shouldApplyLMSorting;
- (BOOL)shouldApplyLexicalPenalty;
- (BOOL)shouldApplyRomanPostProcessing;
- (BOOL)shouldAutoCapitalize;
- (BOOL)shouldAutoCorrect;
- (BOOL)shouldComputeStrokePenalties;
- (BOOL)shouldConvertKanaInPostProcessing;
- (BOOL)shouldCreatePseudoTokens;
- (BOOL)shouldDetectChinesePunctuation;
- (BOOL)shouldDetectRomanPunctuation;
- (BOOL)shouldEnforceGrammarOnTransliterations;
- (BOOL)shouldExpandCodePoints;
- (BOOL)shouldExpandLexiconInNetwork;
- (BOOL)shouldFallbackOnSingleCharacterExpansion;
- (BOOL)shouldFilterLowProbabilityTranscriptionPaths;
- (BOOL)shouldForwardMecabraOTAAssetsUpdate;
- (BOOL)shouldGenerateDigitLetterAlternatives;
- (BOOL)shouldKeepDuplicateTokenIDs;
- (BOOL)shouldKeepOutOfPatternCandidates;
- (BOOL)shouldLoadCJKLexicons;
- (BOOL)shouldMarkMultiWordOVS;
- (BOOL)shouldMarkNoWhiteSpaceColumnsChangeable;
- (BOOL)shouldPenalizeLetterInsertion;
- (BOOL)shouldPenalizePrefixes;
- (BOOL)shouldPerformArabicPostProcessing;
- (BOOL)shouldPerformGlobalBestSearch;
- (BOOL)shouldPerformGlobalBestSearchWithSmallLattice;
- (BOOL)shouldPerformIntegratedLexiconExpansion;
- (BOOL)shouldPreserveLegacyTranscriptionPaths;
- (BOOL)shouldPromoteCJKCommonCharacters;
- (BOOL)shouldPromoteInLexiconCandidates;
- (BOOL)shouldRefineCandidates;
- (BOOL)shouldRefineChineseCharacterCandidates;
- (BOOL)shouldRelaxFinalCandidatesThresholding;
- (BOOL)shouldRemoveInvalidArabicDiacritics;
- (BOOL)shouldRemoveSpacesFromHashtagsAndMentions;
- (BOOL)shouldReorderSCTCConfusion;
- (BOOL)shouldReplaceInvalidTokenIDs;
- (BOOL)shouldRunLexiconCorrectionPostProcessingStep;
- (BOOL)shouldRunNextGenRecognizer;
- (BOOL)shouldTransformCharacterProbabilitiesIntoLogScores;
- (BOOL)shouldTransliterateAndSynthetizeCandidates;
- (BOOL)shouldTransliterateHalfWidthPunctuations;
- (BOOL)shouldTransliterateSentencesSCTC;
- (BOOL)shouldTreatAllSmallStrokesAsPunctuation;
- (BOOL)shouldUpdateChangeableColumnCountWithPhraseLexicon;
- (BOOL)shouldUseCaching;
- (BOOL)shouldUseModernizedCTCDecoder;
- (BOOL)shouldUseTokenPrecedingSpaces;
- (unsigned long long)supportedSegmentationStrategy;
- (BOOL)unsafeForSpellCorrection;

@end
