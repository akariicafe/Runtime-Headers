@class HMDApplicationRegistry, HMDLostModeManager, HMFMessageDispatcher, NSObject, HMFSystemInfo, NAFuture, NSMutableArray, NSString, HMDWatchManager, HMDBulletinBoard, HMDHome, HMDHomeKeySetupWalletLogEvent, NSNotificationCenter, NSUUID;
@protocol HAPKeyStore, HMDWalletPassLibrary, HMDHomeWalletDataSource, OS_dispatch_queue, HMDFileManager;

@interface HMDHomeWalletKeyManager : HMFObject <HMFMessageReceiver, HMFLogging, HMDWalletPassLibraryDelegate, HMDHomeWalletKeyAccessoryManagerDelegate>

@property (readonly) id<HMDFileManager> fileManager;
@property (readonly) id<HMDWalletPassLibrary> passLibrary;
@property (retain) HMFMessageDispatcher *messageDispatcher;
@property (readonly, copy) NSUUID *uuid;
@property (weak) HMDHome *home;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue;
@property (readonly) NSNotificationCenter *notificationCenter;
@property (readonly) HMDWatchManager *watchManager;
@property (retain) NAFuture *addWalletKeyFuture;
@property (readonly) id /* block */ isoCredentialFactory;
@property (readonly) id<HAPKeyStore> keychainStore;
@property (readonly) HMDLostModeManager *lostModeManager;
@property (readonly) id<HMDHomeWalletDataSource> dataSource;
@property (readonly) NSMutableArray *pendingUpdateWalletKeyOperations;
@property BOOL isWalletKeyUpdateOperationInProgress;
@property BOOL isHomeBeingRemoved;
@property (readonly) HMDBulletinBoard *bulletinBoard;
@property (readonly) HMDApplicationRegistry *applicationRegistry;
@property (readonly) BOOL canSuspendWalletKey;
@property (readonly) HMFSystemInfo *systemInfo;
@property (retain) NSUUID *currentUserUUID;
@property (retain) HMDHomeKeySetupWalletLogEvent *logEvent;
@property (readonly, copy) NSString *passSerialNumber;
@property (readonly) BOOL hasHomeKeyInWallet;
@property (readonly, nonatomic) NSUUID *messageTargetUUID;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)logCategory;
+ (id)homekitErrorWithPassLibraryError:(id)a0;
+ (id)responsePayloadForPairedWatchesWithMessageName:(id)a0 responsePayloadByDevice:(id)a1 error:(id)a2;

- (id)logIdentifier;
- (void).cxx_destruct;
- (void)addWalletKeyWithOptions:(long long)a0 completion:(id /* block */)a1;
- (void)fetchExpressEnablementConflictingPassDescriptionWithCompletion:(id /* block */)a0;
- (void)_storeWalletKeyMigrationSettingsToDisk:(BOOL)a0;
- (void)accessoryManager:(id)a0 didUpdateWalletKeyColor:(long long)a1;
- (void)addISOCredentialWithPassAtURL:(id)a0 walletKey:(id)a1 completion:(id /* block */)a2;
- (void)addIssuerKeysToMatterAccessories;
- (void)addWalletKey:(id)a0 withOptions:(long long)a1 assertion:(id)a2;
- (void)addWalletKeyWithOptions:(long long)a0 nfcReaderKey:(id)a1 completion:(id /* block */)a2;
- (void)autoAddWalletKey;
- (void)autoAddWalletKeyWithReason:(id)a0 completion:(id /* block */)a1;
- (BOOL)canAutoAddWalletKeyWithError:(id *)a0;
- (void)configureWithHome:(id)a0;
- (void)createExpressModeSetUpBulletin;
- (id)createPassDirectoryWithResourceFiles;
- (void)createPassDirectoryWithWalletKey:(id)a0 options:(long long)a1 shouldSkipResourceFiles:(BOOL)a2 shouldCreateZipArchive:(BOOL)a3 completion:(id /* block */)a4;
- (id)createPassDirectoryWithoutResourceFiles;
- (void)enableExpressWithOptions:(long long)a0 completion:(id /* block */)a1;
- (void)enqueueWalletKeyUpdateOperation:(id /* block */)a0;
- (void)fetchHomeKeySupportedWithCompletion:(id /* block */)a0;
- (void)fetchOrCreateReaderKeyWithCompletion:(id /* block */)a0;
- (void)fetchPayloadForAddWalletKeyRemoteMessage:(id /* block */)a0;
- (void)fetchShouldAutoEnableExpressWithCompletion:(id /* block */)a0;
- (void)fetchShouldSuppressWalletNotificationWithCompletion:(id /* block */)a0;
- (id)fetchWalletKeyColorOptionWithFlow:(id)a0;
- (void)handleAccessCodeChanged;
- (void)handleAccessorySupportsAccessCodeDidChangeNotification:(id)a0;
- (void)handleAccessorySupportsWalleyKeyDidChangeNotification:(id)a0;
- (void)handleAddWalletKeyMessage:(id)a0;
- (void)handleApplicationInstalled:(id)a0;
- (void)handleApplicationUninstalled:(id)a0;
- (void)handleEnableExpressForWalletKeyMessage:(id)a0;
- (void)handleFetchAvailableWalletKeyEncodedPKPassMessage:(id)a0;
- (void)handleFetchDeviceStateMessage:(id)a0;
- (void)handleFetchMissingWalletKeysMessage:(id)a0;
- (void)handleFetchWalletKeyColorMessage:(id)a0;
- (void)handleHomeAccessoryRemovedNotification:(id)a0;
- (void)handleHomeAddedAccessoryNotification:(id)a0;
- (void)handleHomeDidFinishPairingAccessoryNotification:(id)a0;
- (void)handleHomeDidUpdateNFCReaderKeyNotification:(id)a0;
- (void)handleHomeHasOnboardedForWalletKeyChangeNotification:(id)a0;
- (void)handleHomeNameChangedNotification:(id)a0;
- (void)handleHomeUserRemovedNotification:(id)a0;
- (void)handleHomeWillBeRemoved;
- (void)handleLostModeManagerDidExitLostModeWithAuthCompleteNotification;
- (void)handleLostModeUpdated;
- (void)handleMessageForPairedWatches:(id)a0;
- (void)handleNFCReaderKeyUpdatedForWalletKey:(id)a0;
- (void)handlePendingWalletKeyUpdateOperations;
- (void)handlePersistWalletKeyAddOptionsRemoteMessage:(id)a0;
- (void)handleRestoreMissingWalletKeysMessage:(id)a0;
- (void)handleSystemInfoMigrationUpdatedNotification:(id)a0;
- (id)initWithUUID:(id)a0 workQueue:(id)a1;
- (id)initWithUUID:(id)a0 workQueue:(id)a1 fileManager:(id)a2 passLibrary:(id)a3 notificationCenter:(id)a4 watchManager:(id)a5 keychainStore:(id)a6 lostModeManager:(id)a7 dataSource:(id)a8 bulletinBoard:(id)a9 applicationRegistry:(id)a10 systemInfo:(id)a11 isoCredentialFactory:(id /* block */)a12;
- (void)passLibrary:(id)a0 didAddPassWithSerialNumber:(id)a1 typeIdentifier:(id)a2;
- (void)passLibrary:(id)a0 didRemovePassWithSerialNumber:(id)a1 typeIdentifier:(id)a2;
- (id)passSerialNumberWithUserUUID:(id)a0;
- (void)recoverDueToUUIDChangeOfUser:(id)a0 fromOldUUID:(id)a1;
- (void)removeWalletKeyOnboardingBulletin;
- (void)sendMessageWithName:(id)a0 payload:(id)a1 toWatches:(id)a2 completion:(id /* block */)a3;
- (void)showExpressEnabledNotificationForWalletKey:(id)a0;
- (void)storeWalletKeyMigrationSettingsToDisk;
- (void)syncDeviceCredentialKey:(id)a0 flow:(id)a1;
- (void)syncDeviceCredentialKeyForAccessory:(id)a0 flow:(id)a1;
- (void)updateCurrentUserUUID:(id)a0;
- (void)updateDeviceStateWithCanAddWalletKey:(id)a0 completion:(id /* block */)a1;
- (void)updateDeviceStateWithExpressEnablementConflictingPassDescription:(id)a0 completion:(id /* block */)a1;
- (void)updateDeviceStateWithWalletKey:(id)a0 completion:(id /* block */)a1;
- (BOOL)updatePassJSONAtURL:(id)a0 withWalletKey:(id)a1 options:(long long)a2;
- (void)updateWalletKeyAccessCodeFieldWithReason:(id)a0;
- (void)updateWalletKeyStateToState:(long long)a0;
- (id)walletKeyByAddingAccessCodeToWalletKey:(id)a0;
- (id)walletKeySettingsFileURL;

@end
