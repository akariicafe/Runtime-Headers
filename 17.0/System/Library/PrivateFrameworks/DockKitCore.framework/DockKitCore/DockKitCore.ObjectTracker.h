@interface DockKitCore.ObjectTracker : _TtCs12_SwiftObject {
    void /* unknown type, empty encoding */ timeSinceFaceSeen;
    void /* unknown type, empty encoding */ stand;
    void /* unknown type, empty encoding */ motion;
    void /* unknown type, empty encoding */ sensors;
    void /* unknown type, empty encoding */ trackingSensor;
    void /* unknown type, empty encoding */ loopQueue;
    void /* unknown type, empty encoding */ stopQueue;
    void /* unknown type, empty encoding */ rotationState;
    void /* unknown type, empty encoding */ trackingMetrics;
    void /* unknown type, empty encoding */ framingEngine;
    void /* unknown type, empty encoding */ logger;
    void /* unknown type, empty encoding */ trackingEnabled;
    void /* unknown type, empty encoding */ trackingStatusSemaphore;
    void /* unknown type, empty encoding */ selectSubjectTimer;
    void /* unknown type, empty encoding */ selectSubjectTimestamp;
    void /* unknown type, empty encoding */ selectSubjectCallback;
    void /* unknown type, empty encoding */ selectSubjectOverridePosition;
    void /* unknown type, empty encoding */ selectSubjectSemaphore;
    void /* unknown type, empty encoding */ selectRelevantEnabled;
    void /* unknown type, empty encoding */ primarySubjectWeight;
    void /* unknown type, empty encoding */ secondarySubjectWeight;
    void /* unknown type, empty encoding */ totalScalingWeight;
    void /* unknown type, empty encoding */ trackAllFaces;
    void /* unknown type, empty encoding */ enableDeadbands;
    void /* unknown type, empty encoding */ enable3DTracking;
    void /* unknown type, empty encoding */ configSemaphore;
    void /* unknown type, empty encoding */ enableCalibrate;
    void /* unknown type, empty encoding */ enablePredictiveTracking;
    void /* unknown type, empty encoding */ enableVURecognition;
    void /* unknown type, empty encoding */ bounceDetectionEnabled;
    void /* unknown type, empty encoding */ historySemaphore;
    void /* unknown type, empty encoding */ history;
    void /* unknown type, empty encoding */ logFileSemaphore;
    void /* unknown type, empty encoding */ logHandle;
    void /* unknown type, empty encoding */ logFileURL;
    void /* unknown type, empty encoding */ linesLogged;
    void /* unknown type, empty encoding */ bytesLogged;
    void /* unknown type, empty encoding */ lastLoggedLine;
    void /* unknown type, empty encoding */ lastLoggedLineSemaphore;
    void /* unknown type, empty encoding */ loggingEnabled;
    void /* unknown type, empty encoding */ MAX_HIST;
    void /* unknown type, empty encoding */ stateQueue;
    void /* unknown type, empty encoding */ MAX_STATEDUMP_HIST;
    void /* unknown type, empty encoding */ currentSelectedIDs;
    void /* unknown type, empty encoding */ forceLog;
    void /* unknown type, empty encoding */ SPEAK_DEBUG_CONDITIONS;
    void /* unknown type, empty encoding */ currentObjectData;
    void /* unknown type, empty encoding */ trackingKnownObject;
    void /* unknown type, empty encoding */ yawMultiplier;
    void /* unknown type, empty encoding */ pitchMultiplier;
    void /* unknown type, empty encoding */ zoomMultiplier;
    void /* unknown type, empty encoding */ multiFaceTracker;
    void /* unknown type, empty encoding */ lastSeenOrientationSemaphore;
    void /* unknown type, empty encoding */ lastSeenOrientation;
    void /* unknown type, empty encoding */ publishDebug;
    void /* unknown type, empty encoding */ stateHandle;
    void /* unknown type, empty encoding */ ADJUST_WEIGHT_THRESHHOLD;
    void /* unknown type, empty encoding */ PRIMARY_CENTER_OFFSET;
    void /* unknown type, empty encoding */ pid;
    void /* unknown type, empty encoding */ rateControl;
    void /* unknown type, empty encoding */ calibratingCenter;
    void /* unknown type, empty encoding */ searchingCenter;
    void /* unknown type, empty encoding */ manualRTB;
    void /* unknown type, empty encoding */ startupAnimation;
    void /* unknown type, empty encoding */ controlSemaphore;
    void /* unknown type, empty encoding */ enablePID;
    void /* unknown type, empty encoding */ deviceModelName;
    void /* unknown type, empty encoding */ deadbandInflation;
    void /* unknown type, empty encoding */ cameraCalibration;
    void /* unknown type, empty encoding */ adjustedCalibration;
    void /* unknown type, empty encoding */ cameraCalibrationSemaphore;
    void /* unknown type, empty encoding */ predTrackerPid;
    void /* unknown type, empty encoding */ cameraYawMotionStatus;
    void /* unknown type, empty encoding */ cameraPitchMotionStatus;
    void /* unknown type, empty encoding */ lastCommandVelocity;
    void /* unknown type, empty encoding */ smoothedYaw;
    void /* unknown type, empty encoding */ smoothedPitch;
    void /* unknown type, empty encoding */ rtbSmoothedYaw;
    void /* unknown type, empty encoding */ rtbSmoothedPitch;
    void /* unknown type, empty encoding */ lastForgetDate;
    void /* unknown type, empty encoding */ lastBounceDate;
    void /* unknown type, empty encoding */ lastFacingCameraDate;
    void /* unknown type, empty encoding */ IGNORE_SECONDARY_TIMEOUT;
    void /* unknown type, empty encoding */ REMEMBER_SECONDARY_TIMEOUT;
    void /* unknown type, empty encoding */ BOUNCE_TIMEOUT;
    void /* unknown type, empty encoding */ SECONDAY_LOOKAWAY_TIMEOUT;
    void /* unknown type, empty encoding */ horizontalOutOfBounds;
    void /* unknown type, empty encoding */ verticalOutOfBounds;
    void /* unknown type, empty encoding */ searchDirection;
    void /* unknown type, empty encoding */ searchRange;
    void /* unknown type, empty encoding */ lastSeenSecondary;
    void /* unknown type, empty encoding */ lastSeenSecondaryStamp;
    void /* unknown type, empty encoding */ bounceDetector;
    void /* unknown type, empty encoding */ fovMonitor;
    void /* unknown type, empty encoding */ _selectedFaceIds;
    void /* unknown type, empty encoding */ _selectedBodyIds;
    void /* unknown type, empty encoding */ _selectionSemaphore;
    void /* unknown type, empty encoding */ inputSummary;
    void /* unknown type, empty encoding */ timeSinceStart;
    void /* unknown type, empty encoding */ trackingSecondaryYaw;
    void /* unknown type, empty encoding */ trackingSecondaryPitch;
}

- (id)getConfig;
- (id)dumpFullHistoryToLogFileWithDirectory:(id)a0;
- (id)getStatistics;
- (BOOL)setConfigWithKey:(id)a0 value:(id)a1;

@end
