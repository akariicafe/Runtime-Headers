@class CLLocation, MKLocalSearch, UISearchBar, UITableView, CLLocationManager, UIView, NSLayoutConstraint, NSString, WFLocationTriggerEditorMapDragRadiusView, NSArray, MKMapView, WFLocationValue, NSIndexPath;
@protocol WFLocationPickerViewControllerDelegate;

@interface WFLocationPickerViewController : UIViewController <UISearchBarDelegate, UITableViewDelegate, UITableViewDataSource, MKMapViewDelegate, MKMapViewDelegatePrivate, WFLocationTriggerEditorMapDragRadiusViewDelegate, CLLocationManagerDelegate>

@property (retain, nonatomic) WFLocationValue *value;
@property (retain, nonatomic) UISearchBar *searchBar;
@property (retain, nonatomic) UIView *dividerView;
@property (retain, nonatomic) UITableView *tableView;
@property (retain, nonatomic) MKMapView *mapView;
@property (retain, nonatomic) WFLocationTriggerEditorMapDragRadiusView *dragView;
@property (retain, nonatomic) NSIndexPath *selectedIndexPath;
@property (retain, nonatomic) NSArray *constraints;
@property (retain, nonatomic) NSLayoutConstraint *mapHeightConstraint;
@property (copy, nonatomic) NSArray *recents;
@property (retain, nonatomic) MKLocalSearch *localSearch;
@property (copy, nonatomic) NSArray *localSearchResults;
@property (retain, nonatomic) CLLocationManager *locationManager;
@property (nonatomic) int currentAppLocationAuthorizationStatus;
@property (retain, nonatomic) CLLocation *currentLocation;
@property (weak, nonatomic) id<WFLocationPickerViewControllerDelegate> delegate;
@property (readonly, nonatomic) unsigned long long pickerType;
@property (nonatomic) BOOL allowsTextOnlyLocation;
@property (nonatomic) BOOL allowsPickingCurrentLocation;
@property (nonatomic) unsigned long long regionCondition;
@property (nonatomic) BOOL resolvesCurrentLocationToPlacemark;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)updateViewConstraints;
- (void)done:(id)a0;
- (BOOL)hasLocation;
- (void)viewWillAppear:(BOOL)a0;
- (id)tableView:(id)a0 cellForRowAtIndexPath:(id)a1;
- (long long)tableView:(id)a0 numberOfRowsInSection:(long long)a1;
- (void)reloadData;
- (void)searchBar:(id)a0 textDidChange:(id)a1;
- (void)traitCollectionDidChange:(id)a0;
- (void)tableView:(id)a0 willDisplayCell:(id)a1 forRowAtIndexPath:(id)a2;
- (void)viewDidLayoutSubviews;
- (void)tableView:(id)a0 didSelectRowAtIndexPath:(id)a1;
- (void)locationManagerDidChangeAuthorization:(id)a0;
- (void)loadView;
- (void)viewWillDisappear:(BOOL)a0;
- (void).cxx_destruct;
- (void)locationManager:(id)a0 didUpdateLocations:(id)a1;
- (void)viewDidAppear:(BOOL)a0;
- (void)cancel:(id)a0;
- (void)viewDidDisappear:(BOOL)a0;
- (void)mapView:(id)a0 didDeselectAnnotationView:(id)a1;
- (void)mapView:(id)a0 didSelectAnnotationView:(id)a1;
- (void)mapView:(id)a0 regionDidChangeAnimated:(BOOL)a1;
- (void)mapView:(id)a0 regionWillChangeAnimated:(BOOL)a1;
- (id)mapView:(id)a0 rendererForOverlay:(id)a1;
- (id)mapView:(id)a0 viewForAnnotation:(id)a1;
- (void)mapViewDidChangeVisibleRegion:(id)a0;
- (void)updateUI;
- (void)resetSearchResults;
- (id)circularRegion;
- (void)checkLocationAuthorization;
- (id)initWithPickerType:(unsigned long long)a0 value:(id)a1;
- (id)mapRadiusView:(id)a0 overlayForRadius:(double)a1;
- (void)updateMapHeight;
- (long long)currentLocationRowIndex;
- (void)displayLocationCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })a0;
- (long long)firstLocalSearchResultRowIndex;
- (long long)firstRecentRowIndex;
- (void)getMapItemFromRecentContact:(id)a0 completionHandler:(id /* block */)a1;
- (void)getPlacemarkFromLocation:(id)a0 streetAddress:(id)a1 completionHandler:(id /* block */)a2;
- (BOOL)hasSufficientLocationAuthorization;
- (long long)lastRecentRowIndex;
- (id)locationFromRecentContact:(id)a0;
- (double)mapHeight;
- (struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })mapRadiusView:(id)a0 boundingMapRectForOverlay:(id)a1;
- (void)mapRadiusView:(id)a0 radiusDidChange:(double)a1;
- (id)overlayWithCenterCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })a0 radius:(double)a1;
- (unsigned long long)proximityType;
- (void)setLocationValueWithPlacemark:(id)a0;
- (void)setRegionValueWithPlacemark:(id)a0 radius:(double)a1;
- (void)setupMap;
- (BOOL)shouldShowCurrentLocationItem;
- (void)showMapRegionForCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })a0 radius:(double)a1;
- (BOOL)showsMapView;
- (void)updateRecentsWithSearchText:(id)a0;
- (void)updateUIWithValue:(id)a0;
- (void)updateValueWithMapItem:(id)a0;
- (void)updateValueWithRadius:(double)a0;

@end
