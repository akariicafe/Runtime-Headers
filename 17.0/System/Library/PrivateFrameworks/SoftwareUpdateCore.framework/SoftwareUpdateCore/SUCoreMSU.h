@class NSString, MSUUpdateBrainAssetLoader, SUCoreDescriptor, NSObject, SUCoreRollbackDescriptor;
@protocol OS_dispatch_queue, OS_os_transaction;

@interface SUCoreMSU : NSObject

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *msuControlQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *msuOperationQueue;
@property (retain, nonatomic) NSString *descriptionName;
@property (readonly, weak, nonatomic) id msuDelegate;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *clientDelegateCallbackQueue;
@property (retain, nonatomic) NSString *updateUUID;
@property (retain, nonatomic) SUCoreDescriptor *updateDescriptor;
@property (retain, nonatomic) SUCoreRollbackDescriptor *rollbackDescriptor;
@property (nonatomic) BOOL performingOperation;
@property (nonatomic) BOOL cancelingPrepare;
@property (nonatomic) BOOL removingPrepared;
@property (nonatomic) float nextProgressThreshold;
@property (nonatomic) BOOL prepareProgressFinal;
@property (nonatomic) BOOL applyProgressFinal;
@property (retain, nonatomic) NSString *applyProgressActionText;
@property (retain, nonatomic) NSObject<OS_os_transaction> *loadBrainTransaction;
@property (retain, nonatomic) NSObject<OS_os_transaction> *preflightDownloadSUTransaction;
@property (retain, nonatomic) NSObject<OS_os_transaction> *preflightPersonalizeTransaction;
@property (retain, nonatomic) NSObject<OS_os_transaction> *preflightFDRRecoveryTransaction;
@property (retain, nonatomic) NSObject<OS_os_transaction> *preflightWakeupTransaction;
@property (retain, nonatomic) NSObject<OS_os_transaction> *preflightPrerequisiteCheckTransaction;
@property (retain, nonatomic) NSObject<OS_os_transaction> *prepareUpdateTransaction;
@property (retain, nonatomic) NSObject<OS_os_transaction> *suspendUpdateTransaction;
@property (retain, nonatomic) NSObject<OS_os_transaction> *resumeUpdateTransaction;
@property (retain, nonatomic) NSObject<OS_os_transaction> *applyUpdateTransaction;
@property (retain, nonatomic) NSObject<OS_os_transaction> *cancelPrepareTransaction;
@property (retain, nonatomic) NSObject<OS_os_transaction> *removePreparedTransaction;
@property (retain, nonatomic) NSObject<OS_os_transaction> *rollbackUpdateTransaction;
@property (retain, nonatomic) MSUUpdateBrainAssetLoader *brainLoader;
@property (nonatomic) long long msuHandle;

+ (id)commitStash:(id)a0;

- (void)resumeUpdate;
- (void)applyUpdate:(id)a0;
- (id)description;
- (void).cxx_destruct;
- (id)initWithDelegate:(id)a0;
- (void)_operationPreflightPersonalize:(id)a0;
- (void)_reportAnomaly:(id)a0;
- (void)_trackMSUBegin:(id)a0;
- (void)_operationPreflightFDRRecovery:(id)a0;
- (void)_operationRollbackUpdateResume:(id)a0;
- (void)_removePrepared;
- (void)_addRemoteServerAccessControlToMSUOptions:(id)a0 usingPolicy:(id)a1;
- (void)_addUpdateMetricsEventFieldsToMSUOptions:(id)a0 usingPolicy:(id)a1 descriptor:(id)a2;
- (void)_addUpdateMetricsEventFieldsToMSURollbackOptions:(id)a0 usingPolicy:(id)a1 rollbackDescriptor:(id)a2;
- (id)_newMSUOptionsUsingPolicy:(id)a0 descriptor:(id)a1 baseOptions:(id)a2;
- (id)_newMSURollbackOptionsUsingPolicy:(id)a0 rollbackDescriptor:(id)a1 baseOptions:(id)a2 additionalOptions:(id)a3;
- (id)_newPreflightOptionsUsingPolicy:(id)a0 subPolicyClass:(Class)a1 descriptor:(id)a2 baseOptions:(id)a3 additionalOptions:(id)a4;
- (id)_newPrepareOptionsUsingPolicy:(id)a0 descriptor:(id)a1;
- (id)_newRollbackPrepareOptionsUsingPolicy:(id)a0 rollbackDescriptor:(id)a1;
- (void)_operationApplyUpdate:(id)a0;
- (void)_operationLoadBrain:(id)a0;
- (void)_operationPreflightPrerequisiteCheck:(id)a0;
- (void)_operationPreflightSUDownload:(id)a0;
- (void)_operationPreflightWakeup:(id)a0;
- (void)_operationPrepareUpdate:(id)a0;
- (void)_operationResumeUpdate:(id)a0;
- (void)_operationRollbackUpdateApply:(id)a0;
- (void)_operationRollbackUpdatePrepare:(id)a0;
- (void)_operationRollbackUpdateSuspend:(id)a0;
- (void)_operationSuspendUpdate;
- (void)_reportApplied;
- (void)_reportApplyFailed:(id)a0;
- (void)_reportApplyProgress:(id)a0;
- (void)_reportBrainLoadFailed:(id)a0;
- (void)_reportBrainLoadProgress:(id)a0;
- (void)_reportBrainLoadStalled:(id)a0;
- (void)_reportBrainLoaded:(id)a0;
- (void)_reportFDRRecoveryPreflightFailed:(id)a0;
- (void)_reportFDRRecoveryPreflighted;
- (void)_reportPersonalizePreflightFailed:(id)a0;
- (void)_reportPersonalizePreflighted;
- (void)_reportPrepareFailed:(id)a0;
- (void)_reportPrepareProgress:(id)a0;
- (void)_reportPrepared:(id)a0;
- (void)_reportPrerequisiteCheckPreflightFailed:(id)a0;
- (void)_reportPrerequisiteCheckPreflighted;
- (void)_reportRemoveFailed:(id)a0;
- (void)_reportRemoved;
- (void)_reportResumeFailed:(id)a0;
- (void)_reportResumed;
- (void)_reportRollbackApplyFailed:(id)a0;
- (void)_reportRollbackApplySuccess;
- (void)_reportRollbackFailed:(id)a0;
- (void)_reportRollbackPrepareSuccess;
- (void)_reportRollbackResumeSuccess;
- (void)_reportRollbackSuspendSuccess;
- (void)_reportSUDownloadPreflightFailed:(id)a0;
- (void)_reportSUDownloadPreflighted;
- (void)_reportSuspendFailed:(id)a0;
- (void)_reportSuspended;
- (void)_reportWakeupPreflightFailed:(id)a0;
- (void)_reportWakeupPreflighted;
- (void)_trackMSUAnomaly:(id)a0 result:(long long)a1 description:(id)a2;
- (void)_trackMSUAnomaly:(id)a0 result:(long long)a1 description:(id)a2 underlying:(id)a3;
- (void)_trackMSUEnd:(id)a0;
- (void)_trackMSUEnd:(id)a0 withResult:(long long)a1 withError:(id)a2;
- (void)_trackMSUOptions:(id)a0 optionsName:(id)a1 withMSUOptions:(id)a2;
- (int)applyProgress:(struct __CFDictionary { } *)a0;
- (void)assignDescriptor:(id)a0 updateUUID:(id)a1;
- (void)assignRollbackDescriptor:(id)a0 updateUUID:(id)a1;
- (void)cancelPrepare;
- (id)doNotPatchList;
- (id)initWithDelegate:(id)a0 withCallbackQueue:(id)a1;
- (void)loadBrain:(id)a0;
- (void)loadBrainProgress:(id)a0 error:(id)a1;
- (void)preflightDownloadSU:(id)a0;
- (void)preflightFDRRecovery:(id)a0;
- (void)preflightPersonalize:(id)a0;
- (void)preflightPrerequisiteCheck:(id)a0;
- (void)preflightWakeup:(id)a0;
- (int)prepareProgress:(struct __CFDictionary { } *)a0;
- (void)prepareUpdate:(id)a0;
- (void)removePrepared;
- (void)resumeUpdate:(id)a0;
- (void)rollbackUpdateApply:(id)a0;
- (void)rollbackUpdatePrepare:(id)a0;
- (void)rollbackUpdateResume:(id)a0;
- (void)rollbackUpdateSuspend:(id)a0;
- (void)suspendUpdate;
- (void)updatePrepareOptions:(id)a0 withPolicy:(id)a1;

@end
