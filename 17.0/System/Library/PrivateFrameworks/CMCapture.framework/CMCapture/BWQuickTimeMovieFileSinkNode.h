@class FigCaptureMovieFileRecordingSettings, NSMutableDictionary, BWIrisMovieGenerator, BWVideoStabilizationAnalyticsPayload, NSDictionary, NSObject, BWStats, BWMovieFileOutputAnalyticsPayload, NSMutableArray, BWIrisStillImageMovieMetadataCache, BWMovingWindowStats, NSString, BWLimitedGMErrorLogger, BWInferenceResultRingBuffers, BWVideoQualityMetrics, NSArray, BWObjectRingBufferThreadSafe, BWVideoOrientationTimeMachine, BWObjectRingBuffer, BWIrisMovieInfo;
@protocol OS_dispatch_queue;

@interface BWQuickTimeMovieFileSinkNode : BWFileSinkNode {
    unsigned long long _currFileSize;
    unsigned long long _maxFileSize;
    unsigned long long _totalNANDReadBytesBeforeRecording;
    unsigned long long _totalNANDWriteBytesBeforeRecording;
    long long _estimatedMovieSizeOverhead;
    unsigned long long _minFreeDiskSpaceLimit;
    unsigned long long _fileSizeAtPreviousCheck;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _currFileDuration;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _checkDiskSpaceAtThisDuration;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _logStatsAtThisDuration;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _maxFileDuration;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _adjustedMaxFileDuration;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _nextTimeToReturnFileSize;
    int _masterInputTimeScale;
    float _maxVideoFrameRate;
    NSArray *_stagingQueues;
    FigCaptureMovieFileRecordingSettings *_settings;
    char *_parentPath;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _startingPTS;
    struct { long long x0; int x1; unsigned int x2; long long x3; } *_smallestWrittenPTSs;
    struct { long long x0; int x1; unsigned int x2; long long x3; } *_largestWrittenPTSs;
    struct { long long x0; int x1; unsigned int x2; long long x3; } *_largestWrittenVideoDTSs;
    struct { long long x0; int x1; unsigned int x2; long long x3; } *_secondLargestWrittenAudioVideoPTSs;
    struct { long long x0; int x1; unsigned int x2; long long x3; } *_lastWrittenAudioVideoDurations;
    NSArray *_movieLevelMetadata;
    NSArray *_trackReferenceListForMetadataInputs;
    NSArray *_structuralDependentTrackReferenceListForMetadataInputs;
    NSArray *_trackReferenceListForVideoInputs;
    NSArray *_trackReferenceListForAudioInputs;
    NSArray *_taggedMediaCharacteristicsForInputs;
    unsigned long long _numInputs;
    NSObject<OS_dispatch_queue> *_thumbnailGenerationDispatchQueue;
    struct __IOSurface { } *_thumbnailSurface;
    int _recordingState;
    struct OpaqueFigFormatWriter { } *_formatWriter;
    struct OpaqueCMByteStream { } *_byteStream;
    int *_trackIDs;
    BOOL *_expectingToSeeSamplesForInput;
    BOOL *_haveSeenSamplesForTrack;
    BOOL *_finalDurationNeedsToBeWrittenForTrack;
    BWIrisMovieInfo *_firstIrisMovieInfo;
    NSMutableArray *_pendingIrisRefMovieRequests;
    BWIrisMovieGenerator *_irisMovieGenerator;
    NSMutableArray *_flushingIrisMovieGenerators;
    NSObject<OS_dispatch_queue> *_irisMovieGenerationQueue;
    int _irisStillImageTimeTrackID;
    int _irisStillImageTimeTrackTimeScale;
    BOOL _recordingIsForFrontCamera;
    BOOL _recordingIsForExternalCamera;
    unsigned long long _masterInputIndex;
    BOOL _didBeginSession;
    BOOL _didBeginWriting;
    BOOL _needToDeMoof;
    BOOL _atLeastOneFragmentIsWritten;
    BOOL _vitalInputStreamHasBeenForcedOff;
    int _streamForcedOffErrorCode;
    int _formatWriterErrorCode;
    unsigned long long _numVideoTracks;
    BOOL _ignoreFileSizeLimit;
    BOOL _debugAudio;
    BOOL _haveDebugASBD;
    unsigned long long _numAudioTracks;
    struct AudioStreamBasicDescription { double mSampleRate; unsigned int mFormatID; unsigned int mFormatFlags; unsigned int mBytesPerPacket; unsigned int mFramesPerPacket; unsigned int mBytesPerFrame; unsigned int mChannelsPerFrame; unsigned int mBitsPerChannel; unsigned int mReserved; } _debugASBD;
    struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *_debugABL;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _debugDurationForFailOfDiskSpaceTest;
    struct OpaqueFigSimpleMutex { } *_propertyMutex;
    BOOL _irisSampleReferenceMoviesEnabled;
    BWInferenceResultRingBuffers *_irisMotionAnalysisRingBuffer;
    BWObjectRingBuffer *_irisStabilizedTrajectoryHomographyRingBuffer;
    BWObjectRingBufferThreadSafe *_overCaptureQualityMetadataRingBuffer;
    BWVideoQualityMetrics *_overCaptureQualityMetrics;
    double _maxTotalZoomFactor;
    double _pointlessOverCaptureMaxZoomThreshold;
    BWIrisStillImageMovieMetadataCache *_irisStillImageMovieMetadataCache;
    struct { int width; int height; } _videoDimensions;
    BOOL _irisMovieProcessingSuspended;
    unsigned long long _totalNumberOfFramesDropped;
    unsigned long long _numberOfFramesDroppedDueToFormatWriterQueueFull;
    BOOL _reportErrorForFrameDrops;
    NSDictionary *_temporalScalabilityProperties;
    BWVideoOrientationTimeMachine *_videoOrientationTimeMachine;
    unsigned long long _pipelineIndex;
    int _pipelineTraceID;
    BWMovingWindowStats *_capturePipelineLatencyStats;
    BWStats *_irisVideoLatencyStats;
    BWMovingWindowStats *_recentIrisVideoLatencyStats;
    BWStats *_videoLatencyStats;
    NSString *_gmLoggingPreamble;
    BWLimitedGMErrorLogger *_limitedGMErrorLogger;
    NSString *_clientApplicationID;
    long long _numVideoFramesPortTypeFront;
    long long _numVideoFramesPortTypeFrontSuperWide;
    long long _numVideoFramesPortTypeBack;
    long long _numVideoFramesPortTypeTelephoto;
    long long _numVideoFramesPortTypeSuperWide;
    BWMovieFileOutputAnalyticsPayload *_analyticsPayload;
    struct BWCoreAnalyticsMovieRecordingSphereAFStatistics { float accelStandardDeviation; float gyroStandardDeviation; float sphereMaxTrackErrorWide; float sphereMaxTrackErrorTele; float sphereStdTrackErrorSumXXWide; float sphereStdTrackErrorSumXXTele; float afMaxTrackErrorWide; float afMaxTrackErrorTele; float afMaxTrackErrorSuperWide; float afStdTrackErrorSumXXWide; float afStdTrackErrorSumXXTele; float afStdTrackErrorSumXXSuperWide; float sphereMinDistanceFromEndStopWide; float sphereMinDistanceFromEndStopTele; float spherePowerWide; float spherePowerTele; float sphereMaxPeakCurrentWide; float sphereMaxPeakCurrentTele; float sphereMaxPeakCurrentAllChannels; float afPowerWide; float afPowerTele; float afPowerSuperWide; float afMaxPeakCurrentWide; float afMaxPeakCurrentTele; float afMaxPeakCurrentSuperWide; float afMaxPeakCurrentAllChannels; float afAndSphereMaxPeakCurrentWide; float afAndSphereMaxPeakCurrentTele; float afAndSphereMaxPeakCurrentAllChannels; unsigned int numberOfSamples; unsigned int numberOfSamplesWide; unsigned int numberOfSamplesTele; unsigned int numberOfSamplesSuperWide; BOOL sphereTravelRangeHistogramExtended; unsigned int range_0_90umBinWide; unsigned int range_90_110umBinWide; unsigned int range_110_130umBinWide; unsigned int range_130_150umBinWide; unsigned int range_150_175umBinWide; unsigned int range_175_infinityBinWide; unsigned int range_175_220umBinWide; unsigned int range_220_infinityBinWide; unsigned int range_0_90umBinTele; unsigned int range_90_110umBinTele; unsigned int range_110_130umBinTele; unsigned int range_130_150umBinTele; unsigned int range_150_175umBinTele; unsigned int range_175_infinityBinTele; unsigned int range_175_220umBinTele; unsigned int range_220_infinityBinTele; } _sphereAFStatistics;
    NSMutableDictionary *_sphereModeByPortType;
    NSMutableDictionary *_APSModeByPortType;
    BOOL _afDriverShortOccurred;
    long long _accumulatedSystemPressureLevel;
    long long _timeOfLastSystemPressureChange;
    int _currentSystemPressureLevel;
    long long _recordingStartTime;
    long long _timeToCriticalSystemPressureInMS;
    unsigned int _factorsContributingToMaxSystemPressureLevel;
    int _maxSystemPressureLevel;
    NSMutableDictionary *_vfrStatistics;
    NSMutableDictionary *_vfrFrameRateChangeReasonCount;
    int _prevReason;
    NSMutableDictionary *_cameraSwitchStatistics;
    int _videoSTFAppliedFrameCount;
    int _videoSTFTotalFrameCount;
    int _videoSTFCancelReason;
    struct BWCoreAnalyticsMovieRecordingVideoSTFStatistics { BOOL videoSTFEnabled; NSString *cancelReason; float videoSTFAppliedFrameCountPercentage; float largestMaxCorrectionLevel; int version; unsigned int lowMeanCorrectionLevelFrameCount; unsigned int moderateMeanCorrectionLevelFrameCount; unsigned int highMeanCorrectionLevelFrameCount; unsigned int veryHighMeanCorrectionLevelFrameCount; unsigned int extremeMeanCorrectionLevelFrameCount; } _videoSTFStats;
    struct BWCoreAnalyticsMovieRecordingCinematicVideoStatistics { unsigned int countOfSoftFocusRequests; unsigned int countOfHardFocusRequests; unsigned int countOfFixedPlaneFocusRequests; unsigned int countOfTapToTrackFailures; unsigned int countOfFixedTaxonomyFocusDecisions; unsigned int countOfNonTaxonomyFocusDecisions; unsigned int countOfCustomFocusDecisions; unsigned int countOfAutoFocusDecisions; } _cinematicVideoMovieRecordingStats;
    BWVideoStabilizationAnalyticsPayload *_videoStabilizationAnalyticsPayLoad;
    BOOL _videoStabilizationAnalyticsExtracted;
    struct OpaqueFigVirtualCaptureCard { } *_virtualCaptureCard;
    NSMutableDictionary *_previousMetadataPTSValuesByInputIndex;
    long long _maximumAllowedInFlightCompressedBytes;
}

@property (copy, nonatomic) NSArray *movieLevelMetadata;
@property (copy, nonatomic) NSArray *trackReferenceListForMetadataInputs;
@property (copy, nonatomic) NSArray *structuralDependentTrackReferenceListForMetadataInputs;
@property (copy, nonatomic) NSArray *trackReferenceListForVideoInputs;
@property (copy, nonatomic) NSArray *trackReferenceListForAudioInputs;
@property (copy, nonatomic) NSArray *taggedMediaCharacteristicsForInputs;
@property (nonatomic) BOOL irisMovieProcessingSuspended;
@property (nonatomic) BOOL cinematicVideoEnabled;

+ (void)initialize;

- (void)handleDroppedSample:(id)a0 forInput:(id)a1;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })lastFileDuration;
- (void)setMaximumAllowedInFlightCompressedBytes:(long long)a0;
- (void)setupOverCaptureQualityMetricsForLivePhotoHistory:(int)a0;
- (void)prepareForCurrentConfigurationToBecomeLive;
- (void)renderSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0 forInput:(id)a1;
- (void)dealloc;
- (id)initWithSinkID:(id)a0;
- (void)configurationWithID:(long long)a0 updatedFormat:(id)a1 didBecomeLiveForInput:(id)a2;
- (void)setIrisSampleReferenceMoviesEnabled:(BOOL)a0;
- (void)setVideoOrientationTimeMachine:(id)a0;
- (void)didReachEndOfDataForInput:(id)a0;
- (long long)maximumAllowedInFlightCompressedBytes;
- (id)nodeSubType;
- (void)setIrisStillImageMovieMetadataCache:(id)a0;
- (id)initWithNumberOfVideoInputs:(unsigned long long)a0 numberOfAuxiliaryPictureInputs:(unsigned long long)a1 numberOfAudioInputs:(unsigned long long)a2 numberOfMetadataInputs:(unsigned long long)a3 cameraInfoByPortType:(id)a4 pipelineIndex:(unsigned long long)a5 sinkID:(id)a6;
- (id)clientApplicationID;
- (id)irisStillImageMovieMetadataCache;
- (void)setupRingBufferForStabilizedTrajectoryHomographies:(int)a0;
- (void)setClientApplicationID:(id)a0;
- (void)setPipelineTraceID:(int)a0;
- (int)pipelineTraceID;
- (unsigned long long)lastFileSize;
- (id)irisMotionAnalysisRingBuffer;
- (BOOL)irisSampleReferenceMoviesEnabled;
- (void)setIrisMotionAnalysisRingBuffer:(id)a0;
- (id)videoOrientationTimeMachine;

@end
