@class HKSPThrottler, HKSPAnalyticsManager, HKSPXPCClientIdentifier, HKSPSyncAnchorContainer, HKHealthStore, HKSPSleepWidgetManager, HKSPSleepStoreCache, HKSleepHealthStore, NSString, HKSPXPCConnectionProvider, HKSPSleepFocusConfiguration, HKSPSleepStoreExportedObject, HKSPObserverSet;
@protocol NAScheduler, HKSPSleepFocusModeBridge;

@interface HKSPSleepStore : NSObject <HKSPSleepFocusModeBridgeDelegate, HKSPXPCConnectionProviderDelegate>

@property (readonly, copy, nonatomic) HKSPXPCClientIdentifier *clientIdentifier;
@property (readonly, nonatomic) HKSleepHealthStore *sleepHealthStore;
@property (readonly, nonatomic) unsigned long long options;
@property (readonly, nonatomic) HKSPObserverSet *observers;
@property (readonly, nonatomic) HKSPXPCConnectionProvider *connectionProvider;
@property (readonly, nonatomic) HKSPSleepStoreCache *sleepStoreCache;
@property (readonly, nonatomic) id<NAScheduler> callbackScheduler;
@property (readonly, nonatomic) HKSPThrottler *reconnectThrottler;
@property (readonly, nonatomic) id<HKSPSleepFocusModeBridge> sleepFocusModeBridge;
@property (readonly, copy, nonatomic) id /* block */ currentDateProvider;
@property (readonly, nonatomic) HKSPSleepStoreExportedObject *sleepStoreExportedObject;
@property (retain, nonatomic) HKSPSyncAnchorContainer *syncAnchorContainer;
@property (readonly, nonatomic) HKSPSleepWidgetManager *widgetManager;
@property (readonly, nonatomic) BOOL hasSleepFocusMode;
@property (readonly, nonatomic) HKSPSleepFocusConfiguration *sleepFocusConfiguration;
@property (readonly, nonatomic) HKHealthStore *healthStore;
@property (readonly, nonatomic) HKSPAnalyticsManager *analyticsManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)_updatedHistoricalSleepSchedulesFromSleepSchedule:(id)a0 options:(unsigned long long)a1 date:(id)a2;
+ (id)_sleepDisabledError;
+ (id)_updatedHistoricalSleepGoalForSleepSchedule:(id)a0 options:(unsigned long long)a1 date:(id)a2;

- (void)reconnect;
- (id)initWithIdentifier:(id)a0;
- (id)init;
- (void)clearWidgetOverrideWithCompletion:(id /* block */)a0;
- (void)dealloc;
- (void)removeObserver:(id)a0;
- (void)sleepAlarmWasDismissedOnDate:(id)a0 source:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)dismissSleepLockWithCompletion:(id /* block */)a0;
- (void)dismissGoodMorningWithCompletion:(id /* block */)a0;
- (void)sleepFocusModeBridge:(id)a0 didUpdateSleepFocusConfiguration:(id)a1;
- (id)initWithHealthStore:(id)a0;
- (void)connect;
- (void)setLockScreenOverrideState:(long long)a0 userInfo:(id)a1 completion:(id /* block */)a2;
- (void)removeAllObservers;
- (void)sleepAlarmWasSnoozedUntilDate:(id)a0 source:(unsigned long long)a1 completion:(id /* block */)a2;
- (void).cxx_destruct;
- (void)publishNotificationWithIdentifier:(id)a0 userInfo:(id)a1 completion:(id /* block */)a2;
- (void)setWidgetOverrideState:(long long)a0 completion:(id /* block */)a1;
- (void)publishWakeUpResultsNotificationWithCompletion:(id /* block */)a0;
- (void)deleteSleepFocusModeWithCompletion:(id /* block */)a0;
- (void)confirmAwakeWithCompletion:(id /* block */)a0;
- (void)addObserver:(id)a0;
- (void)createSleepFocusModeWithCompletion:(id /* block */)a0;
- (void)sleepAlarmWasModifiedFromSource:(unsigned long long)a0 completion:(id /* block */)a1;
- (BOOL)_cachingEnabled;
- (id)initWithIdentifier:(id)a0 healthStore:(id)a1;
- (id)currentSleepScheduleWithError:(id *)a0;
- (void)currentSleepSettingsWithCompletion:(id /* block */)a0;
- (id)currentSleepSettingsWithError:(id *)a0;
- (id)sleepScheduleModelWithError:(id *)a0;
- (id)upcomingScheduleOccurrenceAfterDate:(id)a0 error:(id *)a1;
- (id)_getSleepSettingsDoSync:(BOOL)a0 notify:(BOOL)a1;
- (void)setSleepWindDownShortcutsOnboardingCompletedVersion:(long long)a0 completion:(id /* block */)a1;
- (void)sleepWidgetStateWithCompletion:(id /* block */)a0;
- (id)_getSleepScheduleDoSync:(BOOL)a0 notify:(BOOL)a1;
- (BOOL)_reloadsWidgets;
- (id)_sleepAlarmWasModifiedOnServer:(unsigned long long)a0;
- (id)currentSleepScheduleStateFuture;
- (id)sleepModeFuture;
- (void)_checkInWithCurrentSyncAnchor;
- (id)_clearWidgetOverrideOnServer;
- (id)_confirmAwakeOnServer;
- (BOOL)_connectAutomatically;
- (id)_dismissGoodMorningOnServer;
- (id)_dismissSleepLockOnServer;
- (id)_getSleepEventRecordDoSync:(BOOL)a0 notify:(BOOL)a1;
- (id)_getSleepEventRecordFromServerDoSync:(BOOL)a0 notify:(BOOL)a1;
- (id)_getSleepModeDoSync:(BOOL)a0 notify:(BOOL)a1;
- (id)_getSleepModeFromServerDoSync:(BOOL)a0 notify:(BOOL)a1;
- (id)_getSleepScheduleFromServerDoSync:(BOOL)a0 notify:(BOOL)a1;
- (id)_getSleepScheduleStateFromServerDoSync:(BOOL)a0 notify:(BOOL)a1;
- (id)_getSleepScheduleStateOnDoSync:(BOOL)a0 notify:(BOOL)a1;
- (id)_getSleepSettingsFromServerDoSync:(BOOL)a0 notify:(BOOL)a1;
- (id)_getSleepWidgetStateDoSync:(BOOL)a0;
- (id)_getSleepWidgetStateFromServerDoSync:(BOOL)a0;
- (void)_notifyObserversForChangedSleepEventRecord:(id)a0;
- (void)_notifyObserversForChangedSleepMode:(long long)a0;
- (void)_notifyObserversForChangedSleepSchedule:(id)a0;
- (void)_notifyObserversForChangedSleepScheduleState:(unsigned long long)a0;
- (void)_notifyObserversForChangedSleepSettings:(id)a0;
- (void)_notifyObserversForSleepEvent:(id)a0;
- (BOOL)_observeSleepFocusMode;
- (id)_prepareObjectForSave:(id)a0 options:(unsigned long long)a1;
- (id)_publishNotificationOnServerWithIdentifier:(id)a0 userInfo:(id)a1;
- (id)_publishWakeUpResultsNotificationOnServer;
- (BOOL)_resultHasSchedule:(id)a0;
- (BOOL)_resultScheduleIsValid:(id)a0;
- (BOOL)_resultScheduleMeetsDefaultGoal:(id)a0;
- (id)_saveCurrentSleepEventRecordOnServer:(id)a0 options:(unsigned long long)a1;
- (id)_saveCurrentSleepScheduleOnServer:(id)a0 options:(unsigned long long)a1;
- (id)_saveCurrentSleepSettingsOnServer:(id)a0 options:(unsigned long long)a1;
- (id)_sendScheduleChangedAnalyticsWithContext:(id)a0;
- (id)_setLockScreenOverrideStateOnServerWithState:(long long)a0 userInfo:(id)a1;
- (id)_setSleepModeOnServer:(long long)a0 reason:(unsigned long long)a1;
- (id)_setWidgetOverrideStateOnServerWithState:(long long)a0;
- (id)_sleepAlarmWasDismissedOnDateOnServer:(id)a0 source:(unsigned long long)a1;
- (id)_sleepAlarmWasSnoozedUntilDateOnServer:(id)a0 source:(unsigned long long)a1;
- (id)_writeHistoricalSchedule:(id)a0 options:(unsigned long long)a1;
- (void)connectSynchronously:(BOOL)a0;
- (id)currentSleepEventRecordFuture;
- (void)currentSleepEventRecordWithCompletion:(id /* block */)a0;
- (id)currentSleepEventRecordWithError:(id *)a0;
- (id)currentSleepScheduleFuture;
- (void)currentSleepScheduleStateWithCompletion:(id /* block */)a0;
- (unsigned long long)currentSleepScheduleStateWithError:(id *)a0;
- (void)currentSleepScheduleWithCompletion:(id /* block */)a0;
- (id)currentSleepSettingsFuture;
- (id)initWithConnectionProviderProvider:(id /* block */)a0 identifier:(id)a1 healthStore:(id)a2 options:(unsigned long long)a3;
- (id)initWithConnectionProviderProvider:(id /* block */)a0 identifier:(id)a1 healthStore:(id)a2 options:(unsigned long long)a3 analyticsManager:(id)a4 throttlerProvider:(id /* block */)a5 callbackScheduler:(id)a6 sleepFocusModeBridgeProvider:(id /* block */)a7 widgetTimelineControllersProvider:(id /* block */)a8 currentDateProvider:(id /* block */)a9;
- (id)initWithIdentifier:(id)a0 healthStore:(id)a1 options:(unsigned long long)a2;
- (void)nextEventDueAfterDate:(id)a0 completion:(id /* block */)a1;
- (id)nextEventDueAfterDate:(id)a0 error:(id *)a1;
- (id)nextEventDueAfterDateFuture:(id)a0;
- (void)nextEventWithIdentifier:(id)a0 dueAfterDate:(id)a1 completion:(id /* block */)a2;
- (id)nextEventWithIdentifier:(id)a0 dueAfterDate:(id)a1 error:(id *)a2;
- (id)nextEventWithIdentifierFuture:(id)a0 dueAfterDate:(id)a1;
- (id)saveCurrentSleepEventRecord:(id)a0;
- (void)saveCurrentSleepEventRecord:(id)a0 completion:(id /* block */)a1;
- (id)saveCurrentSleepEventRecord:(id)a0 options:(unsigned long long)a1;
- (void)saveCurrentSleepEventRecord:(id)a0 options:(unsigned long long)a1 completion:(id /* block */)a2;
- (id)saveCurrentSleepSchedule:(id)a0;
- (void)saveCurrentSleepSchedule:(id)a0 completion:(id /* block */)a1;
- (void)saveCurrentSleepSchedule:(id)a0 options:(unsigned long long)a1 completion:(id /* block */)a2;
- (id)saveCurrentSleepSchedule:(id)a0 options:(unsigned long long)a1 context:(id)a2;
- (void)saveCurrentSleepSchedule:(id)a0 options:(unsigned long long)a1 context:(id)a2 completion:(id /* block */)a3;
- (id)saveCurrentSleepSettings:(id)a0;
- (void)saveCurrentSleepSettings:(id)a0 completion:(id /* block */)a1;
- (id)saveCurrentSleepSettings:(id)a0 options:(unsigned long long)a1;
- (void)saveCurrentSleepSettings:(id)a0 options:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)setSleepCoachingOnboardingCompletedVersion:(long long)a0 completion:(id /* block */)a1;
- (void)setSleepModeOn:(BOOL)a0 completion:(id /* block */)a1;
- (void)setSleepModeOn:(BOOL)a0 reason:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)setSleepTrackingOnboardingCompletedVersion:(long long)a0 completion:(id /* block */)a1;
- (void)setUpcomingWakeUpAlarmEnabled:(BOOL)a0 date:(id)a1 completion:(id /* block */)a2;
- (void)setWakeUpAlarmEnabled:(BOOL)a0 resolvedOccurrence:(id)a1 date:(id)a2 completion:(id /* block */)a3;
- (void)skipUpcomingWakeUpAlarmForDate:(id)a0 completion:(id /* block */)a1;
- (void)sleepAlarmWasDismissedOnDate:(id)a0 completion:(id /* block */)a1;
- (void)sleepAlarmWasModifiedWithCompletion:(id /* block */)a0;
- (void)sleepAlarmWasSnoozedUntilDate:(id)a0 completion:(id /* block */)a1;
- (id)sleepModeOnFuture;
- (void)sleepModeOnWithCompletion:(id /* block */)a0;
- (BOOL)sleepModeOnWithError:(id *)a0;
- (void)sleepModeWithCompletion:(id /* block */)a0;
- (long long)sleepModeWithError:(id *)a0;
- (id)sleepScheduleModelFuture;
- (void)sleepScheduleModelWithCompletion:(id /* block */)a0;
- (id)sleepWidgetStateFuture;
- (long long)sleepWidgetStateWithError:(id *)a0;
- (void)suggestedSleepScheduleWithProviders:(id)a0 completion:(id /* block */)a1;
- (id)upcomingResolvedScheduleOccurrenceAfterDate:(id)a0 alarmStatus:(long long *)a1 error:(id *)a2;
- (id)upcomingResolvedScheduleOccurrenceAfterDate:(id)a0 error:(id *)a1;
- (id)upcomingScheduleOccurrenceAfterDate:(id)a0 alarmStatus:(long long *)a1 error:(id *)a2;
- (void)upcomingScheduleOccurrenceAfterDate:(id)a0 completion:(id /* block */)a1;
- (id)upcomingScheduleOccurrenceAfterDateFuture:(id)a0;

@end
