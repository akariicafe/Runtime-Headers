@class UIView, NSString, UIImage, SUUIFocusedTouchGestureRecognizer, SUUIButtonViewElement, UIImageView, SUUICircleProgressIndicator, SUUIBuyButtonDescriptor, NSMutableAttributedString, UILabel, UIColor;
@protocol SUUIItemOfferButtonDelegate;

@interface SUUIItemOfferButton : UIControl <SUUIViewElementOfferButton> {
    UIColor *_backgroundColor;
    BOOL _borderCornerRadiusMatchesHalfBoundingDimension;
    UIView *_borderView;
    SUUIFocusedTouchGestureRecognizer *_cancelGestureRecognizer;
    UIImage *_cloudImage;
    UIColor *_confirmationColor;
    NSMutableAttributedString *_confirmationTitleAttributedString;
    struct CGSize { double width; double height; } _confirmationTitleFitSize;
    UIImage *_image;
    UIImageView *_imageView;
    UIImageView *_borderedImageView;
    SUUICircleProgressIndicator *_progressIndicator;
    NSMutableAttributedString *_titleAttributedString;
    struct CGSize { double width; double height; } _titleFitSize;
    UILabel *_titleLabel;
    BOOL _usesDrawRectPath;
    UIImageView *_universalImageView;
    BOOL _downloadRestores;
    NSString *_offerButtonStateDescription;
}

@property (retain, nonatomic) SUUIBuyButtonDescriptor *buttonDescriptor;
@property (copy, nonatomic) NSString *buyType;
@property (copy, nonatomic) UIColor *cloudTintColor;
@property (nonatomic, getter=isDisabledButSelectable) BOOL disabledButSelectable;
@property (retain, nonatomic) SUUIButtonViewElement *element;
@property (readonly, nonatomic) BOOL restores;
@property (readonly, nonatomic) BOOL supportsPlayButton;
@property (weak, nonatomic) id<SUUIItemOfferButtonDelegate> delegate;
@property (copy, nonatomic) NSString *confirmationTitle;
@property (retain, nonatomic) UIImage *image;
@property (retain, nonatomic) UIImage *borderedImage;
@property (copy, nonatomic) NSString *title;
@property (copy, nonatomic) id /* block */ centerImageProvider;
@property (readonly, nonatomic) NSString *offerButtonStateDescription;
@property (nonatomic) long long fillStyle;
@property (nonatomic) double borderColorAlphaMultiplier;
@property (nonatomic) double progress;
@property (readonly, nonatomic, getter=isShowingConfirmation) BOOL showingConfirmation;
@property (nonatomic) BOOL showsConfirmationState;
@property (nonatomic) long long progressType;
@property (nonatomic) long long confirmationTitleStyle;
@property (nonatomic) long long titleStyle;
@property (nonatomic, getter=isUniversal) BOOL universal;
@property (weak, nonatomic) id<SUUIItemOfferButtonDelegate> itemOfferDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)_defaultTitleAttributes;
+ (id)_basicAnimationWithKeyPath:(id)a0;
+ (id)_cachedImageForAttributedTitle:(id)a0 titleStyle:(long long)a1 size:(struct CGSize { double x0; double x1; })a2 fillStyle:(long long)a3 universal:(BOOL)a4 tintColor:(id)a5 interfaceStyle:(long long)a6;
+ (id)_imageForAttributedTitle:(id)a0 titleStyle:(long long)a1 size:(struct CGSize { double x0; double x1; })a2 fillStyle:(long long)a3 universal:(BOOL)a4 tintColor:(id)a5;
+ (id)_imageForProgressType:(long long)a0;
+ (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_imageInsetsForProgressType:(long long)a0;
+ (BOOL)_sizeMattersForTitleStyle:(long long)a0;
+ (struct CGSize { double x0; double x1; })_titleSizeThatFitsForSize:(struct CGSize { double x0; double x1; })a0 titleStyle:(long long)a1 mutableAttributedString:(id)a2;
+ (id)_universalPlusImageWithTintColor:(id)a0;
+ (BOOL)canOpenItemForItemState:(id)a0 clientContext:(id)a1;
+ (id)cloudImageWithTintColor:(id)a0 arrowTintColor:(id)a1;
+ (id)cloudTintColorForBackgroundColor:(id)a0;
+ (id)itemOfferButtonWithAppearance:(id)a0;
+ (id)localizedTitleForItemState:(id)a0 clientContext:(id)a1;
+ (id)playHighlightImageWithTintColor:(id)a0;
+ (id)playImageWithTintColor:(id)a0;
+ (id)playTintColorForBackgroundColor:(id)a0;

- (void)setBackgroundColor:(id)a0;
- (void)cancelTrackingWithEvent:(id)a0;
- (void)dealloc;
- (void)tintColorDidChange;
- (void)_removeAllAnimations:(BOOL)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setEnabled:(BOOL)a0;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)continueTrackingWithTouch:(id)a0 withEvent:(id)a1;
- (BOOL)beginTrackingWithTouch:(id)a0 withEvent:(id)a1;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)endTrackingWithTouch:(id)a0 withEvent:(id)a1;
- (void)didMoveToWindow;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (void)setProgress:(double)a0 animated:(BOOL)a1;
- (void)_sendDidAnimate;
- (void)_transitionFromTitleOrImage:(id)a0 toProgress:(id)a1 withDuration:(double)a2 completion:(id /* block */)a3;
- (BOOL)_touchInBounds:(id)a0;
- (void)_transitionFromProgress:(id)a0 toTitleOrImage:(id)a1 withDuration:(double)a2 completion:(id /* block */)a3;
- (void)_adjustViewOrderingForProperties:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_borderedImageViewFrame;
- (id)_buttonPropertiesForState:(id)a0;
- (void)_cancelGestureAction:(id)a0;
- (double)_horizontalInsetForTitleStyle:(long long)a0;
- (id)_imageForProgressType:(long long)a0;
- (void)_insertBorderView;
- (void)_insertBorderedImageView;
- (void)_insertCancelGestureRecognizer;
- (void)_insertImageView;
- (void)_insertLabel;
- (void)_insertProgressIndicator;
- (void)_insertUniversalView;
- (void)_reloadForCurrentState:(BOOL)a0;
- (void)_removeCancelGestureRecognizer;
- (void)_sendWillAnimate;
- (void)_transitionFromBorderedImage:(id)a0 toTitle:(id)a1 withDuration:(double)a2 completion:(id /* block */)a3;
- (void)_transitionFromImage:(id)a0 toImage:(id)a1 withDuration:(double)a2 completion:(id /* block */)a3;
- (void)_transitionFromProgress:(id)a0 toProgress:(id)a1 withDuration:(double)a2 completion:(id /* block */)a3;
- (void)_transitionFromTitle:(id)a0 toTitle:(id)a1 withDuration:(double)a2 completion:(id /* block */)a3;
- (void)_updateForChangedConfirmationTitleProperty;
- (void)_updateForChangedTitleProperty;
- (BOOL)hasBorderedImage;
- (BOOL)hasNonBorderedImage;
- (struct CGSize { double x0; double x1; })layoutSizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (void)removeButtonStateAnimations;
- (void)setColoringWithAppearance:(id)a0;
- (void)setProgressType:(long long)a0 animated:(BOOL)a1;
- (void)setShowingConfirmation:(BOOL)a0 animated:(BOOL)a1;
- (BOOL)setTitle:(id)a0 confirmationTitle:(id)a1 itemState:(id)a2 clientContext:(id)a3 animated:(BOOL)a4;
- (BOOL)setValuesUsingBuyButtonDescriptor:(id)a0 itemState:(id)a1 clientContext:(id)a2 animated:(BOOL)a3;
- (BOOL)setValuesUsingItemOffer:(id)a0 itemState:(id)a1 clientContext:(id)a2 animated:(BOOL)a3;
- (void)showCloudImage;

@end
