@class TIInputContextHistory, TIInputMode, NSDictionary, NSLocale, TITestUserPersona, TIKeyboardCandidate, TIErrorGenerator, TIKeyboardTyperUserModel, ACTKeyboardController, NSString, TIKeyboardCandidateResultSet, TIKeyboardInputManager, UIKBTree, NSArray, TIAutocorrectionList;
@protocol ACTUserActionStreaming, TIKeyboardInputManagerFactory;

@interface TIKeyboardTyper : NSObject <ACTUserActionStreamDelegate> {
    unsigned long long _touchPathID;
}

@property (nonatomic) id<TIKeyboardInputManagerFactory> keyboardInputManagerFactory;
@property (copy, nonatomic) NSString *inputModeIdentifier;
@property (nonatomic) BOOL asyncPredictions;
@property (retain, nonatomic) UIKBTree *keyboard;
@property (readonly, nonatomic) UIKBTree *keyplane;
@property (readonly, nonatomic, getter=isShifted) BOOL shifted;
@property (readonly, nonatomic, getter=isAutoshifted) BOOL autoshifted;
@property (copy, nonatomic) NSString *clientIdentifier;
@property (copy, nonatomic) NSString *recipientIdentifier;
@property (retain, nonatomic) TIInputContextHistory *inputContextHistory;
@property (nonatomic) BOOL nextKeyIsMultitap;
@property (readonly, nonatomic) TIKeyboardInputManager *inputManager;
@property (nonatomic) BOOL usesAutocorrection;
@property (nonatomic) BOOL usesPrediction;
@property (nonatomic) BOOL usesAutocapitalization;
@property (nonatomic) BOOL wordLearningEnabled;
@property (nonatomic) BOOL inlineCompletionEnabled;
@property (nonatomic) BOOL hardwareKeyboardMode;
@property (nonatomic) BOOL shouldSkipCandidateSelection;
@property (nonatomic) BOOL longPredictionListEnabled;
@property (nonatomic) BOOL usesTransliteration;
@property (nonatomic) BOOL insertsSpaceAfterPredictiveInput;
@property (nonatomic) unsigned long long autocorrectionType;
@property (nonatomic) unsigned long long autocapitalizationType;
@property (readonly, nonatomic) NSString *text;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } selectedRange;
@property (readonly, nonatomic) NSString *markedText;
@property (readonly, nonatomic) NSArray *predictions;
@property (retain, nonatomic) TIAutocorrectionList *autocorrectionList;
@property (retain, nonatomic) TIInputMode *inputMode;
@property (nonatomic) double lastTimestamp;
@property (nonatomic) unsigned long long learnWordContextIndex;
@property (copy, nonatomic) NSLocale *locale;
@property (retain, nonatomic) TIKeyboardTyperUserModel *userModel;
@property (readonly, nonatomic) id<ACTUserActionStreaming> userActionStream;
@property (retain, nonatomic) TIErrorGenerator *errorGenerator;
@property (retain, nonatomic) TITestUserPersona *userPersona;
@property (readonly, nonatomic) ACTKeyboardController *keyboardController;
@property (nonatomic) BOOL lastInputWasSelection;
@property (nonatomic) double interTouchTimestampInterval;
@property (nonatomic) BOOL shouldDecomposeInputString;
@property (nonatomic) int maxPredictionsReported;
@property (nonatomic) long long maxPredictions;
@property (nonatomic) BOOL logDocumentContext;
@property (nonatomic) BOOL warnIfSelectingPopupVariant;
@property (readonly, nonatomic) BOOL usePartialCandidates;
@property (readonly, nonatomic) BOOL inPartialCandidateSelection;
@property (retain, nonatomic) NSString *badSentenceLogFilePath;
@property (nonatomic) BOOL printTypingTranscript;
@property (retain, nonatomic) NSDictionary *shiftedKeyToUnShiftedKeyExcludeCapitalizationMap;
@property (readonly, nonatomic) TIKeyboardCandidate *autocorrection;
@property (readonly, nonatomic) NSArray *predictionBarCandidates;
@property (readonly, nonatomic) NSArray *inlineCompletionCandidates;
@property (readonly, nonatomic) TIKeyboardCandidateResultSet *candidateResultSet;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)acceptCandidate:(id)a0;
- (void)generateCandidates;
- (id)document;
- (id)init;
- (void)reset;
- (void)dealloc;
- (id)internalStringToExternal:(id)a0;
- (void)tearDown;
- (void)syncToDocumentState:(id)a0;
- (void)insertText:(id)a0;
- (void).cxx_destruct;
- (void)acceptAutocorrection;
- (id)externalStringToInternal:(id)a0;
- (id)initWithInputMode:(id)a0;
- (void)adjustPhraseBoundaryInForwardDirection:(BOOL)a0 granularity:(int)a1;
- (id)candidatesForString:(id)a0;
- (void)attemptToDelete;
- (long long)performTouchDragAtLocation:(struct CGPoint { double x0; double x1; })a0 radius:(float)a1 timestamp:(double)a2 pathIndex:(unsigned long long)a3 fingerID:(int)a4;
- (id)_keyplaneCloserToKeyWithString:(id)a0;
- (void)attemptToRapidDeleteCharacters:(unsigned int)a0;
- (long long)performTouchDownAtLocation:(struct CGPoint { double x0; double x1; })a0 radius:(float)a1 timestamp:(double)a2 pathIndex:(unsigned long long)a3 fingerID:(int)a4;
- (void)performTouchRestAtLocation:(struct CGPoint { double x0; double x1; })a0 radius:(float)a1 timestamp:(double)a2 pathIndex:(unsigned long long)a3 fingerID:(int)a4;
- (void)_bumpTouchPathID;
- (void)_finishKeystrokeAndRecordPredictionsInTypingLog:(id)a0 touchedKey:(id)a1 insertedKey:(id)a2 typingLog:(id)a3;
- (id)_logStringForTouchedKey:(id)a0;
- (void)_performAcceptCandidate:(id)a0 timestamp:(double)a1 typingLog:(id)a2;
- (void)_performAcceptCandidate:(id)a0 timestamp:(double)a1 typingLog:(id)a2 predictiveCandidate:(BOOL)a3;
- (void)_performAcceptCandidate:(id)a0 timestamp:(double)a1 typingLog:(id)a2 predictiveCandidate:(BOOL)a3 intendedTransliteration:(id)a4;
- (void)_performAcceptPredictiveCandidate:(id)a0 timestamp:(double)a1 typingLog:(id)a2;
- (id)_performGestureKeyInput:(id)a0 timestamp:(double)a1 typingLog:(id)a2;
- (void)_performRejectCandidate:(id)a0 timestamp:(double)a1 typingLog:(id)a2;
- (id)_performTapAtLocation:(struct CGPoint { double x0; double x1; })a0 timestamp:(double)a1 fingerID:(int)a2 secondaryString:(BOOL)a3;
- (id)_performTapAtLocation:(struct CGPoint { double x0; double x1; })a0 timestamp:(double)a1 intendedKey:(id)a2 touchedKey:(id)a3 secondaryString:(BOOL)a4 touchError:(id)a5 typingLog:(id)a6;
- (id)_performTouchEvent:(id)a0 typingLog:(id)a1;
- (id)_performVariantKey:(id)a0 timestamp:(double)a1 typingLog:(id)a2;
- (void)_skipTapTimestamp:(double)a0 intendedKey:(id)a1 typingLog:(id)a2;
- (void)acceptCandidateFromPredictionBar:(id)a0;
- (void)acceptCandidateInputEvent:(id)a0 fromCandidateBar:(BOOL)a1;
- (void)acceptCandidateViaKeyboard:(id)a0;
- (void)acceptPredictiveCandidate:(id)a0;
- (void)adjustCursorByOffset:(long long)a0;
- (void)adjustPhraseBoundaryByOffset:(long long)a0 granularity:(int)a1;
- (void)attemptGestureKeyInput:(id)a0;
- (void)attemptTapOnKeyWithString:(id)a0;
- (void)attemptTapOnKeyWithString:(id)a0 withErrorGenerator:(id)a1 typingLog:(id)a2;
- (void)attemptToDeleteWithCount:(unsigned int)a0;
- (void)attemptToShift;
- (void)attemptToStrokeWord:(id)a0;
- (void)attemptToStrokeWord:(id)a0 startTime:(double)a1 duration:(double)a2 typingLog:(id)a3 callback:(id /* block */)a4;
- (void)attemptToStrokeWord:(id)a0 startTime:(double)a1 typingLog:(id)a2 callback:(id /* block */)a3;
- (void)attemptToStrokeWord:(id)a0 typingLog:(id)a1;
- (void)attemptToStrokeWord:(id)a0 typingLog:(id)a1 callback:(id /* block */)a2;
- (void)attemptToStrokeWord:(id)a0 withCallback:(id /* block */)a1;
- (void)attemptToStrokeWord:(id)a0 withStartTime:(double)a1;
- (void)attemptToStrokeWord:(id)a0 withStartTime:(double)a1 duration:(double)a2;
- (BOOL)attemptToTapAutocorrectionWithString:(id)a0;
- (void)attemptToTapKeys:(id)a0;
- (void)attemptToTapMoreKey;
- (void)attemptToTapPredictionWithLiteral:(id)a0;
- (BOOL)attemptToTapPredictionWithString:(id)a0;
- (void)attemptToTypeIntended:(id)a0 expected:(id)a1 typingLog:(id)a2;
- (void)attemptToTypeText:(id)a0;
- (void)attemptToTypeText:(id)a0 typingLog:(id)a1;
- (void)attemptToTypeWithLog:(id)a0;
- (void)attemptVariantKey:(id)a0;
- (id)candidateBarCandidates;
- (BOOL)changeToNearestAlphabeticPlane;
- (BOOL)changeToNearestKeyplaneWithString:(id)a0;
- (void)commitText;
- (unsigned long long)cursorLocationInMarkedText;
- (id)displayStringOverrideForKey:(id)a0;
- (void)generateAutocorrectionsWithShiftState:(int)a0;
- (BOOL)hasPrediction:(id)a0;
- (id)inputSegmentsForContinuousPathString:(id)a0;
- (id)inputSegmentsForString:(id)a0;
- (id)keyContainingPoint:(struct CGPoint { double x0; double x1; })a0 inKeyplane:(id)a1;
- (id)keyToAccessKeyplaneCloserToKeyString:(id)a0;
- (id)keyWithString:(id)a0 inKeyplane:(id)a1;
- (id)keyWithString:(id)a0 inKeyplane:(id)a1 includeSecondaryStrings:(BOOL)a2;
- (void)learnWord:(id)a0 withCount:(unsigned long long)a1;
- (void)linkWithUserActionStream:(id)a0;
- (id)mapShiftedKeyToUnShiftedKeyExcludeCapitalization:(id)a0;
- (id)mergeHyphenatedWord:(id)a0 string:(id)a1;
- (void)performStrokeForPath:(id)a0 typingLog:(id)a1 callback:(id /* block */)a2;
- (id)performTapAtKey:(id)a0 biasedTowards:(id)a1 biasWeight:(float)a2;
- (id)performTapAtLocation:(struct CGPoint { double x0; double x1; })a0;
- (void)performTouchCancelAtLocation:(struct CGPoint { double x0; double x1; })a0 radius:(float)a1 timestamp:(double)a2 pathIndex:(unsigned long long)a3 fingerID:(int)a4;
- (void)performTouchEndRestAtLocation:(struct CGPoint { double x0; double x1; })a0 radius:(float)a1 timestamp:(double)a2 pathIndex:(unsigned long long)a3 fingerID:(int)a4;
- (id)performTouchUpAtLocation:(struct CGPoint { double x0; double x1; })a0 radius:(float)a1 timestamp:(double)a2 pathIndex:(unsigned long long)a3 fingerID:(int)a4;
- (id)performTouchUpAtLocation:(struct CGPoint { double x0; double x1; })a0 radius:(float)a1 timestamp:(double)a2 pathIndex:(unsigned long long)a3 fingerID:(int)a4 secondaryString:(BOOL)a5;
- (struct CGPoint { double x0; double x1; })pointForAttemptedTapOnKey:(id)a0 withError:(id)a1;
- (BOOL)postTokenisString:(id)a0 i:(unsigned long long)a1;
- (BOOL)priorTokenisString:(id)a0 i:(unsigned long long)a1;
- (void)registerLearning:(id)a0 fullCandidate:(id)a1 mode:(id)a2;
- (void)rejectAutocorrection;
- (void)setShiftedKeyToUnShiftedKeyExcludeCapitalizationMap;
- (id)shiftKeyToAccessKeyplaneCloserToKeyString:(id)a0;
- (id)splitDigraphsInString:(id)a0;
- (void)suspendAndResume;
- (void)syncToEmptyDocument;
- (id)tokensForString:(id)a0;
- (id)transliteratedTokensForString:(id)a0;

@end
