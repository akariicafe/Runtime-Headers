@class NSMutableDictionary, CACSpokenCommand, NSObject, NSDictionary, CACLabeledElementsCollection, NSMutableArray, FBSALOToken, NSString, AXElement, CACAXNotificationObserver, FBSApplicationLibrary, NSArray, CACTextInsertionSpecifier, CACDisambiguationHandler, CACTouchEventObserver, NSTimer;
@protocol OS_dispatch_queue;

@interface CACSpokenCommandManager : NSObject <CACAXNotificationObserverDelegate, CACTouchEventObserverDelegate, UNUserNotificationCenterDelegate> {
    NSArray *_activeApplications;
    NSArray *_topLevelElements;
    NSArray *_topLevelAndNonScannerElements;
    AXElement *_focusedElement;
    NSArray *_presentationElements;
    unsigned int _lastSyncdInteractionLevel;
    int _dictationRecognizerMode;
    NSString *_previousLeadingTextString;
    NSMutableArray *_recognizers;
    NSMutableArray *_recognizedCommandsReadyForDispatch;
    NSMutableDictionary *_recognizerInteractionLevels;
    NSMutableDictionary *_identifierBasedLanguageModelCache;
    NSMutableDictionary *_oldRXLangaugeObjects;
    double _recognizerSyncTransactionID;
    double _startedListeningTimeStamp;
    NSObject<OS_dispatch_queue> *_commandExecutionDispatchQueue;
    CACSpokenCommand *_currentNextPreviousResolverSpokenCommand;
    CACSpokenCommand *_currentRepeatingSpokenCommand;
    long long _repeatingSpokenCommandRemainingCount;
    NSDictionary *_nextResolverRelationships;
    NSDictionary *_previousResolverRelationships;
    NSDictionary *_builtInLocalizedCommandStrings;
    NSDictionary *_externalContextOverrideTable;
    id /* block */ _synchronousRemoteRequestCompletionBlock;
    NSMutableArray *_pendingCommandToExecute;
    BOOL _isListening;
    BOOL _suspendCommandDispatching;
    NSTimer *_assetPurgabilityTimer;
    BOOL _displayIsOff;
    BOOL _initialListenRequestWasSuccessful;
    long long _attentionAwareStatus;
    int _attentionAwarePreviousDictationRecognizerMode;
    NSString *_currentAttentionAwarenessAction;
    double _nextFetchDelayFactor;
    double _fetchingTransactionID;
    NSObject<OS_dispatch_queue> *_elementFetchingQueue;
    NSObject<OS_dispatch_queue> *_nonScannerElementFetchingQueue;
    NSObject<OS_dispatch_queue> *_perAppElementFetchingQueue;
    int _currentRecognitionResetMode;
    int _recognitionModePriorToDictation;
    BOOL _recognitionModeOverridden;
}

@property (retain, nonatomic) CACAXNotificationObserver *axNotificationObserver;
@property (retain, nonatomic) CACTouchEventObserver *touchEventObserver;
@property (retain) NSObject<OS_dispatch_queue> *recognizerSynchronizationDispatchQueue;
@property (retain, nonatomic) FBSApplicationLibrary *appLibrary;
@property (retain, nonatomic) FBSALOToken *applicationAddedObservationToken;
@property (retain, nonatomic) FBSALOToken *applicationRemovedObservationToken;
@property (readonly) BOOL userIsTouching;
@property int dictationRecognizerMode;
@property (readonly, nonatomic) BOOL isFetchingElements;
@property (readonly, nonatomic) double lastDictationInsertionTimeStamp;
@property (retain) NSString *recognizedCommandIdentifier;
@property (retain) NSMutableArray *commandsToIgnore;
@property (readonly, nonatomic) BOOL isAttentionAwareClientRunning;
@property (nonatomic) BOOL telephonyInterruptedListening;
@property (readonly) CACLabeledElementsCollection *labeledScreenElementsCollection;
@property (retain) CACDisambiguationHandler *disambiguationHandler;
@property (nonatomic) BOOL shouldPreserveDisambiguationHandler;
@property (retain) NSString *transientOverlayType;
@property (retain) CACTextInsertionSpecifier *previousTextInsertionSpecifier;
@property (retain) CACTextInsertionSpecifier *stagedTextInsertionSpecifier;
@property (readonly) BOOL forceAllCommandsToBeActive;
@property (readonly) NSString *commandRecognitionLogPath;
@property (readonly) BOOL usingAutomationMode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)capitalizedStringFromString:(id)a0;
+ (BOOL)doesEvaluatorKey:(id)a0 matchValue:(id)a1;
+ (id)hardwareEvaluatorKeys;
+ (id)sharedCACSpokenCommandManager;

- (BOOL)isListening;
- (id)activeApplications;
- (void)run;
- (void)dealloc;
- (void)_startListening;
- (void)startListening;
- (void)_stopListening;
- (void).cxx_destruct;
- (void)willTerminate;
- (void)stopListening;
- (id)focusedElement;
- (id)_telephonyQueue;
- (void)observer:(id)a0 didObserveNotification:(int)a1 notificationData:(void *)a2;
- (id)contextSummary;
- (id)allCommandsForLocaleIdentifier:(id)a0;
- (void)attentionAwareInterruptionEnded;
- (id)_allElementsIncludingNonScanner;
- (void)didBeginTouches;
- (void)insertDictatedAttributedString:(id)a0;
- (void)willUpdateElementsSignificantly;
- (void)_appendSpokenCommand:(id)a0 toLogAtPath:(id)a1;
- (id)_arrayFromExternalContextOverrideForBuiltInIdentifier:(id)a0;
- (void)_attentionAwareSettingChanged;
- (BOOL)_attentionIsLostWithListeningOffAction;
- (void)_cancelSynchronousRemoteRecognition;
- (BOOL)_chamoisSupportEnabledForVoiceControl;
- (void)_clearPreviousTextInsertionSpecifierBasedOnExecutedCommand:(id)a0;
- (void)_closeAllRecognizers;
- (void)_createCommandRecognizersIfNecessary;
- (void)_executeNextRepeatWithCompletionBlock:(id /* block */)a0;
- (void)_fetchElements;
- (id)_fetchPresentationElements;
- (void)_flushBuiltInLMIdentifierTable;
- (void)_handleLanguageChange;
- (void)_handlePendingCommands;
- (void)_intializeBuiltInLMIdentifierTableIfNecessary;
- (BOOL)_isNumberOnlyString:(id)a0 lessThanOrEqualToValue:(long long)a1;
- (BOOL)_isSystemSleeping;
- (void)_markAsDirtyForBuiltInLMIdentifier:(id)a0;
- (void)_microphoneTurnedOff;
- (void)_microphoneTurnedOffAfterInteruption;
- (void)_microphoneTurnedOn;
- (void)_microphoneTurnedOnAfterInteruption;
- (id)_nextResolverRelationships;
- (void)_notifyStatusChanged:(long long)a0;
- (BOOL)_popInteractionLevel:(unsigned int)a0 referencingObject:(id)a1;
- (id)_previousResolverRelationships;
- (BOOL)_pushInteractionLevel:(unsigned int)a0 referencingObject:(id)a1;
- (void)_pushLeadingContextToSpeechRecognitionSystem;
- (void)_rebuildCommandRecognizers;
- (void)_rebuildCustomCommandRecognizers;
- (void)_resetInteractionLevel;
- (void)_resetRecognitionSystems;
- (void)_scheduleFetchElementsWithDelay:(double)a0;
- (void)_scheduleFetchElementsWithDelay:(double)a0 andReason:(id)a1;
- (BOOL)_shouldBeListening;
- (void)_startSynchronousRemoteRecognitionWithCompletionBlock:(id /* block */)a0;
- (id)_stringInRecognitionLocaleFormatFromIntegerValue:(long long)a0;
- (BOOL)_telephonyRequiresAirPods;
- (id)_templateSpokenCommandWithIdentifier:(id)a0;
- (void)_updateAssetPurgeability;
- (void)_updateLanguageModelForBuiltInLMIdentifier:(id)a0;
- (void)_updateMostRecentLaunchTime;
- (void)_waitUntilElementsAreNumbered;
- (id)activeCommandIdentifiers;
- (id)activeCommandsForLocaleIdentifier:(id)a0;
- (id)activeOverlayType;
- (id)allCustomCommandsDetail;
- (void)attemptGrabbingMic:(id)a0;
- (void)attentionAwareGained;
- (void)attentionAwareInterrupted;
- (void)attentionAwareLost;
- (void)beginExecutingRepeatingSpokenCommandNumberOfTimes:(long long)a0 completionBlock:(id /* block */)a1;
- (void)beginObservingApplications;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bestDictationRecognizerModeImageRectForView:(id)a0;
- (void)cancelAnyTransientOverlay;
- (id)copySupportedCommandWithIdentifier:(id)a0;
- (unsigned int)currentInteractionLevel;
- (unsigned int)currentInteractionLevelPassingBackTopReferencingObject:(id *)a0;
- (double)delayForNotification:(int)a0;
- (int)dictationRecognizerMode;
- (void)didEndTouches;
- (void)didFindCloseSpokenCommandIdentifiers:(id)a0;
- (void)didFinishExecutingSpokenCommand:(id)a0;
- (void)didObserveFirstTouchDownForObserver:(id)a0;
- (void)didObserveLastTouchUpForObserver:(id)a0;
- (void)dispatchPendingCommand;
- (void)displayMessageAndQuitVoiceControl;
- (void)displayRetryMessage;
- (void)displayRetryMessageAndRetryGrabbingMic;
- (BOOL)doesCurrentLanguageSupportInterWordSpaces;
- (BOOL)doesFocusedElementRequireSecureInput;
- (BOOL)elementIsOccluded:(id)a0 occludedAppScenes:(id)a1;
- (void)enterDictatedString:(id)a0;
- (void)enterSleepInteractionLevel;
- (void)exitSleepInteractionLevel;
- (void)forceElementFetch;
- (void)forceElementFetchWithReason:(id)a0;
- (void)forceSynchronizeRecognizersForBuiltInLMIdentifier:(id)a0;
- (id)groupedCommandsForLocaleIdentifier:(id)a0;
- (void)handleCommandWithIdentifier:(id)a0;
- (void)handleRecognizedCommand:(id)a0;
- (void)handleSRSystemBeginUtteranceWithID:(unsigned long long)a0;
- (void)handleSRSystemServerError;
- (void)insertDictatedString:(id)a0;
- (BOOL)isActiveOverlayType:(id)a0;
- (BOOL)isNextPreviousResolverSpokenCommandEmojiBased;
- (BOOL)isSynchronizingRecognizers;
- (id)labeledElementsFromScreen;
- (id)labeledElementsFromScreenWithTitle:(id)a0;
- (id)labeledElementsFromScreenWithTrait:(unsigned long long)a0;
- (id)languageModelForBuiltInLMIdentifier:(id)a0;
- (id)leadingTextForCurrentSelection;
- (id)nameOfAXNotification:(int)a0;
- (void)notifyUserOfCommandFailureUsingSound;
- (void)notifyUserOfCommandFailureWithTitle:(id)a0 description:(id)a1;
- (id)primaryStringForCommandIdentifier:(id)a0;
- (void)registerSignPostBeginProcessingForSpeechRecognizer:(id)a0 message:(id)a1;
- (void)registerSignPostEndProcessingForSpeechRecognizer:(id)a0 message:(id)a1;
- (id)resolvedNextSpokenCommand;
- (id)resolvedPreviousSpokenCommand;
- (struct __RXLanguageObject { } *)rxLanguageObjectForBuiltInLMIdentifier:(id)a0;
- (id)screenElements;
- (id)screenElementsForEscape;
- (id)screenElementsForScrolling;
- (void)setDictationRecognizerMode:(int)a0;
- (void)setNextFetchDelayFactor:(double)a0;
- (void)setNextPreviousResolverSpokenCommand:(id)a0;
- (void)setRepeatingSpokenCommand:(id)a0;
- (void)setScreenElements:(id)a0 presentationElements:(id)a1 activeApplications:(id)a2 focusedTextAreaElement:(id)a3;
- (BOOL)shouldIgnoreCommand:(id)a0;
- (BOOL)showUIAsListening;
- (void)startRecordingGesture;
- (void)stopAnyRepeatingSpokenCommand;
- (void)stopObservingApplications;
- (id)stopRecordingGesture;
- (void)suspendCommandDispatching:(BOOL)a0;
- (void)synchronizeRecognizersWithReason:(id)a0;
- (id)synchronousRecognitionOfString:(id)a0 timeoutInterval:(double)a1;
- (id)synchronousRecognitionUsingCommandIdentifier:(id)a0 parameters:(id)a1 timeoutInterval:(double)a2;
- (void)updateScreenElementsWithNonScannerElements:(id)a0;
- (void)updateStatusIndicatorView;

@end
