@class NSDictionary, NSMutableDictionary, NSString;

@interface AXUIElement : NSObject <UIElementProtocol, NSCopying> {
    long long _cachedRefCount;
    NSMutableDictionary *_cachedAttributes;
    BOOL _isValid;
}

@property (readonly, nonatomic) struct __AXUIElement { } *axElement;
@property (readonly, nonatomic) NSDictionary *cachedAttributes;
@property (readonly, nonatomic) NSMutableDictionary *copyCachedAttributes;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;
+ (void)applyElementAttributeCacheScheme:(unsigned long long)a0;
+ (void)applyElementCustomAttributeCacheScheme:(id)a0;
+ (id)proxiedMLElementsForApp:(id)a0;
+ (id)scrollAncestorAtCoordinate:(struct CGPoint { double x0; double x1; })a0;
+ (struct __AXUIElement { } *)systemWideAXUIElement;
+ (id)uiApplicationAtCoordinate:(struct CGPoint { double x0; double x1; })a0;
+ (id)uiApplicationForContext:(unsigned int)a0;
+ (id)uiElementAtCoordinate:(struct CGPoint { double x0; double x1; })a0;
+ (id)uiElementAtCoordinate:(struct CGPoint { double x0; double x1; })a0 displayId:(unsigned int)a1;
+ (id)uiElementAtCoordinate:(struct CGPoint { double x0; double x1; })a0 forApplication:(struct __AXUIElement { } *)a1 contextId:(unsigned int)a2;
+ (id)uiElementAtCoordinate:(struct CGPoint { double x0; double x1; })a0 forApplication:(struct __AXUIElement { } *)a1 contextId:(unsigned int)a2 displayId:(unsigned int)a3;
+ (id)uiElementAtCoordinate:(struct CGPoint { double x0; double x1; })a0 startWithElement:(id)a1;
+ (id)uiElementWithAXElement:(struct __AXUIElement { } *)a0;
+ (id)uiElementWithAXElement:(struct __AXUIElement { } *)a0 cache:(id)a1;
+ (id)uiSystemWideApplication;

- (void)dealloc;
- (int)pid;
- (void)_invalidate;
- (void)disableCache;
- (BOOL)isValid;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_selectedTextRange;
- (BOOL)performAXAction:(int)a0;
- (id)stringWithAXAttribute:(long long)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })nextCursorRangeInDirection:(unsigned long long)a0 unit:(unsigned long long)a1 outputRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a2 currentCursorRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3;
- (id)previousElementsWithParameters:(id)a0;
- (id)_valueForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (unsigned int)_activeKeyboardContextId;
- (id)_attributedValueForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void *)_cachedValueForAttribute:(long long)a0;
- (void)_createCache:(BOOL)a0;
- (id)_elementsWithParameter:(long long)a0 parameters:(id)a1 prefetchAttributes:(BOOL)a2;
- (long long)_lineEndPosition;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_lineRangeForPosition:(unsigned long long)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_lineRangeWithFaultTolerance:(long long)a0 forward:(BOOL)a1;
- (long long)_lineStartPosition;
- (id)_objectForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 withParameterizedAttribute:(long long)a1;
- (id)_outputCache;
- (void)_setCachedValue:(void *)a0 forAttribute:(long long)a1;
- (id)arrayWithAXAttribute:(long long)a0;
- (BOOL)boolWithAXAttribute:(long long)a0;
- (id)cachedAttributes;
- (BOOL)canPerformAXAction:(int)a0;
- (id)childrenIncludingPrefetchedAttributesWithCount:(unsigned long long)a0;
- (struct CGColor { } *)colorWithAXAttribute:(long long)a0;
- (void)enableCache:(BOOL)a0;
- (id)initWithAXElement:(struct __AXUIElement { } *)a0;
- (id)initWithAXElement:(struct __AXUIElement { } *)a0 cache:(id)a1;
- (BOOL)isMLElement;
- (BOOL)isMockElement;
- (BOOL)isValidForApplication:(id)a0;
- (void *)modifyStaticCacheValue:(void *)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })nextCursorRangeInDirection:(unsigned long long)a0 unit:(unsigned long long)a1 outputRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a2;
- (id)nextElementsIncludingPrefetchedAttributesWithCount:(unsigned long long)a0;
- (id)nextElementsWithCount:(unsigned long long)a0;
- (id)nextElementsWithParameters:(id)a0;
- (id)numberWithAXAttribute:(long long)a0;
- (id)objectWithAXAttribute:(long long)a0;
- (id)objectWithAXAttribute:(long long)a0 parameter:(void *)a1;
- (struct CGPath { } *)pathWithAXAttribute:(long long)a0;
- (BOOL)performAXAction:(int)a0 withValue:(id)a1;
- (BOOL)performAXAction:(int)a0 withValue:(id)a1 fencePort:(unsigned int)a2;
- (struct CGPoint { double x0; double x1; })pointWithAXAttribute:(long long)a0;
- (id)previousElementsWithCount:(unsigned long long)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeWithAXAttribute:(long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectWithAXAttribute:(long long)a0;
- (void)setAXAttribute:(long long)a0 withArray:(id)a1;
- (void)setAXAttribute:(long long)a0 withBOOL:(BOOL)a1;
- (void)setAXAttribute:(long long)a0 withFloat:(float)a1;
- (void)setAXAttribute:(long long)a0 withLong:(long long)a1;
- (void)setAXAttribute:(long long)a0 withNumber:(id)a1;
- (void)setAXAttribute:(long long)a0 withObject:(id)a1;
- (void)setAXAttribute:(long long)a0 withObject:(id)a1 synchronous:(BOOL)a2;
- (void)setAXAttribute:(long long)a0 withPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)setAXAttribute:(long long)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)setAXAttribute:(long long)a0 withSize:(struct CGSize { double x0; double x1; })a1;
- (void)setAXAttribute:(long long)a0 withString:(id)a1;
- (void)setAXAttribute:(long long)a0 withUIElement:(id)a1;
- (void)setAXAttribute:(long long)a0 withUIElementArray:(id)a1;
- (void)setAXElement:(struct __AXUIElement { } *)a0;
- (void)setCachedAttributes:(id)a0;
- (id)uiElementsWithAttribute:(long long)a0;
- (id)uiElementsWithAttribute:(long long)a0 parameter:(void *)a1;
- (id)uiElementsWithAttribute:(long long)a0 parameter:(void *)a1 fetchAttributes:(BOOL)a2;
- (void)updateCache:(long long)a0;
- (void)updateCacheWithAttributes:(id)a0;
- (id)valueArrayWithAXAttributes:(struct __CFArray { } *)a0;

@end
