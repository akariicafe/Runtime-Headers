@class VCSessionBitrateArbiter, VCBitrateArbiter;

@interface VCConnectionManagerIDS : VCConnectionManager {
    double _lastTimestampForRemoteSendingFromNonPrimary;
    double _lastTimestampPreferredRemoteInterfaceUpdated;
    unsigned int _sentPacketCount[256];
    unsigned int _sentByteCount[256];
    unsigned int _receivedPacketCount[256];
    unsigned int _receivedByteCount[256];
    VCSessionBitrateArbiter *_multiwayBitrateArbiter;
    VCBitrateArbiter *_oneToOneBitrateArbiter;
    BOOL _isMultiwaySession;
    BOOL _enableCoreMotionDetection;
    BOOL _optIntoExistingSubscribedStreams;
}

- (int)removeConnection:(id)a0;
- (void)dealloc;
- (int)addConnection:(id)a0;
- (id)secondaryConnection;
- (void)flushLinkProbingStatusWithOptions:(id)a0;
- (void)requestStatsWithOptions:(id)a0;
- (void)startActiveProbingWithOptions:(id)a0;
- (void)stopActiveProbingWithOptions:(id)a0;
- (BOOL)addConnectionToConnectionArray:(id)a0;
- (void)queryProbingResultsWithOptions:(id)a0;
- (void)addDuplicationConnectionUpdateTelemetryWithSuggestedLinkTypeCombo:(id)a0 payload:(id)a1;
- (BOOL)canOptOutAllStreamsForConnection:(id)a0;
- (id)connectionForDuplication;
- (void)didLinkProbingLockdownEnd;
- (void)didReceiveStatsResponse:(BOOL)a0;
- (void)didUpdateLinkPreferenceOrder:(id)a0;
- (unsigned int)downlinkBitrateCapForConnection:(id)a0;
- (unsigned int)getByteCountWithIndex:(unsigned char)a0 isOutgoing:(BOOL)a1;
- (struct { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; } *)getConnectionSelectionPolicy;
- (unsigned int)getPacketCountWithIndex:(unsigned char)a0 isOutgoing:(BOOL)a1;
- (id)getPrimaryConnectionToBeCompared;
- (id)getSecondaryConnectionToBeCompared;
- (void)handlePrimaryConnectionRemoved;
- (void)handleSecondaryConnectionRemoved;
- (id)initWithMultiwayEnabled:(BOOL)a0;
- (void)internalUpdateOneToOneBitrateCapsForConnection:(id)a0;
- (id)lastPrimaryConnectionInUse;
- (unsigned int)oneToOneBitrateCapForConnectionWithType:(unsigned int)a0;
- (BOOL)optIntoExistingSubscribedStreams;
- (void)optOutAllStreamsForNonPrimaryConnections;
- (void)removeFromConnectionArray:(id)a0;
- (void)reportActiveConnectionOneToOne:(id)a0 isAudioOnly:(BOOL)a1;
- (void)reportConnection:(id)a0 isInitialConnection:(BOOL)a1;
- (void)reportCurrentPrimaryConnection;
- (void)reportFirstActiveConnectionOneToOne:(id)a0 remoteOSVersion:(id)a1 redState:(BOOL)a2 isAudioOnly:(BOOL)a3;
- (void)reselectPrimaryConnection;
- (void)resetPacketCountAndByteCountWithConnection:(id)a0;
- (void)resetParticipantGenerationCounter;
- (void)setConnectionForDuplication:(id)a0;
- (void)setLastPrimaryConnectionInUse:(id)a0;
- (void)setOptIntoExistingSubscribedStreams:(BOOL)a0;
- (void)setPreferredLocalInterfaceForDuplication:(unsigned char)a0;
- (void)setPreferredRemoteInterfaceForDuplication:(unsigned char)a0;
- (void)setSecondaryConnection:(id)a0;
- (void)setUpVTable;
- (BOOL)shouldAcceptDataFromSourceDestinationInfo:(struct tagVCSourceDestinationInfo { int x0; union { struct { struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x0; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x1; struct { BOOL x0; unsigned short x1; } x2; } x0; struct { int x0; int x1; struct tagIPPORT { int x0; char x1[16]; union { unsigned int x0; unsigned char x1[16]; } x2; unsigned short x3; } x2; int x3; } x1; struct { unsigned int x0; struct { char x0; unsigned short x1; unsigned char x2; unsigned short x3; unsigned char x4; } x1; BOOL x2; } x2; struct { id x0; } x3; } x1; unsigned int x2; struct tagVCSourceDestinationInfo *x3; void *x4; } *)a0;
- (BOOL)shouldDropCurrentPrimaryConnectionWithConnectionStats:(struct { double x0; double x1; double x2; double x3; double x4; BOOL x5; int x6; } *)a0;
- (BOOL)shouldKeepAllConnections;
- (BOOL)shouldReplaceConnection:(id)a0 withConnection:(id)a1;
- (BOOL)shouldUpdateServerBasedConnection:(id)a0;
- (void)updateAllBitrateCapsForConnection:(id)a0;
- (void)updateAllBitrateCapsForConnectionInternal:(id)a0;
- (void)updateCellularMTU:(int)a0;
- (void)updateCellularTech:(int)a0 forLocalInterface:(BOOL)a1;
- (void)updateConnectionSelectionPolicyWithPreferE2E:(BOOL)a0;
- (void)updateDuplicationStateWithConnectionOperation:(int)a0 isLocalOnWiFi:(BOOL)a1 isRemoteOnWiFi:(BOOL)a2;
- (void)updateNegotiatedSettingsOnetoOne:(id)a0;
- (void)updateOneToOneBitrateCapsForConnection:(id)a0;
- (void)updateSessionStats:(unsigned short)a0;
- (void)updateStatResponseResult:(id)a0;
- (unsigned int)uplinkAudioOnlyBitrateCapOneToOne:(id)a0;
- (unsigned int)uplinkBitrateCapForConnection:(id)a0;
- (unsigned int)uplinkBitrateCapOneToOne:(id)a0;
- (void)useConnectionAsPrimary:(id)a0;

@end
