@class NSString, JFXFaceTrackedEffectTransform, JFXTrackedEffectProperties;

@interface JFXOverlayEffect : JFXTextEffect <JFXTrackedEffectPropertiesDelegate> {
    _Atomic int _isInteractiveEditingCount;
    _Atomic int _isEditingFaceTrackingTransformsCount;
}

@property (retain) JFXFaceTrackedEffectTransform *internalFaceTrackingTransform;
@property (nonatomic, getter=isHidden) BOOL hidden;
@property (copy, nonatomic) NSString *accessibilityOverlayEffectLabel;
@property (retain, nonatomic) JFXFaceTrackedEffectTransform *faceTrackingTransform;
@property (readonly, nonatomic) BOOL isEmoji;
@property (readonly, nonatomic) BOOL hasBackground;
@property (nonatomic, getter=isTextFlipped) BOOL flipText;
@property (nonatomic, getter=isTailFlipped) BOOL flipTail;
@property (retain, nonatomic) JFXTrackedEffectProperties *trackingProps;
@property (readonly, nonatomic) BOOL isTracked;
@property (readonly, nonatomic) BOOL isCurrentlyTracking;
@property (nonatomic) BOOL prefersTrackingNotActivateAutomatically;
@property (readonly, nonatomic) BOOL isInteractiveEditing;
@property (readonly, nonatomic) BOOL isEditingFaceTrackingTransforms;
@property (copy, nonatomic) NSString *dynamicTextString;
@property (readonly, nonatomic) unsigned long long dynamicTextType;

+ (BOOL)supportsSecureCoding;
+ (id)dynamicTextPlaceholderMap;
+ (id)effectIDToImageSequenceIDMap;

- (unsigned long long)hash;
- (void)encodeWithCoder:(id)a0;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)a0;
- (int)type;
- (id)initWithCoder:(id)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)accessibilityName;
- (id)contentProperties;
- (id)initWithEffectID:(id)a0;
- (BOOL)supportsFlippingText;
- (double)JFX_adjustedMinimumSizeFromNormalizedMinimumSize:(struct { double x0; double x1; })a0 atTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 forcePosterFrame:(BOOL)a2 relativeTo:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3 basisOrigin:(int)a4;
- (void)JFX_applyEffectParametersForFaceTrackingTransform:(id)a0;
- (void)JFX_setupTrackingProps;
- (void)JFX_updateInteractiveMode;
- (id)JFX_dynamicTextPlaceHolderText;
- (BOOL)JFX_hasPosterFrame;
- (BOOL)JFX_posterFrameIsCachable;
- (struct CGPath { } *)newPathsForHitTestingAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 forcePosterFrame:(BOOL)a1 relativeTo:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 basisOrigin:(int)a3 adjustForMinimumSize:(BOOL)a4 normalizedMinimumSize:(struct { double x0; double x1; })a5 outExpandedPath:(out const struct CGPath **)a6;
- (BOOL)JFX_shouldEnableDynamicLineSpacingForDiacritics;
- (id)JFX_stringAtIndex:(unsigned long long)a0;
- (void)suspendTracking;
- (void)trackedEffectProperties:(id)a0 didChangeTrackingType:(BOOL)a1 didChangeEnabled:(BOOL)a2;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })addTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a0 withComponentTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 relativeTo:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 basisOrigin:(int)a3;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })addTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a0 withComponentTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 relativeTo:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 basisOrigin:(int)a3 restrictToBounds:(BOOL)a4;
- (void)applyScaleToFitFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withComponentTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 relativeRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (void)applyScaleToFitFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withComponentTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 relativeRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 restrictToBounds:(BOOL)a3;
- (void)beginEditingFaceTrackingTransforms;
- (void)beginInteractiveEditing;
- (struct CGPoint { double x0; double x1; })closeButtonInset;
- (struct PVCGPointQuad { struct CGPoint { double x0; double x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })cornersAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 forcePosterFrame:(BOOL)a1 includeDropShadow:(BOOL)a2 scale:(struct CGPoint { double x0; double x1; })a3 relativeTo:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a4 basisOrigin:(int)a5;
- (double)customPickerRotation;
- (id)customPrimaryFillColor;
- (struct CGPoint { double x0; double x1; })effectCenterAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 forcePosterFrame:(BOOL)a1 includeTransformAnimation:(BOOL)a2 includePlayableAspectScale:(BOOL)a3 relativeTo:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a4 basisOrigin:(int)a5;
- (struct CGPoint { double x0; double x1; })effectPointToScreenPoint:(struct CGPoint { double x0; double x1; })a0 effectToScreenTransform:(struct { void /* unknown type, empty encoding */ x0[4]; })a1 viewSize:(struct CGSize { double x0; double x1; })a2;
- (BOOL)enablePresentationState:(BOOL)a0;
- (void)endEditingFaceTrackingTransforms;
- (void)endInteractiveEditing;
- (BOOL)hasDynamicText;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })hitAreaBoundingFrameAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 forcePosterFrame:(BOOL)a1 includeDropShadow:(BOOL)a2 adjustForMinimumSize:(BOOL)a3 normalizedMinimumSize:(struct { double x0; double x1; })a4 relativeTo:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a5 basisOrigin:(int)a6;
- (struct CGPoint { double x0; double x1; })hitAreaScale;
- (BOOL)hitTestPoint:(struct CGPoint { double x0; double x1; })a0 atTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 forcePosterFrame:(BOOL)a2 relativeTo:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3 basisOrigin:(int)a4 adjustForMinimumSize:(BOOL)a5 normalizedMinimumSize:(struct { double x0; double x1; })a6;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })imageFrameAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 forcePosterFrame:(BOOL)a1 includeDropShadow:(BOOL)a2 relativeTo:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3 basisOrigin:(int)a4;
- (BOOL)includeDropShadowWhenPositioningCloseButton;
- (BOOL)isAppearanceEqual:(id)a0 forPurpose:(unsigned long long)a1;
- (BOOL)loopedRangeRenderIsCacheable;
- (unsigned long long)maxCharacters;
- (BOOL)objectBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0 time:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 forcePosterFrame:(BOOL)a2 includeDropShadow:(BOOL)a3 includeMasks:(BOOL)a4;
- (id)osfaToneMappingOption;
- (id)overlayContentDataSource;
- (double)pickerScale;
- (void)renderEffectWillLoad;
- (void)resetDynamicTextString;
- (void)resumeTracking;
- (void)rotate:(double)a0 aroundPoint:(struct CGPoint { double x0; double x1; })a1 withComponentTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a2 relativeTo:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3 basisOrigin:(int)a4;
- (long long)rotatedAspectRatio;
- (struct CGPoint { double x0; double x1; })screenPointToEffectPoint:(struct CGPoint { double x0; double x1; })a0 withComponentTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 relativeTo:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 basisOrigin:(int)a3;
- (id)serializableEffectParameters;
- (void)setForceRenderAtPosterFrame:(BOOL)a0;
- (void)setImageSequencePath:(id)a0;
- (void)setImageSequencePathToBundledAssets;
- (void)setPosition:(struct CGPoint { double x0; double x1; })a0 withComponentTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 relativeTo:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 basisOrigin:(int)a3 restrictToBounds:(BOOL)a4;
- (void)setSingleLineScaleThreshold:(double)a0;
- (BOOL)supportsFlippingTail;
- (struct { void /* unknown type, empty encoding */ x0[4]; })transformAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 forcePosterFrame:(BOOL)a1 includeTransformAnimation:(BOOL)a2 includePlayableAspectScale:(BOOL)a3 relativeTo:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a4 basisOrigin:(int)a5;
- (struct { void /* unknown type, empty encoding */ x0[4]; })transformAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 forcePosterFrame:(BOOL)a1 relativeTo:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 basisOrigin:(int)a3;
- (void)updateDynamicTextWithCompletionBlock:(id /* block */)a0;
- (void)updateRenderSizeMaintainingAppearance:(struct CGSize { double x0; double x1; })a0 withComponentTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
- (void)updateRenderSizeMaintainingRelativeSizeAndPosition:(struct CGSize { double x0; double x1; })a0 toSize:(struct CGSize { double x0; double x1; })a1 withComponentTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a2;
- (void)updateRenderSizeMaintainingSizeAndPositionRelativeToMedia:(struct CGSize { double x0; double x1; })a0 mediaSize:(struct CGSize { double x0; double x1; })a1 mediaContentMode:(int)a2;
- (BOOL)wasDynamicTextSet;

@end
