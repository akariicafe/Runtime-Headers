@class NSMutableDictionary, SBDeviceApplicationSceneClassicAccessoryView, SBHomeGrabberRotationView, SBApplicationSceneViewStatusBarDescriptor, SBMedusaSettings, SBHomeGrabberView, SBFHomeGrabberSettings, UIView, SBDeviceApplicationSceneHandle, NSString, UIApplicationSceneClientSettingsDiffInspector, NSMutableArray, _UIDirectionalRotationView, SBDeviceApplicationSceneClassicWrapperView, SBSceneHandleBlockObserver, UIApplicationSceneSettingsDiffInspector;
@protocol UIScenePresentation, BSInvalidatable, SBApplicationSceneBackgroundView, UISceneLayerTarget;

@interface SBDeviceApplicationSceneView : SBApplicationSceneView <SBDeviceApplicationSceneClassicAccessoryViewDelegate, PTSettingsKeyObserver, SBDeviceApplicationSceneOverlayViewObserver, SBAppSwitcherPageContentView> {
    id<UISceneLayerTarget> _statusBarLayerTarget;
    SBSceneHandleBlockObserver *_sceneHandleObserver;
    UIApplicationSceneClientSettingsDiffInspector *_clientSettingsInspector;
    UIApplicationSceneSettingsDiffInspector *_sceneSettingsInspector;
    _UIDirectionalRotationView *_hostCounterRotationView;
    SBHomeGrabberRotationView *_grabberRotationView;
    SBFHomeGrabberSettings *_grabberSettings;
    BOOL _grabberLivesInCounterRotationView;
    NSMutableDictionary *_overlayViewsByPriority;
    long long _lastStableOverlayOrientation;
    BOOL _counterRotationViewTransformUpdatesPaused;
    BOOL _waitingForBoundsUpdateDuringRotation;
    long long _overlayOrientationAtStartOfRotation;
    SBDeviceApplicationSceneClassicAccessoryView *_classicAccessoryView;
    SBDeviceApplicationSceneClassicWrapperView *_classicWrapperView;
    id<BSInvalidatable> _snapshottingInfoAssertion;
    UIView<UIScenePresentation> *_currentHostView;
    NSMutableArray *_multitaskingExclusionRectDebugViews;
    SBMedusaSettings *_medusaSettings;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) SBDeviceApplicationSceneHandle *sceneHandle;
@property (retain, nonatomic) UIView<SBApplicationSceneBackgroundView> *backgroundView;
@property (nonatomic) BOOL forcesStatusBarHidden;
@property (retain, nonatomic) SBApplicationSceneViewStatusBarDescriptor *statusBarDescriptor;
@property (nonatomic) double statusBarAlpha;
@property (nonatomic, getter=isInsetForHomeAffordance) BOOL insetForHomeAffordance;
@property (readonly, nonatomic) SBHomeGrabberView *homeGrabberView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) double cornerRadius;
@property (nonatomic) unsigned long long maskedCorners;
@property (nonatomic) long long orientation;
@property (readonly, nonatomic) BOOL contentRequiresGroupOpacity;
@property (nonatomic, getter=isActive) BOOL active;
@property (nonatomic, getter=isVisible) BOOL visible;

- (void)_refresh;
- (void)willRotateFromInterfaceOrientation:(long long)a0 toInterfaceOrientation:(long long)a1 alongsideContainerView:(id)a2 animated:(BOOL)a3;
- (void)createClassicAccessoryViewIfNecessary;
- (void)dealloc;
- (void)addOverlayView:(id)a0 withPriority:(long long)a1;
- (BOOL)_contentPrefersToDisableClipping;
- (void)_configureSceneLiveSnapshotView:(id)a0;
- (void)_layoutLiveSnapshotView:(id)a0;
- (void)teardownClassicAccessoryViewIfNecessary;
- (void)_configureSceneLiveHostView:(id)a0;
- (void)setBackgroundView:(id)a0;
- (id)initWithSceneHandle:(id)a0 referenceSize:(struct CGSize { double x0; double x1; })a1 contentOrientation:(long long)a2 containerOrientation:(long long)a3 hostRequester:(id)a4;
- (void)invalidate;
- (void)_updateDragAndDropExclusionDebugViewsIfNecessary;
- (id)deviceApplicationSceneView;
- (void)noteApplicationClassicPhoneSceneOrientationPreferenceChangingForUserAction:(BOOL)a0;
- (double)_contentContainerCornerRadius;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (long long)_wallpaperStyle;
- (void)applicationSceneCompatibilityModeAnimatingChangeTo:(long long)a0;
- (void)_updateEdgeProtectAndAutoHideOnHomeGrabberView;
- (void)_setCounterRotationViewTransformUpdatesPaused:(BOOL)a0;
- (void)_updateReferenceSize:(struct CGSize { double x0; double x1; })a0 andOrientation:(long long)a1;
- (void)settings:(id)a0 changedValueForKey:(id)a1;
- (void)removeOverlayView:(id)a0 withPriority:(long long)a1;
- (BOOL)_sceneDrivesOwnRotation;
- (void)overlayViewDidRotate:(id)a0 toInterfaceOrientation:(long long)a1;
- (void).cxx_destruct;
- (BOOL)_representsTranslucentContent;
- (BOOL)_wantsBlackBackground;
- (id)prepareForContentRotation;
- (BOOL)_useClassicWrapperView;
- (void)_updateStatusBarVisibilityForHostView;
- (void)_createClassicWrapperViewIfNecessaryForHostView:(id)a0;
- (void)_tearDownHostCounterRotationViewIfNecessary;
- (void)sceneHandle:(id)a0 didChangeContentPrefersToDisableClipping:(BOOL)a1;
- (void)containerViewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (void)_sceneHandleDidUpdateSettingsWithDiff:(id)a0 previousSettings:(id)a1;
- (void)_setOrientation:(long long)a0;
- (void)_createHostCounterRotationViewIfNecessary;
- (void)_windowManagementStyleDidChange:(id)a0;
- (id)_transitionViewForHostView;
- (void)_layoutLiveHostView:(id)a0;
- (void)layoutSubviews;
- (void)createHomeGrabberViewIfNecessaryWithSettings:(id)a0;
- (void)_invalidateSceneLiveHostView:(id)a0;
- (void)tearDownHomeGrabberView;
- (void)_maybeStartTrackingRotationForOverlayFromOrientation:(long long)a0 toOrientation:(long long)a1;
- (void)didMoveToWindow;
- (BOOL)_anyOverlayViewNeedsCounterRotation;
- (void)_configureSceneSnapshotContext:(id)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_contentContainerEdgeInsets;
- (void)_sceneHandleDidUpdateClientSettingsWithDiff:(id)a0 transitionContext:(id)a1;

@end
