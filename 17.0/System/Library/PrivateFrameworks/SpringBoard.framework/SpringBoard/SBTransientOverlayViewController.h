@class SBSDisplayLayoutElement, _UILegibilitySettings, SBKeyboardHomeAffordanceAssertion, SBHomeGrabberView, SBFHomeGrabberSettings, UIView, UIStatusBarStyleRequest, NSString, NSSet, UIColor, UIStatusBar, NSNumber, SBDisplayItem, UIWindow;
@protocol SBTransientOverlayViewControllerDelegate, SBIdleTimerCoordinating, BSInvalidatable;

@interface SBTransientOverlayViewController : UIViewController <SBHomeGrabberDelegate, BSDescriptionProviding, SBButtonEventsHandler, SBFIdleTimerBehaviorProviding, SBIdleTimerProviding, SBSDisplayLayoutElementProviding> {
    long long _appearanceUpdateIgnoreCount;
    UIView *_contentContainerView;
    UIView *_homeGrabberContainerView;
    UIView *_dimmingView;
    long long _contentOverlayInsetUpdateIgnoreCount;
    SBFHomeGrabberSettings *_grabberSettings;
    BOOL _hasPreservedInputViews;
    BOOL _isDisplayLayoutElementActive;
    SBKeyboardHomeAffordanceAssertion *_keyboardHomeAffordanceAssertion;
    UIWindow *_keyboardHomeAffordanceAssertionWindow;
    UIView *_presentationBackgroundView;
    long long _presentationPrefersHomeGrabberHidden;
    UIStatusBar *_statusBar;
    long long _keyboardVisible;
    SBSDisplayLayoutElement *_displayLayoutElement;
    id<BSInvalidatable> _displayLayoutElementAssertion;
}

@property (readonly, nonatomic, getter=_displayLayoutElement) SBSDisplayLayoutElement *displayLayoutElement;
@property (readonly, copy, nonatomic) NSString *preferredDisplayLayoutElementIdentifier;
@property (weak, nonatomic) id<SBTransientOverlayViewControllerDelegate> transientOverlayDelegate;
@property (readonly, copy, nonatomic) UIStatusBarStyleRequest *currentStatusBarStyleRequest;
@property (readonly, nonatomic) BOOL hasVisibleStatusBar;
@property (retain, nonatomic) SBHomeGrabberView *grabberView;
@property (nonatomic) BOOL presentationAllowsHomeGrabberAutoHide;
@property (nonatomic) double presentationContentCornerRadius;
@property (nonatomic) struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } presentationContentTransform;
@property (nonatomic) struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } presentationHomeGrabberTransform;
@property (nonatomic) double presentationHomeGrabberAlpha;
@property (nonatomic) double presentationHomeGrabberAdditionalEdgeSpacing;
@property (nonatomic) BOOL presentationDimmingViewHidden;
@property (nonatomic) double presentationDimmingAlpha;
@property (readonly, nonatomic) BOOL presentationPrefersStatusBarHidden;
@property (readonly, nonatomic) BOOL dismissesForCoverSheetPresentation;
@property (readonly, nonatomic) long long homeAffordanceSuppression;
@property (readonly, nonatomic) BOOL preservesAppSwitcherDuringPresentationAndDismissal;
@property (readonly, nonatomic) UIColor *presentationDimmingViewColor;
@property (readonly, nonatomic) BOOL preventsClippingToBounds;
@property (readonly, nonatomic) BOOL preventsDismissalOnLockForInactiveScreen;
@property (readonly, nonatomic) UIView *backgroundView;
@property (readonly, nonatomic) UIView *contentView;
@property (readonly, nonatomic) BOOL prefersEmbeddedDisplayPresentation;
@property (readonly, nonatomic) BOOL allowsStackingOverlayContentAbove;
@property (readonly, copy, nonatomic) NSNumber *preferredSceneDeactivationReasonValue;
@property (readonly, copy, nonatomic) id /* block */ sceneDeactivationPredicate;
@property (readonly, nonatomic, getter=isContentOpaque) BOOL contentOpaque;
@property (readonly, nonatomic) BOOL prefersProximityDetectionEnabled;
@property (readonly, nonatomic) NSSet *audioCategoriesDisablingVolumeHUD;
@property (readonly, copy, nonatomic) _UILegibilitySettings *preferredStatusBarLegibilitySettings;
@property (readonly, copy, nonatomic) NSSet *preferredBackgroundActivitiesToSuppress;
@property (readonly, nonatomic) BOOL prefersStatusBarActivityItemVisible;
@property (readonly, nonatomic) BOOL shouldDisableBanners;
@property (readonly, nonatomic) BOOL shouldDisableControlCenter;
@property (readonly, nonatomic) BOOL shouldDisableReachability;
@property (readonly, nonatomic) BOOL shouldDisableInteractiveScreenshotGesture;
@property (readonly, nonatomic) BOOL shouldDisableSiri;
@property (readonly, nonatomic) BOOL shouldPendAlertItems;
@property (readonly, nonatomic) BOOL dismissesSiriForPresentation;
@property (readonly, nonatomic) BOOL shouldUseSceneBasedKeyboardFocus;
@property (readonly, nonatomic) BOOL shouldPreventDragAndDrop;
@property (readonly, nonatomic) BOOL supportsAlwaysOnDisplay;
@property (weak, nonatomic) id<SBIdleTimerCoordinating> idleTimerCoordinator;
@property (nonatomic) long long containerOrientation;
@property (readonly, nonatomic) BOOL shouldDisableOrientationUpdates;
@property (readonly, nonatomic) BOOL isIgnoringAppearanceUpdates;
@property (readonly, nonatomic) BOOL isIgnoringContentOverlayInsetUpdates;
@property (readonly, nonatomic) long long preferredLockedGestureDismissalStyle;
@property (readonly, nonatomic) long long preferredUnlockedGestureDismissalStyle;
@property (readonly, copy, nonatomic) SBDisplayItem *representedDisplayItem;
@property (readonly, nonatomic) int pictureInPictureProcessIdentifier;
@property (readonly, nonatomic) BOOL prefersWindowHitTestingDisabled;
@property (readonly, nonatomic, getter=isAttachedToWindowedAccessory) BOOL attachedToWindowedAccessory;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } windowedAccessoryCutoutFrameInScreen;
@property (readonly, nonatomic) BOOL canBecomeLocalFirstResponder;
@property (readonly, nonatomic) BOOL preventsSystemApertureSuppressionFromBelow;
@property (readonly, copy, nonatomic) NSSet *associatedBundleIdentifiersToSuppressInSystemAperture;
@property (readonly, copy, nonatomic) NSSet *associatedSceneIdentifiersToSuppressInSystemAperture;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) long long idleTimerDuration;
@property (readonly, nonatomic) long long idleTimerMode;
@property (readonly, nonatomic) long long idleWarnMode;
@property (readonly, nonatomic) double customIdleExpirationTimeout;
@property (readonly, nonatomic) double customIdleWarningTimeout;
@property (nonatomic, getter=isDisplayLayoutElementActive) BOOL displayLayoutElementActive;

- (long long)preferredInterfaceOrientationForPresentation;
- (BOOL)shouldAllowAutoHideForHomeGrabberView:(id)a0;
- (BOOL)shouldAllowThinStyleForHomeGrabberView:(id)a0;
- (BOOL)shouldAutorotate;
- (double)additionalEdgeSpacingForHomeGrabberView:(id)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_edgeInsetsForChildViewController:(id)a0 insetsAreAbsolute:(BOOL *)a1;
- (void)dealloc;
- (id)coordinatorRequestedIdleTimerBehavior:(id)a0;
- (void)viewDidLayoutSubviews;
- (id)succinctDescriptionBuilder;
- (BOOL)handleVoiceCommandButtonPress;
- (BOOL)handleHomeButtonLongPress;
- (void)viewDidLoad;
- (void)updateDisplayLayoutElementWithBuilder:(id /* block */)a0;
- (BOOL)handleVolumeUpButtonPress;
- (id)descriptionBuilderWithMultilinePrefix:(id)a0;
- (BOOL)handleLockButtonPress;
- (unsigned long long)supportedInterfaceOrientations;
- (id)initWithNibName:(id)a0 bundle:(id)a1;
- (id)descriptionWithMultilinePrefix:(id)a0;
- (void)setNeedsStatusBarAppearanceUpdate;
- (void).cxx_destruct;
- (void)viewDidMoveToWindow:(id)a0 shouldAppearOrDisappear:(BOOL)a1;
- (BOOL)handleHomeButtonDoublePress;
- (id)succinctDescription;
- (void)viewDidAppear:(BOOL)a0;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (BOOL)handleVolumeDownButtonPress;
- (BOOL)handleHeadsetButtonPress:(BOOL)a0;
- (BOOL)handleDoubleHeightStatusBarTap;
- (void)viewDidDisappear:(BOOL)a0;
- (BOOL)handleHomeButtonPress;
- (void)setNeedsUpdateOfHomeIndicatorAutoHidden;
- (void)setNeedsUpdateOfScreenEdgesDeferringSystemGestures;
- (void)setNeedsWhitePointAdaptivityStyleUpdate;
- (id)hostedSceneIdentityTokens;
- (void)didTransitionToAttachedToWindowedAccessory:(BOOL)a0 windowedAccessoryCutoutFrameInScreen:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)_keyboardWillShowNotification:(id)a0;
- (void)_keyboardWillHideNotification:(id)a0;
- (void)setPresentationPrefersStatusBarHidden:(BOOL)a0 initialStatusBarSettings:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_currentStatusBarFrameForStyle:(long long)a0;
- (void)_updateGrabberViewConfiguration;
- (void)setNeedsSceneDeactivationUpdate;
- (void)_applyStatusBarStyleRequestWithInitialStatusBarSettings:(id)a0;
- (void)_invalidateKeyboardHomeAffordanceAssertion;
- (BOOL)_isKeyboardVisibleForSpringBoard;
- (id)_newHomeGrabberViewWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_updateGrabberViewHiddenConfigurationAnimated:(BOOL)a0;
- (void)addPresentationBackgroundView:(id)a0;
- (void)beginIgnoringAppearanceUpdates;
- (void)beginIgnoringContentOverlayInsetUpdates;
- (void)endIgnoringAppearanceUpdates;
- (void)endIgnoringContentOverlayInsetUpdates;
- (void)handleGestureDismissal;
- (void)handlePictureInPictureDidBegin;
- (void)handleWillShowKeyboard:(BOOL)a0;
- (BOOL)isPresentedByBundleIdentifier:(id)a0;
- (BOOL)isPresentedByProcess:(id)a0;
- (BOOL)isPresentedFromSceneWithIdentityTokenString:(id)a0;
- (id)newTransientOverlayDismissalTransitionCoordinator;
- (id)newTransientOverlayPresentationTransitionCoordinator;
- (void)preserveInputViewsAnimated:(BOOL)a0;
- (void)removePresentationBackgroundView:(id)a0;
- (void)restoreInputViewsAnimated:(BOOL)a0;
- (void)setHomeGrabberPointerClickDelegate:(id)a0;
- (void)setNeedsAudioCategoriesDisablingVolumeHUDUpdate;
- (void)setNeedsContentOpaqueUpdate;
- (void)setNeedsFeaturePolicyUpdate;
- (void)setNeedsGestureDismissalStyleUpdate;
- (void)setNeedsIdleTimerReset;
- (void)setNeedsOrientationUpdatesDisabledUpdate;
- (void)setNeedsProximityDetectionUpdate;
- (void)setNeedsWindowHitTestingUpdate;
- (void)setPresentationPrefersHomeGrabberHidden:(BOOL)a0 animated:(BOOL)a1;
- (void)setPresentationPrefersStatusBarHidden:(BOOL)a0;

@end
