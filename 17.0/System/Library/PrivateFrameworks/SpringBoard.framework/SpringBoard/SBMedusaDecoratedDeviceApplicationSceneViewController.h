@class MTLumaDodgePillSettings, UITapGestureRecognizer, SBMedusaSettings, SBTopAffordanceViewController, UIDropInteraction, UIView, SBDeviceApplicationSceneHandle, NSString, SBHomeGrabberView, UIApplicationSceneClientSettingsDiffInspector, NSHashTable, SBDeviceApplicationSceneViewController, SBSetupManager, NSMutableSet, SBApplicationBlurContentView, SBMainWorkspace;
@protocol SBMedusaDecoratedDeviceApplicationSceneViewControllerDelegate, SBScenePlaceholderContentContext, SBApplicationSceneBackgroundView, SBApplicationSceneViewControllingStatusBarDelegate;

@interface SBMedusaDecoratedDeviceApplicationSceneViewController : UIViewController <SBDeviceApplicationSceneHandleObserver, SBDeviceApplicationSceneStatusBarStateObserver, SBDeviceApplicationSceneViewControllerDelegate, SBSceneViewStatusBarAssertionObserver, SBTopAffordanceViewControllerDelegate, SBUIActiveOrientationObserver, UIGestureRecognizerDelegate, SBMedusaDecoratedDeviceApplicationSceneViewControlling_Internal, SBMedusaDecoratedDeviceApplicationSceneViewControlling> {
    SBMainWorkspace *_workspace;
    SBSetupManager *_setupManager;
    SBDeviceApplicationSceneHandle *_deviceApplicationSceneHandle;
    SBDeviceApplicationSceneViewController *_deviceApplicationSceneViewController;
    UIApplicationSceneClientSettingsDiffInspector *_applicationSceneClientSettingsDiffInspector;
    BOOL _nubViewHidden;
    BOOL _nubViewHighlighted;
    UIView *_containerView;
    UIView *_blurViewContainerView;
    SBTopAffordanceViewController *_topAffordanceViewController;
    UITapGestureRecognizer *_topAffordanceTapGestureRecognizer;
    UIView *_darkenView;
    BOOL _isBlurred;
    SBApplicationBlurContentView *_blurView;
    long long _blurViewAnimationCount;
    BOOL _sceneRendersAsynchronously;
    NSString *_sceneMinificationFilter;
    long long _disableAsyncRenderingCount;
    NSHashTable *_statusBarAssertions;
    NSMutableSet *_matchMoveAnimationRequiringReasons;
    SBMedusaSettings *_medusaSettings;
    BOOL _isZoomed;
}

@property (readonly, nonatomic) UIView *_blurViewContainerView;
@property (readonly, nonatomic, getter=isBlurred) BOOL blurred;
@property (nonatomic) double darkenViewAlpha;
@property (retain, nonatomic) MTLumaDodgePillSettings *homeGrabberPillSettings;
@property (nonatomic, getter=isInsetForHomeAffordance) BOOL insetForHomeAffordance;
@property (retain, nonatomic) UIDropInteraction *dropInteraction;
@property (readonly, nonatomic) long long layoutRole;
@property (readonly, nonatomic) long long spaceConfiguration;
@property (readonly, nonatomic) long long floatingConfiguration;
@property (weak, nonatomic) id<SBMedusaDecoratedDeviceApplicationSceneViewControllerDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) double blurViewIconScale;
@property (nonatomic, getter=isNubViewHidden) BOOL nubViewHidden;
@property (nonatomic, getter=isNubViewHighlighted) BOOL nubViewHighlighted;
@property (retain, nonatomic) UIView<SBApplicationSceneBackgroundView> *backgroundView;
@property (readonly, nonatomic) SBDeviceApplicationSceneHandle *sceneHandle;
@property (readonly, nonatomic) SBHomeGrabberView *homeGrabberView;
@property (nonatomic) long long homeGrabberDisplayMode;
@property (copy, nonatomic) NSString *sceneMinificationFilter;
@property (nonatomic) BOOL sceneRendersAsynchronously;
@property (nonatomic) BOOL sceneResizesHostedContext;
@property (readonly, nonatomic) UIView *sceneContentView;
@property (readonly, nonatomic) double statusBarAlpha;
@property (readonly, nonatomic) long long overrideStatusBarStyle;
@property (weak, nonatomic) id<SBApplicationSceneViewControllingStatusBarDelegate> applicationSceneStatusBarDelegate;
@property (readonly, nonatomic) long long displayMode;
@property (retain, nonatomic) id<SBScenePlaceholderContentContext> placeholderContentContext;
@property (retain, nonatomic) UIView *customContentView;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } contentReferenceSize;
@property (readonly, nonatomic) long long contentOrientation;
@property (readonly, nonatomic) long long containerOrientation;

- (void)layoutStateTransitionCoordinator:(id)a0 transitionWillEndWithTransitionContext:(id)a1;
- (void)willRotateFromInterfaceOrientation:(long long)a0 toInterfaceOrientation:(long long)a1 alongsideContainerView:(id)a2 animated:(BOOL)a3;
- (void)didRotateFromInterfaceOrientation:(long long)a0 toInterfaceOrientation:(long long)a1;
- (long long)trailingStatusBarStyle;
- (void)conformsToProtocolSBDeviceApplicationSceneViewControlling;
- (long long)leadingStatusBarStyle;
- (long long)bestHomeAffordanceOrientationForOrientation:(long long)a0;
- (void)sceneHandle:(id)a0 didCreateScene:(id)a1;
- (void)sceneWithIdentifier:(id)a0 didChangeStatusBarStyleTo:(long long)a1;
- (double)currentStatusBarHeight;
- (void)sceneHandle:(id)a0 didUpdateClientSettingsWithDiff:(id)a1 transitionContext:(id)a2;
- (void)dealloc;
- (void)sceneWithIdentifier:(id)a0 didChangeStatusBarStyleTo:(long long)a1 forPartWithIdentifier:(id)a2;
- (id)backgroundActivitiesToSuppress;
- (void)layoutStateTransitionCoordinator:(id)a0 transitionDidEndWithTransitionContext:(id)a1;
- (void)viewWillLayoutSubviews;
- (BOOL)gestureRecognizer:(id)a0 shouldReceiveTouch:(id)a1;
- (void)applicationSceneViewController:(id)a0 statusBarTapped:(id)a1 tapActionType:(long long)a2;
- (void)containerContentWrapperInterfaceOrientationChangedTo:(long long)a0;
- (void)containerDidUpdateTraitsParticipant:(id)a0;
- (void)setDisplayMode:(long long)a0 animationFactory:(id)a1 completion:(id /* block */)a2;
- (void)activeInterfaceOrientationWillChangeToOrientation:(long long)a0;
- (id)statusBarAssertionWithStatusBarHidden:(BOOL)a0 atLevel:(unsigned long long)a1;
- (id)newSnapshot;
- (void)performSwitcherKeyboardShortcutAction:(long long)a0;
- (void)invalidate;
- (BOOL)gestureRecognizerShouldBegin:(id)a0;
- (void)activeInterfaceOrientationDidChangeToOrientation:(long long)a0 willAnimateWithDuration:(double)a1 fromOrientation:(long long)a2;
- (void)setLiveContentBlurEnabled:(BOOL)a0 duration:(double)a1 blurDelay:(double)a2 iconViewScale:(double)a3 began:(id /* block */)a4 completion:(id /* block */)a5;
- (void)loadView;
- (void)layoutStateTransitionCoordinator:(id)a0 transitionDidBeginWithTransitionContext:(id)a1;
- (BOOL)applicationSceneViewControllerIsInNonrotatingWindow:(id)a0;
- (void)_updateAsyncRendering;
- (void)_hardwareKeyboardAvailabilityChanged:(id)a0;
- (void)applicationSceneViewControllerDidUpdateHomeAffordanceSupportedOrientations:(id)a0;
- (void)statusBarAssertionDidUpdate:(id)a0;
- (void).cxx_destruct;
- (id)prepareForContentRotation;
- (id)newSnapshotView;
- (void)updateTopAffordanceContextMenu;
- (void)_windowManagementStyleDidChange:(id)a0;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (void)statusBarAssertionDidInvalidate:(id)a0;
- (BOOL)SB_conformsToSceneLayoutStatusBarAssertionProviding;
- (void)newSnapshotViewOnQueue:(id)a0 withCompletion:(id /* block */)a1;
- (void)setContentReferenceSize:(struct CGSize { double x0; double x1; })a0 withContentOrientation:(long long)a1 andContainerOrientation:(long long)a2;
- (void)willMoveToParentViewController:(id)a0;
- (id)initWithCoder:(id)a0;
- (BOOL)SB_conformsToMedusaDecoratedDeviceApplicationSceneViewControlling;
- (void)_addSceneViewMatchMoveAnimation;
- (void)_topAffordanceViewController:(id)a0 handleActionType:(long long)a1 transitionSource:(long long)a2;
- (BOOL)SB_conformsToSceneLayoutMedusaStatusBarAssertionProviding;
- (void)_guidedAccessActivationChanged:(id)a0;
- (BOOL)_sceneViewHasMatchMoveAnimation;
- (void)_beginRequiringSceneViewMatchMoveAnimationForReason:(id)a0;
- (id)_blurContentView;
- (void)_createOrDestroyTopAffordanceViewControllerAnimated:(BOOL)a0;
- (void)_elasticValueViewControllerWillDismiss:(id)a0;
- (void)_elasticValueViewControllerWillPresent:(id)a0;
- (void)_endRequiringSceneViewMatchMoveAnimationForReason:(id)a0;
- (void)_handleSplitHomeScreenSwitcherKeyShortcut;
- (void)_handleTopAffordanceTapGestureRecognizerAction:(id)a0;
- (BOOL)_isChamoisWindowingUIEnabled;
- (void)_medusaEnabledStateChanged:(id)a0;
- (void)_modifyApplicationContext:(id)a0 handleActionType:(long long)a1 spaceConfiguration:(long long)a2 layoutRole:(long long)a3 desiredFloatingConfiguration:(long long)a4;
- (void)_removeSceneViewMatchMoveAnimation;
- (void)_sendStatusBarScrollToTopActionForGestureRecognizer:(id)a0;
- (void)_setBlurContentView:(id)a0;
- (void)_setTopAffordanceAutoHides:(BOOL)a0;
- (void)_topAffordanceViewController:(id)a0 handleActionType:(long long)a1 desiredFloatingConfiguration:(long long)a2 transitionSource:(long long)a3;
- (void)_topAffordanceViewControllerHandleCloseAction;
- (BOOL)_topAffordanceViewControllerHandleMoveToDisplayAction:(id)a0 transitionSource:(long long)a1;
- (void)_updateCurrentTopAffordanceAlpha;
- (void)_updateTopAffordanceHighlight;
- (void)_updateTopAffordanceInset;
- (BOOL)_wantsTopAffordance;
- (id)hitTestToTopAffordance:(struct CGPoint { double x0; double x1; })a0 window:(id)a1;
- (id)initWithDeviceApplicationSceneHandle:(id)a0 layoutRole:(long long)a1;
- (id)initWithDeviceApplicationSceneHandle:(id)a0 layoutRole:(long long)a1 workspace:(id)a2 setupManager:(id)a3;
- (void)setLayoutRole:(long long)a0 spaceConfiguration:(long long)a1 floatingConfiguration:(long long)a2 sizingPolicy:(long long)a3;
- (id)statusBarAssertionWithStatusBarHidden:(BOOL)a0 nubViewHidden:(long long)a1 atLevel:(unsigned long long)a2;
- (id)topAffordanceView;
- (void)topAffordanceViewController:(id)a0 handleActionType:(long long)a1;
- (void)topAffordanceViewControllerWillPresentMenu:(id)a0;
- (void)updateTopAffordanceOverrideUserInterfaceStyle;

@end
