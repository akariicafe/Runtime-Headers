@class NSMutableDictionary, CSVoiceTriggerSecondPassConfig, CSAudioCircularBuffer, NSDictionary, NSObject, CSSpeechManager, CSPhraseNDEAPIScorer, CSAudioStream, NSMutableArray, CSPhraseDetector, NSString, CSAudioTimeConverter, CSVoiceTriggerFirstPassMetrics, CSVTSecondPassLatencyMetrics, SSRSpeakerRecognitionController, SSRSpeakerRecognitionContext, CSPlainAudioFileWriter, CSAsset, CSVoiceTriggerAwareZeroFilter, NSUUID;
@protocol OS_dispatch_queue, CSVoiceTriggerDelegate;

@interface CSVoiceTriggerSecondPass : NSObject <CSPhraseNDEAPIScorerDelegate, CSVoiceTriggerEnabledMonitorDelegate, CSAudioServerCrashMonitorDelegate, CSAudioStreamProvidingDelegate, CSMediaPlayingMonitorDelegate, CSVolumeMonitorDelegate, SSRSpeakerRecognitionControllerDelegate, CSVoiceTriggerAwareZeroFilterDelegate, CSSelfTriggerDetectorDelegate>

@property (retain, nonatomic) CSSpeechManager *speechManager;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) CSAsset *currentAsset;
@property (retain, nonatomic) CSVoiceTriggerSecondPassConfig *config;
@property (retain, nonatomic) CSAudioStream *audioStream;
@property (retain, nonatomic) NSString *audioProviderUUID;
@property (retain, nonatomic) CSPhraseDetector *phraseDetector;
@property (retain, nonatomic) CSPhraseNDEAPIScorer *phraseNDEAPIScorer;
@property (retain, nonatomic) SSRSpeakerRecognitionController *speakerRecognitionController;
@property (retain, nonatomic) SSRSpeakerRecognitionContext *ssrContext;
@property (copy, nonatomic) id /* block */ resultCompletion;
@property (nonatomic) unsigned long long secondPassTimeout;
@property (nonatomic) unsigned long long numProcessedSamples;
@property (nonatomic) unsigned long long numAnalyzedSamples;
@property (nonatomic) float secondPassPrependingSec;
@property (nonatomic) float phsRejectLoggingThreshold;
@property (nonatomic) unsigned long long extraSamplesAtStart;
@property (nonatomic) unsigned long long analyzerPrependingSamples;
@property (nonatomic) unsigned long long analyzerTrailingSamples;
@property (nonatomic) BOOL shouldUsePHS;
@property (nonatomic) unsigned long long earlyDetectFiredMachTime;
@property (nonatomic) unsigned long long activeChannel;
@property (nonatomic) unsigned long long selectedChannelFromFirstPass;
@property (nonatomic) unsigned long long processedSampleCountsInPending;
@property (nonatomic) unsigned long long firstPassTriggerStartSampleCount;
@property (nonatomic) unsigned long long firstPassTriggerFireSampleCount;
@property (retain, nonatomic) NSDictionary *firstPassChannelSelectionScores;
@property (nonatomic) float firstPassChannelSelectionDelaySeconds;
@property (nonatomic) float firstPassMasterChannelScoreBoost;
@property (nonatomic) float firstPassOnsetScore;
@property (nonatomic) unsigned long long firstPassOnsetChannel;
@property (nonatomic) unsigned long long firstPassFireHostTime;
@property (nonatomic) BOOL didWakeAP;
@property (nonatomic) BOOL hasTriggerCandidate;
@property (nonatomic) BOOL isStartSampleCountMarked;
@property (nonatomic) unsigned long long secondPassAnalyzerStartSampleCount;
@property (nonatomic) double lastAggTime;
@property (nonatomic) double cumulativeUptime;
@property (nonatomic) double cumulativeDowntime;
@property (weak, nonatomic) CSAudioCircularBuffer *audioBuffer;
@property (nonatomic) unsigned long long firstPassSource;
@property (retain, nonatomic) NSString *firstPassDeviceId;
@property (nonatomic) unsigned long long secondPassClient;
@property (retain, nonatomic) NSString *currentLocale;
@property (retain, nonatomic) CSPlainAudioFileWriter *audioFileWriter;
@property (nonatomic) BOOL secondPassHasMadeDecision;
@property (nonatomic) long long mediaPlayingState;
@property (nonatomic) float mediaVolume;
@property (retain, nonatomic) NSUUID *secondPassCompleteWatchDogToken;
@property (nonatomic) BOOL firstTimeAssetConfigured;
@property (retain, nonatomic) NSMutableArray *assetConfigWaitingBuffer;
@property (retain, nonatomic) CSAudioTimeConverter *audioTimeConverter;
@property (retain, nonatomic) NSMutableDictionary *storedFirstPassInfo;
@property (retain, nonatomic) NSUUID *secondPassRejectionMHUUID;
@property (nonatomic) BOOL hasLoggedSecondPass;
@property (retain, nonatomic) CSVoiceTriggerFirstPassMetrics *firstpassMetrics;
@property (retain, nonatomic) CSVTSecondPassLatencyMetrics *secondPassLatencyMetrics;
@property (nonatomic) BOOL supportsMph;
@property (retain, nonatomic) CSVoiceTriggerAwareZeroFilter *zeroFilter;
@property (nonatomic) unsigned long long prewarmMmapedSize;
@property (nonatomic) void *prewarmModelGraph;
@property (nonatomic) BOOL isPSRAudioFlushed;
@property (nonatomic) unsigned long long AOPVTTriggerLength;
@property (nonatomic) unsigned long long timeBasedEstimatedTriggerLength;
@property (readonly, nonatomic) NSString *UUID;
@property (weak, nonatomic) id<CSVoiceTriggerDelegate> delegate;
@property (nonatomic) float secondPassCompleteWatchDogTimeoutSec;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)timeStampString;
+ (id)secondPassAudioLogDirectory;
+ (id)secondPassAudioLoggingFilePathWithDeviceId:(id)a0;
+ (id)stringForSecondPassResult:(unsigned long long)a0;

- (void)_setAsset:(id)a0;
- (void)CSAudioServerCrashMonitorDidReceiveServerRestart:(id)a0;
- (void)prewarm;
- (void)audioStreamProvider:(id)a0 audioChunkForTVAvailable:(id)a1;
- (void)_resetStartAnalyzeTime;
- (void)reset;
- (void)dealloc;
- (void)_initializeMediaPlayingState;
- (void)_reset;
- (void)start;
- (void)audioStreamProvider:(id)a0 didStopStreamUnexpectedly:(long long)a1;
- (void)CSVoiceTriggerEnabledMonitor:(id)a0 didReceiveEnabled:(BOOL)a1;
- (void)_setStartAnalyzeTime:(unsigned long long)a0;
- (void)selfTriggerDetector:(id)a0 didDetectSelfTrigger:(id)a1;
- (void).cxx_destruct;
- (void)setAsset:(id)a0;
- (void)audioStreamProvider:(id)a0 audioBufferAvailable:(id)a1;
- (void)cancelCurrentRequest;
- (void)CSMediaPlayingMonitor:(id)a0 didReceiveMediaPlayingChanged:(long long)a1;
- (id)initWithPHSEnabled:(BOOL)a0 targetQueue:(id)a1;
- (void)CSVolumeMonitor:(id)a0 didReceiveMusicVolumeChanged:(float)a1;
- (void)_addDeviceStatusInfoToDict:(id)a0;
- (void)_addLosingPhraseResultstoVTEI:(id)a0 withLosingPhraseResults:(id)a1;
- (void)_addPHSInfoToVTEI:(id)a0 fromSpeakerInfo:(id)a1 withThreshold:(float)a2;
- (void)_addRejectStatsToDict:(id)a0;
- (void)_analyzeForChannel:(unsigned long long)a0 keywordDetectorResult:(id)a1 losingPhraseResults:(id)a2;
- (void)_clearSecondPassCompletionWatchDog;
- (void)_clearTriggerCandidate;
- (void)_didStartAudioStream:(BOOL)a0;
- (void)_didStopAudioStream;
- (id)_fetchSiriLocale;
- (id)_getAudioTimeConverter;
- (void)_getDidWakeAP:(id)a0;
- (id)_getFirstPassTriggerSourceAsString:(unsigned long long)a0;
- (id)_getVoiceTriggerInfoWithKeywordDetectorResult:(id)a0;
- (void)_handleAudioChunk:(id)a0 shouldPreprocessedByZeroFilter:(BOOL)a1;
- (void)_handlePHSResults:(id)a0 voiceTriggerEventInfo:(id)a1 forPhId:(unsigned long long)a2;
- (void)_handleResultCompletion:(unsigned long long)a0 voiceTriggerInfo:(id)a1 isSecondChanceCandidate:(BOOL)a2 error:(id)a3;
- (void)_handleSecondPassSuccess:(id)a0;
- (void)_handleVoiceTriggerFirstPassFromAOP:(id)a0 audioProviderUUID:(id)a1 completion:(id /* block */)a2;
- (void)_handleVoiceTriggerFirstPassFromAP:(id)a0 audioProviderUUID:(id)a1 completion:(id /* block */)a2;
- (void)_handleVoiceTriggerFirstPassFromHearst:(unsigned long long)a0 deviceId:(id)a1 audioProviderUUID:(id)a2 firstPassInfo:(id)a3 rtModelRequestOptions:(id)a4 completion:(id /* block */)a5;
- (void)_handleVoiceTriggerFirstPassFromHearstAP:(unsigned long long)a0 deviceId:(id)a1 audioProviderUUID:(id)a2 firstPassInfo:(id)a3 rtModelRequestOptions:(id)a4 completion:(id /* block */)a5;
- (void)_handleVoiceTriggerFirstPassFromJarvis:(unsigned long long)a0 deviceId:(id)a1 audioProviderUUID:(id)a2 firstPassInfo:(id)a3 completion:(id /* block */)a4;
- (void)_handleVoiceTriggerFirstPassFromRemora:(unsigned long long)a0 deviceId:(id)a1 audioProviderUUID:(id)a2 firstPassInfo:(id)a3 completion:(id /* block */)a4;
- (BOOL)_isBuiltInFirstPassSource:(unsigned long long)a0;
- (void)_logRejectionEventToSELF:(id)a0 result:(unsigned long long)a1;
- (void)_logSecondPassResult:(unsigned long long)a0 withVTEI:(id)a1;
- (void)_logUptimeWithVTSwitchChanged:(BOOL)a0 VTEnabled:(BOOL)a1;
- (void)_mmapModelForPreWarm;
- (void)_notifySecondPassReject:(id)a0 result:(unsigned long long)a1 isSecondChanceCandidate:(BOOL)a2;
- (void)_prepareStartAudioStream;
- (void)_requestStartAudioStreamWitContext:(id)a0 audioProviderUUID:(id)a1 startStreamOption:(id)a2 completion:(id /* block */)a3;
- (void)_resetUpTime;
- (void)_resetVoiceTriggerLatencyMetrics;
- (id)_runRecognizersWithChunk:(id)a0;
- (void)_scheduleDidStartSecondPassCompletionWatchDogWithToken:(id)a0;
- (void)_scheduleSecondPassCompletionWatchDog;
- (void)_setKeywordDetectorStartMachTime:(unsigned long long)a0 detectorEndMachTime:(unsigned long long)a1 lastAudioPacketAnalyzedMachTime:(unsigned long long)a2;
- (BOOL)_shouldLogMediaplayState:(unsigned long long)a0;
- (BOOL)_shouldRequestSingleChannelFromAudioProvider;
- (void)_unmapForPrewarmLoadedGraph;
- (void)_voiceTriggerFirstPassDidDetectKeywordFrom:(id)a0 completion:(id /* block */)a1;
- (id)_voiceTriggerSecondPassLatencyMetrics;
- (void)handleVoiceTriggerSecondPassFrom:(id)a0 completion:(id /* block */)a1;
- (id)initWithPHSEnabled:(BOOL)a0;
- (id)initWithPHSEnabled:(BOOL)a0 speechManager:(id)a1 supportsMphDetection:(BOOL)a2 secondPassQueue:(id)a3;
- (void)setSupportsMultiPhraseDetection:(BOOL)a0;
- (void)voiceTriggerPhraseNDEAPIScorerDidDetectedKeyword:(id)a0 bestStartSampleCount:(unsigned long long)a1 bestEndSampleCount:(unsigned long long)a2;
- (void)zeroFilter:(id)a0 zeroFilteredBufferAvailable:(id)a1 atHostTime:(unsigned long long)a2;

@end
