@class NSTimer, NSString, NSHashTable, FBScene, UIView, NSMutableDictionary, BSEventQueue, NSMutableSet, PBUIRemoteIrisWallpaperPlayer, PBUIWallpaperConfigurationManager;
@protocol UIScenePresentation, PBUIWallpaperPresentingDelegate, BSInvalidatable, PBUIWallpaperReachabilityCoordinating, UIScenePresenter, PBUISessionReconnectPolicy;

@interface PBUIWallpaperRemoteViewController : UIViewController <BSDescriptionProviding, FBSceneDelegate, FBSceneLayerManagerObserver, PBUIWallpaperConfigurationManagerDelegate, PBUIWallpaperViewDelegate, PBUIFakeBlurImageProviding, PBUIFakeBlurViewRegistering, PBUIRemoteIrisWallpaperPlayerDelegate, PBUIWallpaperPresenting, PBUIWallpaperLegibilityProviding> {
    FBScene *_scene;
    id<UIScenePresenter> _scenePresenter;
    id<PBUISessionReconnectPolicy> _reconnectPolicy;
    NSHashTable *_lockscreenObservers;
    NSHashTable *_homescreenObservers;
    NSHashTable *_lockscreenBlurViews;
    NSHashTable *_homescreenBlurViews;
    NSMutableDictionary *_fakeBlurCache;
    NSMutableSet *_disallowRasterizationReasonsHomeVariant;
    NSMutableSet *_disallowRasterizationReasonsLockVariant;
    NSMutableSet *_hideWallpaperReasonsHomeVariant;
    NSMutableSet *_hideWallpaperReasonsLockVariant;
    NSMutableSet *_wallpaperAnimationSuspendedReasons;
    NSMutableSet *_wallpaperRequiredReasons;
    NSMutableSet *_homescreenChangesDelayedReasons;
    NSHashTable *_wallpaperScaleAssertions;
    NSHashTable *_sceneModeAssertions;
    NSMutableSet *_externalSceneModeAssertionActions;
    id<BSInvalidatable> _sceneModeAssertionForViewAppeared;
    NSTimer *_sceneDeactivationTimer;
    UIView<UIScenePresentation> *_scenePresentationView;
    BOOL _missingEffectViewImages;
    NSMutableSet *_pendingEffectViewImageSlots;
    BSEventQueue *_eventQueue;
    PBUIRemoteIrisWallpaperPlayer *_remoteIrisWallpaperPlayer;
    NSMutableSet *_stateCaptureHandles;
}

@property (copy, nonatomic) NSString *cachingIdentifier;
@property (retain, nonatomic) PBUIWallpaperConfigurationManager *wallpaperConfigurationManager;
@property (retain, nonatomic) id<PBUIWallpaperReachabilityCoordinating> reachabilityCoordinator;
@property (nonatomic) long long variant;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<PBUIWallpaperPresentingDelegate> wallpaperPresentingDelegate;
@property (readonly, nonatomic) struct { long long x0; long long x1; double x2; } currentHomescreenStyleTransitionState;
@property (nonatomic) long long activeVariant;
@property (readonly, nonatomic) double minimumHomescreenWallpaperScale;
@property (readonly, nonatomic) double homescreenWallpaperScale;
@property (readonly, nonatomic) double minimumLockscreenWallpaperScale;
@property (readonly, nonatomic) double lockscreenWallpaperScale;
@property (readonly, nonatomic) unsigned long long significantEventsCounter;

- (BOOL)shouldAutorotate;
- (void)scene:(id)a0 didReceiveActions:(id)a1;
- (id)newFakeBlurViewForVariant:(long long)a0 style:(long long)a1 transformOptions:(unsigned long long)a2;
- (void)cancelInProcessAnimations;
- (void)viewWillAppear:(BOOL)a0;
- (BOOL)setWallpaperStyleTransitionState:(struct { long long x0; long long x1; double x2; })a0 forPriority:(long long)a1 forVariant:(long long)a2 withAnimationFactory:(id)a3;
- (void)dealloc;
- (void)traitCollectionDidChange:(id)a0;
- (void)viewWillLayoutSubviews;
- (void)preheatWallpaperForVariant:(long long)a0;
- (void)scene:(id)a0 didUpdateClientSettingsWithDiff:(id)a1 oldClientSettings:(id)a2 transitionContext:(id)a3;
- (id)succinctDescriptionBuilder;
- (id)requireWallpaperWithReason:(id)a0;
- (void)sceneDidDeactivate:(id)a0 withError:(id)a1;
- (id)setHomescreenWallpaperScale:(double)a0 withAnimationFactory:(id)a1;
- (void)viewDidLoad;
- (void)_addStateCaptureHandlers;
- (void)_registerFakeBlurView:(id)a0;
- (id)averageColorInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forVariant:(long long)a1 withSmudgeRadius:(double)a2;
- (void)removeObserver:(id)a0 forVariant:(long long)a1;
- (id)_sceneSettings;
- (void)setLockscreenOnlyWallpaperAlpha:(double)a0;
- (id)descriptionBuilderWithMultilinePrefix:(id)a0;
- (id)imageForWallpaperStyle:(inout long long *)a0 variant:(long long)a1 traitCollection:(id)a2;
- (void)setActiveVariant:(long long)a0 withOutAnimationFactory:(id)a1 inAnimationFactory:(id)a2 completion:(id /* block */)a3;
- (BOOL)updateImageProviderView:(id)a0 withImage:(id)a1;
- (id)requireWallpaperRasterizationWithReason:(id)a0;
- (id)irisWallpaperPlayer;
- (unsigned long long)supportedInterfaceOrientations;
- (void)addObserver:(id)a0 forVariant:(long long)a1;
- (void)updateWallpaperForLocations:(long long)a0 wallpaperMode:(long long)a1 withCompletion:(id /* block */)a2;
- (id)setLockscreenWallpaperScale:(double)a0 withAnimationFactory:(id)a1;
- (id)initWithNibName:(id)a0 bundle:(id)a1;
- (id)descriptionWithMultilinePrefix:(id)a0;
- (BOOL)_canShowWhileLocked;
- (void)noteWillAnimateToInterfaceOrientation:(long long)a0 duration:(double)a1;
- (BOOL)removeWallpaperStyleForPriority:(long long)a0 forVariant:(long long)a1 withAnimationFactory:(id)a2;
- (double)_wallpaperScaleForVariant:(long long)a0;
- (BOOL)setWallpaperStyle:(long long)a0 forPriority:(long long)a1 forVariant:(long long)a2 withAnimationFactory:(id)a3;
- (double)zoomFactorForVariant:(long long)a0;
- (void).cxx_destruct;
- (void)_updateFallbackView;
- (id)_wallpaperScaleAssertionForVariant:(long long)a0 scale:(double)a1;
- (id)legibilitySettingsForVariant:(long long)a0;
- (id)averageColorInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forVariant:(long long)a1;
- (void)wallpaperConfigurationManager:(id)a0 didChangeWallpaperConfigurationForVariants:(long long)a1;
- (id)succinctDescription;
- (BOOL)parallaxEnabledForVariant:(long long)a0;
- (double)parallaxFactorForVariant:(long long)a0;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (id)newImageProviderView;
- (void)setWallpaperHidden:(BOOL)a0 variant:(long long)a1 reason:(id)a2;
- (BOOL)updateIrisWallpaperForStaticMode;
- (id)wallpaperView:(id)a0 wallpaperConfigurationIncludingValueTypes:(unsigned long long)a1;
- (id)suspendWallpaperAnimationForReason:(id)a0;
- (id)averageColorForVariant:(long long)a0;
- (void)noteDidRotateFromInterfaceOrientation:(long long)a0;
- (void)viewDidDisappear:(BOOL)a0;
- (void)updateWallpaperForLocations:(long long)a0 withCompletion:(id /* block */)a1;
- (void)updateIrisWallpaperForInteractiveMode;
- (void)_unregisterFakeBlurView:(id)a0;
- (double)contrastInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forVariant:(long long)a1;
- (void)_updateWallpaperScaleWithAnimationFactory:(id)a0;
- (double)contrastForVariant:(long long)a0;
- (void)_setupScene;
- (void)_invalidateBlurCacheForVariant:(long long)a0;
- (void)_updateSceneModeWithCompletion:(id /* block */)a0;
- (id)_acquireSceneModeAssertionForReason:(id)a0 sceneMode:(long long)a1;
- (id)_acquireSceneModeAssertionForReason:(id)a0 sceneMode:(long long)a1 completion:(id /* block */)a2;
- (id)_blurImageFromURL:(id)a0;
- (id)_blurViewsForVariant:(long long)a0;
- (void)_cacheBlurImageForVariant:(long long)a0 requestedStyle:(long long)a1 actualStyle:(long long)a2 traitCollection:(id)a3 image:(id)a4 imageURL:(id)a5;
- (id)_cachedBlurAssetForVariant:(long long)a0 requestedStyle:(long long)a1 traitCollection:(id)a2;
- (void)_cancelSceneDeactivation;
- (id)_disallowRasterizationReasonsForVariant:(long long)a0;
- (long long)_effectiveSceneMode;
- (id)_hideWallpaperReasonsForVariant:(long long)a0;
- (void)_modifySceneSettings:(id)a0 forSceneMode:(long long)a1;
- (void)_notifyAllObserversOfNewWallpaperScene;
- (id)_observersForVariant:(long long)a0;
- (void)_performWithLiveScene:(id /* block */)a0;
- (void)_reconfigureBlurViewsForVariant:(long long)a0;
- (id)_sceneClientSettings;
- (void)_scheduleSceneDeactivation;
- (void)_setupSceneWithCompletion:(id /* block */)a0;
- (id)_simpleAssertionWithReasonsSet:(id)a0 identifier:(id)a1 reason:(id)a2 updater:(id /* block */)a3;
- (void)_updateBlurViewsForVariant:(long long)a0;
- (void)_updateSceneMode;
- (void)_updateWallpaperSceneSettingsWithBlock:(id /* block */)a0;
- (void)_updateWallpaperSceneSettingsWithBlock:(id /* block */)a0 postUpdateBlock:(id /* block */)a1;
- (void)_updateWallpaperSceneSettingsWithTransitionBlock:(id /* block */)a0;
- (void)beginDelayingHomescreenStyleChangesForReason:(id)a0;
- (id)beginRequiringWithReason:(id)a0;
- (void)endDelayingHomescreenStyleChangesForReason:(id)a0 animationFactory:(id)a1;
- (void)remoteIrisWallpaperPlayer:(id)a0 touchActiveChanged:(BOOL)a1;
- (void)setAlpha:(double)a0 forWallpaperVariant:(long long)a1;
- (void)setDisallowsRasterization:(BOOL)a0 forVariant:(long long)a1 withReason:(id)a2;
- (void)setLockscreenWallpaperContentsRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setLockscreenWallpaperScale:(double)a0;

@end
