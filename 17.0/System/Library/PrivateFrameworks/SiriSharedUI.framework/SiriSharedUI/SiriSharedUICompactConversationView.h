@class SiriSharedUICompactUserUtteranceView, SiriSharedUICompactServerUtteranceView, SiriSharedUIAdaptiveGrabberView, NSDictionary, SiriSharedUIViewStackConstraints, SiriSharedUIStandardScrollView, SiriSharedUIAnimationContext, PLPlatterView, NSMutableArray, UIView, NSString, SiriSharedUIExpandablePlatterPanGestureRecognizer, NSArray, SRUIFSpeechRecognitionHypothesis;
@protocol SiriSharedUICompactConversationViewDelegate, SiriSharedUIStackableContentDelegate;

@interface SiriSharedUICompactConversationView : SiriSharedUIStandardView <SiriSharedUICompactUserUtteranceViewDelegate, SiriSharedUICompactServerUtteranceViewDelegate, SiriSharedUIExpandablePlatterPanGestureRecognizerDelegate, UIScrollViewDelegate, SiriSharedUICompactConversationViewHosting> {
    SiriSharedUICompactUserUtteranceView *_userUtteranceView;
    PLPlatterView *_platterView;
    UIView *_containerView;
    NSDictionary *_conversationSnippetVibrancyViews;
    UIView *_hintVibrancyView;
    UIView *_hintSnippetView;
    SiriSharedUIAdaptiveGrabberView *_grabberView;
    BOOL _automaticallyCollapseWhenResultIsScrolled;
    BOOL _hasHintConversationSnippets;
    BOOL _didSetConversationSnippets;
    double _currentExpandedGestureHeight;
    BOOL _waitingForFinalSpeechHypothesis;
    BOOL _requestedAppearanceAnimation;
    BOOL _runningAnimatedFadeOut;
    BOOL _runningPrepareForUpdates;
    NSMutableArray *_prepareForUpdatesPendingCompletionBlocks;
}

@property (retain, nonatomic) SiriSharedUIStandardScrollView *scrollView;
@property (nonatomic) BOOL showingCollapsedUI;
@property (nonatomic) long long currentExpandablePlatterStyle;
@property (retain, nonatomic) SiriSharedUIExpandablePlatterPanGestureRecognizer *expandablePlatterGesture;
@property (retain, nonatomic) UIView *conversationSnippetContainerView;
@property (retain, nonatomic, getter=_serverUtteranceView, setter=_setServerUtteranceView:) SiriSharedUICompactServerUtteranceView *serverUtteranceView;
@property (nonatomic) BOOL isInAmbient;
@property (nonatomic) BOOL isInAmbientInteractivity;
@property (nonatomic) BOOL allowAutomaticConversationSnippetViewScaling;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<SiriSharedUICompactConversationViewDelegate> delegate;
@property (copy, nonatomic) SRUIFSpeechRecognitionHypothesis *speechRecognitionHypothesis;
@property (copy, nonatomic) NSArray *serverUtterances;
@property (copy, nonatomic) NSArray *conversationSnippetViews;
@property (readonly, nonatomic, getter=isCurrentlyTrackingGesture) BOOL currentlyTrackingGesture;
@property (readonly, nonatomic, getter=willAutomaticallyCollapseWhenResultIsScrolled) BOOL automaticallyCollapseWhenResultIsScrolled;
@property (weak, nonatomic) id<SiriSharedUIStackableContentDelegate> stackContainerDelegate;
@property (nonatomic) long long attachmentType;
@property (nonatomic) double attachmentYOffset;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } portraitContentSize;
@property (retain, nonatomic) SiriSharedUIViewStackConstraints *stackConstraints;
@property (nonatomic) BOOL useLowerPriorityHeightConstraint;
@property (retain, nonatomic) NSArray *customAttachmentConstraints;
@property (retain, nonatomic) SiriSharedUIAnimationContext *animationContextForFrameAndLayoutUpdate;

- (id)hostingView;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (void)scrollViewDidEndDragging:(id)a0 willDecelerate:(BOOL)a1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)relayout;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (struct CGSize { double x0; double x1; })_fittingSize;
- (void)_setupSubviews;
- (BOOL)_isConversationSnippetHintType:(id)a0;
- (id)_keyForSnippet:(id)a0;
- (struct CGSize { double x0; double x1; })_sizeOfSnippet:(id)a0;
- (void)updateContentSizeWithAnimation:(BOOL)a0;
- (id)_conversationDisappearAnimation;
- (BOOL)layerHasOpacity;
- (void)_adjustCornerRadiusForSnippetView:(id)a0 vibrancyView:(id)a1;
- (void)_adjustHintCornerRadiusForSnippetView:(id)a0 vibrancyView:(id)a1;
- (long long)_animatedPresentationType;
- (id)_conversationAppearAnimation;
- (void)_prepareHintForAnimation;
- (void)_reloadConversationSnippetViewsIfHint;
- (void)_resetExpandablePlatterGestureState;
- (void)_resetExpansionStateForNewContent;
- (BOOL)_shouldAddVibrancyForSnippet:(id)a0;
- (struct CGSize { double x0; double x1; })_sizeThatFits:(struct CGSize { double x0; double x1; })a0 forSnippet:(id)a1;
- (struct CGSize { double x0; double x1; })_sizeThatFitsAllSnippets:(struct CGSize { double x0; double x1; })a0;
- (void)_updateAmbientSnippetScaling;
- (void)_updateExpandableDrawerUI;
- (void)_updateExpandedHeight;
- (void)_updateSubviewContentInsets;
- (BOOL)_useShadowForPlatter;
- (void)animateAppearanceIfNeeded;
- (void)animateFadeOutWithCompletion:(id /* block */)a0;
- (BOOL)contentSupportsCollapsingForHeight:(double)a0;
- (void)didCompleteAnimatedFadeOut;
- (void)expandablePlatterGesture:(id)a0 didCompleteTransitionToStyle:(long long)a1 phaseHeight:(double)a2;
- (void)expandablePlatterGesture:(id)a0 trackingGestureDidUpdateHeight:(double)a1;
- (void)expandablePlatterGestureDidBeginWithRecognizer:(id)a0;
- (void)expandablePlatterGestureDidEndWithRecognizer:(id)a0;
- (id)initWithStreamingTextView:(id)a0 emojiMaskStreamingTextView:(id)a1;
- (id)parserSpeakableObjectProviderForServerUtterance:(id)a0;
- (id)prepareForUpdatesPendingCompletionBlocks;
- (void)prepareForUpdatesToServerUtterance:(BOOL)a0 conversationSnippetViews:(BOOL)a1 speechRecognitionHypothesis:(BOOL)a2 updateBlock:(id /* block */)a3;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })serverUtteranceContentInsets;
- (void)serverUtteranceView:(id)a0 utteranceViewDidAppear:(id)a1;
- (void)serverUtteranceView:(id)a0 utteranceViewDidDisappear:(id)a1;
- (void)setShowCollapsedUI:(BOOL)a0;
- (void)snippetContentDidUpdate;
- (void)snippetContentDidUpdateForHint;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })snippetContentInsets;
- (BOOL)transitionToExpandablePlatterStyle:(long long)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })userUtteranceContentInsets;
- (void)userUtteranceView:(id)a0 speechRecognitionHypothesisDidAppear:(id)a1;
- (void)userUtteranceView:(id)a0 speechRecognitionHypothesisDidDisappear:(id)a1;
- (void)userUtteranceViewContentHeightDidUpdate:(id)a0;
- (void)userUtteranceViewTapped:(id)a0;

@end
