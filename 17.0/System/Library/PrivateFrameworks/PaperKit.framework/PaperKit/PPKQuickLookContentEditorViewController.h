@class UIView, NSString, PPKQuickLookBannerView, UIScrollView, AKController, UINavigationBar, PDFDocument, UTType, PDFView, UIFindInteraction, UIViewController, NSUndoManager;
@protocol QuickLookContentEditorDelegate, MUContentViewControllerProtocol;

@interface PPKQuickLookContentEditorViewController : PPKMarkupViewController <QuickLookContentEditor, _UIScrollViewScrollObserver>

@property BOOL needsToRestoreAnnotationEditingMode;
@property (retain, nonatomic) PPKQuickLookBannerView *bannerView;
@property (weak, nonatomic) id<QuickLookContentEditorDelegate> delegate;
@property (readonly, nonatomic) UIFindInteraction *findInteraction;
@property (nonatomic) unsigned long long presentationMode;
@property (readonly, nonatomic) UIView *transitioningView;
@property (readonly, nonatomic) BOOL documentIsLocked;
@property (readonly, nonatomic) BOOL canEncryptDocument;
@property (nonatomic) BOOL shouldHighlightTextAndDDAfterNextAnalysis;
@property (nonatomic) BOOL shouldEnterVisualSearchAfterNextAnalysis;
@property (nonatomic) BOOL shouldUpliftSubjectAfterNextAnalysis;
@property (readonly, nonatomic) NSString *infoButtonGlyphName;
@property (readonly, nonatomic) NSString *filledInfoButtonGlyphName;
@property BOOL encryptPrivateMetadata;
@property (copy, nonatomic) NSString *hostProcessBundleIdentifier;
@property (readonly) PDFDocument *pdfDocument;
@property (readonly) PDFView *pdfView;
@property (readonly, weak) UIView *pageLabelView;
@property (nonatomic) long long thumbnailViewStyle;
@property (nonatomic) BOOL allowsThumbnailViewPageReordering;
@property (nonatomic) BOOL fixedThumbnailView;
@property (nonatomic) unsigned long long currentPDFPageIndex;
@property (nonatomic) BOOL forcesPDFViewTopAlignment;
@property (nonatomic, getter=isShapeDetectionEnabled) BOOL shapeDetectionEnabled;
@property (retain, nonatomic) NSUndoManager *akUndoManager;
@property (nonatomic) BOOL centersIgnoringContentInsets;
@property (nonatomic) BOOL showShareButtonInToolbar;
@property (readonly, nonatomic) UIScrollView *contentViewScrollView;
@property (readonly, nonatomic) UIView *imageViewCombinedContentView;
@property unsigned long long inkStyle;
@property (readonly) struct CGSize { double x0; double x1; } adjustedSourceImageSize;
@property (readonly, nonatomic) AKController *annotationController;
@property (readonly, nonatomic) UIView *toolbar;
@property (nonatomic, getter=isToolbarHidden) BOOL toolbarHidden;
@property (nonatomic) long long toolbarPosition;
@property (retain, nonatomic) UINavigationBar *navBar;
@property (nonatomic, getter=isThumbnailViewHidden) BOOL thumbnailViewHidden;
@property (nonatomic) BOOL showThumbnailViewForMultipage;
@property (nonatomic) BOOL allEditingDisabled;
@property (nonatomic) BOOL annotationEditingEnabled;
@property (nonatomic) BOOL formFillingEnabled;
@property (nonatomic) BOOL pencilAlwaysDraws;
@property (nonatomic, getter=isNavigationModeHorizontal) BOOL navigationModeHorizontal;
@property (readonly) UIViewController<MUContentViewControllerProtocol> *contentViewController;
@property (readonly, nonatomic) UTType *outputContentType;
@property (readonly, nonatomic) NSString *outputType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (struct CGSize { double x0; double x1; })_suggestedContentSizeForImageSource:(struct CGImageSource { } *)a0;
+ (struct CGSize { double x0; double x1; })_suggestedContentSizeForPDF:(id)a0;
+ (struct CGSize { double x0; double x1; })suggestedContentSizeForData:(id)a0;
+ (struct CGSize { double x0; double x1; })suggestedContentSizeForURL:(id)a0;

- (void)find:(id)a0;
- (void)viewDidLoad;
- (void)findNext:(id)a0;
- (void)findPrevious:(id)a0;
- (void).cxx_destruct;
- (void)hideBanner;
- (BOOL)acceptSingleTouch:(id)a0;
- (void)flattenImageForAnalysis;
- (BOOL)hasResultsForVisualSearch;
- (void)infoButtonTapped;
- (BOOL)isInteractionActive;
- (BOOL)isVisualSearchEnabled;
- (void)markupContainerViewController:(id)a0 detectedFormInContent:(BOOL)a1 withAutofill:(BOOL)a2;
- (void)markupContainerViewController:(id)a0 didDismissViewControllerWithAnimation:(BOOL)a1;
- (void)markupContainerViewController:(id)a0 thumbnailViewDidCollapse:(BOOL)a1;
- (void)markupContainerViewController:(id)a0 updateChromeWithAnimation:(BOOL)a1;
- (void)markupContainerViewController:(id)a0 willPresentViewControllerWithAnimation:(BOOL)a1;
- (void)markupContainerViewControllerActiveAnalysisInteractionTypesDidChange:(id)a0;
- (void)markupContainerViewControllerAvailableAnalysisResultTypesDidChange:(id)a0;
- (void)markupContainerViewControllerDidChangeContent:(id)a0 enablingMarkup:(BOOL)a1;
- (void)setupAndStartImageAnalysisIfNeeded;
- (BOOL)shouldAllowEditingContents:(id)a0;
- (void)shouldHideMarkupOverlays:(BOOL)a0 animated:(BOOL)a1;
- (void)showBannerWithConfiguration:(id)a0;
- (void)stopImageAnalysis;
- (void)updateForFullScreen:(BOOL)a0 animated:(BOOL)a1;
- (void)updateThumbnailView;

@end
