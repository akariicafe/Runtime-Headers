@class NSUndoManager, CloudTabStore, PinnedTabsManager, _SFBrowserSavedState, WBProfile, NSHashTable, CKContextCompleter, NSMutableArray, NSString, TabSnapshotCache, UIImage, TabOverview, NSTimer, NSArray, NSMutableDictionary, TabBarManager, WBWindowState, TabBar, TabGroupSwitcherViewController, NSSet, UIView, TabDocument, TabCloseUndoGroup, SFFluidTabOverviewViewController, BrowserController, _SWCollaborationButtonView, WBTabGroupManager, CKShare, WBTabGroup, WBSTabOrderManager, UIMenu, NSUUID, NSMapTable;
@protocol TabCollectionView, TabContainerView, WBSCloudTabDeviceProvider, WBSOrderedTab, TabThumbnailCollectionView;

@interface TabController : NSObject <TabBarDelegate, TabBarManagerObserving, TabOverviewDelegate, TabSnapshotCacheDelegate, UITextFieldDelegate, WBSTabGroupConfirmationAlertDelegate, TabGroupSwitcherViewControllerDelegate, PinnedTabsContainer, WBTabGroupSyncAgentSyncObserver, SFTabHoverPreviewControllerDelegate, PinnedTabsObserving, TabDocumentDragDropDataSource, TabGroupProvider, WBTabGroupManagerObserver, WBSTabOrderProvider> {
    BrowserController *_browserController;
    NSTimer *_saveStateTimer;
    NSTimer *_stateValidateTimer;
    TabDocument *_tabDocumentBeingHiddenFromTabView;
    BOOL _didReadWindowState;
    BOOL _didFinishTabGroupSetup;
    TabGroupSwitcherViewController *_tabGroupSwitcherViewController;
    NSUUID *_browserWindowUUID;
    NSTimer *_updateContinuityTimer;
    unsigned long long _tabBarItemsFixed;
    unsigned long long _tabViewItemsFixed;
    TabSnapshotCache *_snapshotCache;
    BOOL _flushPendingSnapshots;
    id /* block */ _flushPendingSnapshotsCompletion;
    BOOL _didRestoreCloudTabsForEducationDevice;
    BOOL _didReceiveFirstCloudTabDeviceUpdateNotification;
    TabDocument *_tabDocumentBeingDragged;
    NSArray *_tabDocumentsToKeepVisible;
    NSMapTable *_uuidToTabDocumentMap;
    NSHashTable *_documentObservers;
    NSHashTable *_documentObserversToReceiveUpdatesDidEnd;
    NSMutableDictionary *_originalToReplacementUUIDMap;
    long long _documentUpdateCount;
    BOOL _switchingActiveDocument;
    BOOL _isClosingDocuments;
    TabCloseUndoGroup *_undoGroup;
    NSString *_lastSearchTerm;
    NSArray *_searchTermWords;
    unsigned long long _veryRecentlyClosedTabCount;
    unsigned long long _tabsClosedWhileTabViewPresentedCount;
    NSTimer *_veryRecentlyClosedTabCountInvalidationTimer;
    TabDocument *_tabShowingPreview;
    long long _updateTabsSuppressionCount;
    BOOL _suppressTabBarAnimation;
    BOOL _suppressSidebarReloadAnimation;
    NSArray *_tabDocumentsThatShouldSuppressOnCreatedEvents;
    NSArray *_tabGroupSuggestions;
    CKContextCompleter *_contextCompleter;
    BOOL _showsTabGroupNameSuggestions;
    NSMutableArray *_expandedTabGroupUUIDs;
    id /* block */ _postponedSnapshotInvalidationBlock;
    BOOL _didSelectAcceptedSharedTabGroup;
    SFFluidTabOverviewViewController *_fluidTabOverviewViewController;
    BOOL _shouldDeferSnapshotRequest;
}

@property (nonatomic, getter=isPrivateBrowsingEnabled) BOOL privateBrowsingEnabled;
@property (retain, nonatomic) TabDocument *activeTabDocument;
@property (readonly, retain, nonatomic) TabOverview *tabOverview;
@property (readonly, copy, nonatomic) NSMutableArray *tabDocuments;
@property (readonly, copy, nonatomic) NSMutableArray *privateTabDocuments;
@property (readonly, copy, nonatomic) NSArray *allTabDocuments;
@property (readonly, copy, nonatomic) NSArray *pinnedTabDocuments;
@property (readonly, copy, nonatomic) NSArray *unpinnedTabDocuments;
@property (readonly, copy, nonatomic) NSArray *normalUnpinnedTabDocuments;
@property (readonly, copy, nonatomic) NSArray *privateUnpinnedTabDocuments;
@property (readonly, copy, nonatomic) NSSet *allSnapshotIdentifiers;
@property (readonly, nonatomic) unsigned long long numberOfCurrentNonHiddenTabs;
@property (readonly, nonatomic) unsigned long long numberOfTabsForCloseAllAction;
@property (readonly, nonatomic, getter=isShowingLibraryDocument) BOOL showingLibraryDocument;
@property (retain, nonatomic) PinnedTabsManager *pinnedTabsManager;
@property (retain, nonatomic) TabDocument *privateActiveTabDocument;
@property (retain, nonatomic) TabDocument *normalActiveTabDocument;
@property (readonly, nonatomic) TabDocument *tabDocumentBeingActivated;
@property (nonatomic) BOOL tabViewDefersActivation;
@property (readonly, nonatomic) BOOL canCloseTab;
@property (readonly, nonatomic) BOOL canCloseOtherTabs;
@property (retain, nonatomic) _SFBrowserSavedState *savedState;
@property (retain, nonatomic) WBWindowState *windowState;
@property (readonly, nonatomic) BOOL updatingTabGroupTabs;
@property (readonly, nonatomic) WBTabGroupManager *tabGroupManager;
@property (readonly, copy, nonatomic) NSString *deviceIdentifier;
@property (nonatomic) long long privateBrowsingMode;
@property (readonly, nonatomic) BOOL isPrivateBrowsingAndLocked;
@property (readonly, nonatomic, getter=isControlledByAutomation) BOOL controlledByAutomation;
@property (readonly, nonatomic) WBSTabOrderManager *tabOrderManager;
@property (readonly, nonatomic) BOOL canAddNewTabForCurrentBrowsingMode;
@property (readonly, nonatomic) WBTabGroup *focusedTabGroup;
@property (readonly, nonatomic) TabDocument *tabDocumentForSpotlightSearch;
@property (readonly, nonatomic) CloudTabStore *cloudTabStore;
@property (readonly, nonatomic) id<WBSCloudTabDeviceProvider> profileCloudTabStore;
@property (weak, nonatomic) TabBar *tabBar;
@property (weak, nonatomic) TabBarManager *tabBarManager;
@property (readonly, nonatomic) BOOL hasTabBar;
@property (readonly, nonatomic, getter=isShowingTabView) BOOL showingTabView;
@property (readonly, nonatomic) id<TabThumbnailCollectionView> tabThumbnailCollectionView;
@property (nonatomic) long long tabThumbnailCollectionViewStyle;
@property (nonatomic) BOOL snapshotInvalidationIsPostponed;
@property (copy, nonatomic) id /* block */ postponedSnapshotInvalidationCondition;
@property (nonatomic) BOOL snapshotsAreEnabled;
@property (nonatomic) long long tabDisplayMode;
@property (nonatomic) BOOL shouldTogglePrivateBrowsingOnSplit;
@property (readonly, nonatomic) BOOL hasTabsThatShouldBeObscuredForDigitalHealth;
@property (readonly, nonatomic) NSArray *tabDocumentsMatchingSearchTerm;
@property (readonly, nonatomic) TabDocument *hiddenPrivateTabDocumentWhenShowingPrivateBrowsingExplanationText;
@property (readonly, nonatomic) long long visibleTabCollectionViewType;
@property (readonly, nonatomic) BOOL canCreateTabGroupFromCurrentTabs;
@property (readonly, nonatomic) BOOL canRenameActiveTabGroup;
@property (readonly, nonatomic) UIMenu *tabExposeMenu;
@property (readonly, nonatomic) UIMenu *newTabGroupMenu;
@property (readonly, nonatomic) NSUndoManager *undoManager;
@property (readonly, nonatomic) TabDocument *singleUnpinnedBlankTab;
@property (readonly, nonatomic) BOOL hasUnreadTab;
@property (readonly, nonatomic) _SWCollaborationButtonView *tabOverviewCollaborationButton;
@property (readonly, nonatomic) UIImage *iconForSharingActiveTabGroup;
@property (readonly, nonatomic) CKShare *shareRecordForActiveTabGroup;
@property (readonly, nonatomic) id /* block */ unnamedTabGroupDisplayTitleProvider;
@property (readonly, nonatomic) UIView<TabContainerView> *tabViewContainerView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL isInDefaultProfile;
@property (readonly, copy, nonatomic) NSString *activeProfileIdentifier;
@property (readonly, nonatomic) id<TabCollectionView> tabCollectionView;
@property (readonly, copy, nonatomic) NSArray *currentTabDocuments;
@property (readonly, copy, nonatomic) NSArray *profiles;
@property (readonly, copy, nonatomic) WBProfile *activeProfile;
@property (readonly, nonatomic) BOOL hasMultipleProfiles;
@property (readonly, copy, nonatomic) WBTabGroup *unnamedTabGroup;
@property (readonly, copy, nonatomic) WBTabGroup *privateTabGroupIfAvailable;
@property (readonly, nonatomic) UIMenu *menuForSwitchingProfiles;
@property (readonly, copy, nonatomic) WBTabGroup *activeTabGroup;
@property (copy, nonatomic) NSString *activeTabGroupUUID;
@property (nonatomic) BOOL tabGroupOverviewIsPresented;
@property (readonly, nonatomic) BOOL createTabGroupAlertIsPresented;
@property (readonly, nonatomic) NSString *moveLocalTabsToNewGroupTitle;
@property (readonly, nonatomic) NSString *activeLibraryType;
@property (readonly, nonatomic) NSArray *tabGroups;
@property (readonly, nonatomic) NSArray *unnamedTabGroups;
@property (readonly, nonatomic) NSArray *namedTabGroups;
@property (readonly, nonatomic) NSArray *allTabGroups;
@property (readonly, nonatomic) NSSet *nonActiveTabGroupsInCurrentBrowsingMode;
@property (readonly, nonatomic) NSArray *allSyntheticBookmarkFolders;
@property (readonly, copy, nonatomic) NSString *startPageBackgroundImageIdentifier;
@property (readonly, nonatomic) unsigned long long indexOfSelectedTab;
@property (readonly, nonatomic) id<WBSOrderedTab> selectedTabForTabOrderProvider;
@property (readonly, nonatomic) unsigned long long numberOfTabs;

- (id)updateProfileWithIdentifier:(id)a0 persist:(BOOL)a1 usingBlock:(id /* block */)a2 completionHandler:(id /* block */)a3;
- (void)tabCollectionViewDidDismiss:(id)a0;
- (void)closeTab;
- (void)tabCollectionViewWillPresent:(id)a0;
- (id)tabGroupWithUUID:(id)a0;
- (void)tabDocumentDidUpdatePinned:(id)a0;
- (void)addDocumentObserver:(id)a0;
- (void)tabCollectionView:(id)a0 didSelectItem:(id)a1;
- (void)didTransitionTabView;
- (void)updateTabBarAnimated:(BOOL)a0;
- (BOOL)isTabGroupActive:(id)a0;
- (void)tabHoverPreviewController:(id)a0 showPreviewForItem:(id)a1;
- (void)willTransitionTabView;
- (void)updateLockedBrowsingState;
- (void)reorderScopedBookmarkWithUUID:(id)a0 afterBookmarkWithUUID:(id)a1 notify:(BOOL)a2;
- (void)deleteScopedBookmarkWithUUID:(id)a0 completionHandler:(id /* block */)a1;
- (void)tabOverviewDidChangeAllowsInteractivePresentation:(id)a0;
- (void)performSuppressingDataModelUpdates:(id /* block */)a0;
- (id)tabDocumentWithUUID:(id)a0;
- (void)moveTabGroup:(id)a0 beforeOrAfterTabGroup:(id)a1;
- (void)tabGroupManager:(id)a0 didUpdateTabGroupWithUUID:(id)a1;
- (BOOL)tabCollectionView:(id)a0 cloudTab:(id)a1 matchesSearchText:(id)a2;
- (void)updateScopedBookmarkWithUUID:(id)a0 title:(id)a1 address:(id)a2;
- (void)updateBackgroundImageForTabGroup:(id)a0;
- (BOOL)tabItem:(id)a0 matchesSearchText:(id)a1;
- (void)tabCollectionViewWillDismiss:(id)a0;
- (void)tabCollectionViewDidCancelDismissal:(id)a0;
- (void)_beganSharingTabGroup:(id)a0;
- (void)reorderPinnedTabsIntoPlace;
- (id)currentItemForTabOverview:(id)a0;
- (void)moveTabDocument:(id)a0 toTabGroupWithUUID:(id)a1;
- (void)closeTabDocumentWithURL:(id)a0 UUID:(id)a1;
- (void)didBeginTrackingSession:(id)a0;
- (void)_lockedPrivateBrowsingStateDidChange:(id)a0;
- (id)copyBookmark:(id)a0 toPerTabGroupBookmarkFolderWithID:(int)a1;
- (void)tabGroupConfirmationAlertDidBeginDismissal:(id)a0;
- (id)initWithBrowserController:(id)a0;
- (void)tabGroupManager:(id)a0 willPerformBlockUpdatesForTabGroupWithUUID:(id)a1;
- (void)insertPerTabGroupBookmark:(id)a0 inPerTabGroupBookmarkFolderWithID:(int)a1;
- (void)clearBrowserController;
- (void)selectPreviousTabGroup;
- (void)attemptToSelectTabGroupFromShare:(id)a0;
- (id)openInTabGroupMenuWithNewTabGroupName:(id)a0 URL:(id)a1 descendantCount:(long long)a2 handler:(id /* block */)a3;
- (void)willSelectProfileWithIdentifier:(id)a0;
- (id)duplicateTabDocument:(id)a0;
- (id)addNewTabGroupWithTitle:(id)a0 fromExistingTabs:(BOOL)a1;
- (id)profilesMenuElementsWithOptions:(unsigned long long)a0 movingSelectedTabGroups:(id)a1 actionHandler:(id /* block */)a2;
- (void)tabGroupManager:(id)a0 didUpdateTabWithUUID:(id)a1 userDriven:(BOOL)a2;
- (void)dealloc;
- (BOOL)tabCollectionView:(id)a0 item:(id)a1 matchesSearchText:(id)a2;
- (void)replaceTabDocument:(id)a0 withTabDocument:(id)a1 committingSpeculativeLoad:(BOOL)a2;
- (id)globalPinnedTabsForTabGroup:(id)a0;
- (void)closeAllOpenTabsAnimated:(BOOL)a0;
- (id)iconForSharingTabGroup:(id)a0;
- (id)blankTabDocumentToReuseAllowingReorder:(BOOL)a0;
- (void)moveTab:(id)a0 fromTabGroupWithUUID:(id)a1 toTabGroupWithUUID:(id)a2 afterTab:(id)a3;
- (id)tabCollectionView:(id)a0 snapshotForItem:(id)a1;
- (void)removeSingleBlankTabFromInactiveTabGroup:(id)a0;
- (void)_didReceiveMemoryWarning:(id)a0;
- (BOOL)switchToTabWithUUID:(id)a0 inTabGroupWithUUID:(id)a1;
- (void)openFocusProfileWithCompletionHandler:(id /* block */)a0;
- (void)closeTabDocument:(id)a0 animated:(BOOL)a1;
- (void)hideTabDocuments:(id)a0;
- (id)tabDocumentForURL:(id)a0;
- (void)registerUndoWithType:(long long)a0 actions:(id /* block */)a1;
- (void)_cancelVeryRecentlyClosedTabCountInvalidationTimer;
- (id)originatingTabForTab:(id)a0;
- (void)_cloudTabsDidUpdate:(id)a0;
- (void)tabGroupManagerDidFinishSetup:(id)a0;
- (id)imageForProfile:(id)a0;
- (BOOL)isTabUUIDActive:(id)a0;
- (double)tabOverviewAdditionalItemHeaderHeight:(id)a0;
- (void)unhideTabDocuments:(id)a0;
- (void)didEndTrackingSession:(id)a0;
- (void)pinnedTabsManager:(id)a0 didUpdatePinnedTabs:(id)a1 inProfileWithIdentifier:(id)a2;
- (void)textFieldDidBeginEditing:(id)a0;
- (void)_updateUserActivityTimerFired;
- (void)moveTabDocumentToEndOfPinnedTabs:(id)a0;
- (void)saveTabDocumentUserActivitySoon:(id)a0;
- (void)sortTabsInInactiveTabGroup:(id)a0 withSortMode:(long long)a1;
- (id)tabAtIndex:(unsigned long long)a0;
- (void)_newTabFromTabViewButton;
- (void)willEndDragSession:(id)a0;
- (id)perTabGroupBookmarkListForFolderID:(int)a0 filteredUsingString:(id)a1;
- (id)replacePlaceholderTabDocument:(id)a0 withTabDocuments:(id)a1 transitionToDragStateWithBlock:(id /* block */)a2;
- (BOOL)tabCollectionView:(id)a0 canCloseItem:(id)a1;
- (id)topScopedBookmarkListForActiveTabGroup;
- (unsigned long long)indexForTab:(id)a0;
- (void)_dismissTabView;
- (void)updateHibernatedTabDocumentsSavingState;
- (void)updateUsageTrackingInformationIfNecessary;
- (id)tabGroupsMenuElementsWithOptions:(unsigned long long)a0 newTabGroupName:(id)a1 hostTitle:(id)a2 descendantCount:(long long)a3 movingSelectedTabs:(id)a4 actionHandler:(id /* block */)a5;
- (BOOL)canAddNewTabForPrivateBrowsing:(BOOL)a0;
- (void)replaceTabDocument:(id)a0 withTabDocument:(id)a1;
- (void)restoreEducationDeviceTabs;
- (BOOL)tabBar:(id)a0 canMoveItem:(id)a1;
- (void)pinnedTabsManager:(id)a0 didUpdatePinnedTabs:(id)a1 isPrivate:(BOOL)a2;
- (void)closeTabsAutomaticallyIfNecessary;
- (void)tabOverview:(id)a0 willInteractivelyCloseItem:(id)a1;
- (id)blankTabDocumentToReuse;
- (void)presentAlertToCreateTabGroupFromTabs:(id)a0 withTitle:(id)a1 message:(id)a2 suggestedName:(id)a3 okActionTitle:(id)a4 completionHandler:(id /* block */)a5;
- (void)tabCollectionView:(id)a0 item:(id)a1 didProduceNavigationIntent:(id)a2;
- (void)didGainOwnershipOfTabDocument:(id)a0;
- (void)openNewTabForTabGroupSwitcher:(id)a0;
- (void)removeSnapshotForDocument:(id)a0;
- (void)tabCollectionView:(id)a0 closeItem:(id)a1;
- (void)sortTabsWithMode:(long long)a0;
- (void)removeSingleBlankTabFromActiveTabGroup;
- (void)closeTabs:(id)a0 inInactiveTabGroup:(id)a1;
- (id)browserControllerContainingLocalTabGroupUUID:(id)a0;
- (void)closeTabDocuments:(id)a0 animated:(BOOL)a1;
- (void)setActiveProfileIdentifier:(id)a0;
- (void)textFieldDidEndEditing:(id)a0;
- (id)tabGroupShareSheetForCurrentTabGroup;
- (void)tabSnapshotCache:(id)a0 requestSnapshotWithIdentifier:(id)a1 completion:(id /* block */)a2;
- (void)openNewTabWithOptions:(long long)a0 libraryType:(id)a1 completionHandler:(id /* block */)a2;
- (void)moveTabDocument:(id)a0 overTabDocument:(id)a1;
- (void)tabCollectionViewDidPresent:(id)a0;
- (id)swipeActionsConfigurationForTabGroup:(id)a0 forPickerSheet:(BOOL)a1;
- (void)tabBar:(id)a0 toggleMediaStateMutedForItem:(id)a1;
- (void)tabDocumentDidUpdateUUID:(id)a0 previousUUID:(id)a1;
- (void)registerTabGroupManagerObserver:(id)a0;
- (void)updateFocusedTabGroupEnteringForeground;
- (void)tabOverviewWillUpdateInteractivePresentation:(id)a0;
- (void)updateBackgroundImageForProfile:(id)a0;
- (void)updateFocusProfileEnteringForeground;
- (void)enumerateTabCollectionViewsWithBlock:(id /* block */)a0;
- (void)_validateSavedState:(id)a0;
- (void)createNewTabGroup;
- (void)removeDocumentObserver:(id)a0;
- (id)swipeActionsConfigurationForTab:(id)a0 inTabGroup:(id)a1;
- (id)syntheticBookmarkFolderForTabGroup:(id)a0 withAttribution:(BOOL)a1;
- (void)tabCollectionViewDidUpdateItemVisibilityOrder:(id)a0;
- (void)tabViewDidUpdateItemVisibilityOrder;
- (void)didSelectProfileWithIdentifier:(id)a0;
- (id)insertInitialBlankTabDocumentWithPrivateBrowsingIfNeeded:(BOOL)a0;
- (void)closeTabDocuments:(id)a0 animated:(BOOL)a1 allowAddingToRecentlyClosedTabs:(BOOL)a2 showAutoCloseTabsAlert:(BOOL)a3;
- (id)tabGroupsMenuForTabGroupButton:(BOOL)a0;
- (id)representativeURLForTabGroupConfirmationAlert:(id)a0;
- (BOOL)moveTabWithUUID:(id)a0 fromForeignLocalGroupWithUUIDIntoActiveGroup:(id)a1;
- (void)presentTabGroupSheetForTabGroupSwitcher:(id)a0;
- (BOOL)tabCollectionView:(id)a0 validSnapshotExistsForItem:(id)a1;
- (void)openInitialBlankTabDocumentIfNeeded;
- (BOOL)tabCollectionViewCanDismiss:(id)a0;
- (void)tabOverview:(id)a0 closeItems:(id)a1;
- (void)tabSnapshotCache:(id)a0 didCacheSnapshotWithIdentifier:(id)a1;
- (void)insertTabDocumentFromTabStateData:(id)a0;
- (id)undoManagerForTabCollectionView:(id)a0;
- (id)cachedContentImageForTabDocument:(id)a0;
- (BOOL)isTabGroupUUIDExpanded:(id)a0;
- (void)insertNewBlankTabDocumentAnimated:(BOOL)a0;
- (void)_undoCloseTabs:(id)a0;
- (BOOL)trySwitchingToPinnedTabOnNavigationToURL:(id)a0;
- (unsigned long long)capacityForTabSnapshotCache:(id)a0;
- (void)dismissOpenTabGroupAlertIfNeeded;
- (id)dragItemForTab:(id)a0 inTabGroup:(id)a1;
- (id)existingPersistedTitleForTabDocument:(id)a0;
- (void)dismissTabGroupSwitcher:(id)a0;
- (id)_currentTabs;
- (void)tabBarManager:(id)a0 didCreateTabBar:(id)a1;
- (BOOL)tabSnapshotCache:(id)a0 shouldRequestSavedSnapshotWithIdentifier:(id)a1;
- (void)updateTabWithTabDocument:(id)a0 notify:(BOOL)a1 persist:(BOOL)a2;
- (void)tabCollectionView:(id)a0 closeCloudTab:(id)a1 onDevice:(id)a2;
- (void)insertTabDocuments:(id)a0 beforeTabDocument:(id)a1 inBackground:(BOOL)a2 animated:(BOOL)a3;
- (void)closeTabGroup:(id)a0;
- (id)restoreRecentlyClosedTabDocumentWithTabStateData:(id)a0;
- (void)performBatchUpdatesWithBlock:(id /* block */)a0;
- (void).cxx_destruct;
- (void)tabGroupManager:(id)a0 didUpdateTabsInTabGroupWithUUID:(id)a1;
- (void)togglePinningTab:(id)a0 inInactiveTabGroup:(id)a1;
- (void)invalidateSnapshotForTabDocument:(id)a0;
- (void)updateActiveTab;
- (void)updateSnapshotCacheAndSnapshotActiveTab;
- (void)flushPendingSnapshotsWithCompletion:(id /* block */)a0;
- (void)requestSnapshotForTabDocument:(id)a0 completion:(id /* block */)a1;
- (void)setActiveTabDocument:(id)a0 animated:(BOOL)a1 deferActivation:(BOOL)a2;
- (void)updateTabCount;
- (void)didFetchRecentlyAcceptedSharedTabGroupWithUUID:(id)a0 acceptedShareDate:(id)a1;
- (void)moveTabGroup:(id)a0 toProfile:(id)a1;
- (id)contextMenuConfigurationForTab:(id)a0 inTabGroup:(id)a1;
- (void)tabSnapshotCacheDidFinishUpdating:(id)a0;
- (void)toggleTabGroupUUIDExpanded:(id)a0;
- (id)snapshotsToPersistOnDiskForTabSnapshotCache:(id)a0;
- (void)_redoCloseTabsWithUUIDs:(id)a0;
- (void)closeAllOpenTabsAnimated:(BOOL)a0 temporarily:(BOOL)a1;
- (void)selectLocalTabGroup;
- (id)imageForTabGroup:(id)a0;
- (void)privateBrowsingAvailabilityDidChange;
- (void)renameTabGroup:(id)a0;
- (BOOL)tabSnapshotCacheShouldDeferNextSnapshotRequest:(id)a0;
- (void)displayAlreadyAcceptedSharedTabGroupWithUUID:(id)a0;
- (void)selectPrivateTabGroup;
- (void)openBookmark:(id)a0 inTabGroup:(id)a1;
- (void)addSnapshotCacheObserver:(id)a0;
- (void)updateTabViewsAnimatingTabBar:(BOOL)a0;
- (void)insertNewTabDocument:(id)a0 forcingOrderAfterTabDocument:(id)a1 inBackground:(BOOL)a2 animated:(BOOL)a3;
- (void)openFocusedTabGroupWithCompletionHandler:(id /* block */)a0;
- (void)selectNextTabGroup;
- (void)tabGroupManager:(id)a0 didPerformBlockUpdatesForTabGroupWithUUID:(id)a1;
- (void)tabGroupNamingTextDidChange:(id)a0;
- (void)didUpdateTabDocuments;
- (id)itemsToKeepVisibleForTabOverview:(id)a0;
- (void)updateSnapshotsForTabHoverPreviewIfNeeded;
- (void)deactivateAllUsageTrackingInformationIfNecessary;
- (void)removeSnapshotCacheObserver:(id)a0;
- (BOOL)tabGroupSwitcherCanShowProfileInToolbar:(id)a0;
- (id)menuForTabGroup:(id)a0 variant:(long long)a1;
- (void)_saveStateFromTimer:(id)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })effectiveSafeAreaInsetsForTabCollectionView:(id)a0;
- (id)contextMenuConfigurationForTabGroup:(id)a0 variant:(long long)a1;
- (void)openTabDocumentForLibraryType:(id)a0;
- (void)closeOtherTabs;
- (id)tabGroupsForProfileWithIdentifier:(id)a0;
- (void)tabSnapshotCache:(id)a0 didEvictSnapshotWithIdentifier:(id)a1;
- (void)tabGroupManager:(id)a0 didRemoveTabGroupWithUUID:(id)a1;
- (void)insertNewTabDocumentWithDefaultOrdering:(id)a0 inBackground:(BOOL)a1 animated:(BOOL)a2;
- (void)insertTabDocument:(id)a0 afterTabDocument:(id)a1 inBackground:(BOOL)a2 animated:(BOOL)a3;
- (void)openURL:(id)a0 inTabGroup:(id)a1;
- (void)tabGroupManager:(id)a0 willReplaceTabWithUUID:(id)a1 withTabWithUUID:(id)a2;
- (id)tabCollectionView:(id)a0 borrowContentViewForItem:(id)a1 withTopBackdropView:(id *)a2 ofHeight:(double)a3;
- (void)switchOutOfSyncedTabGroup;
- (void)tabCollectionViewEndIgnoringUserInteraction:(id)a0 reason:(id)a1;
- (void)evictTabDocument:(id)a0;
- (void)registerUndoWithName:(id)a0 actions:(id /* block */)a1;
- (id)tabDocumentWithIDForWebExtensions:(double)a0;
- (void)tabHoverPreviewControllerDismissPreview:(id)a0;
- (void)openNewTabWithOptions:(long long)a0 completionHandler:(id /* block */)a1;
- (id)addNewTabGroupWithTitle:(id)a0 fromTabs:(id)a1;
- (void)updateSelectedTabGroupName;
- (void)closeAllTabsForTabGroupSwitcher:(id)a0;
- (void)setPrivateBrowsingMode:(long long)a0 animated:(BOOL)a1;
- (void)tabCollectionView:(id)a0 relinquishBorrowedContentView:(id)a1 forItem:(id)a2;
- (void)tabCollectionViewBeginIgnoringUserInteraction:(id)a0 reason:(id)a1;
- (void)tabHoverPreviewControllerNeedsSnapshotUpdate:(id)a0;
- (id)insertPlaceholderTabDocumentAfterDocument:(id)a0;
- (void)tabGroupManagerDidUpdateTabGroups:(id)a0;
- (void)makeActiveTabDocumentActive;
- (void)willLoseOwnershipOfTabDocument:(id)a0;
- (void)closeTabDocuments:(id)a0;
- (BOOL)selectFirstUnpinnedTab;
- (id)syntheticBookmarkFoldersIncludingActiveTabGroup:(BOOL)a0;
- (void)tabCollectionView:(id)a0 didMoveItem:(id)a1 overItem:(id)a2;
- (id)iconForTabUUID:(id)a0;
- (double)tabCollectionViewItemHeaderHeight:(id)a0;
- (void)updateEducationTabsLastSyncDate;
- (void)updateLocalTabGroupTitle;
- (void)willBeginDragSession:(id)a0;
- (void)setActiveTabDocument:(id)a0 animated:(BOOL)a1;
- (void)createTabGroupFromExistingTabs:(BOOL)a0 completionHandler:(id /* block */)a1;

@end
