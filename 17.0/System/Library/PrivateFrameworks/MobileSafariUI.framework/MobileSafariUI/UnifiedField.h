@class UIView, NSString, NSArray, UITextInputPasswordRules, UITextCursorAssertionController, UITextRange, NSDictionary, TopHitCompletionPromotionRecognizer, TopHitCompletionView, CKContextCompleter, UITextPosition, UIColor;
@protocol UITextInputDelegate, UnifiedFieldDelegate, CompletionItem, UITextInputTokenizer, UITextCursorAssertion;

@interface UnifiedField : UITextField <UIGestureRecognizerDelegate, PKUITextInputPencilTextInput> {
    NSString *_pendingTopHitNavigationText;
    id<CompletionItem> _topHit;
    TopHitCompletionView *_topHitCompletionView;
    TopHitCompletionPromotionRecognizer *_topHitCompletionPromotionRecognizer;
    NSString *_userTypedText;
    UITextCursorAssertionController *_textCursorAssertionController;
    id<UITextCursorAssertion> _textCursorHiddenAssertion;
}

@property (weak, nonatomic) id<UnifiedFieldDelegate> delegate;
@property (readonly, nonatomic) double placeholderHorizontalInset;
@property (copy, nonatomic) UIColor *placeholderColor;
@property (retain, nonatomic) id<CompletionItem> reflectedItem;
@property (readonly, nonatomic, getter=isPastingText) BOOL pastingText;
@property (readonly, nonatomic, getter=isUsingPencilInput) BOOL usingPencilInput;
@property (nonatomic) BOOL performingExternalSearch;
@property (readonly, nonatomic) NSArray *querySuggestions;
@property (readonly, nonatomic) BOOL lastInputWasQuerySuggestion;
@property (readonly, nonatomic) BOOL hasSelectedQuerySuggestion;
@property (retain, nonatomic) CKContextCompleter *contextCompleter;
@property (nonatomic) long long voiceSearchState;
@property (nonatomic) BOOL lastEditWasADeletion;
@property (nonatomic) BOOL isResigningFirstResponder;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy) UITextRange *selectedTextRange;
@property (readonly, nonatomic) UITextRange *markedTextRange;
@property (copy, nonatomic) NSDictionary *markedTextStyle;
@property (readonly, nonatomic) UITextPosition *beginningOfDocument;
@property (readonly, nonatomic) UITextPosition *endOfDocument;
@property (weak, nonatomic) id<UITextInputDelegate> inputDelegate;
@property (readonly, nonatomic) id<UITextInputTokenizer> tokenizer;
@property (readonly, nonatomic) UIView *textInputView;
@property (nonatomic) long long selectionAffinity;
@property (readonly, nonatomic) id insertDictationResultPlaceholder;
@property (readonly, nonatomic) BOOL hasText;
@property (nonatomic) long long autocapitalizationType;
@property (nonatomic) long long autocorrectionType;
@property (nonatomic) long long spellCheckingType;
@property (nonatomic) long long smartQuotesType;
@property (nonatomic) long long smartDashesType;
@property (nonatomic) long long smartInsertDeleteType;
@property (nonatomic) long long inlinePredictionType;
@property (nonatomic) long long keyboardType;
@property (nonatomic) long long keyboardAppearance;
@property (nonatomic) long long returnKeyType;
@property (nonatomic) BOOL enablesReturnKeyAutomatically;
@property (nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property (copy, nonatomic) NSString *textContentType;
@property (copy, nonatomic) UITextInputPasswordRules *passwordRules;

- (void)pasteAndSearch:(id)a0;
- (void)cut:(id)a0;
- (void)selectAll:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })placeholderRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)gestureRecognizer:(id)a0 shouldReceiveTouch:(id)a1;
- (void)setAttributedText:(id)a0;
- (void)insertTextSuggestion:(id)a0;
- (BOOL)resignFirstResponder;
- (void)copy:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rightViewRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)buildMenuWithBuilder:(id)a0;
- (id)keyCommands;
- (void)setText:(id)a0;
- (void).cxx_destruct;
- (BOOL)keyboardInput:(id)a0 shouldInsertText:(id)a1 isMarkedText:(BOOL)a2;
- (BOOL)_hasContent;
- (BOOL)becomeFirstResponder;
- (void)layoutSubviews;
- (BOOL)keyboardInputShouldDelete:(id)a0;
- (void)pasteAndGo:(id)a0;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (BOOL)canPerformAction:(SEL)a0 withSender:(id)a1;
- (BOOL)supportsImagePaste;
- (void)paste:(id)a0;
- (void)dictationRecognitionFailed;
- (void)dictationRecordingDidEnd;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })editRect;
- (void)willBeginPencilTextInputEditing;
- (void)_updateReturnKey;
- (BOOL)_waitingForTopHitForCurrentText;
- (id)_allCombinationsOfModifierKeys;
- (BOOL)_allowsReflectedTopHit;
- (void)_cancelPendingTopHitNavigation;
- (void)_endEditingWithCurrentText;
- (void)_layoutTopHitCompletionView;
- (void)_promoteCompletionToSelection;
- (void)_promoteCompletionToSelectionSelectingSuffix:(BOOL)a0 andMoveForward:(BOOL)a1;
- (id)_reflectedItemCompletionString;
- (void)_removeTopHitCompletionView;
- (void)_restoreUserTypedText;
- (void)_setReflectedItem:(id)a0 updateUserTypedPrefix:(BOOL)a1;
- (void)_setTopHit:(id)a0;
- (void)_textDidChangeFromTyping;
- (id)_textForPasteboard;
- (id)_textWithoutWhitespace;
- (id)_topHitForCurrentText;
- (unsigned long long)_unifiedFieldInputType;
- (BOOL)_updateQuerySuggestionsMatchingText:(id)a0;
- (id)_voiceSearchInputModeForFirstResponder:(BOOL)a0;
- (void)clearUserTypedText;
- (void)completeDictation;
- (void)dictationDidFinish:(id)a0;
- (void)endExternalSearch;
- (void)focusAndInsertCursorAtEnd;
- (void)focusNextKeyViewKeyPressed;
- (void)focusPreviousKeyViewKeyPressed;
- (void)moveLeftKeyPressed;
- (void)moveRightKeyPressed;
- (void)nextCompletionSelectionByRowKeyPressed;
- (void)nextCompletionSelectionBySectionKeyPressed;
- (void)previousCompletionSelectionByRowKeyPressed;
- (void)previousCompletionSelectionBySectionKeyPressed;
- (void)selectCompletionKeyPressed;
- (void)topHitDidBecomeReady;
- (void)updateQuerySuggestionsFromUserTypedText;

@end
