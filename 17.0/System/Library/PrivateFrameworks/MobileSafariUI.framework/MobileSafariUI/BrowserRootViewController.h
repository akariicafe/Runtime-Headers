@class SFThemeColorEffectView, UnifiedBar, UITapGestureRecognizer, NavigationBar, UIScrollView, UIHoverGestureRecognizer, UIBarButtonItem, SFLockedPrivateBrowsingView, CapsuleNavigationBarViewController, SidebarContentDimmingView, ViewWithCustomNextResponder, UIApplication, _SFBrowserConfiguration, BrowserController, UIPanGestureRecognizer, TabHoverPreview, ScrollToTopView, SFTipsCoordinator, UIButton, SFScreenTimeOverlayViewController, UIViewController, BarContainerView, SidebarViewController, UIRefreshControl, SFToastViewController, NSNumber, TabBarDropExpansionView, UINavigationController, BrowserToolbar, SFOrderedContainerView, SFWebpageStatusBarView, UIView, BookmarksBarView, NSArray, CatalogViewController, WBSDiagnosticStateCollector, SFUnifiedBarTheme, NSString, UnifiedField, TabBar, SFBannerTheme, SFTouchDownGestureRecognizer, TabBarManager, _SFDynamicBarAnimator, _SFWebView;
@protocol SFBarAnimating, _SFNavigationBarCommon, _SFBarCommon, SidebarUIProxyDelegate, BrowserRootViewControllerDelegate, TabThumbnailCollectionView;

@interface BrowserRootViewController : UIViewController <UISheetPresentationControllerDelegate, SFTipsObserver, CapsuleNavigationBarViewControllerDelegate, SFCapsuleCollectionViewGestureObserving, SFOrderedContainerViewDelegate, SidebarContentDimmingViewDelegate, TabBarDropExpansionViewDelegate, TabOverviewThemeProviding, UIGestureRecognizerDelegate, UIViewControllerStatusBarPartStyleProvider, SFScreenTimeOverlayHostingViewController, SidebarUIProxy, TabDocumentViewGeometryProviding, BannerControllerDelegate> {
    UIApplication *_app;
    double _bottomBarKeyboardOffset;
    BOOL _canBecomeFirstResponder;
    ViewWithCustomNextResponder *_contentContainerView;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _contentInsetForContentFrame;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _maximumObscuredInsets;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _obscuredInsets;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _horizontalScrollIndicatorBaseInsets;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _verticalScrollIndicatorBaseInsets;
    unsigned long long _sizeTransitionCount;
    BOOL _statusBarStyleUpdateQueued;
    TabBarDropExpansionView *_tabBarDropExpansionView;
    BarContainerView *_topAuxiliaryBarsContainerView;
    ScrollToTopView *_scrollToTopView;
    UIViewController *_contentContainerViewController;
    UIViewController *_documentAndTopBarsContainerViewController;
    WBSDiagnosticStateCollector *_stateCollector;
    SFThemeColorEffectView *_statusBarBackdrop;
    SFTouchDownGestureRecognizer *_touchDownGestureRecognizer;
    SFThemeColorEffectView *_topBackdrop;
    SFUnifiedBarTheme *_topBackdropTheme;
    BOOL _topBackdropUsesPlainTheme;
    UIView *_topSeparator;
    BOOL _updatingTopBarStyles;
    BOOL _willDismissCatalogViewController;
    UITapGestureRecognizer *_showBarsFromBottomBarRecognizer;
    UIPanGestureRecognizer *_hideNavigationBarGestureRecognizer;
    BOOL _isTransitioningTabViews;
    struct CGSize { double width; double height; } _sizeForToolbarPlacement;
    long long _toolbarPlacement;
    unsigned long long _sidebarControllerActiveAnimationCount;
    UIButton *_sidebarTrailingButton;
    UIView *_sidebarButtonEmbeddedInUnifiedBar;
    UIHoverGestureRecognizer *_statusBarHoverGestureRecognizer;
    SFToastViewController *_currentlyPresentedToastViewController;
    UINavigationController *_privateBrowsingExplanationSheet;
    UIViewController *_webSearchTipViewController;
}

@property (retain, nonatomic) _SFBrowserConfiguration *configuration;
@property (weak, nonatomic) id<BrowserRootViewControllerDelegate> delegate;
@property (readonly, nonatomic) ViewWithCustomNextResponder *contentContainerView;
@property (readonly, nonatomic) SFOrderedContainerView *documentAndTopBarsContainerView;
@property (readonly, nonatomic) UIView *tabBarClipperView;
@property (weak, nonatomic) UIView *clipperView;
@property (nonatomic) BOOL barStateAllowsHidingHomeIndicator;
@property (retain, nonatomic) BookmarksBarView *bookmarksBar;
@property (readonly, nonatomic) BrowserToolbar *bottomToolbar;
@property (readonly, nonatomic) _SFDynamicBarAnimator *dynamicBarAnimator;
@property (readonly, nonatomic) id<SFBarAnimating> currentBarAnimator;
@property (readonly, nonatomic) NavigationBar *navigationBar;
@property (readonly, nonatomic) UIView<_SFBarCommon> *primaryBar;
@property (readonly, nonatomic) UIView<_SFNavigationBarCommon> *primaryNavigationBar;
@property (readonly, nonatomic) UIView<_SFNavigationBarCommon> *topBar;
@property (readonly, nonatomic) NSArray *bars;
@property (nonatomic, getter=isShowingTabBar) BOOL showingTabBar;
@property (retain, nonatomic) TabBar *tabBar;
@property (readonly, nonatomic) TabHoverPreview *tabHoverPreview;
@property (readonly, nonatomic) UnifiedBar *unifiedBar;
@property (readonly, nonatomic) BOOL usingUnifiedBar;
@property (readonly, nonatomic) TabBarManager *tabBarManager;
@property (readonly, nonatomic) SFThemeColorEffectView *topBackdrop;
@property (readonly, nonatomic) CapsuleNavigationBarViewController *capsuleViewController;
@property (readonly, nonatomic) BOOL usingLoweredBar;
@property (readonly, nonatomic) NSNumber *capsuleCollectionViewLayout;
@property (readonly, nonatomic, getter=isUsingBottomCapsule) BOOL usingBottomCapsule;
@property (readonly, nonatomic) BOOL insetsContentContainerFromStatusBar;
@property (readonly, nonatomic) SFBannerTheme *bannerTheme;
@property (readonly, nonatomic) UIRefreshControl *refreshControl;
@property (nonatomic) BOOL pullToRefreshIsEnabled;
@property (readonly, nonatomic) UIBarButtonItem *sidebarButtonItem;
@property (readonly, nonatomic) UIBarButtonItem *sidebarTrailingButtonItem;
@property (readonly, nonatomic) UIButton *floatingSidebarButton;
@property (readonly, nonatomic) UIButton *sidebarButtonEmbeddedInSidebar;
@property (readonly, nonatomic) SidebarContentDimmingView *sidebarContentDimmingView;
@property (readonly, nonatomic) long long toolbarPlacement;
@property (readonly, nonatomic) double navigationBarDesiredHeight;
@property (readonly, nonatomic) double navigationBarSquishedHeight;
@property (readonly, nonatomic) double maximumHeightObscuredByBottomToolbar;
@property (readonly, nonatomic) double offsetForDynamicBarAnimator;
@property (nonatomic) BOOL keepBarsMinimized;
@property (nonatomic, getter=isTogglingTabBar) BOOL togglingTabBar;
@property (readonly, nonatomic, getter=isInteractivelyMinimizingBars) BOOL interactivelyMinimizingBars;
@property (nonatomic) BOOL usesFaintTopSeparator;
@property (readonly, nonatomic) double horizontalMarginForCatalogViewInPopover;
@property (readonly, nonatomic) BOOL isPerformingSizeTransition;
@property (retain, nonatomic) _SFWebView *webView;
@property (readonly, nonatomic) UIScrollView *scrollView;
@property (nonatomic) BOOL documentSafeAreaInsetsFrozen;
@property (nonatomic) BOOL needsScrollToTopView;
@property (readonly, nonatomic) UIViewController *hostViewControllerForOverlay;
@property (readonly, nonatomic) SFLockedPrivateBrowsingView *lockedPrivateBrowsingView;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } contentFrameInPageView;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } webViewMinimumLayoutSize;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } webViewMaximumUnobscuredLayoutSize;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } webViewEffectiveSafeAreaInsets;
@property (readonly, weak, nonatomic) BrowserController *browserController;
@property (retain, nonatomic) CatalogViewController *catalogViewController;
@property (readonly, nonatomic) UnifiedField *unifiedField;
@property (weak, nonatomic) id<TabThumbnailCollectionView> tabThumbnailCollectionView;
@property (readonly, nonatomic) SFWebpageStatusBarView *statusBarView;
@property (readonly, nonatomic, getter=isShowingLockedPrivateBrowsingView) BOOL showingLockedPrivateBrowsingView;
@property (readonly, nonatomic, getter=isShowingPrivateBrowsingExplanationSheet) BOOL showingPrivateBrowsingExplanationSheet;
@property (copy, nonatomic) id /* block */ intentInteractionCompletion;
@property (readonly, nonatomic) SFTipsCoordinator *tipsCoordinator;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) long long preferredLeadingStatusBarStyle;
@property (readonly, nonatomic) long long preferredTrailingStatusBarStyle;
@property (readonly, nonatomic) long long preferredCenterStatusBarStyle;
@property (retain, nonatomic) SFScreenTimeOverlayViewController *screenTimeOverlayViewController;
@property (weak, nonatomic) id<SidebarUIProxyDelegate> sidebarUIProxyDelegate;
@property (readonly, nonatomic) long long bookmarksPresentationStyle;
@property (readonly, nonatomic, getter=isShowingSidebar) BOOL showingSidebar;
@property (readonly, nonatomic) SidebarViewController *sidebarViewController;
@property (readonly, nonatomic) long long sidebarStyle;
@property (readonly, nonatomic) UIBarButtonItem *leadingSidebarButtonItem;
@property (readonly, nonatomic) UIBarButtonItem *trailingSidebarButtonItem;

+ (BOOL)automaticallyNotifiesObserversForKey:(id)a0;

- (void)dynamicBarAnimatorOutputsDidChange:(id)a0;
- (void)tabCollectionViewDidDismiss:(id)a0;
- (void)updateTabViewPinchRecognizer;
- (void)updateAccessibilityIdentifier;
- (void)tabCollectionViewWillPresent:(id)a0;
- (unsigned long long)preferredScreenEdgesDeferringSystemGestures;
- (void)_keyboardWillChangeFrame:(id)a0;
- (void)removeToastViewController:(id)a0;
- (void)didTransitionTabView;
- (void)_pushTurnOnLockedPrivateBrowsingPromptIfNeeded;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_baseInsetsForVerticalScrollIndicator;
- (void)_updateBottomBarHeightAboveKeyboard;
- (void)willTransitionTabView;
- (void)_layOutScrollToTopView;
- (id)_multitaskingDragExclusionRects;
- (BOOL)capsuleNavigationBarViewControllerAllowsMinimizationGesture:(id)a0;
- (void)_setUpTabGroupButton;
- (id)managedTopBanners;
- (void)tabCollectionViewWillDismiss:(id)a0;
- (void)tabCollectionViewDidCancelDismissal:(id)a0;
- (void)_setTopBackdropUsesPlainTheme:(BOOL)a0;
- (void)capsuleNavigationBarViewController:(id)a0 didCreateNavigationBar:(id)a1;
- (BOOL)_isTrackingDropSession;
- (void)_dismissWebSearchTipPopoverIfNeeded;
- (id)initWithBrowserController:(id)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })minimumObscuredInsetsForRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inCoordinateSpace:(id)a1;
- (id)_makeWhatsNewInPrivateBrowsingViewController;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentContainerViewFrameForBrowserSize:(struct CGSize { double x0; double x1; })a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })obscuredScrollViewInsetsConsideringTargetState:(BOOL)a0 insetsDueToSafeArea:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; } *)a1;
- (double)keyboardInsetInCoordinateSpace:(id)a0;
- (void)_boundingPathMayHaveChangedForView:(id)a0 relativeToBoundsOriginOnly:(BOOL)a1;
- (void)dealloc;
- (void)_layOutFloatingSidebarButtonForSidebarShowing:(BOOL)a0;
- (void)_receivedTouchDown:(id)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_webViewSafeAreaInsets;
- (void)_setTopBackdropTheme:(id)a0 animated:(BOOL)a1;
- (void)updateUsesLockdownStatusBar;
- (BOOL)_shouldShowSidebarContentDimmingView;
- (void)_layOutWebpageStatusBarView;
- (BOOL)_usesWebpageStatusBar;
- (void)capsuleNavigationBarViewControllerDidChangeCapsuleFocus:(id)a0 options:(long long)a1;
- (void)_linkTabOverviewToCapsuleView;
- (void)_refreshControlFired:(id)a0;
- (void)traitCollectionDidChange:(id)a0;
- (void)viewWillLayoutSubviews;
- (BOOL)gestureRecognizer:(id)a0 shouldReceiveTouch:(id)a1;
- (id)_viewForConvertingToCoordinateSpace:(id)a0;
- (void)viewDidLayoutSubviews;
- (void)didToggleTabBar;
- (double)_bottomBarOffset;
- (void)willToggleTabBar;
- (void)updateViewsAfterContentContainerViewBoundsChange;
- (struct CGSize { double x0; double x1; })maximumUnobscuredWebViewLayoutSizeForTabDocumentView:(id)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_avoidanceInsets;
- (void)_updateTopBarAllowingRemoval:(BOOL)a0;
- (void)_applyStatusBarBackdropTheme;
- (void)viewDidLoad;
- (long long)preferredStatusBarStyle;
- (void)updateThemeColorIfNeededAnimated:(BOOL)a0;
- (BOOL)_interfaceFillsScreen;
- (id)preferredFocusEnvironments;
- (void)presentationControllerDidDismiss:(id)a0;
- (void)bannerController:(id)a0 didSetRemotelyEnabledExtensionBanner:(id)a1 previousBanner:(id)a2 animated:(BOOL)a3;
- (void)_transitionFromBanner:(id)a0 toBanner:(id)a1 animated:(BOOL)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForContentContainerView;
- (void)tabBarDropExpansionView:(id)a0 didBeginTrackingDropSession:(id)a1;
- (void)dismissViewControllerAnimated:(BOOL)a0 completion:(id /* block */)a1;
- (void)tabDocumentViewDidUpdateDistanceScrolled:(id)a0;
- (void)capsuleNavigationController:(id)a0 obscuredInsetsDidChangeWithCoordinator:(id)a1;
- (id)tabOverview:(id)a0 topBarThemeForItem:(id)a1;
- (BOOL)gestureRecognizerShouldBegin:(id)a0;
- (void)_layOutTopBackdrop;
- (id)snapshotContentProviderForTab:(id)a0;
- (void)updateOrderedSubviewsForOrderedContainerView:(id)a0;
- (BOOL)_showsTopBackdrop;
- (BOOL)_navigationBarIsExpandedOnTop;
- (void)_showPrivateBrowsingExplanationSheetWithViewController:(id)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })obscuredScrollViewInsetsForTabDocumentView:(id)a0 unobscuredSafeAreaInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; } *)a1;
- (void)showLockedPrivateBrowsingView;
- (void)_updateAllowsHidingHomeIndicatorMinimized:(BOOL)a0;
- (void)updateTabHoverPreview;
- (void)loadView;
- (void)_updateTopBarStylesAnimated:(BOOL)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 fromViewInDocumentContainer:(id)a1 toCoordinateSpace:(id)a2;
- (void)_layOutSidebarContentDimmingView;
- (void)layOutTopBars;
- (id)childViewControllerForStatusBarStyle;
- (void)showWhatsNewInPrivateBrowsingSheet;
- (void)bannerController:(id)a0 didSetAppBanner:(id)a1 previousBanner:(id)a2 animated:(BOOL)a3;
- (void)presentViewController:(id)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_webViewMinimumEffectiveSafeAreaInsets;
- (void)_updateThemeForBanner:(id)a0 animated:(BOOL)a1;
- (void)_setUpWebpageStatusBarIfNeeded;
- (void)_updateBannerTheme;
- (void)setNeedsPreferredStatusBarUpdateAfterCommitAnimated:(BOOL)a0;
- (id)createToolbarForCapsuleNavigationBarViewController:(id)a0;
- (void)layOutCatalogView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForCatalogView;
- (BOOL)capsuleNavigationBarViewController:(id)a0 shouldUnminimizeOnScrollForScrollView:(id)a1;
- (struct CGSize { double x0; double x1; })minimumWebViewLayoutSizeForTabDocumentView:(id)a0;
- (BOOL)_shouldHideUnifiedBar;
- (void)bannerController:(id)a0 didSetWebExtensionBanner:(id)a1 previousBanner:(id)a2 animated:(BOOL)a3;
- (void)updateUnifiedBarChromelessScrollDistance;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_loweredBarMaximumObscuredInsets;
- (void)updateViewForTabDocument:(id)a0;
- (BOOL)prefersHomeIndicatorAutoHidden;
- (void)updateUsesWebpageStatusBar;
- (void)bannerController:(id)a0 didSetTabGroupBanner:(id)a1 previousBanner:(id)a2 animated:(BOOL)a3;
- (void)webSearchTipDidBecomeUnavailable;
- (void)_sidebarTrailingButtonWasTapped;
- (void)capsuleCollectionView:(id)a0 selectionGestureDidChangeFromAxis:(unsigned long long)a1;
- (void)_dismissPrivateBrowsingExplanationSheet;
- (id)_plainTopBackdropGroupName;
- (void)capsuleNavigationBarViewController:(id)a0 selectedItemWillChangeToState:(long long)a1 options:(long long)a2 coordinator:(id)a3;
- (void)_setShowingFloatingSidebarButton:(BOOL)a0;
- (void)updateUnifiedBarVisibility;
- (id)_makeTurnOnLockedPrivateBrowsingViewController;
- (struct SFScrollIndicatorInsets { struct UIEdgeInsets { double x0; double x1; double x2; double x3; } x0; struct UIEdgeInsets { double x0; double x1; double x2; double x3; } x1; })scrollIndicatorInsetsForTabDocumentView:(id)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_loweredBarObscuredInsetsIgnoringKeyboard;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_loweredBarMinimumObscuredInsets;
- (void)_layOutTopBanners;
- (void)didReceiveMemoryWarning;
- (void)_updateRefreshControlStyle;
- (void)_updateRefreshControl;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })navigationBarFrameInCoordinateSpace:(id)a0;
- (void)bannerController:(id)a0 didSetPrivateBrowsingPrivacyProtectionsBanner:(id)a1 previousBanner:(id)a2 animated:(BOOL)a3;
- (BOOL)_isShowingFindOnPage;
- (void)bannerController:(id)a0 didSetCrashBanner:(id)a1 previousBanner:(id)a2 animated:(BOOL)a3;
- (double)_topAuxiliaryBarsHeight;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })obscuredInsetsForRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inCoordinateSpace:(id)a1;
- (void)stopRefreshing;
- (void)_updateTopBarStyles;
- (void)_createSidebarContentDimmingViewIfNeeded;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })maximumObscuredInsetsForRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inCoordinateSpace:(id)a1;
- (void)_applyTopBackdropTheme;
- (BOOL)capsuleNavigationBarViewControllerIsShowingFindOnPage:(id)a0;
- (void)addChildViewController:(id)a0;
- (void)displayHostedScreenTimeView;
- (BOOL)canBecomeFirstResponder;
- (void).cxx_destruct;
- (void)_updateCapsuleTopSeparatorColor;
- (void)bannerController:(id)a0 didSetWebExtensionPermissionGrantedBanner:(id)a1 previousBanner:(id)a2 animated:(BOOL)a3;
- (void)_showBarsFromBottomBarTap:(id)a0;
- (void)_hideNavigationBarGestureRecognized:(id)a0;
- (void)_setUpFloatingSidebarButton;
- (void)_setUpRefreshControlIfNeeded;
- (double)_totalAdditionalContentHeightForBanners;
- (void)_statusBarHover:(id)a0;
- (void)addToastViewController:(id)a0;
- (void)_layOutSidebar;
- (void)setShowingSidebar:(BOOL)a0 completion:(id /* block */)a1;
- (void)_layOutBottomToolbar;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForSidebarWhenShowing:(BOOL)a0;
- (void)capsuleNavigationBarViewControllerDidTapVoiceSearch:(id)a0;
- (void)showTurnOnLockedPrivateBrowsingSheet;
- (void)_layOutTabView;
- (void)viewDidAppear:(BOOL)a0;
- (BOOL)_isShowingEmbeddedSidebar;
- (void)_destroySidebarContentDimmingViewIfNeeded;
- (struct CGPoint { double x0; double x1; })_convertDocumentCoordinateSpacePoint:(struct CGPoint { double x0; double x1; })a0 toCoordinateSpace:(id)a1;
- (void)removeChildViewController:(id)a0 notifyDidMove:(BOOL)a1;
- (void)_setToolbarPlacement:(long long)a0;
- (double)minimumEffectiveDeviceWidthForTabDocumentView:(id)a0;
- (BOOL)shouldFreezeWebViewUpdatesForTabDocumentView:(id)a0;
- (void)capsuleCollectionViewDidUpdateMinimizationGesture:(id)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_loweredBarObscuredInsets;
- (id)_activeTabDocumentView;
- (BOOL)capsuleNavigationBarViewControllerIsTrackingDropSession:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_sidebarDimmedContentFrameIncludingSidebarOnlyIfEmbedded:(BOOL)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bottomToolbarFrameInCoordinateSpace:(id)a0 includeKeyboard:(BOOL)a1;
- (void)_prepareBarsForTransitionFromPreviousToolbarPlacement:(long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_convertDocumentCoordinateSpaceRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 toCoordinateSpace:(id)a1;
- (BOOL)inElementFullscreenForTabDocumentView:(id)a0;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (void)sidebarDimmingViewDismiss:(id)a0;
- (BOOL)becomeFirstResponder;
- (void)_createBottomToolbarIfNeeded;
- (void)_prepareToShowSidebarViewControllerIfNeeded;
- (void)updateWebViewSizeAttributes;
- (void)tabBarDropExpansionView:(id)a0 didEndTrackingDropSession:(id)a1;
- (void)updateSuppressesStandaloneTabBar;
- (BOOL)_shouldPositionBottomToolbarAboveKeyboard;
- (void)_turnOnLockedPrivateBrowsingFromSheet;
- (void)capsuleNavigationBarViewControllerWillHideKeyboard:(id)a0;
- (BOOL)_shouldShowThemeColorInTopBar;
- (unsigned long long)tabDocumentView:(id)a0 contentOffsetAdjustmentEdgeWithPreviousContentInset:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a1;
- (void)_updateToolbarPlacementIfNeeded;
- (void)_updateSidebarStyle;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })scrollViewContentInsetAdjustmentsForTabDocumentView:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForNavigationBar;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })obscuredInsetsWithComponents:(unsigned long long)a0 forRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 inCoordinateSpace:(id)a2;
- (void)scrollViewDidScroll:(id)a0;
- (void)_updateToolbarForToolbarPlacementAllowingRemoval:(BOOL)a0;
- (void)updateCapsuleLayoutStyle;
- (void)_logCurrentLayoutState;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForBottomToolbarForceHidden:(BOOL)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })sidebarObscuredInsetsForRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inCoordinateSpace:(id)a1;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_baseInsetsForHorizontalScrollIndicator;
- (id)_continuousReadingViewController;
- (BOOL)safari_wantsTransparentApplicationBackground;
- (void)hideLockedPrivateBrowsingView;
- (void)_registerLayoutStateUpdateHandler;

@end
