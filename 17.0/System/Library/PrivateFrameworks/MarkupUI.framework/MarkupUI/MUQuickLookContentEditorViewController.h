@class MUImageAnalysisManager, NSDictionary, UIFindInteraction, UIViewController, MUDelegateProxy, UIView, UIScrollView, NSString, PDFDocument, NSUndoManager, NSMutableSet, UINavigationBar, AKController, PDFView, UTType, UIImage;
@protocol QuickLookContentEditorDelegate, MUContentViewControllerProtocol, PDFViewDelegatePrivate;

@interface MUQuickLookContentEditorViewController : MarkupViewController <UIDocumentPickerDelegate, UIScrollViewDelegate, VNDocumentCameraViewControllerDelegate, MUImageAnalysisManagerDelegate, QuickLookContentEditor>

@property (copy, nonatomic) id /* block */ importHandler;
@property (copy, nonatomic) id /* block */ scanPDFHandler;
@property (copy, nonatomic) id /* block */ scanImageToPDFConversionHandler;
@property (retain, nonatomic) NSMutableSet *actionsNotEnablingMarkup;
@property (retain, nonatomic) MUImageAnalysisManager *imageAnalysisManager;
@property (retain, nonatomic) UIImage *latestImageForAnalysis;
@property BOOL didAppearOnce;
@property BOOL delegateRespondsToDetectedFormInContent;
@property BOOL formDetectedInDocument;
@property (retain, nonatomic) MUDelegateProxy<PDFViewDelegatePrivate> *pdfViewDelegateProxy;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) UIView *imageAnalysisView;
@property (readonly, nonatomic) UIImage *imageForAnalysis;
@property (readonly, nonatomic) NSDictionary *clientPreviewOptions;
@property (weak, nonatomic) id<QuickLookContentEditorDelegate> delegate;
@property (readonly, nonatomic) UIFindInteraction *findInteraction;
@property (nonatomic) unsigned long long presentationMode;
@property (readonly, nonatomic) UIView *transitioningView;
@property (readonly, nonatomic) BOOL documentIsLocked;
@property (readonly, nonatomic) BOOL canEncryptDocument;
@property (nonatomic) BOOL shouldHighlightTextAndDDAfterNextAnalysis;
@property (nonatomic) BOOL shouldEnterVisualSearchAfterNextAnalysis;
@property (nonatomic) BOOL shouldUpliftSubjectAfterNextAnalysis;
@property (readonly, nonatomic) NSString *infoButtonGlyphName;
@property (readonly, nonatomic) NSString *filledInfoButtonGlyphName;
@property BOOL encryptPrivateMetadata;
@property (copy, nonatomic) NSString *hostProcessBundleIdentifier;
@property (readonly) PDFDocument *pdfDocument;
@property (readonly) PDFView *pdfView;
@property (readonly, weak) UIView *pageLabelView;
@property (nonatomic) long long thumbnailViewStyle;
@property (nonatomic) BOOL allowsThumbnailViewPageReordering;
@property (nonatomic) BOOL fixedThumbnailView;
@property (nonatomic) unsigned long long currentPDFPageIndex;
@property (nonatomic) BOOL forcesPDFViewTopAlignment;
@property (nonatomic, getter=isShapeDetectionEnabled) BOOL shapeDetectionEnabled;
@property (retain, nonatomic) NSUndoManager *akUndoManager;
@property (nonatomic) BOOL centersIgnoringContentInsets;
@property (nonatomic) BOOL showShareButtonInToolbar;
@property (readonly, nonatomic) UIScrollView *contentViewScrollView;
@property (readonly, nonatomic) UIView *imageViewCombinedContentView;
@property unsigned long long inkStyle;
@property (readonly) struct CGSize { double x0; double x1; } adjustedSourceImageSize;
@property (readonly, nonatomic) AKController *annotationController;
@property (readonly, nonatomic) UIView *toolbar;
@property (nonatomic, getter=isToolbarHidden) BOOL toolbarHidden;
@property (nonatomic) long long toolbarPosition;
@property (retain, nonatomic) UINavigationBar *navBar;
@property (nonatomic, getter=isThumbnailViewHidden) BOOL thumbnailViewHidden;
@property (nonatomic) BOOL showThumbnailViewForMultipage;
@property (nonatomic) BOOL allEditingDisabled;
@property (nonatomic) BOOL annotationEditingEnabled;
@property (nonatomic) BOOL formFillingEnabled;
@property (nonatomic) BOOL pencilAlwaysDraws;
@property (nonatomic, getter=isNavigationModeHorizontal) BOOL navigationModeHorizontal;
@property (readonly) UIViewController<MUContentViewControllerProtocol> *contentViewController;
@property (readonly, nonatomic) UTType *outputContentType;
@property (readonly, nonatomic) NSString *outputType;

+ (struct CGSize { double x0; double x1; })_suggestedContentSizeForImageSource:(struct CGImageSource { } *)a0;
+ (struct CGSize { double x0; double x1; })_suggestedContentSizeForPDF:(id)a0;
+ (struct CGSize { double x0; double x1; })suggestedContentSizeForData:(id)a0;
+ (struct CGSize { double x0; double x1; })suggestedContentSizeForURL:(id)a0;

- (void)willTransitionToTraitCollection:(id)a0 withTransitionCoordinator:(id)a1;
- (id)presentingViewControllerForImageAnalysisInteraction:(id)a0;
- (id)init;
- (void)viewWillAppear:(BOOL)a0;
- (void)find:(id)a0;
- (void)traitCollectionDidChange:(id)a0;
- (void)viewDidLayoutSubviews;
- (void)scrollViewDidZoom:(id)a0;
- (void)findNext:(id)a0;
- (void)findPrevious:(id)a0;
- (BOOL)_canShowWhileLocked;
- (void).cxx_destruct;
- (BOOL)allowsEditing;
- (void)scrollViewDidScroll:(id)a0;
- (BOOL)canPerformAction:(SEL)a0 withSender:(id)a1;
- (void)documentPicker:(id)a0 didPickDocumentsAtURLs:(id)a1;
- (void)documentPickerWasCancelled:(id)a0;
- (void)documentCameraViewController:(id)a0 didFailWithError:(id)a1;
- (void)documentCameraViewController:(id)a0 didFinishWithScan:(id)a1;
- (void)documentCameraViewControllerDidCancel:(id)a0;
- (void)PDFView:(id)a0 allowsFormFillingMode:(BOOL)a1 forPage:(id)a2;
- (BOOL)_hasPDFContent;
- (BOOL)acceptSingleTouch:(id)a0;
- (void)editDetectedForAnnotationController:(id)a0;
- (void)flattenImageForAnalysis;
- (BOOL)hasResultsForVisualSearch;
- (void)infoButtonTapped;
- (BOOL)isInteractionActive;
- (BOOL)isVisualSearchEnabled;
- (void)loadWithData:(id)a0 archivedModelData:(id)a1 placeholderImage:(id)a2 completionHandler:(id /* block */)a3;
- (void)loadWithURL:(id)a0 archivedModelData:(id)a1 placeholderImage:(id)a2 completionHandler:(id /* block */)a3;
- (void)setupAndStartImageAnalysisIfNeeded;
- (void)shouldHideMarkupOverlays:(BOOL)a0 animated:(BOOL)a1;
- (void)stopImageAnalysis;
- (id)supportedUTTypes;
- (void)updateForFullScreen:(BOOL)a0 animated:(BOOL)a1;
- (void)updateThumbnailView;
- (void)annotationController:(id)a0 detectedEditOfType:(unsigned long long)a1;
- (void)_setupAndStartImageAnalysisIfNeeded;
- (void)_updateAnalysisButtonsContainerConstraints;
- (void)imageAnalysisInteractionDidDismissVisualSearchController;
- (void)imageAnalysisInteractionWillPresentVisualSearchController;
- (void)imageAnalyzerWantsUpdateInfoButtonWithAnimation:(BOOL)a0;
- (void)imageAnalyzerWantsUpdateOverlayViews;
- (void)_updatePeekSize;
- (void)_adjustImageInteractionForScrollEvent:(id)a0;
- (void)_convertToPDFAndWrite:(id)a0 completionHandler:(id /* block */)a1;
- (void)_deletePage:(id)a0;
- (void)_deletePages:(id)a0 inDocument:(id)a1;
- (void)_detectedEditEnablingMarkup:(BOOL)a0;
- (id)_editedImageAnalysisQueue;
- (void)_flattenImageForAnalysis;
- (void)_handleLoadingWithCompletion:(id /* block */)a0;
- (BOOL)_hasImageContent;
- (BOOL)_imageAnalysisOverlayAcceptSingleTouch:(id)a0;
- (void)_insertBlankPage:(id)a0 atIndex:(unsigned long long)a1;
- (void)_insertBlankPageAfterPage:(id)a0;
- (void)_insertDeletedPage:(id)a0 atIndex:(unsigned long long)a1;
- (void)_insertFileAtURL:(id)a0 type:(id)a1 afterPage:(id)a2 completionHandler:(id /* block */)a3;
- (void)_insertImageWithURL:(id)a0 afterPage:(id)a1 completionHandler:(id /* block */)a2;
- (void)_insertPDFDocumentWithURL:(id)a0 afterPage:(id)a1 completionHandler:(id /* block */)a2;
- (void)_insertPage:(id)a0 atIndex:(unsigned long long)a1;
- (void)_insertPageFromFileAfterPage:(id)a0;
- (void)_insertPagesFromFileURLs:(id)a0 afterPage:(id)a1;
- (unsigned long long)_insertPagesFromProvidedPDFDocument:(id)a0 toPDFDocument:(id)a1 atPageIndex:(unsigned long long)a2;
- (void)_insertPagesFromScannerAfterPage:(id)a0;
- (void)_loadSourceContentWithCompletion:(id /* block */)a0;
- (void)_presentDocumentPicker:(id /* block */)a0;
- (void)_presentDocumentScannerAfterPage:(id)a0;
- (BOOL)_presentationModeAllowsEditing;
- (BOOL)_presentationModeAllowsMarkupOverlays;
- (void)_registerActionNotEnablingMarkup:(id)a0;
- (void)_resetOriginalDelegate;
- (void)_rotatePage:(id)a0 clockwise:(BOOL)a1;
- (void)_setAsPDFViewDelegatePrivateIfNecessary;
- (void)_setPresentationModeForImageContent:(unsigned long long)a0;
- (void)_setPresentationModeForPDFContent:(unsigned long long)a0;
- (BOOL)_shouldShowMarkupOverlays;
- (void)_updateThumbnailViewWithTraitCollection:(id)a0;
- (BOOL)canEditContent;
- (BOOL)canEditPDF;
- (BOOL)canShowPageViewLabel;
- (void)contentControllerDidUnlockDocument:(id)a0;
- (void)convertToPDFAndWrite:(id)a0 completionHandler:(id /* block */)a1;
- (id)getMenuElementsForPage:(id)a0;
- (void)insertPages:(id)a0 atIndexes:(id)a1 inDocument:(id)a2;
- (id)pdfPageOptionsForImageRef:(struct CGImage { } *)a0 withPreviousPage:(id)a1;
- (id)sharedSerialPagesEditionQueue;

@end
