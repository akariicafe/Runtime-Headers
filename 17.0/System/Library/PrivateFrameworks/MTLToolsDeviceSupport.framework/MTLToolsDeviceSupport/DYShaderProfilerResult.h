@class NSArray, NSMutableDictionary, NSDictionary, NSMutableArray;

@interface DYShaderProfilerResult : NSObject {
    struct unordered_map<unsigned long long, unsigned int, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned int>>> { struct __hash_table<std::__hash_value_type<unsigned long long, unsigned int>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, unsigned int>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>> { float __value_; } __p3_; } __table_; } _drawCallInfoIndexMap;
    NSMutableDictionary *_vertexShaderBinaryInfo;
    NSMutableDictionary *_fragmentShaderBinaryInfo;
    NSMutableDictionary *_computeKernelBinaryInfo;
    NSMutableDictionary *_allShaderBinaryInfo;
    struct unordered_map<unsigned long long, unsigned int, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned int>>> { struct __hash_table<std::__hash_value_type<unsigned long long, unsigned int>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, unsigned int>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>> { float __value_; } __p3_; } __table_; } _perContextDrawCallCounterDY;
    struct unordered_map<unsigned long long, std::unordered_map<int, unsigned int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::unordered_map<int, unsigned int>>>> { struct __hash_table<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::unordered_map<int, unsigned int>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>> { float __value_; } __p3_; } __table_; } _functionIndexToDrawCallIndexMap;
}

@property (retain, nonatomic) NSMutableArray *drawCallInfoList;
@property (retain, nonatomic) NSMutableArray *programPipelineInfoList;
@property (nonatomic) struct DYShaderProfilerTiming { struct Statistics { double average; double min; double max; } _cycle; struct Statistics { double average; double min; double max; } _time; } vertexTiming;
@property (nonatomic) struct DYShaderProfilerTiming { struct Statistics { double average; double min; double max; } _cycle; struct Statistics { double average; double min; double max; } _time; } fragmentTiming;
@property (nonatomic) struct DYShaderProfilerTiming { struct Statistics { double average; double min; double max; } _cycle; struct Statistics { double average; double min; double max; } _time; } computeTiming;
@property (nonatomic) struct DYShaderProfilerTiming { struct Statistics { double average; double min; double max; } _cycle; struct Statistics { double average; double min; double max; } _time; } timing;
@property (nonatomic) unsigned long long frameTime;
@property (nonatomic) unsigned int deviceUtilization;
@property (nonatomic) unsigned int encoderCount;
@property (nonatomic) double gpuTime;
@property (retain, nonatomic) NSArray *blitTimeData;
@property (retain, nonatomic) NSMutableDictionary *blitEncoderTimeInfo;
@property (retain, nonatomic) NSMutableArray *shaderProfilingFrameTimes;
@property (nonatomic) double shaderProfilingTime;
@property (retain, nonatomic) NSDictionary *derivedCountersData;
@property (readonly, nonatomic) NSMutableArray *encoderInfoList;
@property (readonly, nonatomic) NSMutableArray *encoderFunctionIndexList;
@property (readonly, nonatomic) NSMutableArray *programInfoList;
@property (readonly, nonatomic) NSMutableDictionary *encoderFunctionIndexToEncoderIndexMap;
@property (retain, nonatomic) NSMutableArray *effectiveKickTimes;
@property (retain, nonatomic) NSMutableArray *effectivePerEncoderDrawKickTimes;
@property (retain, nonatomic) NSMutableArray *averagePerDrawKickDurations;
@property (retain, nonatomic) NSMutableArray *loadActionTimes;
@property (retain, nonatomic) NSMutableArray *storeActionTimes;
@property (nonatomic) unsigned int commandBufferCount;
@property (retain, nonatomic) NSMutableArray *perCommandBufferEncoderCount;
@property (retain, nonatomic) NSDictionary *encoderIndexToLabelMap;

- (id)init;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)buildDrawCallIndexMap;

@end
