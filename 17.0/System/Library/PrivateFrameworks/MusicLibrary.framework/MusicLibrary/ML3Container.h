@class NSString, NSArray, ML3Predicate;

@interface ML3Container : ML3Entity

@property (readonly, nonatomic) ML3Predicate *smartCriteriaPredicate;
@property (readonly, nonatomic, getter=isLimitedByCount) BOOL limitedByCount;
@property (readonly, nonatomic, getter=isLimitOrderingDescending) BOOL limitOrderingDescending;
@property (readonly, copy, nonatomic) NSString *limitingProperty;
@property (readonly, copy, nonatomic) NSArray *limitOrderingTerms;
@property (readonly, nonatomic) long long limitValue;
@property (readonly, copy, nonatomic) NSArray *cloudDisplayOrderingTerms;
@property (readonly, copy, nonatomic) NSArray *displayOrderingTerms;

+ (id)databaseTable;
+ (void)initialize;
+ (id)joinClausesForProperty:(id)a0;
+ (id)foreignDatabaseTableForProperty:(id)a0;
+ (id)currentDeviceFavoritesPlaylistInLibrary:(id)a0 usingConnection:(id)a1;
+ (id)defaultOrderingTerms;
+ (BOOL)deleteFromLibrary:(id)a0 deletionType:(int)a1 persistentIDs:(const long long *)a2 count:(unsigned long long)a3;
+ (long long)revisionTrackingCode;
+ (void)_clearContainerMediaTypeInContainerWithPersistentID:(long long)a0 connection:(id)a1;
+ (unsigned int)trackOrderFromProtocolSortType:(int)a0;
+ (int)protocolSortTypeFromTrackOrder:(unsigned int)a0;
+ (void)_addMediaTypesToContainerWithPersistentID:(long long)a0 mediaTypes:(id)a1 connection:(id)a2;
+ (id)_allStaticItemContainersInLibrary:(id)a0 usingConnection:(id)a1;
+ (void)_insertNewSmartPlaylist:(id)a0 criteriaBlob:(id)a1 evaluationOrder:(unsigned int)a2 limited:(BOOL)a3 trackOrder:(unsigned int)a4 distinguishedKind:(int)a5 inLibrary:(id)a6 cachedNameOrders:(id)a7;
+ (id)_mediaTypesForTracksInContainerWithPersistentID:(long long)a0 connection:(id)a1;
+ (id)_mediaTypesForTracksWithPersistentIDs:(id)a0 usingConnection:(id)a1;
+ (BOOL)_reloadContainedMediaTypes:(BOOL)a0 removedMediaTypes:(id)a1 addedMediaTypes:(id)a2 notify:(BOOL)a3 incrementEntityRevision:(BOOL)a4 usingLibrary:(id)a5 connection:(id)a6 forContainerPersistentID:(long long)a7;
+ (void)_removeMediaTypesFromContainerWithPersistentID:(long long)a0 mediaTypes:(id)a1 connection:(id)a2;
+ (void)_updateContainedMediaTypeInContainerWithPersistentID:(long long)a0 connection:(id)a1 itemUpdateBlock:(id /* block */)a2;
+ (BOOL)assistantLibraryContentsChangeForProperty:(id)a0;
+ (id)autoCreatedBuiltInSmartPlaylistsPIDs:(id)a0;
+ (id)defaultFilterPredicates;
+ (void)deleteAutoCreatedBuiltInSmartPlaylistsPIDs:(id)a0 inLibrary:(id)a1;
+ (id)extraTablesToDelete;
+ (id)foreignColumnForProperty:(id)a0;
+ (BOOL)hasCriterionInCriteriaList:(struct SearchCriteriaList { } *)a0 forITDBTrackField:(int)a1;
+ (BOOL)libraryContentsChangeForProperty:(id)a0;
+ (BOOL)libraryDynamicChangeForProperty:(id)a0;
+ (id)nextFilepathForPlaylistType:(int)a0 withPersistentID:(unsigned long long)a1 inLibrary:(id)a2;
+ (id)persistentIDColumnForTable:(id)a0;
+ (void)populateMediaTypesOfStaticContainersInLibrary:(id)a0;
+ (void)populateSortOrdersOfPropertyValues:(id)a0 inLibrary:(id)a1 cachedNameOrders:(id)a2;
+ (id)predicateForCriteriaList:(struct SearchCriteriaList { } *)a0 parentMatchedAny:(BOOL)a1;
+ (void)reloadContainedMediaTypesForContainerWithPersistID:(long long)a0 usingConnection:(id)a1;
+ (void)removeAnyNonLibraryItemsInPersistentIDs:(id)a0 fromContainersInLibrary:(id)a1 usingConnection:(id)a2;
+ (void)removeNonLibraryItemsFromContainer:(id)a0 usingConnection:(id)a1;
+ (void)removeNonLibraryItemsFromContainersInLibrary:(id)a0 usingConnection:(id)a1;
+ (id)sectionPropertyForProperty:(id)a0;
+ (BOOL)smartCriteriaCanBeEvaluated:(id)a0;
+ (BOOL)updateBuiltInSmartPlaylistNamesForCurrentLanguageInLibrary:(id)a0;

- (BOOL)removeAllTracks;
- (BOOL)appendTracksWithPersistentIDs:(id)a0 notify:(BOOL)a1;
- (BOOL)moveTrackFromIndex:(unsigned long long)a0 toIndex:(unsigned long long)a1;
- (id)multiverseIdentifier;
- (BOOL)removeFirstTrack;
- (BOOL)removeTracksAtIndexes:(id)a0 notify:(BOOL)a1;
- (BOOL)setTracksWithPersistentIDs:(id)a0 notify:(BOOL)a1;
- (void)setValues:(id)a0 forProperties:(id)a1 async:(BOOL)a2 withCompletionBlock:(id /* block */)a3;
- (BOOL)_supportsOrderedTrackOperations;
- (id)_criteriaListDescription:(struct SearchCriteriaList { } *)a0 level:(long long)a1;
- (id)_addUnitesForCriterionInfo:(struct { unsigned int x0; unsigned int x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; union { struct { void *x0; unsigned int x1; } x0; struct SearchCriteriaList *x1; } x6; })a0;
- (id)_booleanStringForCriteriaInfo:(struct { unsigned int x0; unsigned int x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; union { struct { void *x0; unsigned int x1; } x0; struct SearchCriteriaList *x1; } x6; })a0;
- (id)_convertNumericValueFromCriterionMatchKey:(unsigned int)a0 criteriaValue:(long long)a1;
- (id)_dateStringForCriteriaInfo:(struct { unsigned int x0; unsigned int x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; union { struct { void *x0; unsigned int x1; } x0; struct SearchCriteriaList *x1; } x6; })a0;
- (id)_formatTime:(long long)a0;
- (long long)_maxPositionForTracksUsingConnection:(id)a0;
- (id)_nonzeroStringForCriteriaInfo:(struct { unsigned int x0; unsigned int x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; union { struct { void *x0; unsigned int x1; } x0; struct SearchCriteriaList *x1; } x6; })a0;
- (id)_numericStringForCriteriaInfo:(struct { unsigned int x0; unsigned int x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; union { struct { void *x0; unsigned int x1; } x0; struct SearchCriteriaList *x1; } x6; })a0;
- (BOOL)_reloadContainedMediaTypes:(BOOL)a0 removedMediaTypes:(id)a1 addedMediaTypes:(id)a2 notify:(BOOL)a3 incrementEntityRevision:(BOOL)a4 usingConnection:(id)a5;
- (BOOL)_removeTracksAtIndexes:(id)a0 notify:(BOOL)a1 usingConnection:(id)a2;
- (void)_setContainerSeedItemPersistentIDValue:(id)a0;
- (BOOL)_setItemPersistentIDs:(id)a0 reloadContainedMediaTypes:(BOOL)a1 removedMediaTypes:(id)a2 addedMediaTypes:(id)a3 notify:(BOOL)a4 incrementEntityRevision:(BOOL)a5 usingConnection:(id)a6;
- (id)_stringForCriterionBuffer:(struct { unsigned int x0; unsigned int x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; union { struct { void *x0; unsigned int x1; } x0; struct SearchCriteriaList *x1; } x6; })a0;
- (id)_stringForCriterionMatchKey:(struct { unsigned int x0; unsigned int x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; union { struct { void *x0; unsigned int x1; } x0; struct SearchCriteriaList *x1; } x6; })a0;
- (id)_stringForCriterionMatchType:(struct { unsigned int x0; unsigned int x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; union { struct { void *x0; unsigned int x1; } x0; struct SearchCriteriaList *x1; } x6; })a0;
- (id)_stringForTrackFieldCloudStatus:(long long)a0;
- (id)_stringForTrackFieldMediaKind:(long long)a0;
- (id)_stringStringForCriteriaInfo:(struct { unsigned int x0; unsigned int x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; union { struct { void *x0; unsigned int x1; } x0; struct SearchCriteriaList *x1; } x6; })a0;
- (id)childPlaylistPersistentIds;
- (id)criteriaListDescription;
- (id)evaluationOrderingTerms;
- (struct SearchCriteriaList { } *)importedCriteriaList;
- (id)initWithDictionary:(id)a0 inLibrary:(id)a1 cachedNameOrders:(id)a2 usingConnection:(id)a3;
- (BOOL)isBuiltInSmartPlaylist;
- (BOOL)isEvaluationOrderingDescending;
- (id)protocolItem;
- (id)trackPersistentIds;

@end
