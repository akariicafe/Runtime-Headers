@interface CLSCalendar : NSObject

+ (void)initialize;
+ (BOOL)isCountryCodePartOfSouthernHemisphere:(id)a0;
+ (BOOL)isCountryCodePartOfNorthernHemisphere:(id)a0;
+ (long long)dayOfWeekFromDate:(id)a0;
+ (long long)compareDate:(id)a0 toDate:(id)a1 toUnitGranularity:(unsigned long long)a2;
+ (id)components:(unsigned long long)a0 fromDate:(id)a1;
+ (id)components:(unsigned long long)a0 fromDate:(id)a1 toDate:(id)a2 options:(unsigned long long)a3;
+ (id)components:(unsigned long long)a0 fromDateComponents:(id)a1 toDateComponents:(id)a2 options:(unsigned long long)a3;
+ (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeOfUnit:(unsigned long long)a0 inUnit:(unsigned long long)a1 forDate:(id)a2;
+ (id)startOfDayForDate:(id)a0;
+ (long long)numberOfDaysBetweenDate:(id)a0 andDate:(id)a1;
+ (id)dateByAddingWeeksOfYear:(long long)a0 toDate:(id)a1;
+ (id)componentsFromDate:(id)a0 inTimeZone:(id)a1;
+ (id)currentLocalDate;
+ (BOOL)currentLocaleSupportsSeasons;
+ (id)dateByAddingDays:(long long)a0 toDate:(id)a1;
+ (id)dateByAddingMonths:(long long)a0 toDate:(id)a1;
+ (id)dateByAddingYears:(long long)a0 toDate:(id)a1;
+ (id)dateBySettingYear:(long long)a0 ofDate:(id)a1;
+ (id)dateComponentsWithLocalDate:(id)a0;
+ (id)dateComponentsWithUTCDate:(id)a0 localDate:(id)a1;
+ (id)dateFromComponents:(id)a0 inTimeZone:(id)a1;
+ (long long)dayFromDate:(id)a0;
+ (id)endOfDayForDate:(id)a0;
+ (id)endOfMonthForDate:(id)a0;
+ (id)endOfWeekForDate:(id)a0;
+ (BOOL)isFirstTenDaysOfSeasonForLocalDate:(id)a0;
+ (id)localDateFromUniversalDate:(id)a0;
+ (id)localDateFromUniversalDate:(id)a0 atLocation:(id)a1;
+ (id)localDateFromUniversalDate:(id)a0 inTimeZone:(id)a1;
+ (id)localDateIntervalOfFirstTenDaysOfSeasonForLocalDate:(id)a0;
+ (id)localStartDateForNextSeasonAfterLocalDate:(id)a0;
+ (id)localStartSeasonDateForLocalDate:(id)a0;
+ (long long)monthFromDate:(id)a0;
+ (id)seasonNameForDateComponents:(id)a0 locale:(id)a1;
+ (id)seasonNameForLocalDate:(id)a0 locale:(id)a1;
+ (id)startOfMonthForDate:(id)a0;
+ (id)startOfWeekForDate:(id)a0;
+ (id)universalDateFromLocalDate:(id)a0;
+ (id)universalDateFromLocalDate:(id)a0 inTimeZone:(id)a1;
+ (long long)weekOfMonthFromDate:(id)a0;
+ (long long)weekOfYearFromDate:(id)a0;
+ (long long)yearFromDate:(id)a0;
+ (long long)compareDate:(id)a0 toDate:(id)a1 toUnitGranularities:(unsigned long long)a2;
+ (id)dateByAddingHours:(long long)a0 toDate:(id)a1;
+ (id)dateFromComponents:(unsigned long long)a0 ofDate:(id)a1;
+ (long long)hourFromDate:(id)a0;
+ (BOOL)isDateValid:(id)a0;
+ (BOOL)isFirstMonthOfSeasonForLocalDate:(id)a0;
+ (BOOL)isFirstTwoWeeksOfMonthForLocalDate:(id)a0;
+ (BOOL)isLastMonthOfSeasonForLocalDate:(id)a0;
+ (BOOL)isLastTwoWeeksOfMonthForLocalDate:(id)a0;
+ (BOOL)isLastWeekOfMonthForLocalDate:(id)a0;
+ (BOOL)isMiddleMonthOfSeasonForLocalDate:(id)a0;
+ (BOOL)isSecondHalfOfSeasonForLocalDate:(id)a0;
+ (id)localDateFormatterWithFormat:(id)a0;
+ (id)northernMeteorologicalSeasonNameForDateComponents:(id)a0;
+ (id)s_seasonCountryCodesDictionary;
+ (id)southernMeteorologicalSeasonNameForDateComponents:(id)a0;
+ (BOOL)supportsSeasonsWithLocale:(id)a0;
+ (id)timeZoneFromLocation:(id)a0;
+ (id)universalDateFromLocalDate:(id)a0 atLocation:(id)a1;
+ (id)validDateForDate:(id)a0;
+ (long long)yearForWeekOfYearFromDate:(id)a0;

@end
