@class NSUUID, NSString, NSArray, NSData, NSSet, NSDictionary, NSObject, AKDevice, NSNumber, AKAnisetteData;
@protocol OS_dispatch_queue, AKAnisetteServiceProtocol;

@interface AKAppleIDAuthenticationContext : NSObject <AKAppleIDAuthenticationLimitedUIProvider, AKAuthenticationContext, NSSecureCoding> {
    NSString *_generatedCode;
    NSNumber *_latitude;
    NSNumber *_longitude;
    NSString *_deviceClass;
    NSString *_deviceColor;
    NSString *_deviceEnclosureColor;
    NSString *_notificationDisclaimer;
    struct __CFUserNotification { } *_activeSecondFactoryEntryPrompt;
    id /* block */ _secondFactoryEntryCompletion;
    NSObject<OS_dispatch_queue> *_secondFactorQueue;
    NSString *_interpolatedReason;
    BOOL _isContextRequestingReauthForExistingService;
}

@property (class, readonly) BOOL supportsSecureCoding;

@property (copy, nonatomic) NSString *generatedCode;
@property (copy, nonatomic) NSNumber *latitude;
@property (copy, nonatomic) NSNumber *longitude;
@property (copy, nonatomic) NSString *deviceClass;
@property (copy, nonatomic) NSString *deviceColor;
@property (copy, nonatomic) NSString *deviceEnclosureColor;
@property (copy, nonatomic) NSString *notificationDisclaimer;
@property (readonly, nonatomic) NSUUID *_identifier;
@property (readonly, nonatomic) unsigned long long _capabilityForUIDisplay;
@property (nonatomic) BOOL _shouldSendIdentityTokenForRemoteUI;
@property (nonatomic) BOOL _shouldSendGrandSlamTokensForRemoteUI;
@property (readonly, nonatomic) BOOL _requiresPasswordInput;
@property (readonly, nonatomic) NSString *_interpolatedReason;
@property (readonly, nonatomic) NSString *_interpolatedReasonWithBlame;
@property (nonatomic) BOOL _shouldSkipInitialReachabilityCheck;
@property (nonatomic) BOOL _shouldBroadcastForProximityAuthOnly;
@property (nonatomic) id /* block */ proximityAIDAHandler;
@property (nonatomic) unsigned long long _attemptIndex;
@property (readonly, nonatomic, getter=isContextEligibleForSilentAuthCoercion) BOOL contextEligibleForSilentAuthCoercion;
@property (readonly, nonatomic, getter=isContextEligibleForSilentAuth) BOOL contextEligibleForSilentAuth;
@property (readonly, nonatomic, getter=isContextEligibleForBiometricOrPasscodeAuth) BOOL contextEligibleForBiometricOrPasscodeAuth;
@property (readonly, nonatomic, getter=isContextRequestingReauthForExistingService) BOOL contextRequestingReauthForExistingService;
@property (nonatomic) BOOL _performUIOutOfProcess;
@property (nonatomic) BOOL _keepAlive;
@property (readonly, nonatomic) BOOL _shouldRefreshAccountAndUpdateContext;
@property (retain, nonatomic) NSData *displayImageData;
@property (nonatomic, getter=_isForcedEligibleForForegroundAuthentication, setter=set_forceEligibleForForegroundAuthentication:) BOOL _forceEligibleForForegroundAuthentication;
@property (nonatomic) BOOL deviceRegionRequired;
@property (nonatomic, getter=isPasscodeOnlyPolicy) BOOL passcodeOnlyPolicy;
@property (copy, nonatomic) NSString *telemetryDeviceSessionID;
@property (copy, nonatomic) NSString *telemetryFlowID;
@property (copy, nonatomic) NSString *passwordlessToken;
@property (copy, nonatomic) NSString *idmsDataToken;
@property (nonatomic) BOOL isNativeTakeover;
@property (nonatomic) BOOL isRequestedFromOOPViewService;
@property (nonatomic) BOOL ignorePasswordCache;
@property (nonatomic) unsigned long long securityCode;
@property (nonatomic) BOOL shouldPromptForPasswordOnly;
@property (nonatomic) BOOL shouldUpdatePersistentServiceTokens;
@property (nonatomic, setter=_setProxyingForApp:) BOOL _isProxyingForApp;
@property (copy, nonatomic, setter=_setProxiedAppBundleID:) NSString *_proxiedAppBundleID;
@property (copy, nonatomic) NSString *_passwordPromptTitle;
@property (copy, nonatomic, setter=_setPassword:) NSString *_password;
@property (nonatomic) BOOL _isPasswordEditable;
@property (copy, nonatomic, setter=_setShortLivedToken:) NSString *_shortLivedToken;
@property (copy, nonatomic, setter=_setIdentityToken:) NSString *_identityToken;
@property (copy, nonatomic, setter=_setRemoteUIIdentityToken:) NSString *_remoteUIIdentityToken;
@property (retain, nonatomic) id<AKAnisetteServiceProtocol> anisetteDataProvider;
@property (copy, nonatomic, setter=setAppleIDLoginEnabled:) NSNumber *isAppleIDLoginEnabled;
@property (copy, nonatomic, setter=setHasEmptyPassword:) NSNumber *hasEmptyPassword;
@property (nonatomic) BOOL shouldRequestRecoveryPET;
@property (nonatomic) BOOL shouldRequestShortLivedToken;
@property (nonatomic) BOOL shouldRequestConfigurationInfo;
@property (nonatomic) BOOL supportsPiggybacking;
@property (nonatomic) BOOL anticipateEscrowAttempt;
@property (copy, nonatomic) NSSet *desiredInternalTokens;
@property (nonatomic, setter=setFirstTimeLogin:) BOOL isFirstTimeLogin;
@property (nonatomic) BOOL shouldSkipSettingsLaunchAlert;
@property (copy, nonatomic) NSString *securityUpgradeContext;
@property (copy, nonatomic, setter=_setMessage:) NSString *_message;
@property (copy, nonatomic, setter=_setMasterKey:) NSString *_masterKey;
@property (retain, nonatomic) AKAnisetteData *proxiedDeviceAnisetteData;
@property (retain, nonatomic) AKAnisetteData *companionDeviceAnisetteData;
@property (nonatomic) BOOL shouldPreventInteractiveAuth;
@property (nonatomic) BOOL shouldForceInteractiveAuth;
@property (nonatomic) BOOL needsNewChildAccount;
@property (nonatomic) BOOL needsSecurityUpgradeUI;
@property (nonatomic) BOOL isRKVerification;
@property (copy, nonatomic) NSString *dependentAltDSID;
@property (copy, nonatomic) NSString *cellularDataAttributionAppBundleID;
@property (nonatomic) long long verifyCredentialReason;
@property (copy, nonatomic, setter=setCustodianRecoveryToken:) NSString *custodianRecoveryToken;
@property (copy, nonatomic) NSString *callerIconBundlePath;
@property (copy, nonatomic) NSString *localizedCallerName;
@property (nonatomic) BOOL enablePasscodeAuth;
@property (readonly, nonatomic, getter=isContextEligibleForPasscodeAuth) BOOL contextEligibleForPasscodeAuth;
@property (copy, nonatomic) NSString *serviceToken;
@property (copy, nonatomic) NSString *proxiedAppleID;
@property (copy, nonatomic) NSString *sourceAltDSID;
@property (copy, nonatomic) NSString *displayString;
@property (copy, nonatomic) NSString *displayTitle;
@property (copy, nonatomic) NSString *username;
@property (nonatomic) BOOL isUsernameEditable;
@property (nonatomic) BOOL shouldAllowAppleIDCreation;
@property (nonatomic) BOOL needsCredentialRecovery;
@property (nonatomic) BOOL needsNewAppleID;
@property (nonatomic) BOOL needsPasswordChange;
@property (nonatomic, setter=setTriggeredByNotification:) BOOL isTriggeredByNotification;
@property (nonatomic) long long serviceType;
@property (copy, nonatomic) NSString *reason;
@property (copy, nonatomic) NSString *defaultButtonString;
@property (nonatomic) long long maximumLoginAttempts;
@property (copy, nonatomic) NSString *serviceIdentifier;
@property (copy, nonatomic) NSArray *serviceIdentifiers;
@property (nonatomic) BOOL isEphemeral;
@property (copy, nonatomic) NSString *DSID;
@property (copy, nonatomic) NSString *altDSID;
@property (copy, nonatomic) NSDictionary *httpHeadersForRemoteUI;
@property (retain, nonatomic) id clientInfo;
@property (copy, nonatomic) NSDictionary *appProvidedData;
@property (nonatomic) BOOL shouldOfferSecurityUpgrade;
@property (nonatomic) BOOL needsRepair;
@property (retain, nonatomic) NSString *title;
@property (copy, nonatomic) NSString *helpAnchor;
@property (copy, nonatomic) NSString *helpBook;
@property (nonatomic) long long authenticationPromptStyle;
@property (retain, nonatomic) NSString *cancelButtonString;
@property (retain, nonatomic) NSString *alternativeButtonString;
@property (nonatomic) BOOL hideAlternativeButton;
@property (nonatomic) BOOL hideCancelButton;
@property (nonatomic) BOOL hideReasonString;
@property (nonatomic) BOOL clientShouldHandleAlternativeButtonAction;
@property (retain, nonatomic) NSString *windowTitle;
@property (nonatomic) BOOL alwaysShowUsernameField;
@property (copy, nonatomic) NSString *privacyBundleIdentifier;
@property (nonatomic) BOOL disableProximityAuth;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) unsigned long long authenticationType;
@property (nonatomic) unsigned long long authenticationMode;
@property (nonatomic) BOOL isMDMInformationRequired;
@property (copy, nonatomic, setter=_setProxiedAppName:) NSString *_proxiedAppName;
@property (copy, nonatomic) NSString *appProvidedContext;
@property (copy, nonatomic) AKDevice *proxiedDevice;
@property (copy, nonatomic) AKDevice *companionDevice;
@property (nonatomic) BOOL cliMode;

- (id)init;
- (void)encodeWithCoder:(id)a0;
- (id)initWithContext:(id)a0;
- (id)_initWithIdentifier:(id)a0;
- (void).cxx_destruct;
- (id)initWithCoder:(id)a0;
- (id)authKitAccount:(id *)a0;
- (id)_appendBlameIfRequiredTo:(id)a0;
- (void)_handleSecondFactorCodeEntry;
- (BOOL)_isEligibleForPasscodeAuth;
- (BOOL)_isVerifyCredentialReasonEligibleForBiometricOrPasscodeAuth;
- (BOOL)_localUserHasEmptyPassword;
- (id)_sanitizedCopy;
- (id)_secondFactorQueue;
- (void)_startListeningForSecondFactorCodeEntryNotification;
- (void)_stopListeningForSecondFactorCodeEntryNotification;
- (void)_updateWithValuesFromContext:(id)a0;
- (id)authKitAccountForSilentServiceToken:(id *)a0;
- (void)dismissBasicLoginUIWithCompletion:(id /* block */)a0;
- (void)dismissSecondFactorUIWithCompletion:(id /* block */)a0;
- (void)presentBasicLoginUIWithCompletion:(id /* block */)a0;
- (void)presentBiometricOrPasscodeValidationForAppleID:(id)a0 completion:(id /* block */)a1;
- (void)presentLoginAlertWithError:(id)a0 title:(id)a1 message:(id)a2 completion:(id /* block */)a3;
- (void)presentSecondFactorAlertWithError:(id)a0 title:(id)a1 message:(id)a2 completion:(id /* block */)a3;
- (void)presentSecondFactorUIWithCompletion:(id /* block */)a0;

@end
