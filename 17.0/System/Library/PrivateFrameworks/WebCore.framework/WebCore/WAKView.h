@class NSMutableSet;

@interface WAKView : WAKResponder {
    struct _WKViewContext { void /* function */ *notificationCallback; void *notificationUserInfo; void /* function */ *responderCallback; void *responderUserInfo; void /* function */ *willRemoveSubviewCallback; void /* function */ *invalidateGStateCallback; } viewContext;
    struct _WKView { struct _WAKObject { unsigned int x0; struct _WKClassInfo *x1; } x0; struct _WKViewContext *x1; id x2; struct _WKView *x3; struct __CFArray *x4; struct CGPoint { double x0; double x1; } x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; unsigned int x7; float x8; void *x9; } *viewRef;
    NSMutableSet *subviewReferences;
    BOOL _isHidden;
    BOOL _drawsOwnDescendants;
}

+ (id)focusView;
+ (void)_setInterpolationQuality:(int)a0;
+ (id)_wrapperForViewRef:(struct _WKView { struct _WAKObject { unsigned int x0; struct _WKClassInfo *x1; } x0; struct _WKViewContext *x1; id x2; struct _WKView *x3; struct __CFArray *x4; struct CGPoint { double x0; double x1; } x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; unsigned int x7; float x8; void *x9; } *)a0;

- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visibleRect;
- (void)layoutIfNeeded;
- (id)init;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })a0 fromView:(id)a1;
- (void)dealloc;
- (void)willRemoveSubview:(id)a0;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })a0 toView:(id)a1;
- (id)nextResponder;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 toView:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 fromView:(id)a1;
- (void)addSubview:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)removeFromSuperview;
- (id)window;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)needsDisplay;
- (float)scale;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0;
- (void)setHidden:(BOOL)a0;
- (id)description;
- (void)layout;
- (void)setNeedsLayout:(BOOL)a0;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_appendDescriptionToString:(id)a0 atLevel:(int)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)handleEvent:(id)a0;
- (void)setScale:(float)a0;
- (void)setAutoresizingMask:(unsigned int)a0;
- (void)display;
- (void)displayIfNeeded;
- (BOOL)isDescendantOf:(id)a0;
- (void)scrollPoint:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)scrollRectToVisible:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setFrameSize:(struct CGSize { double x0; double x1; })a0;
- (void)setFrameOrigin:(struct CGPoint { double x0; double x1; })a0;
- (unsigned int)autoresizingMask;
- (struct CGSize { double x0; double x1; })convertSize:(struct CGSize { double x0; double x1; })a0 toView:(id)a1;
- (void)displayRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)displayRectIgnoringOpacity:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inContext:(struct CGContext { } *)a1;
- (BOOL)inLiveResize;
- (void)invalidateGState;
- (BOOL)isHiddenOrHasHiddenAncestor;
- (id)lastScrollableAncestor;
- (void)setNeedsDisplay:(BOOL)a0;
- (id)subviews;
- (id)superview;
- (void)viewDidMoveToWindow;
- (void)viewWillDraw;
- (id)previousKeyView;
- (void)setNextKeyView:(id)a0;
- (void)_drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 context:(struct CGContext { } *)a1 lockFocus:(BOOL)a2;
- (BOOL)_handleResponderCall:(int)a0;
- (id)_initWithViewRef:(struct _WKView { struct _WAKObject { unsigned int x0; struct _WKClassInfo *x1; } x0; struct _WKViewContext *x1; id x2; struct _WKView *x3; struct __CFArray *x4; struct CGPoint { double x0; double x1; } x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; unsigned int x7; float x8; void *x9; } *)a0;
- (void)_lockFocusViewInContext:(struct CGContext { } *)a0;
- (BOOL)_selfHandleEvent:(id)a0;
- (void)_setDrawsOwnDescendants:(BOOL)a0;
- (id)_subviewReferences;
- (void)_unlockFocusViewInContext:(struct CGContext { } *)a0;
- (struct _WKView { struct _WAKObject { unsigned int x0; struct _WKClassInfo *x1; } x0; struct _WKViewContext *x1; id x2; struct _WKView *x3; struct __CFArray *x4; struct CGPoint { double x0; double x1; } x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; unsigned int x7; float x8; void *x9; } *)_viewRef;
- (BOOL)accessibilityIsIgnored;
- (void)displayRectIgnoringOpacity:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)frameSizeChanged;
- (void)lockFocus;
- (BOOL)mouse:(struct CGPoint { double x0; double x1; })a0 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (BOOL)needsPanelToBecomeKey;
- (id)nextKeyView;
- (id)nextValidKeyView;
- (id)previousValidKeyView;
- (void)releaseGState;
- (void)setBoundsOrigin:(struct CGPoint { double x0; double x1; })a0;
- (void)setBoundsSize:(struct CGSize { double x0; double x1; })a0;
- (void)unlockFocus;

@end
