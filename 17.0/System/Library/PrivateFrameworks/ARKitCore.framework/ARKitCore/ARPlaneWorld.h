@class NSObject, ARGPUWarper;
@protocol OS_dispatch_semaphore;

@interface ARPlaneWorld : NSObject {
    struct map<std::array<unsigned char, 16>, ARTexturedPlane, std::less<std::array<unsigned char, 16>>, std::allocator<std::pair<const std::array<unsigned char, 16>, ARTexturedPlane>>> { struct __tree<std::__value_type<std::array<unsigned char, 16>, ARTexturedPlane>, std::__map_value_compare<std::array<unsigned char, 16>, std::__value_type<std::array<unsigned char, 16>, ARTexturedPlane>, std::less<std::array<unsigned char, 16>>>, std::allocator<std::__value_type<std::array<unsigned char, 16>, ARTexturedPlane>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::array<unsigned char, 16>, ARTexturedPlane>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<std::array<unsigned char, 16>, std::__value_type<std::array<unsigned char, 16>, ARTexturedPlane>, std::less<std::array<unsigned char, 16>>>> { unsigned long long __value_; } __pair3_; } __tree_; } _planes;
    ARGPUWarper *_gpuWarper;
    struct ARPlaneUpdateQueue { struct queue<std::pair<std::array<unsigned char, 16>, ARTexturedPlane>, std::deque<std::pair<std::array<unsigned char, 16>, ARTexturedPlane>>> { struct deque<std::pair<std::array<unsigned char, 16>, ARTexturedPlane>, std::allocator<std::pair<std::array<unsigned char, 16>, ARTexturedPlane>>> { struct __split_buffer<std::pair<std::array<unsigned char, 16>, ARTexturedPlane> *, std::allocator<std::pair<std::array<unsigned char, 16>, ARTexturedPlane> *>> { void **__first_; void **__begin_; void **__end_; struct __compressed_pair<std::pair<std::array<unsigned char, 16>, ARTexturedPlane> **, std::allocator<std::pair<std::array<unsigned char, 16>, ARTexturedPlane> *>> { void **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::allocator<std::pair<std::array<unsigned char, 16>, ARTexturedPlane>>> { unsigned long long __value_; } __size_; } c; } queue; struct set<std::array<unsigned char, 16>, std::less<std::array<unsigned char, 16>>, std::allocator<std::array<unsigned char, 16>>> { struct __tree<std::array<unsigned char, 16>, std::less<std::array<unsigned char, 16>>, std::allocator<std::array<unsigned char, 16>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::array<unsigned char, 16>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::less<std::array<unsigned char, 16>>> { unsigned long long __value_; } __pair3_; } __tree_; } elements; } _queue;
    NSObject<OS_dispatch_semaphore> *_semaphore;
    unsigned long long _textureSize;
}

+ (struct map<std::array<unsigned char, 16>, std::set<std::array<unsigned char, 16>>, std::less<std::array<unsigned char, 16>>, std::allocator<std::pair<const std::array<unsigned char, 16>, std::set<std::array<unsigned char, 16>>>>> { struct __tree<std::__value_type<std::array<unsigned char, 16>, std::set<std::array<unsigned char, 16>>>, std::__map_value_compare<std::array<unsigned char, 16>, std::__value_type<std::array<unsigned char, 16>, std::set<std::array<unsigned char, 16>>>, std::less<std::array<unsigned char, 16>>>, std::allocator<std::__value_type<std::array<unsigned char, 16>, std::set<std::array<unsigned char, 16>>>>> { void *x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::array<unsigned char, 16>, std::set<std::array<unsigned char, 16>>>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<std::array<unsigned char, 16>, std::__value_type<std::array<unsigned char, 16>, std::set<std::array<unsigned char, 16>>>, std::less<std::array<unsigned char, 16>>>> { unsigned long long x0; } x2; } x0; })findMergedPlanes:(const void *)a0 :(const void *)a1;

- (BOOL)isBusy;
- (id)init;
- (id).cxx_construct;
- (id)_fullDescription;
- (void).cxx_destruct;
- (id)initWithTextureSize:(unsigned long long)a0;
- (struct vector<ARTexturedPlane, std::allocator<ARTexturedPlane>> { struct ARTexturedPlane *x0; struct ARTexturedPlane *x1; struct __compressed_pair<ARTexturedPlane *, std::allocator<ARTexturedPlane>> { struct ARTexturedPlane *x0; } x2; })planes;
- (void)updatePlanes:(const void *)a0 withCameraImage:(struct __CVBuffer { } *)a1 exposureOffset:(float)a2 transform:(struct { void /* unknown type, empty encoding */ x0[4]; })a3 intrinsics:(struct { void /* unknown type, empty encoding */ x0[3]; })a4 synchronous:(BOOL)a5;
- (struct map<std::array<unsigned char, 16>, ARTexturedPlane, std::less<std::array<unsigned char, 16>>, std::allocator<std::pair<const std::array<unsigned char, 16>, ARTexturedPlane>>> { struct __tree<std::__value_type<std::array<unsigned char, 16>, ARTexturedPlane>, std::__map_value_compare<std::array<unsigned char, 16>, std::__value_type<std::array<unsigned char, 16>, ARTexturedPlane>, std::less<std::array<unsigned char, 16>>>, std::allocator<std::__value_type<std::array<unsigned char, 16>, ARTexturedPlane>>> { void *x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::array<unsigned char, 16>, ARTexturedPlane>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<std::array<unsigned char, 16>, std::__value_type<std::array<unsigned char, 16>, ARTexturedPlane>, std::less<std::array<unsigned char, 16>>>> { unsigned long long x0; } x2; } x0; })updatePlanes:(const void *)a0 withCurrentDetections:(const void *)a1 synchronous:(BOOL)a2;

@end
