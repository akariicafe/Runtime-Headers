@interface MCMFileManager : NSObject <MCMFileManager>

+ (id)defaultManager;

- (BOOL)_fixACLOnFD:(int)a0 removeACLFilesec:(struct _filesec { } *)a1 denyDeleteFilesec:(struct _filesec { } *)a2 denyDeleteText:(const char *)a3 path:(const char *)a4 error:(id *)a5;
- (BOOL)symbolicallyLinkURL:(id)a0 toSymlinkTarget:(id)a1 error:(id *)a2;
- (BOOL)standardizeAllSystemContainerACLsAtURL:(id)a0 error:(id *)a1;
- (BOOL)itemAtURL:(id)a0 exists:(BOOL *)a1 isDirectory:(BOOL *)a2 error:(id *)a3;
- (id)createTemporaryDirectoryInDirectoryURL:(id)a0 withNamePrefix:(id)a1 error:(id *)a2;
- (BOOL)copyItemIfExistsAtURL:(id)a0 toURL:(id)a1 error:(id *)a2;
- (void)printDirectoryStructureAtURL:(id)a0;
- (BOOL)dataProtectionClassOfItemAtURL:(id)a0 dataProtectionClass:(int *)a1 error:(id *)a2;
- (BOOL)standardizeACLsAtURL:(id)a0 isSystemContainer:(BOOL)a1 error:(id *)a2;
- (BOOL)_fixFlagsOnFD:(int)a0 FTSENT:(struct _ftsent { struct _ftsent *x0; struct _ftsent *x1; struct _ftsent *x2; long long x3; void *x4; char *x5; char *x6; int x7; int x8; unsigned short x9; unsigned short x10; unsigned long long x11; int x12; unsigned short x13; short x14; unsigned short x15; unsigned short x16; unsigned short x17; struct stat *x18; char x19[1]; } *)a1 stat:(struct stat { int x0; unsigned short x1; unsigned short x2; unsigned long long x3; unsigned int x4; unsigned int x5; int x6; struct timespec { long long x0; long long x1; } x7; struct timespec { long long x0; long long x1; } x8; struct timespec { long long x0; long long x1; } x9; struct timespec { long long x0; long long x1; } x10; long long x11; long long x12; int x13; unsigned int x14; unsigned int x15; int x16; long long x17[2]; } *)a2 error:(id *)a3;
- (id)realPathForURL:(id)a0 isDirectory:(BOOL)a1 error:(id *)a2;
- (BOOL)setDataProtectionClassOfItemAtURL:(id)a0 toDataProtectionClass:(int)a1 ifPredicate:(id /* block */)a2 error:(id *)a3;
- (BOOL)moveItemAtURL:(id)a0 toURL:(id)a1 error:(id *)a2;
- (BOOL)_enumeratePOSIX1eACLEntriesAtURL:(id)a0 error:(id *)a1 usingBlock:(id /* block */)a2;
- (struct _filesec { } *)_removeACLFilesec;
- (struct _acl { } *)_CopyTopLevelSystemContainerACLWithError:(id *)a0;
- (BOOL)moveItemIfExistsAtURL:(id)a0 toURL:(id)a1 error:(id *)a2;
- (BOOL)replaceItemAtDestinationURL:(id)a0 withSourceURL:(id)a1 swapped:(BOOL *)a2 error:(id *)a3;
- (BOOL)_traverseDirectory:(id)a0 error:(id *)a1 withBlock:(id /* block */)a2;
- (BOOL)createDirectoryAtURL:(id)a0 withIntermediateDirectories:(BOOL)a1 mode:(unsigned short)a2 owner:(id)a3 dataProtectionClass:(int)a4 fsNode:(id *)a5 error:(id *)a6;
- (id)_realPathForURL:(id)a0 allowNonExistentPathComponents:(BOOL)a1;
- (BOOL)_fixPOSIXBitsOnFD:(int)a0 FTSENT:(struct _ftsent { struct _ftsent *x0; struct _ftsent *x1; struct _ftsent *x2; long long x3; void *x4; char *x5; char *x6; int x7; int x8; unsigned short x9; unsigned short x10; unsigned long long x11; int x12; unsigned short x13; short x14; unsigned short x15; unsigned short x16; unsigned short x17; struct stat *x18; char x19[1]; } *)a1 stat:(struct stat { int x0; unsigned short x1; unsigned short x2; unsigned long long x3; unsigned int x4; unsigned int x5; int x6; struct timespec { long long x0; long long x1; } x7; struct timespec { long long x0; long long x1; } x8; struct timespec { long long x0; long long x1; } x9; struct timespec { long long x0; long long x1; } x10; long long x11; long long x12; int x13; unsigned int x14; unsigned int x15; int x16; long long x17[2]; } *)a2 error:(id *)a3;
- (BOOL)_fixOwnershipOnFD:(int)a0 FTSENT:(struct _ftsent { struct _ftsent *x0; struct _ftsent *x1; struct _ftsent *x2; long long x3; void *x4; char *x5; char *x6; int x7; int x8; unsigned short x9; unsigned short x10; unsigned long long x11; int x12; unsigned short x13; short x14; unsigned short x15; unsigned short x16; unsigned short x17; struct stat *x18; char x19[1]; } *)a1 stat:(struct stat { int x0; unsigned short x1; unsigned short x2; unsigned long long x3; unsigned int x4; unsigned int x5; int x6; struct timespec { long long x0; long long x1; } x7; struct timespec { long long x0; long long x1; } x8; struct timespec { long long x0; long long x1; } x9; struct timespec { long long x0; long long x1; } x10; long long x11; long long x12; int x13; unsigned int x14; unsigned int x15; int x16; long long x17[2]; } *)a2 statfs:(struct statfs { unsigned int x0; int x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; struct fsid { int x0[2]; } x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; char x12[16]; char x13[1024]; char x14[1024]; unsigned int x15; unsigned int x16[7]; } *)a3 uid:(unsigned int)a4 gid:(unsigned int)a5 error:(id *)a6;
- (BOOL)itemAtURL:(id)a0 exists:(BOOL *)a1 error:(id *)a2;
- (BOOL)checkFileSystemAtURL:(id)a0 isCaseSensitive:(BOOL *)a1 canAtomicSwap:(BOOL *)a2 error:(id *)a3;
- (BOOL)_withEveryoneDenyDeleteACLDoBlock:(id /* block */)a0;
- (BOOL)itemExistsAtURL:(id)a0;
- (id)createTemporaryDirectoryInDirectoryURL:(id)a0 error:(id *)a1;
- (BOOL)_moveItemAtURL:(id)a0 toURL:(id)a1 failIfSrcMissing:(BOOL)a2 error:(id *)a3;
- (BOOL)enableFastDiskUsageForURL:(id)a0 error:(id *)a1;
- (BOOL)itemDoesNotExistAtURL:(id)a0;
- (struct { unsigned long long x0; unsigned long long x1; })fastDiskUsageForURL:(id)a0;
- (BOOL)stripACLFromURL:(id)a0 error:(id *)a1;
- (BOOL)createDirectoryAtURL:(id)a0 withIntermediateDirectories:(BOOL)a1 mode:(unsigned short)a2 owner:(id)a3 error:(id *)a4;
- (BOOL)createDirectoryAtURL:(id)a0 withIntermediateDirectories:(BOOL)a1 mode:(unsigned short)a2 dataProtectionClass:(int)a3 error:(id *)a4;
- (BOOL)standardizeACLsForSystemContainerAtURL:(id)a0 error:(id *)a1;
- (BOOL)writeData:(id)a0 toURL:(id)a1 options:(unsigned long long)a2 mode:(unsigned short)a3 error:(id *)a4;
- (BOOL)checkFileSystemAtURL:(id)a0 supportsPerFileKeys:(BOOL *)a1 error:(id *)a2;
- (BOOL)_CreateSystemUserACEInACL:(struct _acl **)a0 withPermissions:(int)a1 andFlags:(int)a2 withError:(id *)a3;
- (BOOL)removeExclusionFromBackupFromURL:(id)a0 error:(id *)a1;
- (id)fsNodeOfURL:(id)a0 followSymlinks:(BOOL)a1 error:(id *)a2;
- (BOOL)createDirectoryAtURL:(id)a0 withIntermediateDirectories:(BOOL)a1 mode:(unsigned short)a2 error:(id *)a3;
- (BOOL)repairPermissionsAtURL:(id)a0 uid:(unsigned int)a1 gid:(unsigned int)a2 options:(unsigned long long)a3 error:(id *)a4;
- (BOOL)itemAtURL:(id)a0 followSymlinks:(BOOL)a1 exists:(BOOL *)a2 isDirectory:(BOOL *)a3 error:(id *)a4;
- (struct _acl { } *)_CopySystemContainerACLWithNumACEs:(int)a0 isDir:(BOOL)a1 inheritOnly:(BOOL)a2 withError:(id *)a3;
- (id)readDataFromURL:(id)a0 options:(unsigned long long)a1 fsNode:(id *)a2 error:(id *)a3;
- (id)copyDescriptionOfURL:(id)a0;
- (BOOL)createDirectoryAtURL:(id)a0 withIntermediateDirectories:(BOOL)a1 mode:(unsigned short)a2 owner:(id)a3 dataProtectionClass:(int)a4 error:(id *)a5;
- (id)fsSanitizedStringFromString:(id)a0;
- (BOOL)copyItemAtURL:(id)a0 toURL:(id)a1 error:(id *)a2;
- (struct { unsigned long long x0; unsigned long long x1; })diskUsageForURL:(id)a0;
- (id)realPathForURL:(id)a0 ifChildOfURL:(id)a1;
- (id)readDataFromURL:(id)a0 options:(unsigned long long)a1 error:(id *)a2;
- (BOOL)removeItemAtURL:(id)a0 error:(id *)a1;
- (BOOL)setTopLevelSystemContainerACLAtURL:(id)a0 error:(id *)a1;
- (id)targetOfSymbolicLinkAtURL:(id)a0 error:(id *)a1;
- (id)urlsForItemsInDirectoryAtURL:(id)a0 error:(id *)a1;
- (BOOL)_fixPOSIXPermsOnFD:(int)a0 FTSENT:(struct _ftsent { struct _ftsent *x0; struct _ftsent *x1; struct _ftsent *x2; long long x3; void *x4; char *x5; char *x6; int x7; int x8; unsigned short x9; unsigned short x10; unsigned long long x11; int x12; unsigned short x13; short x14; unsigned short x15; unsigned short x16; unsigned short x17; struct stat *x18; char x19[1]; } *)a1 stat:(struct stat { int x0; unsigned short x1; unsigned short x2; unsigned long long x3; unsigned int x4; unsigned int x5; int x6; struct timespec { long long x0; long long x1; } x7; struct timespec { long long x0; long long x1; } x8; struct timespec { long long x0; long long x1; } x9; struct timespec { long long x0; long long x1; } x10; long long x11; long long x12; int x13; unsigned int x14; unsigned int x15; int x16; long long x17[2]; } *)a2 error:(id *)a3;
- (id)_realPathWhatExistsInPath:(id)a0;
- (struct _filesec { } *)_denyDeleteACLFilesecWithACLText:(char **)a0;
- (BOOL)itemAtURL:(id)a0 followSymlinks:(BOOL)a1 exists:(BOOL *)a2 isDirectory:(BOOL *)a3 fsNode:(id *)a4 error:(id *)a5;
- (BOOL)compareVolumeForURL:(id)a0 versusURL:(id)a1 isSameVolume:(BOOL *)a2 error:(id *)a3;
- (BOOL)_copyItemAtURL:(id)a0 toURL:(id)a1 failIfSrcMissing:(BOOL)a2 error:(id *)a3;
- (BOOL)itemExistsAtURL:(id)a0 isDirectory:(BOOL *)a1;
- (BOOL)standardizeOwnershipAtURL:(id)a0 toPOSIXUser:(id)a1 error:(id *)a2;
- (unsigned long long)dataWritingOptionsForFileAtURL:(id)a0;
- (BOOL)_validateSymlink:(id)a0 withStartingDepth:(unsigned int)a1 andEndingDepth:(unsigned int *)a2;
- (BOOL)fixUserPermissionsAtURL:(id)a0 limitToTopLevelURL:(id)a1 error:(id *)a2;

@end
