@class NSArray, NSString, UIFontDescriptor;

@interface UIFont : NSObject <NSCopying, NSSecureCoding>

@property (class, readonly, nonatomic) NSArray *familyNames;
@property (class, readonly) BOOL supportsSecureCoding;

@property (readonly, nonatomic) NSString *textStyleForScaling;
@property (readonly, nonatomic) double pointSizeForScaling;
@property (readonly, nonatomic) double maximumPointSizeAfterScaling;
@property (readonly, nonatomic) NSString *familyName;
@property (readonly, nonatomic) NSString *fontName;
@property (readonly, nonatomic) double pointSize;
@property (readonly, nonatomic) double ascender;
@property (readonly, nonatomic) double descender;
@property (readonly, nonatomic) double capHeight;
@property (readonly, nonatomic) double xHeight;
@property (readonly, nonatomic) double lineHeight;
@property (readonly, nonatomic) double leading;
@property (readonly, nonatomic) UIFontDescriptor *fontDescriptor;

+ (double)buttonFontSize;
+ (id)preferredFontForTextStyle:(id)a0;
+ (id)fontWithName:(id)a0 size:(double)a1;
+ (id)classFallbacksForKeyedArchiver;
+ (id)fontWithFamilyName:(id)a0 traits:(int)a1 size:(double)a2;
+ (id)systemFontOfSize:(double)a0 weight:(double)a1 design:(id)a2;
+ (BOOL)_isSupportedDynamicFontTextStyle:(id)a0;
+ (id)_opticalBoldSystemFontOfSize:(double)a0;
+ (id)_opticalSystemFontOfSize:(double)a0;
+ (id)_preferredFontForTextStyle:(id)a0 design:(id)a1 variant:(long long)a2 compatibleWithTraitCollection:(id)a3;
+ (id)_preferredFontForTextStyle:(id)a0 maximumContentSizeCategory:(id)a1;
+ (id)_preferredFontForTextStyle:(id)a0 maximumPointSize:(double)a1 compatibleWithTraitCollection:(id)a2;
+ (id)_preferredFontForTextStyle:(id)a0 variant:(long long)a1;
+ (double)_readableWidth;
+ (void)_setButtonFontSize:(double)a0;
+ (void)_setLabelFontSize:(double)a0;
+ (void)_setSmallSystemFontSize:(double)a0;
+ (void)_setSystemFontSize:(double)a0;
+ (id)_ultraLightSystemFontOfSize:(double)a0;
+ (id)boldSystemFontOfSize:(double)a0;
+ (id)defaultFontForTextStyle:(id)a0;
+ (id)fontNamesForFamilyName:(id)a0;
+ (id)fontWithDescriptor:(id)a0 size:(double)a1;
+ (id)fontWithName:(id)a0 size:(double)a1 traits:(int)a2;
+ (double)labelFontSize;
+ (id)monospacedDigitSystemFontOfSize:(double)a0 weight:(double)a1;
+ (id)monospacedSystemFontOfSize:(double)a0 weight:(double)a1;
+ (id)preferredFontForTextStyle:(id)a0 compatibleWithTraitCollection:(id)a1;
+ (double)smallSystemFontSize;
+ (id)systemFontOfSize:(double)a0;
+ (id)systemFontOfSize:(double)a0 weight:(double)a1;
+ (double)systemFontSize;
+ (id)_lightSystemFontOfSize:(double)a0;
+ (id)_preferredFontForTextStyle:(id)a0 weight:(double)a1;
+ (id)_preferredFontForTextStyle:(id)a0 variant:(long long)a1 maximumContentSizeCategory:(id)a2;
+ (id)_systemFontOfSize:(double)a0 width:(id)a1 traits:(int)a2;
+ (id)userFontOfSize:(double)a0;
+ (void)_evictAllItemsFromFontAndFontDescriptorCaches;
+ (id)_fontWithDescriptor:(id)a0 size:(double)a1 textStyleForScaling:(id)a2 pointSizeForScaling:(double)a3 maximumPointSizeAfterScaling:(double)a4 forIB:(BOOL)a5 legibilityWeight:(long long)a6;
+ (id)_fontWithName:(id)a0 size:(double)a1;
+ (double)_pointSize:(double)a0 scaledLikeTextStyle:(id)a1 maximumPointSize:(double)a2 compatibleWithTraitCollection:(id)a3;
+ (double)_pointSize:(double)a0 scaledLikeTextStyle:(id)a1 maximumPointSize:(double)a2 compatibleWithTraitCollection:(id)a3 roundSize:(BOOL)a4;
+ (id)_preferredFontForTextStyle:(id)a0 addingSymbolicTraits:(unsigned int)a1;
+ (id)_preferredFontForTextStyle:(id)a0 addingSymbolicTraits:(unsigned int)a1 design:(id)a2 weight:(double)a3;
+ (id)_preferredFontForTextStyle:(id)a0 addingSymbolicTraits:(unsigned int)a1 weight:(double)a2;
+ (id)_preferredFontForTextStyle:(id)a0 design:(id)a1 variant:(long long)a2;
+ (id)_preferredFontForTextStyle:(id)a0 design:(id)a1 variant:(long long)a2 maximumContentSizeCategory:(id)a3 compatibleWithTraitCollection:(id)a4;
+ (id)_preferredFontForTextStyle:(id)a0 design:(id)a1 variant:(long long)a2 maximumContentSizeCategory:(id)a3 compatibleWithTraitCollection:(id)a4 pointSize:(double)a5 pointSizeForScaling:(double)a6;
+ (id)_preferredFontForTextStyle:(id)a0 design:(id)a1 weight:(double)a2;
+ (id)_preferredFontForTextStyle:(id)a0 design:(id)a1 weight:(double)a2 maximumContentSizeCategory:(id)a3 compatibleWithTraitCollection:(id)a4;
+ (id)_preferredFontForTextStyle:(id)a0 design:(id)a1 weight:(id)a2 symbolicTraits:(unsigned int)a3 maximumContentSizeCategory:(id)a4 compatibleWithTraitCollection:(id)a5 pointSize:(double)a6 pointSizeForScaling:(double)a7;
+ (id)_preferredFontForTextStyle:(id)a0 maximumContentSizeCategory:(id)a1 compatibleWithTraitCollection:(id)a2;
+ (id)_sharedFontCache;
+ (id)_sharedZeroPointFont;
+ (id)_supportedDynamicFontStyles;
+ (id)_systemFontsOfSize:(double)a0 traits:(int)a1;
+ (id)_thinSystemFontOfSize:(double)a0;
+ (id)fontWithMarkupDescription:(id)a0;
+ (id)ib_preferredFontForTextStyle:(id)a0;
+ (id)italicSystemFontOfSize:(double)a0;
+ (id)preferredFontForUsage:(id)a0;
+ (id)preferredFontForUsage:(id)a0 contentSizeCategoryName:(id)a1;
+ (id)systemFontOfSize:(double)a0 traits:(int)a1;
+ (id)systemFontOfSize:(double)a0 weight:(double)a1 width:(double)a2;

- (double)_scaledValueForValue:(double)a0;
- (unsigned long long)renderingMode;
- (BOOL)isVertical;
- (id)init;
- (void)encodeWithCoder:(id)a0;
- (unsigned long long)numberOfGlyphs;
- (Class)classForCoder;
- (id)description;
- (void)applyToGraphicsContext:(id)a0;
- (id)_textStyle;
- (int)traits;
- (id)initWithCoder:(id)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)_familyName;
- (double)underlinePosition;
- (double)underlineThickness;
- (double)_bodyLeading;
- (id)_fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:(id)a0;
- (id)_fontAdjustedForCurrentContentSizeCategory;
- (id)_fontScaledLikeTextStyle:(id)a0 maximumPointSize:(double)a1 compatibleWithTraitCollection:(id)a2 forIB:(BOOL)a3;
- (double)_leading;
- (double)_scaledValueForValue:(double)a0 useLanguageAwareScaling:(BOOL)a1;
- (id)fontWithSize:(double)a0;
- (BOOL)isSystemFont;
- (id)markupDescription;
- (double)readableWidth;
- (void)setInContext:(struct CGContext { } *)a0;
- (struct __CTFont { } *)CTFont;
- (struct CGFont { } *)_backingCGSFont;
- (BOOL)_getLatin1Glyphs:(const unsigned short **)a0 advanceWidths:(const double **)a1;
- (BOOL)_hasColorGlyphs;
- (BOOL)_isHiraginoFont;
- (id)initWithFamilyName:(id)a0 traits:(int)a1 size:(double)a2;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })_textMatrixTransformForContext:(id)a0;
- (BOOL)__isSystemFont;
- (id)_alternateSystemFonts;
- (double)_ascenderDeltaForBehavior:(long long)a0;
- (double)_baseLineHeightForFont:(BOOL)a0;
- (unsigned int)_defaultGlyphForChar:(unsigned short)a0;
- (double)_defaultLineHeightForUILayout;
- (id)_fontScaledByScaleFactor:(double)a0;
- (BOOL)_isDefaultFace;
- (BOOL)_isTextStyleFont;
- (BOOL)_isUIFont;
- (id)_kernOverride;
- (double)_totalAdvancementForNativeGlyphs:(const unsigned short *)a0 count:(long long)a1;
- (struct CGSize { double x0; double x1; })advancementForGlyph:(unsigned short)a0;
- (id)bestMatchingFontForCharacters:(const unsigned short *)a0 length:(unsigned long long)a1 attributes:(id)a2 actualCoveredLength:(unsigned long long *)a3;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundingRectForFont;
- (id)coveredCharacterSet;
- (id)familyNameForCSSFontFamilyValueForWebKit:(BOOL)a0;
- (void)getAdvancements:(struct CGSize { double x0; double x1; } *)a0 forCGGlyphs:(const unsigned short *)a1 count:(unsigned long long)a2;
- (void)getBoundingRects:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0 forCGGlyphs:(const unsigned short *)a1 count:(unsigned long long)a2;
- (unsigned long long)getCaretPositions:(double *)a0 forGlyph:(unsigned int)a1 maximumLength:(unsigned long long)a2;
- (void)getVerticalOriginTranslations:(struct CGSize { double x0; double x1; } *)a0 forCGGlyphs:(const unsigned short *)a1 count:(unsigned long long)a2;
- (unsigned short)glyphWithName:(id)a0;
- (id)htmlMarkupDescription;
- (unsigned int)hyphenGlyphForLocale:(id)a0;
- (id)initWithMarkupDescription:(id)a0;
- (id)initWithName:(id)a0 size:(double)a1;
- (BOOL)isFixedPitch;
- (BOOL)isIBFontMetricsScaledFont;
- (BOOL)isIBTextStyleFont;
- (id)lastResortFont;
- (id)markupDescriptionForWebKit:(BOOL)a0 pointSize:(float)a1 sizeUnit:(id)a2;
- (unsigned long long)mostCompatibleStringEncoding;
- (id)screenFontWithRenderingMode:(unsigned long long)a0;
- (id)verticalFont;

@end
