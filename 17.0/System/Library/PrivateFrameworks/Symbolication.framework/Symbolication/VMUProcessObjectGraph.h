@class NSDate, VMUSymbolStore, VMUDebugTimer, NSArray, VMUTaskMemoryScanner, VMUNodeToStringMap, NSDictionary, VMUClassInfoMap, NSString, VMURangeToStringMap, VMUGraphStackLogReader;

@interface VMUProcessObjectGraph : VMUObjectGraph <VMUCommonGraphInterface> {
    NSArray *_regions;
    NSArray *_zoneNames;
    NSString *_processName;
    NSString *_processDescriptionString;
    NSString *_binaryImagesDescription;
    VMURangeToStringMap *_threadNameRanges;
    VMURangeToStringMap *_binarySectionNameRanges;
    VMURangeToStringMap *_regionSymbolNameRanges;
    BOOL _gotObjcClassStructureRanges;
    NSDictionary *_pthreadOffsets;
    void *_userMarked;
}

@property (retain, nonatomic) NSDate *snapshotDate;
@property (nonatomic) unsigned long long snapshotMachTime;
@property (nonatomic) unsigned long long physicalFootprint;
@property (nonatomic) unsigned long long physicalFootprintPeak;
@property (retain, nonatomic) NSDictionary *ledger;
@property (nonatomic) unsigned int idleExitStatus;
@property (retain, nonatomic) NSDictionary *srcAddressToExtraAutoreleaseCountDict;
@property (nonatomic) BOOL isTranslatedByRosetta;
@property (copy, nonatomic) NSArray *backtraces;
@property (retain, nonatomic) VMUSymbolStore *symbolStore;
@property (nonatomic) struct _VMURange { unsigned long long location; unsigned long long length; } dyldSharedCacheRange;
@property (weak, nonatomic) VMUTaskMemoryScanner *scanner;
@property (retain, nonatomic) VMUDebugTimer *debugTimer;
@property (retain, nonatomic) VMUGraphStackLogReader *stackLogReader;
@property (nonatomic) BOOL showRawClassNames;
@property (nonatomic) BOOL showsPhysFootprint;
@property (nonatomic) unsigned int objectContentLevel;
@property (nonatomic) unsigned int objectContentLevelForNodeLabels;
@property (nonatomic) unsigned long long serializationOptions;
@property (readonly, nonatomic) VMUNodeToStringMap *nodeLabels;
@property (readonly, nonatomic) int pid;
@property (readonly, nonatomic) BOOL is64bit;
@property (readonly, nonatomic) unsigned int vmPageSize;
@property (readonly, nonatomic) unsigned int kernelPageSize;
@property (readonly, nonatomic) VMUClassInfoMap *realizedClasses;
@property (readonly, nonatomic) BOOL hasClassInfosDerivedFromStackBacktraces;
@property (readonly, nonatomic) unsigned int zoneCount;
@property (readonly, nonatomic) unsigned int regionCount;
@property (readonly, nonatomic) unsigned int nodeCount;
@property (readonly, nonatomic) unsigned int nodeNamespaceSize;
@property (readonly, nonatomic) NSString *processName;
@property (readonly, nonatomic) NSString *processDescriptionString;
@property (readonly, nonatomic) NSString *executablePath;
@property (readonly, nonatomic) NSString *binaryImagesDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)createWithTask:(unsigned int)a0;

- (void)resymbolicatePrivateMaps;
- (void)setProcessDescriptionString:(id)a0;
- (void)markReachableNodesFromRoots:(void *)a0 inMap:(void *)a1;
- (void)setLabel:(id)a0 forNode:(unsigned int)a1;
- (id)_detailedNodeOffsetDescription:(struct { unsigned long long x0; unsigned int x1; unsigned long long x2; })a0 withSourceNode:(unsigned int)a1 destinationNode:(unsigned int)a2 alignmentSpacing:(unsigned int)a3;
- (void)dealloc;
- (BOOL)hasLabelsForNodes;
- (void)markReachableNodesFromRoots:(void *)a0 inMap:(void *)a1 options:(unsigned int)a2;
- (void)markLeafNodes:(void *)a0;
- (void)setBinaryImagesDescription:(id)a0;
- (void)resymbolicateNonObjectsUsingStackBacktrace;
- (BOOL)nodeIsAutoreleasePoolContentPage:(unsigned int)a0;
- (BOOL)nodeDetailIsAutoreleasePoolContentPage:(struct { unsigned long long x0; unsigned long x1 : 60; unsigned char x2 : 4; id x3; })a0;
- (void)setRegionSymbolName:(id)a0 forRange:(struct _VMURange { unsigned long long x0; unsigned long long x1; })a1;
- (id)referenceDescription:(struct { unsigned long long x0; unsigned int x1; unsigned long long x2; })a0 withSourceNode:(unsigned int)a1 destinationNode:(unsigned int)a2 alignmentSpacing:(unsigned int)a3;
- (id)zoneNameForIndex:(unsigned int)a0;
- (struct _VMURange { unsigned long long x0; unsigned long long x1; })rangeForSymbolName:(id)a0 inRegion:(id)a1;
- (void)removeWeakEdges;
- (id)labelForNode:(unsigned int)a0;
- (unsigned long long)ledgerValueForKey:(id)a0 keyExists:(BOOL *)a1;
- (id)initWithPid:(int)a0 nodes:(struct _VMUBlockNode { unsigned long long x0; unsigned char x1 : 3; unsigned char x2 : 2; unsigned long x3 : 36; unsigned int x4 : 23; } *)a1 nodeCount:(unsigned int)a2 zoneNames:(id)a3 classInfoMap:(id)a4 regions:(id)a5 pthreadOffsets:(id)a6 userMarked:(void *)a7;
- (struct _VMURange { unsigned long long x0; unsigned long long x1; })regionSymbolRangeContainingAddress:(unsigned long long)a0;
- (struct _CSArchitecture { int x0; int x1; })parseMacOSArchitectureFromProcessDescription;
- (void)setProcessName:(id)a0;
- (id)sampleBacktracesString;
- (id)_descriptionForRegionAddress:(unsigned long long)a0 withOffset:(unsigned long long)a1 showSegment:(BOOL)a2;
- (id)regionSymbolNameForAddress:(unsigned long long)a0;
- (id)nodeDescription:(unsigned int)a0;
- (void)setBinarySectionName:(id)a0 forRange:(struct _VMURange { unsigned long long x0; unsigned long long x1; })a1;
- (id)vmuVMRegionForAddress:(unsigned long long)a0;
- (id)nodeDescription:(unsigned int)a0 withOffset:(unsigned long long)a1;
- (void)setThreadName:(id)a0 forRange:(struct _VMURange { unsigned long long x0; unsigned long long x1; })a1;
- (id)shortNodeDescription:(unsigned int)a0;
- (void)setUserMarked:(void *)a0;
- (unsigned int)enumerateReferencesFromDataRegion:(id)a0 atGlobalSymbol:(id)a1 withBlock:(id /* block */)a2;
- (id)nodeOffsetDescription:(struct { unsigned long long x0; unsigned int x1; unsigned long long x2; })a0 withSourceNode:(unsigned int)a1 destinationNode:(unsigned int)a2;
- (void).cxx_destruct;
- (void)archiveDictionaryRepresentation:(id)a0 options:(unsigned long long)a1;
- (id)binarySectionNameForAddress:(unsigned long long)a0;
- (id)nodeDescription:(unsigned int)a0 withOffset:(unsigned long long)a1 showLabel:(BOOL)a2;
- (void)refineTypesWithOverlay:(id)a0;
- (void *)contentForNode:(unsigned int)a0;
- (void)markRootNodes:(void *)a0;
- (void)_generateSymbolStoreFromExistingGraph;
- (struct _VMURange { unsigned long long x0; unsigned long long x1; })binarySectionRangeContainingAddress:(unsigned long long)a0;
- (BOOL)resymbolicateWithDsymPath:(id)a0 libraryNames:(id)a1 all:(BOOL)a2 progress:(id)a3 showDebugInfo:(BOOL)a4 error:(id *)a5;
- (void)refineEdges:(unsigned int)a0 withOptions:(unsigned int)a1 markingInvalid:(void *)a2;
- (unsigned int)enumerateRegionsWithBlock:(id /* block */)a0;
- (void)_reorderLabelsWithNodeNameMap:(unsigned int *)a0;
- (id)shortLabelForNode:(unsigned int)a0;
- (id)nodeDescription:(unsigned int)a0 withDestinationNode:(unsigned int)a1 referenceInfo:(struct { unsigned long long x0; unsigned int x1; unsigned long long x2; })a2;
- (id)leakedNodesGraph;
- (void)_renameWithNodeMap:(unsigned int *)a0 nodeNamespace:(unsigned int)a1 edgeMap:(unsigned int *)a2 edgeNamespace:(unsigned int)a3;
- (id)threadNameForAddress:(unsigned long long)a0;
- (unsigned int)nodeReferencedFromDataRegion:(id)a0 byGlobalSymbol:(id)a1;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void *)copyUserMarked;
- (void)_deriveObjcClassStructureRanges;
- (id)vmuVMRegionForNode:(unsigned int)a0;
- (id)initWithArchived:(id)a0 version:(long long)a1 options:(unsigned long long)a2 diskLogs:(id)a3 error:(id *)a4;

@end
