@class NSString;

@interface VMUTaskMemoryCache : NSObject {
    unsigned long long _taskType;
    unsigned int _taskPort;
    BOOL _taskIs64Bit;
    BOOL _taskIsTranslated;
    BOOL _taskIsSelf;
    NSString *_corePath;
    int _pid;
    unsigned int _dyldPlatform;
    BOOL _dyldPlatformIsValid;
    BOOL _haveAttemptedDyldPlatformFetch;
}

@property (readonly, nonatomic) struct mapped_memory_t { } *memoryRegions;
@property (copy, nonatomic) id /* block */ regionInfoBlock;

+ (id)taskMemoryCacheForTask:(unsigned int)a0;
+ (BOOL)taskIs64Bit:(unsigned int)a0;

- (unsigned int)taskPort;
- (int)getCoreFileLedgerWiredMem:(unsigned long long *)a0;
- (int)getCoreFileLedgerAlternateAccounting:(unsigned long long *)a0;
- (void)dealloc;
- (int)getCoreFileLedgerNetworkNonvolatileCompressed:(unsigned long long *)a0;
- (int)machVMPageRangeQueryWithAddress:(unsigned long long)a0 size:(unsigned long long)a1 dispositions:(unsigned long long)a2 dispositionsCount:(unsigned long long *)a3 usePhysFootprintAccounting:(BOOL)a4;
- (int)readPointerAt:(unsigned long long)a0 value:(unsigned long long *)a1;
- (int)getPlatform:(unsigned int *)a0;
- (int)getCoreFileLedgerNetworkNonvolatile:(unsigned long long *)a0;
- (int)getCoreFileLedgerInternal:(unsigned long long *)a0;
- (int)getCoreFileLedgerNeuralFootprintCompressed:(unsigned long long *)a0;
- (void)flushMemoryCache;
- (id)initWithTask:(unsigned int)a0;
- (const struct mapped_region_node_t { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned int x3; } *)findMappedAddress:(unsigned long long)a0 size:(unsigned long long)a1;
- (void)printMemoryCache;
- (BOOL)taskIsTranslated;
- (int)getCoreFileLedgerTaggedFootprintCompressed:(unsigned long long *)a0;
- (int)getCoreFileLedgerMediaFootprint:(unsigned long long *)a0;
- (unsigned long long)tryPeekAtAddress:(unsigned long long)a0 outPtr:(void **)a1;
- (int)getCoreFileLedgerPageTable:(unsigned long long *)a0;
- (int)getCoreFileLedgerAlternateAccountingCompressed:(unsigned long long *)a0;
- (int)getCoreFileDirtyFlags:(int *)a0;
- (id)coreFileProcPath;
- (int)getCoreFileLedgerGraphicsFootprint:(unsigned long long *)a0;
- (int)getCoreFileArgsLen:(int *)a0;
- (int)getCoreFileLedgerIokitMapped:(unsigned long long *)a0;
- (int)getCoreFileLedgerGraphicsFootprintCompressed:(unsigned long long *)a0;
- (id)coreFileParentProcPath;
- (int)getCoreFileLedgerPhysFootprint:(unsigned long long *)a0;
- (int)getCoreFileLedgerTaggedFootprint:(unsigned long long *)a0;
- (int)getCoreFileProcArgc:(int *)a0;
- (int)getCoreFileLedgerInternalCompressed:(unsigned long long *)a0;
- (int)getCoreFileLedgerPhysFootprintLifetimeMax:(unsigned long long *)a0;
- (int)threadGetState:(unsigned int)a0 withFlavor:(int)a1 oldState:(unsigned int *)a2 oldStateCnt:(unsigned int *)a3;
- (int)mapAddress:(unsigned long long)a0 size:(unsigned long long)a1;
- (int)mapAddress:(unsigned long long)a0 size:(unsigned long long)a1 returnedAddress:(unsigned long long *)a2 returnedSize:(unsigned long long *)a3;
- (int)getCoreFileProcStarttimeSec:(unsigned long long *)a0;
- (int)getCoreFileLedgerNeuralFootprint:(unsigned long long *)a0;
- (int)getCoreFileProcFlags:(unsigned int *)a0;
- (void).cxx_destruct;
- (BOOL)isSimulator;
- (int)getCoreFileLedgerPurgeableNonvolatileCompressed:(unsigned long long *)a0;
- (int)machVMRegionRecurseSubmapShortInfo64OnAddress:(unsigned long long *)a0 size:(unsigned long long *)a1 nestingDepth:(unsigned int *)a2 info:(struct vm_region_submap_short_info_64 { int x0; int x1; unsigned int x2; unsigned long long x3; unsigned int x4; unsigned int x5; unsigned short x6; unsigned char x7; unsigned char x8; int x9; int x10; unsigned int x11; unsigned short x12; } *)a3;
- (int)stopPeeking;
- (int)machVMPurgableControlWithAddress:(unsigned long long)a0 control:(int)a1 state:(int *)a2;
- (BOOL)copyRange:(struct _VMURange { unsigned long long x0; unsigned long long x1; })a0 to:(void *)a1;
- (int)getCoreFilePid:(int *)a0;
- (int)unmapAddress:(unsigned long long)a0 size:(unsigned long long)a1 returnedAddress:(unsigned long long *)a2 returnedSize:(unsigned long long *)a3;
- (id)coreFileParentProcName;
- (int)getCoreFileUserstack:(unsigned long long *)a0;
- (int)procRegionFileNameForAddress:(unsigned long long)a0 buffer:(void *)a1 bufferSize:(unsigned int)a2;
- (int)taskThreadsWithList:(unsigned int **)a0 listCnt:(unsigned int *)a1;
- (id)initWithCoreFile:(id)a0;
- (int)startPeeking;
- (int)getCoreFileLedgerMediaFootprintCompressed:(unsigned long long *)a0;
- (int)getCoreFileLedgerPurgeableNonvolatile:(unsigned long long *)a0;
- (const char *)peekStringAtAddress:(unsigned long long)a0;
- (struct _CSTypeRef { unsigned long long x0; unsigned long long x1; })createSymbolicatorWithFlags:(unsigned int)a0 andNotification:(id /* block */)a1;
- (BOOL)representsCore;
- (BOOL)isDriverKit;
- (int)getCoreFilePPid:(int *)a0;
- (int)getCoreFileProcStarttimeUSec:(unsigned long long *)a0;
- (BOOL)coreHasInfoRequriedForMemoryAnalysis;
- (id)coreFileProcName;
- (int)getCoreFileUdataPointersIntoBuffer:(unsigned long long *)a0 count:(unsigned long long *)a1;
- (int)getCoreFileCPUType:(int *)a0;
- (int)peekAtAddress:(unsigned long long)a0 size:(unsigned long long)a1 returnsBuf:(void **)a2;
- (void)enumerateMemoryCache:(id /* block */)a0;

@end
