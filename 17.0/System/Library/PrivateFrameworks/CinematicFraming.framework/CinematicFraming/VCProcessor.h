@class VCCamera, CinematicFramingSessionInputMetadata, NSString, VCShaders, CinematicFramingSession, NSDictionary, VCTuningParameters, VCCameraAnimator, FigMetalContext, CMIExternalMemoryResource;
@protocol MTLCommandQueue, VCProcessorCameraSwitchingDelegate;

@interface VCProcessor : NSObject <MetalImageBufferProcessor> {
    FigMetalContext *_context;
    VCShaders *_shaders;
    VCTuningParameters *_tuning;
    unsigned int _processingType;
    BOOL _framingModeJustChanged;
    struct { void /* unknown type, empty encoding */ panTiltAngles; float videoZoomFactor; } _manualFramingState;
    void /* unknown type, empty encoding */ _rotationCursorPrev;
    void /* unknown type, empty encoding */ _rotationCursorCurr;
    VCCameraAnimator *_outputCameraAnimator;
    VCCamera *_auxiliaryStreamCamera;
    id<VCProcessorCameraSwitchingDelegate> _cameraSwitchingDelegate;
    struct __CVMetalTextureCache { } *_cvMetalTextureCacheRef;
}

@property (nonatomic) BOOL centerStagePassthrough;
@property (nonatomic) struct { int width; int height; } outputDimensions;
@property (nonatomic) struct __CVBuffer { } *inputPixelBuffer;
@property (retain, nonatomic) CinematicFramingSessionInputMetadata *inputMetadata;
@property (retain, nonatomic) VCCamera *inputCamera;
@property (nonatomic) struct __CVBuffer { } *outputPixelBuffer;
@property (retain, nonatomic) VCCamera *outputCamera;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } outputROI;
@property (nonatomic) BOOL orientationCorrectionEnabled;
@property (nonatomic) BOOL rollCorrectionEnabled;
@property (nonatomic) BOOL confineOutputCamera;
@property (nonatomic) BOOL fisheyeEffectEnabled;
@property (nonatomic) float videoZoomFactor;
@property (nonatomic) BOOL attachMetadataToOutputPixelBuffer;
@property (readonly, nonatomic) BOOL outputCameraResetCompleted;
@property (readonly, nonatomic) BOOL oneShotFramingCompleted;
@property (nonatomic) float manualFramingDefaultVideoZoomFactor;
@property (readonly, nonatomic) NSDictionary *manualFramingStateMetadata;
@property (nonatomic) BOOL autoFramingEnabled;
@property (nonatomic) BOOL autoRestoreManualFramingState;
@property (nonatomic) float autoFramingFOVLimit;
@property (readonly, nonatomic) CinematicFramingSession *framingSession;
@property (retain, nonatomic) id<MTLCommandQueue> metalCommandQueue;
@property (readonly, nonatomic) BOOL supportsExternalMemoryResource;
@property (retain, nonatomic) CMIExternalMemoryResource *externalMemoryResource;
@property (retain, nonatomic) NSDictionary *tuningParameters;
@property (retain, nonatomic) NSDictionary *cameraInfoByPortType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })warpCGRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 fromCamera:(id)a1 toCamera:(id)a2;
+ (struct CGPoint { double x0; double x1; })warpCGPoint:(struct CGPoint { double x0; double x1; })a0 fromCamera:(id)a1 toCamera:(id)a2;

- (int)resetState;
- (int)prewarm;
- (id)init;
- (int)finishProcessing;
- (int)process;
- (void).cxx_destruct;
- (int)prepareToProcess:(unsigned int)a0;
- (int)purgeResources;
- (int)setup;
- (void)adjustToFrameCurrentScene;
- (void)continueRotatingToPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)resetOutputCamera;
- (void)startRotatingFromPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })warpCGRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (int)_render;
- (id)_bindCVPixleBuffer:(struct __CVBuffer { } *)a0 usage:(unsigned long long)a1;
- (void)_cacheManualFramingState;
- (id)_cachedTexturesFromPixelBuffer:(struct __CVBuffer { } *)a0 usage:(unsigned long long)a1;
- (int)_confineOutputCameraToInputCameraFrustum:(BOOL)a0;
- (int)_createRenderTargetForOutputLumaTex:(id)a0 outputChromaTex:(id)a1 renderTargetLumaTex:(id *)a2 renderTargetChromaTex:(id *)a3;
- (int)_encodeDownsample:(id)a0 inputLumaTex:(id)a1 inputChromaTex:(id)a2 outputLumaTex:(id)a3 outputChromaTex:(id)a4;
- (int)_encodeRender:(id)a0 inputLumaTex:(id)a1 inputChromaTex:(id)a2 outputLumaTex:(id)a3 outputChromaTex:(id)a4;
- (int)_encodeRenderTargetResolve:(id)a0 renderTargetLumaTex:(id)a1 renderTargetChromaTex:(id)a2 outputLumaTex:(id)a3 outputChromaTex:(id)a4;
- (int)_fillRenderParams:(struct { struct { struct { void /* unknown type, empty encoding */ x0[3]; } x0; struct { void /* unknown type, empty encoding */ x0[3]; } x1; float x2; struct { void /* unknown type, empty encoding */ x0[4]; } x3; struct { void /* unknown type, empty encoding */ x0[4]; } x4; BOOL x5; int x6; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x7; int x8; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x9; float x10; } x0; struct { struct { void /* unknown type, empty encoding */ x0[3]; } x0; struct { void /* unknown type, empty encoding */ x0[3]; } x1; float x2; struct { void /* unknown type, empty encoding */ x0[4]; } x3; struct { void /* unknown type, empty encoding */ x0[4]; } x4; BOOL x5; int x6; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x7; int x8; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x9; float x10; } x1; struct { } x2; struct { } x3; } *)a0;
- (float)_getBaseZoomFactor:(id)a0;
- (void)_getEquivalentOutputCameraFocalLength:(void *)a0 rotation:(void *)a1 forViewport:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (void /* unknown type, empty encoding */)_getGravityVectorForCamera:(id)a0 fromMetadata:(id)a1;
- (int)_loadTuningParameters;
- (unsigned long long)_metalTextureFormatFromPixelBufferFormat:(unsigned int)a0 forPlane:(unsigned int)a1;
- (int)_processStill;
- (int)_processVideo;
- (void)_restoreManualFramingState;
- (int)_setOutputPixelBufferAttachments;
- (int)_updateAutoFraming;
- (int)_updateCamera:(id)a0 withMetadata:(id)a1;
- (int)_updateManualFraming;
- (int)_updateManualFramingStateMetadata;
- (int)_updateOutputCameraAnimation;
- (void)_updateOutputCameraFisheyeEffect;
- (void)_updateOutputCameraFocalLengthWithVideoZoomFactor;
- (int)_updateOutputCameraForRollCorrection;
- (void)_updateOutputCameraRotationWithCursor;
- (void)_updateVideoZoomFactorFromInputCamera:(id)a0 toOutputCamera:(id)a1;
- (id)auxiliaryStreamCamera;
- (id)cameraSwitchingDelegate;
- (int)checkCameraSwitchingWithAuxilaryStreamMetadata:(id)a0;
- (void)setAuxilaryStreamCamera:(id)a0;
- (void)setCameraSwitchingDelegate:(id)a0;
- (struct CGPoint { double x0; double x1; })warpCGPoint:(struct CGPoint { double x0; double x1; })a0;

@end
