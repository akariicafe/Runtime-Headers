@class UIView, LUILogFilterViewController, NSArray, UIPageViewController, NSDate, LUILogViewerView, NSString, LUILogContentViewController, LUILogViewerAssistiveTouch, NSMutableSet, NSMutableArray, UIPanGestureRecognizer;
@protocol LUILogViewerControllerDelegate;

@interface LUILogViewerController : NSObject <LUILogViewerViewDelegate, UIPageViewControllerDataSource, UIPageViewControllerDelegate, LUILogFilterViewControllerDelegate, UISearchBarDelegate, LUILogContentViewControllerDelegate, UIGestureRecognizerDelegate>

@property (retain, nonatomic) LUILogViewerView *logViewerView;
@property (retain, nonatomic) LUILogViewerAssistiveTouch *assistiveTouch;
@property (weak, nonatomic) UIView *baseView;
@property (retain, nonatomic) LUILogContentViewController *logContentViewController;
@property (retain, nonatomic) LUILogFilterViewController *logFilterViewController;
@property (retain, nonatomic) UIPageViewController *pageViewController;
@property (retain, nonatomic) NSArray *predicates;
@property (nonatomic) double logInterval;
@property (retain, nonatomic) NSDate *lastLogDate;
@property (retain, nonatomic) NSDate *firstLogDate;
@property (retain, nonatomic) NSMutableSet *logMinutesSet;
@property (retain, nonatomic) NSMutableArray *logMinutesArray;
@property (nonatomic) BOOL isStreaming;
@property (retain, nonatomic) NSArray *highlightRanges;
@property (nonatomic) long long currentHighlightIndex;
@property (nonatomic) BOOL isFetchingLogs;
@property (retain, nonatomic) UIPanGestureRecognizer *panGesture;
@property (nonatomic) BOOL outsideKeyboardIsShowing;
@property (weak, nonatomic) id<LUILogViewerControllerDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)handlePan:(id)a0;
- (id)init;
- (BOOL)searchBarShouldBeginEditing:(id)a0;
- (void)dealloc;
- (void)_updateHighlight;
- (void)searchBar:(id)a0 textDidChange:(id)a1;
- (BOOL)gestureRecognizerShouldBegin:(id)a0;
- (void)keyboardWillShow:(id)a0;
- (void)keyboardWillHide:(id)a0;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void).cxx_destruct;
- (void)searchBarSearchButtonClicked:(id)a0;
- (void)setup;
- (void)pageViewController:(id)a0 didFinishAnimating:(BOOL)a1 previousViewControllers:(id)a2 transitionCompleted:(BOOL)a3;
- (id)pageViewController:(id)a0 viewControllerAfterViewController:(id)a1;
- (id)pageViewController:(id)a0 viewControllerBeforeViewController:(id)a1;
- (void)_stopStreaming;
- (void)_startStreamLog;
- (void)logViewerLeftCaretButtonTapped:(id)a0;
- (void)logViewerViewCloseButtonTapped:(id)a0;
- (BOOL)_performSearch:(id)a0;
- (void)logViewerViewClearButtontapped:(id)a0;
- (id)_attributedLogStringFrom:(id)a0 fontSize:(double)a1;
- (void)_cleanupHighlight;
- (void)_cleanupLogs;
- (void)_decreaseCurrentHighlightIndex;
- (void)_dismissLogViewerView;
- (id)_getLogsFromDate:(id)a0 predicate:(id)a1 duplicateHandler:(id /* block */)a2;
- (void)_grabLogAndUpdateTextView;
- (void)_increaseCurrentHighlightIndex;
- (void)_moveElementsToView:(id)a0;
- (void)_presentLogViewerView;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_searchRangeForDate:(id)a0 inText:(id)a1;
- (void)_setupInitialHighlight;
- (void)_updateLogFromLastTime;
- (void)assistiveTouchButtonTapped:(id)a0;
- (id)currentPredicates:(id)a0;
- (void)logContentViewController:(id)a0 didSelectDateForLog:(id)a1;
- (void)logContentViewController:(id)a0 didSelectLogOptionWithTimeInterval:(double)a1;
- (id)logContentViewControllerLogEndDate:(id)a0;
- (id)logContentViewControllerLogStartDate:(id)a0;
- (void)logFilterViewController:(id)a0 didAddPredicates:(id)a1;
- (void)logFilterViewController:(id)a0 didDeletePredicate:(id)a1;
- (void)logFilterViewControllerApplyButtonTapped:(id)a0;
- (BOOL)logFilterViewControllerShouldAllowTextEditing:(id)a0;
- (void)logViewerFilterButtonTapped:(id)a0;
- (void)logViewerRightCaretButtonTapped:(id)a0;
- (void)logViewerViewLogButtonTapped:(id)a0;
- (id)orderedViewControllers;
- (void)showLogContentPage;
- (void)showLogFilterPage;

@end
