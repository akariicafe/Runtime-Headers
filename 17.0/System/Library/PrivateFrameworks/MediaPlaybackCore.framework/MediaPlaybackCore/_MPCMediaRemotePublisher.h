@class MPLibraryAddStatusObserver, NSString, MPNowPlayingInfoCenter, MPRemoteCommandCenter, NSArray, _MPCMediaRemotePublisher_Swift, NSDictionary, NSObject, MPCPlaybackEngine, MSVBlockGuard;
@protocol OS_dispatch_source;

@interface _MPCMediaRemotePublisher : NSObject <MPNowPlayingPlaybackQueueDataSourcePrivate, MPCPlaybackEngineEventObserving, MPCPlaybackAccountManagerObserver, MPCQueueControllerPublisher> {
    MPLibraryAddStatusObserver *_libraryAddStatusObserver;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _libraryAddStatusObserverLock;
    NSArray *_accounts;
    BOOL _activeAccountAllowsSubscriptionPlayback;
    BOOL _activeAccountRequiresAuthorizationTokensForPlayback;
    NSString *_activeAccountStoreFrontIdentifier;
    BOOL _hasBeganFastForward;
    BOOL _hasBeganRewind;
    NSObject<OS_dispatch_source> *_nextPreviousTrackCooldownTimer;
    long long _deferredTrackChangeDelta;
    NSArray *_lastCommandDescriptions;
    MSVBlockGuard *_setPlaybackQueueExtendedTimeGuard;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) _MPCMediaRemotePublisher_Swift *swift;
@property (nonatomic, getter=hasInitializedSupportedCommands) BOOL initializedSupportedCommands;
@property (nonatomic, getter=isEngineRestoringState) BOOL engineRestoringState;
@property (nonatomic, getter=isMediaServerAvailable) BOOL mediaServerAvailable;
@property (retain, nonatomic) NSDictionary *lastPerformanceMetrics;
@property (readonly, weak, nonatomic) MPCPlaybackEngine *playbackEngine;
@property (readonly, nonatomic) MPNowPlayingInfoCenter *infoCenter;
@property (readonly, nonatomic) MPRemoteCommandCenter *commandCenter;
@property (readonly, copy, nonatomic) NSString *hostingSharedSessionID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)becomeActive;
- (void)engine:(id)a0 didChangeToState:(unsigned long long)a1;
- (void)engine:(id)a0 didChangeCurrentItemVariantID:(id)a1;
- (void)_hostingSharedSessionDidChange:(id)a0;
- (id)initWithPlaybackEngine:(id)a0;
- (void)engineDidResetMediaServices:(id)a0;
- (void)_updateLaunchCommands;
- (id)_supportedSessionTypes;
- (void)dealloc;
- (void)engine:(id)a0 didChangeActionAtQueueEnd:(long long)a1;
- (void)engine:(id)a0 didChangeShuffleType:(long long)a1;
- (id)nowPlayingInfoCenter:(id)a0 artworkCatalogForContentItem:(id)a1;
- (void)engineDidChangeVocalAttenuationState:(id)a0;
- (id)participantsForNowPlayingInfoCenter:(id)a0;
- (void)getShouldRestoreStateWithCompletion:(id /* block */)a0;
- (id)nowPlayingInfoCenter:(id)a0 artworkForContentItem:(id)a1 size:(struct CGSize { double x0; double x1; })a2 completion:(id /* block */)a3;
- (void)_beginBackgroundTaskUntilPlayCommandWithCommand:(id)a0 timeout:(double)a1;
- (void)engineWillBeginStateRestoration:(id)a0;
- (void)engine:(id)a0 didChangeQueueWithReason:(id)a1;
- (unsigned long long)vocalAttenuationUnavailabilityReasons;
- (id)nowPlayingInfoCenter:(id)a0 infoForContentItem:(id)a1 completion:(id /* block */)a2;
- (void)invalidateSessionTypesWithReason:(id)a0;
- (void)_performDebugEvent:(id)a0 completion:(id /* block */)a1;
- (void)nowPlayingInfoCenter:(id)a0 getTransportablePlaybackSessionRepresentationForRequest:(id)a1 completion:(id /* block */)a2;
- (void)engineDidBlockVocalAttenuation:(id)a0;
- (void)deactivateAudioSessionIfIdle:(long long)a0;
- (void)becomeActiveIfNeededWithCompletion:(id /* block */)a0;
- (void)_durationAvailableNotification:(id)a0;
- (void)nowPlayingInfoCenter:(id)a0 didEndMigrationWithIdentifier:(id)a1 error:(id)a2;
- (void)publishIfNeeded;
- (void)accountManager:(id)a0 didChangeAccounts:(id)a1;
- (void)engineDidChangeVocalAttenuationLevel:(id)a0;
- (void)engineDidEndStateRestoration:(id)a0;
- (void)_enqueueFallbackIntentIfNeededForCommandEvent:(id)a0 play:(BOOL)a1 completion:(id /* block */)a2;
- (void)updatePlaybackMetrics:(id)a0;
- (id)playbackQueueIdentifierForNowPlayingInfoCenter:(id)a0;
- (void)leaveSharedSessionWithCommandID:(id)a0 remoteControlInterface:(id)a1 completion:(id /* block */)a2;
- (void)_likedStateChangedNotification:(id)a0;
- (void)nowPlayingInfoCenter:(id)a0 didEndLyricsEvent:(id)a1;
- (id)nowPlayingInfoCenter:(id)a0 contentItemForID:(id)a1;
- (void).cxx_destruct;
- (void)_commandEventDidTimeoutNotification:(id)a0;
- (void)engine:(id)a0 didAchieveLikelyToKeepUpWithItem:(id)a1;
- (void)_updateSupportedCommands;
- (void)engine:(id)a0 didReceivePickedRouteChange:(id)a1;
- (void)_performCommandEvent:(id)a0 completion:(id /* block */)a1;
- (void)performSetQueue:(id)a0 completion:(id /* block */)a1;
- (void)engine:(id)a0 didChangeToItem:(id)a1;
- (id)nowPlayingInfoCenter:(id)a0 lyricsForContentItem:(id)a1 completion:(id /* block */)a2;
- (id)nowPlayingInfoCenter:(id)a0 contentItemIDsFromOffset:(long long)a1 toOffset:(long long)a2 nowPlayingIndex:(long long *)a3;
- (id)nowPlayingInfoCenter:(id)a0 contentItemIDForOffset:(long long)a1;
- (void)performSetQueueWithIntent:(id)a0 completion:(id /* block */)a1;
- (void)engineDidLoseMediaServices:(id)a0;
- (void)_leaveSharedSessionWithCommandID:(id)a0 completion:(id /* block */)a1;
- (void)engineDidUnblockVocalAttenuation:(id)a0;
- (void)engine:(id)a0 didChangeQueueController:(id)a1;
- (id)nowPlayingInfoCenter:(id)a0 remoteArtworkForContentItem:(id)a1 format:(id)a2 size:(struct CGSize { double x0; double x1; })a3 completion:(id /* block */)a4;
- (void)engine:(id)a0 didChangeRepeatType:(long long)a1;
- (void)reportUserBackgroundedApplication;
- (void)nowPlayingInfoCenter:(id)a0 didBeginLyricsEvent:(id)a1;
- (void)nowPlayingInfoCenter:(id)a0 willBeginSessionMigrationWithIdentifier:(id)a1;
- (id)_exportableSessionTypes;
- (void)invalidateQueueTypesWithReason:(id)a0;

@end
