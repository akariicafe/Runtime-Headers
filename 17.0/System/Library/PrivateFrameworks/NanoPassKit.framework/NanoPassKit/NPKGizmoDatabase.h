@class NSArray, NSDictionary, NSData, NSMutableDictionary, NSObject, NSMutableArray;
@protocol OS_dispatch_queue;

@interface NPKGizmoDatabase : NSObject {
    struct sqlite3 { } *_database;
    struct sqlite3_stmt { } *_deleteStatement;
    struct sqlite3_stmt { } *_insertStatement;
    struct sqlite3_stmt { } *_insertDiffStatement;
    struct sqlite3_stmt { } *_selectPassDataStatement;
    struct sqlite3_stmt { } *_selectPassAndImageSetsDataStatement;
    struct sqlite3_stmt { } *_selectPassDiffStatement;
    struct sqlite3_stmt { } *_updateDeletePendingStatement;
    struct sqlite3_stmt { } *_selectDeletePendingStatement;
    struct sqlite3_stmt { } *_updatePreferredAIDStatement;
    struct sqlite3_stmt { } *_selectPreferredAIDStatement;
    struct sqlite3_stmt { } *_insertTransactionStatement;
    struct sqlite3_stmt { } *_removeTransactionStatement;
    struct sqlite3_stmt { } *_removeTransactionWithServiceIdentifier;
    struct sqlite3_stmt { } *_selectTransactionsStatement;
    struct sqlite3_stmt { } *_selectTransactionsStatementWithSource;
    struct sqlite3_stmt { } *_selectTransactionsStatementWithoutSource;
    struct sqlite3_stmt { } *_selectTransactionWithIdentifierStatement;
    struct sqlite3_stmt { } *_selectTransactionWithServiceIdentifierStatement;
    struct sqlite3_stmt { } *_insertTransactionSourceIdentifierForPassStatement;
    struct sqlite3_stmt { } *_selectTransactionSourceIdentifierForTransactionWithIdentifierStatement;
    struct sqlite3_stmt { } *_selectTransactionSourceIdentifierForTransactionWithServiceIdentifierStatement;
    struct sqlite3_stmt { } *_selectTransactionSourceIdentifierForPassUniqueIdentifierStatement;
    struct sqlite3_stmt { } *_selectPassUniqueIdentifierForTransactionSourceIdentifierStatement;
    struct sqlite3_stmt { } *_deleteTransactionSourceIdentifierForPassStatement;
    struct sqlite3_stmt { } *_deleteTransactionsForTransactionSourceStatement;
    struct sqlite3_stmt { } *_trimTransactionsForTransactionSourceStatement;
    struct sqlite3_stmt { } *_selectTransitAppletStateForPassStatement;
    struct sqlite3_stmt { } *_updateTransitAppletStateForPassStatement;
    struct sqlite3_stmt { } *_insertEphemeralTransactionStatement;
    struct sqlite3_stmt { } *_deleteEphemeralTransactionByTransactionSourceIdentifierStatement;
    struct sqlite3_stmt { } *_currentEphemeralTransactionIdentifierStatement;
    struct sqlite3_stmt { } *_selectLastAddValueAmountForPassStatement;
    struct sqlite3_stmt { } *_updateLastAddValueAmountForPassStatement;
    struct sqlite3_stmt { } *_selectPendingAddValueDateForPassStatement;
    struct sqlite3_stmt { } *_updatePendingAddValueDateForPassStatement;
    struct sqlite3_stmt { } *_selectBalancesForPassStatement;
    struct sqlite3_stmt { } *_updateBalancesForPassStatement;
    struct sqlite3_stmt { } *_selectSubcredentialsForPassStatement;
    struct sqlite3_stmt { } *_updateSubcredentialsForPassStatement;
    NSObject<OS_dispatch_queue> *_dbQueue;
    BOOL _isInTransaction;
    NSMutableDictionary *_manifest;
    NSMutableArray *_passDescriptions;
    NSArray *_libraryHashes;
    int _externallyChangedBroadcasts;
    BOOL _sendingLocalNotifyDatabaseChanged;
    BOOL _needsMoreLocalNotifyDatabaseChanged;
}

@property (nonatomic) BOOL passDBIsAvailable;
@property (readonly) NSData *libraryHash;
@property (readonly) NSDictionary *manifestHashes;
@property (readonly) struct sqlite3 { } *database;
@property (readonly) struct sqlite3_stmt { } *deleteStatement;
@property (readonly) struct sqlite3_stmt { } *insertStatement;
@property (readonly) struct sqlite3_stmt { } *selectPassDataStatement;
@property (readonly) struct sqlite3_stmt { } *selectPassAndImageSetsDataStatement;
@property (readonly) struct sqlite3_stmt { } *selectPassDiffStatement;
@property (readonly) struct sqlite3_stmt { } *insertDiffStatement;
@property (readonly) struct sqlite3_stmt { } *updateDeletePendingStatement;
@property (readonly) struct sqlite3_stmt { } *updatePreferredAIDStatement;
@property (readonly) struct sqlite3_stmt { } *selectPreferredAIDStatement;
@property (readonly) struct sqlite3_stmt { } *selectTransactionWithIdentifierStatement;
@property (readonly) struct sqlite3_stmt { } *selectTransactionWithServiceIdentifierStatement;
@property (readonly) struct sqlite3_stmt { } *insertTransactionSourceIdentifierForPassStatement;
@property (readonly) struct sqlite3_stmt { } *deleteTransactionSourceIdentifierForPassStatement;
@property (readonly) struct sqlite3_stmt { } *deleteTransactionsForTransactionSourceStatement;
@property (readonly) struct sqlite3_stmt { } *trimTransactionsForTransactionSourceStatement;
@property (readonly) struct sqlite3_stmt { } *selectTransitAppletStateForPassStatement;
@property (readonly) struct sqlite3_stmt { } *updateTransitAppletStateForPassStatement;
@property (readonly) struct sqlite3_stmt { } *insertEphemeralTransactionStatement;
@property (readonly) struct sqlite3_stmt { } *deleteEphemeralTransactionByTransactionSourceIdentifierStatement;
@property (readonly) struct sqlite3_stmt { } *currentEphemeralTransactionIdentifierStatement;
@property (readonly) struct sqlite3_stmt { } *selectLastAddValueAmountForPassStatement;
@property (readonly) struct sqlite3_stmt { } *updateLastAddValueAmountForPassStatement;
@property (readonly) struct sqlite3_stmt { } *selectPendingAddValueDateForPassStatement;
@property (readonly) struct sqlite3_stmt { } *updatePendingAddValueDateForPassStatement;
@property (readonly) NSArray *passDescriptions;
@property (readonly, nonatomic) unsigned long long numberOfPasses;

+ (id)sharedDatabase;
+ (id)_migrationDataSource;
+ (id)_migrationDelegateQueue;
+ (unsigned long long)latestWatchOSMajorVersion;
+ (long long)maxDatabaseVersion;
+ (void)setMigrationDataSource:(id)a0;

- (struct sqlite3 { } *)database;
- (id)init;
- (void)dealloc;
- (void).cxx_destruct;
- (BOOL)_executeSQL:(id)a0;
- (id)_transactionSourceIdentifierForTransactionWithIdentifierLocked:(id)a0;
- (id /* block */)restoreBlockForVolatilePassData;
- (void)_notifyDatabaseChangedWithNoop:(BOOL)a0;
- (BOOL)_updateSettingsDuringMigration:(id)a0;
- (struct sqlite3_stmt { } *)deleteStatement;
- (struct sqlite3_stmt { } *)insertStatement;
- (id)transactionSourceIdentifierForTransactionWithServiceIdentifier:(id)a0;
- (void)_attemptDatabaseOpen;
- (void)_createTransactionSourceIdentifierIfNecessaryForPassWithUniqueIDLocked:(id)a0;
- (id)_currentEphemeralTransactionIdentifierForTransactionSourceIdentifier:(id)a0;
- (long long)_databaseVersionExists:(BOOL *)a0 valid:(BOOL *)a1;
- (id)_decodeObjectOfClass:(Class)a0 fromStatement:(struct sqlite3_stmt { } *)a1 column:(int)a2;
- (id)_decodeObjectOfClasses:(id)a0 fromStatement:(struct sqlite3_stmt { } *)a1 column:(int)a2;
- (id)_diffForUniqueIDLocked:(id)a0;
- (void)_enumerateAllPassesForMigration:(id /* block */)a0;
- (void)_executeSQLQuery:(id)a0 processResultsBlock:(id /* block */)a1;
- (BOOL)_getDeletePendingForUniqueID:(id)a0;
- (id)_getPreferredPaymentApplicationForPaymentPass:(id)a0 aid:(id *)a1;
- (void)_handleDatabaseChangedExternally;
- (void)_handleFirstUnlock;
- (void)_handleHasMigrationDataSource;
- (void)_inQueue_teardownDB;
- (void)_insertDatabaseVersionRow:(long long)a0;
- (id)_lastAddValueAmountForPassWithUniqueIDLocked:(id)a0;
- (id)_libraryHashLockedForWatchOSMajorVersion:(unsigned long long)a0;
- (void)_loadInitialManifestLocked;
- (BOOL)_migrateDatabase:(id /* block */)a0;
- (void)_notifyDatabaseChangedExternally;
- (void)_notifyDatabaseChangedWithNoop:(BOOL)a0 firstUnlock:(BOOL)a1;
- (void)_notifyForFirstUnlock;
- (BOOL)_passDBIsAvailableLocked;
- (id)_passForUniqueIDLocked:(id)a0 includeImageSets:(BOOL)a1;
- (id)_passUniqueIdentifierForTransactionSourceIdentifierLocked:(id)a0;
- (id)_paymentBalancesForPassWithUniqueIDLocked:(id)a0;
- (id)_pendingAddValueDateForPassWithUniqueIDLocked:(id)a0;
- (void)_performTransactionWithBlock:(id /* block */)a0;
- (BOOL)_preconditionsMetForDatabaseOpen;
- (void)_rebuildDatabaseWithPassesFromCompanionPasses;
- (BOOL)_removePassWithUniqueIDLocked:(id)a0;
- (void)_removeTransactionSourceIdentifierForPassWithUniqueIDLocked:(id)a0;
- (void)_removeTransactionWithIdentifier:(id)a0;
- (void)_removeTransactionWithServiceIdentifierLocked:(id)a0 forTransactionSourceIdentifier:(id)a1;
- (void)_removeTransactionsForTransactionSource:(id)a0;
- (BOOL)_repairEncodedImagesDuringMigration:(id)a0;
- (void)_saveDiffLocked:(id)a0 forPassWithUniqueID:(id)a1;
- (void)_savePassLocked:(id)a0 locallyAdded:(BOOL)a1 wasUpdate:(BOOL *)a2;
- (void)_saveTransaction:(id)a0 forTransactionSourceIdentifier:(id)a1 withPaymentCredentialType:(long long)a2 shouldTrim:(BOOL)a3;
- (void)_saveTransactionLocked:(id)a0 forTransactionSourceIdentifier:(id)a1;
- (void)_setCurrentEphemeralTransactionIdentifier:(id)a0 forTransactionSourceIdentifier:(id)a1;
- (void)_setLastAddValueAmountLocked:(id)a0 forPassWithUniqueID:(id)a1;
- (void)_setPaymentBalancesLocked:(id)a0 forPassWithUniqueID:(id)a1;
- (void)_setPendingAddValueDateLocked:(id)a0 forPassWithUniqueID:(id)a1;
- (void)_setSubcredentialsLocked:(id)a0 forPassWithUniqueID:(id)a1;
- (void)_setTransitAppletStateLocked:(id)a0 forPassWithUniqueID:(id)a1;
- (id)_subcredentialsForPassWithUniqueIDLocked:(id)a0;
- (BOOL)_table:(id)a0 containsColumn:(id)a1;
- (id)_transactionSourceIdentifierForPassUniqueIdentifierLocked:(id)a0;
- (id)_transactionSourceIdentifierForTransactionWithServiceIdentifierLocked:(id)a0;
- (id)_transactionWithIdentifierLocked:(id)a0;
- (id)_transactionWithServiceIdentifierLocked:(id)a0;
- (id)_transactionsForTransactionSourceIdentifierLocked:(id)a0 withTransactionSource:(unsigned long long)a1 withBackingData:(unsigned long long)a2 startDate:(id)a3 endDate:(id)a4 orderByDate:(long long)a5 limit:(unsigned long long)a6;
- (id)_transitAppletStateForPassWithUniqueIDLocked:(id)a0;
- (void)_trimTransactionsForTransactionSourceIdentifierLocked:(id)a0 withPaymentCredentialType:(long long)a1;
- (BOOL)_updateAvailableActionsDuringMigration:(id)a0;
- (BOOL)_updateCompleteLocalHashesDuringMigration:(id)a0;
- (BOOL)_updateCompleteRemoteHashesDuringMigration;
- (void)_updateDatabaseVersionRow:(long long)a0;
- (BOOL)_updateDeviceAndPreferredPaymentApplicationsDuringMigration:(id)a0;
- (BOOL)_updateDevicePaymentApplicationsDuringMigration:(id)a0;
- (BOOL)_updateEffectivePaymentApplicationStateDuringMigration:(id)a0;
- (BOOL)_updateEncodedImageSetsDuringMigration:(id)a0;
- (BOOL)_updateEncodedPaymentPassDuringMigration:(id)a0;
- (BOOL)_updateExpressPassTypesMaskDuringMigration:(id)a0;
- (BOOL)_updateFrontAndBackFieldBucketsDuringMigration:(id)a0;
- (BOOL)_updateHasStoredValueDuringMigration:(id)a0;
- (BOOL)_updateHasUserSelectableContactlessPaymentApplications:(id)a0;
- (BOOL)_updateIngestedDatesDuringMigration:(id)a0;
- (BOOL)_updateIssuerCountryCodesDuringMigration:(id)a0;
- (BOOL)_updateLocalizedDescriptionDuringMigration:(id)a0;
- (BOOL)_updateNFCPayloadDuringMigration:(id)a0;
- (BOOL)_updateOrganizationNamesDuringMigration:(id)a0;
- (BOOL)_updatePrimaryContactlessAndInAppPaymentApplicationsDuringMigration:(id)a0;
- (BOOL)_updatePrivateLabelAndCobrandDuringMigration:(id)a0;
- (BOOL)_updateTransactionSourceIdentifiersDuringMigration:(id)a0;
- (void)_verifyPassDataIsUnarchivedCorrectlyWithData:(id)a0 forPassWithUniqueID:(id)a1;
- (id)currentEphemeralTransactionIdentifierForTransactionSourceIdentifier:(id)a0;
- (id)diffForUniqueID:(id)a0;
- (void)enumerateAllPassesAndDescriptionsWithBlock:(id /* block */)a0 includeImageSets:(BOOL)a1;
- (void)enumerateAllPassesWithBlock:(id /* block */)a0 includeImageSets:(BOOL)a1;
- (id)filteredPassesUsingPassDescriptionPredicate:(id)a0 includeImageSets:(BOOL)a1;
- (BOOL)hasPassesMatchingPassDescriptionPredicate:(id)a0;
- (struct sqlite3_stmt { } *)insertTransactionStatement;
- (id)lastAddValueAmountForPassWithUniqueID:(id)a0;
- (id)libraryHash;
- (id)libraryHashForWatchOSMajorVersion:(unsigned long long)a0;
- (id)manifestHashes;
- (id)manifestHashesForWatchOSMajorVersion:(unsigned long long)a0;
- (id)passForUniqueID:(id)a0;
- (id)passForUniqueID:(id)a0 includeImageSets:(BOOL)a1;
- (id)passUniqueIDForTransactionSourceIdentifier:(id)a0;
- (id)paymentBalancesForPassWithUniqueID:(id)a0;
- (id)pendingAddValueDateForPassWithUniqueID:(id)a0;
- (id)preferredPaymentApplicationForPaymentPass:(id)a0;
- (id)rebuildDatabaseWithPasses:(id)a0;
- (id)removePassWithUniqueID:(id)a0;
- (struct sqlite3_stmt { } *)removeTransactionStatement;
- (void)removeTransactionWithIdentifier:(id)a0;
- (struct sqlite3_stmt { } *)removeTransactionWithServiceIdentifierStatement;
- (void)removeTransactionsForTransactionSource:(id)a0;
- (void)saveDiff:(id)a0 forPassWithUniqueID:(id)a1;
- (id)savePass:(id)a0 isLocalPass:(BOOL)a1;
- (void)saveTransaction:(id)a0 forPass:(id)a1;
- (struct sqlite3_stmt { } *)selectBalancesForPassStatement;
- (struct sqlite3_stmt { } *)selectDeletePendingStatement;
- (struct sqlite3_stmt { } *)selectPassAndImageSetsDataStatement;
- (struct sqlite3_stmt { } *)selectPassDataStatement;
- (struct sqlite3_stmt { } *)selectPassDiffStatement;
- (struct sqlite3_stmt { } *)selectPassUniqueIdentifierForTransactionSourceIdentifierStatement;
- (struct sqlite3_stmt { } *)selectSubcredentialsForPassStatement;
- (struct sqlite3_stmt { } *)selectTransactionSourceIdentifierForPassUniqueIdentifierStatement;
- (struct sqlite3_stmt { } *)selectTransactionSourceIdentifierForTransactionWithIdentifierStatement;
- (struct sqlite3_stmt { } *)selectTransactionSourceIdentifierForTransactionWithServiceIdentifierStatement;
- (struct sqlite3_stmt { } *)selectTransactionsStatementWithTransactionSource:(unsigned long long)a0 orderByDate:(long long)a1 limit:(unsigned long long)a2;
- (void)setCurrentEphemeralTransactionIdentifier:(id)a0 forTransactionSourceIdentifier:(id)a1;
- (void)setDeletePending:(BOOL)a0 forUniqueID:(id)a1;
- (void)setLastAddValueAmount:(id)a0 forPassWithUniqueID:(id)a1;
- (void)setPaymentBalances:(id)a0 forPassWithUniqueID:(id)a1;
- (void)setPendingAddValueDate:(id)a0 forPassWithUniqueID:(id)a1;
- (void)setPreferredPaymentApplication:(id)a0 forPaymentPass:(id)a1;
- (void)setSubcredentials:(id)a0 forPassWithUniqueID:(id)a1;
- (void)setTransitAppletState:(id)a0 forPassWithUniqueID:(id)a1;
- (id)subcredentialsForPassWithUniqueID:(id)a0;
- (void)teardownDB;
- (id)transactionSourceIdentifierForPassWithUniqueID:(id)a0;
- (id)transactionSourceIdentifierForTransactionWithIdentifier:(id)a0;
- (id)transactionSourcesForPassWithUniqueID:(id)a0;
- (id)transactionWithIdentifier:(id)a0;
- (id)transactionWithServiceIdentifier:(id)a0;
- (id)transactionsForTransactionSourceIdentifier:(id)a0 withTransactionSource:(unsigned long long)a1 withBackingData:(unsigned long long)a2 startDate:(id)a3 endDate:(id)a4 orderedByDate:(long long)a5 limit:(long long)a6;
- (id)transitAppletStateForPassWithUniqueID:(id)a0;
- (struct sqlite3_stmt { } *)updateBalancesForPassStatement;
- (struct sqlite3_stmt { } *)updateSubcredentialsForPassStatement;

@end
