@class RTContactsManager, CLLocation, RTLocationAwarenessManager, NSObject, SMAnomalyAlertManager, SMCarPlayAlertManager, RTDefaultsManager, SMSessionManagerState, SMSessionManagerStatus, SMSessionStore, NSString, NSHashTable, RTXPCTimerAlarm, RTStarkManager, RTLocationManager, SMSessionMetricManager, SMMessagingService, SMScreenLockMonitor, TLAlert;
@protocol OS_dispatch_queue;

@interface SMSessionManager : NSObject <IDSServiceDelegate, SMInitiatorSessionConfigurationProtocol, SMSessionManagerMonitorProtocol, SMSessionManagerCacheProtocol, SMSessionManagerRegistrationProtocol, SMUserNotificationProtocol> {
    SMSessionManagerState *_state;
}

@property (nonatomic) double cacheReleaseMaxDuration;
@property (nonatomic) double sendSessionEndMessageTimeout;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) RTXPCTimerAlarm *checkInXPCTimerAlarm;
@property (retain, nonatomic) RTXPCTimerAlarm *magnetBreakTimer;
@property (retain, nonatomic) RTXPCTimerAlarm *cacheReleaseXPCTimerAlarm;
@property (retain, nonatomic) RTXPCTimerAlarm *endAwarenessBeforeUnlockXPCTimerAlarm;
@property (retain, nonatomic) RTXPCTimerAlarm *endAwarenessAfterUnlockXPCTimerAlarm;
@property (retain, nonatomic) SMScreenLockMonitor *screenLockMonitor;
@property (retain, nonatomic) NSHashTable *observers;
@property (retain, nonatomic) RTContactsManager *contactsManager;
@property (retain, nonatomic) RTDefaultsManager *defaultsManager;
@property (retain, nonatomic) RTLocationManager *locationManager;
@property (retain, nonatomic) SMSessionMetricManager *sessionMetricManager;
@property (retain, nonatomic) SMSessionStore *sessionStore;
@property (nonatomic) unsigned long long sessionStoreAvailability;
@property (retain, nonatomic) RTLocationAwarenessManager *locationAwarenessManager;
@property (retain, nonatomic) SMMessagingService *messagingService;
@property (retain, nonatomic) RTStarkManager *starkManager;
@property (retain, nonatomic) SMCarPlayAlertManager *carPlayAlertManager;
@property (retain, nonatomic) SMAnomalyAlertManager *anomalyAlertManager;
@property (retain, nonatomic) CLLocation *lastLocation;
@property (retain, nonatomic) SMSessionManagerStatus *status;
@property (nonatomic) BOOL statusStored;
@property (nonatomic) BOOL statusStoreInProgress;
@property (nonatomic) BOOL statusUpdatePending;
@property (retain, nonatomic) TLAlert *cacheReleaseTLAlert;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)_removeObserver:(id)a0;
- (void)_registerForNotifications;
- (void)_addObserver:(id)a0;
- (void)onLocationNotification:(id)a0;
- (void)removeObserver:(id)a0;
- (id)state;
- (void)_unregisterForNotifications;
- (void)_transitionToState:(id)a0;
- (void).cxx_destruct;
- (void)addObserver:(id)a0;
- (void)respondToNotificationWithIdentifier:(id)a0 sessionIdentifier:(id)a1 actionIdentifier:(id)a2 handler:(id /* block */)a3;
- (void)fetchCurrentSessionStateWithHandler:(id /* block */)a0;
- (BOOL)_isActiveDevice;
- (void)_onDeletedConversation:(id)a0 handler:(id /* block */)a1;
- (void)promptDirectTriggerWithContext:(id)a0;
- (void)_backdoorSetState:(id)a0;
- (void)_becomeActiveDeviceForSession;
- (void)_bootstrapToState;
- (BOOL)_canDeviceModifyState;
- (id)_checkDefaultsForCacheReleaseDate;
- (void)_endSessionForSessionID:(id)a0 reason:(unsigned long long)a1 handler:(id /* block */)a2;
- (unsigned long long)_getEndSessionStateWithReason:(unsigned long long)a0;
- (id)_getMostRecentSessionState;
- (void)_handleMagnetBreak;
- (void)_handleMagnetBreakPhone;
- (void)_handleMagnetConnect;
- (void)_handleMagnetConnectPhone;
- (void)_initializeSessionWithSessionID:(id)a0 handle:(id)a1 handler:(id /* block */)a2;
- (void)_invalidateTimer:(id)a0;
- (void)_notifyObserversForConfigurationChange;
- (void)_notifyObserversForEnd;
- (void)_notifyObserversForSecondarySOSTrigger;
- (void)_notifyObserversForSessionResume;
- (void)_notifyObserversForShouldReleaseCache;
- (void)_notifyObserversForStart;
- (void)_notifyObserversForStateChange;
- (void)_notifyObserversForTriggerResponse;
- (void)_onDeletedMessage:(id)a0 handler:(id /* block */)a1;
- (void)_onScheduledSendForSessionID:(id)a0 handler:(id /* block */)a1;
- (void)_onSessionStoreNotification:(id)a0;
- (BOOL)_performStateTransitionTo:(id)a0 handler:(id /* block */)a1;
- (void)_playCacheReleaseAndUpdatingSound;
- (void)_postAnomalyAlert;
- (void)_postCacheReleaseAndUpdating;
- (void)_postEndAwarenessLiveActivity;
- (void)_processNearbyEffectivePairedDeviceChanged:(id)a0;
- (void)_resetInitializationWithHandler:(id /* block */)a0;
- (void)_respondToTriggerPromptForSessionID:(id)a0 response:(long long)a1 handler:(id /* block */)a2;
- (void)_sessionInitializedWithAllowReadToken:(id)a0 safetyCacheKey:(id)a1 scheduledSendMessageGUID:(id)a2 completionHandler:(id /* block */)a3;
- (void)_setUpCacheReleaseTimer;
- (void)_setupAnomalyAlerts;
- (void)_setupAnomalyAlertsOnResume;
- (void)_setupTimerAndLockMonitorForEndAwarenessBeforeUnlock;
- (void)_setupTimerForAnomaly;
- (void)_setupTimerForEndAwarenessAfterUnlock;
- (void)_setupWithObservers:(id)a0;
- (id)_stateTransitionDecisionToState:(id)a0;
- (BOOL)_stateValidForSendingEndSessionMessage:(id)a0;
- (BOOL)_stateValidForSessionResume:(id)a0;
- (void)_stopPlayingCacheReleaseAndUpdatingSound;
- (void)_teardownAnomalyAlerts;
- (id)_updateDestinationForRoundTripSessionConfiguration:(id)a0;
- (void)_updateLastLocationWithLocations:(id)a0;
- (void)_updateLocationObserverUponStateTransition;
- (void)_updateReceiverWithEstimatedEndDate:(id)a0 coarseEstimatedEndDate:(id)a1 sessionID:(id)a2;
- (void)_updateStateMetaDataTo:(id)a0;
- (void)bootstrapToState;
- (void)cancelInitializationForSessionID:(id)a0 handler:(id /* block */)a1;
- (void)cancelInitializationWithHandler:(id /* block */)a0;
- (id)checkSessionIDAndCanDeviceModifyStateWithSelector:(SEL)a0 sessionID:(id)a1;
- (id)checkSessionIDCanDeviceModifyStateAndSessionStateWithSelector:(SEL)a0 sessionID:(id)a1 validSessionStates:(id)a2;
- (id)checkSessionIDWithSelector:(SEL)a0 sessionID:(id)a1;
- (id)checkSessionStateWithSelector:(SEL)a0 validSessionStates:(id)a1;
- (void)endSessionForSessionID:(id)a0 reason:(unsigned long long)a1 handler:(id /* block */)a2;
- (id)initWithLocationAwarenessManager:(id)a0 contactsManager:(id)a1 defaultsManager:(id)a2 locationManager:(id)a3 sessionMetricManager:(id)a4 sessionStore:(id)a5 messagingService:(id)a6 carPlayAlertManager:(id)a7 observers:(id)a8;
- (void)initializeSessionWithHandle:(id)a0 handler:(id /* block */)a1;
- (void)initializeSessionWithSessionID:(id)a0 handle:(id)a1 handler:(id /* block */)a2;
- (void)logSignPostForStateTransition:(id)a0;
- (void)modifySessionWithConfiguration:(id)a0 handler:(id /* block */)a1;
- (void)onDeletedConversation:(id)a0 handler:(id /* block */)a1;
- (void)onDeletedMessage:(id)a0 handler:(id /* block */)a1;
- (void)onScheduledSendForSessionID:(id)a0;
- (void)onScheduledSendMessageCanceledForSessionID:(id)a0 guid:(id)a1;
- (void)onScheduledSendMessageScheduledForSessionID:(id)a0 guid:(id)a1 date:(id)a2;
- (void)onSessionStartMessageSendResultWithMessage:(id)a0 messageGUID:(id)a1 success:(BOOL)a2 error:(id)a3;
- (void)onSessionStoreNotification:(id)a0;
- (void)processEmergencyContactsNotifiedMessage:(id)a0;
- (void)processNearbyEffectivePairedDeviceChanged:(id)a0;
- (void)processStateSyncMessage:(id)a0;
- (void)processStateSyncUpdateReqMessage:(id)a0;
- (void)promptDestinationAnomalyVerificationWithContext:(id)a0;
- (void)promptDestinationAnomalyVerificationWithContext:(id)a0 handler:(id /* block */)a1;
- (void)promptEstimatedEndDateUpdateWithContext:(id)a0;
- (void)promptRoundTripAnomalyVerificationWithContext:(id)a0;
- (void)promptRoundTripAnomalyVerificationWithContext:(id)a0 handler:(id /* block */)a1;
- (void)promptSafeArrivalWithContext:(id)a0;
- (void)promptSafeArrivalWithContext:(id)a0 handler:(id /* block */)a1;
- (void)promptTimerEndedVerificationWithContext:(id)a0;
- (void)promptTimerEndedVerificationWithContext:(id)a0 handler:(id /* block */)a1;
- (void)respondToTriggerPromptForSessionID:(id)a0 response:(long long)a1 handler:(id /* block */)a2;
- (void)sendSafetyCacheForSessionID:(id)a0 handler:(id /* block */)a1;
- (void)sendSessionEndMessageWithReason:(unsigned long long)a0 associatedGUID:(id)a1 state:(id)a2;
- (void)sessionInitializedWithSessionID:(id)a0 allowReadToken:(id)a1 safetyCacheKey:(id)a2 scheduledSendMessageGUID:(id)a3 completionHandler:(id /* block */)a4;
- (BOOL)sessionSupportsHandoff;
- (void)setupWithObservers:(id)a0;
- (void)startSessionWithConfiguration:(id)a0 handler:(id /* block */)a1;
- (void)storeManagerStatusInStore:(unsigned long long)a0 completion:(id /* block */)a1;
- (void)terminateSession;
- (void)updateManagerStatusInStoreWithCompletion:(id /* block */)a0;
- (void)updateUserWithContext:(id)a0;
- (void)updateUserWithTriggerContext:(id)a0;

@end
