@class NSDate, NSString, NSURL, NSURLSession, NSMutableDictionary, NSOperationQueue, NSObject, NSDateFormatter, PallasResponseVerifier, MADAnalyticsManager, NSURLSessionConfiguration;
@protocol OS_dispatch_queue, OS_dispatch_source, NSURLSessionDelegate;

@interface DownloadManager : NSObject

@property (retain, nonatomic) NSMutableDictionary *downloadTasksInFlight;
@property (retain, nonatomic) NSMutableDictionary *cachedMetaDataForAssetType;
@property (retain, nonatomic) NSURLSessionConfiguration *backgroundDiscretionaryConfiguration;
@property (retain, nonatomic) NSURLSessionConfiguration *splunkDiscretionaryConfiguration;
@property (retain, nonatomic) NSURLSessionConfiguration *inProcessConfig;
@property (retain, nonatomic) NSOperationQueue *operationQueue;
@property (retain, nonatomic) NSOperationQueue *splunkOperationQueue;
@property (retain, nonatomic) id<NSURLSessionDelegate> delegate;
@property (retain, nonatomic) id<NSURLSessionDelegate> splunkDelegate;
@property (retain, nonatomic) NSURLSession *backgroundSession;
@property (retain, nonatomic) NSURLSession *splunkSession;
@property (retain, nonatomic) NSURLSession *pallasSession;
@property (retain, nonatomic) NSURLSession *inProcessSession;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *deviceStatusQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *downloadStateQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *dedupNSURLSessionSyncQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *splunkStateQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *ssoQueue;
@property long long currentState;
@property (nonatomic) BOOL haveSyncedSplunkData;
@property (nonatomic) BOOL currentlyBatchingSplunk;
@property (nonatomic) BOOL haveSyncedSplunkState;
@property (retain, nonatomic) PallasResponseVerifier *pallasVerifier;
@property (retain, nonatomic) NSDateFormatter *dateFormatter;
@property (retain, nonatomic) NSURL *splunkUrl;
@property (retain, nonatomic) NSMutableDictionary *currentSplunkEvent;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *timer;
@property (retain, nonatomic) NSDate *previousTimeEstimatePoint;
@property (nonatomic) BOOL timerRunning;
@property (copy, nonatomic) id /* block */ timerHandler;
@property (nonatomic) BOOL checkMadeForBeforeFirstUnlock;
@property (nonatomic) BOOL deviceBeforeFirstUnlock;
@property (nonatomic) BOOL performingNSURLSessionSync;
@property (readonly, nonatomic) MADAnalyticsManager *analytics;
@property (retain, nonatomic) NSString *brainVersion;

+ (id)pathToCatalogLookupServer:(id)a0 usingDownloadOptions:(id)a1;
+ (BOOL)isDeviceBeforeFirstUnlock;
+ (int)triggerVPN;
+ (id)_extractCheckedNSErrorFromDict:(id)a0 withKey:(id)a1;

- (BOOL)isBuddyRunning;
- (void)handleSuccessfulDownload:(id)a0 task:(id)a1 taskId:(id)a2 shouldMove:(BOOL)a3 extractorExists:(BOOL)a4 postedDate:(id)a5 notModified:(BOOL)a6;
- (id)currentSession;
- (void)startDownloadTimer;
- (void)addLiveServerRequest:(id)a0 forAssetType:(id)a1 withPurpose:(id)a2 audience:(id)a3 pallasUrl:(id)a4 using:(id)a5 with:(id)a6 clientName:(id)a7 autoAssetJobID:(id)a8 task:(id)a9 options:(id)a10;
- (void)isDownloading:(id)a0 then:(id /* block */)a1;
- (BOOL)useBootstrapDataPathForScan:(id)a0;
- (id)init;
- (void)sendNotification:(id)a0;
- (BOOL)addInFailedJobs:(id)a0 finalEvents:(id)a1;
- (void)pallasRequestV2:(id)a0 normalizedType:(id)a1 withPurpose:(id)a2 options:(id)a3 using:(id)a4 with:(id)a5 autoAssetJob:(id)a6 clientName:(id)a7 then:(id /* block */)a8;
- (void)configAssetDownloadJob:(id)a0 forAssetType:(id)a1 withPurpose:(id)a2 matchingAssetId:(id)a3 usingDownloadConfig:(id)a4 forAutoAssetName:(id)a5;
- (void)handleSplunkReportFinished:(id)a0 result:(BOOL)a1;
- (long long)massageXmlAndPersist:(id)a0 from:(id)a1 to:(id)a2 with:(id)a3 postedDate:(id)a4 considerCaching:(BOOL)a5;
- (void)updateProgressIfRequired:(id)a0 totalWritten:(long long)a1 totalExpected:(long long)a2 notify:(BOOL)a3;
- (void)sendEvents:(id)a0 sessionId:(id)a1;
- (void)sendDownloadCannotStartResult:(long long)a0 assetType:(id)a1 connection:(id)a2 requestMessage:(id)a3 clientName:(id)a4 autoAssetJobID:(id)a5 ofJobType:(id)a6;
- (void)stopTimerIfNoDownloadsInProgress;
- (id)downloadManagerDecodeClasses;
- (void)configDownload:(id)a0 clientName:(id)a1 using:(id)a2 with:(id)a3;
- (void)taskFinishedUpdateState:(id)a0 with:(long long)a1 extraInfo:(id)a2;
- (void)applyTransforms:(id)a0 toAssets:(id)a1;
- (BOOL)checkDownloadIsSyncing:(id)a0 using:(id)a1 with:(id)a2 autoAssetJob:(id)a3;
- (BOOL)checkCatalogDownloadIsSkipped:(id)a0 connection:(id)a1 with:(id)a2 autoAssetJob:(id)a3;
- (long long)processAssetDownload:(id)a0 with:(id)a1 and:(id)a2 shouldMove:(BOOL)a3 extractorExists:(BOOL)a4;
- (void)configAssetDownload:(id)a0 withPurpose:(id)a1 matchingAssetId:(id)a2 usingDownloadConfig:(id)a3 usingXPCConnection:(id)a4 withXPCMessage:(id)a5 performingAutoAssetJob:(id)a6 asClientName:(id)a7;
- (id)lastModifiedDateFromResponse:(id)a0;
- (void)sendDownloadResult:(id)a0 with:(long long)a1 extraInfo:(id)a2;
- (id)newAssetAudience:(BOOL)a0 assetType:(id)a1;
- (void)syncSplunkTasks;
- (void)activityNotification:(id)a0 ofStatusChange:(unsigned long long)a1 withReason:(id)a2;
- (BOOL)checkAssetDownloadIsSkipped:(id)a0 connection:(id)a1 with:(id)a2 autoAssetJob:(id)a3;
- (void)registerAssetDownloadJob:(id)a0 forThis:(id)a1 withBase:(id)a2 relativeTo:(id)a3 startingAt:(id)a4 withLength:(id)a5 extractWith:(id)a6 allocateExtractorIfNecessary:(BOOL)a7 connection:(id)a8 message:(id)a9 clientName:(id)a10 notify:(unsigned long long)a11 withCatalogMetadata:(id)a12;
- (void)reportDownloadAttemptResult:(id)a0 with:(long long)a1;
- (void)startDownloadAndUpdateState:(id)a0 for:(id)a1 startingAt:(id)a2 withLength:(id)a3 extractWith:(id)a4 modified:(id)a5 options:(id)a6 downloadSize:(long long)a7 using:(id)a8 with:(id)a9 clientName:(id)a10 autoAssetJob:(id)a11 ofJobType:(id)a12 notify:(unsigned long long)a13;
- (void)cancelAssetDownloadJob:(id)a0 forAssetType:(id)a1 withPurpose:(id)a2 matchingAssetId:(id)a3 forAutoAssetName:(id)a4;
- (void)registerAssetDownloadJob:(id)a0 withPurpose:(id)a1 usingDownloadOptions:(id)a2 forAssetId:(id)a3 withBase:(id)a4 relativeTo:(id)a5 startingAt:(id)a6 withLength:(id)a7 extractWith:(id)a8 allocateExtractorIfNecessary:(BOOL)a9 usingXPCConnection:(id)a10 withXPCMessage:(id)a11 clientName:(id)a12 performingAutoAssetJob:(id)a13 notify:(unsigned long long)a14 withCatalogMetadata:(id)a15;
- (void)sendNotification:(id)a0 suffix:(id)a1;
- (BOOL)checkPmvDownloadIsSkipped:(id)a0 connection:(id)a1 with:(id)a2;
- (long long)massagePmvAndPersist:(id)a0 from:(id)a1 to:(id)a2 postedDate:(id)a3;
- (long long)massageXmlAndPersist:(id)a0 catalogInfo:(id)a1 descriptor:(id)a2 assets:(id)a3 transformations:(id)a4 to:(id)a5 postedDate:(id)a6 receiptResults:(id *)a7 assetSetId:(id)a8 pallasUrl:(id)a9 considerCaching:(BOOL)a10;
- (void)applyTransformsAndCheckReceipts:(id)a0 transformations:(id)a1 assetType:(id)a2 assets:(id)a3 receiptResults:(id *)a4;
- (void)initializeSessionsAsync;
- (id)copyDawTokenFileName;
- (id)getUserAgentStringForClient:(id)a0 withAssetType:(id)a1;
- (BOOL)downloadNeedsSSO:(id)a0 taskDescriptor:(id)a1 url:(id)a2;
- (void)augmentSplunkEvent:(id)a0 withResultForHTTPStatusCode:(long long)a1;
- (void).cxx_destruct;
- (void)retryTask:(id)a0 retryUrl:(id)a1 modified:(id)a2 clientName:(id)a3;
- (void)allDownloading:(id /* block */)a0;
- (void)getCurrentInflightDownloads:(id /* block */)a0;
- (void)updateStateAndNotifyIfRequired;
- (id)newDefaultEventDictionary:(id)a0 sessionId:(id)a1 nonce:(id)a2 url:(id)a3 statusCode:(long long)a4 assetAudience:(id)a5 uuid:(id)a6 assetType:(id)a7 version:(id)a8 receiptResults:(id)a9 baseUrl:(id)a10 discretionary:(BOOL)a11;
- (void)checkSplunkStatus:(id)a0 failureReason:(id)a1 productVersion:(id)a2 sessionId:(id)a3 nonce:(id)a4 url:(id)a5 statusCode:(long long)a6 assetAudience:(id)a7 version:(id)a8 receiptResults:(id)a9 baseUrl:(id)a10 discretionary:(BOOL)a11;
- (void)registerXmlDownloadJob:(id)a0 using:(id)a1 with:(id)a2 clientName:(id)a3;
- (void)taskFinishedUpdateState:(id)a0 with:(long long)a1;
- (void)updateEstimateInfo:(double)a0;
- (void)registerCatalogDownloadJob:(id)a0 forAssetType:(id)a1 withPurpose:(id)a2 usingDownloadOptions:(id)a3 forAutoAssetName:(id)a4;
- (void)cancelAllDownloading:(id)a0 withPurpose:(id)a1 includingAssets:(BOOL)a2 includingCatalog:(BOOL)a3 includingOther:(BOOL)a4 clientName:(id)a5 then:(id /* block */)a6;
- (id)addSUOptions:(id)a0 options:(id)a1;
- (void)registerCatalogDownloadJob:(id)a0 withPurpose:(id)a1 usingDownloadOptions:(id)a2 usingXPCConnection:(id)a3 withXPCMessage:(id)a4 performingAutoAssetJob:(id)a5 asClientName:(id)a6;
- (void)queryNSUrlSessiondAndUpdateState;
- (void)registerPmvDownloadJob:(id)a0 using:(id)a1 with:(id)a2 clientName:(id)a3;
- (void)setPreviousBatchedFailureEvent:(id)a0 inSendEventsByUUID:(id)a1;
- (id)MACopyDawToken:(id)a0;
- (id)startDownloadTask:(id)a0 downloadSize:(long long)a1 for:(id)a2 startingAt:(id)a3 withLength:(id)a4 extractWith:(id)a5 options:(id)a6 modified:(id)a7 session:(id)a8;
- (void)registerAssetDownloadJob:(id)a0 forAssetType:(id)a1 withPurpose:(id)a2 clientName:(id)a3 usingDownloadOptions:(id)a4 forAssetId:(id)a5 withCatalogMetadata:(id)a6;
- (id)startDownloadTask:(id)a0 downloadSize:(long long)a1 for:(id)a2 startingAt:(id)a3 withLength:(id)a4 extractWith:(id)a5 options:(id)a6 modified:(id)a7 session:(id)a8 isCachingServer:(BOOL)a9;
- (BOOL)getPallasEnabledForAssetType:(id)a0;
- (void)startDownloadAndUpdateState:(id)a0 for:(id)a1 modified:(id)a2 options:(id)a3 using:(id)a4 with:(id)a5 clientName:(id)a6 autoAssetJob:(id)a7 ofJobType:(id)a8;
- (void)assessDownloadCompletion:(id)a0 originalUrl:(id)a1 taskDescription:(id)a2 taskId:(id)a3 error:(id)a4 moveFile:(BOOL)a5 extractorExists:(BOOL)a6;
- (void)cancelAssetDownloadTask:(id)a0;
- (void)indicateDownloadJobFinished:(int)a0 usingXPCConnection:(id)a1 withXPCMessage:(id)a2 performingAutoAssetJob:(id)a3 ofJobType:(id)a4;
- (id)currentConfig;

@end
