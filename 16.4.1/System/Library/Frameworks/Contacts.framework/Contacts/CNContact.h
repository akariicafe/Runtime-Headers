@class NSData, NSString, NSArray, SGRecordId, NSSet, NSDate, NSDictionary, CNActivityAlert, NSObject, NSDateComponents, CNContactKeyVector;
@protocol OS_os_log, CNKeyDescriptor;

@interface CNContact : NSObject <NSItemProviderReading, NSItemProviderWriting, CNSuggested, CNContactAugmentation, NSCopying, NSMutableCopying, NSSecureCoding> {
    int _iOSLegacyIdentifier;
    NSString *_namePrefix;
    NSString *_givenName;
    NSString *_middleName;
    NSString *_familyName;
    NSString *_nameSuffix;
    NSString *_previousFamilyName;
    NSString *_nickname;
    NSString *_phoneticGivenName;
    NSString *_phoneticMiddleName;
    NSString *_phoneticFamilyName;
    NSString *_phoneticOrganizationName;
    NSString *_pronunciationGivenName;
    NSString *_pronunciationFamilyName;
    NSString *_explicitDisplayName;
    NSString *_sectionForSortingByGivenName;
    NSString *_sectionForSortingByFamilyName;
    NSString *_organizationName;
    NSString *_departmentName;
    NSString *_jobTitle;
    NSDateComponents *_birthday;
    NSDateComponents *_nonGregorianBirthday;
    NSDate *_creationDate;
    NSDate *_modificationDate;
    NSString *_note;
    NSData *_imageData;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cropRect;
    NSData *_thumbnailImageData;
    NSData *_fullscreenImageData;
    NSData *_syncImageData;
    BOOL _imageDataAvailable;
    NSString *_linkIdentifier;
    BOOL _preferredForName;
    BOOL _preferredForImage;
    NSString *_phonemeData;
    long long _contactType;
    NSArray *_phoneNumbers;
    NSArray *_emailAddresses;
    NSArray *_urlAddresses;
    NSArray *_dates;
    NSArray *_instantMessageAddresses;
    NSArray *_contactRelations;
    NSArray *_socialProfiles;
    NSArray *_postalAddresses;
    NSArray *_calendarURIs;
    NSString *_cardDAVUID;
    NSString *_externalIdentifier;
    NSData *_externalRepresentation;
    NSString *_externalModificationTag;
    NSString *_externalUUID;
    NSString *_externalImageURI;
    CNActivityAlert *_callAlert;
    CNActivityAlert *_textAlert;
    CNContact *_snapshot;
    NSArray *_linkedContacts;
    CNContactKeyVector *_availableKeyDescriptor;
    NSString *_mapsData;
    NSString *_searchIndex;
    NSString *_preferredLikenessSource;
    NSString *_preferredApplePersonaIdentifier;
    NSString *_ISOCountryCode;
    NSString *_downtimeWhitelist;
    NSString *_imageType;
    NSData *_imageHash;
    NSData *_memojiMetadata;
}

@property (class, readonly, copy, nonatomic) NSArray *readableTypeIdentifiersForItemProvider;
@property (class, readonly, copy, nonatomic) NSArray *writableTypeIdentifiersForItemProvider;
@property (class, readonly, nonatomic) NSObject<OS_os_log> *os_log;
@property (class, readonly) id<CNKeyDescriptor> descriptorForAllImageDataKeys;
@property (class, readonly) BOOL supportsSecureCoding;

@property (readonly, copy) NSString *nameTitle;
@property (readonly, copy) NSString *firstName;
@property (readonly, copy) NSString *lastName;
@property (readonly, copy) NSString *maidenName;
@property (readonly, copy) NSString *phoneticFirstName;
@property (readonly, copy) NSString *phoneticLastName;
@property (readonly, copy) NSString *companyName;
@property (readonly, copy, nonatomic) NSArray *relatedNames;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSArray *writableTypeIdentifiersForItemProvider;
@property (readonly, nonatomic) BOOL hasSuggestedProperties;
@property (readonly, nonatomic, getter=isSuggested) BOOL suggested;
@property (readonly, nonatomic) SGRecordId *suggestionRecordId;
@property (readonly, nonatomic) NSString *suggestionFoundInBundleId;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic, getter=isSuggestedMe) BOOL suggestedMe;
@property (readonly, copy, nonatomic) NSString *internalIdentifier;
@property (readonly, copy, nonatomic) NSArray *calendarURIs;
@property (readonly, copy, nonatomic) NSString *cardDAVUID;
@property (readonly, copy, nonatomic) NSDictionary *activityAlerts;
@property (readonly, copy, nonatomic) NSString *storeIdentifier;
@property (readonly, copy, nonatomic) NSDictionary *storeInfo;
@property (readonly, copy, nonatomic) NSString *searchIndex;
@property (readonly, copy, nonatomic) NSString *accountIdentifier;
@property (readonly, nonatomic) id<CNKeyDescriptor> availableKeyDescriptor;
@property (readonly, nonatomic) NSSet *availableKeys;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } cropRect;
@property (readonly, copy, nonatomic) NSString *cropRectID;
@property (readonly, copy, nonatomic) NSData *cropRectHash;
@property (readonly, copy, nonatomic) CNActivityAlert *callAlert;
@property (readonly, copy, nonatomic) CNActivityAlert *textAlert;
@property (readonly, nonatomic) int iOSLegacyIdentifier;
@property (readonly, copy, nonatomic) NSString *externalURI;
@property (readonly, copy, nonatomic) NSString *externalIdentifier;
@property (readonly, copy, nonatomic) NSData *externalRepresentation;
@property (readonly, copy, nonatomic) NSString *externalModificationTag;
@property (readonly, copy, nonatomic) NSString *externalUUID;
@property (readonly, copy, nonatomic) NSString *externalImageURI;
@property (readonly, copy, nonatomic) NSString *fullName;
@property (readonly, copy, nonatomic) NSString *phoneticFullName;
@property (readonly, copy, nonatomic) NSString *linkIdentifier;
@property (readonly, copy, nonatomic) NSString *phonemeData;
@property (readonly, copy, nonatomic) NSString *sortingGivenName;
@property (readonly, copy, nonatomic) NSString *sortingFamilyName;
@property (readonly, copy, nonatomic) NSString *sectionForSortingByGivenName;
@property (readonly, copy, nonatomic) NSString *sectionForSortingByFamilyName;
@property (readonly, copy, nonatomic) NSString *phoneticCompanyName;
@property (readonly, copy, nonatomic) NSString *pronunciationGivenName;
@property (readonly, copy, nonatomic) NSString *pronunciationFamilyName;
@property (readonly, copy, nonatomic) NSDate *creationDate;
@property (readonly, copy, nonatomic) NSDate *modificationDate;
@property (readonly, nonatomic) long long displayNameOrder;
@property (readonly, copy, nonatomic) NSString *stringForIndexing;
@property (readonly, nonatomic, getter=isPreferredForName) BOOL preferredForName;
@property (readonly, nonatomic, getter=isPreferredForImage) BOOL preferredForImage;
@property (readonly, copy, nonatomic) NSString *preferredLikenessSource;
@property (readonly, copy, nonatomic) NSString *preferredApplePersonaIdentifier;
@property (readonly, copy, nonatomic) NSString *preferredChannel;
@property (readonly, copy, nonatomic) NSString *downtimeWhitelist;
@property (readonly, copy, nonatomic) NSString *imageType;
@property (readonly, copy, nonatomic) NSData *imageHash;
@property (readonly, copy, nonatomic) NSData *memojiMetadata;
@property (readonly, nonatomic, getter=isUnified) BOOL unified;
@property (readonly, nonatomic) BOOL hasBeenPersisted;
@property (readonly, copy, nonatomic) NSArray *linkedContacts;
@property (readonly, copy, nonatomic) NSArray *mainStoreLinkedContacts;
@property (readonly, copy, nonatomic) NSString *mapsData;
@property (readonly, copy, nonatomic) NSData *fullscreenImageData;
@property (readonly, copy, nonatomic) NSData *syncImageData;
@property (readonly, copy, nonatomic) NSString *identifier;
@property (readonly, nonatomic) long long contactType;
@property (readonly, copy, nonatomic) NSString *namePrefix;
@property (readonly, copy, nonatomic) NSString *givenName;
@property (readonly, copy, nonatomic) NSString *middleName;
@property (readonly, copy, nonatomic) NSString *familyName;
@property (readonly, copy, nonatomic) NSString *previousFamilyName;
@property (readonly, copy, nonatomic) NSString *nameSuffix;
@property (readonly, copy, nonatomic) NSString *nickname;
@property (readonly, copy, nonatomic) NSString *organizationName;
@property (readonly, copy, nonatomic) NSString *departmentName;
@property (readonly, copy, nonatomic) NSString *jobTitle;
@property (readonly, copy, nonatomic) NSString *phoneticGivenName;
@property (readonly, copy, nonatomic) NSString *phoneticMiddleName;
@property (readonly, copy, nonatomic) NSString *phoneticFamilyName;
@property (readonly, copy, nonatomic) NSString *phoneticOrganizationName;
@property (readonly, copy, nonatomic) NSString *note;
@property (readonly, copy, nonatomic) NSData *imageData;
@property (readonly, copy, nonatomic) NSData *thumbnailImageData;
@property (readonly, nonatomic) BOOL imageDataAvailable;
@property (readonly, copy, nonatomic) NSArray *phoneNumbers;
@property (readonly, copy, nonatomic) NSArray *emailAddresses;
@property (readonly, copy, nonatomic) NSArray *postalAddresses;
@property (readonly, copy, nonatomic) NSArray *urlAddresses;
@property (readonly, copy, nonatomic) NSArray *contactRelations;
@property (readonly, copy, nonatomic) NSArray *socialProfiles;
@property (readonly, copy, nonatomic) NSArray *instantMessageAddresses;
@property (readonly, copy, nonatomic) NSDateComponents *birthday;
@property (readonly, copy, nonatomic) NSDateComponents *nonGregorianBirthday;
@property (readonly, copy, nonatomic) NSArray *dates;

+ (id)contact;
+ (id)unifyContacts:(id)a0;
+ (id)localizedStringForKey:(id)a0;
+ (void)freezeIfInstancetypeIsImmutable:(id)a0;
+ (id)objectWithItemProviderData:(id)a0 typeIdentifier:(id)a1 error:(id *)a2;
+ (id)predicateForAllContacts;
+ (id)predicateForContactsInContainerWithIdentifier:(id)a0;
+ (id)predicateForContactsInGroupWithIdentifier:(id)a0;
+ (id)makeIdentifierString;
+ (id)predicateForMeContact;
+ (id)makeIdentifier;
+ (id)identifierProvider;
+ (id)predicateForContactsMatchingPreferredChannel:(id)a0 limitOne:(BOOL)a1;
+ (id)predicateForContactsMatchingEmailAddress:(id)a0;
+ (id)predicateForContactsMatchingPhoneNumber:(id)a0;
+ (id /* block */)comparatorForNameSortOrder:(long long)a0;
+ (id)contactWithDisplayName:(id)a0 emailOrPhoneNumber:(id)a1;
+ (id)descriptorWithKeyDescriptors:(id)a0 description:(id)a1;
+ (id)emptyContact;
+ (id)predicateForContactsMatchingFullTextSearch:(id)a0 containerIdentifiers:(id)a1 groupIdentifiers:(id)a2;
+ (id)predicateForContactsMatchingName:(id)a0;
+ (id)predicateForContactsWithIdentifiers:(id)a0;
+ (id)predicateForPreferredNameInContainersWithIdentifiers:(id)a0 groupsWithIdentifiers:(id)a1;
+ (id)predicateForPreferredNameInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
+ (id)_contactWithContact:(id)a0 createNewInstance:(BOOL)a1 propertyDescriptions:(id)a2;
+ (int)abPropertyIDfromContactPropertyKey:(id)a0;
+ (id)alwaysFetchedKeys;
+ (id)contactFromPerson:(void *)a0 keysToFetch:(id)a1;
+ (id)contactFromPerson:(void *)a0 keysToFetch:(id)a1 mutable:(BOOL)a2;
+ (id)contactFromPublicABPerson:(void *)a0 keysToFetch:(id)a1;
+ (id)contactFromPublicABPerson:(void *)a0 keysToFetch:(id)a1 mutable:(BOOL)a2;
+ (id)contactFromSuggestion:(id)a0;
+ (id)contactIdentifierFromSuggestionID:(id)a0;
+ (id)contactPropertyKeyFromABPropertyID:(int)a0;
+ (id)contactPropertyKeyFromPublicABPropertyID:(int)a0;
+ (id)contactWithArchivedData:(id)a0 error:(id *)a1;
+ (id)contactWithContact:(id)a0;
+ (id)contactWithDisplayName:(id)a0 handleStrings:(id)a1;
+ (id)contactWithIdentifier:(id)a0;
+ (id)contactWithIdentifierOnly:(id)a0;
+ (id)contactWithVCardData:(id)a0 error:(id *)a1;
+ (id)descriptorForAllComparatorKeys;
+ (id)descriptorForKeyDescriptors:(id)a0 description:(id)a1;
+ (id)descriptorForRequiredKeysForSearchableItem;
+ (BOOL)isContactUTIType:(id)a0;
+ (BOOL)isVCardDataUTIType:(id)a0;
+ (id)makeContactAndMergeValuesFromAvailableKeysInContact:(id)a0;
+ (id)newContactWithPropertyKeys:(id)a0 withValuesFromContact:(id)a1;
+ (id)predicateForContactMatchingEKParticipantWithName:(id)a0 emailAddress:(id)a1 URL:(id)a2 predicateDescription:(id)a3;
+ (id)predicateForContactMatchingEmailAddress:(id)a0;
+ (id)predicateForContactMatchingLabeledValueIdentifier:(id)a0;
+ (id)predicateForContactMatchingMapString:(id)a0;
+ (id)predicateForContactMatchingPhoneNumber:(id)a0;
+ (id)predicateForContactMatchingPhoneNumberWithDigits:(id)a0 countryCode:(id)a1;
+ (id)predicateForContactMatchingURLString:(id)a0;
+ (id)predicateForContactsLinkedToContact:(id)a0;
+ (id)predicateForContactsLinkedToContactWithIdentifier:(id)a0;
+ (id)predicateForContactsMatchingEmailAddress:(id)a0 groupIdentifiers:(id)a1 limitToOneResult:(BOOL)a2;
+ (id)predicateForContactsMatchingExternalUUIDs:(id)a0;
+ (id)predicateForContactsMatchingHandleStrings:(id)a0;
+ (id)predicateForContactsMatchingHandleStrings:(id)a0 inContainersWithIdentifiers:(id)a1;
+ (id)predicateForContactsMatchingInstantMessageAddress:(id)a0;
+ (id)predicateForContactsMatchingName:(id)a0 options:(unsigned long long)a1;
+ (id)predicateForContactsMatchingPhoneNumber:(id)a0 prefixHint:(id)a1;
+ (id)predicateForContactsMatchingPhoneNumber:(id)a0 prefixHint:(id)a1 groupIdentifiers:(id)a2 limitToOneResult:(BOOL)a3;
+ (id)predicateForContactsMatchingPostalAddress:(id)a0;
+ (id)predicateForContactsMatchingSocialProfile:(id)a0;
+ (id)predicateForContactsMatchingString:(id)a0 accountIdentifier:(id)a1 containerIdentifier:(id)a2 groupIdentifier:(id)a3;
+ (id)predicateForContactsWithNonUnifiedIdentifiers:(id)a0;
+ (id)predicateForContactsWithOrganizationName:(id)a0;
+ (id)predicateForFaultFulfillmentForLegacyIdentifier:(unsigned int)a0 identifier:(id)a1;
+ (id)predicateForLegacyIdentifier:(unsigned int)a0;
+ (id)predicateForSuggestionIdentifier:(unsigned long long)a0;
+ (id /* block */)preferredImageComparator;
+ (id)previewURLForContact:(id)a0;
+ (int)publicABPropertyIDFromContactPropertyKey:(id)a0;
+ (id)storeInfoFromCoder:(id)a0 storeIdentifier:(id)a1 key:(id)a2;
+ (id)suggestionIDFromContactIdentifier:(id)a0;
+ (void)you_used_a_property_that_you_didnt_request_when_you_fetched_the_contact;

- (void)encodeWithCoder:(id)a0;
- (id)mutableCopyWithZone:(struct _NSZone { } *)a0;
- (BOOL)hasChanges;
- (id)initWithCoder:(id)a0;
- (id)initWithIdentifier:(id)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)shortDebugDescription;
- (id)snapshot;
- (BOOL)isEqual:(id)a0;
- (id)init;
- (id)loadDataWithTypeIdentifier:(id)a0 forItemProviderCompletionHandler:(id /* block */)a1;
- (id)keyVector;
- (void).cxx_destruct;
- (BOOL)isKeyAvailable:(id)a0;
- (id)allLinkedIdentifiers;
- (BOOL)areKeysAvailable:(id)a0;
- (id)areKeysAvailable:(id)a0 useIgnorableKeys:(BOOL)a1 findMissingKeys:(BOOL)a2;
- (void)assertKeysAreAvailable:(id)a0;
- (id)copyWithCuratingAllSuggestions;
- (id)copyWithDistinctIdentifier;
- (id)copyWithPropertyKeys:(id)a0;
- (id)diffToSnapshotAndReturnError:(id *)a0;
- (BOOL)isEqualIgnoringIdentifiers:(id)a0;
- (id)_filteredArrayForValidValues:(id)a0;
- (id)_searchableItemIncludingInternalAttributes:(BOOL)a0;
- (BOOL)areAllAvailableKeysEqualToContact:(id)a0 ignoringIdentifiers:(BOOL)a1;
- (BOOL)areAllPropertiesButContactIdentifierEqualToContact:(id)a0;
- (BOOL)areAllPropertiesEqualToContactIgnoringIdentifiers:(id)a0;
- (void)assertKeyIsAvailable:(id)a0;
- (id)copyWithCachedExternalData;
- (id)copyWithSelfAsSnapshot;
- (void *)detachedPerson;
- (void *)detachedPersonWithError:(id *)a0;
- (id)explicitDisplayName;
- (id)initWithIdentifier:(id)a0 availableKeyDescriptor:(id)a1;
- (BOOL)isProperty:(id)a0 equalToOtherIgnoreIdentifiers:(id)a1;
- (BOOL)isUnifiedWithContactWithIdentifier:(id)a0;
- (BOOL)isUnifiedWithContactsWithIdentifiers:(id)a0;
- (id)linkedContactsFromStoreWithIdentifier:(id)a0;
- (id)linkedIdentifierMap;
- (BOOL)overwritePerson:(void *)a0;
- (BOOL)overwritePerson:(void *)a0 error:(id *)a1;
- (BOOL)overwritePublicABPerson:(void *)a0;
- (BOOL)preferredForImage;
- (BOOL)preferredForName;
- (id)searchableItemAttributeSetForUserActivity;
- (id)searchableItemForDragging;
- (id)searchableItemForIndexing;
- (id)selfOrMutableCopy;
- (BOOL)updateNewPublicABPerson:(void *)a0 inAddressBook:(void *)a1;

@end
