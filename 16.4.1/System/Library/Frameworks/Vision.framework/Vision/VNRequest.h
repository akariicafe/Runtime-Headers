@class NSString, NSArray, VNCanceller, VNControlledCapacityTasksQueue, VNAsyncStatus, VNWarningRecorder, NSObject, VNRequestConfiguration, VNRequestSpecifier, NSIndexSet, VNProcessingDevice;
@protocol OS_dispatch_queue, MTLDevice, OS_dispatch_semaphore;

@interface VNRequest : NSObject <VNWarningRecorder, VNSequencedRequestSupporting, VNClassCodeProviding, VNAsyncStatusProviding, NSCopying> {
    VNRequestConfiguration *_configuration;
    VNWarningRecorder *_warningRecorder;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _asyncStatusLock;
    VNCanceller *_canceller;
    BOOL _cancellationTriggered;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _cancellationResourcesLock;
    NSObject<OS_dispatch_queue> *_cancellationQueue;
    unsigned long long _serialNumber;
    unsigned long long _executionNanoseconds;
}

@property (class, readonly, copy) NSIndexSet *supportedPrivateRevisions;
@property (class, readonly, copy) NSIndexSet *allSupportedRevisions;
@property (class, readonly, copy, nonatomic) NSIndexSet *supportedRevisions;
@property (class, readonly, nonatomic) unsigned long long defaultRevision;
@property (class, readonly, nonatomic) unsigned long long currentRevision;

@property (retain) NSObject<OS_dispatch_semaphore> *cancellationSemaphore;
@property (readonly, copy, nonatomic) VNControlledCapacityTasksQueue *requestTasksQueue;
@property (readonly) unsigned long long serialNumber;
@property (readonly) VNProcessingDevice *explicitlyConfiguredProcessingDevice;
@property (readonly) BOOL cancellationTriggered;
@property (nonatomic) unsigned long long modelFileBackingStore;
@property (readonly) unsigned long long executionNanoseconds;
@property (readonly) double executionTimeInternal;
@property (retain, nonatomic) id<MTLDevice> preferredMetalContext;
@property (nonatomic) unsigned long long metalContextPriority;
@property (nonatomic) unsigned long long detectionLevel;
@property (copy, nonatomic) VNProcessingDevice *processingDevice;
@property (nonatomic) unsigned long long maximumProcessingDimensionOnTheLongSide;
@property (nonatomic) unsigned long long ioSurfaceMemoryPoolId;
@property (readonly) VNRequestSpecifier *specifier;
@property (nonatomic) BOOL preferBackgroundProcessing;
@property (nonatomic) BOOL usesCPUOnly;
@property (readonly, copy, nonatomic) NSArray *results;
@property (readonly, copy, nonatomic) id /* block */ completionHandler;
@property (nonatomic) unsigned long long revision;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) VNAsyncStatus *asyncStatus;

+ (void)initialize;
+ (BOOL)getFloatValue:(float *)a0 forKey:(id)a1 inOptions:(id)a2 error:(id *)a3;
+ (BOOL)getDoubleValue:(double *)a0 forKey:(id)a1 inOptions:(id)a2 withDefaultValue:(double)a3 error:(id *)a4;
+ (id)defaultProcessingDeviceForRevision:(unsigned long long)a0;
+ (const struct { unsigned long long x0; Class x1; unsigned long long x2; } *)dependentRequestCompatibility;
+ (BOOL)getDoubleValue:(double *)a0 forKey:(id)a1 inOptions:(id)a2 error:(id *)a3;
+ (BOOL)getFloatValue:(float *)a0 forKey:(id)a1 inOptions:(id)a2 withDefaultValue:(float)a3 error:(id *)a4;
+ (BOOL)warmUpSession:(id)a0 error:(id *)a1;
+ (BOOL)getOptionalArray:(id *)a0 forKey:(id)a1 inOptions:(id)a2 withElementsOfClass:(Class)a3 error:(id *)a4;
+ (const struct { unsigned long long x0; Class x1; unsigned long long x2; } *)dependentRequestMappingTable;
+ (const struct { unsigned long long x0; struct { int x0; int x1; } x1; struct { int x0; int x1; } x2; struct { int x0; int x1; } x3; } *)revisionAvailability;
+ (Class)configurationClass;
+ (id)createVNEntityIdentificationModelEntryPrintForRevision:(unsigned long long)a0 fromDescriptorData:(const void *)a1 length:(unsigned long long)a2 elementCount:(unsigned long long)a3 error:(id *)a4;
+ (id)descriptionForPrivateRevision:(unsigned long long)a0;
+ (BOOL)getOptionalObject:(id *)a0 ofClass:(Class)a1 forKey:(id)a2 inOptions:(id)a3 error:(id *)a4;
+ (unsigned int)VNClassCode;
+ (unsigned long long)_defaultRevisionForBuildVersion:(int)a0;
+ (id)_introspectionBuiltSupportedRevisions;
+ (unsigned long long)applicableRevisionForDependentRequestOfClass:(Class)a0 beingPerformedByRevision:(unsigned long long)a1;
+ (unsigned long long)firstSupportedRevisionInOrderedRevisionList:(unsigned long long)a0;
+ (Class)frameworkClass;
+ (BOOL)getRequiredObject:(id *)a0 ofClass:(Class)a1 forKey:(id)a2 inOptions:(id)a3 error:(id *)a4;
+ (id)newConfigurationInstance;
+ (unsigned long long)resolvedRevisionForRevision:(unsigned long long)a0;
+ (BOOL)setsTimeRangeOnResults;
+ (BOOL)supportsAnyRevision:(unsigned long long)a0;
+ (BOOL)supportsPrivateRevision:(unsigned long long)a0;
+ (BOOL)supportsRevision:(unsigned long long)a0;

- (void)setResults:(id)a0;
- (BOOL)willAcceptCachedResultsFromRequestWithConfiguration:(id)a0;
- (void)setProcessedResults:(id)a0;
- (id)sequencedRequestPreviousObservationsKey;
- (BOOL)wantsSequencedRequestObservationsRecording;
- (BOOL)internalPerformRevision:(unsigned long long)a0 inContext:(id)a1 error:(id *)a2;
- (BOOL)warmUpSession:(id)a0 error:(id *)a1;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)initWithCompletionHandler:(id /* block */)a0;
- (long long)dependencyProcessingOrdinality;
- (void)cancel;
- (id)configuration;
- (void)resolvedRevisionDidChangeFromRevision:(unsigned long long)a0;
- (id)newDefaultDetectorOptionsForRequestRevision:(unsigned long long)a0 session:(id)a1;
- (id)init;
- (BOOL)resultsAreAssignedWithOriginatingRequestSpecifier;
- (id)applicableDetectorTypeForRevision:(unsigned long long)a0 error:(id *)a1;
- (void)applyConfigurationOfRequest:(id)a0;
- (void).cxx_destruct;
- (id)warnings;
- (BOOL)setRevision:(unsigned long long)a0 error:(id *)a1;
- (id)applicableDetectorAndOptions:(id *)a0 forRevision:(unsigned long long)a1 loadedInSession:(id)a2 error:(id *)a3;
- (id)_alignFacesInContext:(id)a0 faces:(id)a1 qosClass:(unsigned int)a2 options:(id)a3 error:(id *)a4;
- (id)_defaultProcessingDevice;
- (void)_setResolvedRevision:(unsigned long long)a0;
- (BOOL)allowsCachingOfResults;
- (Class)applicableDetectorClassForRevision:(unsigned long long)a0 error:(id *)a1;
- (unsigned long long)applicableRevisionForDependentRequest:(id)a0;
- (BOOL)cancellationTriggeredAndReturnError:(id *)a0;
- (id)cancellerAndReturnError:(id *)a0;
- (void)categorizeFaceObservations:(id)a0 shouldRunDetectorBlock:(id /* block */)a1 facesThatNeedNoProcessing:(id)a2 facesThatNeedProcessing:(id)a3 facesThatNeed2DLandmarks:(id)a4;
- (void)copyStateOfRequest:(id)a0;
- (id)detectFaceLandmarksInContext:(id)a0 faces:(id)a1 error:(id *)a2;
- (id)detectFacesInContext:(id)a0 error:(id *)a1;
- (id /* block */)detectorProgressHandler;
- (Class)frameworkClass;
- (BOOL)hasCancellationHook;
- (BOOL)internalCancelInContext:(id)a0 error:(id *)a1;
- (id)newDefaultDetectorOptionsForSession:(id)a0;
- (id)newDefaultRequestInstance;
- (BOOL)performInContext:(id)a0 error:(id *)a1;
- (void)performInContextAsync:(id)a0 asyncDispatchQueue:(id)a1 asyncDispatchGroup:(id)a2;
- (id)processFaceObservations:(id)a0 revision:(unsigned long long)a1 regionOfInterest:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 detectorType:(id)a3 detectorOptions:(id)a4 shouldAlignFaceBBox:(id /* block */)a5 shouldRunDetectorBlock:(id /* block */)a6 context:(id)a7 error:(id *)a8;
- (void)recordWarning:(id)a0 value:(id)a1;
- (void)resetAsyncStatus;
- (unsigned long long)resolvedRevision;
- (void)setAsyncStatus:(BOOL)a0 error:(id)a1;
- (void)setResults:(id)a0 assignedWithOriginatingSpecifier:(BOOL)a1;
- (BOOL)validateConfigurationAndReturnError:(id *)a0;
- (BOOL)validateImageBuffer:(id)a0 ofNonZeroWidth:(unsigned long long *)a1 andHeight:(unsigned long long *)a2 error:(id *)a3;
- (id)valueForWarning:(id)a0;
- (BOOL)warmUpApplicableDetectorInSession:(id)a0 error:(id *)a1;

@end
