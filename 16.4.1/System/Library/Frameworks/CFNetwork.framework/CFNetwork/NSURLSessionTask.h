@class NSURL, NSURLResponse, NSURLSessionConfiguration, NSURLSessionTaskDependency, NSURLSessionTaskDependencyTree, NSURLSession, NSDictionary, NSObject, NSURLSessionTaskHTTPAuthenticator, NSProgress, __CFN_TaskMetrics, NSDate, NSString, NSURLRequest, __CFN_TransactionMetrics, __NSCFURLSessionDelegateWrapper, NSArray, NSData, NSError, NSUUID;
@protocol __NSURLSessionTaskGroupForConfiguration, NSURLSessionTaskDelegate, STExtractor, OS_nw_activity, OS_nw_endpoint, NSURLSessionAppleIDContext, OS_dispatch_queue, OS_voucher;

@interface NSURLSessionTask : NSObject <NSCopying, NSProgressReporting> {
    NSProgress *_uploadProgress;
    NSProgress *_downloadProgress;
    struct __CFDictionary { } *_atsStateCache;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _unfair_lock;
    BOOL _isInUpload;
    BOOL _undeterminedUploadProgressState;
    BOOL _undeterminedDownloadProgressState;
    BOOL _progressReportingFinished;
    BOOL _seenFirstResume;
    BOOL _prefersIncrementalDeliveryAPIStorage;
    float _priorityAPIStorage;
    __NSCFURLSessionDelegateWrapper *_publicDelegateWrapper;
    __NSCFURLSessionDelegateWrapper *_internalDelegateWrapper;
}

@property (readonly, copy) NSURLSessionConfiguration *_effectiveConfiguration;
@property unsigned long long taskIdentifier;
@property (copy) NSURLRequest *originalRequest;
@property (copy) NSURLRequest *currentRequest;
@property (readonly, retain) NSURL *currentRequest_URL;
@property (readonly, retain) NSURL *currentRequest_mainDocumentURL;
@property (copy) NSURLResponse *response;
@property long long countOfBytesReceived;
@property long long countOfBytesSent;
@property long long countOfBytesExpectedToSend;
@property long long countOfBytesExpectedToReceive;
@property long long state;
@property (copy) NSError *error;
@property double startTime;
@property (readonly, retain) id<__NSURLSessionTaskGroupForConfiguration> _taskGroup;
@property (readonly, retain) NSURLSession *session;
@property (readonly, retain) NSObject<OS_dispatch_queue> *workQueue;
@property long long _priorityValue;
@property double _loadingPriorityValue;
@property (readonly, nonatomic) NSString *_description;
@property (readonly, nonatomic) NSString *_loggableDescription;
@property (retain) __CFN_TransactionMetrics *_backgroundTransactionMetrics;
@property BOOL _shouldSkipPreferredClientCertificateLookup;
@property BOOL _cacheOnly;
@property BOOL _preventsSystemHTTPProxyAuthentication;
@property BOOL _requiresSecureHTTPSProxyConnection;
@property BOOL _preventsAppSSO;
@property BOOL _appSSOFallback;
@property BOOL _appleIDContextRedirect;
@property (copy) NSDictionary *_legacySocketStreamProperties;
@property (copy) NSDictionary *_cachedSocketStreamProperties;
@property (retain) struct _CFHSTSPolicy { } *_cfHSTS;
@property (retain) const struct _CFURLCache { } *_cfCache;
@property (retain) struct _CFURLCredentialStorage { } *_cfCreds;
@property (retain) struct OpaqueCFHTTPCookieStorage { } *_cfCookies;
@property unsigned long long _cachePolicy;
@property double _timeoutInterval;
@property (copy) NSDictionary *_proxySettings;
@property BOOL _proxyHandshakePending;
@property (copy) NSDictionary *_sslSettings;
@property BOOL _shouldPipelineHTTP;
@property BOOL _shouldUsePipelineHeuristics;
@property BOOL _shouldSkipPipelineProbe;
@property BOOL _shouldHandleCookies;
@property int _cookieAcceptPolicy;
@property BOOL _preventsIdleSystemSleep;
@property BOOL _allowsCellular;
@property int _networkServiceType;
@property (nonatomic) unsigned int _qos;
@property (retain) NSObject<OS_voucher> *_voucher;
@property BOOL _prohibitAuthUI;
@property BOOL _strictContentLength;
@property long long _suspensionThreshhold;
@property (copy) NSString *_boundInterfaceIdentifier;
@property BOOL _disallowCellular;
@property int _allowsExpensiveOverride;
@property int _allowsConstrainedOverride;
@property int _allowsCellularOverride;
@property BOOL _assumesHTTP3Capable;
@property unsigned long long _allowedProtocolTypes;
@property long long _requestPriority;
@property double _timeWindowDelay;
@property double _timeWindowDuration;
@property (copy) NSUUID *_uniqueIdentifier;
@property unsigned int _powerAssertion;
@property unsigned int _darkWakePowerAssertion;
@property (setter=_setConnectionIsCellular:) BOOL _connectionIsCellular;
@property BOOL _connectionIsCompanionLink;
@property (nonatomic) id _protocolForTask;
@property (copy) NSURLSessionTaskHTTPAuthenticator *authenticator;
@property BOOL _authenticatorConfiguredViaTaskProperty;
@property (retain, nonatomic) NSDictionary *_dependencyInfo;
@property (copy) NSDictionary *_DuetActivityProperties;
@property (retain, nonatomic) NSURLSessionTaskDependencyTree *dependencyTree;
@property (retain, nonatomic) NSURLSessionTaskDependency *taskDependency;
@property (retain, nonatomic) NSData *_backtrace;
@property (retain, nonatomic) NSURL *_backgroundPublishingURL;
@property BOOL _extractorFinishedDecoding;
@property BOOL _extractorPreparedForExtraction;
@property long long _countOfPendingBytesReceivedEncoded;
@property (nonatomic) BOOL _preconnect;
@property (readonly, nonatomic) BOOL _isAVAssetTask;
@property (retain) NSObject<OS_nw_activity> *_private_nw_activity;
@property (retain) __CFN_TaskMetrics *_metrics;
@property (copy, nonatomic) id /* block */ _httpConnectionInfoCompletionBlock;
@property unsigned long long _attribution;
@property BOOL _isKnownTracker;
@property (copy) NSString *_trackerContext;
@property BOOL _privacyProxyFailClosed;
@property BOOL _privacyProxyFailClosedForUnreachableNonMainHosts;
@property BOOL _prohibitPrivacyProxy;
@property int _requiresDNSSECValidation;
@property (copy, nonatomic) NSURLSessionConfiguration *_effectiveConfiguration;
@property (retain) NSObject<OS_nw_activity> *_nw_activity;
@property long long _priority;
@property double _loadingPriority;
@property long long _bytesPerSecondLimit;
@property (nonatomic) unsigned long long _expectedProgressTarget;
@property double _timeoutIntervalForResource;
@property (copy) NSString *_storagePartitionIdentifier;
@property (retain) NSURL *_siteForCookies;
@property BOOL _isTopLevelNavigation;
@property (copy) NSString *_pathToDownloadTaskFile;
@property (retain, nonatomic) NSDictionary *_trailers;
@property (copy) NSData *_TCPConnectionMetadata;
@property unsigned short _TLSMinimumSupportedProtocolVersion;
@property unsigned short _TLSMaximumSupportedProtocolVersion;
@property (readonly) unsigned short _TLSNegotiatedCipherSuite;
@property (nonatomic) BOOL _allowsQUIC;
@property (retain, nonatomic, setter=set_extractor:) id<STExtractor> _extractor;
@property (nonatomic) BOOL _hasSZExtractor;
@property (nonatomic) BOOL _doesSZExtractorConsumeExtractedData;
@property (copy, setter=_setAppleIDContext:) id<NSURLSessionAppleIDContext> _appleIDContext;
@property (retain, nonatomic) NSURL *_publishingURL;
@property long long _countOfBytesReceivedEncoded;
@property (copy, nonatomic) NSString *_APSRelayTopic;
@property (nonatomic) long long _discretionaryOverride;
@property (retain, nonatomic) NSObject<OS_nw_endpoint> *_hostOverride;
@property (copy, nonatomic) id /* block */ _cookieTransformCallback;
@property (readonly, nonatomic) NSArray *_resolvedCNAMEChain;
@property (retain, nonatomic) id<NSURLSessionTaskDelegate> _internalDelegate;
@property (nonatomic) BOOL _keepDownloadTaskFile;
@property (nonatomic) BOOL _callCompletionHandlerInline;
@property (retain) id<NSURLSessionTaskDelegate> delegate;
@property (readonly) NSProgress *progress;
@property (copy) NSDate *earliestBeginDate;
@property long long countOfBytesClientExpectsToSend;
@property long long countOfBytesClientExpectsToReceive;
@property (copy) NSString *taskDescription;
@property float priority;
@property BOOL prefersIncrementalDelivery;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)new;

- (id)initWithTask:(id)a0;
- (void)_setConnectionCacheKey:(void *)a0;
- (void)_onqueue_expectedProgressTargetChanged;
- (BOOL)_needSendingMetrics;
- (void)_onqueue_adjustPriorityHint:(float)a0 incremental:(BOOL)a1;
- (BOOL)shouldHandleCookiesAndSchemeIsAppropriate;
- (void)didReceiveInformationalResponse:(id)a0;
- (void)_didSendMetrics;
- (id)initWithOriginalRequest:(id)a0 ident:(unsigned long long)a1 taskGroup:(id)a2;
- (void)_finishProgressReporting;
- (void)_onqueue_adjustBytesPerSecondLimit:(long long)a0;
- (void)_appendCountOfPendingBytesReceivedEncoded:(long long)a0;
- (const struct XCookieStorage { void /* function */ **x0; struct __CFAllocator *x1; int x2; } *)_createXCookieStorage;
- (const struct __CFSet { } *)_getAuthenticatorStatusCodes;
- (id)_timingData;
- (void)_onSessionQueue_cleanupAndBreakCycles;
- (void)suspend;
- (const struct __CFDictionary { } *)_copyATSState;
- (void)updateCurrentRequest:(id)a0;
- (const struct __CFDictionary { } *)_copySocketStreamProperties;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)_withXURLCache:(id /* block */)a0;
- (void)cancel;
- (const struct XCredentialStorage { void /* function */ **x0; struct __CFAllocator *x1; int x2; } *)_createXCredentialStorage;
- (void)set_resolvedCNAMEChain:(id)a0;
- (void)dealloc;
- (struct _CFHSTSPolicy { } *)_copyHSTSPolicy;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)_getAuthenticationHeadersForResponse:(struct _CFURLResponse { } *)a0 completionHandler:(id /* block */)a1;
- (void)_adoptEffectiveConfiguration:(id)a0;
- (id)_incompleteCurrentTaskTransactionMetrics;
- (void)_consumePendingBytesReceivedEncoded;
- (id)init;
- (void)_setSocketProperties:(struct __CFDictionary { } *)a0 connectionProperties:(struct __CFDictionary { } *)a1;
- (void)set_TLSNegotiatedCipherSuite:(unsigned short)a0;
- (void)_takePreventIdleSleepAssertionIfAppropriate;
- (void)resume;
- (id)_incompleteTaskMetrics;
- (void)_releasePreventIdleSleepAssertionIfAppropriate;
- (void)_setExplicitCookieStorage:(struct OpaqueCFHTTPCookieStorage { } *)a0;
- (void)getUnderlyingHTTPConnectionInfoWithCompletionHandler:(id /* block */)a0;
- (void)_onqueue_releasePowerAsssertion;
- (void)_completeUploadProgress;
- (void)_onqueue_adoptEffectiveConfiguration:(id)a0;
- (void)_setExplicitStorageSession:(struct __CFURLStorageSession { } *)a0;
- (long long)computeAdjustedPoolPriority;
- (id)initWithTaskGroup:(id)a0;
- (void)initializeHTTPAuthenticatorWithAppleIDContext:(id)a0 statusCodes:(id)a1;

@end
