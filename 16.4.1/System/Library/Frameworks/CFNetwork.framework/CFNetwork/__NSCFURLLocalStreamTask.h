@class NSData, NSString, NSError, NSUUID, NSDictionary, NSURLResponse, NSMutableArray, NSURLRequest, NSObject;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface __NSCFURLLocalStreamTask : NSURLSessionStreamTask {
    struct BaseSocketStreamClient { void /* function */ **x0; } *_socketStreamClient;
    NSMutableArray *_extraWork;
    int _connectionState;
    NSObject<OS_dispatch_queue> *_workQueueForStreamTask;
    struct __CFReadStream { } *_readStream;
    struct __CFWriteStream { } *_writeStream;
    NSMutableArray *_pendingWork;
    BOOL _doingWorkOnThisQueue;
    NSData *_readBuffer;
    BOOL _readSignaled;
    BOOL _readEOF;
    struct { long long domain; int error; } _readError;
    NSData *_writeBuffer;
    BOOL _writeSignaled;
    BOOL _writeEOF;
    BOOL _deliveredConnectionEstablished;
    struct { long long domain; int error; } _writeError;
    long long _writeBufferAlreadyWrittenForNextWrite;
    NSMutableArray *_finalizationQueue;
    NSMutableArray *_afterConnectQueue;
    NSObject<OS_dispatch_source> *_tickerTimeoutTimer;
    id /* block */ _disavow;
    double _timeWindowDelay;
    double _timeWindowDuration;
    double startTime;
    long long _priorityValue;
    double _loadingPriorityValue;
    NSString *_boundInterfaceIdentifier;
    BOOL _disallowCellular;
    int _allowsExpensiveOverride;
    int _allowsConstrainedOverride;
    int _allowsCellularOverride;
    int _networkServiceType;
    NSDictionary *_legacySocketStreamProperties;
    BOOL _betterRouteDiscovered;
    BOOL _didIssueCancel;
    float priority;
}

@property (copy) NSData *_TCPConnectionMetadata;
@property (copy) NSData *_initialDataPayload;
@property unsigned long long taskIdentifier;
@property (copy) NSURLRequest *originalRequest;
@property (copy) NSURLRequest *currentRequest;
@property (copy) NSURLResponse *response;
@property long long countOfBytesClientExpectsToSend;
@property long long countOfBytesClientExpectsToReceive;
@property long long countOfBytesExpectedToSend;
@property long long countOfBytesExpectedToReceive;
@property long long countOfBytesReceived;
@property long long countOfBytesSent;
@property long long state;
@property (copy) NSString *taskDescription;
@property (copy) NSError *error;
@property (readonly) BOOL _goneSecure;
@property double _timeoutIntervalForResource;
@property (readonly, copy) NSUUID *_uniqueIdentifier;

- (void)_onqueue_resume;
- (void)captureStreams;
- (void)_task_onqueue_didFinish;
- (void)_task_onqueue_didReceiveDispatchData:(id)a0 completionHandler:(id /* block */)a1;
- (id)initWithHost:(id)a0 port:(long long)a1 taskGroup:(id)a2 disavow:(id /* block */)a3;
- (id)_effectiveConfiguration;
- (void)copyStreamProperty:(id)a0 completionHandler:(id /* block */)a1;
- (int)_networkServiceType;
- (int)_allowsCellularOverride;
- (void)_onSessionQueue_disavow;
- (BOOL)_disallowCellular;
- (void)setPriority:(float)a0;
- (void)closeRead;
- (void)_onSessionQueue_cleanupAndBreakCycles;
- (float)priority;
- (id)workQueue;
- (void)suspend;
- (struct __CFDictionary { } *)_copySocketStreamProperties;
- (BOOL)_cacheOnly;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)readDataOfMinLength:(unsigned long long)a0 maxLength:(unsigned long long)a1 timeout:(double)a2 completionHandler:(id /* block */)a3;
- (void)cancel;
- (double)_timeWindowDelay;
- (void)dealloc;
- (void)_adoptEffectiveConfiguration:(id)a0;
- (int)_allowsExpensiveOverride;
- (void)startSecureConnection;
- (id)description;
- (id)_boundInterfaceIdentifier;
- (void)closeWrite;
- (void)writeData:(id)a0 timeout:(double)a1 completionHandler:(id /* block */)a2;
- (void)stopSecureConnection;
- (void)resume;
- (int)_allowsConstrainedOverride;
- (double)_timeWindowDuration;
- (id)_initWithExistingTask:(id)a0 disavow:(id /* block */)a1;
- (id)_legacySocketStreamProperties;
- (long long)computeAdjustedPoolPriority;
- (id)initWithNetService:(id)a0 taskGroup:(id)a1 disavow:(id /* block */)a2;
- (void)set_allowsCellularOverride:(int)a0;
- (void)set_allowsConstrainedOverride:(int)a0;
- (void)set_allowsExpensiveOverride:(int)a0;
- (void)set_boundInterfaceIdentifier:(id)a0;
- (void)set_disallowCellular:(BOOL)a0;
- (void)set_legacySocketStreamProperties:(id)a0;
- (void)set_networkServiceType:(int)a0;
- (void)set_timeWindowDelay:(double)a0;
- (void)set_timeWindowDuration:(double)a0;

@end
