@class SCNOrderedDictionary, NSString, NSArray, NSMutableDictionary, SCNMaterialProperty, SCNTechnique;
@protocol MTLTexture;

@interface SCNCamera : NSObject <SCNAnimatable, SCNTechniqueSupport, NSCopying, NSSecureCoding> {
    struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; double x7; double x8; double x9; float x10; double x11; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x12; struct { void /* unknown type, empty encoding */ x0[4]; } x13; double x14; double x15; } x1; float x2; float x3; float x4; float x5; int x6; int x7; unsigned char x8 : 1; unsigned char x9 : 1; unsigned char x10 : 1; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; int x27; float x28; float x29; float x30; float x31; float x32; float x33; float x34; float x35; float x36; float x37; float x38; float x39; float x40; float x41; struct { float x0; float x1; float x2; float x3; float x4; int x5; int x6; } x42; struct __C3DEffectSlot *x43; unsigned long long x44; struct __C3DFXTechnique *x45; void *x46; float x47; } *_camera;
    unsigned char _isPresentationInstance : 1;
    unsigned char _custom : 1;
    unsigned char _legacyFov : 1;
    unsigned char _usesOrthographicProjection : 1;
    unsigned char _automaticallyAdjustsZRange : 1;
    unsigned char _fillMode : 1;
    unsigned char _projectionDirection : 1;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _animationsLock;
    SCNOrderedDictionary *_animations;
    NSMutableDictionary *_bindings;
    NSString *_name;
    float _xFov;
    float _yFov;
    double _orthographicScale;
    double _zNear;
    double _zFar;
    float _fieldOfView;
    float _focalLength;
    float _sensorSize;
    void /* unknown type, empty encoding */ _lensShift;
    void /* unknown type, empty encoding */ _postProjectionTransformTranslation;
    void /* unknown type, empty encoding */ _postProjectionTransformScale;
    float _fStop;
    float _focusDistance;
    float _dofIntensity;
    long long _bladeCount;
    long long _focalBlurSampleCount;
    float _aspectRatio;
    unsigned long long _categoryBitMask;
    struct SCNMatrix4 { float m11; float m12; float m13; float m14; float m21; float m22; float m23; float m24; float m31; float m32; float m33; float m34; float m41; float m42; float m43; float m44; } _projectionTransform;
    SCNTechnique *_technique;
    SCNMaterialProperty *_colorGrading;
    BOOL _wantsHDR;
    float _whitePoint;
    float _averageGray;
    float _exposureOffset;
    float _minimumExposure;
    float _maximumExposure;
    BOOL _wantsExposureAdaptation;
    float _exposureAdaptationDuration;
    float _exposureAdaptationBrighteningSpeedFactor;
    float _exposureAdaptationDarkeningSpeedFactor;
    double _exposureAdaptationHistogramRangeHighProbability;
    double _exposureAdaptationHistogramRangeLowProbability;
    long long _exposureAdaptationMode;
    float _bloomIntensity;
    float _bloomThreshold;
    int _bloomIteration;
    float _bloomIterationSpread;
    float _bloomBlurRadius;
    float _motionBlurIntensity;
    float _vignettingPower;
    float _vignettingIntensity;
    float _colorFringeStrength;
    float _colorFringeIntensity;
    float _saturation;
    float _contrast;
    float _grainIntensity;
    float _grainScale;
    BOOL _grainIsColored;
    float _whiteBalanceTemperature;
    float _whiteBalanceTint;
    struct { float intensity; float radius; float bias; float depthThreshold; float normalThreshold; long long sampleCount; long long downSample; } _screenSpaceAmbientOcclusion;
    id<MTLTexture> _grainTexture;
    float _grainSlice;
}

@property (class, readonly) BOOL supportsSecureCoding;

@property (copy, nonatomic) NSString *name;
@property (nonatomic) double fieldOfView;
@property (nonatomic) long long projectionDirection;
@property (nonatomic) double focalLength;
@property (nonatomic) double sensorHeight;
@property (nonatomic) double zNear;
@property (nonatomic) double zFar;
@property (nonatomic) BOOL automaticallyAdjustsZRange;
@property (nonatomic) BOOL usesOrthographicProjection;
@property (nonatomic) double orthographicScale;
@property (nonatomic) struct SCNMatrix4 { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; } projectionTransform;
@property (nonatomic) BOOL wantsDepthOfField;
@property (nonatomic) double focusDistance;
@property (nonatomic) long long focalBlurSampleCount;
@property (nonatomic) double fStop;
@property (nonatomic) long long apertureBladeCount;
@property (nonatomic) double motionBlurIntensity;
@property (nonatomic) double screenSpaceAmbientOcclusionIntensity;
@property (nonatomic) double screenSpaceAmbientOcclusionRadius;
@property (nonatomic) double screenSpaceAmbientOcclusionBias;
@property (nonatomic) double screenSpaceAmbientOcclusionDepthThreshold;
@property (nonatomic) double screenSpaceAmbientOcclusionNormalThreshold;
@property (nonatomic) BOOL wantsHDR;
@property (nonatomic) double exposureOffset;
@property (nonatomic) double averageGray;
@property (nonatomic) double whitePoint;
@property (nonatomic) BOOL wantsExposureAdaptation;
@property (nonatomic) double exposureAdaptationBrighteningSpeedFactor;
@property (nonatomic) double exposureAdaptationDarkeningSpeedFactor;
@property (nonatomic) double minimumExposure;
@property (nonatomic) double maximumExposure;
@property (nonatomic) double bloomThreshold;
@property (nonatomic) long long bloomIterationCount;
@property (nonatomic) double bloomIterationSpread;
@property (nonatomic) double bloomIntensity;
@property (nonatomic) double bloomBlurRadius;
@property (nonatomic) double vignettingPower;
@property (nonatomic) double vignettingIntensity;
@property (nonatomic) double colorFringeStrength;
@property (nonatomic) double colorFringeIntensity;
@property (nonatomic) double saturation;
@property (nonatomic) double contrast;
@property (nonatomic) double grainIntensity;
@property (nonatomic) double grainScale;
@property (nonatomic) BOOL grainIsColored;
@property (nonatomic) double whiteBalanceTemperature;
@property (nonatomic) double whiteBalanceTint;
@property (readonly, nonatomic) SCNMaterialProperty *colorGrading;
@property (nonatomic) unsigned long long categoryBitMask;
@property (readonly) NSArray *animationKeys;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic) SCNTechnique *technique;

+ (id)camera;
+ (id)cameraWithCameraRef:(struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; double x7; double x8; double x9; float x10; double x11; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x12; struct { void /* unknown type, empty encoding */ x0[4]; } x13; double x14; double x15; } x1; float x2; float x3; float x4; float x5; int x6; int x7; unsigned char x8 : 1; unsigned char x9 : 1; unsigned char x10 : 1; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; int x27; float x28; float x29; float x30; float x31; float x32; float x33; float x34; float x35; float x36; float x37; float x38; float x39; float x40; float x41; struct { float x0; float x1; float x2; float x3; float x4; int x5; int x6; } x42; struct __C3DEffectSlot *x43; unsigned long long x44; struct __C3DFXTechnique *x45; void *x46; float x47; } *)a0;
+ (id)cameraWithMDLCamera:(id)a0;
+ (id)keyPathsForValuesAffectingFieldOfView;
+ (id)keyPathsForValuesAffectingFocalLength;

- (void)addAnimation:(id)a0;
- (void)encodeWithCoder:(id)a0;
- (void)setAperture:(double)a0;
- (double)aperture;
- (id)initWithCoder:(id)a0;
- (long long)fillMode;
- (double)aspectRatio;
- (id)debugQuickLookObject;
- (void)removeAllAnimations;
- (id)identifier;
- (void)setAspectRatio:(double)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)setIdentifier:(id)a0;
- (void)addAnimation:(id)a0 forKey:(id)a1;
- (void)dealloc;
- (id)copy;
- (id)init;
- (id)scene;
- (void)setFillMode:(long long)a0;
- (id)animationForKey:(id)a0;
- (void)removeAnimationForKey:(id)a0;
- (id)animationPlayerForKey:(id)a0;
- (void)_registerAsObserver;
- (struct __C3DAnimationManager { } *)animationManager;
- (void)setLensShift:(SEL)a0;
- (void)setGrainSlice:(double)a0;
- (void)setGrainTexture:(id)a0;
- (double)focalBlurRadius;
- (const void *)__CFObject;
- (BOOL)__removeAnimation:(id)a0 forKey:(id)a1;
- (void)_checkSettingsConsistency;
- (void)_copyAnimationsFrom:(id)a0;
- (void)_customEncodingOfSCNCamera:(id)a0;
- (void)_didDecodeSCNCamera:(id)a0;
- (void)_pauseAnimation:(BOOL)a0 forKey:(id)a1 pausedByNode:(BOOL)a2;
- (id)_scnAnimationForKey:(id)a0;
- (id)_scnBindings;
- (void)_syncEntityObjCModel;
- (void)_syncObjCAnimations;
- (void)_syncObjCModel;
- (void)_updateFieldOfView;
- (void)_updateFocalLength;
- (void)addAnimationPlayer:(id)a0 forKey:(id)a1;
- (void)bindAnimatablePath:(id)a0 toObject:(id)a1 withKeyPath:(id)a2 options:(id)a3;
- (long long)bloomIteration;
- (struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; double x7; double x8; double x9; float x10; double x11; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x12; struct { void /* unknown type, empty encoding */ x0[4]; } x13; double x14; double x15; } x1; float x2; float x3; float x4; float x5; int x6; int x7; unsigned char x8 : 1; unsigned char x9 : 1; unsigned char x10 : 1; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; int x27; float x28; float x29; float x30; float x31; float x32; float x33; float x34; float x35; float x36; float x37; float x38; float x39; float x40; float x41; struct { float x0; float x1; float x2; float x3; float x4; int x5; int x6; } x42; struct __C3DEffectSlot *x43; unsigned long long x44; struct __C3DFXTechnique *x45; void *x46; float x47; } *)cameraRef;
- (id)copyAnimationChannelForKeyPath:(id)a0 animation:(id)a1;
- (id)debugQuickLookData;
- (float)dofIntensity;
- (double)exposureAdaptationDuration;
- (double)exposureAdaptationHistogramRangeHighProbability;
- (double)exposureAdaptationHistogramRangeLowProbability;
- (long long)exposureAdaptationMode;
- (long long)fieldOfViewOrientation;
- (double)focalDistance;
- (double)focalSize;
- (double)grainSlice;
- (id)grainTexture;
- (BOOL)hasCustomProjectionTransform;
- (id)initPresentationCameraWithCameraRef:(struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; double x7; double x8; double x9; float x10; double x11; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x12; struct { void /* unknown type, empty encoding */ x0[4]; } x13; double x14; double x15; } x1; float x2; float x3; float x4; float x5; int x6; int x7; unsigned char x8 : 1; unsigned char x9 : 1; unsigned char x10 : 1; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; int x27; float x28; float x29; float x30; float x31; float x32; float x33; float x34; float x35; float x36; float x37; float x38; float x39; float x40; float x41; struct { float x0; float x1; float x2; float x3; float x4; int x5; int x6; } x42; struct __C3DEffectSlot *x43; unsigned long long x44; struct __C3DFXTechnique *x45; void *x46; float x47; } *)a0;
- (id)initWithCameraRef:(struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; double x7; double x8; double x9; float x10; double x11; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x12; struct { void /* unknown type, empty encoding */ x0[4]; } x13; double x14; double x15; } x1; float x2; float x3; float x4; float x5; int x6; int x7; unsigned char x8 : 1; unsigned char x9 : 1; unsigned char x10 : 1; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; int x27; float x28; float x29; float x30; float x31; float x32; float x33; float x34; float x35; float x36; float x37; float x38; float x39; float x40; float x41; struct { float x0; float x1; float x2; float x3; float x4; int x5; int x6; } x42; struct __C3DEffectSlot *x43; unsigned long long x44; struct __C3DFXTechnique *x45; void *x46; float x47; } *)a0;
- (BOOL)isAnimationForKeyPaused:(id)a0;
- (BOOL)isPausedOrPausedByInheritance;
- (void /* unknown type, empty encoding */)lensShift;
- (void)pauseAnimationForKey:(id)a0;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })postProjectionTransform;
- (id)presentationCamera;
- (id)presentationInstance;
- (struct SCNMatrix4 { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; })projectionTransformWithViewportSize:(struct CGSize { double x0; double x1; })a0;
- (void)removeAllAnimationsWithBlendOutDuration:(double)a0;
- (void)removeAllBindings;
- (void)removeAnimationForKey:(id)a0 blendOutDuration:(double)a1;
- (void)removeAnimationForKey:(id)a0 fadeOutDuration:(double)a1;
- (void)resumeAnimationForKey:(id)a0;
- (struct __C3DScene { } *)sceneRef;
- (long long)screenSpaceAmbientOcclusionDownSample;
- (long long)screenSpaceAmbientOcclusionSampleCount;
- (void)setBloomIteration:(long long)a0;
- (void)setDofIntensity:(float)a0;
- (void)setExposureAdaptationDuration:(double)a0;
- (void)setExposureAdaptationHistogramRangeHighProbability:(double)a0;
- (void)setExposureAdaptationHistogramRangeLowProbability:(double)a0;
- (void)setExposureAdaptationMode:(long long)a0;
- (void)setFieldOfViewOrientation:(long long)a0;
- (void)setFocalBlurRadius:(double)a0;
- (void)setFocalDistance:(double)a0;
- (void)setFocalSize:(double)a0;
- (void)setPostProjectionTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a0;
- (void)setPostProjectionTransformScale:(SEL)a0;
- (void)setPostProjectionTransformTranslation:(SEL)a0;
- (void)setScreenSpaceAmbientOcclusionDownSample:(long long)a0;
- (void)setScreenSpaceAmbientOcclusionSampleCount:(long long)a0;
- (void)setSpeed:(double)a0 forAnimationKey:(id)a1;
- (void)setXFov:(double)a0;
- (void)setXMag:(double)a0;
- (void)setYFov:(double)a0;
- (void)setYMag:(double)a0;
- (void)unbindAnimatablePath:(id)a0;
- (BOOL)useLegacyFov;
- (double)xFov;
- (double)xMag;
- (double)yFov;
- (double)yMag;

@end
