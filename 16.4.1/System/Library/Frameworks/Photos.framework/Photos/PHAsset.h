@class NSURL, CLLocation, NSDate, NSManagedObjectContext, NSString, NSSet, NSManagedObjectID, PHPhotoLibrary, NSArray, NSData, NSNumber, PLLazyObject, NSValue;

@interface PHAsset : PHObject <PHThumbnailAsset, _PLImageLoadingAsset, PHResourceChooserAsset, PFParallaxAsset> {
    PLLazyObject *_lazyCachedLocation;
    _Atomic BOOL _canUseLocationCoordinateForLocation;
    NSString *_cloudAssetGUID;
    unsigned short _bundleScope;
}

@property (class, readonly, nonatomic) id quickClassificationFaceAdjustmentVersion;

@property (readonly, nonatomic) NSManagedObjectID *objectID;
@property (readonly, nonatomic) PHPhotoLibrary *photoLibrary;
@property (readonly, nonatomic) unsigned long long thumbnailIndex;
@property (readonly, nonatomic) BOOL complete;
@property (readonly, nonatomic) long long cloudPlaceholderKind;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSNumber *livePhotoSRLCompensationAmount;
@property (readonly, nonatomic) long long syndicationEligibility;
@property (readonly, nonatomic) NSString *syndicatedAppDisplayName;
@property (readonly, nonatomic) int avalanchePickType;
@property (readonly, nonatomic) NSData *locationData;
@property (readonly, nonatomic) short savedAssetType;
@property (readonly, nonatomic) BOOL cloudIsDeletable;
@property (readonly, nonatomic) unsigned long long originalResourceChoice;
@property (readonly, copy) NSSet *sceneClassifications;
@property (readonly, nonatomic) NSData *distanceIdentity;
@property (readonly, nonatomic) long long imageOrientation;
@property (readonly, nonatomic) double aspectRatio;
@property (readonly, nonatomic) NSString *uniformTypeIdentifier;
@property (readonly, nonatomic) unsigned long long persistenceState;
@property (readonly, nonatomic) unsigned long long thumbnailIndex;
@property (readonly, nonatomic) NSString *directory;
@property (readonly, nonatomic) NSString *filename;
@property (readonly, nonatomic) NSDate *trashedDate;
@property (readonly, nonatomic) NSDate *adjustmentTimestamp;
@property (readonly, nonatomic) NSString *thumbnailIdentifier;
@property (readonly, nonatomic) BOOL complete;
@property (readonly, nonatomic) NSURL *ALAssetURL;
@property (readonly, nonatomic) int exifOrientation;
@property (readonly, nonatomic) NSString *originalColorSpace;
@property (readonly, nonatomic) NSData *imageRequestHints;
@property (readonly, nonatomic) double curationScore;
@property (readonly, nonatomic) float overallAestheticScore;
@property (readonly, nonatomic) long long cloudPlaceholderKind;
@property (readonly, nonatomic) long long videoCpDurationValue;
@property (readonly, nonatomic) struct CLLocationCoordinate2D { double latitude; double longitude; } locationCoordinate;
@property (readonly, nonatomic) unsigned short playbackVariation;
@property (readonly, nonatomic) NSNumber *hdrGain;
@property (readonly, nonatomic) NSString *title;
@property (readonly, nonatomic) NSString *originalFilename;
@property (readonly, nonatomic) unsigned short syndicationState;
@property (readonly, nonatomic) unsigned long long reframeVariation;
@property (readonly, nonatomic) NSDate *localCreationDate;
@property (readonly, nonatomic) long long creationDateSource;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } preferredCropRect;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } acceptableCropRect;
@property (readonly, nonatomic) BOOL hasPhotoColorAdjustments;
@property (readonly, nonatomic) NSArray *faceRegions;
@property (readonly, nonatomic) double faceAreaMinX;
@property (readonly, nonatomic) double faceAreaMaxX;
@property (readonly, nonatomic) double faceAreaMinY;
@property (readonly, nonatomic) double faceAreaMaxY;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } originalFaceAreaRect;
@property (readonly, nonatomic) NSValue *originalFaceAreaRectValue;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } normalizedFaceAreaRect;
@property (readonly, nonatomic) NSArray *petRegions;
@property (readonly, nonatomic) long long RAWBadgeAttributes;
@property (readonly, nonatomic) BOOL hasKeywords;
@property (readonly, copy, nonatomic) NSString *cloudIdentifier;
@property (readonly, nonatomic) id faceAdjustmentVersion;
@property (readonly, nonatomic) short faceAnalysisVersion;
@property (nonatomic) BOOL assetDescriptionWasSet;
@property BOOL canUseLocationCoordinateForLocation;
@property (readonly, nonatomic) NSDate *analysisStateModificationDate;
@property (readonly, nonatomic) unsigned short deferredProcessingNeeded;
@property (readonly, nonatomic) unsigned short videoDeferredProcessingNeeded;
@property (readonly, nonatomic) BOOL isVideo;
@property (readonly, nonatomic) BOOL isHDRVideo;
@property (readonly, nonatomic) BOOL isLoopingVideo;
@property (readonly, nonatomic) BOOL isPhoto;
@property (readonly, nonatomic) BOOL isAudio;
@property (readonly, nonatomic) BOOL isPhotoStreamPhoto;
@property (readonly, nonatomic) BOOL hasPhotoStreamTagID;
@property (readonly, nonatomic) BOOL isCloudSharedAsset;
@property (readonly, nonatomic) BOOL isMomentSharedAsset;
@property (readonly, nonatomic) BOOL isReferencedAsset;
@property (readonly, nonatomic) BOOL isGuestAsset;
@property (readonly, nonatomic) BOOL isSyndicatedAssetSavedToUserLibrary;
@property (readonly, nonatomic) BOOL isOffline;
@property (readonly, nonatomic) BOOL isCloudPlaceholder;
@property (readonly, nonatomic) BOOL isCloudPhotoLibraryAsset;
@property (readonly, nonatomic) BOOL isStreamedVideo;
@property (readonly, nonatomic) BOOL isHighFrameRateVideo;
@property (readonly, nonatomic) BOOL isHDVideo;
@property (readonly, nonatomic) BOOL isProRes;
@property (readonly, nonatomic) BOOL isJPEG;
@property (readonly, nonatomic) BOOL isJPEG2000;
@property (readonly, nonatomic) BOOL isRAW;
@property (readonly, nonatomic) BOOL isRAWPlusJPEG;
@property (readonly, nonatomic) BOOL isHEIF;
@property (readonly, nonatomic) BOOL isTIFF;
@property (readonly, nonatomic) BOOL isPNG;
@property (readonly, nonatomic) BOOL isPDF;
@property (readonly, nonatomic) BOOL isPSD;
@property (readonly, nonatomic) BOOL isAnimatedGIF;
@property (readonly, nonatomic) BOOL isPartOfBurst;
@property (readonly, nonatomic) BOOL isHEICSequence;
@property (readonly, nonatomic) BOOL isCinematicVideo;
@property (readonly, nonatomic) BOOL isMonoskiMedia;
@property (readonly, nonatomic) BOOL isPhotoIris;
@property (readonly, nonatomic) BOOL isPhotoIrisPlaceholder;
@property (readonly, nonatomic) BOOL canPlayPhotoIris;
@property (readonly, nonatomic) BOOL canPlayAutoloop;
@property (readonly, nonatomic) BOOL canPlayMirror;
@property (readonly, nonatomic) BOOL canPlayLongExposure;
@property (readonly, nonatomic) BOOL canPlayLoopingVideo;
@property (readonly, nonatomic) BOOL isTimelapsePlaceholder;
@property (readonly, nonatomic) BOOL isIncludedInMoments;
@property (readonly, nonatomic) BOOL isIncludedInCloudFeeds;
@property (readonly, nonatomic, getter=isTrashed) BOOL trashed;
@property (readonly, nonatomic) BOOL canPerformSharingAction;
@property (readonly, nonatomic) double highlightPromotionScore;
@property (readonly, nonatomic) double highlightVisibilityScore;
@property (readonly, nonatomic) BOOL canFlipFullSizeRender;
@property (readonly, nonatomic) BOOL isWalrusEnabled;
@property (readonly, nonatomic) BOOL isLocalVideoKeyFrameValid;
@property (readonly, nonatomic) unsigned short videoCpVisibilityState;
@property (readonly, nonatomic) BOOL participatesInLibraryScope;
@property (readonly, nonatomic) NSString *resourcesDebugDescription;
@property (readonly, nonatomic) NSString *metadataDebugDescription;
@property (readonly, nonatomic) NSString *croppingDebugDescription;
@property (readonly, nonatomic) NSString *variationSuggestionStatesDetails;
@property (readonly, nonatomic) long long playbackStyle;
@property (readonly, nonatomic) long long mediaType;
@property (readonly, nonatomic) unsigned long long mediaSubtypes;
@property (readonly, nonatomic) unsigned long long pixelWidth;
@property (readonly, nonatomic) unsigned long long pixelHeight;
@property (readonly, nonatomic) NSDate *creationDate;
@property (readonly, nonatomic) NSDate *modificationDate;
@property (readonly, nonatomic) CLLocation *location;
@property (readonly, nonatomic) double duration;
@property (readonly, nonatomic, getter=isHidden) BOOL hidden;
@property (readonly, nonatomic, getter=isFavorite) BOOL favorite;
@property (readonly, nonatomic, getter=isSyncFailureHidden) BOOL syncFailureHidden;
@property (readonly, nonatomic) NSString *burstIdentifier;
@property (readonly, nonatomic) unsigned long long burstSelectionTypes;
@property (readonly, nonatomic) BOOL representsBurst;
@property (readonly, nonatomic) unsigned long long sourceType;
@property (readonly, nonatomic) BOOL hasAdjustments;
@property (readonly, nonatomic) NSString *adjustmentFormatIdentifier;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSManagedObjectID *objectID;
@property (readonly, nonatomic) NSManagedObjectContext *managedObjectContextForFetchingResources;
@property (readonly, nonatomic) unsigned long long effectiveThumbnailIndex;
@property (readonly, copy, nonatomic) NSString *localIdentifier;
@property (readonly, nonatomic) BOOL supportsSegmentationResourceCaching;
@property (readonly, nonatomic) NSURL *segmentationResourceURL;

+ (id)transformValueExpression:(id)a0 forKeyPath:(id)a1;
+ (BOOL)managedObjectSupportsTrashedState;
+ (id)fetchPredicateFromComparisonPredicate:(id)a0 options:(id)a1;
+ (Class)propertySetClassForPropertySet:(id)a0;
+ (id)propertiesToFetchWithHint:(unsigned long long)a0;
+ (id)entityKeyMap;
+ (id)fetchType;
+ (id)identifierCode;
+ (unsigned long long)propertyFetchHintsForPropertySets:(id)a0;
+ (id)propertySetsForPropertyFetchHints:(unsigned long long)a0;
+ (id)managedEntityName;
+ (id)propertySetAccessorsByPropertySet;
+ (id)fetchAssetsGroupedByFaceUUIDForFaces:(id)a0;
+ (id)fetchAssetsWithLocalIdentifiers:(id)a0 options:(id)a1;
+ (id)fetchAssetsWithUUIDs:(id)a0 options:(id)a1;
+ (id)fetchUserCuratedAssetsInMemory:(id)a0;
+ (id)_transformMediaSubtypeReferences:(id)a0 inComparisonPredicate:(id)a1 options:(id)a2;
+ (id)fetchAssetsForKeywords:(id)a0 options:(id)a1;
+ (id)requestCuratedAssetsInAssetCollection:(id)a0 referencePersons:(id)a1 options:(id)a2;
+ (id)_assetFetchResultFromAssets:(id)a0 options:(id)a1;
+ (void)_batchFetchAdditionalPropertySetsIfNeeded:(id)a0 forAssets:(id)a1;
+ (id)_composePropertiesToFetchWithHint:(unsigned long long)a0;
+ (void)_computeFingerPrintsOfAsset:(id)a0 completionHandler:(id /* block */)a1;
+ (id)_currentTimestampString;
+ (id)_descriptionForMediaSubtype:(unsigned long long)a0;
+ (id)_descriptionForVariationSuggestionStates:(unsigned long long)a0;
+ (id)_descriptionForVariationSuggestionType:(unsigned long long)a0;
+ (unsigned long long)_extendedPropertyFetchHintsForPropertySets:(id)a0;
+ (id)_fetchRepresentativeAssetInAssetCollection:(id)a0;
+ (id)_imageManagerRequestLoggingQueue;
+ (id)_inq_highestImageManagerRequestIDsObserved;
+ (id)_inq_imageManagerRequestLogsByAssetUUID;
+ (id)_inq_imageManagerRequestMessagesByRequestIDForAssetUUID:(id)a0 requestID:(long long)a1;
+ (void)_inq_recordRequestID:(long long)a0;
+ (void)_inq_trimToMostRecentImageManagerMessages;
+ (BOOL)_isLibraryScopeExiting:(id)a0;
+ (BOOL)_isLivePhotoWithPhotoIris:(BOOL)a0 hasAdjustments:(BOOL)a1 videoCpDuration:(long long)a2 videoCPVisibility:(unsigned short)a3 sourceType:(unsigned long long)a4 deferredProcessingNeeded:(unsigned short)a5;
+ (BOOL)_libraryScopeAssetContributedByCurrentUser:(id)a0;
+ (id)_requestCuratedAssetInAssetCollection:(id)a0 referenceAsset:(id)a1 referencePersons:(id)a2 fetchOptions:(id)a3 onlyKey:(BOOL)a4;
+ (id)_unfetchedPropertySetsForAssets:(id)a0 fromPropertySets:(id)a1;
+ (id)composabilityScoresOfAssets:(id)a0 options:(id)a1 error:(id *)a2;
+ (id)corePropertiesToFetch;
+ (long long)countOfAssetsWithLocationFromUUIDs:(id)a0 photoLibrary:(id)a1;
+ (id)descriptionForMediaSubtypes:(unsigned long long)a0;
+ (id)descriptionForMediaType:(long long)a0;
+ (id)descriptionForPlaybackStyle:(long long)a0;
+ (id)faceWorkerPropertiesToFetch;
+ (id)fetchAllAssetsInYearRepresentedByYearHighlight:(id)a0 options:(id)a1;
+ (id)fetchAssetsAllowedForSceneProcessingWithOptions:(id)a0;
+ (id)fetchAssetsForBehavioralCurationWithOptions:(id)a0;
+ (id)fetchAssetsForFaceGroups:(id)a0 options:(id)a1;
+ (id)fetchAssetsForFaces:(id)a0 options:(id)a1;
+ (id)fetchAssetsForPerson:(id)a0 options:(id)a1;
+ (id)fetchAssetsForPersons:(id)a0 options:(id)a1;
+ (id)fetchAssetsForReferences:(id)a0 photoLibrary:(id)a1;
+ (id)fetchAssetsFromCameraSinceDate:(id)a0 options:(id)a1;
+ (id)fetchAssetsGroupedByFaceUUIDForFaces:(id)a0 fetchPropertySets:(id)a1;
+ (id)fetchAssetsInAssetCollection:(id)a0 options:(id)a1;
+ (id)fetchAssetsInAssetCollections:(id)a0 options:(id)a1;
+ (id)fetchAssetsInBoundingBoxWithTopLeftLocation:(id)a0 bottomRightLocation:(id)a1 options:(id)a2;
+ (id)fetchAssetsInImportSessions:(id)a0 options:(id)a1;
+ (id)fetchAssetsInLibraryScope:(id)a0 fromAssets:(id)a1;
+ (id)fetchAssetsInLibraryScope:(id)a0 options:(id)a1;
+ (id)fetchAssetsInPreviewStateInLibraryScope:(id)a0 options:(id)a1;
+ (id)fetchAssetsInPreviewStateWithPhotosOrPhotosDeferredSuggestedByClientTypeWithOptions:(id)a0;
+ (id)fetchAssetsInPreviewStateWithSuggestedByClientType:(short)a0 options:(id)a1;
+ (id)fetchAssetsMatchingAdjustedFingerPrint:(id)a0 photoLibrary:(id)a1;
+ (id)fetchAssetsMatchingMasterFingerPrint:(id)a0 photoLibrary:(id)a1;
+ (id)fetchAssetsNeedingSceneProcessingWithOptions:(id)a0;
+ (id)fetchAssetsWithALAssetURLs:(id)a0 options:(id)a1;
+ (id)fetchAssetsWithBurstIdentifier:(id)a0 options:(id)a1;
+ (id)fetchAssetsWithCloudIdentifiers:(id)a0 options:(id)a1;
+ (id)fetchAssetsWithCurrentUserAsLibraryScopeContributor:(BOOL)a0 inLibraryScope:(id)a1 options:(id)a2;
+ (id)fetchAssetsWithMediaType:(long long)a0 options:(id)a1;
+ (id)fetchAssetsWithObjectIDs:(id)a0 options:(id)a1;
+ (id)fetchAssetsWithOptions:(id)a0;
+ (id)fetchAssetsWithSyndicationIdentifiers:(id)a0 options:(id)a1;
+ (id)fetchAssetsWithSyndicationIdentifiers:(id)a0 options:(id)a1 includeRejected:(BOOL)a2;
+ (id)fetchAssetsWithoutOriginalsInAssetCollection:(id)a0 options:(id)a1;
+ (id)fetchCuratedAssetsForMomentShareCreationWithAssets:(id)a0 options:(id)a1;
+ (id)fetchCuratedAssetsInAssetCollection:(id)a0;
+ (id)fetchCuratedAssetsInAssetCollection:(id)a0 options:(id)a1;
+ (id)fetchCustomUserAssetsInMemory:(id)a0 options:(id)a1;
+ (id)fetchExtendedCuratedAndRepresentativeAssetsAssociatedWithMemory:(id)a0 options:(id)a1;
+ (id)fetchExtendedCuratedAssetsInAssetCollection:(id)a0 options:(id)a1;
+ (id)fetchGuestAssetsInCollectionContainingAsset:(id)a0 options:(id)a1;
+ (id)fetchGuestAssetsWithOptions:(id)a0;
+ (id)fetchKeyAssetByHighlightUUIDForHighlights:(id)a0 options:(id)a1;
+ (id)fetchKeyAssetByMemoryUUIDForMemories:(id)a0 options:(id)a1;
+ (id)fetchKeyAssetBySuggestionUUIDForSuggestions:(id)a0 options:(id)a1;
+ (id)fetchKeyAssetForEachSuggestion:(id)a0 options:(id)a1;
+ (id)fetchKeyAssetForSceneIdentifier:(unsigned int)a0 aboveConfidenceThreshold:(double)a1 minimumSceneAnalysisVersion:(short)a2 options:(id)a3;
+ (id)fetchKeyAssetsInAssetCollection:(id)a0 options:(id)a1;
+ (id)fetchKeyCuratedAssetInAssetCollection:(id)a0 referenceAsset:(id)a1;
+ (id)fetchKeyCuratedAssetInAssetCollection:(id)a0 referenceAsset:(id)a1 options:(id)a2;
+ (id)fetchKeyCuratedAssetInAssetCollection:(id)a0 referencePersons:(id)a1;
+ (id)fetchMovieCuratedAssetsInMemory:(id)a0;
+ (id)fetchPreviewAssetsForMomentShareCreationWithAssets:(id)a0 options:(id)a1;
+ (id)fetchReducedCuratedAssetsInMemory:(id)a0 options:(id)a1;
+ (id)fetchReferencedAssetsWithOptions:(id)a0;
+ (id)fetchRepresentativeAssetsInAssetCollection:(id)a0;
+ (id)fetchSyndicatedAssetsWithOptions:(id)a0;
+ (id)fetchSyndicatedAssetsWithOptions:(id)a0 includeRejected:(BOOL)a1;
+ (id)fetchUserCuratedAssetsInMemory:(id)a0 options:(id)a1;
+ (id)filterPredicateForSavedSyndicationAssetsOnly;
+ (id)filterPredicateForUnsavedSyndicationAssets;
+ (id)filterPredicateToExcludeNoSyndicationAssets;
+ (id)filterPredicateToIncludeOnlyReceivedSyndicatedAssets;
+ (id)imageManagerPropertiesToFetch;
+ (BOOL)isOriginalKnownUnsupportedFormatForAsset:(id)a0 failureInfo:(id *)a1;
+ (BOOL)isOriginalVideoComplementKnownUnsupportedFormatForAsset:(id)a0 failureInfo:(id *)a1;
+ (id)locationPropertiesToFetch;
+ (BOOL)managedObjectSupportsAllowedForAnalysis;
+ (BOOL)managedObjectSupportsBursts;
+ (BOOL)managedObjectSupportsContributor;
+ (BOOL)managedObjectSupportsDuplicateVisibilityState;
+ (BOOL)managedObjectSupportsHiddenState;
+ (BOOL)managedObjectSupportsMontage;
+ (BOOL)managedObjectSupportsSavedAssetType;
+ (BOOL)managedObjectSupportsVisibilityState;
+ (id)originalUniformTypeIdentifierForAsset:(id)a0;
+ (id)pl_managedAssetsForAssets:(id)a0;
+ (id)predicateForSyndicatedAssetIdentifiers:(id)a0;
+ (id)predicateForSyndicatedAssetIdentifiers:(id)a0 includeRejected:(BOOL)a1;
+ (id)requestCuratedAssetsInAssetCollection:(id)a0 options:(id)a1;
+ (id)senderIdentifierByAssetUUIDForAssets:(id)a0;

- (id)libraryID;
- (unsigned short)bundleScope;
- (BOOL)canPerformEditOperation:(long long)a0;
- (struct CGSize { double x0; double x1; })imageSize;
- (BOOL)isDeleted;
- (short)assetSource;
- (BOOL)needsDeferredProcessing;
- (int)orientation;
- (short)kind;
- (BOOL)isPrimaryImageFormat;
- (id)objectReference;
- (void).cxx_destruct;
- (id)adjustmentVersion;
- (struct CGSize { double x0; double x1; })originalImageSize;
- (id)destinationAssetCopyProperties;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })suggestedCropForTargetSize:(struct CGSize { double x0; double x1; })a0 withFocusRegion:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })suggestedCropForTargetSize:(struct CGSize { double x0; double x1; })a0 withOcclusionRegion:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 andOutputCropScore:(double *)a2;
- (id)pl_photoLibrary;
- (id)__dictionaryWithContentsOfData:(id)a0;
- (long long)cloudSharedAssetPlaceholderKind;
- (BOOL)isMediaSubtype:(unsigned long long)a0;
- (id)pl_managedAsset;
- (void)_addPropertyHint:(unsigned long long)a0;
- (void)_attachPropertyObjectOfClass:(Class)a0 preFetchedProperties:(id)a1;
- (long long)_baseVersionForAdjustmentData:(id)a0 canHandleAdjustmentData:(BOOL)a1;
- (BOOL)_canHandleAdjustmentData:(id)a0 withOptions:(id)a1;
- (id)_computeCropVariantsWithConfigs:(id)a0 forAspectRatio:(double)a1;
- (id)_createAnalysisStatePropertyObject;
- (id)_createCommentPropertyObject;
- (void)_createExtendedPropertySetsIfNeededWithPropertyHint:(unsigned long long)a0 fetchDictionary:(id)a1;
- (id)_createKeywordPropertyObject;
- (id)_createPropertyObjectOfClass:(Class)a0;
- (id)_createPropertyObjectOfClass:(Class)a0 preFetchedProperties:(id)a1;
- (void)_crop:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0 score:(double *)a1 withZoom:(double)a2 cropConfig:(id)a3 aspectRatio:(double)a4;
- (id)_cropVariantForConfig:(long long)a0 aspectRatio:(double)a1;
- (id)_filterCropVariants:(id)a0;
- (id)_generateCropCandidates;
- (id)_getScaledCropForCropConfig:(id)a0 aspectRatio:(double)a1 withCropType:(long long)a2;
- (id)_imageRequestOptionsForBaseVersion:(long long)a0 options:(id)a1 progressEstimateForImageProgress:(id /* block */)a2;
- (void)_initializeCachedLocation;
- (void)_invalidateCachedLocation;
- (id)_rankCropVariants:(id)a0;
- (void)_renderTemporaryVideoForObjectBuilder:(id)a0 resultHandler:(id /* block */)a1;
- (void)_requestRenderedVideoForVideoURL:(id)a0 adjustmentData:(id)a1 canHandleAdjustmentData:(BOOL)a2 resultHandler:(id /* block */)a3;
- (id)_uncachedLocation;
- (id)_unfetchedPropertySetsFromPropertySets:(id)a0;
- (id)_videoRequestOptionsForBaseVersion:(long long)a0 options:(id)a1 progressEstimateForVideoProgress:(id /* block */)a2;
- (id)adjustmentProperties;
- (id)adjustmentsDebugMetadata;
- (id)aestheticProperties;
- (int)analysisStateForWorkerType:(short)a0 outLastIgnoreDate:(id *)a1 outIgnoreUntilDate:(id *)a2;
- (id)assetAnalysisStateProperties;
- (id)assetUserActivityProperties;
- (id)assetsLibraryURL;
- (id)cameraCaptureDeviceProperties;
- (void)cancelContentEditingInputRequest:(unsigned long long)a0;
- (void)cancelParallaxResourceRequest:(int)a0;
- (void)cancelPetsRegionsRequest:(int)a0;
- (Class)changeRequestClass;
- (id)characterRecognitionProperties;
- (id)cloudAssetGUID;
- (id)cloudLocalStateProperties;
- (id)coarseLocationProperties;
- (id)commentProperties;
- (unsigned long long)contentChangeFromAsset:(id)a0;
- (id)cropVariants;
- (id)cropVariantsForAspectRatio:(double)a0;
- (id)curationProperties;
- (id)debugFilename;
- (id)descriptionForAestheticsWithManagedAsset:(id)a0;
- (id)descriptionForMediaAnalysisWithManagedAsset:(id)a0;
- (id)descriptionForPhotoAnanlysisWallpaperProeprtiesWithManagedAsset:(id)a0;
- (id)descriptionProperties;
- (id)detailedDebugDescriptionInLibrary:(id)a0;
- (id)evaluationDebugMetadata;
- (void)fetchPropertySetsIfNeeded;
- (id)fileURLForFullsizeRenderImage;
- (id)fileURLForVideoComplementFile;
- (id)fileURLsForDiagnosticFiles;
- (id)gatingDebugMetadata;
- (void)generateLargeThumbnailFileIfNecessary;
- (void)getFingerPrintForAssetType:(long long)a0 withCompletionHandler:(id /* block */)a1;
- (void)getMasterFingerPrintWithCompletionHandler:(id /* block */)a0;
- (id)gridMetadataProperties;
- (BOOL)hasContentEqualTo:(id)a0;
- (BOOL)hasLegacyAdjustments;
- (id)importProperties;
- (id)initWithFetchDictionary:(id)a0 propertyHint:(unsigned long long)a1 photoLibrary:(id)a2;
- (BOOL)isInFlight;
- (BOOL)isIncompleteLivePhotoMissingVideoComplement;
- (BOOL)isLocatedAtCoordinates:(struct CLLocationCoordinate2D { double x0; double x1; })a0;
- (BOOL)isOriginalRaw;
- (BOOL)isOriginalSRGB;
- (BOOL)isScreenRecording;
- (BOOL)isVariationSuggestionStatesUnknown;
- (id)keywordProperties;
- (short)kindSubtype;
- (id)libraryScopeProperties;
- (int)loadParallaxResource:(long long)a0 options:(id)a1 resultHandler:(id /* block */)a2;
- (int)loadPetsRegions:(id /* block */)a0;
- (id)localDateProperties;
- (id)locationDataProperties;
- (id)mainFileURL;
- (id)managedAssetForPhotoLibrary:(id)a0;
- (id)mediaAnalysisProperties;
- (id)messagesForRecentImageManagerRequests;
- (id)monoskiMediaProperties;
- (id)montageProperties;
- (id)originalAVAssetCommonMetadata;
- (id)originalAVAssetOrProxy;
- (unsigned long long)originalChoiceToFallbackForUnsupportRAW;
- (id)originalCreationDateWithTimeZone:(id *)a0;
- (long long)originalImageOrientation;
- (id)originalImageProperties;
- (id)originalMetadataProperties;
- (id)originalUTI;
- (id)pathForAdjustmentDataFile;
- (id)pathForAdjustmentFile;
- (id)pathForOriginalFile;
- (id)photoAnalysisWallpaperProperties;
- (id)photoIrisProperties;
- (id)photosInfoPanelExtendedProperties;
- (id)photosInfoPanelLocationProperties;
- (id)photosOneUpProperties;
- (id)pl_managedAssetFromPhotoLibrary:(id)a0;
- (void)recordImageManagerMessageForRequestID:(int)a0 message:(id)a1;
- (unsigned long long)requestContentEditingInputWithOptions:(id)a0 completionHandler:(id /* block */)a1;
- (id)sceneAnalysisProperties;
- (id)sceneprintProperties;
- (BOOL)shouldUseRAWResourceAsUnadjustedEditBase;
- (BOOL)shouldUseRAWResourceWithOriginalResourceChoice:(unsigned long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })suggestedCropForTargetSize:(struct CGSize { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })suggestedCropForTargetSize:(struct CGSize { double x0; double x1; })a0 withFocusRegion:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 andOutputCropScore:(double *)a2;
- (void)updateSegmentationResource:(id /* block */)a0;
- (unsigned long long)variationSuggestionStatesForVariationType:(unsigned long long)a0;
- (id)visualSearchProperties;
- (id)wallpaperCroppingDebugKeyValuePairs;

@end
