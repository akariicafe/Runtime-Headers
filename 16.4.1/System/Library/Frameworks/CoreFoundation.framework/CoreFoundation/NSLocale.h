@interface NSLocale : NSObject <NSCopying, NSSecureCoding>

@property (class, readonly) BOOL supportsSecureCoding;

@property (readonly) long long _calendarDirection;

+ (void)setPreferredLanguages:(id)a0;
+ (id)preferredLocale;
+ (id)systemLanguages;
+ (id)_deviceLanguage;
+ (void)_setPreferredMeasurementSystem:(id)a0;
+ (id)__effectiveLanguageForBundle:(id)a0;
+ (id)_preferredMeasurementSystem;
+ (id)_preferredTemperatureUnit;
+ (void)_setPreferredTemperatureUnit:(id)a0;
+ (id)autoupdatingCurrentLocale;
+ (id)mostPreferredLanguageOf:(id)a0 forUsage:(unsigned long long)a1 options:(unsigned long long)a2;
+ (id)mostPreferredLanguageOf:(id)a0 withPreferredLanguages:(id)a1 forUsage:(unsigned long long)a2 options:(unsigned long long)a3;
+ (void)registerPreferredLanguage:(id)a0 usage:(unsigned long long)a1 confidence:(float)a2;
+ (id)currentLocale;
+ (id)allocWithZone:(struct _NSZone { } *)a0;
+ (id)preferredLanguages;
+ (id)canonicalLanguageIdentifierFromString:(id)a0;
+ (id)ISOCountryCodes;
+ (id)ISOCurrencyCodes;
+ (id)componentsFromLocaleIdentifier:(id)a0;
+ (id)ISOLanguageCodes;
+ (id)localeIdentifierFromComponents:(id)a0;
+ (id)availableLocaleIdentifiers;
+ (id)canonicalLocaleIdentifierFromString:(id)a0;
+ (unsigned long long)characterDirectionForLanguage:(id)a0;
+ (id)commonISOCurrencyCodes;
+ (unsigned long long)lineDirectionForLanguage:(id)a0;
+ (id)localeIdentifierFromWindowsLocaleCode:(unsigned int)a0;
+ (id)localeWithLocaleIdentifier:(id)a0;
+ (id)systemLocale;
+ (unsigned int)windowsLocaleCodeFromLocaleIdentifier:(id)a0;
+ (id)internetServicesRegion;

- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (Class)classForCoder;
- (id)debugDescription;
- (void)_setDoesNotRequireSpecialCaseHandling;
- (id)localeIdentifier;
- (void)encodeWithCoder:(id)a0;
- (unsigned long long)_cfTypeID;
- (id)_prefForKey:(id)a0;
- (id)languageCode;
- (id)objectForKey:(id)a0;
- (id)currencyCode;
- (id)initWithCoder:(id)a0;
- (id)displayNameForKey:(id)a0 value:(id)a1;
- (id)identifier;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)initWithLocaleIdentifier:(id)a0;
- (unsigned char)_doesNotRequireSpecialCaseHandling;
- (BOOL)isEqual:(id)a0;
- (id)countryCode;
- (unsigned long long)hash;
- (id)init;
- (id)calendarIdentifier;
- (id)currencySymbol;
- (id)decimalSeparator;
- (id)groupingSeparator;
- (id)scriptCode;
- (id)localizedStringForCurrencyCode:(id)a0;
- (id)localizedStringForLanguageCode:(id)a0;
- (id)_copyDisplayNameForKey:(id)a0 value:(id)a1;
- (id)alternateQuotationBeginDelimiter;
- (id)alternateQuotationEndDelimiter;
- (id)collationIdentifier;
- (id)collatorIdentifier;
- (id)exemplarCharacterSet;
- (id)localizedStringForAlternateQuotationBeginDelimiter:(id)a0;
- (id)localizedStringForAlternateQuotationEndDelimiter:(id)a0;
- (id)localizedStringForCalendarIdentifier:(id)a0;
- (id)localizedStringForCollationIdentifier:(id)a0;
- (id)localizedStringForCollatorIdentifier:(id)a0;
- (id)localizedStringForCountryCode:(id)a0;
- (id)localizedStringForCurrencySymbol:(id)a0;
- (id)localizedStringForDecimalSeparator:(id)a0;
- (id)localizedStringForGroupingSeparator:(id)a0;
- (id)localizedStringForLocaleIdentifier:(id)a0;
- (id)localizedStringForQuotationBeginDelimiter:(id)a0;
- (id)localizedStringForQuotationEndDelimiter:(id)a0;
- (id)localizedStringForScriptCode:(id)a0;
- (id)localizedStringForVariantCode:(id)a0;
- (id)quotationBeginDelimiter;
- (id)quotationEndDelimiter;
- (BOOL)usesMetricSystem;
- (id)variantCode;

@end
