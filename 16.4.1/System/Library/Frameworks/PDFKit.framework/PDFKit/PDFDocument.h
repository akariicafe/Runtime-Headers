@class NSString, NSDictionary, NSURL, PDFOutline, PDFSelection, PDFDocumentPrivate;
@protocol PDFDocumentDelegate;

@interface PDFDocument : NSObject <NSCopying> {
    PDFDocumentPrivate *_private;
}

@property (readonly, nonatomic) NSURL *documentURL;
@property (readonly, nonatomic) struct CGPDFDocument { } *documentRef;
@property (copy, nonatomic) NSDictionary *documentAttributes;
@property (readonly, nonatomic) long long majorVersion;
@property (readonly, nonatomic) long long minorVersion;
@property (readonly, nonatomic) BOOL isEncrypted;
@property (readonly, nonatomic) BOOL isLocked;
@property (readonly, nonatomic) BOOL allowsPrinting;
@property (readonly, nonatomic) BOOL allowsCopying;
@property (readonly, nonatomic) BOOL allowsDocumentChanges;
@property (readonly, nonatomic) BOOL allowsDocumentAssembly;
@property (readonly, nonatomic) BOOL allowsContentAccessibility;
@property (readonly, nonatomic) BOOL allowsCommenting;
@property (readonly, nonatomic) BOOL allowsFormFieldEntry;
@property (readonly, nonatomic) unsigned long long accessPermissions;
@property (readonly, nonatomic) long long permissionsStatus;
@property (readonly, nonatomic) NSString *string;
@property (weak, nonatomic) id<PDFDocumentDelegate> delegate;
@property (retain, nonatomic) PDFOutline *outlineRoot;
@property (readonly, nonatomic) unsigned long long pageCount;
@property (readonly, nonatomic) Class pageClass;
@property (readonly, nonatomic) BOOL isFinding;
@property (readonly, nonatomic) PDFSelection *selectionForEntireDocument;

+ (BOOL)isValidPassword:(id)a0;
+ (BOOL)pdfDocumentAppendModeActiveForThisThread;
+ (void)setPDFDocumentAppendModeActiveForThisThread:(BOOL)a0;

- (id)initWithURL:(id)a0;
- (id)initWithData:(id)a0;
- (BOOL)findOnPage;
- (void)undo:(id)a0;
- (void)setDocument:(struct CGPDFDocument { } *)a0;
- (id)dataRepresentation;
- (void)_commonInit;
- (BOOL)writeToURL:(id)a0;
- (void)redo:(id)a0;
- (id)initWithProvider:(struct CGDataProvider { } *)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (BOOL)writeToFile:(id)a0;
- (id)pageAtIndex:(unsigned long long)a0;
- (id)formData;
- (void)setFormData:(id)a0;
- (void)cancelFindString;
- (id)findString:(id)a0 withOptions:(unsigned long long)a1;
- (void)revert;
- (void)didMatchString:(id)a0;
- (void)insertPage:(id)a0 atIndex:(unsigned long long)a1;
- (void)removePageAtIndex:(unsigned long long)a0;
- (id)_dataFromXMP:(struct __CFData { } *)a0 withRootPath:(id)a1 keys:(id)a2;
- (id)bookmarkedPages;
- (BOOL)documentChanged;
- (id)PDFAKControllerDelegate;
- (void)coreFindString:(id)a0;
- (id)_SASLSanitize:(id)a0;
- (id)_addEncryptionFromOptions:(id)a0;
- (id)_bookmarksCatalog;
- (BOOL)_canSaveWithEncryption;
- (struct CGPDFName { } *)_convertCFStringToCGPDFName:(void *)a0 forKey:(struct __CFString { } *)a1;
- (id)_convertWriteOptions:(id)a0;
- (struct CGPDFAnnotation { } *)_createCGPDFAnnotationForAnnotation:(id)a0;
- (void)_createDocumentWithDataProvider:(struct CGDataProvider { } *)a0;
- (struct __CFDictionary { } *)_createInfoDictionary;
- (id)_documentCatalogMetadataForRootPath:(id)a0 withKeys:(id)a1;
- (id)_findString:(id)a0 fromSelection:(id)a1 withOptions:(unsigned long long)a2;
- (id)_getNearestOutline:(id)a0 forDestination:(id)a1;
- (BOOL)_isCommonlyMappedToNothing:(id)a0;
- (BOOL)_isNonAsciiSpace:(id)a0;
- (id)_namedDestination:(id)a0 forNameDictionary:(struct CGPDFDictionary { } *)a1;
- (void)_notifyAKAdaptorPagePlaceholder:(id)a0 wasReplacedWithPage:(id)a1 atIndex:(unsigned long long)a2;
- (id)_rawPageAtIndex:(unsigned long long)a0;
- (void)_sanitizeAnnotationArray:(struct __CFArray { } *)a0;
- (void)_sanitizeAnnotationDictionary:(struct __CFDictionary { } *)a0;
- (void)_setDocumentCatalogMetadata:(id)a0 withNSpace:(id)a1 prefix:(id)a2 rootPath:(id)a3;
- (BOOL)_writeAppendMode:(struct CGDataConsumer { } *)a0;
- (id)akController;
- (id)akDocumentAdaptor;
- (Class)annotationSubclassForType:(id)a0;
- (id)annotationsForFieldName:(id)a0;
- (void)asyncFindString:(id)a0 withDelegate:(id)a1 onQueue:(id)a2;
- (void)asyncFindStrings:(id)a0 withDelegate:(id)a1 onQueue:(id)a2;
- (void)asyncFindStrings:(id)a0 withOptions:(unsigned long long)a1 withDelegate:(id)a2 onQueue:(id)a3;
- (void)beginBatchPageChanges;
- (void)beginFindString:(id)a0 withOptions:(unsigned long long)a1;
- (void)beginFindStrings:(id)a0 withOptions:(unsigned long long)a1;
- (BOOL)bookmarksChanged;
- (BOOL)canSaveWithAppendModeUsingOptions:(id)a0;
- (BOOL)canSaveWithTextFromOCR;
- (void)cleanupFind;
- (void)coreFindStrings:(id)a0;
- (BOOL)createdWithWithHighLatencyDataProvider;
- (id)dataRepresentationWithOptions:(id)a0;
- (void)decrementRedactionCount;
- (void)enableDocumentMRUMode:(BOOL)a0;
- (void)enableLimitedSearch;
- (void)endBatchPageChanges;
- (void)exchangePageAtIndex:(unsigned long long)a0 withPageAtIndex:(unsigned long long)a1;
- (void)findNextFormFieldInPages:(id)a0 withCompletion:(id /* block */)a1;
- (id)findPageWithCGPDFDictionaryPageRef:(struct CGPDFDictionary { } *)a0;
- (id)findString:(id)a0 fromSelection:(id)a1 withOptions:(unsigned long long)a2;
- (id)findStringPerPage:(id)a0 fromSelection:(id)a1 withOptions:(unsigned long long)a2;
- (id)findStrings:(id)a0 withinSelection:(id)a1 withOptions:(unsigned long long)a2;
- (id)formFillingQueue;
- (BOOL)hasHighLatencyDataProvider;
- (void)incrementRedactionCount;
- (unsigned long long)indexForPage:(id)a0;
- (BOOL)isLinearized;
- (id)namedDestination:(id)a0;
- (struct __CFData { } *)newXMPFromData:(id)a0 preserveExistingXMPMetadata:(BOOL)a1;
- (void)normalizeFindOptions:(unsigned long long)a0;
- (id)outlineItemForSelection:(id)a0;
- (id)pageAnnotationChanges;
- (id)passwordUsedForUnlocking;
- (void)preloadDataOfPagesInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 onQueue:(id)a1 completion:(id /* block */)a2;
- (id)renderingProperties;
- (void)requirePasswordsIfNeeded:(id /* block */)a0;
- (void)resetPageAnnotationChanges;
- (void)scheduledFindOnPage:(id)a0;
- (id)selectionFromPage:(id)a0 atCharacterIndex:(unsigned long long)a1 toPage:(id)a2 atCharacterIndex:(unsigned long long)a3;
- (id)selectionFromPage:(id)a0 atPoint:(struct CGPoint { double x0; double x1; })a1 toPage:(id)a2 atPoint:(struct CGPoint { double x0; double x1; })a3;
- (id)selectionFromPage:(id)a0 atPoint:(struct CGPoint { double x0; double x1; })a1 toPage:(id)a2 atPoint:(struct CGPoint { double x0; double x1; })a3 type:(int)a4;
- (void)setBookmarked:(BOOL)a0 atPageIndex:(unsigned long long)a1;
- (void)setDocumentHasBurnInAnnotations:(BOOL)a0;
- (void)setHasHighLatencyDataProvider:(BOOL)a0;
- (void)setPDFAKControllerDelegate:(id)a0;
- (void)setPageChangeDelegate:(id)a0;
- (void)setRenderingProperties:(id)a0;
- (void)setShowsAnnotations:(BOOL)a0;
- (void)setupAKDocumentAdaptorIfNecessaryWithView:(id)a0;
- (BOOL)shouldReadAKInkAnnotations;
- (BOOL)showsAnnotations;
- (id)textExtractionQueue;
- (BOOL)unlockWithPassword:(id)a0;
- (void)updateBookmarksInPDFDocument;
- (BOOL)validateRedo:(id)a0;
- (BOOL)validateUndo:(id)a0;
- (BOOL)viewPreferenceRightToLeft;
- (BOOL)writeToConsumer:(struct CGDataConsumer { } *)a0 withOptions:(id)a1;
- (BOOL)writeToFile:(id)a0 withOptions:(id)a1;
- (BOOL)writeToURL:(id)a0 withOptions:(id)a1;

@end
