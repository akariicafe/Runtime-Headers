@class NSDictionary, EKCalendar, CADDatabaseInitializationOptions, NSCache, EKSequenceToken, NSMutableArray, NSString, NSMutableSet, CADInMemoryChangeTimestamp, EKAlarm, NSArray, NSMutableDictionary, NSObject, NSSet, EKReminderStore, EKDataProtectionObserver, EKDaemonConnection, CADGenerationStampedObjectID, CalAccumulatingQueue, NSTimeZone, NSNumber, NSHashTable;
@protocol OS_dispatch_queue;

@interface EKEventStore : NSObject <EKDaemonConnectionDelegate> {
    CADDatabaseInitializationOptions *_initializationOptions;
    CADGenerationStampedObjectID *_birthdaySourceID;
    NSMutableDictionary *_defaultCalendarsForNewEventsIDBySourceID;
    CADGenerationStampedObjectID *_suggestedEventCalendarID;
    CADGenerationStampedObjectID *_naturalLanguageSuggestedEventCalendarID;
    CADGenerationStampedObjectID *_subscribedCalendarsSourceID;
    NSMutableDictionary *_calendars;
    NSMutableDictionary *_sources;
    NSMutableDictionary *_calendarsByIdentifier;
    NSMutableDictionary *_cachedValidatedAddresses;
    NSMutableArray *_objectsPendingCommit;
    NSHashTable *_eventsNeedsGeocoding;
    NSNumber *_defaultTimedAlarmOffset;
    NSNumber *_defaultAllDayAlarmOffset;
    BOOL _allowsBirthdayCalendarModifications;
    NSNumber *_showDeclinedEventsNumber;
    BOOL _hasAccessToEvents;
    BOOL _hasAccessToReminders;
    BOOL _accessDetermined;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _reminderSourceMapLock;
    BOOL _isIgnoringExternalChanges;
    BOOL _shouldNotifySyncStatusOnlyChanges;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _flagsLock;
    struct { unsigned char restoreGenerationChanged : 1; unsigned char fetchingSharedCalendarInvitationsDisallowed : 1; } _flags;
    CalAccumulatingQueue *_notificationAccumulatingQueue;
    double _defaultDelayForThrottledNotifications;
    unsigned long long _lastFiredEventStoreChangedNotificationTime;
    unsigned long long _lastFiredNonSyncOnlyEventStoreChangedNotificationTime;
    NSCache *_deletedEventUniqueIdentifiersCache;
    EKSequenceToken *_lastSequenceToken;
}

@property (class, readonly, nonatomic) NSString *eventStoreChangedDistributedNotificationName;
@property (class, nonatomic) unsigned long long predicatePropertyLoadMode;
@property (class, copy) id /* block */ reminderStoreContainerTokenProvider;

@property (retain, nonatomic) NSHashTable *insertedObjects;
@property (retain, nonatomic) NSMutableSet *deletedObjects;
@property (retain, nonatomic) NSMutableSet *updatedObjects;
@property (retain, nonatomic) NSMutableSet *objectsPendingSave;
@property (retain, nonatomic) EKDaemonConnection *database;
@property (retain, nonatomic) CADInMemoryChangeTimestamp *lastDatabaseNotificationTimestamp;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *calendarSourcesAndDefaultsQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *registeredQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *unsavedChangesQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *dbChangedQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *constraintsCacheQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *notificationCollectionCacheQueue;
@property (retain, nonatomic) EKDataProtectionObserver *dataProtectionObserver;
@property (retain, nonatomic) NSMutableDictionary *_cachedConstraints;
@property (retain, nonatomic) NSMutableDictionary *_cachedNotificationCollections;
@property (readonly, nonatomic) EKReminderStore *reminderStore;
@property (retain, nonatomic) NSDictionary *reminderSourceIDToEventSourceIDMapping;
@property (retain, nonatomic) NSDictionary *eventSourceIDToReminderSourceIDMapping;
@property (readonly, nonatomic) struct os_unfair_lock_s { unsigned int x0; } *reminderSourceMapLock;
@property (retain, nonatomic) NSMutableDictionary *registeredObjects;
@property (readonly, nonatomic) NSSet *deletedObjectIDsPendingCommit;
@property (retain, nonatomic) EKCalendar *defaultCalendarForNewEvents;
@property (readonly, nonatomic) NSArray *inboxRepliedSectionItems;
@property (readonly, nonatomic) BOOL inboxRepliedSectionHasContent;
@property (readonly, nonatomic) EKCalendar *suggestedEventCalendar;
@property (readonly, nonatomic) EKCalendar *naturalLanguageSuggestedEventCalendar;
@property (readonly, nonatomic) EKCalendar *defaultCalendarForNewReminders;
@property (readonly, nonatomic) BOOL automaticLocationGeocodingAllowed;
@property (readonly, nonatomic) unsigned long long lastConfirmedSplashScreenVersion;
@property (readonly, nonatomic) BOOL allowsBirthdayModifications;
@property (copy, nonatomic) NSTimeZone *timeZone;
@property (readonly, copy, nonatomic) NSString *databasePath;
@property (readonly, nonatomic) EKAlarm *defaultTimedAlarm;
@property (readonly, nonatomic) EKAlarm *defaultAllDayAlarm;
@property (readonly, nonatomic) NSNumber *defaultTimedAlarmOffset;
@property (readonly, nonatomic) NSNumber *defaultAllDayAlarmOffset;
@property (readonly, nonatomic) NSNumber *siriSuggestionsTimedAlarmOffset;
@property (readonly, nonatomic) NSNumber *siriSuggestionsAllDayAlarmOffset;
@property (readonly, nonatomic) BOOL isDataProtected;
@property (nonatomic) BOOL showDeclinedEvents;
@property (nonatomic) BOOL birthdayCalendarEnabled;
@property (readonly, nonatomic) BOOL clientCanModifySources;
@property (readonly, nonatomic) NSArray *objectsPendingCommit;
@property (readonly) EKDaemonConnection *connection;
@property (readonly, nonatomic) NSArray *eventNotifications;
@property (readonly, nonatomic) unsigned long long eventNotificationCount;
@property (nonatomic) BOOL skipModificationValidation;
@property (readonly, nonatomic) NSString *eventStoreIdentifier;
@property (readonly, nonatomic) NSArray *delegateSources;
@property (readonly, nonatomic) NSArray *sources;
@property (readonly, nonatomic) NSArray *calendars;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)_iMIPScheduledEvent:(id)a0;
+ (double)_throttleDelayForEventStoreChangedNotificationWithLastFiredTime:(unsigned long long)a0 delay:(double)a1;
+ (unsigned long long)ekEventStoreInitOptionsFromCalDatabaseInitOptions:(int)a0;
+ (void)_addDaysSpannedByEvent:(id)a0 toCountedSet:(id)a1 inRange:(id)a2 withNSCalendar:(id)a3;
+ (double)_defaultDelayForThrottledNotificationsWithInitializationOptions:(id)a0;
+ (BOOL)accessGrantedForEntityType:(unsigned long long)a0;
+ (int)calDatabaseInitOptionsFromEKEventStoreInitOptions:(unsigned long long)a0;
+ (id)_contextForNotificationWithChangeType:(unsigned long long)a0 changedObjectIDs:(id)a1;
+ (void)setDenyAccessToEvents:(BOOL)a0;
+ (id)calendarObjectIDsForPredicate:(id)a0;
+ (long long)authorizationStatusForEntityType:(unsigned long long)a0;
+ (Class)classForEntityName:(id)a0;
+ (id)_filteredObjectsWithIdentifiers:(id)a0 fromObjects:(id)a1;
+ (void)_refreshFolderListForSource:(id)a0 isUserRequested:(BOOL)a1;
+ (BOOL)_skipTCCAccessCheck;
+ (BOOL)_isConfirmedSuggestedEvent:(id)a0 uniqueKey:(id *)a1;
+ (id)_filteredArrayWithIdentifiers:(id)a0 fromObjects:(id)a1;
+ (BOOL)_shouldRefreshSource:(id)a0;
+ (void)setDenyAccessToReminders:(BOOL)a0;

- (void)rollback;
- (BOOL)save:(id *)a0;
- (id)eventWithIdentifier:(id)a0;
- (int)sequenceNumber;
- (void)_clearAllCaches;
- (id)objectWithObjectID:(id)a0;
- (BOOL)shouldPermitOrganizerPhoneNumberFromJunkChecks:(id)a0;
- (void)setPrivacyClientIdentity:(id)a0;
- (BOOL)canModifySuggestedEventCalendar;
- (BOOL)canModifyCalendarDatabase;
- (BOOL)accessGrantedForEntityType:(unsigned long long)a0;
- (BOOL)saveEvent:(id)a0 span:(long long)a1 error:(id *)a2;
- (id)sourceWithIdentifier:(id)a0;
- (id)predicateForCalendarStoreForRemindersInCalendars:(id)a0;
- (id)fetchRemindersMatchingPredicate:(id)a0 completion:(id /* block */)a1;
- (id)reminderWithIdentifier:(id)a0;
- (BOOL)allowDelegateSources;
- (id)calendarsForEntityType:(unsigned long long)a0;
- (BOOL)commit:(id *)a0;
- (id)predicateForRemindersInCalendars:(id)a0;
- (BOOL)removeCalendar:(id)a0 error:(id *)a1;
- (id)cachedConstraintsForSource:(id)a0;
- (BOOL)saveCalendar:(id)a0 error:(id *)a1;
- (id)remindersMatchingPredicate:(id)a0;
- (void)dealloc;
- (BOOL)isSourceManaged:(id)a0;
- (id)beginCalDAVServerSimulationWithHostname:(id)a0;
- (id)calendarWithIdentifier:(id)a0;
- (id)predicateForCompletedRemindersWithCompletionDateStarting:(id)a0 ending:(id)a1 calendars:(id)a2;
- (id)eventsMatchingPredicate:(id)a0;
- (id)init;
- (id)predicateForEventsWithStartDate:(id)a0 endDate:(id)a1 calendars:(id)a2;
- (BOOL)removeReminder:(id)a0 error:(id *)a1;
- (id)predicateForIncompleteRemindersWithDueDateStarting:(id)a0 ending:(id)a1 calendars:(id)a2;
- (id)objectsMatchingPredicate:(id)a0;
- (BOOL)saveReminder:(id)a0 error:(id *)a1;
- (BOOL)shouldPermitOrganizerEmailFromJunkChecks:(id)a0;
- (id)reminderWithUniqueId:(id)a0;
- (BOOL)removeEvent:(id)a0 span:(long long)a1 error:(id *)a2;
- (id)initWithSources:(id)a0;
- (void).cxx_destruct;
- (id)eventsWithIdentifiers:(id)a0;
- (void)reset;
- (void)consumeAllChangesUpToToken:(id)a0;
- (id)initWithEKOptions:(unsigned long long)a0 path:(id)a1 changeTrackingClientId:(id)a2 enablePropertyModificationLogging:(BOOL)a3 allowDelegateSources:(BOOL)a4;
- (long long)registerForDetailedChangeTracking:(id *)a0;
- (id)eventWithUUID:(id)a0 occurrenceDate:(id)a1;
- (id)initWithEKOptions:(unsigned long long)a0;
- (Class)_SGSuggestionsServiceClass;
- (id)importICSData:(id)a0 intoCalendar:(id)a1 options:(unsigned long long)a2;
- (id)initWithOptions:(int)a0 path:(id)a1;
- (void)requestAccessToEntityType:(unsigned long long)a0 completion:(id /* block */)a1;
- (void)enumerateEventsMatchingPredicate:(id)a0 usingBlock:(id /* block */)a1;
- (id)_localSourceWithEnableIfNeeded:(BOOL)a0;
- (BOOL)_removeEvent:(id)a0 span:(long long)a1 commit:(BOOL)a2 error:(id *)a3;
- (id)ICSDataForCalendarItems:(id)a0 options:(unsigned long long)a1;
- (id)importICS:(id)a0 intoCalendar:(id)a1 options:(unsigned long long)a2;
- (id)predicateForPotentialTravelEventsInCalendars:(id)a0 startDate:(id)a1 endDate:(id)a2;
- (id)reminderSources;
- (void)rollbackObjectsWithIdentifiers:(id)a0;
- (id)_fetchPersistentNotificationCollectionForSourceWithCADObjectID:(id)a0;
- (id)_nextEventWithFetchBlock:(id /* block */)a0 steps:(id)a1;
- (void)_removeCachedCalendarWithCADID:(id)a0;
- (double)_throttleDelayForEventStoreChangedNotificationWithTags:(id)a0 context:(id)a1;
- (BOOL)acknowledgeNotifications:(id)a0 error:(id *)a1;
- (id)ICSDataForCalendarItems:(id)a0 preventLineFolding:(BOOL)a1;
- (id)calendarWithID:(id)a0;
- (id)combinedReminderAndEventSources;
- (void)daemonRestarted;
- (unsigned long long)eventNotificationCountExpanded:(BOOL)a0;
- (id)initWithEKOptions:(unsigned long long)a0 path:(id)a1 sources:(id)a2;
- (void)_accessStatusChanged;
- (id)_addFetchedObjectWithID:(id)a0;
- (void)_addObjectToPendingCommits:(id)a0;
- (id)_allCalendars;
- (id)_apiExpectedEventForEvent:(id)a0;
- (id)_apiExpectedEventsForEvents:(id)a0;
- (void)_cacheCalendarWithCADObjectID:(id)a0 withDefaultLoadedPropertyValues:(id)a1 forKeys:(id)a2;
- (void)_cacheDeletedEventIdentifierIfNeededForObject:(id)a0;
- (void)_cacheSourceWithCADObjectID:(id)a0 withDefaultLoadedPropertyValues:(id)a1 forKeys:(id)a2;
- (BOOL)_calendar:(id)a0 supportsEntityType:(unsigned long long)a1;
- (id)_calendarItemsMatchingPredicate:(id)a0;
- (id)_calendarItemsWithExternalIdentifier:(id)a0 inCalendars:(id)a1 entityTypes:(unsigned long long)a2;
- (void)_clearCachedCalendars;
- (void)_clearCachedConstraintsForSourceWithCADObjectID:(id)a0;
- (void)_clearCachedSources;
- (void)_clearEventsNeedingGeocodingWithCommittedObjects:(id)a0;
- (void)_clearPendingChangesForObjectsWithOwner:(id)a0;
- (id)_combineEventSources:(id)a0 withReminderSources:(id)a1;
- (BOOL)_commitObjectsWithIdentifiers:(id)a0 error:(id *)a1;
- (void)_databaseChangedExternally:(unsigned long long)a0 processSynchronously:(BOOL)a1;
- (void)_defaultAlarmChangedExternally;
- (void)_defaultCalendarChangedExternally;
- (id)_deletableCalendars;
- (id)_deletableSources;
- (void)_deleteDraft:(id)a0;
- (void)_deleteDraftOfEventWithOccurrenceID:(id)a0 fromDirectory:(id)a1;
- (void)_deleteObject:(id)a0;
- (void)_detachObject:(id)a0;
- (id)_draftPathForEventWithOccurrenceID:(id)a0 draftDirectory:(id)a1;
- (id)_entityWrappersForEventUUIDs:(id)a0 inCalendars:(id)a1 propertiesToLoad:(id)a2;
- (id)_eventCalendarWithIdentifier:(id)a0;
- (id)_eventOccurrenceWithURI:(id)a0;
- (id)_eventWithEventIdentifier:(id)a0;
- (id)_eventWithURI:(id)a0 checkValid:(BOOL)a1;
- (void)_fetchAndClearEventsNeedingGeocoding:(id *)a0 withCommittedObjects:(id)a1;
- (id)_fetchConstraintsForSourceWithCADObjectID:(id)a0;
- (void)_fetchProperties:(id)a0 forObjects:(id)a1;
- (void)_forgetRegisteredObjects;
- (void)_handleExternalDatabaseChangeNotification:(id)a0 synchronously:(BOOL)a1;
- (void)_handleExternalDatabaseChangedNotificationAsynchronously:(id)a0;
- (id)_importEventsWithExternalIDs:(id)a0 fromICSData:(id)a1 intoCalendarsWithIDs:(id)a2 options:(unsigned long long)a3 batchSize:(int)a4;
- (void)_insertObject:(id)a0;
- (id)_invalidCADObjectIDs:(id)a0;
- (BOOL)_isRegisteredObject:(id)a0;
- (BOOL)_isUnitTesting;
- (void)_loadCalendarsIfNeeded;
- (id)_loadDraftOfEventWithOccurrenceID:(id)a0 fromDirectory:(id)a1;
- (id)_loadDraftOfEventWithOccurrenceID:(id)a0 fromDirectory:(id)a1 withVersion:(id)a2;
- (void)_loadSourcesIfNeeded;
- (id)_markObjectsWithIdentifiersAsCommitted:(id)a0;
- (void)_objectDidReset:(id)a0;
- (BOOL)_parseURI:(id)a0 expectedScheme:(id)a1 identifier:(id *)a2 options:(id *)a3;
- (void)_populateCalendarsByIdentifierIfNeeded;
- (void)_postEventStoreChangedNotificationWithChangeType:(unsigned long long)a0 changedObjectIDs:(id)a1 forceImmediate:(BOOL)a2;
- (void)_postEventStoreChangedNotificationWithTags:(id)a0 context:(id)a1;
- (void)_processChangedObjectIDsWithErrorCode:(int)a0 changesTruncated:(BOOL)a1 latestToken:(id)a2 changeData:(id)a3 resultHandler:(id /* block */)a4;
- (void)_processExternalChangesWithLatestTimestamp:(id)a0 changedObjectIDsData:(id)a1 changesWereSyncStatusOnly:(BOOL)a2 forceImmediateNotification:(BOOL)a3;
- (void)_rebuildSourceMapsWithEventSources:(id)a0 reminderSources:(id)a1;
- (BOOL)_refreshDASource:(id)a0 isUserRequested:(BOOL)a1;
- (void)_registerObject:(id)a0;
- (void)_registerObjectImmediate:(id)a0;
- (void)_removeCachedCalendarFromSource:(id)a0;
- (BOOL)_removeCalendar:(id)a0 commit:(BOOL)a1 error:(id *)a2;
- (void)_requestAccessForEntityType:(unsigned long long)a0;
- (void)_reregisterObject:(id)a0 oldID:(id)a1;
- (void)_resetAndNotifyAfterDatabaseRestoreGenerationChanged;
- (BOOL)_saveCalendar:(id)a0 error:(id *)a1;
- (BOOL)_saveDraftOfEvent:(id)a0 toDirectory:(id)a1;
- (BOOL)_saveDraftOfEvent:(id)a0 toDirectory:(id)a1 withVersion:(id)a2;
- (BOOL)_saveEvent:(id)a0 span:(long long)a1 commit:(BOOL)a2 error:(id *)a3;
- (void)_setIsSpotlightTesting:(BOOL)a0;
- (void)_setIsUnitTesting:(BOOL)a0;
- (void)_simulateDaemonCrashForUnitTests;
- (id)_sourceWithID:(id)a0;
- (void)_trackModifiedObject:(id)a0;
- (void)_unregisterObject:(id)a0;
- (void)_updateDefaultDelayForThrottleEventStoreChangedNotifications;
- (void)_validateEventPredicate:(id)a0;
- (void)acceptSuggestedEvent:(id)a0;
- (void)acceptSuggestedEvent:(id)a0 placeOnCalendar:(id)a1;
- (id)acquireDefaultCalendarForNewEvents;
- (id)acquireDefaultCalendarForNewReminders;
- (void)addExchangeDelegateWithName:(id)a0 emailAddress:(id)a1 toSource:(id)a2 completion:(id /* block */)a3;
- (unsigned long long)addressValidationStatus:(id)a0;
- (void)alarmOccurrencesBetweenStartDate:(id)a0 endDate:(id)a1 inCalendars:(id)a2 completion:(id /* block */)a3;
- (id)alarmWithExternalID:(id)a0;
- (id)alarmWithUUID:(id)a0;
- (id)allEventsWithUniqueId:(id)a0 occurrenceDate:(id)a1;
- (id)attachmentUUIDWithExternalID:(id)a0 inSource:(id)a1;
- (id)attachmentWithUUID:(id)a0;
- (BOOL)backupDatabaseToDestination:(id)a0 withFormat:(unsigned long long)a1 error:(id *)a2;
- (void)cacheValidationStatusForAddress:(id)a0 status:(unsigned long long)a1;
- (id)cachedConstraintsForSourceWithCADObjectID:(id)a0;
- (id)calendarItemWithIdentifier:(id)a0;
- (id)calendarItemsWithExternalIdentifier:(id)a0;
- (id)calendarItemsWithExternalIdentifier:(id)a0 inCalendars:(id)a1;
- (id)calendarItemsWithUniqueIdentifier:(id)a0 inCalendar:(id)a1;
- (id)calendarWithCADID:(id)a0;
- (id)calendarWithExternalID:(id)a0;
- (id)calendarWithExternalURI:(id)a0;
- (id)calendarWithUniqueID:(id)a0;
- (id)calendarsWithIdentifiers:(id)a0;
- (void)cancelFetchRequest:(id)a0;
- (void)changedObjectIDsSinceToken:(long long)a0 resultHandler:(id /* block */)a1;
- (void)changesSinceSequenceToken:(id)a0 completion:(id /* block */)a1;
- (void)clearSuperfluousChanges;
- (id)closestCachedOccurrenceToDate:(double)a0 forEventObjectID:(id)a1;
- (id)closestCachedOccurrenceToDate:(double)a0 forEventObjectID:(id)a1 prefersForwardSearch:(BOOL)a2;
- (id)colorStringForNewCalendar;
- (id)combineEventCalendars:(id)a0 withReminderCalendars:(id)a1;
- (BOOL)commitObjects:(id)a0 error:(id *)a1;
- (BOOL)commitWithRollback:(id *)a0;
- (BOOL)commitWithRollbackForNewClients:(id *)a0;
- (void)confirmSuggestedEvent:(id)a0;
- (struct CGColor { } *)copyCGColorForNewCalendar;
- (void)databaseRestoreGenerationChangedExternally:(int)a0;
- (id)defaultCalendarForNewEventsInDelegateSource:(id)a0;
- (id)defaultLocalCalendar;
- (id)delegateSourcesForSource:(id)a0;
- (BOOL)deleteCalendar:(id)a0 forEntityType:(unsigned long long)a1 error:(id *)a2;
- (void)deleteDraftOfEventWithOccurrenceID:(id)a0;
- (void)deleteSuggestedEvent:(id)a0;
- (id)doEvents:(id)a0 haveOccurrencesAfterDate:(id)a1;
- (void)endCalDAVServerSimulation:(id)a0;
- (void)ensureLoadedProperties:(id)a0 forObjects:(id)a1;
- (id)eventForObjectID:(id)a0 occurrenceDate:(id)a1;
- (id)eventForObjectID:(id)a0 occurrenceDate:(id)a1 checkValid:(BOOL)a2;
- (id)eventForUID:(id)a0 occurrenceDate:(id)a1;
- (id)eventForUID:(id)a0 occurrenceDate:(id)a1 checkValid:(BOOL)a2;
- (unsigned long long)eventNotificationCountExcludingUncheckedCalendars:(BOOL)a0 expanded:(BOOL)a1;
- (unsigned long long)eventNotificationCountForSource:(id)a0 excludingDelegateSources:(BOOL)a1 filteredByShowsNotificationsFlag:(BOOL)a2 excludeObjectIDs:(id)a3;
- (unsigned long long)eventNotificationCountForSource:(id)a0 excludingDelegateSources:(BOOL)a1 filteredByShowsNotificationsFlag:(BOOL)a2 excludeObjectIDs:(id)a3 expanded:(BOOL)a4;
- (id)eventNotificationsAfterDate:(id)a0;
- (id)eventNotificationsAfterDate:(id)a0 excludingUncheckedCalendars:(BOOL)a1 filteredByShowsNotificationsFlag:(BOOL)a2 earliestExpiringNotification:(id *)a3;
- (id)eventNotificationsAfterDate:(id)a0 filteredByShowsNotificationsFlag:(BOOL)a1 earliestExpiringNotification:(id *)a2;
- (id)eventNotificationsExcludingUncheckedCalendars:(BOOL)a0 filteredByShowsNotificationsFlag:(BOOL)a1 earliestExpiringNotification:(id *)a2;
- (id)eventObjectIDsMatchingPredicate:(id)a0;
- (id)eventSourceForReminderSource:(id)a0;
- (id)eventSourceIDForReminderSourceID:(id)a0;
- (id)eventSourceMap;
- (id)eventSources;
- (id)eventWithExternalURI:(id)a0;
- (id)eventWithRecurrenceIdentifier:(id)a0;
- (id)eventWithUUID:(id)a0;
- (BOOL)eventWithUUID:(id)a0 isInCalendars:(id)a1;
- (id)eventWithUniqueId:(id)a0;
- (id)eventWithUniqueId:(id)a0 occurrenceDate:(id)a1;
- (id)eventWithUniqueIdentifier:(id)a0;
- (BOOL)eventsExistOnCalendar:(id)a0;
- (BOOL)eventsMarkedScheduleAgentClientExistOnCalendar:(id)a0;
- (id)eventsWithErrorsPerSourceID;
- (id)eventsWithExternalIdentifier:(id)a0 inCalendars:(id)a1;
- (id)eventsWithUUIDToOccurrenceDateMap:(id)a0 inCalendars:(id)a1;
- (void)fetchChangedObjectIDs:(id /* block */)a0;
- (void)fetchChangedObjectIDsSinceToken:(long long)a0 resultHandler:(id /* block */)a1;
- (void)fetchEventCountsInRange:(id)a0 inCalendars:(id)a1 exclusionOptions:(long long)a2 completion:(id /* block */)a3;
- (id)fetchEventsMatchingPredicate:(id)a0 resultHandler:(id /* block */)a1;
- (void)fetchGrantedDelegatesForSource:(id)a0 results:(id /* block */)a1;
- (id)fetchObjectsMatchingPredicate:(id)a0 completion:(id /* block */)a1;
- (id)fetchStorageUsage;
- (BOOL)fetchingSharedCalendarInvitationsDisallowed;
- (BOOL)futureScheduledEventsExistOnCalendar:(id)a0;
- (void)getMapsWithReminderSourceMap:(id *)a0 eventSourceMap:(id *)a1;
- (id)getSubscribedCalendarsSourceCreateIfNeededWithError:(id *)a0;
- (void)handleExternalDatabaseChangeNotification:(id)a0;
- (BOOL)hasImmediatelyEligibleTravelEvents;
- (BOOL)hideCalendarsFromNotificationCenter:(id)a0 error:(id *)a1;
- (id)importEventsWithExternalIDs:(id)a0 fromICSData:(id)a1 intoCalendars:(id)a2 options:(unsigned long long)a3 batchSize:(int)a4;
- (id)importICSData:(id)a0 intoCalendars:(id)a1 options:(unsigned long long)a2;
- (id)importVCSData:(id)a0 intoCalendars:(id)a1 error:(id *)a2;
- (id)initWithBirthdayCalendarModifications;
- (id)initWithEKOptions:(unsigned long long)a0 path:(id)a1 changeTrackingClientId:(id)a2 enablePropertyModificationLogging:(BOOL)a3 allowDelegateSources:(BOOL)a4 allowedSourceIdentifiers:(id)a5;
- (id)initWithEKOptions:(unsigned long long)a0 path:(id)a1 conainerProvider:(id)a2 changeTrackingClientId:(id)a3 enablePropertyModificationLogging:(BOOL)a4 allowDelegateSources:(BOOL)a5 allowedSourceIdentifiers:(id)a6;
- (id)initWithOptions:(int)a0 path:(id)a1 allowDelegateSources:(BOOL)a2;
- (id)initWithOptions:(int)a0 path:(id)a1 changeTrackingClientId:(id)a2 enablePropertyModificationLogging:(BOOL)a3 allowDelegateSources:(BOOL)a4;
- (void)initializeEKEventStorePlusReminders;
- (void)insertSuggestedEventCalendar;
- (void)invalidateReminderSourceMaps;
- (BOOL)isObjectInserted:(id)a0;
- (id)loadDraftOfEventWithOccurrenceID:(id)a0;
- (id)localBirthdayCalendarCreateIfNeededWithError:(id *)a0;
- (id)localBirthdayCalendarSource;
- (id)localSource;
- (id)localSourceEnableIfNeeded;
- (void)markChangedObjectIDsConsumedUpToToken:(long long)a0;
- (BOOL)markIndividualChangesConsumed:(id)a0 error:(id *)a1;
- (BOOL)markResourceChangeAlertedAndSave:(id)a0 error:(id *)a1;
- (BOOL)needsGeocodingForEvent:(id)a0;
- (id)nextEventWithCalendarIdentifiers:(id)a0 exclusionOptions:(long long)a1;
- (id)nextEventWithCalendars:(id)a0 exclusionOptions:(long long)a1;
- (id)notificationCollectionForSource:(id)a0;
- (BOOL)objectWithIDExists:(id)a0;
- (BOOL)objectsHaveChangesToCommit:(id)a0;
- (id)occurrenceCacheGetOccurrenceCountsForCalendars:(id)a0;
- (id)occurrenceCacheGetOccurrencesForCalendars:(id)a0 onDay:(id)a1;
- (BOOL)occurrencesExistInRangeForEvent:(id)a0 startDate:(id)a1 endDate:(id)a2 mustStartInInterval:(BOOL)a3 timezone:(id)a4;
- (id)parentSourceForDelegateSource:(id)a0;
- (void)performHoldingReminderSourceMapLock:(id /* block */)a0;
- (void)postSyntheticRouteHypothesis:(id)a0 forEventWithExternalURL:(id)a1;
- (id)predicateForAssistantEventSearchWithTimeZone:(id)a0 startDate:(id)a1 endDate:(id)a2 title:(id)a3 location:(id)a4 notes:(id)a5 participants:(id)a6 calendars:(id)a7 limit:(long long)a8;
- (id)predicateForCalendarItemsOfType:(unsigned long long)a0 inCalendar:(id)a1;
- (id)predicateForCalendarItemsOfType:(unsigned long long)a0 withExternalID:(id)a1 inCalendar:(id)a2;
- (id)predicateForCalendarItemsOfType:(unsigned long long)a0 withExternalID:(id)a1 inSource:(id)a2;
- (id)predicateForCalendarItemsOfType:(unsigned long long)a0 withUniqueIdentifier:(id)a1 inCalendar:(id)a2;
- (id)predicateForCalendarItemsOfType:(unsigned long long)a0 withUniqueIdentifier:(id)a1 inSource:(id)a2;
- (id)predicateForEventCreatedFromSuggestionWithOpaqueKey:(id)a0;
- (id)predicateForEventsCreatedFromSuggestion;
- (id)predicateForEventsCreatedFromSuggestionWithExtractionGroupIdentifier:(id)a0;
- (id)predicateForEventsInSubscribedCalendar:(id)a0;
- (id)predicateForEventsWithAttendeesInCalendar:(id)a0;
- (id)predicateForEventsWithConferenceURL:(id)a0 limit:(long long)a1;
- (id)predicateForEventsWithStartDate:(id)a0 endDate:(id)a1 calendars:(id)a2 loadDefaultProperties:(BOOL)a3;
- (id)predicateForEventsWithStartDate:(id)a0 endDate:(id)a1 calendars:(id)a2 matchingContacts:(id)a3;
- (id)predicateForEventsWithStartDate:(id)a0 endDate:(id)a1 calendars:(id)a2 prefetchHint:(long long)a3 exclusionOptions:(long long)a4;
- (id)predicateForEventsWithStartDate:(id)a0 endDate:(id)a1 uniqueID:(id)a2 calendars:(id)a3;
- (id)predicateForEventsWithStartDate:(id)a0 title:(id)a1 source:(id)a2;
- (id)predicateForIncompleteRemindersAndRemindersCompletedAfter:(id)a0 inCalendar:(id)a1;
- (id)predicateForMasterEventsInCalendar:(id)a0;
- (id)predicateForMasterEventsInCalendars:(id)a0;
- (id)predicateForMasterEventsWithExternalTrackingStatusInCalendar:(id)a0;
- (id)predicateForMasterEventsWithInvitationsAndOccurrencesAfter:(id)a0 inCalendar:(id)a1;
- (id)predicateForMasterEventsWithOccurrencesWithStartDate:(id)a0 endDate:(id)a1 inCalendar:(id)a2;
- (id)predicateForMasterEventsWithStartDate:(id)a0 title:(id)a1 inCalendar:(id)a2;
- (id)predicateForNaturalLanguageSuggestedEventsWithSearchString:(id)a0;
- (id)predicateForNaturalLanguageSuggestedEventsWithSearchString:(id)a0 startDate:(id)a1;
- (id)predicateForNonrecurringEventsWithStartDate:(id)a0 endDate:(id)a1 calendars:(id)a2;
- (id)predicateForNotifiableEvents;
- (id)predicateForNotificationCenterVisibleEvents;
- (id)predicateForPreloadedCompletedRemindersWithDueDate:(id)a0 calendars:(id)a1 sortOrder:(int)a2 preloadProperties:(id)a3;
- (id)predicateForPreloadedIncompleteRemindersWithDueDate:(id)a0 calendars:(id)a1 sortOrder:(int)a2 preloadProperties:(id)a3;
- (id)predicateForPreloadedIncompleteRemindersWithDueDate:(id)a0 calendars:(id)a1 sortOrder:(int)a2 preloadProperties:(id)a3 maxResults:(unsigned long long)a4;
- (id)predicateForRemindersInCalendars:(id)a0 preloadProperties:(id)a1;
- (id)predicateForRemindersWithTitle:(id)a0 listTitle:(id)a1 limitToCompletedOrIncomplete:(BOOL)a2 completed:(BOOL)a3 dueAfter:(id)a4 dueBefore:(id)a5 searchTerm:(id)a6 sortOrder:(int)a7 maxResults:(unsigned long long)a8;
- (id)predicateForScheduleAgentClientEventsInCalendar:(id)a0;
- (id)predicateForUnacknowledgedEvents;
- (id)predicateForUnalertedEvents;
- (id)predicateForUpNextEventsInCalendars:(id)a0 startDate:(id)a1 endDate:(id)a2 startDateRestrictionThreshold:(double)a3;
- (id)predicateForUpcomingEventsWithLimit:(int)a0;
- (id)publicObjectWithFetchedObjectID:(id)a0;
- (id)publicObjectWithObjectID:(id)a0;
- (id)publicObjectWithPersistentObject:(id)a0;
- (void)purgeChangelog;
- (void)pushSpotlightUpdatesForCalendarItemUUIDs:(id)a0;
- (int)readWriteCalendarCountForEntityType:(unsigned long long)a0;
- (id)readWriteCalendarsForEntityType:(unsigned long long)a0;
- (void)rebuildOccurrenceCache;
- (void)recordSequenceTokenForLegacyClients:(id)a0;
- (id)refreshEverythingIfNecessary:(BOOL)a0;
- (id)refreshFolderListsIfNecessary:(BOOL)a0;
- (BOOL)refreshSource:(id)a0 userRequested:(BOOL)a1;
- (void)refreshSourcesIfNecessary;
- (id)refreshSourcesIfNecessary:(BOOL)a0;
- (id)registerFetchedObjectWithID:(id)a0;
- (id)registerFetchedObjectWithID:(id)a0 withDefaultLoadedPropertyKeys:(id)a1 values:(id)a2;
- (long long)registerForDetailedChangeTrackingInSource:(id)a0 error:(id *)a1;
- (id)reminderObjectIDsMatchingPredicate:(id)a0;
- (id)reminderSourceForEventSource:(id)a0;
- (id)reminderSourceMap;
- (void)reminderStoreChanged;
- (id)reminderWithExternalURI:(id)a0;
- (id)remindersWithExternalIdentifier:(id)a0 inCalendars:(id)a1;
- (BOOL)removeCalendar:(id)a0 commit:(BOOL)a1 error:(id *)a2;
- (BOOL)removeEvent:(id)a0 span:(long long)a1 commit:(BOOL)a2 error:(id *)a3;
- (void)removeExchangeDelegate:(id)a0 completion:(id /* block */)a1;
- (BOOL)removeInviteReplyNotification:(id)a0 error:(id *)a1;
- (BOOL)removeInviteReplyNotifications:(id)a0 error:(id *)a1;
- (BOOL)removeReminder:(id)a0 commit:(BOOL)a1 error:(id *)a2;
- (BOOL)removeResourceChange:(id)a0 error:(id *)a1;
- (BOOL)removeResourceChanges:(id)a0 error:(id *)a1;
- (BOOL)removeResourceChangesForCalendarItem:(id)a0 error:(id *)a1;
- (BOOL)removeSource:(id)a0 commit:(BOOL)a1 error:(id *)a2;
- (void)removeSuggestedEventCalendar;
- (void)requestAccessToEntityType:(unsigned long long)a0 testing:(BOOL)a1 completion:(id /* block */)a2;
- (id)resourceChangesForEntityTypes:(unsigned long long)a0;
- (void)respondToSharedCalendarInvitation:(id)a0 withStatus:(unsigned long long)a1;
- (BOOL)restoreDatabaseFromBackup:(id)a0 withFormat:(unsigned long long)a1 error:(id *)a2;
- (BOOL)restoreGenerationChanged;
- (BOOL)returnEventResults;
- (BOOL)returnReminderResults;
- (BOOL)saveAttachment:(id)a0 commit:(BOOL)a1 error:(id *)a2;
- (BOOL)saveCalendar:(id)a0 commit:(BOOL)a1 error:(id *)a2;
- (BOOL)saveDraftOfEvent:(id)a0;
- (BOOL)saveEvent:(id)a0 span:(long long)a1 commit:(BOOL)a2 error:(id *)a3;
- (BOOL)saveNotification:(id)a0 commit:(BOOL)a1 error:(id *)a2;
- (BOOL)saveNotificationCollection:(id)a0 commit:(BOOL)a1 error:(id *)a2;
- (BOOL)saveReminder:(id)a0 commit:(BOOL)a1 error:(id *)a2;
- (BOOL)saveSource:(id)a0 commit:(BOOL)a1 error:(id *)a2;
- (id)sequenceToken;
- (void)setCachedDefaultAlarmOffsetsToNSNotFound;
- (void)setCachedEKSourceConstraintObject:(id)a0 forKey:(id)a1;
- (void)setDefaultCalendar:(id)a0 forNewEventsInDelegateSource:(id)a1;
- (void)setDefaultCalendarForNewReminders:(id)a0;
- (void)setFetchingSharedCalendarInvitationsDisallowed:(BOOL)a0;
- (BOOL)setFetchingSharedCalendarInvitationsDisallowedAndGetPreviousValue:(BOOL)a0;
- (BOOL)setInvitationStatus:(unsigned long long)a0 forEvent:(id)a1 error:(id *)a2;
- (BOOL)setInvitationStatus:(unsigned long long)a0 forEvents:(id)a1 error:(id *)a2;
- (void)setNeedsGeocoding:(BOOL)a0 forEvent:(id)a1;
- (void)setRestoreGenerationChanged:(BOOL)a0;
- (BOOL)setRestoreGenerationChangedAndGetPreviousValue:(BOOL)a0;
- (void)setSourceAccountManagement:(int)a0;
- (void)setSourceAccountManagement:(int)a0 withBundleID:(id)a1;
- (id)sharedCalendarInvitationsForEntityTypes:(unsigned long long)a0;
- (BOOL)shouldSaveCalendarAsEventCalendar:(id)a0;
- (BOOL)shouldSaveCalendarAsReminderCalendar:(id)a0;
- (void)showDeclinedEventsChanged:(id)a0;
- (id)sourceWithExternalID:(id)a0;
- (id)sourcesEnabledForEntityType:(unsigned long long)a0;
- (int)syncErrorCount;
- (unsigned long long)timeToLeaveLocationAuthorizationStatus;
- (id)travelEligibleEventsInCalendars:(id)a0 startDate:(id)a1 endDate:(id)a2;
- (id)uniqueIdentifiersForAllObjectsWithChangesRelatedToObjects:(id)a0;
- (id)uniqueIdentifiersForEventsWithObjectIDs:(id)a0;
- (BOOL)unregisterForDetailedChangeTracking:(id *)a0;
- (void)updateGrantedDelegate:(id)a0 action:(long long)a1 source:(id)a2 completion:(id /* block */)a3;
- (id)validatedNonDeletedPersistentObjectWithObjectID:(id)a0;
- (id)validatedNonDeletedPublicObjectWithObjectID:(id)a0;
- (void)waitForSpotlightUpdates;

@end
