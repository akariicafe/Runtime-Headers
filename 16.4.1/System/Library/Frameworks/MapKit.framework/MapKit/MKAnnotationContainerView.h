@class MKAnnotationView, NSString, MKPinAnnotationView, NSMutableDictionary, MKPriorityToIndexMap, NSMutableArray, NSMutableSet, NSMutableOrderedSet;
@protocol MKAnnotationContainerViewDelegate;

@interface MKAnnotationContainerView : UIView <VKCustomFeatureDataSource, _MKPinAnnotationViewDelegate> {
    NSMutableOrderedSet *_annotationViews;
    NSMutableDictionary *_clusteringAnnotationViews;
    NSMutableArray *_customFeatureDataSourceObservers;
    NSMutableArray *_awaitingDropPins;
    MKAnnotationView *_selectedAnnotationView;
    MKAnnotationView *_annotationViewToSelect;
    id<MKAnnotationContainerViewDelegate> _delegate;
    struct CGPoint { double x; double y; } _previousMouseDragPoint;
    double _previousMouseDragTimeStamp;
    struct CGPoint { double x; double y; } _mouseDownPoint;
    struct CGPoint { double x; double y; } _draggingAnnotationViewCenter;
    unsigned long long _mapType;
    BOOL _clickedOnAnnotationView;
    BOOL _didDragAnnotationView;
    MKAnnotationView *_userLocationView;
    double _annotationViewsRotationRadians;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _mapTransform;
    NSMutableArray *_pinsToAnimate;
    double _mapPitchRadians;
    struct { unsigned char timePeriod; unsigned char overlayType; unsigned char applicationState; unsigned char searchResultsType; BOOL mapHasLabels; } _mapDisplayStyle;
    BOOL _suppress;
    BOOL _isUpdating;
    double _lastUpdate;
    NSMutableDictionary *_clusterableAnnotationViews;
    NSMutableArray *_requiredPriorityAnnotationViews;
    NSMutableSet *_collidableAnnotationViews;
    NSMutableDictionary *_collidingAnnotationViews;
    NSMutableDictionary *_existingClusterAnnotationViews;
    MKPriorityToIndexMap *_priorityMap;
    NSMutableSet *_prioritiesToAdd;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) MKPinAnnotationView *bubblePin;
@property (nonatomic) BOOL suppressCallout;
@property (readonly, nonatomic) MKAnnotationView *userLocationView;
@property (readonly, nonatomic) MKAnnotationView *draggingAnnotationView;
@property (weak, nonatomic) id<MKAnnotationContainerViewDelegate> delegate;
@property (readonly, nonatomic) NSMutableOrderedSet *annotationViews;
@property (nonatomic) unsigned long long mapType;
@property (readonly, nonatomic) struct { long long x0; struct CLLocationCoordinate2D { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; id x4; BOOL x5; } currentComparisonContext;
@property (readonly, nonatomic) BOOL hasDroppingPins;
@property (readonly, nonatomic) BOOL hasPendingAnimations;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setMapPitchRadians:(double)a0;
- (BOOL)calloutContainsPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)annotationsInMapRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })a0;
- (struct CGPoint { double x0; double x1; })pointForCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })a0;
- (id)globalAnnotations;
- (id)_existingClusterViewsForClusterID:(id)a0;
- (void)getClusterImageTextForClusterFeatureCount:(unsigned long long)a0 text:(id *)a1 locale:(id *)a2;
- (void)_updateZPositionForAnnotationView:(id)a0 inBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)_willRemoveInternalAnnotationView:(id)a0;
- (void)annotationViewDidChangeZPriority:(id)a0;
- (unsigned char)sceneID;
- (void)_updateAnnotationView:(id)a0;
- (void)addAnnotationView:(id)a0 allowAnimation:(BOOL)a1;
- (id)annotationViewForPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_addPrioritiesForAnnotationViewIfNeeded:(id)a0;
- (unsigned char)sceneState;
- (void)addObserver:(id)a0;
- (void)transitionTo:(long long)a0;
- (void)updateAnnotationViewsWithDelay;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_visibleCenteringRect;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })accessoryPadding;
- (void)removeAnnotationView:(id)a0;
- (void)updateCalloutStateForSelectedAnnotationView:(id)a0;
- (id)clusterStyleAttributes;
- (void)suppressUpdates;
- (void)selectAnnotationView:(id)a0 animated:(BOOL)a1;
- (void)_draggingAnnotationViewDidPause:(id)a0;
- (void)getClusterAnnotationTextForClusterFeatureCount:(unsigned long long)a0 text:(id *)a1 locale:(id *)a2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_dropPinsIfNeeded:(BOOL)a0;
- (void)setUserLocationView:(id)a0;
- (struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })_mapRectWithFraction:(double)a0 ofVisible:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })a1;
- (void)stopSuppressingUpdates;
- (void)invalidateCustomFeatureDataSource;
- (void)updateAnnotationViewsForReason:(long long)a0;
- (void)draggingTouchMovedToPoint:(struct CGPoint { double x0; double x1; })a0 edgeInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a1;
- (id)_annotationViewForSelectionAtPoint:(struct CGPoint { double x0; double x1; })a0 avoidCurrent:(BOOL)a1 maxDistance:(double)a2;
- (void)setAnnotationViewsRotationRadians:(double)a0 animation:(id)a1;
- (void)_dropDraggingAnnotationViewAnimated:(BOOL)a0;
- (void)_liftForDragging:(id)a0 mouseDownPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)dealloc;
- (void)removeObserver:(id)a0;
- (void)setMapDisplayStyle:(struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; BOOL x4; })a0;
- (void)pinDidDrop:(id)a0 animated:(BOOL)a1;
- (void)deselectAnnotationView:(id)a0 animated:(BOOL)a1;
- (void)dropPinsIfNeeded;
- (struct CLLocationCoordinate2D { double x0; double x1; })coordinateForAnnotationView:(id)a0;
- (void)updateAnnotationView:(id)a0;
- (BOOL)_updatePriorityMapIfNeeded;
- (struct CGPoint { double x0; double x1; })draggingAnnotationViewDropPointForPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_updateCollidableAnnotationViews;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (void)_performStateUpdatesIfNeeded;
- (struct CGPoint { double x0; double x1; })draggingAnnotationViewDropPoint;
- (BOOL)_updateAnnotationViews:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_visibleCenteringRectInView:(id)a0;
- (void)invalidateCustomFeatureDataSourceRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })a0;
- (BOOL)_updateAnnotationViewPositions;
- (void)visibleCenteringRectChanged;
- (void)updateUserLocationView;
- (void)finishAddingAndRemovingAnnotationViews;
- (void).cxx_destruct;
- (void)_updateClusterableAnnotationViews:(id)a0 withID:(id)a1;
- (void)_updateAnnotationViewsForReason:(long long)a0 updatePositions:(BOOL)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_visibleRect;
- (void)removeAnnotationViewsRotationAnimations;
- (void)annotationViewDidChangeHidden:(id)a0;
- (void)annotationViewDidChangeMetrics:(id)a0;
- (BOOL)isClusteringEnabled;

@end
