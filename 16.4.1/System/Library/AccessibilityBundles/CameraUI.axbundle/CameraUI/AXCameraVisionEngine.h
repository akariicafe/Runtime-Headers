@class NSMutableDictionary, AXMVisionAnalysisOptions, NSObject, AXCameraLevelingMotionAnalyzer, CMDeviceMotion, UIView, AXMCameraFrameContext, NSString, AXMAVCaptureSessionNode, NSArray, AVCaptureSession, AXCameraHapticEngine, AXMVisionEngine;
@protocol OS_dispatch_queue;

@interface AXCameraVisionEngine : NSObject <AXMAVCaptureSessionNodeFrameDelegate>

@property (retain, nonatomic) AXMVisionEngine *visionEngine;
@property (retain, nonatomic) AXMVisionAnalysisOptions *lastDesiredAnalysisOptions;
@property (nonatomic) unsigned long long currentFrameCount;
@property (nonatomic) BOOL _queue_appActive;
@property (nonatomic) long long interfaceOrientation;
@property (nonatomic) long long cameraDevicePosition;
@property (nonatomic) long long cameraMode;
@property (nonatomic) struct CGSize { double width; double height; } _lastSampleBufferSize;
@property (readonly, nonatomic) NSMutableDictionary *_mostRecentVisionFeatures;
@property (readonly, nonatomic) NSMutableDictionary *_mostRecentVisionFeaturesUpdateTimes;
@property (retain, nonatomic) NSArray *_accessibilityElementCandidates;
@property (readonly, nonatomic) BOOL useThirdsForLocation;
@property (copy, nonatomic) NSString *lastAnnouncement;
@property (nonatomic) long long lastAnnouncementType;
@property (nonatomic, getter=isLastAnnouncementPartial) BOOL lastAnnouncementPartial;
@property (nonatomic) double lastAnnouncementTime;
@property (copy, nonatomic) NSString *inflightAnnouncement;
@property (copy, nonatomic) NSString *previousSceneAnnouncementCandidateWithoutLocation;
@property (nonatomic) double previousSceneAnnouncementCandidateWithoutLocationChangedTime;
@property (copy, nonatomic) NSString *lastSceneAnnouncement;
@property (copy, nonatomic) NSString *lastSceneAnnouncementFull;
@property (copy, nonatomic) NSString *lastSceneAnnouncementWithoutLocation;
@property (nonatomic) long long lastSceneAnnouncementLocation;
@property (nonatomic) double lastSceneAnnouncementTime;
@property (nonatomic) double lastSceneAnnouncementFullTime;
@property (nonatomic) long long lastLevelZone;
@property (nonatomic) double lastLevelZoneChangedTime;
@property (nonatomic) long long lastLevelAnnouncementZone;
@property (nonatomic) double lastLevelAnnouncementTime;
@property (readonly, nonatomic) AXCameraLevelingMotionAnalyzer *_levelingMotionAnalyzer;
@property (retain, nonatomic) CMDeviceMotion *lastDeviceMotion;
@property (retain, nonatomic) AXMCameraFrameContext *lastCameraFrameContext;
@property (readonly, nonatomic) AXCameraHapticEngine *hapticEngine;
@property (readonly, nonatomic) BOOL shouldEmitLevelFeedback;
@property (weak, nonatomic) AVCaptureSession *captureSession;
@property (retain, nonatomic) AXMAVCaptureSessionNode *captureSessionNode;
@property (weak, nonatomic) UIView *sceneObjectElementContainerView;
@property (nonatomic, getter=isAppActive) BOOL appActive;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *axResultsQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedEngine;
+ (BOOL)_isContainedWithinScreenBoundsForNormalizedFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
+ (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })_scaleNormalizedCoordinatesToSceneCoordinates:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;

- (void)captureOutput:(id)a0 didOutputMetadataObjects:(id)a1 forMetadataObjectTypes:(id)a2 fromConnection:(id)a3;
- (void)dealloc;
- (id)init;
- (BOOL)_isMirrored;
- (void).cxx_destruct;
- (void)captureSessionNode:(id)a0 didOutputSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 fromConnection:(id)a2;
- (void)_setCaptureDevicePosition:(long long)a0 mode:(long long)a1;
- (id)_analysisOptionsForIncomingFrame;
- (id)_announcementStringForFeedbackZone:(long long)a0;
- (void)_applyMotionCorrectionToElement:(id)a0 updatedFrameContext:(id)a1;
- (BOOL)_attemptAnnouncement:(id)a0 type:(long long)a1 isPartial:(BOOL)a2 timestamp:(double)a3;
- (void)_attemptLevelingAnnouncementForZone:(long long)a0 previousZone:(long long)a1;
- (void)_attemptSceneDescriptionAnnouncement:(id)a0 locationForAnnouncement:(long long)a1 type:(long long)a2;
- (BOOL)_canCreateAccessibilityElementForFeature:(id)a0 correctedFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 allFeatures:(id)a2;
- (BOOL)_canPostAnnouncement:(id)a0 type:(long long)a1 isPartial:(BOOL)a2 timestamp:(double)a3;
- (void)_clearCachedVisionResults;
- (void)_createAccessibilityElementCandidatesForVisionFeatures:(id)a0 evaluatedFeatureTypes:(id)a1;
- (void)_dispatchToResultsQueueWithBlock:(id /* block */)a0;
- (double)_expirationTimeForFeatureType:(unsigned long long)a0;
- (id)_filterElements:(id)a0 usingRelativeAreaThreshold:(double)a1 referenceElement:(id)a2;
- (id)_filterElements:(id)a0 usingRelativeWidthThreshold:(double)a1 referenceElement:(id)a2;
- (void)_generateAnnouncementsForVisionFeatures:(id)a0;
- (void)_handleAnnouncementDidFinish:(id)a0;
- (void)_handleCameraMetadataObjects:(id)a0 fromConnection:(id)a1;
- (void)_handleDeviceMotion:(id)a0;
- (void)_handleUpdatedVisionFeatures:(id)a0 evaluatedFeatureTypes:(id)a1 fromMotionUpdate:(BOOL)a2;
- (void)_handleVisionFeatures:(id)a0 evaluatedFeatureTypes:(id)a1 userContext:(id)a2;
- (BOOL)_hasDetectedFaces;
- (BOOL)_hasRealtimeFacesWithoutNames;
- (BOOL)_isLevelingNeededForZone:(long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_motionCorrectedNormalizedFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 frameContext:(id)a1 targetAttitude:(id)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_motionCorrectedNormalizedFrameForFeature:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_normalizedFrameForAccessibilityElements:(id)a0;
- (void)_performBecameLevelFeedback;
- (void)_performBecameUnlevelFeedback;
- (void)_performOnMainQueueWithBlock:(id /* block */)a0;
- (void)_performScreenEdgeHaptic;
- (long long)_priorityForAnnouncementType:(long long)a0;
- (void)_purgeExpiredVisionFeaturesUsingTime:(double)a0;
- (void)_resetAccessiblityElements;
- (void)_resetAnnouncementState;
- (void)_resetScheduling;
- (id)_sceneDescriptionAnnouncementForVisionFeatures:(id)a0 previousAnnouncementLocation:(long long)a1 locationForAnnouncement:(out long long *)a2 announcementType:(out long long *)a3;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_sceneObjectFrameForNormalizedFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inSceneFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)_setupCaptureSessionNode;
- (void)_setupEngine;
- (void)_setupHaptics;
- (void)_setupLeveling;
- (BOOL)_shouldReuseExistingElement:(id)a0 forFeature:(id)a1 correctedFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (void)_sortedAndFilteredAccessibilityElements:(id)a0 faces:(out id *)a1 persons:(out id *)a2 prominentObjects:(out id *)a3 objectClassifications:(out id *)a4;
- (BOOL)_updateAccessibilityElements:(id)a0 forIncomingFeature:(id)a1 correctedFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 evaluatedFeatureTypes:(id)a3;
- (void)_updateLevelFeedbackForDeviceMotion:(id)a0;
- (void)motionManagerDidUpdateDeviceMotion:(id)a0 captureOrientation:(long long)a1;
- (void)setCaptureDevicePosition:(long long)a0 mode:(long long)a1;

@end
