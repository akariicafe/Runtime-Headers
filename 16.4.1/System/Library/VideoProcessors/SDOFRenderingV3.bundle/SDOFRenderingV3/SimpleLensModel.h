@class FigMetalContext;
@protocol MTLComputePipelineState, MTLBuffer;

@interface SimpleLensModel : NSObject {
    FigMetalContext *_mtlCtx;
    id<MTLComputePipelineState> _minMax0_kernel;
    id<MTLComputePipelineState> _minMax1_kernel;
    id<MTLComputePipelineState> _minMax2_kernel;
    id<MTLComputePipelineState> _calc_kernel;
    id<MTLBuffer> _minMaxAtomic_buf;
    id<MTLBuffer> _minMaxResult_buf;
}

- (int)enqueueMinMaxWithThreadgroupSizes:(const struct threadgroup_sizes_config { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x2; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x3; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x4; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x5; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x6; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x7; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x8; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x9; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x10; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x11; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x12; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x13; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x14; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x15; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x16; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x17; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x18; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x19; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x20; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x21; } *)a0 inputShiftMapTex:(id)a1;
- (int)allocateResourcesForShiftMapWidth:(unsigned long long)a0 shiftMapHeight:(unsigned long long)a1;
- (int)enqueueSlmCalcWithInputShiftMap:(id)a0 slmParams:(id)a1 simpleLensParams:(const struct simple_lens_model_params { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; } *)a2;
- (void)dealloc;
- (int)enqueueCalcWithThreadgroupSizes:(const struct threadgroup_sizes_config { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x2; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x3; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x4; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x5; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x6; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x7; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x8; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x9; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x10; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x11; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x12; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x13; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x14; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x15; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x16; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x17; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x18; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x19; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x20; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x21; } *)a0 simpleLensParams:(const struct simple_lens_model_params { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; } *)a1 inputShiftMap:(id)a2 outputSlmParams:(id)a3;
- (id)initWithMetalContext:(id)a0;
- (void)deallocateResources;
- (void).cxx_destruct;

@end
