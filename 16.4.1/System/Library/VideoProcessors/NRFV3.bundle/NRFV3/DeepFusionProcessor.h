@class NSDictionary, RawDFQSRStage, NSMutableArray, ColorConvertStage, ToneMappingCurves, RawDFInferenceGen, RawDFFlickerDetectorStage, GrayGhostDetection, RawDFSyntheticLongStage, CMIDraftDemosaicStage, RawDFZoomStage, AMBNRStage, OutliersRemovalStage, MotionDetection, RawDFLumaSharpenStage, RawDFSyntheticReferenceStage, FigWiredMemory, FigRegWarpPPGPU, NSNumber, RawDFCommon, GainMapStage, RawDFDeferredFrames, ToneMappingStage, FigMetalContext, RawDFNetworkStage, CMIDemosaicStage, RawDFPostDemosaicStage, RawDFSyntheticReferenceUnpackStage, SemanticStylesStage, PyramidStage_NRF, LSCGainsPlist, DeepFusionProcessorShaders, NSMutableDictionary, LumaChromaImage, CMIExternalMemoryResource, NSString, RawDFPowerBlurStage, NRFProcessorInferenceResults, RegWarpPP, RawDFColorMatchStage, ColorCubeCorrectionStage, TextureUtils, CMIWarpStage, DFPlist, RegDense, RawDFDownsampleStage;
@protocol IBPSemanticStyleProperties, MTLCommandQueue, MTLTexture, IBPDeepFusionOutput, IBPDeepFusionProcessorDelegate;

@interface DeepFusionProcessor : NSObject <SidecarWriter, IBPDeepFusionProcessor> {
    NSMutableDictionary *_tuningParams;
    NSMutableDictionary *_tuningParamsPlist;
    FigWiredMemory *_sharedRegWarpBuffer;
    struct __CVBuffer { } *_regWarpInput;
    struct { unsigned int numThreads; unsigned int numHorizontalBlocks; unsigned int numVerticalBlocks; unsigned int nccSearchRadius; unsigned int nccPatchRadius; unsigned int maxSearchRadius; unsigned int internalBorderSize; float ransacAdaptiveThresholdFactor; float ransacMinMatchingScoreAccepted; unsigned int maxNumberOfPyramidLevels; BOOL skipInitialDownsample; BOOL performHistEq; } _registrationPipelineRWPPConfig;
    RegWarpPP *_registrationPipelineRWPP;
    unsigned long long _allocatorForceSize;
    BOOL _allocatorWireMemory;
    int _compressionLevel;
    int _allocatorType;
    int _networkVersion;
    BOOL _aggressiveMemoryOptimizations;
    BOOL _keepReferenceEv0RGB;
    RawDFDeferredFrames *_inputFrames;
    int _addFrameCount;
    LumaChromaImage *_outputImage;
    BOOL _allocatorSetupComplete;
    FigMetalContext *_metal;
    NSNumber *_sensorID;
    NSString *_portType;
    DFPlist *_dfPlist;
    int _shouldRunQSR;
    BOOL _hasEVM;
    struct frameMetadata { int sensorID; BOOL isHWISPFrame; BOOL isPreBracketedFrame; BOOL isEVMFrame; BOOL isLongFrame; long long averageFocusScore; struct exposureParameters { float gain; float red_gain; float blue_gain; float red_combo_gain; float blue_combo_gain; float analog_gain; float isp_digital_gain; float hard_gain; float ltm_soft_gain; float hr_gain_down_ratio; float exposure_time; float average_focus_score; float normalized_snr; float exposure_bias; float read_noise_1x; float read_noise_8x; float conversion_gain; float sensor_black_level; float lsModulationWeight; BOOL is_long; BOOL ae_locked; BOOL hr_enabled; float luxLevel; BOOL ltm_locked; float AETargetGain; float face_exp_ratio; float CCT; int quadraBinningFactor; float quadraInverseBinningGainFactor; } exposureParams; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } ROI; int exifOrientation; BOOL metadataHasLtmCurves; struct ltmCurves { union { unsigned short version; char bytes[18242]; char bytesCCM[110616]; struct { unsigned short version; unsigned short lutsCountX; unsigned short lutsCountY; unsigned short lutsBytesPerRow; unsigned short lutsCurveEntryCount; unsigned short topPadding; unsigned short bottomPadding; unsigned short leftPadding; unsigned short rightPadding; unsigned short tileWidth; unsigned short tileHeight; unsigned short lutsData[0]; } v1; struct { unsigned short version; unsigned short lutsCountX; unsigned short lutsCountY; unsigned short lutsBytesPerRow; unsigned short lutsCurveEntryCount; unsigned short topPadding; unsigned short bottomPadding; unsigned short leftPadding; unsigned short rightPadding; unsigned short tileWidth; unsigned short tileHeight; unsigned short lutsData[0]; } v2; struct { unsigned short version; unsigned short lutsCountX; unsigned short lutsCountY; unsigned short lutsBytesPerRow; unsigned short lutsBytesPerColumn; unsigned short topPadding; unsigned short bottomPadding; unsigned short leftPadding; unsigned short rightPadding; unsigned short tileWidth; unsigned short tileHeight; unsigned short ltmCurveEntryCount; unsigned short ccmEntryCount; unsigned short lutsData[0]; } v3; struct { unsigned short version; unsigned short lutsCountX; unsigned short lutsCountY; unsigned short lutsBytesPerRow; unsigned short lutsBytesPerColumn; unsigned short topPadding; unsigned short bottomPadding; unsigned short leftPadding; unsigned short rightPadding; unsigned short tileWidth; unsigned short tileHeight; unsigned short ltmCurveEntryCount; unsigned short lutsData[0]; } v4; struct { unsigned short version; unsigned short lutsCountX; unsigned short lutsCountY; unsigned short lutsBytesPerRow; unsigned short lutsBytesPerColumn; unsigned short topPadding; unsigned short bottomPadding; unsigned short leftPadding; unsigned short rightPadding; unsigned short tileWidth; unsigned short tileHeight; short ccmFixedPointBase; struct { struct { short shadows; short mid; short highlights; } RR; struct { short shadows; short mid; short highlights; } RG; struct { short shadows; short mid; short highlights; } RB; struct { short shadows; short mid; short highlights; } GR; struct { short shadows; short mid; short highlights; } GG; struct { short shadows; short mid; short highlights; } GB; struct { short shadows; short mid; short highlights; } BR; struct { short shadows; short mid; short highlights; } BG; struct { short shadows; short mid; short highlights; } BB; } lutsData[0]; } ccmV1; } ltmLut; union { unsigned short version; char bytes[18242]; char bytesCCM[110616]; struct { unsigned short version; unsigned short lutsCountX; unsigned short lutsCountY; unsigned short lutsBytesPerRow; unsigned short lutsCurveEntryCount; unsigned short topPadding; unsigned short bottomPadding; unsigned short leftPadding; unsigned short rightPadding; unsigned short tileWidth; unsigned short tileHeight; unsigned short lutsData[0]; } v1; struct { unsigned short version; unsigned short lutsCountX; unsigned short lutsCountY; unsigned short lutsBytesPerRow; unsigned short lutsCurveEntryCount; unsigned short topPadding; unsigned short bottomPadding; unsigned short leftPadding; unsigned short rightPadding; unsigned short tileWidth; unsigned short tileHeight; unsigned short lutsData[0]; } v2; struct { unsigned short version; unsigned short lutsCountX; unsigned short lutsCountY; unsigned short lutsBytesPerRow; unsigned short lutsBytesPerColumn; unsigned short topPadding; unsigned short bottomPadding; unsigned short leftPadding; unsigned short rightPadding; unsigned short tileWidth; unsigned short tileHeight; unsigned short ltmCurveEntryCount; unsigned short ccmEntryCount; unsigned short lutsData[0]; } v3; struct { unsigned short version; unsigned short lutsCountX; unsigned short lutsCountY; unsigned short lutsBytesPerRow; unsigned short lutsBytesPerColumn; unsigned short topPadding; unsigned short bottomPadding; unsigned short leftPadding; unsigned short rightPadding; unsigned short tileWidth; unsigned short tileHeight; unsigned short ltmCurveEntryCount; unsigned short lutsData[0]; } v4; struct { unsigned short version; unsigned short lutsCountX; unsigned short lutsCountY; unsigned short lutsBytesPerRow; unsigned short lutsBytesPerColumn; unsigned short topPadding; unsigned short bottomPadding; unsigned short leftPadding; unsigned short rightPadding; unsigned short tileWidth; unsigned short tileHeight; short ccmFixedPointBase; struct { struct { short shadows; short mid; short highlights; } RR; struct { short shadows; short mid; short highlights; } RG; struct { short shadows; short mid; short highlights; } RB; struct { short shadows; short mid; short highlights; } GR; struct { short shadows; short mid; short highlights; } GG; struct { short shadows; short mid; short highlights; } GB; struct { short shadows; short mid; short highlights; } BR; struct { short shadows; short mid; short highlights; } BG; struct { short shadows; short mid; short highlights; } BB; } lutsData[0]; } ccmV1; } ccmLut; struct { unsigned short lutEntryCount; unsigned short lutData[0]; } globalLtmLut; unsigned short globalLtmLutData[257]; struct { unsigned short lutEntryCount; unsigned short lutData[0]; } gtcLut; unsigned short gtcLutData[257]; float ltmHardGain; float averageLTMCurve[65]; BOOL averageLTMCurveValid; } ltmCurves; struct { void /* unknown type, empty encoding */ columns[3]; } colorCorrectionMatrix; BOOL isStationary; BOOL allowSpatialCCM; int facesCount; struct FaceDetectionBuffer { struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } rect; unsigned short confidence; unsigned short roll; unsigned short yaw; } faces[10]; int bodiesCount; struct BodyDetectionBuffer { struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } rect; unsigned short confidence; } bodies[10]; BOOL hasValidClippingData; struct LocalHistogramClippingDataGeneric { unsigned short version; unsigned int binCountPerTile; struct *dataV1; } clippingData; float sensorCropRatio; BOOL hasZoomRects; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } zoomSrcRect; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } zoomDstRect; BOOL zoomApplied; struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } zoomTransform; } _sifrMetadata;
    BOOL _dsrMode;
    struct { void /* unknown type, empty encoding */ columns[3]; } _srRelativeHomography;
    struct { void /* unknown type, empty encoding */ columns[3]; } _evmHomographyOriginalBeforeZoomUpdate;
    BOOL _runDetectors;
    struct { int syntheticReferenceMode; float motionDetectionScore; float grayGhostDetectionScore; BOOL hasMotion; BOOL hasGrayGhost; BOOL hasFlicker; struct { void /* unknown type, empty encoding */ redScaleOffset; void /* unknown type, empty encoding */ greenScaleOffset; void /* unknown type, empty encoding */ blueScaleOffset; } evmColorAdjustment; } _detectors;
    BOOL _syntheticReferenceMetadataIsProcessed;
    struct frameMetadata { int x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; long long x5; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; int x8; BOOL x9; struct ltmCurves { union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x0; union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x1; struct { unsigned short x0; unsigned short x1[0]; } x2; unsigned short x3[257]; struct { unsigned short x0; unsigned short x1[0]; } x4; unsigned short x5[257]; float x6; float x7[65]; BOOL x8; } x10; struct { void /* unknown type, empty encoding */ x0[3]; } x11; BOOL x12; BOOL x13; int x14; struct FaceDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; unsigned short x2; unsigned short x3; } x15[10]; int x16; struct BodyDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; } x17[10]; BOOL x18; struct LocalHistogramClippingDataGeneric { unsigned short x0; unsigned int x1; struct *x2; } x19; float x20; BOOL x21; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x22; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x23; BOOL x24; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x25; } *_darkestFrameMetadata;
    NSDictionary *_nrfInfoDict;
    NSNumber *_nrfStatus;
    NSNumber *_nrfInputBracketCount;
    NSNumber *_nrfRegisteredBracketCount;
    NSMutableDictionary *_sidecar;
    LSCGainsPlist *_lscGainsPlist;
    id<MTLTexture> _lscGainsTex;
    int _applyColorCubeFixOverride;
    int _applyColorCube2FixOverride;
    unsigned long long _originalWidth;
    unsigned long long _originalHeight;
    NSMutableDictionary *_draftDemosaicCache;
    NSMutableArray *_framesPendingToBeRegistered;
    NRFProcessorInferenceResults *_inferenceResults;
    ToneMappingCurves *_toneMappingCurves;
    DeepFusionProcessorShaders *_shaders;
    ToneMappingStage *_toneMappingStage;
    SemanticStylesStage *_semanticStylesStage;
    int _srlVersion;
    TextureUtils *_textureUtils;
    RegDense *_regDense;
    RawDFNetworkStage *_rawDFNetworkStage;
    struct DeepFusionFrameMeta { BOOL hasEVM; BOOL isEV0Reference; float zoom; unsigned long long ev0Count; void /* unknown type, empty encoding */ quadraSynethticReferenceValidRegion; struct exposureParameters { float gain; float red_gain; float blue_gain; float red_combo_gain; float blue_combo_gain; float analog_gain; float isp_digital_gain; float hard_gain; float ltm_soft_gain; float hr_gain_down_ratio; float exposure_time; float average_focus_score; float normalized_snr; float exposure_bias; float read_noise_1x; float read_noise_8x; float conversion_gain; float sensor_black_level; float lsModulationWeight; BOOL is_long; BOOL ae_locked; BOOL hr_enabled; float luxLevel; BOOL ltm_locked; float AETargetGain; float face_exp_ratio; float CCT; int quadraBinningFactor; float quadraInverseBinningGainFactor; } refExposure; struct exposureParameters { float gain; float red_gain; float blue_gain; float red_combo_gain; float blue_combo_gain; float analog_gain; float isp_digital_gain; float hard_gain; float ltm_soft_gain; float hr_gain_down_ratio; float exposure_time; float average_focus_score; float normalized_snr; float exposure_bias; float read_noise_1x; float read_noise_8x; float conversion_gain; float sensor_black_level; float lsModulationWeight; BOOL is_long; BOOL ae_locked; BOOL hr_enabled; float luxLevel; BOOL ltm_locked; float AETargetGain; float face_exp_ratio; float CCT; int quadraBinningFactor; float quadraInverseBinningGainFactor; } syntheticLongExposure; struct exposureParameters { float gain; float red_gain; float blue_gain; float red_combo_gain; float blue_combo_gain; float analog_gain; float isp_digital_gain; float hard_gain; float ltm_soft_gain; float hr_gain_down_ratio; float exposure_time; float average_focus_score; float normalized_snr; float exposure_bias; float read_noise_1x; float read_noise_8x; float conversion_gain; float sensor_black_level; float lsModulationWeight; BOOL is_long; BOOL ae_locked; BOOL hr_enabled; float luxLevel; BOOL ltm_locked; float AETargetGain; float face_exp_ratio; float CCT; int quadraBinningFactor; float quadraInverseBinningGainFactor; } longExposure; struct exposureParameters { float gain; float red_gain; float blue_gain; float red_combo_gain; float blue_combo_gain; float analog_gain; float isp_digital_gain; float hard_gain; float ltm_soft_gain; float hr_gain_down_ratio; float exposure_time; float average_focus_score; float normalized_snr; float exposure_bias; float read_noise_1x; float read_noise_8x; float conversion_gain; float sensor_black_level; float lsModulationWeight; BOOL is_long; BOOL ae_locked; BOOL hr_enabled; float luxLevel; BOOL ltm_locked; float AETargetGain; float face_exp_ratio; float CCT; int quadraBinningFactor; float quadraInverseBinningGainFactor; } quadraExposure; } _dfFrameMetadata;
    AMBNRStage *_ambnrStage;
    OutliersRemovalStage *_outliersRemovalStage;
    PyramidStage_NRF *_pyramidStage;
    struct PyramidFilterParams { int filterType; float luma_param; float chroma_param; } _pyrfilters[3];
    RawDFCommon *_rawDFCommon;
    CMIDemosaicStage *_demosaicStage;
    CMIDraftDemosaicStage *_draftDemosaicStage;
    FigRegWarpPPGPU *_regwarpGPU;
    RawDFPowerBlurStage *_rawDFPowerBlurStage;
    RawDFLumaSharpenStage *_rawDFLumaSharpenStage;
    RawDFZoomStage *_rawDFZoomStage;
    RawDFSyntheticLongStage *_rawDFSyntheticLongStage;
    RawDFQSRStage *_rawDFQSRStage;
    CMIWarpStage *_warpStage;
    RawDFInferenceGen *_rawDFInferenceGen;
    GainMapStage *_gainMapStage;
    RawDFPostDemosaicStage *_rawDFPostDemosaicStage;
    ColorCubeCorrectionStage *_ColorCubeCorrectionStage;
    ColorConvertStage *_colorConvertStage;
    MotionDetection *_motionDetection;
    GrayGhostDetection *_grayGhostDetection;
    RawDFFlickerDetectorStage *_flickerDetection;
    RawDFDownsampleStage *_rawDFDownsampleStage;
    RawDFColorMatchStage *_rawDFColorMatchStage;
    RawDFSyntheticReferenceStage *_rawDFSyntheticReferenceStage;
    RawDFSyntheticReferenceUnpackStage *_rawDFSyntheticReferenceUnpackStage;
    BOOL _useRegwarpCPU;
    BOOL _isShaderHarvesting;
    BOOL _regWarpApplyGDC;
    BOOL _roiAdjustedForEnhancedResolution;
    float _outputGainMapHeadroom;
    float _quadraMotionScore;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) int processingMode;
@property (retain, nonatomic) id<IBPSemanticStyleProperties> semanticStyleProperties;
@property (retain, nonatomic) id<IBPDeepFusionOutput> output;
@property (weak, nonatomic) id<IBPDeepFusionProcessorDelegate> delegate;
@property (retain, nonatomic) id<MTLCommandQueue> metalCommandQueue;
@property (readonly, nonatomic) BOOL supportsExternalMemoryResource;
@property (retain, nonatomic) CMIExternalMemoryResource *externalMemoryResource;
@property (retain, nonatomic) NSDictionary *tuningParameters;
@property (retain, nonatomic) NSDictionary *cameraInfoByPortType;

+ (BOOL)getAggressiveMemoryOptimizationWithOutputWidth:(unsigned long long)a0 withOutputHeight:(unsigned long long)a1 withCompressionLevel:(int)a2;
+ (unsigned long long)getMetalHeapSizeWithOutputWidth:(unsigned long long)a0 withOutputHeight:(unsigned long long)a1 withCompressionLevel:(int)a2 withAggressiveMemoryOptimizations:(BOOL)a3;

- (int)prewarm;
- (int)applyOverrides;
- (int)prewarmWithTuningParameters:(id)a0;
- (int)resetState;
- (int)_registerImages:(BOOL)a0;
- (int)setup;
- (int)finishProcessing;
- (int)prepareToProcess:(unsigned int)a0;
- (int)purgeResources;
- (int)process;
- (id)initWithContext:(id)a0;
- (id)init;
- (void)addToSidecar:(id)a0 forKey:(id)a1;
- (void).cxx_destruct;
- (int)addBuffer:(struct __CVBuffer { } *)a0 metadata:(id)a1 type:(int)a2;
- (int)addInferenceResults:(id)a0;
- (BOOL)canProcessCurrentBuffersForEnhancedRes;
- (id)externalMemoryDescriptorForConfiguration:(id)a0;
- (int)prepareToProcess:(unsigned int)a0 prepareDescriptor:(id)a1;
- (int)setupWithOptions:(id)a0;
- (void)EndKTraceEventForAddFrame:(struct frameProperties_t { struct frameMetadata { int x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; long long x5; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; int x8; BOOL x9; struct ltmCurves { union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x0; union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x1; struct { unsigned short x0; unsigned short x1[0]; } x2; unsigned short x3[257]; struct { unsigned short x0; unsigned short x1[0]; } x4; unsigned short x5[257]; float x6; float x7[65]; BOOL x8; } x10; struct { void /* unknown type, empty encoding */ x0[3]; } x11; BOOL x12; BOOL x13; int x14; struct FaceDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; unsigned short x2; unsigned short x3; } x15[10]; int x16; struct BodyDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; } x17[10]; BOOL x18; struct LocalHistogramClippingDataGeneric { unsigned short x0; unsigned int x1; struct *x2; } x19; float x20; BOOL x21; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x22; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x23; BOOL x24; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x25; } x0; BOOL x1; BOOL x2; BOOL x3; struct { void /* unknown type, empty encoding */ x0[3]; } x4; int x5; struct ColorSpaceConversionParameters { struct { void /* unknown type, empty encoding */ x0[3]; } x0; struct { void /* unknown type, empty encoding */ x0[3]; } x1; struct { void /* unknown type, empty encoding */ x0[3]; } x2; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x3; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x4; float x5; float x6; float x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; } x6; int x7; BOOL x8; float x9; double x10; float x11; BOOL x12; float x13; BOOL x14; float x15; BOOL x16; float x17; BOOL x18; BOOL x19; BOOL x20; } *)a0;
- (void)EndKTraceEventForProcess:(id)a0;
- (int)bypassFusionForQuadraSyntheticReference:(id)a0 withSyntheticReference:(id)a1;
- (struct { float x0; float x1; float x2[8]; float x3[8]; } *)getRefGDCParams;
- (void)StartKTraceEventForAddFrame:(struct frameProperties_t { struct frameMetadata { int x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; long long x5; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; int x8; BOOL x9; struct ltmCurves { union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x0; union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x1; struct { unsigned short x0; unsigned short x1[0]; } x2; unsigned short x3[257]; struct { unsigned short x0; unsigned short x1[0]; } x4; unsigned short x5[257]; float x6; float x7[65]; BOOL x8; } x10; struct { void /* unknown type, empty encoding */ x0[3]; } x11; BOOL x12; BOOL x13; int x14; struct FaceDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; unsigned short x2; unsigned short x3; } x15[10]; int x16; struct BodyDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; } x17[10]; BOOL x18; struct LocalHistogramClippingDataGeneric { unsigned short x0; unsigned int x1; struct *x2; } x19; float x20; BOOL x21; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x22; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x23; BOOL x24; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x25; } x0; BOOL x1; BOOL x2; BOOL x3; struct { void /* unknown type, empty encoding */ x0[3]; } x4; int x5; struct ColorSpaceConversionParameters { struct { void /* unknown type, empty encoding */ x0[3]; } x0; struct { void /* unknown type, empty encoding */ x0[3]; } x1; struct { void /* unknown type, empty encoding */ x0[3]; } x2; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x3; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x4; float x5; float x6; float x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; } x6; int x7; BOOL x8; float x9; double x10; float x11; BOOL x12; float x13; BOOL x14; float x15; BOOL x16; float x17; BOOL x18; BOOL x19; BOOL x20; } *)a0;
- (void)StartKTraceEventForProcess:(id)a0;
- (int)getRawDFFrameTypeForInputFrame:(id)a0;
- (int)_allocateAndFillLumaChromaImage:(id)a0 withSourceFrame:(id)a1 withPyramidLevel:(unsigned long long)a2 withAllocatorLabel:(id)a3 outputLumaWidth:(unsigned int)a4 outputLumaHeight:(unsigned int)a5;
- (int)_allocateAndUnpackSyntheticReferenceFrame:(id)a0;
- (int)_allocateRegWarpPPWithWidth:(unsigned long long)a0 height:(unsigned long long)a1 pixelFormat:(unsigned int)a2;
- (int)_commonInitWithContext:(id)a0;
- (int)_correctInputFramesROIForEnhancedResolutionOutputSize:(id)a0 outputSize:(SEL)a1;
- (int)_demosaicAndProcessFrame:(id)a0 toTexture:(id)a1 withWarpFrame:(BOOL)a2;
- (int)_demosaicAndProcessFrame:(id)a0 withWarpFrame:(BOOL)a1;
- (int)_ensureSyntheticReferenceIsUnpacked:(id)a0;
- (id)_getAttachedSyntheticReferenceMetadata;
- (int)_getGyroMotionScoreFromMetadata:(id)a0 gyroScore:(float *)a1;
- (int)_parseSyntheticReferenceMetadata:(id)a0;
- (int)_preprocessSyntheticReferenceFrame;
- (int)_processInferenceImage:(struct __CVBuffer { } *)a0 sourceFrameLumaChromaImage:(id)a1 sourceFrameProperties:(struct frameProperties_t { struct frameMetadata { int x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; long long x5; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; int x8; BOOL x9; struct ltmCurves { union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x0; union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x1; struct { unsigned short x0; unsigned short x1[0]; } x2; unsigned short x3[257]; struct { unsigned short x0; unsigned short x1[0]; } x4; unsigned short x5[257]; float x6; float x7[65]; BOOL x8; } x10; struct { void /* unknown type, empty encoding */ x0[3]; } x11; BOOL x12; BOOL x13; int x14; struct FaceDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; unsigned short x2; unsigned short x3; } x15[10]; int x16; struct BodyDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; } x17[10]; BOOL x18; struct LocalHistogramClippingDataGeneric { unsigned short x0; unsigned int x1; struct *x2; } x19; float x20; BOOL x21; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x22; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x23; BOOL x24; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x25; } x0; BOOL x1; BOOL x2; BOOL x3; struct { void /* unknown type, empty encoding */ x0[3]; } x4; int x5; struct ColorSpaceConversionParameters { struct { void /* unknown type, empty encoding */ x0[3]; } x0; struct { void /* unknown type, empty encoding */ x0[3]; } x1; struct { void /* unknown type, empty encoding */ x0[3]; } x2; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x3; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x4; float x5; float x6; float x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; } x6; int x7; BOOL x8; float x9; double x10; float x11; BOOL x12; float x13; BOOL x14; float x15; BOOL x16; float x17; BOOL x18; BOOL x19; BOOL x20; } *)a2 ltcFrameProperties:(struct frameProperties_t { struct frameMetadata { int x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; long long x5; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; int x8; BOOL x9; struct ltmCurves { union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x0; union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x1; struct { unsigned short x0; unsigned short x1[0]; } x2; unsigned short x3[257]; struct { unsigned short x0; unsigned short x1[0]; } x4; unsigned short x5[257]; float x6; float x7[65]; BOOL x8; } x10; struct { void /* unknown type, empty encoding */ x0[3]; } x11; BOOL x12; BOOL x13; int x14; struct FaceDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; unsigned short x2; unsigned short x3; } x15[10]; int x16; struct BodyDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; } x17[10]; BOOL x18; struct LocalHistogramClippingDataGeneric { unsigned short x0; unsigned int x1; struct *x2; } x19; float x20; BOOL x21; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x22; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x23; BOOL x24; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x25; } x0; BOOL x1; BOOL x2; BOOL x3; struct { void /* unknown type, empty encoding */ x0[3]; } x4; int x5; struct ColorSpaceConversionParameters { struct { void /* unknown type, empty encoding */ x0[3]; } x0; struct { void /* unknown type, empty encoding */ x0[3]; } x1; struct { void /* unknown type, empty encoding */ x0[3]; } x2; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x3; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x4; float x5; float x6; float x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; } x6; int x7; BOOL x8; float x9; double x10; float x11; BOOL x12; float x13; BOOL x14; float x15; BOOL x16; float x17; BOOL x18; BOOL x19; BOOL x20; } *)a3 gtcFrameProperties:(struct frameProperties_t { struct frameMetadata { int x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; long long x5; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; int x8; BOOL x9; struct ltmCurves { union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x0; union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x1; struct { unsigned short x0; unsigned short x1[0]; } x2; unsigned short x3[257]; struct { unsigned short x0; unsigned short x1[0]; } x4; unsigned short x5[257]; float x6; float x7[65]; BOOL x8; } x10; struct { void /* unknown type, empty encoding */ x0[3]; } x11; BOOL x12; BOOL x13; int x14; struct FaceDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; unsigned short x2; unsigned short x3; } x15[10]; int x16; struct BodyDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; } x17[10]; BOOL x18; struct LocalHistogramClippingDataGeneric { unsigned short x0; unsigned int x1; struct *x2; } x19; float x20; BOOL x21; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x22; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x23; BOOL x24; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x25; } x0; BOOL x1; BOOL x2; BOOL x3; struct { void /* unknown type, empty encoding */ x0[3]; } x4; int x5; struct ColorSpaceConversionParameters { struct { void /* unknown type, empty encoding */ x0[3]; } x0; struct { void /* unknown type, empty encoding */ x0[3]; } x1; struct { void /* unknown type, empty encoding */ x0[3]; } x2; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x3; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x4; float x5; float x6; float x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; } x6; int x7; BOOL x8; float x9; double x10; float x11; BOOL x12; float x13; BOOL x14; float x15; BOOL x16; float x17; BOOL x18; BOOL x19; BOOL x20; } *)a4 originalWidth:(unsigned long long)a5 originalHeight:(unsigned long long)a6;
- (int)_processInputFrame:(id)a0;
- (int)_processSyntheticReferenceMetadataFromReferenceEV0;
- (int)addInputFrameAsExternalAllocator:(id)a0 withSubAllocatorId:(int)a1;
- (void)clearDraftDemosaicCache;
- (int)computeAMBNRDenoiseBoostMap:(id)a0 syntheticLongOutput:(id)a1 ev0ExposureParams:(struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; })a2 longExposureParams:(struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; })a3 dfNoiseTuningPlist:(id)a4;
- (int)detectMotionForQuadra:(id)a0 reference:(id)a1 quadraProperties:(struct frameProperties_t { struct frameMetadata { int x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; long long x5; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; int x8; BOOL x9; struct ltmCurves { union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x0; union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x1; struct { unsigned short x0; unsigned short x1[0]; } x2; unsigned short x3[257]; struct { unsigned short x0; unsigned short x1[0]; } x4; unsigned short x5[257]; float x6; float x7[65]; BOOL x8; } x10; struct { void /* unknown type, empty encoding */ x0[3]; } x11; BOOL x12; BOOL x13; int x14; struct FaceDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; unsigned short x2; unsigned short x3; } x15[10]; int x16; struct BodyDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; } x17[10]; BOOL x18; struct LocalHistogramClippingDataGeneric { unsigned short x0; unsigned int x1; struct *x2; } x19; float x20; BOOL x21; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x22; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x23; BOOL x24; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x25; } x0; BOOL x1; BOOL x2; BOOL x3; struct { void /* unknown type, empty encoding */ x0[3]; } x4; int x5; struct ColorSpaceConversionParameters { struct { void /* unknown type, empty encoding */ x0[3]; } x0; struct { void /* unknown type, empty encoding */ x0[3]; } x1; struct { void /* unknown type, empty encoding */ x0[3]; } x2; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x3; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x4; float x5; float x6; float x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; } x6; int x7; BOOL x8; float x9; double x10; float x11; BOOL x12; float x13; BOOL x14; float x15; BOOL x16; float x17; BOOL x18; BOOL x19; BOOL x20; } *)a2 referenceProperties:(struct frameProperties_t { struct frameMetadata { int x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; long long x5; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; int x8; BOOL x9; struct ltmCurves { union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x0; union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x1; struct { unsigned short x0; unsigned short x1[0]; } x2; unsigned short x3[257]; struct { unsigned short x0; unsigned short x1[0]; } x4; unsigned short x5[257]; float x6; float x7[65]; BOOL x8; } x10; struct { void /* unknown type, empty encoding */ x0[3]; } x11; BOOL x12; BOOL x13; int x14; struct FaceDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; unsigned short x2; unsigned short x3; } x15[10]; int x16; struct BodyDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; } x17[10]; BOOL x18; struct LocalHistogramClippingDataGeneric { unsigned short x0; unsigned int x1; struct *x2; } x19; float x20; BOOL x21; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x22; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x23; BOOL x24; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x25; } x0; BOOL x1; BOOL x2; BOOL x3; struct { void /* unknown type, empty encoding */ x0[3]; } x4; int x5; struct ColorSpaceConversionParameters { struct { void /* unknown type, empty encoding */ x0[3]; } x0; struct { void /* unknown type, empty encoding */ x0[3]; } x1; struct { void /* unknown type, empty encoding */ x0[3]; } x2; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x3; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x4; float x5; float x6; float x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; } x6; int x7; BOOL x8; float x9; double x10; float x11; BOOL x12; float x13; BOOL x14; float x15; BOOL x16; float x17; BOOL x18; BOOL x19; BOOL x20; } *)a3 quadraRelativeHomography:(const struct { void /* unknown type, empty encoding */ x0[3]; } *)a4 motionDetection:(id)a5 motionTuningParams:(struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; BOOL x9; } *)a6 motionScore:(float *)a7 tileRatioExceedThreshold:(float *)a8;
- (int)finalizeFrameStateForProcess;
- (int)finalizeOutput:(id)a0 syntheticLongOutput:(id)a1 output:(id)a2;
- (int)generateQuadraSyntheticReference:(id)a0 withSyntheticReference:(id)a1;
- (int)generateSyntheticLongToOutput:(id)a0;
- (int)generateSyntheticReference:(id)a0;
- (int)generateSyntheticReferenceWithSIFR:(id)a0;
- (BOOL)getKeepReferenceEV0RGBWithOutputWidth:(unsigned long long)a0 withOutputHeight:(unsigned long long)a1;
- (id)getQSRTuningParametersForInputQuadraFrameType;
- (id)getTuningModeForCurrentProcessingMode;
- (int)prepareTuning:(id)a0;
- (void)printHomography:(struct { void /* unknown type, empty encoding */ x0[3]; } *)a0;
- (int)processFrameForRegistration:(id)a0 isReference:(BOOL)a1;
- (int)runNetworkFusionWithInputSyntheticLong:(id)a0 inputSytheticReference:(id)a1 inputQuadraSyntheticReference:(id)a2 output:(id)a3;
- (int)shouldGenerateQuadraSyntheticReference:(BOOL *)a0;
- (int)warpSyntheticLongIfNecessary:(id)a0 toSyntheticReference:(id)a1;

@end
