@class GainValueArray;

@interface RawDFNetworkStageTuningParams : NSObject {
    struct RawDFNetworkStageParameters { struct RawDFParameters { BOOL useExtraNoiseFactor; float networkSwitchEITThreshold; struct RawDFNetworkParameters { BOOL useArtifactCorrectionNetwork; struct RawDFNoiseEstimationParameters { GainValueArray *lumaPowerDenom; GainValueArray *srLumaMaxNoiseFactor; GainValueArray *slLumaMaxNoiseFactor; GainValueArray *srGlobalNoiseFactor; GainValueArray *slGlobalNoiseFactor; GainValueArray *artifactCorrectionlNoiseFactor; GainValueArray *lscNoiseFactor; GainValueArray *fusionMaxNoiseFactor; } noiseEstimationParams; struct RawDFDeghostingBandParams { GainValueArray *gaussianDiffFactor; GainValueArray *laplacianDiffFactor; GainValueArray *highlightLumaMid; GainValueArray *highlightLumaSlope; GainValueArray *highlightMaskFactor; } deghostingBands[4]; struct RawDFDenoisingBandParams { GainValueArray *globalAddBackFactor; GainValueArray *fusionAddBackFactor; GainValueArray *skinAddBackFactor; GainValueArray *skyAddBackFactor; } denoisingBands[4]; } lowLightNetworkParams; struct RawDFNetworkParameters { BOOL useArtifactCorrectionNetwork; struct RawDFNoiseEstimationParameters { GainValueArray *lumaPowerDenom; GainValueArray *srLumaMaxNoiseFactor; GainValueArray *slLumaMaxNoiseFactor; GainValueArray *srGlobalNoiseFactor; GainValueArray *slGlobalNoiseFactor; GainValueArray *artifactCorrectionlNoiseFactor; GainValueArray *lscNoiseFactor; GainValueArray *fusionMaxNoiseFactor; } noiseEstimationParams; struct RawDFDeghostingBandParams { GainValueArray *gaussianDiffFactor; GainValueArray *laplacianDiffFactor; GainValueArray *highlightLumaMid; GainValueArray *highlightLumaSlope; GainValueArray *highlightMaskFactor; } deghostingBands[4]; struct RawDFDenoisingBandParams { GainValueArray *globalAddBackFactor; GainValueArray *fusionAddBackFactor; GainValueArray *skinAddBackFactor; GainValueArray *skyAddBackFactor; } denoisingBands[4]; } brightLightNetworkParams; } rawDFParams1x; struct RawDFParameters { BOOL useExtraNoiseFactor; float networkSwitchEITThreshold; struct RawDFNetworkParameters { BOOL useArtifactCorrectionNetwork; struct RawDFNoiseEstimationParameters { GainValueArray *lumaPowerDenom; GainValueArray *srLumaMaxNoiseFactor; GainValueArray *slLumaMaxNoiseFactor; GainValueArray *srGlobalNoiseFactor; GainValueArray *slGlobalNoiseFactor; GainValueArray *artifactCorrectionlNoiseFactor; GainValueArray *lscNoiseFactor; GainValueArray *fusionMaxNoiseFactor; } noiseEstimationParams; struct RawDFDeghostingBandParams { GainValueArray *gaussianDiffFactor; GainValueArray *laplacianDiffFactor; GainValueArray *highlightLumaMid; GainValueArray *highlightLumaSlope; GainValueArray *highlightMaskFactor; } deghostingBands[4]; struct RawDFDenoisingBandParams { GainValueArray *globalAddBackFactor; GainValueArray *fusionAddBackFactor; GainValueArray *skinAddBackFactor; GainValueArray *skyAddBackFactor; } denoisingBands[4]; } lowLightNetworkParams; struct RawDFNetworkParameters { BOOL useArtifactCorrectionNetwork; struct RawDFNoiseEstimationParameters { GainValueArray *lumaPowerDenom; GainValueArray *srLumaMaxNoiseFactor; GainValueArray *slLumaMaxNoiseFactor; GainValueArray *srGlobalNoiseFactor; GainValueArray *slGlobalNoiseFactor; GainValueArray *artifactCorrectionlNoiseFactor; GainValueArray *lscNoiseFactor; GainValueArray *fusionMaxNoiseFactor; } noiseEstimationParams; struct RawDFDeghostingBandParams { GainValueArray *gaussianDiffFactor; GainValueArray *laplacianDiffFactor; GainValueArray *highlightLumaMid; GainValueArray *highlightLumaSlope; GainValueArray *highlightMaskFactor; } deghostingBands[4]; struct RawDFDenoisingBandParams { GainValueArray *globalAddBackFactor; GainValueArray *fusionAddBackFactor; GainValueArray *skinAddBackFactor; GainValueArray *skyAddBackFactor; } denoisingBands[4]; } brightLightNetworkParams; } rawDFParams2x; struct QuadraDFParameters { float networkSwitchEITThreshold; struct QuadraDFNetworkParameters { struct QuadraDFNoiseEstimationParams { GainValueArray *qsrLowResGlobalNoiseFactor; GainValueArray *qsrHighResGlobalNoiseFactor; GainValueArray *qsrGlobalNoiseFactor; GainValueArray *slGlobalNoiseFactor; } noiseEstimationParams; struct QuadraDFDeghostingBandParams { GainValueArray *globalFactor; GainValueArray *gaussianDiffFactor; GainValueArray *laplacianDiffFactor; GainValueArray *noiseGhostReductionFactor; } deghostingBands[4]; } lowLightNetworkParams; struct QuadraDFNetworkParameters { struct QuadraDFNoiseEstimationParams { GainValueArray *qsrLowResGlobalNoiseFactor; GainValueArray *qsrHighResGlobalNoiseFactor; GainValueArray *qsrGlobalNoiseFactor; GainValueArray *slGlobalNoiseFactor; } noiseEstimationParams; struct QuadraDFDeghostingBandParams { GainValueArray *globalFactor; GainValueArray *gaussianDiffFactor; GainValueArray *laplacianDiffFactor; GainValueArray *noiseGhostReductionFactor; } deghostingBands[4]; } brightLightNetworkParams; } quadraDFParams; } _tuningParams;
}

+ (float)computeTotalNoiseFactorWithTotalGain:(float)a0 eit:(float)a1;
+ (float)computeTotalNoiseFactorWithTotalGain:(float)a0 eit:(float)a1 gain0:(float)a2 gain1:(float)a3;

- (void).cxx_destruct;
- (int)readPlist:(id)a0;
- (int)calculateShaderUniformsForNetworkPipeline:(SEL)a0 networkType:(int)a1 frameMeta:(int)a2 textureDimensions:(struct DeepFusionFrameMeta { BOOL x0; BOOL x1; float x2; unsigned long long x3; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x4; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x5; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x6; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x7; } *)a3 outNetworkUniforms:(struct RawDFNetworkUniforms { BOOL x0; struct RawDFNoiseUniforms { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; struct RawDFLumaMaskTuningParam { float x0; float x1; float x2; } x14; struct RawDFRawNoiseModelParameters { float x0; float x1; float x2; float x3; float x4; } x15; struct RawDFRawNoiseModelParameters { float x0; float x1; float x2; float x3; float x4; } x16; struct RawDFRawNoiseModelParameters { float x0; float x1; float x2; float x3; float x4; } x17; struct RawDFRawNoiseModelParameters { float x0; float x1; float x2; float x3; float x4; } x18; struct RawDFFusionMapQuantizationBoundaries { float x0; float x1; } x19; } x1; struct RawDFDeghostUniforms { float x0; float x1; float x2; float x3; float x4; float x5; float x6; } x2[4]; struct RawDFDenoiseUniforms { float x0; float x1; float x2; float x3; float x4; struct TileBounds { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; } x5; int x6; } x3[4]; } *)a4;
- (int)networkTypeForPipeline:(int)a0 frameMeta:(struct DeepFusionFrameMeta { BOOL x0; BOOL x1; float x2; unsigned long long x3; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x4; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x5; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x6; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x7; } *)a1;
- (int)readQuadraDFNetworkParams:(id)a0 outParams:(struct QuadraDFNetworkParameters { struct QuadraDFNoiseEstimationParams { id x0; id x1; id x2; id x3; } x0; struct QuadraDFDeghostingBandParams { id x0; id x1; id x2; id x3; } x1[4]; } *)a1;
- (int)readQuadraDFParams:(id)a0 outParams:(struct QuadraDFParameters { float x0; struct QuadraDFNetworkParameters { struct QuadraDFNoiseEstimationParams { id x0; id x1; id x2; id x3; } x0; struct QuadraDFDeghostingBandParams { id x0; id x1; id x2; id x3; } x1[4]; } x1; struct QuadraDFNetworkParameters { struct QuadraDFNoiseEstimationParams { id x0; id x1; id x2; id x3; } x0; struct QuadraDFDeghostingBandParams { id x0; id x1; id x2; id x3; } x1[4]; } x2; } *)a1;
- (int)readRawDFNetworkParams:(id)a0 outParams:(struct RawDFNetworkParameters { BOOL x0; struct RawDFNoiseEstimationParameters { id x0; id x1; id x2; id x3; id x4; id x5; id x6; id x7; } x1; struct RawDFDeghostingBandParams { id x0; id x1; id x2; id x3; id x4; } x2[4]; struct RawDFDenoisingBandParams { id x0; id x1; id x2; id x3; } x3[4]; } *)a1;
- (int)readRawDFParams:(id)a0 outParams:(struct RawDFParameters { BOOL x0; float x1; struct RawDFNetworkParameters { BOOL x0; struct RawDFNoiseEstimationParameters { id x0; id x1; id x2; id x3; id x4; id x5; id x6; id x7; } x1; struct RawDFDeghostingBandParams { id x0; id x1; id x2; id x3; id x4; } x2[4]; struct RawDFDenoisingBandParams { id x0; id x1; id x2; id x3; } x3[4]; } x2; struct RawDFNetworkParameters { BOOL x0; struct RawDFNoiseEstimationParameters { id x0; id x1; id x2; id x3; id x4; id x5; id x6; id x7; } x1; struct RawDFDeghostingBandParams { id x0; id x1; id x2; id x3; id x4; } x2[4]; struct RawDFDenoisingBandParams { id x0; id x1; id x2; id x3; } x3[4]; } x3; } *)a1;

@end
