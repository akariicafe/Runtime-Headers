@class FigMetalContext;
@protocol MTLComputePipelineState, SidecarWriter;

@interface GreenGhostCommon : NSObject {
    FigMetalContext *_metal;
    id<MTLComputePipelineState> _pipelineStates[13];
}

@property (weak, nonatomic) id<SidecarWriter> sidecarWriter;

- (id)initWithMetalContext:(id)a0;
- (void).cxx_destruct;
- (int)blobDetection:(id)a0 output:(id)a1 params:(struct BlobTuning { float x0; })a2;
- (int)boxFilter:(id)a0 withRadius:(unsigned int)a1 output:(id)a2;
- (int)brightnessDetectionInput:(id)a0 output:(id)a1 params:(struct BrightnessTuning { float x0; float x1; float x2; })a2 processingROIInfo:(struct ProcessingROIInfo { float x0; } *)a3;
- (int)combineBrightnessMask:(id)a0 blobMask:(id)a1 greenMask:(id)a2 output:(id)a3;
- (int)compileDilateVerticalShaders;
- (int)compileShaders;
- (int)detectionWithLuma:(id)a0 croppedLuma:(id)a1 chroma:(id)a2 outputMask:(id)a3 params:(struct DetectionTuning { struct BrightnessTuning { float x0; float x1; float x2; } x0; struct BlobTuning { float x0; } x1; struct GreenTuning { float x0; float x1; float x2; } x2; })a4 processingROIInfo:(struct ProcessingROIInfo { float x0; } *)a5;
- (int)dilateTexture:(id)a0 withNormalizedRadius:(float)a1 output:(id)a2;
- (int)dilateTexture:(id)a0 withNormalizedRadius:(float)a1 withThreshold:(id)a2 subtractTexture:(id)a3 output:(id)a4;
- (int)downscaleInput:(id)a0 output:(id)a1;
- (int)erodeTexture:(id)a0 withNormalizedRadius:(float)a1 output:(id)a2;
- (int)extractFaceBodyBoundariesFromFaceLandMarks:(id)a0 ev0FrameMetadata:(SEL)a1 imgSize:(id)a2 faceBoundaryPaddingRatio:(const struct frameMetadata { int x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; long long x5; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; int x8; BOOL x9; struct ltmCurves { union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x0; union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x1; struct { unsigned short x0; unsigned short x1[0]; } x2; unsigned short x3[257]; struct { unsigned short x0; unsigned short x1[0]; } x4; unsigned short x5[257]; float x6; float x7[65]; BOOL x8; } x10; struct { void /* unknown type, empty encoding */ x0[3]; } x11; BOOL x12; BOOL x13; int x14; struct FaceDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; unsigned short x2; unsigned short x3; } x15[10]; int x16; struct BodyDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; } x17[10]; BOOL x18; struct LocalHistogramClippingDataGeneric { unsigned short x0; unsigned int x1; struct *x2; } x19; float x20; BOOL x21; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x22; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x23; BOOL x24; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x25; } *)a3 bodyBoundaryPaddingRatio:(struct CGSize { double x0; double x1; })a4 output:(struct FaceBodyBoundaries { unsigned int x0; void /* unknown type, empty encoding */ x1[10]; unsigned int x2; void /* unknown type, empty encoding */ x3[10]; } *)a5;
- (id)functionNameForProgram:(int)a0;
- (int)greenDetectionLuma:(id)a0 chroma:(id)a1 output:(id)a2 params:(struct GreenTuning { float x0; float x1; float x2; })a3 processingROIInfo:(struct ProcessingROIInfo { float x0; } *)a4;

@end
