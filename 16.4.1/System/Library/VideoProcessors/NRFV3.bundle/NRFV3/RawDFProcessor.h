@class NSDictionary, CMIDraftDemosaicStage, RawDFProxyStage, RawDFFlickerDetectorStage, FigMetalContext, NRFProgressiveBracketingParameters, NSString, NRFConfig, RawDFPowerBlurStage, RawDFZoomStage, RawDFColorMatchStage, NSMutableDictionary, RawDFFrames, NRFDeepFusionOutput, MotionDetection, LSCGainsPlist, RawDFSyntheticReferenceStage, RegWarpPP, RawDFDownsampleStage, RawDFLumaSharpenStage, CMIDemosaicStage, RawDFPostDemosaicStage, GainMapStage, FigWiredMemory, FigMetalAllocatorBackend, CMIWarpStage, RawDFDenoiseFusePipeline, NRFOutput, GrayGhostDetection, CMIExternalMemoryResource, RawDFInferenceGen, NRFPlist;
@protocol IBPSemanticStyleProperties, MTLBuffer, MTLTexture, MTLCommandQueue, NRFProcessorDelegate;

@interface RawDFProcessor : NSObject <SidecarWriter, NRFSubProcessor> {
    BOOL _allocatorSetupComplete;
    struct { unsigned long long sharedMetalBufferSizeRequested; unsigned long long sharedRegWarpBufferSizeRequested; unsigned long long width; unsigned long long height; unsigned int pixelFormat; unsigned long long regwarpInputWidth; unsigned long long regwarpInputHeight; } _memoryRequirements;
    BOOL _regwarpHasBeenSetup;
    id<MTLBuffer> _sharedMetalBuffer;
    BOOL _usingExternalSharedMetalBuffer;
    FigWiredMemory *_sharedRegWarpBuffer;
    RawDFDenoiseFusePipeline *_denoiseFusePipeline;
    BOOL _processedSIFRandRefEV0;
    int _nRegisteredFrames;
    struct FusionConfiguration { struct { void /* unknown type, empty encoding */ columns[3]; } xforms3x3[5]; BOOL preWarpEnabled; struct ColorSpaceConversionParameters { struct { void /* unknown type, empty encoding */ columns[3]; } cscMatrixFwd; struct { void /* unknown type, empty encoding */ columns[3]; } cscMatrix; struct { void /* unknown type, empty encoding */ columns[3]; } colorCorrectionMatrix; struct TransferFunctionParameters { float linearScale; float linearThreshold; float nonLinearScale; float nonLinearBias; float nonLinearPower; } transferFunctionFwd; struct TransferFunctionParameters { float linearScale; float linearThreshold; float nonLinearScale; float nonLinearBias; float nonLinearPower; } transferFunctionInv; float finalScaleFwd; float finalScale; float chromaBias; BOOL outputToLinearYCbCr; BOOL clampNegativesToZero; BOOL applyColorCorrection; BOOL useGpuCSC; } colorSpaceConversionParameters[5]; int frameCount; int ltcFrameIndex; int evm; int ev0; int evp; int fusionRef; BOOL isToneMapped; BOOL doGTCCorrection; BOOL doRec709Correction; BOOL doHighlightRecovery; int hdrFusionMode; BOOL useCorrectedLumaForNoise; BOOL isStationary; BOOL denseForAll; } _fusionConf;
    BOOL _requestTuningParams;
    NRFPlist *_nrfPlist;
    struct __CVBuffer { } *_regWarpInput;
    id<MTLTexture> _regWarpInputTex;
    struct { unsigned int numThreads; unsigned int numHorizontalBlocks; unsigned int numVerticalBlocks; unsigned int nccSearchRadius; unsigned int nccPatchRadius; unsigned int maxSearchRadius; unsigned int internalBorderSize; float ransacAdaptiveThresholdFactor; float ransacMinMatchingScoreAccepted; unsigned int maxNumberOfPyramidLevels; BOOL skipInitialDownsample; BOOL performHistEq; } _registrationPipelineRWPPConfig;
    RegWarpPP *_registrationPipelineRWPP;
    BOOL _regWarpApplyGDC;
    FigMetalContext *_metal;
    int _compressionLevel;
    unsigned int _fusionOptions;
    LSCGainsPlist *_lscGainsPlist;
    BOOL _saveInputFramesToDisk;
    NSMutableDictionary *_sidecar;
    NRFConfig *_nrfConfig;
    NRFDeepFusionOutput *_deepFusionOutput;
    float _outputGainMapHeadroom;
    BOOL _processedSyntheticReference;
    BOOL _deepFusionSyntheticReferenceReferenceIsSIFR;
    id<MTLTexture> _lscGainsTex;
    float _maxCornerScore;
    float _minGyroScore;
    double _maxFocusScore;
    float _maxBlinkDetectScore;
    struct { void /* unknown type, empty encoding */ columns[3]; } _evmHomographyOriginalBeforeZoom;
    int _addFrameCount;
    RawDFFrames *_inputFrames;
    CMIDemosaicStage *_demosaicStage;
    CMIDraftDemosaicStage *_draftDemosaicStage;
    CMIWarpStage *_warpStage;
    MotionDetection *_motionDetection;
    GrayGhostDetection *_grayGhostDetection;
    RawDFFlickerDetectorStage *_flickerDetection;
    GainMapStage *_gainMapStage;
    RawDFPowerBlurStage *_rawDFPowerBlurStage;
    RawDFLumaSharpenStage *_rawDFLumaSharpenStage;
    RawDFZoomStage *_rawDFZoomStage;
    RawDFSyntheticReferenceStage *_rawDFSyntheticReferenceStage;
    RawDFProxyStage *_rawDFProxyStage;
    RawDFDownsampleStage *_rawDFDownsampleStage;
    RawDFColorMatchStage *_rawDFColorMatchStage;
    RawDFInferenceGen *_rawDFInferenceGen;
    RawDFPostDemosaicStage *_rawDFPostDemosaicStage;
    BOOL _isShaderHarvesting;
}

@property (nonatomic) unsigned int processingType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) FigMetalAllocatorBackend *allocatorBackend;
@property (retain, nonatomic) FigWiredMemory *sharedRegWarpBuffer;
@property (nonatomic) struct __IOSurface { } *regwarpInputSurface;
@property (retain, nonatomic) NSMutableDictionary *tuningParams;
@property (retain, nonatomic) NSMutableDictionary *tuningParamsPlist;
@property (retain, nonatomic) NSMutableDictionary *defringingTuningByPortType;
@property (nonatomic) int referenceFrameIndex;
@property (nonatomic) BOOL doRedFaceFix;
@property (nonatomic) BOOL enableGreenGhostMitigation;
@property (nonatomic) BOOL referenceFrameHasEVMinus;
@property (nonatomic) BOOL srlEnabled;
@property (nonatomic) BOOL skipDenoising;
@property (retain, nonatomic) id<IBPSemanticStyleProperties> semanticStyleProperties;
@property (retain, nonatomic) NRFOutput *output;
@property (weak, nonatomic) id<NRFProcessorDelegate> delegate;
@property (readonly, nonatomic) int cntBracketSampleBuffers;
@property (readonly, nonatomic) int batchCount;
@property (nonatomic) BOOL learnedNREnabled;
@property (nonatomic) BOOL stfAllowed;
@property (nonatomic) int fusionMode;
@property (retain, nonatomic) NRFProgressiveBracketingParameters *progressiveBracketingParameters;
@property (nonatomic) int progressiveBatchSize;
@property (nonatomic) int deepFusionProcessingMode;
@property (retain, nonatomic) id<MTLCommandQueue> metalCommandQueue;
@property (readonly, nonatomic) BOOL supportsExternalMemoryResource;
@property (retain, nonatomic) CMIExternalMemoryResource *externalMemoryResource;
@property (retain, nonatomic) NSDictionary *tuningParameters;
@property (retain, nonatomic) NSDictionary *cameraInfoByPortType;

- (int)prewarm;
- (void)applyOverrides;
- (int)prewarmWithTuningParameters:(id)a0;
- (int)resetState;
- (void)finishScheduling;
- (int)_registerImages:(BOOL)a0;
- (int)setup;
- (int)finishProcessing;
- (int)prepareToProcess:(unsigned int)a0;
- (void)dealloc;
- (int)purgeResources;
- (int)process;
- (id)init;
- (id)initWithCommandQueue:(id)a0;
- (void)addToSidecar:(id)a0 forKey:(id)a1;
- (void).cxx_destruct;
- (int)addFrame:(struct opaqueCMSampleBuffer { } *)a0;
- (int)prepareToProcess:(unsigned int)a0 prepareDescriptor:(id)a1;
- (void)setLinearOutputMetadata:(id)a0;
- (void)EndKTraceEventForProcess:(id)a0;
- (void)StartKTraceEventForAddFrame:(struct frameProperties_t { struct frameMetadata { int x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; long long x5; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; int x8; BOOL x9; struct ltmCurves { union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x0; union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x1; struct { unsigned short x0; unsigned short x1[0]; } x2; unsigned short x3[257]; struct { unsigned short x0; unsigned short x1[0]; } x4; unsigned short x5[257]; float x6; float x7[65]; BOOL x8; } x10; struct { void /* unknown type, empty encoding */ x0[3]; } x11; BOOL x12; BOOL x13; int x14; struct FaceDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; unsigned short x2; unsigned short x3; } x15[10]; int x16; struct BodyDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; } x17[10]; BOOL x18; struct LocalHistogramClippingDataGeneric { unsigned short x0; unsigned int x1; struct *x2; } x19; float x20; BOOL x21; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x22; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x23; BOOL x24; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x25; } x0; BOOL x1; BOOL x2; BOOL x3; struct { void /* unknown type, empty encoding */ x0[3]; } x4; int x5; struct ColorSpaceConversionParameters { struct { void /* unknown type, empty encoding */ x0[3]; } x0; struct { void /* unknown type, empty encoding */ x0[3]; } x1; struct { void /* unknown type, empty encoding */ x0[3]; } x2; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x3; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x4; float x5; float x6; float x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; } x6; int x7; BOOL x8; float x9; double x10; float x11; BOOL x12; float x13; BOOL x14; float x15; BOOL x16; float x17; BOOL x18; BOOL x19; BOOL x20; } *)a0 timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
- (void)EndKTraceEventForAddFrame:(struct frameProperties_t { struct frameMetadata { int x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; long long x5; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; int x8; BOOL x9; struct ltmCurves { union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x0; union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x1; struct { unsigned short x0; unsigned short x1[0]; } x2; unsigned short x3[257]; struct { unsigned short x0; unsigned short x1[0]; } x4; unsigned short x5[257]; float x6; float x7[65]; BOOL x8; } x10; struct { void /* unknown type, empty encoding */ x0[3]; } x11; BOOL x12; BOOL x13; int x14; struct FaceDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; unsigned short x2; unsigned short x3; } x15[10]; int x16; struct BodyDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; } x17[10]; BOOL x18; struct LocalHistogramClippingDataGeneric { unsigned short x0; unsigned int x1; struct *x2; } x19; float x20; BOOL x21; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x22; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x23; BOOL x24; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x25; } x0; BOOL x1; BOOL x2; BOOL x3; struct { void /* unknown type, empty encoding */ x0[3]; } x4; int x5; struct ColorSpaceConversionParameters { struct { void /* unknown type, empty encoding */ x0[3]; } x0; struct { void /* unknown type, empty encoding */ x0[3]; } x1; struct { void /* unknown type, empty encoding */ x0[3]; } x2; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x3; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x4; float x5; float x6; float x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; } x6; int x7; BOOL x8; float x9; double x10; float x11; BOOL x12; float x13; BOOL x14; float x15; BOOL x16; float x17; BOOL x18; BOOL x19; BOOL x20; } *)a0 timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
- (void)StartKTraceEventForProcess:(id)a0;
- (int)getRawDFFrameTypeForInputFrame:(id)a0;
- (int)_allocateAndFillLumaChromaImage:(id)a0 withSourceFrame:(id)a1 withPyramidLevel:(unsigned long long)a2 withAllocatorLabel:(id)a3;
- (int)_allocateRegWarpPPWithWidth:(unsigned long long)a0 height:(unsigned long long)a1 pixelFormat:(unsigned int)a2;
- (int)_doDeepFusionSytheticRefererenceAndProxy;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_downscaleRoiForRegistration:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (int)_generateSyntheticRefererence:(id *)a0 outputNoiseDivisor:(id)a1 withDetectorsOutput:(const struct { int x0; float x1; float x2; BOOL x3; BOOL x4; BOOL x5; struct { } x6; } *)a2;
- (BOOL)_isGainMapSupported;
- (BOOL)_isSemanticStylesSupported;
- (int)_multiFrameProcessing:(BOOL)a0;
- (int)_populateDeepFusionMetadata:(id)a0 hasEVM:(BOOL)a1;
- (void)_prepareOutputMetadata:(int)a0;
- (int)_preprocessFrame:(id)a0;
- (int)_preprocessReferenceFrames:(BOOL)a0;
- (int)_processInferenceImage:(struct __CVBuffer { } *)a0 sourceFrameLumaChromaImage:(id)a1 sourceFrameProperties:(struct frameProperties_t { struct frameMetadata { int x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; long long x5; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; int x8; BOOL x9; struct ltmCurves { union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x0; union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x1; struct { unsigned short x0; unsigned short x1[0]; } x2; unsigned short x3[257]; struct { unsigned short x0; unsigned short x1[0]; } x4; unsigned short x5[257]; float x6; float x7[65]; BOOL x8; } x10; struct { void /* unknown type, empty encoding */ x0[3]; } x11; BOOL x12; BOOL x13; int x14; struct FaceDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; unsigned short x2; unsigned short x3; } x15[10]; int x16; struct BodyDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; } x17[10]; BOOL x18; struct LocalHistogramClippingDataGeneric { unsigned short x0; unsigned int x1; struct *x2; } x19; float x20; BOOL x21; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x22; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x23; BOOL x24; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x25; } x0; BOOL x1; BOOL x2; BOOL x3; struct { void /* unknown type, empty encoding */ x0[3]; } x4; int x5; struct ColorSpaceConversionParameters { struct { void /* unknown type, empty encoding */ x0[3]; } x0; struct { void /* unknown type, empty encoding */ x0[3]; } x1; struct { void /* unknown type, empty encoding */ x0[3]; } x2; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x3; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x4; float x5; float x6; float x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; } x6; int x7; BOOL x8; float x9; double x10; float x11; BOOL x12; float x13; BOOL x14; float x15; BOOL x16; float x17; BOOL x18; BOOL x19; BOOL x20; } *)a2 ltcFrameProperties:(struct frameProperties_t { struct frameMetadata { int x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; long long x5; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; int x8; BOOL x9; struct ltmCurves { union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x0; union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x1; struct { unsigned short x0; unsigned short x1[0]; } x2; unsigned short x3[257]; struct { unsigned short x0; unsigned short x1[0]; } x4; unsigned short x5[257]; float x6; float x7[65]; BOOL x8; } x10; struct { void /* unknown type, empty encoding */ x0[3]; } x11; BOOL x12; BOOL x13; int x14; struct FaceDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; unsigned short x2; unsigned short x3; } x15[10]; int x16; struct BodyDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; } x17[10]; BOOL x18; struct LocalHistogramClippingDataGeneric { unsigned short x0; unsigned int x1; struct *x2; } x19; float x20; BOOL x21; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x22; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x23; BOOL x24; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x25; } x0; BOOL x1; BOOL x2; BOOL x3; struct { void /* unknown type, empty encoding */ x0[3]; } x4; int x5; struct ColorSpaceConversionParameters { struct { void /* unknown type, empty encoding */ x0[3]; } x0; struct { void /* unknown type, empty encoding */ x0[3]; } x1; struct { void /* unknown type, empty encoding */ x0[3]; } x2; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x3; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x4; float x5; float x6; float x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; } x6; int x7; BOOL x8; float x9; double x10; float x11; BOOL x12; float x13; BOOL x14; float x15; BOOL x16; float x17; BOOL x18; BOOL x19; BOOL x20; } *)a3 gtcFrameProperties:(struct frameProperties_t { struct frameMetadata { int x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; long long x5; struct exposureParameters { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; BOOL x19; BOOL x20; BOOL x21; float x22; BOOL x23; float x24; float x25; float x26; int x27; float x28; } x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; int x8; BOOL x9; struct ltmCurves { union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x0; union { unsigned short x0; char x1[18242]; char x2[110616]; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x3; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11[0]; } x4; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13[0]; } x5; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12[0]; } x6; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; short x11; struct { struct { short x0; short x1; short x2; } x0; struct { short x0; short x1; short x2; } x1; struct { short x0; short x1; short x2; } x2; struct { short x0; short x1; short x2; } x3; struct { short x0; short x1; short x2; } x4; struct { short x0; short x1; short x2; } x5; struct { short x0; short x1; short x2; } x6; struct { short x0; short x1; short x2; } x7; struct { short x0; short x1; short x2; } x8; } x12[0]; } x7; } x1; struct { unsigned short x0; unsigned short x1[0]; } x2; unsigned short x3[257]; struct { unsigned short x0; unsigned short x1[0]; } x4; unsigned short x5[257]; float x6; float x7[65]; BOOL x8; } x10; struct { void /* unknown type, empty encoding */ x0[3]; } x11; BOOL x12; BOOL x13; int x14; struct FaceDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; unsigned short x2; unsigned short x3; } x15[10]; int x16; struct BodyDetectionBuffer { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned short x1; } x17[10]; BOOL x18; struct LocalHistogramClippingDataGeneric { unsigned short x0; unsigned int x1; struct *x2; } x19; float x20; BOOL x21; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x22; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x23; BOOL x24; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x25; } x0; BOOL x1; BOOL x2; BOOL x3; struct { void /* unknown type, empty encoding */ x0[3]; } x4; int x5; struct ColorSpaceConversionParameters { struct { void /* unknown type, empty encoding */ x0[3]; } x0; struct { void /* unknown type, empty encoding */ x0[3]; } x1; struct { void /* unknown type, empty encoding */ x0[3]; } x2; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x3; struct TransferFunctionParameters { float x0; float x1; float x2; float x3; float x4; } x4; float x5; float x6; float x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; } x6; int x7; BOOL x8; float x9; double x10; float x11; BOOL x12; float x13; BOOL x14; float x15; BOOL x16; float x17; BOOL x18; BOOL x19; BOOL x20; } *)a4 originalWidth:(unsigned long long)a5 originalHeight:(unsigned long long)a6;
- (int)_processInputFrame:(id)a0;
- (int)_processSIFRandRefEV0IfPossible:(int)a0;
- (int)_setupFusionConfig;
- (int)_verifyConsistentMetadataWithFrame:(id)a0;
- (int)bindResourcesForProcessingType:(unsigned int)a0 prepareDescriptor:(id)a1;
- (unsigned long long)calculateBackingBufferSizeForDesc:(id)a0 nrfConfig:(id)a1 metal:(id)a2;
- (int)determineWorkingBufferRequirementsToProcess:(unsigned int)a0 prepareDescriptor:(id)a1 nrfConfig:(id)a2 denoiseFusePipelineSize:(unsigned long long *)a3 rwppSize:(unsigned long long *)a4 rwppInputWidth:(unsigned long long *)a5 rwppInputHeight:(unsigned long long *)a6;
- (int)determineWorkingBufferRequirementsWithPrepareDescriptorByProcessingType:(id)a0 nrfConfig:(id)a1 memoryAllocationInfo:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned int x4; unsigned long long x5; unsigned long long x6; } *)a2;
- (id)getTuningModeForCurrentProcessingMode;
- (int)prepareTuning:(id)a0;
- (int)resetInternalState;
- (int)setupWithOptions:(id)a0 nrfConfig:(id)a1;
- (BOOL)supportsInputPixelFormat:(unsigned int)a0;

@end
