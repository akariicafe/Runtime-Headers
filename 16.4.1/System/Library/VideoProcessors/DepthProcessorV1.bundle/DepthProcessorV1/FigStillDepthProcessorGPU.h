@class BilateralSolverGPU, SLICMetal, NSDictionary, DistanceTransformGpu, NSObject, SuperPixelHoleFillMetal, DepthProcUtilitiesMetal, FFCFiltersMetal, FigMetalContext, NSString, FaceLandmarkProcessing, BilateralGridHash, BodyProbability, NSArray, slicMetalParameters;
@protocol OS_dispatch_queue, MTLTexture;

@interface FigStillDepthProcessorGPU : NSObject <DepthProcessor> {
    struct { struct { unsigned long long width; unsigned long long height; float confidenceUpdateValue; float minQuality; float confidenceMinVal; float maskShrinkRatio; float minRatioFaceFill; } faceLandmarkProcessingParameters; struct BodyProbabilityParameters { unsigned long long width; unsigned long long height; unsigned long long segmentation_width; unsigned long long segmentation_height; float confidence_threshold; float probability_falloff_sigma; float max_probability; int min_required_faces_for_segmentation; } bodyProbabilityParameters; struct { unsigned long long width; unsigned long long height; } distanceTransformParameters; struct { struct { struct { unsigned int doBrightnessCorrection; float h; float k; float thres; } brightnessCorrectionParams; struct { float colorSigma; } similarityParams; float initialLocalWeight; float maxLocalWeightThres; float fractionValidThreshold; float lambda; float minDataTermWeight; } holeFill; struct { float sigmaColor; float sigmaDepth; float sigmaPixelColorDiff; float minConfVal; float minBaseConfVal; } confidence; } superPixelHoleFillParameters; int slicSuperPixelsSize; int slicMaxIters; float slicSpatialBias; struct { float maxDistance; float furthestDisparity; float confidence; } setFarDistance; float confidenceSeedValue; float confidenceFalloffMaxDist; float confidenceFalloffSigma; int bilateralSolverSigmaSpace; int bilateralSolverSigmaLumaRange; int bilateralSolverSigmaChromaRange; int bilateralSolverMaxHashTableSize; float bilateralSolverLambda; int bilateralSolverPCGMaxIters; float disparityQualityThreshold; } _configuration;
    FigMetalContext *_metalContext;
    struct __CVBuffer { } *_yuvInputBuffer;
    id<MTLTexture> _yuvInputLumaTexture;
    id<MTLTexture> _yuvInputChromaTexture;
    struct __CVBuffer { } *_disparityInputBuffer;
    id<MTLTexture> _disparityInputTexture;
    struct __CVBuffer { } *_disparityOutputBuffer;
    id<MTLTexture> _disparityOutputTexture;
    struct __CVBuffer { } *_rgbSegmentationMaskInputBuffer;
    unsigned int _width;
    unsigned int _height;
    NSDictionary *_metadataDictionary;
    struct __CVBuffer { } *_preprocessedDisparity;
    id<MTLTexture> _preprocessedDisparityTexture;
    FaceLandmarkProcessing *_faceLandmarkProcessing;
    int _orientation;
    struct __CVBuffer { } *_faceLandmarkDisparity;
    id<MTLTexture> _faceLandmarkDisparityTexture;
    BodyProbability *_bodyProbabilityProcessing;
    struct __CVBuffer { } *_bodyProbabilityMap;
    id<MTLTexture> _bodyProbabilityMapTexture;
    id<MTLTexture> _validForegroundMaskTexture;
    DistanceTransformGpu *_distanceTransformProcessing;
    id<MTLTexture> _distanceTransformDisparityTexture;
    id<MTLTexture> _distanceTransformMapTexture;
    struct __CVBuffer { } *_confidenceMap;
    id<MTLTexture> _confidenceMapTexture;
    id<MTLTexture> _invalidConfidenceMaskTexture;
    id<MTLTexture> _imerodeConfidenceMapTexture;
    BilateralGridHash *_bilateralGridProcessing;
    BilateralSolverGPU *_bilateralSolverGPUProcessing;
    id<MTLTexture> _bilateralInvZBufferInTexture;
    id<MTLTexture> _bilateralConfMapFloat32Texture;
    id<MTLTexture> _bilateralInvZBufferOutTexture;
    id<MTLTexture> _bilateralDisparityTexture;
    SLICMetal *_slicMetal;
    slicMetalParameters *_slicMetalParameters;
    unsigned int _slicMaxNumSuperPixels;
    id<MTLTexture> _slicRgbaTexture;
    id<MTLTexture> _slicSpixelCentersIdAndNPixelsTexture;
    id<MTLTexture> _slicSpixelColorTexture;
    id<MTLTexture> _slicIdxImgTexture;
    SuperPixelHoleFillMetal *_superPixelHoleFillMetal;
    id<MTLTexture> _superPixelHoleFillDisparityTexture;
    id<MTLTexture> _superPixelHoleFillConfidenceTexture;
    FFCFiltersMetal *_FFCFilters;
    DepthProcUtilitiesMetal *_DepthProcUtilMetal;
    BOOL _submodulesInitialized;
    BOOL _resourcesAllocated;
}

@property (retain, nonatomic) NSArray *faceLandmarksArray;
@property (readonly, nonatomic) float disparityQualityScore;
@property (readonly, nonatomic) BOOL disparityQualityIsHigh;
@property (readonly, nonatomic) int figDepthQuality;
@property (retain, nonatomic) NSDictionary *cameraInfoByPortType;
@property (nonatomic) BOOL streamingGDRFilterEnabled;
@property (nonatomic) BOOL streamingSMPFilterEnabled;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *workerQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)releaseResources;
- (int)superPixelHoleFilling;
- (int)prewarmWithTuningParameters:(id)a0;
- (int)estimateDisparityQualityScore;
- (int)setTuningParameters:(id)a0;
- (id)initWithParameters:(struct depthProcessorParameters { unsigned long long x0; unsigned long long x1; unsigned long long x2; } *)a0 commandQueue:(id)a1;
- (BOOL)allocateResources;
- (int)processDisparityPipeline;
- (int)processDepthBuffer:(struct __CVBuffer { } *)a0 yuvBuffer:(struct __CVBuffer { } *)a1 rgbSegmentationMaskBuffer:(struct __CVBuffer { } *)a2 parametersDictionary:(id)a3 outputDisparityBuffer:(struct __CVBuffer { } *)a4;
- (int)fastBilateralSolver;
- (int)bodyProbability;
- (id)detectLandmarksUsingInputPixelBuffer;
- (void)dealloc;
- (int)confidenceFalloff;
- (int)fastBilateralSolver_PrepareHashTable;
- (int)erosionOnGpu;
- (int)faceLandmarkProcessing;
- (int)sanityCheckParameters;
- (id)init;
- (int)initSubmodules;
- (int)processDepthBuffer:(struct __CVBuffer { } *)a0 yuvBuffer:(struct __CVBuffer { } *)a1 personSegmentationMaskBuffer:(struct __CVBuffer { } *)a2 instanceSegmentationMaskBufferArray:(id)a3 instanceSegmentationConfidences:(id)a4 parametersDictionary:(id)a5 outputDisparityBuffer:(struct __CVBuffer { } *)a6;
- (id)createTextureOfSize:(struct CGSize { double x0; double x1; })a0 withFormat:(unsigned long long)a1;
- (int)setFarDistanceOnGpu;
- (int)initF16CVPixelBuffer:(struct __CVBuffer { } *)a0 withValue:(void /* unknown type, blank encoding */)a1;
- (int)processDepthBuffer:(struct __CVBuffer { } *)a0 yuvBuffer:(struct __CVBuffer { } *)a1 parametersDictionary:(id)a2 outputDisparityBuffer:(struct __CVBuffer { } *)a3;
- (void).cxx_destruct;

@end
