@class SOSStatus, NSString, NSURL, UIImage, SABundleManagerApp, NSNumber;

@interface SOSUtilities : NSObject

@property (class, nonatomic) BOOL hasMultiPressResetLogicRun;
@property (class, readonly, nonatomic) NSString *phoneTriggerAnimationFooterDescription;
@property (class, readonly, nonatomic) NSString *watchTriggerAnimationFooterDescription;
@property (class, readonly, nonatomic) NSString *callWithSideButtonTitleDescription;
@property (class, readonly, nonatomic) NSString *callWithSideButtonFooterDescription;
@property (class, readonly, nonatomic) NSString *emergencyContactsSectionDescription;
@property (class, readonly, nonatomic) NSString *emergencyContactsEditDescription;
@property (class, readonly, nonatomic) NSString *emergencyContactsFooterDescription;
@property (class, readonly, nonatomic) NSString *emergencyContactsFooterLinkTitle;
@property (class, readonly, nonatomic) NSString *autoCallTitleDescription;
@property (class, readonly, nonatomic) NSString *autoCallFooterDescription;
@property (class, readonly, nonatomic) NSString *callWithHoldTitleDescription;
@property (class, readonly, nonatomic) NSString *callWithHoldFooterDescription;
@property (class, readonly, nonatomic) NSString *callWithPressesTitleDescription;
@property (class, readonly, nonatomic) NSString *callWithPressesFooterDescription;
@property (class, readonly, nonatomic) NSString *pressSelectionGroupTitleDescription;
@property (class, readonly, nonatomic) NSString *threePressesSelectionTitleDescription;
@property (class, readonly, nonatomic) NSString *fivePressesSelectionTitleDescription;
@property (class, readonly, nonatomic) NSString *countdownSoundTitleDescription;
@property (class, readonly, nonatomic) NSString *countdownSoundFooterDescription;
@property (class, readonly, nonatomic) NSString *automaticDialingSectionDescription;
@property (class, readonly, nonatomic) NSString *holdSideButtonTitleDescription;
@property (class, readonly, nonatomic) NSString *holdSideButtonFooterDescription;
@property (class, readonly, nonatomic) NSString *accidentalCallNotificationTitle;
@property (class, readonly, nonatomic) NSString *accidentalCallNotificationBody;
@property (class, readonly, nonatomic) NSString *accidentalCallFeedbackAssistantLegalText;
@property (class, nonatomic, getter=getSettingsResetFollowUpState) long long settingsResetFollowUpState;
@property (class, readonly, nonatomic) NSString *settingsResetFollowUpTitle;
@property (class, readonly, nonatomic) NSString *settingsResetFollowUpBody;
@property (class, readonly, nonatomic) NSString *settingsResetFollowUpRedirectActionTitle;
@property (class, readonly, nonatomic) NSString *settingsResetFollowUpClearActionTitle;
@property (class, readonly, nonatomic) NSString *fallDetectionTitleDescription;
@property (class, readonly, nonatomic) NSString *fallDetectionAlwaysOnTitleDescription;
@property (class, readonly, nonatomic) NSString *fallDetectionOnlyDuringWorkoutsTitleDescription;
@property (class, readonly, nonatomic) NSString *fallDetectionFooterDescription;
@property (class, readonly, nonatomic) NSString *crashDetectionTitleDescription;
@property (class, readonly, nonatomic) NSString *crashDetectionSwitchDescription;
@property (class, readonly, nonatomic) NSString *crashDetectionWatchFooterDescription;
@property (class, readonly, nonatomic) NSString *crashDetectionFooterLinkDescription;
@property (class, readonly, nonatomic) NSURL *crashDetectionFooterLinkURL;
@property (class, readonly, nonatomic) NSString *crashDetectionWristDetectionWarningDescription;
@property (class, readonly, nonatomic) NSString *crashDetectionPhoneFooterDesription;
@property (class, readonly, nonatomic) NSString *crashDetectionPhoneWatchFooterDescription;
@property (class, readonly, nonatomic) NSString *crashDetectionThirdPartyDescription;
@property (class, readonly, nonatomic) NSString *crashDetectionThirdPartyCellTitle;
@property (class, readonly, nonatomic) NSString *crashDetectionThirdPartyNavigationTitle;
@property (class, readonly, nonatomic) NSString *crashDetectionThirdPartyAlertTitle;
@property (class, readonly, nonatomic) NSString *crashDetectionThirdPartyFooterDescription;
@property (class, readonly, nonatomic) NSString *crashDetectionThirdPartyFooterDescriptionPhone;
@property (class, readonly, nonatomic) NSString *crashDetectionThirdPartyFooterDescriptionWatch;
@property (class, readonly, nonatomic) NSString *crashDetectionThirdPartyShareDisableDescription;
@property (class, readonly, nonatomic) NSString *crashDetectionThirdPartyAppWithAccessDescription;
@property (class, readonly, nonatomic) NSString *getKappaThirdPartyDisplayNameForApp;
@property (class, readonly, nonatomic) SABundleManagerApp *getKappaThirdPartyApp;
@property (class, readonly, nonatomic) NSString *stewieGroupTitle;
@property (class, readonly, nonatomic) UIImage *stewieGroupAsset;
@property (class, readonly, nonatomic) NSString *stewieDemoCellText;
@property (class, readonly, nonatomic) NSString *stewieDemoButtonTitle;
@property (class, readonly, nonatomic) NSString *stewieFooterDescription;
@property (class, readonly, nonatomic) NSString *stewieFooterLinkTitle;
@property (class, readonly, nonatomic) BOOL isActivePairedDeviceTinker;
@property (class, nonatomic, getter=isAutomaticCallCountdownEnabled) BOOL automaticCallCountdownEnabled;
@property (class, readonly, nonatomic, getter=isCallWithSideButtonPressesEnabled) BOOL callWithSideButtonPressesEnabled;
@property (class, nonatomic, getter=isCallWithVolumeLockHoldEnabled) BOOL callWithVolumeLockHoldEnabled;
@property (class, nonatomic, getter=shouldPlayAudioDuringCountdown) BOOL playAudioDuringCountdown;
@property (class, readonly, nonatomic, getter=isMountStateTrackingEnabled) BOOL mountStateTrackingEnabled;
@property (class, readonly, nonatomic) double mountProbabilityThreshold;
@property (class, readonly, nonatomic) double clawReleaseToCallSupport;
@property (class, readonly, nonatomic) BOOL canTriggerSOSWithSideButton;
@property (class, readonly, nonatomic) long long currentSOSTriggerMechanism;
@property (class, readonly, nonatomic) long long SOSTriggerClickCount;
@property (class, readonly, nonatomic) BOOL supportsSOSWithSideButtonSelectableNumberOfClicks;
@property (class, nonatomic) BOOL longPressTriggersEmergencySOS;
@property (class, retain, nonatomic) NSNumber *newtonTriggersEmergencySOSNumber;
@property (class, nonatomic) BOOL newtonTriggersEmergencySOS;
@property (class, nonatomic) BOOL newtonTriggersEmergencySOSWorkouts;
@property (class, readonly, nonatomic) long long mostRecentlyUsedSOSTriggerMechanism;
@property (class, retain, nonatomic) SOSStatus *currentDeviceSOSStatus;
@property (class, retain, nonatomic) SOSStatus *pairedDeviceSOSStatus;
@property (class, readonly, nonatomic) SOSStatus *mostRecentSOSStatus;
@property (class, readonly, nonatomic) BOOL shouldBlockNonEmergencyCalls;
@property (class, nonatomic, getter=isAllowedToMessageSOSContacts) BOOL allowedToMessageSOSContacts;
@property (class, readonly, nonatomic) BOOL shouldSilenceSOSFlow;
@property (class, readonly, nonatomic) BOOL isKappaVisible;
@property (class, nonatomic) BOOL kappaTriggersEmergencySOS;
@property (class, readonly, nonatomic) BOOL kappaTriggersEmergencySOSTinker;
@property (class, readonly, nonatomic) BOOL isKappaUnmasked;
@property (class, readonly, nonatomic) BOOL activeDeviceSupportsMandrake;
@property (class, readonly, nonatomic) BOOL activeDeviceHasMandrake;
@property (class, nonatomic) BOOL longPressTriggersMandrake;

+ (id)activeDevice;
+ (long long)SOSResolutionForString:(id)a0;
+ (long long)defaultSOSTriggerMechanism;
+ (void)setKappaThirdPartyActive:(BOOL)a0 forApp:(id)a1 forPairedDevice:(BOOL)a2 presentConfirmationOnViewController:(id)a3 completion:(id /* block */)a4;
+ (BOOL)isStewieVisible;
+ (void)setKappaTriggersEmergencySOS:(BOOL)a0 confirmationDelegate:(id)a1 completion:(id /* block */)a2;
+ (id)_userSOSDefaults;
+ (BOOL)shouldSkipNewtonCall;
+ (long long)SOSTriggerMechanismForString:(id)a0;
+ (id)crashDetectionThirdPartyStopSharingDescriptionPhoneWithAppName:(id)a0;
+ (struct __CFBundle { } *)getKappaThirdPartyActiveAppBundle;
+ (BOOL)setShouldPlayAudioDuringCountdown:(BOOL)a0;
+ (BOOL)_potentialForAccessibilityConflict;
+ (double)getShortSOSNotificationDisplayTimestamp;
+ (void)getAssetViewForPhoneWithCompletion:(id /* block */)a0;
+ (id)getAssetViewForWatchWithCrownOrientationOnRightSide:(BOOL)a0 layoutLeftToRight:(BOOL)a1 tintColor:(id)a2;
+ (BOOL)newtonAlwaysOnRequiresConfirmationForEligibility:(unsigned long long)a0;
+ (id)sosLocationBundle;
+ (void)setCallWithSideButtonPressesEnabled:(BOOL)a0;
+ (id)thirdPartySettingsSpecifiersWithTarget:(id)a0 displayName:(id)a1 forPairedDevice:(BOOL)a2 disableAction:(SEL)a3;
+ (id)watchAssetNameWithCrownOrientationOnRightSide:(BOOL)a0 layoutLeftToRight:(BOOL)a1;
+ (BOOL)deviceHasSlot;
+ (BOOL)isKappaDetectionSupportedOnCurrentDevice;
+ (void)setNewtonTriggersEmergencySOS:(BOOL)a0 isWristDetectionEnabled:(BOOL)a1 doesNewtonRequireConfirmation:(BOOL)a2 presentConfirmationOnViewController:(id)a3 completion:(id /* block */)a4;
+ (BOOL)_synchronizeSOSPrefs;
+ (BOOL)mustAllowThreeClickTrigger;
+ (BOOL)shouldForceDisableAutoCallForClient:(id)a0;
+ (void)setCurrentSOSTriggerMechanism:(long long)a0;
+ (void)setKappaTriggersEmergencySOS:(BOOL)a0 isWristDetectionEnabled:(BOOL)a1 confirmationDelegate:(id)a2 completion:(id /* block */)a3;
+ (void)setNewtonTriggersEmergencySOS:(BOOL)a0 isWristDetectionEnabled:(BOOL)a1 newtonEligibility:(unsigned long long)a2 confirmationDelegate:(id)a3 completion:(id /* block */)a4;
+ (BOOL)shouldAllowSOSStatusReset;
+ (void)thirdPartySettingsSpecifiersForRemoteDeviceWithTarget:(id)a0 forApp:(id)a1 disableAction:(SEL)a2 withCompletion:(id /* block */)a3;
+ (void)setSOSStatus:(id)a0 withKey:(id)a1;
+ (BOOL)isSmallScreen;
+ (void)presentConfirmationOnViewController:(id)a0 title:(id)a1 message:(id)a2 cancelTitle:(id)a3 cancelHandler:(id /* block */)a4 confirmTitle:(id)a5 confirmHandler:(id /* block */)a6;
+ (BOOL)shouldShowCrashDetectionThirdPartySettingsForPairedDevice:(BOOL)a0;
+ (void)_setKappaTriggersEmergencySOS:(BOOL)a0;
+ (BOOL)_hasAccessibilityConflict;
+ (BOOL)activeDeviceSupportsNewtonWorkoutsOnly;
+ (id)phoneAssetName;
+ (BOOL)canTriggerSOSWithVolumeLockHold;
+ (id)_SOSDomainAccessor;
+ (long long)SOSSelectableTriggerMechanismCapability;
+ (BOOL)autoCallRequiresSIM;
+ (void *)_copySOSPrefsValueForKey:(struct __CFString { } *)a0;
+ (void)setShortSOSNotificationDisplayTimestamp;
+ (void)presentStewieDemoUnavailableAlertOnViewController:(id)a0 reason:(long long)a1;
+ (BOOL)hasNewtonTriggersEmergencySOSWorkoutsSetting;
+ (BOOL)activeDeviceSupportsNewton;
+ (id)_userFriendsDomainAccessor;
+ (long long)SOSProgressionForString:(id)a0;
+ (void)setCanTriggerSOSWithSideButton:(BOOL)a0 presentErrorAlertOnViewController:(id)a1 completion:(id /* block */)a2;
+ (id)thirdPartySettingsSpecifiersWithTarget:(id)a0 forApp:(id)a1 disableAction:(SEL)a2;
+ (id)crashDetectionThirdPartyBundleId;
+ (BOOL)hasEmergencyContacts;
+ (long long)SOSTriggerMechanismForClickCount:(long long)a0;
+ (void)openEmergencyContactsFooterLinkOnViewController:(id)a0;
+ (BOOL)deviceHasHomeButton;
+ (void)setNumberOfSideButtonPresses:(long long)a0;
+ (BOOL)_isInternalDevice;
+ (long long)SOSFlowStateForString:(id)a0;
+ (void)setCallWithSideButtonPresses:(BOOL)a0 presentErrorAlertOnViewController:(id)a1 completion:(id /* block */)a2;
+ (BOOL)isKappaDetectionSupportedOnActiveWatch;
+ (BOOL)isDeviceD2xOrNewer;
+ (id)fetchSOSStatusWithKey:(id)a0;
+ (void)setNewtonTriggersEmergencySOS:(BOOL)a0 newtonTriggersEmergencySOSWorkoutsOnly:(BOOL)a1;
+ (BOOL)isDeviceWatchUsePairedDevice:(BOOL)a0;
+ (void)_setSOSPrefsValue:(void *)a0 forKey:(struct __CFString { } *)a1;
+ (void)_setKappaTriggersEmergencySOSTinker:(BOOL)a0;
+ (void)setNewtonTriggersEmergencySOSWorkoutsOnly:(BOOL)a0 isWristDetectionEnabled:(BOOL)a1 newtonEligibility:(unsigned long long)a2 confirmationDelegate:(id)a3 completion:(id /* block */)a4;
+ (void)setKappaThirdPartyActiveApp:(BOOL)a0 presentConfirmationOnViewController:(id)a1 completion:(id /* block */)a2;
+ (id)crashDetectionThirdPartyStopSharingDescriptionWatchWithAppName:(id)a0;
+ (BOOL)_isCarryDevice;
+ (BOOL)hasActiveSIMForClient:(id)a0;
+ (BOOL)isIndiaSKU;
+ (BOOL)defaultToWorkoutsOnlyForEligibility:(unsigned long long)a0;
+ (void)presentStewieLearnMoreLinkOnViewController:(id)a0;
+ (BOOL)isKappaDetectionSupportedOnPhone;

@end
