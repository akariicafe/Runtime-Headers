@class AVOutputDeviceInternal;

@interface AVOutputDevice : NSObject {
    AVOutputDeviceInternal *_outputDevice;
}

@property (class, readonly) BOOL prefersRouteDescriptors;

+ (void)initialize;
+ (id)sharedLocalDevice;
+ (BOOL)canSyncController:(struct OpaqueAPSyncController { } *)a0 supportRoute:(struct __CFDictionary { } *)a1;
+ (id)outputDeviceWithRouteDescriptor:(struct __CFDictionary { } *)a0 routeDiscoverer:(struct OpaqueFigRouteDiscoverer { } *)a1 syncController:(struct OpaqueAPSyncController { } *)a2;
+ (void)localDeviceDidChange;
+ (void)localDeviceWithCompletion:(id /* block */)a0;
+ (id)outputDeviceWithFigEndpoint:(struct OpaqueFigEndpoint { } *)a0;
+ (id)outputDeviceWithFigEndpoint:(struct OpaqueFigEndpoint { } *)a0 routingContextFactory:(id)a1;
+ (id)outputDeviceWithFigEndpoint:(struct OpaqueFigEndpoint { } *)a0 volumeController:(struct OpaqueFigVolumeControllerState { } *)a1;
+ (id)outputDeviceWithRouteDescriptor:(struct __CFDictionary { } *)a0;
+ (id)outputDeviceWithRouteDescriptor:(struct __CFDictionary { } *)a0 routeDiscoverer:(struct OpaqueFigRouteDiscoverer { } *)a1;
+ (id)outputDeviceWithRouteDescriptor:(struct __CFDictionary { } *)a0 routingContextFactory:(id)a1;
+ (id)outputDeviceWithRouteDescriptor:(const struct __CFDictionary { } *)a0 syncController:(struct OpaqueAPSyncController { } *)a1;
+ (id)outputDeviceWithRouteDescriptor:(struct __CFDictionary { } *)a0 volumeController:(struct OpaqueFigVolumeControllerState { } *)a1;

- (BOOL)canAccessRemoteAssets;
- (BOOL)hasBatteryLevel;
- (id)firmwareVersion;
- (BOOL)canAccessiCloudMusicLibrary;
- (BOOL)isGroupLeader;
- (id)manufacturer;
- (BOOL)requiresAuthorization;
- (BOOL)canRelayCommunicationChannel;
- (BOOL)groupContainsGroupLeader;
- (float)batteryLevel;
- (void)increaseVolumeByCount:(long long)a0;
- (BOOL)canFetchMediaDataFromSender;
- (BOOL)canSetVolume;
- (id)logicalDeviceID;
- (long long)clusterType;
- (BOOL)canPlayEncryptedProgressiveDownloadAssets;
- (BOOL)presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets;
- (BOOL)isHeadTrackedSpatialAudioActive;
- (id)clusterID;
- (BOOL)supportsHeadTrackedSpatialAudio;
- (id)availableBluetoothListeningModes;
- (void)configureUsingBlock:(id /* block */)a0 completionHandler:(id /* block */)a1;
- (BOOL)canAccessAppleMusic;
- (BOOL)supportsBufferedAirPlay;
- (BOOL)producesLowFidelityAudio;
- (long long)configuredClusterSize;
- (BOOL)isAppleAccessory;
- (id)currentBluetoothListeningMode;
- (void)configureUsingBlock:(id /* block */)a0 options:(id)a1 completionHandler:(id /* block */)a2;
- (id)communicationChannelDelegate;
- (BOOL)allowsHeadTrackedSpatialAudio;
- (void)setCurrentBluetoothListeningMode:(id)a0;
- (void)openCommunicationChannelWithOptions:(id)a0 completionHandler:(id /* block */)a1;
- (long long)volumeControlType;
- (id)initWithOutputDeviceImpl:(id)a0 commChannelManager:(id)a1;
- (id)airPlayProperties;
- (long long)deviceSubType;
- (unsigned long long)deviceFeatures;
- (id)ID;
- (id)deviceName;
- (BOOL)isInUseByPairedDevice;
- (id)identifyingMACAddress;
- (void)setSecondDisplayMode:(id)a0 completionHandler:(id /* block */)a1;
- (void)communicationChannelManager:(id)a0 didCloseCommunicationChannel:(id)a1;
- (void)decreaseVolumeByCount:(long long)a0;
- (void)setCommunicationChannelDelegate:(id)a0;
- (void)outputDeviceImplDidChangeProposedGroupID:(id)a0;
- (BOOL)participatesInGroupPlayback;
- (void)outputDeviceImplDidChangeCanChangeVolume:(id)a0;
- (id)headTrackedSpatialAudioMode;
- (BOOL)setAllowsHeadTrackedSpatialAudio:(BOOL)a0 error:(id *)a1;
- (BOOL)canBeGrouped;
- (void)setSecondDisplayEnabled:(BOOL)a0;
- (long long)HAPConformance;
- (id)modelID;
- (id)impl;
- (id)groupID;
- (BOOL)supportsFitnessDataDestination;
- (id)connectedPairedDevices;
- (BOOL)isEligibleToBePredictedOutputDevice;
- (id)serialNumber;
- (void)setVolume:(float)a0;
- (id)deviceID;
- (BOOL)setCurrentBluetoothListeningMode:(id)a0 error:(id *)a1;
- (double)frecencyScore;
- (void)updateFrecencyScore;
- (void)dealloc;
- (BOOL)isEqual:(id)a0;
- (void)openCommunicationChannelToDestination:(id)a0 options:(id)a1 completionHandler:(id /* block */)a2;
- (BOOL)canCommunicateWithAllLogicalDeviceMembers;
- (void)outputDeviceImplDidChangeVolume:(id)a0;
- (id)modelSpecificInformation;
- (BOOL)isLogicalDeviceLeader;
- (BOOL)setHeadTrackedSpatialAudioMode:(id)a0 error:(id *)a1;
- (unsigned long long)hash;
- (long long)deviceType;
- (id)proposedGroupID;
- (id)init;
- (id)figEndpointOutputDeviceImpl;
- (id)clusteredDeviceDescriptions;
- (void)outputDeviceImplDidChangeVolumeControlType:(id)a0;
- (id)description;
- (BOOL)isClusterLeader;
- (BOOL)canBeGroupLeader;
- (float)volume;
- (BOOL)onlyAllowsConnectionsFromPeersInHomeGroup;
- (BOOL)automaticallyAllowsConnectionsFromPeersInHomeGroup;
- (BOOL)supportsBluetoothSharing;
- (void)communicationChannelManager:(id)a0 didReceiveData:(id)a1 fromCommunicationChannel:(id)a2;
- (id)name;

@end
