@class UIView, NSString, PBUIPosterWallpaperViewController, NSHashTable, NSMutableSet, BSCompoundAssertion, PBUIWallpaperConfigurationManager, PBUIPosterPortalImageProvider, PBUIPosterActiveVariantImageProvider;
@protocol PBUIWallpaperReachabilityCoordinating, PBUIWallpaperPresentingDelegate;

@interface PBUIPosterWallpaperRemoteViewController : UIViewController <BSDescriptionProviding, PBUIWallpaperConfigurationManagerDelegate, PBUIPosterComponentDelegate, PBUIFakeBlurImageProviding, PBUIFakeBlurViewRegistering, PBUIWallpaperPresenting, PBUIWallpaperLegibilityProviding> {
    UIView *_containerView;
    PBUIPosterWallpaperViewController *_viewController;
    NSMutableSet *_stateCaptureHandles;
    PBUIPosterPortalImageProvider *_portalImageProvider;
    PBUIPosterActiveVariantImageProvider *_activeVariantProvider;
    BSCompoundAssertion *_animationSuspendedAssertion;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _observerLock;
    NSHashTable *_observers;
    NSHashTable *_effectViews;
    NSHashTable *_wallpaperScaleAssertions;
}

@property (class, readonly, nonatomic) BOOL supportsLandscapeWallpaperContents;

@property (retain, nonatomic) PBUIWallpaperConfigurationManager *wallpaperConfigurationManager;
@property (retain, nonatomic) id<PBUIWallpaperReachabilityCoordinating> reachabilityCoordinator;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<PBUIWallpaperPresentingDelegate> wallpaperPresentingDelegate;
@property (readonly, nonatomic) struct { long long x0; long long x1; double x2; } currentHomescreenStyleTransitionState;
@property (nonatomic) long long activeVariant;
@property (readonly, nonatomic) double minimumHomescreenWallpaperScale;
@property (readonly, nonatomic) double homescreenWallpaperScale;
@property (readonly, nonatomic) double minimumLockscreenWallpaperScale;
@property (readonly, nonatomic) double lockscreenWallpaperScale;
@property (readonly, nonatomic) unsigned long long significantEventsCounter;

- (BOOL)posterHandlesWakeAnimation;
- (id)averageColorForVariant:(long long)a0;
- (id)requireWallpaperRasterizationWithReason:(id)a0;
- (id)requireWallpaperWithReason:(id)a0;
- (id)legibilitySettingsForVariant:(long long)a0;
- (void)_addStateCaptureHandlers;
- (unsigned long long)significantEventsCounterForPosterWithIdentifier:(id)a0;
- (void)posterComponent:(id)a0 didUpdateLegibilitySettings:(id)a1;
- (void)setWallpaperObscured:(BOOL)a0;
- (id)scenesForInactiveEnvironmentSession;
- (void)cancelInProcessAnimations;
- (BOOL)shouldAutorotate;
- (BOOL)homeScreenPosterMirrorsLock;
- (id)setWallpaperFloatingLayerContainerView:(id)a0 forReason:(id)a1 withAnimationFactory:(id)a2;
- (void)noteDidRotateFromInterfaceOrientation:(long long)a0;
- (id)_observers;
- (id)scenesForBacklightSession;
- (void)_updateAnimationSuspended;
- (id)descriptionBuilderWithMultilinePrefix:(id)a0;
- (void)updateWallpaperAnimationWithWakeSourceIsSwipeToUnlock:(BOOL)a0;
- (id)succinctDescriptionBuilder;
- (BOOL)removeWallpaperStyleForPriority:(long long)a0 forVariant:(long long)a1 withAnimationFactory:(id)a2;
- (double)contrastInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forVariant:(long long)a1;
- (id)initWithNibName:(id)a0 bundle:(id)a1;
- (void)addObserver:(id)a0;
- (id)newImageProviderView;
- (unsigned long long)posterSignificantEventsCounter;
- (void)noteWillAnimateToInterfaceOrientation:(long long)a0 duration:(double)a1;
- (id)newFakeBlurViewForVariant:(long long)a0 style:(long long)a1 transformOptions:(unsigned long long)a2;
- (BOOL)_canShowWhileLocked;
- (BOOL)parallaxEnabledForVariant:(long long)a0;
- (void)setAssociatedPosterConfiguration:(id)a0 withAnimationSettings:(id)a1;
- (BOOL)shouldAutomaticallyForwardAppearanceMethods;
- (double)zoomFactorForVariant:(long long)a0;
- (id)averageColorInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forVariant:(long long)a1 withSmudgeRadius:(double)a2;
- (void)updateWallpaperAnimationWithProgress:(double)a0;
- (void)_updateFallbackView;
- (void)addObserver:(id)a0 forVariant:(long long)a1;
- (BOOL)setWallpaperStyleTransitionState:(struct { long long x0; long long x1; double x2; })a0 forPriority:(long long)a1 forVariant:(long long)a2 withAnimationFactory:(id)a3;
- (void)dealloc;
- (void)viewDidLoad;
- (double)parallaxFactorForVariant:(long long)a0;
- (void)triggerPosterSignificantEvent;
- (void)removeObserver:(id)a0;
- (void)removeObserver:(id)a0 forVariant:(long long)a1;
- (void)updateWallpaperAnimationWithIconFlyInTension:(double)a0 friction:(double)a1;
- (void)_registerFakeBlurView:(id)a0;
- (void)_unregisterFakeBlurView:(id)a0;
- (void)viewWillDisappear:(BOOL)a0;
- (void)setActiveVariant:(long long)a0 withOutAnimationFactory:(id)a1 inAnimationFactory:(id)a2 completion:(id /* block */)a3;
- (BOOL)updateImageProviderView:(id)a0 withImage:(id)a1;
- (id)succinctDescription;
- (void)setConfiguration:(id)a0 withAnimationSettings:(id)a1;
- (id)createWallpaperFloatingViewForReason:(id)a0 ignoreReplica:(BOOL)a1;
- (id)descriptionWithMultilinePrefix:(id)a0;
- (void)viewDidDisappear:(BOOL)a0;
- (BOOL)setWallpaperStyle:(long long)a0 forPriority:(long long)a1 forVariant:(long long)a2 withAnimationFactory:(id)a3;
- (id)setHomescreenWallpaperScale:(double)a0 withAnimationFactory:(id)a1;
- (void)viewDidAppear:(BOOL)a0;
- (id)averageColorInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forVariant:(long long)a1;
- (id)suspendWallpaperAnimationForReason:(id)a0;
- (double)_wallpaperScaleForVariant:(long long)a0;
- (void)triggerSceneUpdate;
- (void)viewWillLayoutSubviews;
- (unsigned long long)supportedInterfaceOrientations;
- (id)_wallpaperScaleAssertionForVariant:(long long)a0 scale:(double)a1;
- (id)setLockscreenWallpaperScale:(double)a0 withAnimationFactory:(id)a1;
- (void)_updateWallpaperScaleWithAnimationFactory:(id)a0;
- (double)contrastForVariant:(long long)a0;
- (void).cxx_destruct;
- (void)wallpaperConfigurationManager:(id)a0 didChangeWallpaperConfigurationForVariants:(long long)a1;
- (id)imageForWallpaperStyle:(inout long long *)a0 variant:(long long)a1 traitCollection:(id)a2;
- (void)viewWillAppear:(BOOL)a0;

@end
