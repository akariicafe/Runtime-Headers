@class NSHashTable, NSString, NSArray, UIView, SAUIPreferredLayoutModeAssertion, UIImageView, NSMutableDictionary, SAAutomaticallyInvalidatingAssertion, NSMutableSet, NSPointerArray, UIViewFloatAnimatableProperty, NSMapTable;
@protocol SAUILayoutModePreferring, SAAutomaticallyInvalidatable, SAInvalidatable, SAUILayoutHosting, SAElementViewProviding;

@interface SAUILayoutSpecifyingElementViewController : UIViewController <SAElementHosting, SAActivityHostingPrivate, SAUILayoutHosting, SAUILayoutSpecifyingPrivate, SAUILayoutSpecifyingOverridingParticipant, SAActivityHosting, SAAlertHosting, SAUIElementViewControlling, SAUILayoutSpecifying, SAUIContentTransitioning, SAUITransitionTracking> {
    UIImageView *_contentsTransitionShadowView;
    UIViewFloatAnimatableProperty *_shadowViewAnimatableProperty;
    NSHashTable *_shadowViewAssertions;
    id<SAInvalidatable> _shadowViewAssertion;
    NSMutableDictionary *_transitionIDsToReasons;
    NSPointerArray *_preferredLayoutModeAssertions;
    SAUIPreferredLayoutModeAssertion *_preferredLayoutModeAssertion;
    NSMapTable *_reasonsToAlertingActivityAssertions;
    SAAutomaticallyInvalidatingAssertion *_cooldownAssertion;
    NSHashTable *_observers;
    NSString *_contentTransitionBlurKeyPath;
    NSString *_contentTransitionBlurInputRadiusKeyPath;
    long long _previousLayoutMode;
    NSMutableSet *_userInteractionAssertionsInCooldown;
    id<SAInvalidatable> _appearanceTransitionInitializationAvoidanceAssertion;
    BOOL _initializedAppearanceTransition;
    BOOL _avoidShadowViewOvershooting;
    BOOL _shadowViewAlphaDidPassOutsideOfRange;
}

@property (readonly, nonatomic, getter=_containerView) UIView *containerView;
@property (readonly, nonatomic, getter=_contentView) UIView *contentView;
@property (readonly, nonatomic, getter=_isObstructedBySensorRegion) BOOL obstructedBySensorRegion;
@property (readonly, nonatomic, getter=_obstructedRegionSize) struct CGSize { double x0; double x1; } obstructedRegionSize;
@property (readonly, nonatomic, getter=_previousLayoutMode) long long previousLayoutMode;
@property (readonly, nonatomic, getter=_isNotInCustomLayoutOrTransitionFromCustomLayout) BOOL notInCustomLayoutOrTransitionFromCustomLayout;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSArray *temporallyOrderedAlertingActivityAssertions;
@property (readonly, weak, nonatomic) id<SAAutomaticallyInvalidatable> alertingActivityAssertion;
@property (readonly, nonatomic) id<SAUILayoutModePreferring> layoutModePreference;
@property (readonly, nonatomic) SAUIPreferredLayoutModeAssertion *preferredLayoutModeAssertion;
@property (readonly, copy, nonatomic) NSArray *preferredLayoutModeAssertions;
@property (readonly, nonatomic) long long layoutMode;
@property (readonly, nonatomic) long long minimumSupportedLayoutMode;
@property (readonly, nonatomic) long long maximumSupportedLayoutMode;
@property (readonly, nonatomic) long long preferredLayoutMode;
@property (weak, nonatomic) id<SAUILayoutHosting> layoutHost;
@property (readonly, nonatomic, getter=isInteractiveDismissalEnabled) BOOL interactiveDismissalEnabled;
@property (readonly, nonatomic, getter=isMinimalPresentationPossible) BOOL minimalPresentationPossible;
@property (readonly, nonatomic, getter=isRequestingMenuPresentation) BOOL requestingMenuPresentation;
@property (readonly, nonatomic) long long behaviorOverridingRole;
@property (readonly, weak, nonatomic) id<SAAutomaticallyInvalidatable> alertingActivityAssertion;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) id<SAAutomaticallyInvalidatable> alertAssertion;
@property (readonly, nonatomic) id<SAElementViewProviding> elementViewProvider;
@property (readonly, nonatomic) long long layoutMode;
@property (readonly, nonatomic) long long minimumSupportedLayoutMode;
@property (readonly, nonatomic) long long maximumSupportedLayoutMode;
@property (readonly, nonatomic) long long preferredLayoutMode;
@property (weak, nonatomic) id<SAUILayoutHosting> layoutHost;
@property (readonly, nonatomic, getter=isInteractiveDismissalEnabled) BOOL interactiveDismissalEnabled;
@property (readonly, nonatomic, getter=isMinimalPresentationPossible) BOOL minimalPresentationPossible;
@property (readonly, nonatomic, getter=isRequestingMenuPresentation) BOOL requestingMenuPresentation;
@property (readonly, nonatomic, getter=isTrackingTransition) BOOL trackingTransition;

+ (void)initialize;

- (void)_enumerateObserversRespondingToSelector:(SEL)a0 usingBlock:(id /* block */)a1;
- (BOOL)handleLongPress:(id)a0;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (BOOL)_canShowWhileLocked;
- (void)dealloc;
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)a0;
- (void)viewDidDisappear:(BOOL)a0;
- (void)viewDidAppear:(BOOL)a0;
- (void)viewWillLayoutSubviews;
- (void).cxx_destruct;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)a0;
- (BOOL)handleTap:(id)a0;
- (BOOL)isTrackingTransitionWithReason:(id)a0;
- (id)_elementHost;
- (void)addElementViewControllingObserver:(id)a0;
- (id)alertWithReason:(id)a0;
- (void)beginTrackingTransitionWithUniqueIdentifier:(id)a0 reason:(id)a1;
- (double)concentricPaddingForProvidedView:(id)a0 fromViewProvider:(id)a1;
- (void)contentProviderWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 inContainerView:(id)a1 transitionCoordinator:(id)a2;
- (struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })edgeOutsetsForSize:(struct CGSize { double x0; double x1; })a0;
- (void)elementRequestsNegativeResponse:(id)a0;
- (void)elementRequestsSignificantUpdateTransition:(id)a0;
- (void)endTrackingTransitionWithUniqueIdentifier:(id)a0;
- (BOOL)isInteractiveDismissalEnabledForTargetWithOverrider:(id)a0 isDefaultValue:(BOOL *)a1;
- (BOOL)isMinimalPresentationPossibleForTargetWithOverrider:(id)a0 isDefaultValue:(BOOL *)a1;
- (long long)layoutModeForTargetWithOverrider:(id)a0 isDefaultValue:(BOOL *)a1;
- (id)layoutModePreferenceForTargetWithOverrider:(id)a0 isDefaultValue:(BOOL *)a1;
- (long long)maximumSupportedLayoutModeForTargetWithOverrider:(id)a0 isDefaultValue:(BOOL *)a1;
- (void)menuPresentationRequestDidChangeForLayoutSpecifier:(id)a0;
- (long long)minimumSupportedLayoutModeForTargetWithOverrider:(id)a0 isDefaultValue:(BOOL *)a1;
- (void)preferredEdgeOutsetsDidInvalidateForLayoutSpecifier:(id)a0;
- (struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })preferredEdgeOutsetsForLayoutMode:(long long)a0 suggestedOutsets:(struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })a1 maximumOutsets:(struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })a2;
- (struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })preferredEdgeOutsetsForLayoutMode:(long long)a0 suggestedOutsets:(struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })a1 maximumOutsets:(struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })a2 forTargetWithOverrider:(id)a3 isDefaultValue:(BOOL *)a4;
- (id)preferredLayoutModeAssertionForTargetWithOverrider:(id)a0 isDefaultValue:(BOOL *)a1;
- (void)preferredLayoutModeDidInvalidateForLayoutSpecifier:(id)a0;
- (void)removeElementViewControllingObserver:(id)a0;
- (void)setLayoutMode:(long long)a0 reason:(long long)a1;
- (void)setLayoutMode:(long long)a0 reason:(long long)a1 forTargetWithOverrider:(id)a2;
- (void)setPreferredLayoutMode:(long long)a0 reason:(long long)a1;
- (void)setPreferredLayoutMode:(long long)a0 reason:(long long)a1 forTargetWithOverrider:(id)a2;
- (id)systemManagedAlertingActivityAssertionWithReason:(id)a0;
- (BOOL)_axCollapseIfExpandedByUserInteraction;
- (BOOL)_isBlurFilterConfiguredForView:(id)a0;
- (id)_acquireShadowViewAssertion;
- (id)_alertingActivityAssertionWithReason:(id)a0 creatingIfNecessary:(BOOL)a1;
- (void)_animateShadowViewAvoidingOvershoot:(BOOL)a0;
- (void)_axRequestDiminishment;
- (void)_configureAlertAssertionIfNecessary;
- (void)_configureBlurFilterIfNecessary:(id)a0;
- (void)_configureShadowViewAnimatablePropertyIfNecessary;
- (void)_configureTransitionShadowViewIfNecessary;
- (id)_contentTransitionBlurInputRadiusKeyPath;
- (id)_contentTransitionBlurKeyPath;
- (double)_defaultAlertingDuration;
- (BOOL)_expandToCustomLayoutModeFromUserActionIfPossible;
- (void)_insertSnapshotView:(id)a0;
- (void)_invalidatePreferredLayoutModeAssertionWithReason:(long long)a0;
- (id)_newShadowViewAssertion;
- (id)_overrideWithPreference:(id)a0;
- (void)_performAppearanceTransitionInitialization;
- (void)_performAppearanceTransitionInitializationIfNecessary;
- (void)_performBlurAppearanceTransition:(BOOL)a0;
- (void)_performBlurAppearanceTransition:(BOOL)a0 forView:(id)a1;
- (void)_performContainerViewAppearanceTransition:(BOOL)a0;
- (void)_performContentAppearanceTransition:(BOOL)a0;
- (void)_performShadowViewAppearanceTransition:(BOOL)a0;
- (void)_setPreviousLayoutMode:(long long)a0;
- (BOOL)_shouldAvoidAppearanceTransitionInitialization;
- (void)_toggleShadowView;
- (id /* block */)_updatePreferredLayoutModeAssertionWithPreference:(id)a0;
- (id)initWithElementViewProvider:(id)a0;

@end
