@class MFMailboxUid, MFMailMessageLibrary, NSString, MailAccount, NSDate, MFMessageCriterion;

@interface MFLibraryStore : MFMessageStore <MFMailMessageStore> {
    unsigned long long _state;
    struct { unsigned char isReadOnly : 1; unsigned char hasUnsavedChangesToMessageData : 1; unsigned char haveOpenLockFile : 1; unsigned char compacting : 1; unsigned char cancelInvalidation : 1; unsigned char forceInvalidation : 1; unsigned char isWritingChangesToDisk : 1; unsigned char isTryingToClose : 1; unsigned char compactOnClose : 1; unsigned int reserved : 23; } _flags;
    MFMailboxUid *_mailbox;
    MailAccount *_account;
    unsigned long long _deletedMessagesSize;
    unsigned long long _deletedMessageCount;
    unsigned long long _generationNumber;
    MFMailMessageLibrary *_library;
    MFMessageCriterion *_criterion;
    unsigned long long _fetchWindow;
    unsigned long long _lastFetchCount;
}

@property (retain, nonatomic) NSDate *earliestReceivedDate;
@property (retain, nonatomic) MFMailMessageLibrary *library;
@property (readonly, nonatomic) MailAccount *account;
@property (readonly, nonatomic) MFMailboxUid *mailbox;
@property (readonly, nonatomic) NSString *URLString;
@property (readonly, nonatomic) MFMailboxUid *mailboxUid;

+ (id)sharedInstance;
+ (id)sharedInstanceIfExists;
+ (Class)classForMimePart;
+ (unsigned int)defaultLoadOptions;
+ (Class)headersClass;
+ (id)storeWithMailbox:(id)a0;

- (void)updateMetadata;
- (id)criterion;
- (id)initWithMailbox:(id)a0;
- (unsigned long long)totalCount;
- (BOOL)isOpened;
- (unsigned long long)growFetchWindow;
- (id)messageIdRollCall:(id)a0;
- (BOOL)shouldCancel;
- (void)updateServerUnreadCountClosingConnection:(BOOL)a0;
- (void)dealloc;
- (void)close;
- (unsigned long long)unreadCount;
- (BOOL)canFetchMessageIDs;
- (unsigned long long)serverMessageCount;
- (BOOL)shouldArchive;
- (id)description;
- (void)deleteMessagesOlderThanNumberOfDays:(int)a0 compact:(BOOL)a1;
- (long long)fetchNumMessages:(unsigned long long)a0 preservingUID:(id)a1 options:(unsigned long long)a2;
- (void).cxx_destruct;
- (id)storeSearchResultMatchingCriterion:(id)a0 limit:(unsigned int)a1 offset:(id)a2 error:(id *)a3;
- (long long)fetchMessagesWithMessageIDs:(id)a0 andSetFlags:(unsigned long long)a1;
- (unsigned long long)fetchWindow;
- (void)_addInvocationToQueue:(id)a0;
- (id)_cachedBodyDataContainerForMessage:(id)a0 valueIfNotPresent:(id)a1;
- (id)_cachedBodyForMessage:(id)a0 valueIfNotPresent:(id)a1;
- (id)_cachedHeaderDataForMessage:(id)a0 valueIfNotPresent:(id)a1;
- (id)_cachedHeadersForMessage:(id)a0 valueIfNotPresent:(id)a1;
- (unsigned long long)_calculateFetchWindowWithAdditionalMultiple:(BOOL)a0;
- (id)_copyDataFromMimePart:(id)a0 threshold:(unsigned int)a1 downloadIfNecessary:(BOOL)a2;
- (id)_fetchBodyDataForMessage:(id)a0 andHeaderDataIfReadilyAvailable:(id *)a1 downloadIfNecessary:(BOOL)a2 partial:(BOOL *)a3;
- (BOOL)_fetchDataForMimePart:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 isComplete:(BOOL *)a2 consumer:(id)a3;
- (id)_fetchFullBodyDataForMessage:(id)a0 andHeaderDataIfReadilyAvailable:(id *)a1 downloadIfNecessary:(BOOL)a2 didDownload:(BOOL *)a3;
- (id)_fetchHeaderDataForMessage:(id)a0 downloadIfNecessary:(BOOL)a1;
- (unsigned long long)_fetchWindowMinimum;
- (unsigned long long)_fetchWindowMultiple;
- (void)_flushAllMessageData;
- (void)_handleFlagsChangedForMessages:(id)a0 flags:(id)a1 oldFlagsByMessage:(id)a2;
- (id)_memberMessagesWithCompactionNotification:(id)a0;
- (void)_queueMessageFlagsChanged:(id)a0;
- (void)_queueMessagesAdded:(id)a0;
- (void)_queueMessagesWereCompacted:(id)a0;
- (void)_queueMessagesWillBeCompacted:(id)a0;
- (void)_setNeedsAutosave;
- (id)_setOrGetBody:(id)a0 forMessage:(id)a1 updateFlags:(BOOL)a2;
- (void)addCountsForMessages:(id)a0 shouldUpdateUnreadCount:(BOOL)a1;
- (void)allMessageFlagsDidChange:(id)a0;
- (unsigned long long)allNonDeletedCountIncludingServerSearch:(BOOL)a0 andThreadSearch:(BOOL)a1;
- (BOOL)allowsAppend;
- (int)archiveDestination;
- (id)bodyDataForMessage:(id)a0 isComplete:(BOOL *)a1 isPartial:(BOOL *)a2 downloadIfNecessary:(BOOL)a3;
- (BOOL)bodyFetchRequiresNetworkActivity;
- (BOOL)canCompact;
- (BOOL)canFetchSearchResults;
- (void)clearBodyAndHeaderCachesForMessage:(id)a0;
- (void)compactMessages:(id)a0;
- (id)copyMessagesMatchingCriterion:(id)a0 options:(unsigned int)a1;
- (id)copyMessagesWithRemoteIDs:(id)a0 options:(unsigned int)a1 inMailbox:(id)a2;
- (id)copyOfAllMessages;
- (id)copyOfAllMessagesWithOptions:(unsigned int)a0;
- (id)copyOfMessagesInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 options:(unsigned int)a1;
- (id)copyOfMessagesInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 options:(unsigned int)a1 generation:(unsigned long long *)a2;
- (id)dataForMimePart:(id)a0 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 isComplete:(BOOL *)a2 downloadIfNecessary:(BOOL)a3 didDownload:(BOOL *)a4;
- (BOOL)dataForMimePart:(id)a0 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 isComplete:(BOOL *)a2 withConsumer:(id)a3 downloadIfNecessary:(BOOL)a4 didDownload:(BOOL *)a5;
- (id)dataPathForMessage:(id)a0 part:(id)a1;
- (id)dateOfOldestNonIndexedNonSearchResultMessage;
- (void)deleteMessages:(id)a0 moveToTrash:(BOOL)a1;
- (void)doCompact;
- (long long)fetchMobileSynchronously:(unsigned long long)a0;
- (long long)fetchMobileSynchronously:(unsigned long long)a0 preservingUID:(id)a1 options:(unsigned long long)a2;
- (unsigned long long)fetchWindowCap;
- (id)filterMessagesByMembership:(id)a0;
- (id)fullBodyDataForMessage:(id)a0 andHeaderDataIfReadilyAvailable:(id *)a1 isComplete:(BOOL *)a2 downloadIfNecessary:(BOOL)a3 didDownload:(BOOL *)a4;
- (id)fullBodyDataForMessage:(id)a0 andHeaderDataIfReadilyAvailable:(id *)a1 isComplete:(BOOL *)a2 downloadIfNecessary:(BOOL)a3 usePartDatas:(BOOL)a4 didDownload:(BOOL *)a5;
- (void)handleMessageFlagsChanged:(id)a0;
- (void)handleMessagesAdded:(id)a0 earliestReceivedDate:(id)a1;
- (void)handleMessagesCompacted:(id)a0;
- (void)handleMessagesWillBeCompacted:(id)a0;
- (BOOL)hasCompleteDataForMimePart:(id)a0;
- (BOOL)hasMessageForAccount:(id)a0;
- (BOOL)hasMoreFetchableMessages;
- (id)headerDataForMessage:(id)a0 downloadIfNecessary:(BOOL)a1;
- (id)initWithCriterion:(id)a0 mailbox:(id)a1 readOnly:(BOOL)a2;
- (id)initWithMailbox:(id)a0 readOnly:(BOOL)a1;
- (void)invalidateFetchWindow;
- (id)loadMeetingDataForMessage:(id)a0;
- (id)loadMeetingExternalIDForMessage:(id)a0;
- (id)loadMeetingMetadataForMessage:(id)a0;
- (void)messageFlagsDidChange:(id)a0 flags:(id)a1;
- (id)messageForMessageID:(id)a0 options:(unsigned int)a1;
- (id)messageForRemoteID:(id)a0;
- (id)messageForRemoteID:(id)a0 inMailbox:(id)a1;
- (void)messagesWereAdded:(id)a0;
- (void)messagesWereAdded:(id)a0 earliestReceivedDate:(id)a1;
- (void)messagesWereCompacted:(id)a0;
- (void)messagesWereDeleted:(id)a0;
- (void)messagesWillBeCompacted:(id)a0;
- (id)newObjectCache;
- (void)openSynchronously;
- (void)purgeMessages:(id)a0;
- (void)purgeMessagesBeyondLimit:(unsigned long long)a0;
- (id)serverSearchResults;
- (unsigned long long)serverUnreadOnlyOnServerCount;
- (void)setFlag:(id)a0 state:(BOOL)a1 forMessages:(id)a2;
- (id)setFlagsFromDictionary:(id)a0 forMessages:(id)a1;
- (id)setFlagsLocallyFromDictionary:(id)a0 forMessages:(id)a1;
- (void)setNumberOfAttachments:(unsigned int)a0 isSigned:(BOOL)a1 isEncrypted:(BOOL)a2 forMessage:(id)a3;
- (BOOL)shouldDeleteInPlace;
- (BOOL)shouldDownloadBodyDataForMessage:(id)a0;
- (BOOL)shouldGrowFetchWindow;
- (id)storageLocationForAttachment:(id)a0 withMessage:(id)a1;
- (id)storeData:(id)a0 forMimePart:(id)a1 isComplete:(BOOL)a2;
- (id)storeSearchResultMatchingSearchText:(id)a0 criterion:(id)a1 limit:(unsigned int)a2 offset:(id)a3 error:(id *)a4;
- (void)willFetchMessages;

@end
