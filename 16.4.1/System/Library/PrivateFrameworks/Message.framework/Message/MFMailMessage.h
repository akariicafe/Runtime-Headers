@class MFMailboxUid, NSURL, MFMessageStore, NSDate, ECSubject, NSDictionary, MFMessageHeaders, ECMessageFlags, NSString, MailAccount, EMFollowUp, ECAngleBracketIDHash, NSSet, EMMessageObjectID, NSArray, NSData, EMReadLater, NSUUID;
@protocol MFMailMessageStore, ECMimeBody;

@interface MFMailMessage : MFMessage <EDBaseMessage> {
    unsigned long long _messageFlags;
    unsigned long long _modSequenceNumber;
    NSURL *_globalMessageURL;
    BOOL _useInternalSourceIsManaged;
    BOOL _sourceIsManaged;
}

@property (nonatomic) long long globalMessageID;
@property (readonly, nonatomic) EMMessageObjectID *objectID;
@property (readonly, nonatomic) MFMailboxUid *mailbox;
@property unsigned long long modSequenceNumber;
@property (nonatomic) BOOL shouldUseMailDrop;
@property (nonatomic) unsigned long long messageFlags;
@property (readonly, nonatomic) MFMessageHeaders *headers;
@property (readonly, nonatomic) MailAccount *account;
@property (readonly, nonatomic) BOOL read;
@property (readonly, nonatomic) BOOL deleted;
@property (retain, nonatomic) MFMessageStore<MFMailMessageStore> *messageStore;
@property (nonatomic) BOOL sourceIsManaged;
@property (retain, nonatomic) NSString *summary;
@property (readonly, copy, nonatomic) ECSubject *subjectIfAvailable;
@property (readonly, nonatomic) unsigned long long fileSize;
@property (readonly) NSDate *displayDate;
@property (readonly) NSDate *date;
@property (readonly) EMReadLater *readLater;
@property (readonly, nonatomic) EMFollowUp *followUp;
@property (readonly) NSDate *sendLaterDate;
@property (readonly, nonatomic) NSURL *brandIndicatorLocation;
@property (readonly, nonatomic) NSData *brandIndicator;
@property (readonly, copy, nonatomic) NSDictionary *dataDetectionAttributes;
@property (readonly, copy) NSArray *bccIfAvailable;
@property (readonly, copy, nonatomic) NSString *persistentID;
@property (readonly, copy, nonatomic) ECSubject *subject;
@property (readonly, copy, nonatomic) NSArray *from;
@property (readonly, copy, nonatomic) NSArray *to;
@property (readonly, copy, nonatomic) NSArray *cc;
@property (readonly, copy, nonatomic) NSArray *bcc;
@property (readonly, copy, nonatomic) NSArray *senders;
@property (readonly, nonatomic) NSDate *dateReceived;
@property (readonly, nonatomic) NSDate *dateSent;
@property (readonly, copy, nonatomic) NSArray *listUnsubscribe;
@property (readonly, copy, nonatomic) NSString *remoteID;
@property (readonly, nonatomic) long long conversationID;
@property (readonly, nonatomic) BOOL isServerSearchResult;
@property (readonly, nonatomic) ECMessageFlags *flags;
@property (readonly, nonatomic, getter=isPartOfExistingThread) BOOL partOfExistingThread;
@property (readonly, nonatomic) id<ECMimeBody> mimeBody;
@property (readonly, copy, nonatomic) NSDictionary *headersDictionary;
@property (readonly, copy, nonatomic) NSString *messageIDHeader;
@property (readonly, nonatomic) ECAngleBracketIDHash *messageIDHeaderHash;
@property (readonly) NSSet *labels;
@property (readonly, copy, nonatomic) NSArray *references;
@property (readonly, copy, nonatomic) NSUUID *documentID;
@property (readonly, nonatomic) unsigned long long numberOfAttachments;
@property (readonly, nonatomic) ECAngleBracketIDHash *listIDHash;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (unsigned int)displayablePriorityForPriority:(int)a0;
+ (Class)dataMessageStoreToUse;
+ (id)forwardedMessagePrefixWithSpacer:(BOOL)a0;
+ (unsigned int)validatePriority:(int)a0;

- (id)messageStore;
- (long long)libraryID;
- (id)URL;
- (int)priority;
- (void)setSummary:(id)a0;
- (void).cxx_destruct;
- (BOOL)answered;
- (BOOL)junk;
- (BOOL)flagged;
- (BOOL)conversationVIP;
- (BOOL)isSearchResultWithBogusRemoteId;
- (void)markAsForwarded;
- (id)loadMeetingData;
- (void)markAsNotViewed;
- (id)bestAlternativePart;
- (id)bestAlternativePart:(BOOL *)a0;
- (unsigned long long)conversationFlags;
- (long long)conversationHash;
- (BOOL)conversationMuted;
- (id)externalConversationID;
- (id)globalMessageURL;
- (void)loadCachedHeaderValuesFromHeaders:(id)a0;
- (id)loadMeetingExternalID;
- (id)loadMeetingMetadata;
- (id)mailMessageStore;
- (void)markAsFlagged;
- (void)markAsNotFlagged;
- (void)markAsReplied;
- (void)markAsViewed;
- (id)originalMailboxURL;
- (id)preferredAccountToUseForReplying;
- (id)preferredEmailAddressToReplyWith;
- (id)remoteMailboxURL;
- (void)setConversationFlags:(unsigned long long)a0;
- (void)setMessageFlagsWithoutCommitting:(unsigned long long)a0;
- (void)setMutableInfoFromMessage:(id)a0;
- (void)setPriorityFromHeaders:(id)a0;
- (void)setSubject:(id)a0 to:(id)a1 cc:(id)a2 bcc:(id)a3 sender:(id)a4 dateReceived:(double)a5 dateSent:(double)a6 summary:(id)a7 withOptions:(unsigned int)a8;
- (BOOL)shouldSetSummary;
- (id)storageLocationForAttachment:(id)a0;

@end
