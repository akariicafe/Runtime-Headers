@class UIPDFSearchHighlightsController, UIPDFSelectionController, UIImage, CALayer, UIPDFViewTouchHandler, UIPDFDocument, UIPDFPageContentDelegate, UIPDFAnnotationController, UIPDFPage, NSMutableArray, UIActivityIndicatorView, UIColor;
@protocol NSObject, UIPDFPageViewDelegate;

@interface UIPDFPageView : UIView {
    UIPDFDocument *_document;
    unsigned long long _pageIndex;
    UIPDFViewTouchHandler *_touchHandler;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _pageToViewTransform;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _viewToPageTransform;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cropBox;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } zoomRect;
    CALayer *_backingLayer;
    UIImage *_backgroundImage;
    BOOL _backgroundIsScheduled;
    unsigned long long _backgroundScheduleCount;
    BOOL _backgroundIsFullResolution;
    BOOL _boundsChanged;
    BOOL _useTiledContent;
    BOOL _enableLightMemoryFootprint;
    UIPDFPageContentDelegate *_contentDelegate;
    BOOL _scalePageOnDraw;
    struct CGColor { } *_highLightColor;
    UIActivityIndicatorView *_activityIndicator;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
    NSMutableArray *_highlights;
    double _cachedScale;
    BOOL _allowHighlighting;
    UIPDFSearchHighlightsController *_searchHighlightController;
    NSMutableArray *_searchHiglightLayers;
    UIPDFPage *_page;
}

@property (readonly, retain) UIPDFDocument *document;
@property (readonly) unsigned long long pageIndex;
@property UIPDFPage *page;
@property (nonatomic) id<NSObject, UIPDFPageViewDelegate> delegate;
@property (nonatomic) double margin;
@property (readonly, nonatomic) CALayer *contentLayer;
@property (readonly, nonatomic) CALayer *effectsLayer;
@property (nonatomic) BOOL allowSelection;
@property (nonatomic) BOOL useBackingLayer;
@property UIPDFSelectionController *selectionController;
@property (readonly) struct CGColor { } *highLightColor;
@property (nonatomic) BOOL allowMenu;
@property (nonatomic) BOOL animateSetFrame;
@property (retain) UIImage *backgroundImage;
@property (retain, nonatomic) UIColor *backingLayerColor;
@property (nonatomic) BOOL showActivityIndicator;
@property (nonatomic) BOOL showAnnotations;
@property (nonatomic) BOOL allowHighlighting;
@property (nonatomic) BOOL showTextAnnotations;
@property (readonly, nonatomic) UIPDFAnnotationController *annotationController;
@property (nonatomic) BOOL showLinkAnnotationUnderline;
@property (nonatomic) BOOL allowTwoFingerSelection;

- (unsigned long long)pageIndex;
- (void)setPage:(id)a0;
- (id)document;
- (void)clearSelection;
- (id)page;
- (void)setBackgroundImage:(id)a0;
- (void)addPage:(id)a0;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (void)setNeedsDisplay;
- (void)didReceiveMemoryWarning:(id)a0;
- (id)backgroundImage;
- (void)dealloc;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)init;
- (void)willMoveToSuperview:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRectFromPDFPageSpace:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRectToPDFPageSpace:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)didScroll:(id)a0;
- (id)initWithPage:(id)a0;
- (void)showSelection;
- (struct CGPDFDictionary { } *)_annotForPoint:(struct CGPoint { double x0; double x1; })a0 rect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1;
- (void)suspendInstantTouchHighlighting;
- (void)addLayers:(BOOL)a0;
- (void)addWidgetToSelection;
- (BOOL)allowHighlighting;
- (BOOL)allowMenu;
- (void)clearSearchHighlights;
- (struct CGPoint { double x0; double x1; })convertPointFromPDFPageSpace:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })convertPointToPDFPageSpace:(struct CGPoint { double x0; double x1; })a0;
- (id)createBackingLayer;
- (void)displayContent;
- (void)doubleTapAt:(struct CGPoint { double x0; double x1; })a0;
- (void)drawAnnotations:(struct CGContext { } *)a0;
- (void)enableLightMemoryFootprint;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })fitRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })fitWidth:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 atVertical:(double)a1;
- (BOOL)hasSearchHighlights;
- (void)hideSelection;
- (void)highlightSearchSelection:(id)a0 animated:(BOOL)a1;
- (void)ignoreTouches:(BOOL)a0;
- (id)initWithPage:(id)a0 tiledContent:(BOOL)a1;
- (id)initWithPageLimitedMemory:(id)a0;
- (void)layoutTextEffects;
- (id)receiveBackgroundImage:(id)a0 info:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectangleOfInterestAt:(struct CGPoint { double x0; double x1; })a0 kind:(int *)a1;
- (void)removeBackingLayer;
- (void)scheduleBackgroundImage;
- (id)searchHighlightSelectionAt:(struct CGPoint { double x0; double x1; })a0;
- (void)setAllowHighlighting:(BOOL)a0;
- (void)setAllowMenu:(BOOL)a0;
- (void)setDrawingSurfaceLayer:(id)a0;
- (void)setSelectionNeedsDisplay;
- (void)setTransforms;
- (void)showContent;
- (void)singleTapAt:(struct CGPoint { double x0; double x1; })a0;
- (void)stopActivityIndicator;
- (void)twoFingerDoubleTapAt:(struct CGPoint { double x0; double x1; })a0;
- (void)viewDidZoom:(id)a0;
- (BOOL)willDoSomethingWithTap:(struct CGPoint { double x0; double x1; })a0;

@end
