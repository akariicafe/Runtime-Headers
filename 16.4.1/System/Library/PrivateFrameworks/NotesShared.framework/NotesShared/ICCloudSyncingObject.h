@class NSMutableDictionary, Protocol, NSDate, TTOrderedSetVersionedDocument, ICInvitation, NSString, CKRecord, ICCloudState, NSSet, CKRecordID, NSManagedObjectID, NSArray, NSData, ICMergeableDictionary, CKShare, NSUUID;
@protocol ICCloudSyncingObjectCryptoStrategy;

@interface ICCloudSyncingObject : NSManagedObject <ICCloudObject, ICLoggable>

@property (class, readonly) BOOL supportsActivityEvents;
@property (class, readonly, copy, nonatomic) NSArray *bundleIdentifiersWithReplicaID;

@property (readonly, copy, nonatomic) NSDate *shareTimestamp;
@property (nonatomic, readonly) NSDate *objc_shareTimestamp;
@property long long failedToSyncCount;
@property long long numberOfPushAttemptsToWaitCount;
@property (nonatomic) long long minimumSupportedNotesVersion;
@property (readonly, nonatomic) ICMergeableDictionary *replicaIDToNotesVersion;
@property (readonly, nonatomic) NSMutableDictionary *participantHandlesToParticipants;
@property (retain, nonatomic) NSData *serverRecordData;
@property (retain, nonatomic) CKRecord *serverRecord;
@property (retain, nonatomic) NSData *serverShareData;
@property (retain, nonatomic) CKShare *serverShare;
@property (retain, nonatomic) NSData *userSpecificServerRecordData;
@property (retain, nonatomic) CKRecord *userSpecificServerRecord;
@property (retain, nonatomic) NSString *zoneOwnerName;
@property (retain, nonatomic) NSString *primitiveZoneOwnerName;
@property (readonly, nonatomic) BOOL shouldBeIgnoredForSync;
@property (retain, nonatomic) NSData *encryptedValuesJSON;
@property (nonatomic, getter=isMergingUnappliedEncryptedRecord) BOOL mergingUnappliedEncryptedRecord;
@property (readonly, nonatomic) CKShare *serverShareCheckingParent;
@property (readonly, copy, nonatomic) NSString *recordName;
@property (readonly, copy, nonatomic) NSString *recordZoneName;
@property (readonly, nonatomic) id<ICCloudSyncingObjectCryptoStrategy> cryptoStrategy;
@property (retain, nonatomic) id<ICCloudSyncingObjectCryptoStrategy> cryptoStrategyForMergingEncryptedData;
@property (readonly, nonatomic) BOOL canHaveCryptoStrategy;
@property (readonly, nonatomic) BOOL cryptoStrategyIsTransient;
@property (readonly, nonatomic) Protocol *cryptoStrategyProtocol;
@property (readonly) BOOL hasPassphraseSet;
@property (readonly) BOOL canAuthenticate;
@property (readonly) BOOL isAuthenticated;
@property (readonly, nonatomic) NSMutableDictionary *decryptedValues;
@property (nonatomic) BOOL needsToLoadDecryptedValues;
@property (readonly, nonatomic) NSData *primaryEncryptedData;
@property (readonly, copy, nonatomic) NSArray *ancestorCloudObjects;
@property (readonly, copy, nonatomic) NSArray *childCloudObjects;
@property (readonly, copy, nonatomic) NSArray *allChildCloudObjects;
@property (retain, nonatomic) NSData *activityEventsData;
@property (readonly, nonatomic) TTOrderedSetVersionedDocument *activityEventsDocument;
@property (retain, nonatomic) id persistedActivityEventsStorage;
@property (retain, nonatomic) id checklistItemToActivityEventsStorage;
@property (retain, nonatomic) NSData *replicaIDToNotesVersionData;
@property (retain, nonatomic) ICCloudState *cloudState;
@property (retain, nonatomic) NSString *identifier;
@property (nonatomic) BOOL needsToBeFetchedFromCloud;
@property (nonatomic) BOOL needsToSaveUserSpecificRecord;
@property (nonatomic) BOOL needsInitialFetchFromCloud;
@property (nonatomic) BOOL markedForDeletion;
@property (nonatomic) BOOL isPasswordProtected;
@property (nonatomic) long long cryptoIterationCount;
@property (retain, nonatomic) NSData *cryptoSalt;
@property (retain, nonatomic) NSData *cryptoInitializationVector;
@property (retain, nonatomic) NSData *cryptoTag;
@property (retain, nonatomic) NSData *cryptoWrappedKey;
@property (retain, nonatomic) NSString *passwordHint;
@property (retain, nonatomic) NSData *unappliedEncryptedRecord;
@property (readonly, nonatomic) BOOL shouldSyncMinimumSupportedNotesVersion;
@property (readonly, nonatomic) long long intrinsicNotesVersion;
@property (retain, nonatomic) ICInvitation *invitation;
@property (nonatomic) BOOL isShareDirty;
@property (readonly, nonatomic) BOOL isDeprecated;
@property (readonly, nonatomic) BOOL isUnsupported;
@property (readonly, nonatomic) BOOL isVisible;
@property (readonly, nonatomic) BOOL needsInitialFetchFromCloudCheckingParent;
@property (readonly, copy, nonatomic) NSSet *deviceReplicaIDs;
@property (readonly, copy, nonatomic) NSUUID *currentReplicaID;
@property (readonly, copy, nonatomic) CKRecordID *recordID;
@property (readonly, copy, nonatomic) NSString *recordType;
@property (readonly, nonatomic) BOOL wantsUserSpecificRecord;
@property (readonly, copy, nonatomic) CKRecordID *userSpecificRecordID;
@property (readonly, nonatomic) BOOL needsToBeDeletedFromCloud;
@property (readonly, nonatomic) BOOL needsToBePushedToCloud;
@property (readonly, nonatomic) BOOL isInICloudAccount;
@property (readonly, nonatomic) BOOL isValidObject;
@property (readonly, copy, nonatomic) NSString *loggingDescription;
@property (readonly, nonatomic) NSManagedObjectID *objectID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)newCloudObjectForRecord:(id)a0 accountID:(id)a1 context:(id)a2;
+ (void)enumerateAllCloudObjectsInContext:(id)a0 batchSize:(unsigned long long)a1 saveAfterBatch:(BOOL)a2 usingBlock:(id /* block */)a3;
+ (id)cloudObjectWithIdentifier:(id)a0 context:(id)a1;
+ (long long)currentNotesVersion;
+ (id)newObjectWithIdentifier:(id)a0 context:(id)a1;
+ (id)predicateForFetchedFromCloudObjects;
+ (id)predicateForObjectsWithIdentifiers:(id)a0;
+ (id)predicateForPasswordProtectedObjects;
+ (id)predicateForVisibleObjects;
+ (id)temporaryAssets;
+ (id)allCloudObjectIDsInContext:(id)a0 passingTest:(id /* block */)a1;
+ (id)allPasswordProtectedObjectsInContext:(id)a0;
+ (id)assetForData:(id)a0;
+ (id)assetForTemporaryURL:(id)a0;
+ (id)assetForURL:(id)a0;
+ (id)dataForAsset:(id)a0;
+ (void)deleteAllTemporaryAssetFilesForAllObjects;
+ (void)deleteTemporaryAssetFilesForOperation:(id)a0;
+ (void)deleteTemporaryFilesForAsset:(id)a0;
+ (id)deletedByThisDeviceOperationQueue;
+ (id)deletedByThisDeviceSet;
+ (void)enumerateAllCloudObjectsInContext:(id)a0 predicate:(id)a1 sortDescriptors:(id)a2 relationshipKeyPathsForPrefetching:(id)a3 batchSize:(unsigned long long)a4 saveAfterBatch:(BOOL)a5 usingBlock:(id /* block */)a6;
+ (id)existingCloudObjectForRecordID:(id)a0 accountID:(id)a1 context:(id)a2;
+ (id)failedToSyncCountsByIdentifier;
+ (id)failureCountQueue;
+ (BOOL)hasAnySharedObjectInContext:(id)a0;
+ (id)keyPathsForValuesAffectingCanBeSharedViaICloud;
+ (id)keyPathsForValuesAffectingCloudAccount;
+ (id)keyPathsForValuesAffectingIsSharedReadOnly;
+ (id)keyPathsForValuesAffectingIsSharedViaICloud;
+ (id)keyPathsForValuesAffectingNeedsToBeDeletedFromCloud;
+ (id)keyPathsForValuesAffectingNeedsToBePushedToCloud;
+ (id)keyPathsForValuesAffectingServerShareCheckingParent;
+ (id)keyPathsForValuesAffectingZoneOwnerName;
+ (BOOL)needsToReFetchServerRecordValue:(id)a0;
+ (id)newPlaceholderObjectForRecordName:(id)a0 accountID:(id)a1 context:(id)a2;
+ (id)numberOfPushAttemptsToWaitByIdentifier;
+ (void)objc_removeAllCloudSyncingObjectActivityEventsForUnsharedObjectsInContext:(id)a0;
+ (id)objectWithRecordID:(id)a0 accountID:(id)a1 context:(id)a2;
+ (id)objectsWithRecordID:(id)a0 context:(id)a1;
+ (id)predicateForDeprecatedObjects;
+ (id)predicateForInCloudObjects;
+ (id)predicateForUnmarkedForDeletionObjects;
+ (id)recordSystemFieldsTransformer;
+ (void)removeAllCloudSyncingObjectActivityEventsForUnsharedObjectsInContext:(id)a0;
+ (void)resetAllDeletedByThisDeviceProperties;
+ (id)shareSystemFieldsTransformer;
+ (BOOL)supportsNotesVersionTracking;
+ (BOOL)supportsUserSpecificRecords;
+ (id)temporaryAssetDirectoryURL;
+ (id)versionsByOperationQueue;
+ (id)versionsByRecordIDByOperation;

- (id)sharedOwnerName;
- (void)awakeFromFetch;
- (void)willSave;
- (void)awakeFromInsert;
- (long long)databaseScope;
- (BOOL)isSharedReadOnly;
- (BOOL)supportsDeletionByTTL;
- (BOOL)isOwnedByCurrentUser;
- (BOOL)canBeSharedViaICloud;
- (id)initWithEntity:(id)a0 insertIntoManagedObjectContext:(id)a1;
- (BOOL)isInCloud;
- (void)didTurnIntoFault;
- (void)saveAndClearDecryptedDataIfNecessary;
- (BOOL)isSharedViaICloud;
- (void).cxx_destruct;
- (BOOL)isDeletable;
- (id)shareType;
- (BOOL)validateIdentifier:(inout id *)a0 error:(out id *)a1;
- (void)markForDeletion;
- (id)activityEventsData;
- (void)assignToPersistentStore:(id)a0;
- (id)cloudAccount;
- (id)ic_loggingIdentifier;
- (void)initializeCryptoProperties;
- (BOOL)isPassphraseCorrect:(id)a0;
- (void)objectWasFetchedFromCloudWithRecord:(id)a0 accountID:(id)a1;
- (id)parentCloudObject;
- (id)participantForUserID:(id)a0;
- (id)persistMentionActivityEventForObject:(id)a0 mentionAttachments:(id)a1;
- (id)persistToggleChecklistItemActivityEventForObject:(id)a0 todo:(id)a1;
- (void)redactAuthorAttributionsToCurrentUser;
- (void)setActivityEventsData:(id)a0;
- (void)setNeedsInitialFetchFromCloud:(BOOL)a0;
- (void)setNeedsToBeFetchedFromCloud:(BOOL)a0;
- (id)shareTitle;
- (id)sharedRootObject;
- (id)shortLoggingDescription;
- (void)unmarkForDeletion;
- (void)updateChangeCount;
- (id)userIDForChecklistItemWithIdentifier:(id)a0;
- (BOOL)wasCreatedByCurrentUser;
- (void)setInCloud:(BOOL)a0;
- (void)setMarkedForDeletion:(BOOL)a0;
- (BOOL)allowsImporting;
- (id)primaryEncryptedDataFromRecord:(id)a0;
- (BOOL)allowsExporting;
- (void)didAcceptShare:(id)a0;
- (void)saveToUnappliedEncryptedRecord:(id)a0;
- (void)addEmailAddressesAndPhoneNumbersToAttributeSet:(id)a0;
- (id)associatedNoteParticipants;
- (BOOL)canBeRootShareObject;
- (BOOL)canCurrentUserShare;
- (BOOL)canKeyDecrypt:(id)a0;
- (id)childCloudObjectsForMinimumSupportedVersionPropagation;
- (void)clearChangeCount;
- (void)clearReplicaIDsToNotesVersion;
- (void)clearServerRecord;
- (id)cryptoMainKey;
- (id)cryptoPassphraseVerifier;
- (void)decrementFailureCounts;
- (id)decryptedValueForKey:(id)a0;
- (id)decryptedValuesNoCreate;
- (void)deleteChangeTokensAndReSync;
- (void)deleteFromLocalDatabase;
- (void)deserializeAndMergeValues:(id)a0;
- (id)deserializedUnappliedRecord;
- (void)didDeleteUserSpecificRecordID:(id)a0;
- (BOOL)didFailToSaveUserSpecificRecordWithID:(id)a0 accountID:(id)a1 error:(id)a2;
- (void)didFetchUserSpecificRecord:(id)a0 accountID:(id)a1 force:(BOOL)a2;
- (void)didSaveUserSpecificRecord:(id)a0;
- (BOOL)encryptFileFromURL:(id)a0 toURL:(id)a1;
- (void)fixBrokenReferences;
- (BOOL)hasAllMandatoryFields;
- (BOOL)hasInvitees;
- (BOOL)hasSuccessfullyPushedLatestVersionToCloud;
- (id)ic_loggingValues;
- (void)incrementFailureCounts;
- (long long)intrinsicNotesVersionForScenario:(unsigned long long)a0;
- (BOOL)isEncryptableKeyBinaryData:(id)a0;
- (BOOL)isPubliclyShared;
- (BOOL)isPubliclySharedOrHasInvitees;
- (long long)isPushingSameOrLaterThanVersion:(long long)a0;
- (BOOL)isSharedRootObject;
- (BOOL)isSharedThroughParent;
- (id)makeCloudKitRecordForApproach:(long long)a0;
- (id)makeCloudKitRecordForApproach:(long long)a0 mergeableFieldState:(id)a1;
- (id)makeUserSpecificCloudKitRecordForApproach:(long long)a0;
- (void)markShareDirtyIfNeeded;
- (unsigned long long)mergeActivityEventsDocument:(id)a0;
- (BOOL)mergeCloudKitRecord:(id)a0 accountID:(id)a1 approach:(long long)a2;
- (BOOL)mergeCloudKitRecord:(id)a0 accountID:(id)a1 approach:(long long)a2 mergeableFieldState:(id)a3;
- (void)mergeCryptoFieldsFromRecord:(id)a0;
- (void)mergeCryptoTagAndInitializationVectorFromRecord:(id)a0;
- (BOOL)mergeDataFromUserSpecificRecord:(id)a0 accountID:(id)a1;
- (id)mergeDecryptedValue:(id)a0 withOldValue:(id)a1 forKey:(id)a2;
- (void)mergeEncryptedDataFromRecord:(id)a0;
- (unsigned long long)mergeReplicaIDToNotesVersion:(id)a0;
- (void)mergeUnappliedEncryptedRecord;
- (BOOL)needsToDeleteShare;
- (BOOL)needsToFetchAfterServerRecordChanged:(id)a0;
- (id)newlyCreatedRecord;
- (id)notesVersionForReplicaID:(id)a0;
- (void)objc_removeAllCloudSyncingObjectActivityEvents;
- (id)objc_timestampForChecklistItemWithIdentifier:(id)a0;
- (id)objc_userIDForChecklistItemWithIdentifier:(id)a0;
- (BOOL)objectFailedToBePushedToCloudWithOperation:(id)a0 recordID:(id)a1 error:(id)a2;
- (void)objectWasDeletedFromCloud;
- (void)objectWasDeletedFromCloudByAnotherDevice;
- (void)objectWasFetchedButDoesNotExistInCloud;
- (void)objectWasFetchedFromCloudWithRecord:(id)a0 accountID:(id)a1 force:(BOOL)a2;
- (void)objectWasPushedToCloudWithOperation:(id)a0 serverRecord:(id)a1;
- (void)objectWillBePushedToCloudWithOperation:(id)a0;
- (id)objectsToBeDeletedBeforeThisObject;
- (id)parentCloudObjectForMinimumSupportedVersionPropagation;
- (id)parentCloudObjectModificationDate;
- (id)parentEncryptableObject;
- (id)participantForHandle:(id)a0;
- (id)persistAddParticipantActivityEventForObject:(id)a0 participant:(id)a1;
- (id)persistCopyActivityEventForObject:(id)a0 originalObject:(id)a1 fromParentObject:(id)a2 toParentObject:(id)a3;
- (id)persistCreateActivityEventForObject:(id)a0 inParentObject:(id)a1;
- (id)persistDeleteActivityEventForObject:(id)a0 fromParentObject:(id)a1;
- (id)persistMoveActivityEventForObject:(id)a0 fromParentObject:(id)a1 toParentObject:(id)a2;
- (id)persistRemoveParticipantActivityEventForObject:(id)a0 participant:(id)a1;
- (id)persistRenameActivityEventForObject:(id)a0;
- (void)prepareUnappliedRecordForSerialization:(id)a0;
- (id)primitiveValueForEncryptableKey:(id)a0;
- (void)removeAllCloudSyncingObjectActivityEvents;
- (void)requireMinimumSupportedVersionAndPropagateToChildObjects:(long long)a0;
- (void)resetFailureCounts;
- (void)resetToIntrinsicNotesVersionAndPropagateToChildObjects;
- (void)rewrapAndDivergeKeyUsingPassphrase:(id)a0;
- (void)saveAndClearDecryptedData;
- (id)serializedValuesToEncrypt;
- (void)setCryptoInitializationVector:(id)a0;
- (void)setCryptoIterationCount:(long long)a0;
- (void)setCryptoMainKey:(id)a0;
- (void)setCryptoSalt:(id)a0;
- (void)setCryptoTag:(id)a0;
- (void)setCryptoWrappedKey:(id)a0;
- (void)setCurrentReplicaID:(id)a0;
- (void)setDecryptedValue:(id)a0 forKey:(id)a1;
- (void)setEncryptedValuesJSON:(id)a0;
- (void)setNotesVersion:(id)a0 forReplicaID:(id)a1;
- (void)setPrimitiveValue:(id)a0 forEncryptableKey:(id)a1;
- (void)setServerShareIfNewer:(id)a0;
- (void)setValue:(id)a0 forEncryptableKey:(id)a1;
- (void)setVersion:(long long)a0 forOperation:(id)a1;
- (void)setWasRecentlyDeletedByThisDevice:(BOOL)a0;
- (id)shareDescription;
- (id)shareDescriptionForShareParticipants:(id)a0;
- (BOOL)shouldBeDeletedFromLocalDatabase;
- (BOOL)supportsEncryptedValuesDictionary;
- (id)timestampForChecklistItemWithIdentifier:(id)a0;
- (BOOL)trustsTimestampsFromReplicaID:(id)a0;
- (void)unitTest_injectCryptoStrategy:(id)a0;
- (void)unitTest_setMinimumSupportedNotesVersion:(long long)a0;
- (id)unwrappedKey;
- (void)updateChangeCountsForUnsavedParentReferences;
- (BOOL)updateDeviceReplicaIDsToCurrentNotesVersionIfNeeded;
- (void)updateParentReferenceIfNecessary;
- (id)userSpecificRecordType;
- (id)validatedCreateCryptoStrategy;
- (id)valueForEncryptableKey:(id)a0;
- (long long)versionForOperation:(id)a0;
- (BOOL)wasRecentlyDeletedByThisDevice;
- (void)willUpdateDeviceReplicaIDsToNotesVersion:(long long)a0;
- (id)zoneOwnerName;

@end
