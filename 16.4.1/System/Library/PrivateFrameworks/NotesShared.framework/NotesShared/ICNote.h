@class ICNoteData, NSURL, NSUUID, NSDate, ICFolder, ICAccount, NSMutableArray, NSManagedObjectContext, TTMergeableStringVersionedDocument, NSString, CKRecordID, NSSet, NSManagedObjectID, CSSearchableItemAttributeSet, ICAttachment, NSArray, NSData, ICMergeableDictionary, TTVectorMultiTimestamp, NSNumber;
@protocol ICNoteMergeabilityDelegate, ICFolderObject, ICNoteCryptoStrategy;

@interface ICNote : ICCloudSyncingObject <ICCloudObject, ICSearchIndexableNote, TTMergeableStringDelegate, ICNoteUI, ICDerivedAttributeProviding> {
    NSUUID *_uuid;
    id _noteDidSaveObserver;
    NSMutableArray *_noteDidSaveBlocks;
}

@property (readonly, nonatomic) BOOL hasRecentExternalEdits;
@property (readonly, copy, nonatomic) CKRecordID *recordID;
@property (readonly, copy, nonatomic) NSString *recordType;
@property (readonly, nonatomic) BOOL needsToSaveUserSpecificRecord;
@property (readonly, nonatomic) BOOL wantsUserSpecificRecord;
@property (readonly, copy, nonatomic) CKRecordID *userSpecificRecordID;
@property (readonly, nonatomic) BOOL needsToBeDeletedFromCloud;
@property (readonly, nonatomic) BOOL needsToBePushedToCloud;
@property (readonly, nonatomic) BOOL needsToBeFetchedFromCloud;
@property (readonly, nonatomic) BOOL isInICloudAccount;
@property (readonly, nonatomic) BOOL isValidObject;
@property (readonly, copy, nonatomic) NSString *loggingDescription;
@property (readonly, nonatomic) NSManagedObjectID *objectID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL hasTags;
@property (readonly, nonatomic) BOOL isSearchIndexableNote;
@property (readonly, nonatomic) BOOL isModernNote;
@property (readonly, nonatomic) NSSet *noteCellKeyPaths;
@property (readonly, nonatomic) BOOL hasUnreadChanges;
@property (readonly, nonatomic) BOOL isDeletedOrInTrash;
@property (readonly, nonatomic) BOOL isPinned;
@property (readonly, nonatomic) BOOL isPinnable;
@property (readonly, nonatomic) long long currentStatus;
@property (readonly, nonatomic) BOOL isPasswordProtected;
@property (readonly, copy, nonatomic) NSString *title;
@property (readonly, copy, nonatomic) NSString *trimmedTitle;
@property (readonly, copy, nonatomic) NSString *noteAsPlainTextWithoutTitle;
@property (readonly, copy, nonatomic) NSString *contentInfoText;
@property (readonly, nonatomic) BOOL isSharedViaICloud;
@property (readonly, nonatomic) BOOL isSharedViaICloudFolder;
@property (readonly, nonatomic) BOOL isSharedReadOnly;
@property (readonly, nonatomic) BOOL isUnsupported;
@property (readonly, copy, nonatomic) NSString *folderName;
@property (readonly, copy, nonatomic) NSString *folderNameForNoteList;
@property (readonly, nonatomic) id<ICFolderObject> folder;
@property (readonly, copy, nonatomic) NSString *accountName;
@property (readonly, copy, nonatomic) NSString *identifier;
@property (readonly, nonatomic) NSManagedObjectContext *managedObjectContext;
@property (readonly, nonatomic) NSManagedObjectID *objectID;
@property (readonly, nonatomic) long long visibilityTestingType;
@property (readonly, copy, nonatomic) NSString *searchIndexingIdentifier;
@property (readonly, copy, nonatomic) NSString *contentIdentifier;
@property (readonly, copy, nonatomic) NSDate *creationDate;
@property (readonly, copy, nonatomic) NSDate *modificationDate;
@property (readonly, nonatomic) unsigned long long searchResultsSection;
@property (readonly, nonatomic) unsigned long long searchResultType;
@property (readonly, nonatomic) BOOL searchResultCanBeDeletedFromNoteContext;
@property (readonly, nonatomic) BOOL isHiddenFromSearch;
@property (readonly, nonatomic) BOOL isMovable;
@property (readonly, nonatomic) BOOL isDeletable;
@property (readonly, nonatomic) NSArray *authorsExcludingCurrentUser;
@property (readonly, copy, nonatomic) NSString *dataSourceIdentifier;
@property (readonly, copy, nonatomic) NSString *searchDomainIdentifier;
@property (readonly, nonatomic) CSSearchableItemAttributeSet *searchableItemAttributeSet;
@property (readonly, nonatomic) CSSearchableItemAttributeSet *userActivityContentAttributeSet;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) BOOL objc_hasRecentExternalEdits;
@property (retain, nonatomic) TTMergeableStringVersionedDocument *document;
@property (retain, nonatomic) ICFolder *primitiveFolder;
@property (readonly, nonatomic) ICMergeableDictionary *replicaIDToUserID;
@property (readonly, copy, nonatomic) NSString *showsAuthorHighlightsUserDefaultsKey;
@property (retain, nonatomic) id reservedForTextStorage;
@property (retain, nonatomic) id reservedForCollaborationColorManager;
@property (readonly, nonatomic) TTMergeableStringVersionedDocument *documentWithoutCreating;
@property (retain, nonatomic) NSString *legacyManagedObjectIDURIRepresentation;
@property (copy, nonatomic) TTVectorMultiTimestamp *archivedTimestamp;
@property (retain, nonatomic) NSData *lastViewedTimestampData;
@property (retain, nonatomic) NSData *lastNotifiedTimestampData;
@property (retain, nonatomic) NSString *selectedInkIdentifier;
@property (retain, nonatomic) NSString *selectedInkColorString;
@property (nonatomic) BOOL needsToSaveLastViewedTimestamp;
@property (nonatomic) BOOL shouldAddMediaAsynchronously;
@property (nonatomic) BOOL preventReleasingTextStorage;
@property (retain, nonatomic) NSData *replicaIDToUserIDDictData;
@property (readonly) id<ICNoteCryptoStrategy> cryptoStrategy;
@property (retain) NSData *decryptedData;
@property BOOL isRecoveringCryptoWrappedKey;
@property (retain, nonatomic) ICAccount *account;
@property (retain, nonatomic) NSDate *creationDate;
@property (retain, nonatomic) NSDate *modificationDate;
@property (retain, nonatomic) NSDate *lastOpenedDate;
@property (retain, nonatomic) NSNumber *noteHasChanges;
@property (retain, nonatomic) NSString *snippet;
@property (retain, nonatomic) NSString *title;
@property (retain, nonatomic) ICAttachment *titleSourceAttachment;
@property (retain, nonatomic) NSSet *attachments;
@property (retain, nonatomic) NSSet *inlineAttachments;
@property (retain, nonatomic) NSSet *participants;
@property (retain, nonatomic) ICFolder *folder;
@property (retain, nonatomic) NSDate *folderModificationDate;
@property (retain, nonatomic) ICNoteData *noteData;
@property (retain, nonatomic) NSDate *legacyModificationDateAtImport;
@property (retain, nonatomic) NSString *legacyContentHashAtImport;
@property (retain, nonatomic) NSString *legacyImportDeviceIdentifier;
@property (retain, nonatomic) NSNumber *legacyNoteWasPlainText;
@property (retain, nonatomic) NSString *thumbnailAttachmentIdentifier;
@property (nonatomic) short attachmentViewType;
@property (nonatomic) short paperStyleType;
@property (retain, nonatomic) NSDate *lastViewedModificationDate;
@property (readonly, nonatomic) BOOL hasUnreadChanges;
@property (nonatomic) BOOL isPerformingMerge;
@property (nonatomic) BOOL isNewNoteWithHashtagsInsertedIntoBody;
@property (retain, nonatomic) NSDate *lastActivitySummaryViewedDate;
@property (retain, nonatomic) NSDate *lastActivityRecentUpdatesViewedDate;
@property (retain, nonatomic) NSDate *recentUpdatesGenerationDate;
@property (retain, nonatomic) NSDate *recentUpdatesFirstSeenDate;
@property (retain, nonatomic) NSDate *lastAttributionsViewedDate;
@property (retain, nonatomic) NSNumber *hasChecklist;
@property (retain, nonatomic) NSNumber *hasChecklistInProgress;
@property (nonatomic) BOOL showsAuthorHighlights;
@property (nonatomic) BOOL showsCollaboratorCursors;
@property (readonly, nonatomic) TTVectorMultiTimestamp *timestamp;
@property (copy, nonatomic) TTVectorMultiTimestamp *lastViewedTimestamp;
@property (copy, nonatomic) TTVectorMultiTimestamp *lastNotifiedTimestamp;
@property (retain, nonatomic) NSDate *lastNotifiedDate;
@property (weak, nonatomic) id<ICNoteMergeabilityDelegate> mergeabilityDelegate;
@property (nonatomic) BOOL needsRefresh;
@property (nonatomic) BOOL isPinned;
@property (nonatomic) short preferredBackgroundType;
@property (nonatomic) BOOL isSystemPaper;
@property (readonly, nonatomic) BOOL containsAttachmentWithDeepLink;
@property (readonly, nonatomic) NSURL *paperCoherenceContextURL;
@property (readonly, nonatomic) BOOL isSharedAndEmpty;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL needsInitialDerivedAttributesUpdate;

+ (id)newCloudObjectForRecord:(id)a0 accountID:(id)a1 context:(id)a2;
+ (id)predicateForPinnedNotes;
+ (id)newFetchRequestForNotes;
+ (id)notesMatchingPredicate:(id)a0 context:(id)a1;
+ (id)contentInfoTextWithSnippet:(id)a0 attachmentContentInfoType:(short)a1 attachmentContentInfoCount:(long long)a2 account:(id)a3;
+ (unsigned long long)countOfNotesMatchingPredicate:(id)a0 context:(id)a1;
+ (unsigned long long)countOfVisiblePasswordProtectedNotesInAccount:(id)a0;
+ (void)createNoteForAirDropDocument:(id)a0 legacyContext:(id)a1 processAttributedString:(id /* block */)a2 completion:(id /* block */)a3;
+ (id)defaultTitleForEmptyNote;
+ (void)deleteEmptyNote:(id)a0;
+ (void)deleteNote:(id)a0;
+ (id)newEmptyNoteInContext:(id)a0;
+ (id)newEmptyNoteInFolder:(id)a0;
+ (id)newObjectWithIdentifier:(id)a0 context:(id)a1;
+ (id)noteWithIdentifier:(id)a0 context:(id)a1;
+ (id)notesContainingHashtagWithStandarizedContent:(id)a0 context:(id)a1;
+ (id)predicateForNotesInAccountWithIdentifier:(id)a0;
+ (id)predicateForSystemPaperNotesNotInTrash;
+ (id)predicateForVisibleNotesInContext:(id)a0;
+ (id)refreshAllOfNoteWithIdentifier:(id)a0 context:(id)a1;
+ (void)setDidShowExceededStorageQuotaAlert:(BOOL)a0 forNoteWithIdentifier:(id)a1;
+ (id)snippetForPasswordProtectedNote:(id)a0;
+ (id)visibleNoteWithIdentifier:(id)a0 context:(id)a1;
+ (id)newObjectWithIdentifier:(id)a0 folder:(id)a1;
+ (id)accountIdentifiersOfNotes:(id)a0;
+ (id)allNotesInContext:(id)a0;
+ (id)allPasswordProtectedNoteIdentifiersInContext:(id)a0;
+ (BOOL)containsUndeletableNotes:(id)a0;
+ (BOOL)containsUnduplicatableNotes:(id)a0;
+ (BOOL)containsUnmovableNotes:(id)a0;
+ (unsigned long long)countOfAllNotesInContext:(id)a0;
+ (unsigned long long)countOfPasswordProtectedNotesInContext:(id)a0;
+ (unsigned long long)countOfVisibleNotesInContext:(id)a0;
+ (BOOL)didShowExceededStorageQuotaAlertForNoteWithIdentifier:(id)a0;
+ (void)enumerateNotesInContext:(id)a0 batchSize:(unsigned long long)a1 visibleOnly:(BOOL)a2 saveAfterBatch:(BOOL)a3 usingBlock:(id /* block */)a4;
+ (id)existingCloudObjectForRecordID:(id)a0 accountID:(id)a1 context:(id)a2;
+ (id)keyPathsForValuesAffectingCanBeSharedViaICloud;
+ (id)keyPathsForValuesAffectingCloudAccount;
+ (id)keyPathsForValuesAffectingHasUnreadChanges;
+ (id)keyPathsForValuesAffectingIsDeletable;
+ (id)keyPathsForValuesAffectingIsEditable;
+ (id)keyPathsForValuesAffectingPrefersLightBackground;
+ (id)keyPathsForValuesAffectingRecentUpdatesGenerationDate;
+ (unsigned long long)maxNoteAttachments;
+ (unsigned long long)maxNoteTextLength;
+ (id)mergeUnappliedEncryptedRecordsQueue;
+ (id)newEmptyNoteWithIdentifier:(id)a0 folder:(id)a1;
+ (id)newEmptyNoteWithUUID:(id)a0 folder:(id)a1;
+ (id)newNoteWithoutIdentifierInAccount:(id)a0;
+ (id)newNoteWithoutIdentifierInFolder:(id)a0;
+ (id)newPlaceholderObjectForRecordName:(id)a0 account:(id)a1;
+ (id)newPlaceholderObjectForRecordName:(id)a0 accountID:(id)a1 context:(id)a2;
+ (id)noteIdentifiersMatchingPredicate:(id)a0 context:(id)a1;
+ (id)noteWithIdentifier:(id)a0 accountID:(id)a1 context:(id)a2;
+ (id)noteWithIdentifier:(id)a0 includeDeleted:(BOOL)a1 accountID:(id)a2 context:(id)a3;
+ (id)noteWithIdentifier:(id)a0 includeDeleted:(BOOL)a1 context:(id)a2;
+ (id)noteWithLegacyManagedObjectID:(id)a0 context:(id)a1;
+ (id)noteWithUUID:(id)a0 context:(id)a1;
+ (BOOL)notes:(id)a0 containSharedNotesNotSharedViaFolder:(id)a1;
+ (id)passwordProtectedNoteIdentifiersForAccount:(id)a0;
+ (id)predicateForNote:(id)a0;
+ (id)predicateForSearchableNotesInContext:(id)a0;
+ (id)predicateForSystemPaperNotes;
+ (id)predicateForVisibleNotesIncludingTrash:(BOOL)a0 includingSystemPaper:(BOOL)a1 inContext:(id)a2;
+ (void)purgeAllNotesInContext:(id)a0;
+ (void)purgeNote:(id)a0;
+ (BOOL)supportsActivityEvents;
+ (BOOL)supportsNotesVersionTracking;
+ (BOOL)supportsUserSpecificRecords;
+ (id)systemPaperNotesFetchRequest;
+ (id)visibleNotesInContext:(id)a0;

- (void)awakeFromFetch;
- (BOOL)isEmpty;
- (void)setAccount:(id)a0;
- (void)didSave;
- (void)willSave;
- (BOOL)isEditable;
- (void)prepareForDeletion;
- (id)attributedString;
- (BOOL)isVisible;
- (void)willTurnIntoFault;
- (BOOL)supportsDeletionByTTL;
- (BOOL)isSharable;
- (BOOL)canBeSharedViaICloud;
- (id)uuid;
- (unsigned long long)performMerge:(id /* block */)a0;
- (void)dealloc;
- (void)edited:(unsigned long long)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 changeInLength:(long long)a2;
- (void)beginEditing;
- (void)setFolder:(id)a0;
- (void)endEditing;
- (id)recordZoneName;
- (void).cxx_destruct;
- (void)didRefresh:(BOOL)a0;
- (void)willRefresh:(BOOL)a0;
- (BOOL)hasThumbnailImage;
- (void)setIsPinned:(BOOL)a0;
- (id)shareType;
- (id)addAttachmentWithRemoteFileURL:(id)a0;
- (void)addUndoCommand:(id)a0;
- (void)markForDeletion;
- (id)mergeableString;
- (id)addAttachmentWithFileURL:(id)a0;
- (id)addAttachmentWithFileURL:(id)a0 updateFileBasedAttributes:(BOOL)a1 analytics:(BOOL)a2;
- (id)addAttachmentWithFileWrapper:(id)a0;
- (id)addAttachmentWithIdentifier:(id)a0;
- (id)addAttachmentWithUTI:(id)a0;
- (id)addAttachmentWithUTI:(id)a0 data:(id)a1 filename:(id)a2 updateFileBasedAttributes:(BOOL)a3 analytics:(BOOL)a4;
- (id)addAttachmentWithUTI:(id)a0 data:(id)a1 filenameExtension:(id)a2;
- (id)addInlineAttachmentWithIdentifier:(id)a0;
- (void)addInlineAttachmentsObject:(id)a0;
- (id)addInlineDrawingAttachmentWithAnalytics:(BOOL)a0;
- (id)addSystemPaperAttachmentWithIdentifier:(id)a0;
- (id)addTableAttachmentWithTableData:(id)a0;
- (id)additionalSearchIndexablesForChangedKeys:(id)a0;
- (BOOL)allowsNewTextLength:(unsigned long long)a0;
- (id)anyVisibleInstanceOfHashtag:(id)a0;
- (long long)attachmentContentInfoCount;
- (short)attachmentContentInfoType;
- (BOOL)attachmentExceedsMaxSizeAllowed:(unsigned long long)a0;
- (id)attachmentWithIdentifier:(id)a0;
- (BOOL)canAddAttachment;
- (void)changePinStatusIfPossible;
- (id)cloudAccount;
- (BOOL)containsAttachmentsUnsupportedInPasswordProtection;
- (void)didChangeNoteText;
- (void)enumerateAttachmentsInOrderUsingBlock:(id /* block */)a0;
- (id)inlineAttachmentWithTTAttachment:(id)a0;
- (BOOL)isPasswordProtectedAndLocked;
- (void)markAsSystemPaperIfNeeded:(BOOL)a0;
- (void)mergeUnappliedEncryptedRecordsIncludingAttachmentsImmediately;
- (id)newAirDropDocument;
- (void)objectWasFetchedFromCloudWithRecord:(id)a0 accountID:(id)a1;
- (id)paperCoherenceContextURL;
- (id)parentCloudObject;
- (BOOL)prefersLightBackground;
- (void)regenerateTitle:(BOOL)a0 snippet:(BOOL)a1;
- (void)regenerateTitleAndSnippetIfNecessaryForEdit:(unsigned long long)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 changeInLength:(long long)a2;
- (void)replaceWithDocument:(id)a0;
- (id)searchableString;
- (void)setNeedsInitialFetchFromCloud:(BOOL)a0;
- (id)shareTitle;
- (BOOL)shouldReleaseDocumentWhenTurningIntoFault;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })textRangeForSearchRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 inSearchableString:(id)a1;
- (void)unmarkForDeletion;
- (void)updateChangeCount;
- (id)visibleInlineAttachments;
- (BOOL)wantsUndoCommands;
- (void)willAddOrRemovePassword;
- (id)addURLAttachmentWithURL:(id)a0;
- (void)setMarkedForDeletion:(BOOL)a0;
- (id)noteAsPlainText;
- (id)primaryEncryptedDataFromRecord:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeForSnippet;
- (id)addAttachmentWithData:(id)a0 filename:(id)a1;
- (void)addMediaToAttachment:(id)a0 withBlock:(id /* block */)a1;
- (BOOL)allowsExporting;
- (void)didAcceptShare:(id)a0;
- (void)mergeFoldersFromRecord:(id)a0 account:(id)a1;
- (void)updateDerivedAttributesIfNeeded;
- (id)addAttachment;
- (id)addAttachmentWithUTI:(id)a0 data:(id)a1 filename:(id)a2;
- (id)addAttachmentWithUTI:(id)a0 identifier:(id)a1 urlString:(id)a2 analytics:(BOOL)a3;
- (id)addAttachmentWithUTI:(id)a0 withURL:(id)a1;
- (id)addAttachmentWithUTI:(id)a0 withURL:(id)a1 updateFileBasedAttributes:(BOOL)a2 analytics:(BOOL)a3;
- (id)addGalleryAttachmentWithIdentifier:(id)a0;
- (void)addInlineAttachments:(id)a0;
- (void)addNoteBodyToRecord:(id)a0 forApproach:(long long)a1 mergeableFieldState:(id)a2;
- (void)addShareParticipantsToAttributeSet:(id)a0;
- (id)addSynapseLinkAttachmentWithContentItem:(id)a0;
- (id)addTableAttachment;
- (id)addTableAttachmentWithText:(id)a0;
- (BOOL)addUserID:(id)a0 forReplicaID:(id)a1;
- (void)alignAccountSaltAndICWithPassphrase:(id)a0;
- (id)allAttachmentsIncludingSubAttachments;
- (id)allDrawings;
- (id)allNoteTextAttachmentsIncludingSubAttachments:(BOOL)a0;
- (id)allNoteTextInlineAttachments;
- (void)applyAccountSaltAndICWithPassphrase:(id)a0;
- (id)associatedNoteParticipants;
- (BOOL)attachmentCountExceeded;
- (id)attachmentForWebThumbnail;
- (id)attachmentsInOrder;
- (id)attachmentsWithUTType:(id)a0;
- (BOOL)canAddAttachments:(unsigned long long)a0;
- (BOOL)canBeRootShareObject;
- (id)childCloudObjects;
- (id)childCloudObjectsForMinimumSupportedVersionPropagation;
- (void)clearRecentUpdatesGenerationDateIfNeeded;
- (BOOL)containsPlaceholderBlockOrInlineAttachments;
- (id)cryptoStrategyProtocol;
- (id)decryptTextDataOrSaveAsUnappliedRecordIfNotAuthenticated:(id)a0;
- (void)deduplicateSelfAndCreateNewObjectFromRecord:(id)a0;
- (void)deleteFromLocalDatabase;
- (void)didFetchUserSpecificRecord:(id)a0 accountID:(id)a1 force:(BOOL)a2;
- (void)enumerateAbstractAttachmentsInOrderUsingBlock:(id /* block */)a0;
- (void)enumerateInlineAttachmentsInOrderUsingBlock:(id /* block */)a0;
- (void)fixBrokenReferences;
- (void)fixDivergedAttachmentsUsingPassphrase:(id)a0;
- (id)folderReferenceFromRecord:(id)a0;
- (BOOL)hasAllMandatoryFields;
- (BOOL)hasChecklistOnlyInProgress:(BOOL)a0;
- (BOOL)hasLoadedDocument;
- (id)ic_loggingValues;
- (long long)intrinsicNotesVersionForScenario:(unsigned long long)a0;
- (BOOL)isDuplicatable;
- (BOOL)isLockable;
- (id)makeCloudKitRecordForApproach:(long long)a0 mergeableFieldState:(id)a1;
- (id)makeUserSpecificCloudKitRecordForApproach:(long long)a0;
- (void)markActivitySummaryViewed;
- (void)markLastActivityRecentUpdatesViewed;
- (BOOL)mergeCloudKitRecord:(id)a0 account:(id)a1 approach:(long long)a2;
- (BOOL)mergeCloudKitRecord:(id)a0 accountID:(id)a1 approach:(long long)a2 mergeableFieldState:(id)a3;
- (BOOL)mergeCloudKitRecord:(id)a0 mergePolicy:(long long)a1 account:(id)a2 approach:(long long)a3 mergeableFieldState:(id)a4;
- (BOOL)mergeDataFromUserSpecificRecord:(id)a0 accountID:(id)a1;
- (void)mergeEncryptedData:(id)a0 mergeConflict:(id)a1;
- (void)mergeEncryptedDataFromRecord:(id)a0;
- (void)mergeNotePrimitiveData;
- (long long)mergePolicyForRecord:(id)a0;
- (unsigned long long)mergeReplicaIDToUserID:(id)a0;
- (void)mergeTextDataFromRecord:(id)a0 mergePolicy:(long long)a1 mergeableFieldState:(id)a2;
- (void)mergeUnappliedEncryptedRecordsIncludingAttachmentsInBackground;
- (unsigned long long)mergeWithNoteData:(id)a0;
- (id)minimumNotesVersionForAllParticipants;
- (id)minimumNotesVersionForUserIDs:(id)a0;
- (BOOL)needsToDeleteShare;
- (BOOL)needsToFetchAfterServerRecordChanged:(id)a0;
- (id)notesVersionForParticipant:(id)a0;
- (id)notesVersionForUserID:(id)a0;
- (void)objectWasFetchedFromCloudWithRecord:(id)a0 accountID:(id)a1 force:(BOOL)a2;
- (id)objectsToBeDeletedBeforeThisObject;
- (id)parentCloudObjectModificationDate;
- (id)parentEncryptableObject;
- (id)participantForReplicaID:(id)a0;
- (void)prepareUnappliedRecordForSerialization:(id)a0;
- (id)primaryEncryptedData;
- (id)quotedTitle;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeForAttachment:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeForTitle:(BOOL *)a0;
- (void)refreshNoteTextFromDataStore;
- (void)removeInlineAttachments:(id)a0;
- (void)removeInlineAttachmentsObject:(id)a0;
- (BOOL)requiresLegacyTombstoneAfterDeletion;
- (void)saveAndClearDecryptedData;
- (BOOL)saveNoteData;
- (void)setCryptoInitializationVector:(id)a0;
- (void)setCryptoTag:(id)a0;
- (void)setLastActivityRecentUpdatesViewedDate:(id)a0;
- (void)setLegacyManagedObjectID:(id)a0;
- (BOOL)shouldSyncMinimumSupportedNotesVersion;
- (id)showsCollaboratorCursorsUserDefaultsKey;
- (id)textDataDecryptedIfNecessary;
- (unsigned long long)textOffsetAtSearchIndex:(unsigned long long)a0 inSearchableString:(id)a1;
- (void)turnAttachmentsIntoFaults;
- (void)updateArchivedAndLastViewedTimeStampsAfterSavingNoteData;
- (BOOL)updateDeviceReplicaIDsToUserIDIfNeeded;
- (BOOL)updateLastViewedTimestampWithCurrentTimestamp;
- (void)updateTimestampWithUnserializedChanges;
- (id)userIDForReplicaID:(id)a0;
- (id)visibleAttachments;
- (id)visibleAttachmentsWithType:(short)a0;
- (id)visibleTopLevelAttachments;
- (void)willUpdateDeviceReplicaIDsToNotesVersion:(long long)a0;
- (void)writeCurrentTimestampToMergeableFieldStateIfNecessary:(id)a0;

@end
