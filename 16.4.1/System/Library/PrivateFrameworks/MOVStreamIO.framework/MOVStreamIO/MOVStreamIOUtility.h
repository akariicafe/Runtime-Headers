@interface MOVStreamIOUtility : NSObject

+ (id)valueWithCGAffineTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a0;
+ (id)audioNoneEncoderConfig;
+ (id)monochrome8bitHEVCEncoderConfig;
+ (id)colorH264EncoderConfig;
+ (id)colorH264EncoderConfigWithBitrate:(unsigned long long)a0;
+ (id)colorHEVCEncoderConfig;
+ (id)colorHEVCEncoderConfigWithBitrate:(unsigned long long)a0;
+ (id)colorHEVCLosslessEncoderConfig;
+ (const struct opaqueCMFormatDescription { } *)formatForPixelBuffer:(struct __CVBuffer { } *)a0;
+ (BOOL)isEncoderAvailableForEncoderType:(int)a0;
+ (id)monochrome8bitHEVCEncoderConfigWithBitrate:(unsigned long long)a0;
+ (id)monochrome8bitHEVCLosslessEncoderConfig;
+ (id)slimEncoderConfig;
+ (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })CGAffineTransformValueFromNSValue:(id)a0;
+ (id)AVEProfileLevel10BitMonochrome;
+ (double)clampedQuality:(double)a0;
+ (id)addEncodingQuality:(double)a0 toConfiguration:(id)a1;
+ (id)addTrackTypeInfo:(unsigned long long)a0 toConfiguration:(id)a1;
+ (id)addTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a0 toConfiguration:(id)a1;
+ (unsigned long long)bytesPerPixelForFormat:(unsigned int)a0;
+ (id)color8bitHEVCWithAlphaEncoderConfig;
+ (id)color8bitHEVCWithAlphaEncoderConfigWithBitrate:(unsigned long long)a0;
+ (id)colorHEVCEncoderConfigWithQuality:(double)a0;
+ (id)colorRecordingConfigBitDepth:(unsigned long long)a0 bitrate:(unsigned long long)a1 chromaSampling:(long long)a2 error:(id *)a3;
+ (id)colorRecordingConfigBitDepth:(unsigned long long)a0 chromaSampling:(long long)a1 error:(id *)a2;
+ (id)colorRecordingConfigBitDepth:(unsigned long long)a0 lossless:(BOOL)a1 chromaSampling:(long long)a2 error:(id *)a3;
+ (id)colorRecordingConfigBitDepth:(unsigned long long)a0 quality:(double)a1 chromaSampling:(long long)a2 error:(id *)a3;
+ (id)colorWithAlphaLossless8bitHEVCEncoderConfig;
+ (const struct opaqueCMFormatDescription { } *)createFormatDescriptionFromPixelBuffer:(struct __CVBuffer { } *)a0;
+ (struct opaqueCMFormatDescription { } *)createL008FormatDescriptionFromCompandedRawBayerFormatDescription:(struct opaqueCMFormatDescription { } *)a0;
+ (struct opaqueCMFormatDescription { } *)createL008FormatDescriptionFromNonPlanarFormatDescription:(struct opaqueCMFormatDescription { } *)a0;
+ (struct opaqueCMFormatDescription { } *)createL010FormatDescriptionFromL016FormatDescription:(struct opaqueCMFormatDescription { } *)a0;
+ (struct opaqueCMFormatDescription { } *)createL010FormatDescriptionFromRawBayerFormatDescription:(struct opaqueCMFormatDescription { } *)a0;
+ (struct opaqueCMFormatDescription { } *)createxf20FormatDescriptionFromRawBayerFormatDescription:(struct opaqueCMFormatDescription { } *)a0;
+ (id)customEncoderConfig;
+ (id)customEncoderConfigWithEmbeddedConfiguration:(id)a0;
+ (unsigned int)detectPixelFormatForAsset:(id)a0 videoTrackId:(int)a1 error:(id *)a2;
+ (unsigned long long)getDefaultBitrateForVideoDimension:(struct { int x0; int x1; })a0 atExpectedFramerate:(double)a1 forEncoderType:(int)a2;
+ (id)getJsonFriendlyCopy:(id)a0;
+ (id)getPlistFriendlyCopyOf:(id)a0;
+ (unsigned long long)getPreferredBytesPerRowAlignmentSize;
+ (unsigned long long)getPreferredPlaneAlignmentSize;
+ (unsigned int)guessYCbCrPixelFormatFromFormatDescription:(struct opaqueCMFormatDescription { } *)a0;
+ (BOOL)isEncoderAvailableWithEncoderName:(id)a0;
+ (BOOL)isKeyFrame:(struct opaqueCMSampleBuffer { } *)a0 error:(id *)a1;
+ (BOOL)isValidJSONObject:(id)a0 path:(id)a1;
+ (id)jsonFriendlyCopy:(id)a0;
+ (id)monochrome10bitHEVCEncoderConfig;
+ (id)monochrome10bitHEVCEncoderConfigWithBitrate:(unsigned long long)a0;
+ (id)monochrome10bitHEVCEncoderConfigWithQuality:(double)a0;
+ (id)monochrome10bitHEVCLosslessEncoderConfig;
+ (id)monochrome8bitHEVCEncoderConfigWithQuality:(double)a0;
+ (id)noneEncoderConfig;
+ (id)plistDeserializedObject:(id)a0 error:(id *)a1;
+ (id)plistFriendlyCopyOf:(id)a0;
+ (id)plistSerializedObject:(id)a0 error:(id *)a1;
+ (id)proRes422EncoderConfig;
+ (id)proRes422EncoderConfigWithQuality:(long long)a0;
+ (id)proRes4444EncoderConfig;
+ (id)proRes4444EncoderConfigWithHighQuality;
+ (id)sampleBufferConfigWithPixelFormat:(unsigned int)a0;
+ (id)slimXEncoderConfig;
+ (double)transformAngleFromVideoOrientation:(int)a0;
+ (BOOL)verifyExactBytesPerRow:(id)a0 width:(unsigned long long)a1 height:(unsigned long long)a2 pixelFormat:(unsigned int)a3;

@end
