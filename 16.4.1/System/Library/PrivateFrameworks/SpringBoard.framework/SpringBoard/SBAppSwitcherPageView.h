@class UIView, NSString, SBAppSwitcherWallpaperGradientView, SBAppResizeGrabberView, SBSystemPointerInteractionManager, SBAppSwitcherSettings, SBWallpaperEffectView, SBAppSwitcherPageShadowView;
@protocol SBAppSwitcherPageContentView, SBAppSwitcherPageViewDelegate;

@interface SBAppSwitcherPageView : SBHitTestExtendedView <PTSettingsKeyObserver, SBSystemPointerInteractionDelegate> {
    UIView *_hitTestBlocker;
    UIView *_dimmingView;
    SBWallpaperEffectView *_wallpaperOverlayView;
    UIView *_tintView;
    UIView *_viewClippingView;
    UIView *_contentContainerView;
    SBAppSwitcherSettings *_settings;
    SBAppSwitcherWallpaperGradientView *_wallpaperGradientView;
    SBAppResizeGrabberView *_topLeftResizeGrabberPillView;
    SBAppResizeGrabberView *_topRightResizeGrabberPillView;
    SBAppResizeGrabberView *_bottomLeftResizeGrabberPillView;
    SBAppResizeGrabberView *_bottomRightResizeGrabberPillView;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _pointerRegion;
    unsigned long long _hoveringOverEdge;
    BOOL _resizingAllowed;
    BOOL _occludedInContinuousExposeStage;
    UIView *_pointerHitTestBlocker;
    SBSystemPointerInteractionManager *_systemPointerInteractionManager;
}

@property (readonly, nonatomic) UIView *_overlayClippingView;
@property (readonly, nonatomic) SBAppSwitcherPageShadowView *_shadowView;
@property (retain, nonatomic) UIView<SBAppSwitcherPageContentView> *view;
@property (retain, nonatomic) UIView *overlay;
@property (nonatomic) long long shadowStyle;
@property (nonatomic) double shadowAlpha;
@property (nonatomic) double shadowOffset;
@property (nonatomic) double overlayAlpha;
@property (nonatomic) double contentAlpha;
@property (nonatomic) double dimmingAlpha;
@property (nonatomic) double pointerInteractionHitTestPadding;
@property (nonatomic) BOOL needsBackgroundWallpaperTreatment;
@property (nonatomic) double wallpaperOverlayAlpha;
@property (nonatomic) double lighteningAlpha;
@property (nonatomic) struct UIRectCornerRadii { double topLeft; double bottomLeft; double bottomRight; double topRight; } cornerRadii;
@property (nonatomic) unsigned long long maskedCorners;
@property (nonatomic) long long orientation;
@property (nonatomic) unsigned long long highlightType;
@property (nonatomic) BOOL needsWallpaperGradientTreatment;
@property (nonatomic) struct SBSwitcherGradientWallpaperAttributes { double leadingAlpha; double trailingAlpha; } wallpaperGradientAttributes;
@property (nonatomic) BOOL shouldClipContentView;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } contentClippingFrame;
@property (nonatomic) struct CGSize { double width; double height; } overlayViewSize;
@property (nonatomic) struct CGSize { double width; double height; } fullyPresentedSize;
@property (nonatomic) double switcherCardScale;
@property (nonatomic) BOOL shouldScaleOverlayToFillBounds;
@property (nonatomic) BOOL blocksTouches;
@property (nonatomic, getter=isOccludedInContinuousExposeStage) BOOL occludedInContinuousExposeStage;
@property (nonatomic, getter=isResizingAllowed) BOOL resizingAllowed;
@property (nonatomic, getter=isActive) BOOL active;
@property (nonatomic, getter=isVisible) BOOL visible;
@property (nonatomic, getter=areResizeGrabbersVisible) BOOL resizeGrabbersVisible;
@property (nonatomic) unsigned long long allowedTouchResizeCorners;
@property (nonatomic) long long tintStyle;
@property (weak, nonatomic) id<SBAppSwitcherPageViewDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)pointerWillExitRegion;
- (void)_updateShadowPresence;
- (void)_updateTintViewAlpha;
- (void)_updateWallpaperOverlayAlpha;
- (BOOL)shouldBeginPointerInteractionRequest:(id)a0 atLocation:(struct CGPoint { double x0; double x1; })a1 forView:(id)a2;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })pointerInteractionHitTestInsetsForView:(id)a0;
- (void)_orderSubviews;
- (void)_updateDimmingViewAlpha;
- (id)regionAtLocation:(struct CGPoint { double x0; double x1; })a0 forView:(id)a1;
- (id)styleForRegion:(id)a0 forView:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_contentViewFrame;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)_supportsAsymmetricalCornerRadii;
- (void)_layoutOverlayView;
- (void)setView:(id)a0 animated:(BOOL)a1;
- (void)willMoveToWindow:(id)a0;
- (void)_updateWallpaperGradientAttributes;
- (void)_updateEffectOverlayViews;
- (void)settings:(id)a0 changedValueForKey:(id)a1;
- (void)_addContentView:(id)a0;
- (void)layoutSubviews;
- (void)_updateGrabberVisibilities;
- (void)_updateCornerRadius;
- (void)traitCollectionDidChange:(id)a0;
- (void)setOverlay:(id)a0 animated:(BOOL)a1;
- (void)_createOrDestroyWallpaperGradientView;
- (void)invalidate;
- (void)_createOrDestroyWallpaperOverlayView;
- (void).cxx_destruct;

@end
