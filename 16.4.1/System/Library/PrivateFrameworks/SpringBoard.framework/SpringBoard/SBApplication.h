@class NSURL, FBProcessExitContext, SBApplicationWakeScheduler, NSDate, XBApplicationSnapshotManifest, SBApplicationProcessState, NSMapTable, NSMutableDictionary, SBApplicationInfo, SBApplicationSupportServiceRequestContext, NSString, FBSApplicationDataStore, NSHashTable, NSUserDefaults, SBDisplayItemLayoutAttributes, NSArray, FBApplicationProcess;

@interface SBApplication : NSObject <XBApplicationSnapshotManifestDelegate, SBHApplication, UISApplicationStateServiceDataSource, BSDescriptionProviding> {
    FBApplicationProcess *_process;
    FBSApplicationDataStore *_dataStore;
    NSUserDefaults *_lazy_defaults;
    XBApplicationSnapshotManifest *_synchronized_snapshotManifest;
    unsigned long long _displayedLaunchAlerts;
    SBApplicationSupportServiceRequestContext *_initializationContext;
    id _cachedLastWindowLayoutAttributesOrNSNull;
    unsigned char _isRecentlyUpdated : 3;
    unsigned char _isNewlyInstalled : 3;
    BOOL _launchWillBePrevented;
    BOOL _uninstalled;
    unsigned char _hasBadgeValue : 3;
    unsigned char _dataFlags : 8;
    BOOL _dataFlagsIsSet;
    unsigned short _doingBackgroundNetworking : 16;
    NSHashTable *_statusBarStyleOverridesAssertions;
    NSMapTable *_statusBarStyleOverridesAssertionsByStyleOverride;
    NSMutableDictionary *_suppressVolumeHUDCategoriesBySceneIdentifier;
    int _showsProgressCount;
    int _applicationRestorationCheckState;
    SBApplicationWakeScheduler *_legacyVOIPPeriodicWakeScheduler;
    BOOL _isRecordingAudio;
    long long _appSnapshotSequenceID;
    BOOL _calculatedSupportedTypes;
    unsigned long long _supportedTypes;
    long long _defaultClassicModeOverride;
    long long _currentClassicMode;
}

@property (readonly, nonatomic) BOOL isMedusaCapable;
@property (readonly, nonatomic, getter=isInsetForHomeAffordance) BOOL insetForHomeAffordance;
@property (readonly, nonatomic) BOOL isClassic;
@property (readonly, nonatomic) BOOL classicAppZoomedIn;
@property (readonly, nonatomic) BOOL classicAppRequiresHiDPI;
@property (readonly, nonatomic) BOOL classicAppZoomedInOrRequiresHiDPI;
@property (readonly, nonatomic) BOOL classicAppScaled;
@property (readonly, nonatomic) BOOL classicAppFullScreen;
@property (readonly, nonatomic) BOOL classicAppWithOwnSafeArea;
@property (readonly, nonatomic) BOOL classicAppPhoneAppRunningOnPad;
@property (readonly, nonatomic) BOOL classicAppNonFullScreenWithHomeAffordance;
@property (readonly, nonatomic) BOOL ignoreScalingOfJailedStatusBar;
@property (readonly, nonatomic) BOOL classicAppScaledWithAspectRatioCloseEnoughToBeTreatedAsFullScreen;
@property (readonly, nonatomic) BOOL classicAppWithRoundedCorners;
@property (readonly, nonatomic, getter=_classicMode) long long classicMode;
@property (readonly, nonatomic, getter=_defaultClassicMode) long long defaultClassicMode;
@property (nonatomic, setter=_setClassicAppZoomedIn:) BOOL classicAppZoomedIn;
@property (readonly, nonatomic) BOOL isSpringBoard;
@property (readonly, nonatomic) BOOL isSetup;
@property (readonly, nonatomic) BOOL isMobilePhone;
@property (readonly, nonatomic) BOOL isFaceTime;
@property (readonly, nonatomic) BOOL isPaperBoard;
@property (readonly, nonatomic) BOOL isSpotlight;
@property (retain, getter=_internalProcessState, setter=_setInternalProcessState:) SBApplicationProcessState *internalProcessState;
@property (retain, nonatomic) SBApplicationInfo *info;
@property (readonly, nonatomic) SBApplicationProcessState *processState;
@property (readonly, nonatomic) FBProcessExitContext *lastExitContext;
@property (readonly, nonatomic) unsigned long long failedLaunchCount;
@property (readonly, copy, nonatomic) NSString *bundleIdentifier;
@property (readonly, copy, nonatomic) NSString *iconIdentifier;
@property (readonly, copy, nonatomic) NSString *displayName;
@property (readonly, nonatomic, getter=isInternalApplication) BOOL internalApplication;
@property (readonly, nonatomic, getter=isSystemApplication) BOOL systemApplication;
@property (readonly, nonatomic) SBApplicationWakeScheduler *legacyVOIPPeriodicWakeScheduler;
@property (readonly, nonatomic, getter=isAnyTerminationAssertionHeld) BOOL terminationAssertionHeld;
@property (readonly, nonatomic, getter=isAnyTerminationAssertionInEffect) BOOL terminationAssertionInEffect;
@property (readonly, nonatomic, getter=isUninstallSupported) BOOL uninstallSupported;
@property (nonatomic, getter=isUninstalled) BOOL uninstalled;
@property (copy, nonatomic) NSArray *dynamicApplicationShortcutItems;
@property (nonatomic, getter=isRestoringIcon) BOOL restoringIcon;
@property (nonatomic) BOOL showsProgress;
@property (nonatomic) BOOL hasShownDataPlanAlertSinceLock;
@property (nonatomic) BOOL wantsAutoLaunchForVOIP;
@property (nonatomic) unsigned long long failedAutoLaunchCountForVOIP;
@property (nonatomic, getter=isPlayingAudio) BOOL playingAudio;
@property (nonatomic, getter=isNowRecordingApplication) BOOL nowRecordingApplication;
@property (nonatomic, getter=isConnectedToExternalAccessory) BOOL connectedToExternalAccessory;
@property (nonatomic) BOOL usesEdgeNetwork;
@property (nonatomic) BOOL usesWiFiNetwork;
@property (readonly, nonatomic) int dataUsage;
@property (readonly, nonatomic) BOOL suppressesControlCenter;
@property (readonly, nonatomic) BOOL suppressesCoverSheetGesture;
@property (readonly, nonatomic) BOOL supportsMultitaskingShelf;
@property (nonatomic) BOOL hasProminentlyIndicatedLocationUseWhileForeground;
@property (retain, nonatomic) SBDisplayItemLayoutAttributes *lastWindowLayoutAttributes;
@property (readonly, nonatomic) NSURL *bundleURL;
@property (readonly, copy, nonatomic) NSString *vendorName;
@property (readonly, nonatomic) NSArray *tags;
@property (readonly, nonatomic) BOOL hasHiddenTag;
@property (readonly, nonatomic, getter=isAppleApplication) BOOL appleApplication;
@property (readonly, nonatomic, getter=isAppClip) BOOL appClip;
@property (retain, nonatomic) id badgeValue;
@property (readonly, copy, nonatomic) NSString *uniqueIdentifier;
@property (readonly, copy, nonatomic) NSString *configurationStorageIdentifier;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL usesBackgroundNetwork;
@property (retain, nonatomic) NSDate *nextWakeDate;

+ (BOOL)KJHKJHw39rq9w87q903475q0983rskjd;
+ (void)_markAllManifestsForReingestion;
+ (id)snapshotSortDescriptorForNames:(id)a0;
+ (id)_appStateKeysToPrefetch;
+ (long long)_bestAvailableClassicModeForHostingExtensionContainedInApplication:(BOOL)a0;
+ (unsigned long long)_canonicalScreenTypeForClassicMode:(long long)a0;
+ (long long)_classicModeForLaunchingSize:(struct CGSize { double x0; double x1; })a0;
+ (struct CGSize { double x0; double x1; })_defaultLaunchingSizeForDisplayConfiguration:(id)a0 classicMode:(long long)a1;
+ (id)_deviceSafeAreaInsets;
+ (unsigned long long)_niceScreenTypeForClassicType:(unsigned long long)a0 matchingAValidDisplayZoomModeOnScreenType:(unsigned long long)a1;
+ (void)_reingestStaticDefaultImagesForAllApps;
+ (id)restrictedClassicModeDisplayConfigurationForDisplayConfiguration:(id)a0 classicMode:(long long)a1;
+ (id)snapshotSortDescriptorForContentTypeMask;
+ (id)snapshotSortDescriptorForCreationDate;
+ (id)snapshotSortDescriptorForCustomSafeAreaInsets:(id)a0;
+ (id)snapshotSortDescriptorForImageScale:(double)a0;
+ (id)snapshotSortDescriptorForInterfaceOrientationMask:(unsigned long long)a0;
+ (id)snapshotSortDescriptorForLaunchInterfaceIdentifier:(id)a0;
+ (id)snapshotSortDescriptorForReferenceSize:(struct CGSize { double x0; double x1; })a0;
+ (id)snapshotSortDescriptorForRequiredOSVersion:(id)a0;
+ (id)snapshotSortDescriptorForScheme:(id)a0;
+ (id)snapshotSortDescriptorForStatusBarStateMask:(unsigned long long)a0;
+ (id)snapshotSortDescriptorForUIUserInterfaceStyle:(long long)a0;
+ (id)snapshotSortDescriptorPreferringProtectedContent;
+ (id)snapshotSortDescriptorsForNames:(id)a0 scheme:(id)a1 imageScale:(double)a2 referenceSize:(struct CGSize { double x0; double x1; })a3 userInterfaceStyle:(long long)a4 statusBarStateMask:(unsigned long long)a5 interfaceOrientationMask:(unsigned long long)a6 requiredOSVersion:(id)a7;

- (void)possibleUserTapDidCancel;
- (BOOL)iconCompleteUninstall:(id)a0;
- (id)_preferredImagePathInBundle:(id)a0 baseResourceName:(id)a1 ofType:(id)a2 forMainScene:(BOOL)a3 size:(struct CGSize { double x0; double x1; })a4 scale:(double)a5 outScale:(double *)a6;
- (id)tagsForIcon:(id)a0;
- (long long)labelAccessoryTypeForIcon:(id)a0;
- (BOOL)canGenerateIconsInBackgroundForIcon:(id)a0;
- (void)possibleUserTapBeganWithAbsoluteTime:(unsigned long long)a0 andContinuousTime:(unsigned long long)a1;
- (void)deleteAllSnapshots;
- (void)preHeatForUserLaunchIfNecessaryWithAbsoluteTime:(unsigned long long)a0 andContinuousTime:(unsigned long long)a1;
- (id)icon:(id)a0 unmaskedImageWithInfo:(struct SBIconImageInfo { struct CGSize { double x0; double x1; } x0; double x1; double x2; })a1;
- (BOOL)iconCanTightenLabel:(id)a0;
- (BOOL)hasDisplayedLaunchAlertForType:(unsigned long long)a0;
- (void)_setCurrentClassicMode:(long long)a0;
- (id)initWithApplicationInfo:(id)a0;
- (void)_updateRecentlyUpdatedTimer;
- (id)icon:(id)a0 displayNameForLocation:(id)a1;
- (id)cachedImageForSnapshot:(id)a0 interfaceOrientation:(long long)a1;
- (void)uninstall;
- (unsigned long long)supportedGridSizeClassesForIcon:(id)a0;
- (void)_ingestDefaultPNGsInManifest:(id)a0 withLaunchImageBaseName:(id)a1;
- (id)imageForSnapshot:(id)a0 interfaceOrientation:(long long)a1;
- (unsigned long long)priorityForIcon:(id)a0;
- (void)_didSuspend;
- (struct CGSize { double x0; double x1; })snapshotSizeAdjustedForLegacyStatusBarBasedOnSize:(struct CGSize { double x0; double x1; })a0 interfaceOrientation:(long long)a1 contentFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a2;
- (BOOL)alwaysMaximizedInChamois;
- (id)_defaultPNGNameFromSuspensionSettingsWithExpiration:(double *)a0 sceneID:(id)a1;
- (id)descriptionBuilderWithMultilinePrefix:(id)a0;
- (void)_setDataUsage:(int)a0;
- (long long)_classicModeForHostingExtensionContainedInApplication:(id)a0;
- (BOOL)isTimedOutForIcon:(id)a0;
- (long long)_classicModeFromSupportedTypes;
- (BOOL)_classicAppScaledPadOnPad;
- (id)succinctDescriptionBuilder;
- (BOOL)isSameExecutableAsApplication:(id)a0;
- (void)setAudioCategoriesThatDisableSystemVolumeHUD:(id)a0 forSceneIdentifier:(id)a1;
- (void)saveSuspendSnapshot:(id)a0 forSceneHandle:(id)a1;
- (id)_defaultLaunchImageBaseName;
- (BOOL)_isNewlyInstalled;
- (void)_reingestStaticDefaultImagesInSnapshotManifest;
- (BOOL)_useSupportedTypesForSplashBoard;
- (id)icon:(id)a0 imageWithInfo:(struct SBIconImageInfo { struct CGSize { double x0; double x1; } x0; double x1; double x2; })a1;
- (BOOL)_isNewEnoughToKnowAbout2020Phones;
- (void)_invalidateStatusBarStyleOverridesAssertions;
- (void)_didExitWithContext:(id)a0;
- (void)_recalculateApplicationSupportedTypes;
- (BOOL)supportsMultiWindowLayoutsForSwitcherWindowManagementStyle:(unsigned long long)a0 displayIdentity:(id)a1;
- (void)_noteProcess:(id)a0 didChangeToState:(id)a1;
- (unsigned long long)_screenTypeForClassicMode:(long long)a0;
- (void)_noteIconDataSourceDidChange;
- (BOOL)_supportsApplicationType:(unsigned long long)a0;
- (void)_xbactivity_saveSnapshotForSceneHandle:(id)a0 context:(id)a1 completion:(id /* block */)a2;
- (id)_prepareInitializationContextIfNecessaryForLaunchOnDisplayConfiguration:(id)a0;
- (void)_ingestInfoPlistImagesInManifest:(id)a0;
- (void)_updateProcess:(id)a0 withState:(id)a1;
- (void)takeStatusBarStyleOverridesAssertion:(id)a0;
- (struct CGSize { double x0; double x1; })defaultLaunchingSizeForDisplayConfiguration:(id)a0;
- (BOOL)icon:(id)a0 launchFromLocation:(id)a1 context:(id)a2;
- (BOOL)iconCanTruncateLabel:(id)a0;
- (void)_setRecentlyUpdated:(BOOL)a0;
- (void)_calculateSupportedTypesForSplashBoard;
- (BOOL)supportsChamoisViewResizing;
- (void)_purgeAndResetStaticDefaultImagesInSnapshotManifest;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)__noteSnapshotDidUpdate:(long long)a0 forSceneIdentifier:(id)a1;
- (void)markNewlyInstalled;
- (BOOL)isLaunchDisallowedForObscuredReason;
- (BOOL)_bypassesClassicMode;
- (id)_sceneIdentifierForStoredPersistenceIdentifier:(id)a0;
- (void)launchFromIcon:(id)a0 location:(id)a1 context:(id)a2;
- (id)folderTitleOptionsForIcon:(id)a0;
- (id)iTunesCategoriesOrderedByRelevancyForIcon:(id)a0;
- (long long)preferredSizingPolicyForSwitcherWindowManagementStyle:(unsigned long long)a0 displayIdentity:(id)a1 contentOrientation:(long long)a2 containerOrientation:(long long)a3;
- (unsigned long long)_supportedTypeForClassicModeNone;
- (id)_preferredImagePathByScaleInBundle:(id)a0 resourceName:(id)a1 ofType:(id)a2 scale:(double)a3 outScale:(double *)a4;
- (void)_resetLaunchImageIngestionStatus;
- (int)_applicationRestorationCheckState;
- (void)flushSnapshotsForSceneID:(id)a0;
- (void)flushSnapshotsForAllScenesIncludingAllLegacyImages;
- (BOOL)_isClassicViaOverride;
- (BOOL)supportsChamoisOnExternalDisplay;
- (void)_lockStateDidChange:(id)a0;
- (void)createDownscaledVariantForSnapshot:(id)a0 sceneHandle:(id)a1 scaleFactor:(double)a2 didSaveImage:(id /* block */)a3;
- (id)_snapshotsWithImageName:(id)a0 sceneHandle:(id)a1 referenceSize:(struct CGSize { double x0; double x1; })a2 requireExactSize:(BOOL)a3 launchingScale:(double)a4 contentTypeMask:(unsigned long long)a5 statusBarStateMask:(unsigned long long)a6 launchingOrientation:(long long)a7 contentOverridesContext:(id)a8 userInterfaceStyle:(long long)a9 displayEdgeInfo:(id)a10;
- (void)_cancelPreheatForUserLaunchIfNecessary;
- (void)markRecentlyUpdated;
- (void)purgeCaches;
- (void)dealloc;
- (long long)_classicModeForHostingExtensionContainedInThisApplicationInUnknownHostingHierarchy;
- (void)_calculateSupportedTypesLazilyIfNecessary;
- (void)_noteSnapshotDidUpdateForSceneIdentifiers:(id)a0;
- (id)_dataStore;
- (void)_setNewlyInstalled:(BOOL)a0;
- (id)bestSnapshotWithImageName:(id)a0 sceneHandle:(id)a1 variantID:(id)a2 scale:(double)a3 referenceSize:(struct CGSize { double x0; double x1; })a4 requireExactSize:(BOOL)a5 contentTypeMask:(unsigned long long)a6 statusBarStateMask:(unsigned long long)a7 launchingOrientation:(long long)a8 contentOverridesContext:(id)a9 userInterfaceStyle:(long long)a10 displayEdgeInfo:(id)a11;
- (id)_windowSceneFromApplicationSceneHandle:(id)a0;
- (void)_setApplicationRestorationCheckState:(int)a0;
- (id)mostRecentSceneSnapshotsForSceneHandle:(id)a0 scale:(double)a1 launchingOrientation:(long long)a2;
- (unsigned long long)supportedSizingPoliciesForSwitcherWindowManagementStyle:(unsigned long long)a0 displayIdentity:(id)a1 contentOrientation:(long long)a2 containerOrientation:(long long)a3;
- (void)manifest:(id)a0 didPurgeProtectedContentSnapshotsWithGroupIdentifiers:(id)a1;
- (void)_noteSnapshotDidUpdateForSceneIdentifier:(id)a0;
- (BOOL)_isNewEnoughToKnowAboutRoundPads;
- (void)refreshLaunchImagesInSnapshotManifestIfNeeded;
- (BOOL)_exposeRealDisplayCornerRadii;
- (BOOL)isCacheCleaningTerminationAssertionHeld;
- (void)setHasDisplayedLaunchAlert:(BOOL)a0 forType:(unsigned long long)a1;
- (id)_snapshotManifest;
- (BOOL)supportsChamoisSceneResizing;
- (id)_normalizeSnapshotName:(id)a0;
- (void)_processWillLaunch:(id)a0;
- (BOOL)_isRecentlyUpdated;
- (id)restrictedClassicModeDisplayConfigurationForDisplayConfiguration:(id)a0;
- (void)releaseStatusBarStyleOverridesAssertion:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })snapshotFrameForClassicInsideBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forOrientation:(long long)a1 scaleFactor:(double *)a2 inReferenceSpace:(BOOL)a3;
- (BOOL)isWebApplication;
- (id)succinctDescription;
- (BOOL)iconSupportsUninstall:(id)a0;
- (BOOL)iconAllowsLaunch:(id)a0;
- (id)badgeNumberOrStringForIcon:(id)a0;
- (void)flushSnapshotsForAllScenes;
- (id)descriptionWithMultilinePrefix:(id)a0;
- (void)_processDidLaunch:(id)a0;
- (BOOL)shouldReceiveSourceApplicationContextFromOriginatingApplication:(id)a0;
- (void)_resetDataUsage;
- (BOOL)_canLaunchInClassicMode:(long long)a0;
- (id)statusBarStyleOverridesAssertionsByStyleOverride;
- (void)_setDefaultClassicModeOverride:(long long)a0;
- (id)folderFallbackTitleForIcon:(id)a0;
- (void)deleteSnapshotForContext:(id)a0;
- (BOOL)restrictedToTheEmbeddedDisplayInChamois;
- (id)_baseSceneIdentifier;
- (BOOL)supportsMixedOrientationForSwitcherWindowManagementStyle:(unsigned long long)a0 displayIdentity:(id)a1;
- (BOOL)includesStatusBarInClassicJailForInterfaceOrientation:(long long)a0;
- (void)_setLaunchPrevented:(BOOL)a0;
- (void)_clearSceneTitles;
- (id)icon:(id)a0 displayNameForObscuredDisabledLaunchForLocation:(id)a1;
- (void)saveSnapshotForSceneHandle:(id)a0 context:(id)a1 completion:(id /* block */)a2;
- (void).cxx_destruct;
- (id)_initializationContext;
- (BOOL)iconDisallowsLaunchForObscuredReason:(id)a0;
- (void)_purgeStaticDefaultImagesInSnapshotManifest;
- (BOOL)canShowSystemVolumeHUDForCategory:(id)a0 forSceneIdentifier:(id)a1;
- (BOOL)_classicAppScaledPhoneOnPad;
- (BOOL)_classicAppScaledOnPhone;
- (id)_defaultPNGNameUsingFallbacksWithSceneID:(id)a0 contentOverridesContext:(id)a1;

@end
