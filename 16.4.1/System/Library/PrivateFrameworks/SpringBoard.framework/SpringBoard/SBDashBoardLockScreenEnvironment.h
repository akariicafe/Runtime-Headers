@class SBDashBoardPolicyBasedBehaviorProvider, SBDashBoardEmergencyDialerController, SBDashBoardApplicationLauncher, SBLockScreenActionManager, UIViewController, SBSearchGesture, SBDashBoardPluginController, SBDashBoardIdleTimerController, NSString, SBFLockScreenActionContext, CSCoverSheetViewController, SBDashBoardWidgetURLHandler, SBDashBoardSetupController, SBDashBoardOrientationController, SBCoverSheetSpotlightPresenter, SBDashBoardAnalyticsEmitter, SBDashBoardBiometricUnlockController;
@protocol SBLockScreenContentStateProviding, SBIdleTimerProviding, SBLockScreenStatusBarTransitioning, SBLockScreenCallHandling, SBLockScreenSpotlightPresenting, SBButtonEventsHandler, SBAutoUnlockRule, SBLockScreenBehaviorSuppressing, SBApplicationHosting, SBLockScreenPluginPresenting, SBLockScreenButtonObserving, SBLockScreenBacklightControlling, SBLockScreenIdleTimerControlling, SBLockScreenPasscodeViewPresenting, SBBiometricUnlockBehaviorDelegate, SBFScreenWakeAnimationTarget, SBSWidgetMetricsProviding, SBLockScreenProximityBehaviorProviding, SBLockScreenLockingAndUnlocking, SBLockScreenMediaControlsPresenting, SBLockScreenCustomActionStoring, SBBiometricUnlockBehavior, SBLockScreenApplicationLaunching, SBLockScreenBlockedStateObserving;

@interface SBDashBoardLockScreenEnvironment : NSObject <SBApplicationHosting, SBAutoUnlockRule, SBBiometricUnlockBehavior, SBBiometricUnlockBehaviorDelegate, SBButtonEventsHandler, CSCoverSheetViewControllerObserver, SBLockScreenBacklightControlling, SBLockScreenBehaviorSuppressing, SBLockScreenBlockedStateObserving, SBLockScreenButtonObserving, SBLockScreenContentStateProviding, SBLockScreenCustomActionStoring, SBLockScreenLockingAndUnlocking, SBLockScreenMediaControlsPresenting, SBLockScreenPasscodeViewPresenting, SBLockScreenProximityBehaviorProviding, SBLockScreenStatusBarTransitioning, SBLockScreenSpotlightPresenting, SBLockScreenEnvironment> {
    SBDashBoardAnalyticsEmitter *_analyticsEmitter;
    SBDashBoardApplicationLauncher *_applicationLauncher;
    SBDashBoardBiometricUnlockController *_biometricUnlockController;
    SBLockScreenActionManager *_lockScreenActionManager;
    SBDashBoardEmergencyDialerController *_emergencyDialerController;
    SBDashBoardIdleTimerController *_idleTimerController;
    SBDashBoardOrientationController *_orientationController;
    SBDashBoardPluginController *_pluginController;
    SBDashBoardPolicyBasedBehaviorProvider *_policyBasedBehaviorProvider;
    SBDashBoardSetupController *_setupController;
    SBDashBoardWidgetURLHandler *_widgetURLHandler;
    SBCoverSheetSpotlightPresenter *_coverSheetSpotlightPresenter;
    SBSearchGesture *_searchGesture;
}

@property (readonly, nonatomic) CSCoverSheetViewController *coverSheetViewController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<SBBiometricUnlockBehaviorDelegate> biometricUnlockBehaviorDelegate;
@property (readonly, nonatomic) long long backlightLuminance;
@property (nonatomic) double backlightLevel;
@property (retain, nonatomic, getter=_customLockScreenActionContext) SBFLockScreenActionContext *customLockScreenActionContext;
@property (nonatomic, getter=isAuthenticated) BOOL authenticated;
@property (nonatomic, getter=isShowingMediaControls) BOOL showingMediaControls;
@property (readonly, nonatomic) BOOL expectsFaceContact;
@property (readonly, nonatomic) BOOL shouldShowLockStatusBarTime;
@property (readonly, nonatomic) UIViewController *rootViewController;
@property (readonly, nonatomic) id<SBAutoUnlockRule> autoUnlockRule;
@property (readonly, nonatomic) id<SBBiometricUnlockBehavior> biometricUnlockBehavior;
@property (readonly, nonatomic) id<SBButtonEventsHandler> buttonEventsHandler;
@property (readonly, nonatomic) id<SBApplicationHosting> applicationHoster;
@property (readonly, nonatomic) id<SBIdleTimerProviding> idleTimerProvider;
@property (readonly, nonatomic) id<SBFScreenWakeAnimationTarget> screenWakeAnimationTarget;
@property (readonly, nonatomic) id<SBLockScreenApplicationLaunching> applicationLauncher;
@property (readonly, nonatomic) id<SBLockScreenBacklightControlling> backlightController;
@property (readonly, nonatomic) id<SBLockScreenBehaviorSuppressing> behaviorSuppressor;
@property (readonly, nonatomic) id<SBLockScreenBlockedStateObserving> blockedStateObserver;
@property (readonly, nonatomic) id<SBLockScreenButtonObserving> buttonObserver;
@property (readonly, nonatomic) id<SBLockScreenCallHandling> callController;
@property (readonly, nonatomic) id<SBLockScreenContentStateProviding> contentStateProvider;
@property (readonly, nonatomic) id<SBLockScreenCustomActionStoring> customActionStore;
@property (readonly, nonatomic) id<SBLockScreenIdleTimerControlling> idleTimerController;
@property (readonly, nonatomic) id<SBLockScreenLockingAndUnlocking> lockController;
@property (readonly, nonatomic) id<SBLockScreenMediaControlsPresenting> mediaControlsPresenter;
@property (readonly, nonatomic) id<SBLockScreenPasscodeViewPresenting> passcodeViewPresenter;
@property (readonly, nonatomic) id<SBLockScreenPluginPresenting> pluginPresenter;
@property (readonly, nonatomic) id<SBLockScreenProximityBehaviorProviding> proximityBehaviorProvider;
@property (readonly, nonatomic) id<SBLockScreenStatusBarTransitioning> statusBarTransitionController;
@property (readonly, nonatomic) id<SBSWidgetMetricsProviding> widgetMetricsProvider;
@property (readonly, nonatomic) id<SBLockScreenSpotlightPresenting> spotlightPresenter;

- (BOOL)isHostingAnApp;
- (BOOL)handleHomeButtonLongPress;
- (id)hostedAppSceneHandles;
- (id)hostedAppSceneHandle;
- (void)noteDeviceBlockedStatusUpdated;
- (void)conformsToSBApplicationHosting;
- (BOOL)canHostAnApp;
- (void)coverSheetViewController:(id)a0 didChangeActiveBehavior:(id)a1;
- (void)setPasscodeLockVisible:(BOOL)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (void)finishUIUnlockFromSource:(int)a0;
- (BOOL)handleHomeButtonDoublePress;
- (BOOL)handleVolumeUpButtonPress;
- (BOOL)handleVoiceCommandButtonPress;
- (BOOL)handleHomeButtonPress;
- (id)createHomeButtonSuppressAfterUnlockRecognizerForUnlockSource:(int)a0;
- (void)prepareForUILock;
- (BOOL)handleLockButtonPress;
- (BOOL)handleVolumeDownButtonPress;
- (void)hostedAppWillRotateToInterfaceOrientation:(long long)a0;
- (id)descriptionBuilderWithMultilinePrefix:(id)a0;
- (BOOL)handleHeadsetButtonPress:(BOOL)a0;
- (id)succinctDescriptionBuilder;
- (BOOL)shouldAutoUnlockForSource:(int)a0;
- (BOOL)shouldUnlockUIOnKeyDownEvent;
- (BOOL)biometricUnlockBehavior:(id)a0 requestsFeedback:(id)a1;
- (BOOL)suppressesScreenshots;
- (void)handleBiometricEvent:(unsigned long long)a0;
- (id)createHomeButtonShowPasscodeRecognizerForHomeButtonPress;
- (void)startLockScreenFadeInAnimationForSource:(int)a0;
- (void)setInScreenOffMode:(BOOL)a0 preservingCoverSheetPresentationState:(BOOL)a1;
- (void)noteMenuButtonDown;
- (void)noteMenuButtonUp;
- (BOOL)biometricUnlockBehavior:(id)a0 requestsUnlock:(id)a1 withFeedback:(id)a2;
- (BOOL)isPasscodeLockVisible;
- (void)updateScaleViewWithScale:(double)a0 withDuration:(double)a1;
- (id)initWithCoverSheetViewController:(id)a0;
- (void)prepareForUIUnlock;
- (BOOL)isInScreenOffMode;
- (void)setInScreenOffMode:(BOOL)a0 forAutoUnlock:(BOOL)a1 fromUnlockSource:(int)a2 preservingCoverSheetPresentationState:(BOOL)a3;
- (BOOL)suppressesControlCenter;
- (void)noteResetRestoreStateUpdated;
- (BOOL)canBeDeactivatedForUIUnlockFromSource:(int)a0;
- (BOOL)shouldDisableALS;
- (void)presentOrDismissCoverSheetSpotlightAnimated:(BOOL)a0;
- (BOOL)suppressesBanners;
- (void)setInScreenOffMode:(BOOL)a0 forAutoUnlock:(BOOL)a1 fromUnlockSource:(int)a2;
- (BOOL)isUnlockDisabled;
- (id)succinctDescription;
- (id)init;
- (void)_setExpectsFaceContact:(BOOL)a0;
- (id)descriptionWithMultilinePrefix:(id)a0;
- (BOOL)isMainPageVisible;
- (void)setInScreenOffMode:(BOOL)a0;
- (void)setPasscodeLockVisible:(BOOL)a0 animated:(BOOL)a1;
- (void)jiggleLockIcon;
- (void)updateStatusBarForLockScreenComeback;
- (void).cxx_destruct;
- (BOOL)shouldPresentOrDismissCoverSheetSpotlight;
- (void)updateStatusBarForLockScreenTeardown;
- (BOOL)willUIUnlockFromSource:(int)a0;

@end
