@class SBApplication, NSString, NSDate, NSTimer, MRScreenMirroringObserver, SBDirectToAirPlayController, NSDictionary, SBSStatusBarStyleOverridesAssertion, SBVolumeControl, SBAVSystemControllerCache, NSNumber, MPAVRoutingController;

@interface SBMediaController : NSObject <MPAVRoutingControllerDelegate, FBSDisplayObserving, SBAVSystemControllerCacheObserver> {
    int _manualVolumeChangeCount;
    NSDictionary *_nowPlayingInfo;
    float _pendingVolumeChange;
    NSTimer *_volumeCommitTimer;
    BOOL _debounceVolumeRepeat;
    int _numberOfVolumeDecreasesSinceDownButtonDown;
    SBApplication *_lastNowPlayingApplication;
    BOOL _lastNowPlayingAppIsPlaying;
    int _lastMediaRemoteAppActivityStatus;
    BOOL _suppressHUD;
    BOOL _screenSharingViaAVSystemController;
    BOOL _screenSharingViaDisplayMonitor;
    BOOL _screenSharingSetsStatusBarOverride;
    NSTimer *_screenSharingStatusBarOverrideTimer;
    NSTimer *_videoOutStatusBarOverrideTimer;
    MRScreenMirroringObserver *_screenMirroringObserver;
    MPAVRoutingController *_routingController;
    SBAVSystemControllerCache *_avCache;
    SBVolumeControl *_volumeControl;
    NSNumber *_audioCategoryMusicVolume;
    NSDate *_lastActivityDate;
    SBSStatusBarStyleOverridesAssertion *_screenSharingStatusBarStyleOverrideAssertion;
    SBSStatusBarStyleOverridesAssertion *_videoOutStatusBarStyleOverrideAssertion;
    SBDirectToAirPlayController *_directToAirPlayController;
    struct IONotificationPort { } *_arubaDisplayPortNotificationPort;
}

@property (nonatomic) int nowPlayingProcessPID;
@property (readonly, weak, nonatomic) SBApplication *nowPlayingApplication;
@property (readonly, nonatomic) NSDate *lastActivityDate;
@property BOOL suppressHUD;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedInstance;
+ (BOOL)applicationCanBeConsideredNowPlaying:(id)a0;
+ (void)sendResetPlaybackTimeoutCommand;
+ (id)sharedInstanceIfExists;

- (BOOL)isFirstTrack;
- (void)_clearVideoOutStatusBarStyleOverride;
- (BOOL)likeTrackForEventSource:(long long)a0;
- (BOOL)isApplicationActivityActive;
- (void)_registerForNotifications;
- (BOOL)hasTrack;
- (void)setNowPlayingInfo:(id)a0;
- (BOOL)addTrackToWishListForEventSource:(long long)a0;
- (BOOL)isScreenSharing;
- (void)_mediaRemoteNowPlayingApplicationDidChange:(id)a0;
- (BOOL)toggleRepeatForEventSource:(long long)a0;
- (void)displayMonitor:(id)a0 didConnectIdentity:(id)a1 withConfiguration:(id)a2;
- (BOOL)isPaused;
- (void)_mediaRemoteNowPlayingApplicationIsPlayingDidChange:(id)a0;
- (BOOL)toggleShuffleForEventSource:(long long)a0;
- (BOOL)playForEventSource:(long long)a0;
- (void)_setNowPlayingApplication:(id)a0;
- (BOOL)volumeControlIsAvailable;
- (void)_updateAVRoutes;
- (BOOL)handsetRouteIsSelected;
- (BOOL)_sendMediaCommand:(unsigned int)a0 options:(id)a1;
- (BOOL)changeTrack:(int)a0 eventSource:(long long)a1;
- (BOOL)beginSeek:(int)a0 eventSource:(long long)a1;
- (void)_clearScreenSharingStatusBarStyleOverride;
- (void)displayMonitor:(id)a0 willDisconnectIdentity:(id)a1;
- (void)cancelVolumeEvent;
- (BOOL)endSeek:(int)a0 eventSource:(long long)a1;
- (void)routingControllerAvailableRoutesDidChange:(id)a0;
- (BOOL)setPlaybackSpeed:(int)a0 eventSource:(long long)a1;
- (void)dealloc;
- (BOOL)banTrackForEventSource:(long long)a0;
- (void)updateScreenSharingStatusBarStyleOverride;
- (void)_notifyThatScreenSharingChanged;
- (BOOL)isPlaying;
- (void)_updateScreenMirroringObserverWithSuppressionPreferenceFromDefaults:(id)a0;
- (void)_updateDisplayMonitorState;
- (BOOL)isLastTrack;
- (void)_authenticationStateChanged:(id)a0;
- (void)_applicationActivityStatusDidChange:(id)a0;
- (id)init;
- (BOOL)_displayMonitorHasAConnectedExternalIdentity;
- (void)_updateVideoOutStatusBarStyleOverride;
- (void)cache:(id)a0 didUpdateAirplayDisplayActive:(BOOL)a1;
- (BOOL)stopForEventSource:(long long)a0;
- (void)_unregisterForNotifications;
- (BOOL)togglePlayPauseForEventSource:(long long)a0;
- (BOOL)pauseForEventSource:(long long)a0;
- (BOOL)routeOtherThanHandsetIsAvailable;
- (void)_updateScreenSharingStatusBarStyleOverrideSuppressionPreference:(id)a0;
- (id)nameOfPickedRoute;
- (BOOL)wirelessDisplayRouteIsPicked;
- (void)_updateLastRecentActivityDate;
- (void)_startVideoOutStatusBarStyleOverride;
- (id)_nowPlayingInfo;
- (void).cxx_destruct;
- (void)_nowPlayingAppDidExit:(id)a0;
- (void)_mediaRemoteNowPlayingInfoDidChange:(id)a0;
- (void)cacheDidRebuildAfterServerDeath:(id)a0;

@end
