@class NSMutableArray, NSString, UILongPressGestureRecognizer, NSMutableSet, SBSystemApertureKeyLineColorValidator, NSTimer, NSArray, NSPointerArray, _SBSystemApertureIndicatorContainerView, _SBSystemApertureBouncingState, SBSystemApertureElementAuthority, SBFTouchPassThroughView, NSCountedSet, _SBSystemApertureLayoutState, NSSet, UIView, UIGestureRecognizer, UIPanGestureRecognizer, _UIPortalView, SAUISystemApertureManager, MTMaterialView, SBFZStackParticipant, SBSystemApertureWindowScene, SBSystemApertureSettings, NSDate, NSMapTable, SBSystemApertureContainerView, UIViewFloatAnimatableProperty;
@protocol BSInvalidatable, SBSystemApertureGainMapBackedRendering, UIViewControllerTransitionCoordinator, SBSystemApertureCurtainViewHoster, SBSystemApertureViewControllerVisibilityDelegate, SBSystemApertureElementOrientationAuthority, SBSystemApertureBacklightSessionAggregator;

@interface SBSystemApertureViewController : SBFTouchPassThroughViewController <SBSystemApertureElementOrientationObserving, SBSystemApertureProximityBacklightPolicyDelegate, SBSystemApertureStatusBarPillElementProviderObserving, SAUISystemApertureManagerDelegate, SAUILayoutHosting, SAUILayoutHostingPrivate, SAAlertingConfiguring, SAUILayoutSpecifyingOverridingParticipant, SAUIElementViewControllingObserving, SABehaviorOverridingParticipant, SAElementHosting, SBSystemApertureContainerViewDelegate, SBSystemApertureElementOrientationAuthority, UIGestureRecognizerDelegate, SBFZStackParticipantDelegate, SBSystemApertureGestureHandling, SBSystemApertureElementAuthorityDelegate, SAElementRegistering, SBFBacklightEnvironmentSceneProviding, SBButtonEventsHandler> {
    SBSystemApertureWindowScene *_systemApertureWindowScene;
    id<SBSystemApertureViewControllerVisibilityDelegate> _visibilityDelegate;
    UIView *_containerSubBackgroundParent;
    UIView *_containerBackgroundParent;
    MTMaterialView *_variableBlurView;
    SBFTouchPassThroughView *_containerParent;
    id<SBSystemApertureCurtainViewHoster> _curtainViewHoster;
    _SBSystemApertureIndicatorContainerView *_indicatorContainerView;
    _UIPortalView *_indicatorContainerPortalView;
    UIView<SBSystemApertureGainMapBackedRendering> *_magiciansCurtainView;
    UIView<SBSystemApertureGainMapBackedRendering> *_highLevelMagiciansCurtainView;
    NSMutableArray *_orderedContainerViews;
    NSMutableSet *_containerViewsToRemove;
    SAUISystemApertureManager *_systemApertureManager;
    SBSystemApertureElementAuthority *_elementAuthority;
    id<SBSystemApertureElementOrientationAuthority> _elementOrientationAuthority;
    SBSystemApertureContainerView *_containerViewForActiveGesture;
    UIPanGestureRecognizer *_resizePanGesture;
    UILongPressGestureRecognizer *_interactionLongPressGesture;
    id<BSInvalidatable> _suppressTouchCancellationAssertion;
    UIGestureRecognizer *_coverSheetPresentationGesture;
    NSTimer *_interactionLongPressTimer;
    NSDate *_interactionBeganDate;
    long long _interactionGestureState;
    struct CGPoint { double x; double y; } _initialLocationInContainerViewForActiveGesture;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _initialFrameOfContainerViewForActiveGesture;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _minimumFrameOfContainerViewForActiveGesture;
    long long _resizeGestureResult;
    id<UIViewControllerTransitionCoordinator> _transitionCoordinator;
    SBSystemApertureSettings *_settings;
    NSMutableSet *_systemApertureSuppressionAssertions;
    NSSet *_sceneIDsPreferringSuppression;
    NSSet *_bundleIDsPreferringSuppression;
    NSMapTable *_reasonsToLayoutAssertions;
    long long _consensusBackgroundLuminanceLevel;
    NSCountedSet *_mitosisBlobEffectsRequiringReasons;
    NSCountedSet *_backlightAssertionRequiringReasons;
    id<BSInvalidatable> _liveUpdatingAssertion;
    long long _activeElementInterfaceOrientation;
    SBFZStackParticipant *_zStackParticipant;
    id<BSInvalidatable> _suppressForSystemChromeSuppressionAssertion;
    NSMutableSet *_transitionShadowAssertions;
    UIViewFloatAnimatableProperty *_animatablePropertyForTransitionToInert;
    UIViewFloatAnimatableProperty *_animatablePropertyForSuppressedKeyLineRestoration;
    _SBSystemApertureBouncingState *_bouncingState;
    NSString *_zoomRegistrationIdentifier;
    NSMutableArray *_activeOvershootingStates;
    long long _shakingPhase;
    _SBSystemApertureLayoutState *_activeLayoutState;
    long long _cloningStyle;
    SBSystemApertureKeyLineColorValidator *_colorValidator;
    NSPointerArray *_significantUpdateTransitionAssertions;
    NSMutableArray *_zoomAnimationAssertions;
    BOOL _zoomServicesReportedAXisZooming;
    BOOL _systemApertureContainsAnyContent;
    BOOL _suppressKeyLineForMitosis;
    BOOL _prefersSuppressionOfElementsDueToCoversheetVisibility;
    BOOL _prefersSuppressionOfElementsDueToSystemChromeSuppression;
    BOOL _hostedScenesMayHaveChanged;
    BOOL _shadowNeedsUpdate;
    BOOL _lastLayoutWasReboundingFromBounce;
}

@property (readonly, copy) NSArray *stateDump;
@property (weak, nonatomic) id<SBSystemApertureElementOrientationAuthority> elementOrientationAuthority;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) id<SBSystemApertureCurtainViewHoster> curtainViewHoster;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } minimumSensorRegionFrame;
@property (weak, nonatomic) id<SBSystemApertureViewControllerVisibilityDelegate> visibilityDelegate;
@property (nonatomic) long long cloningStyle;
@property (weak, nonatomic) id<SBSystemApertureBacklightSessionAggregator> backlightSessionAggregator;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) long long behaviorOverridingRole;

+ (id)_sharedFeedbackGenerator;

- (id)initWithWindowScene:(id)a0;
- (BOOL)handleHomeButtonLongPress;
- (void)_gestureRecognizerFailed:(id)a0;
- (id)scenesForBacklightSession;
- (BOOL)handleHomeButtonDoublePress;
- (BOOL)handleVolumeUpButtonPress;
- (BOOL)handleVoiceCommandButtonPress;
- (BOOL)handleHomeButtonPress;
- (BOOL)handleLockButtonPress;
- (BOOL)handleVolumeDownButtonPress;
- (BOOL)handleHeadsetButtonPress:(BOOL)a0;
- (BOOL)_canShowWhileLocked;
- (BOOL)shouldAutomaticallyForwardAppearanceMethods;
- (BOOL)gestureRecognizerShouldBegin:(id)a0;
- (BOOL)_handleButtonEventWithTest:(id /* block */)a0 handler:(id /* block */)a1;
- (BOOL)gestureRecognizer:(id)a0 shouldReceiveTouch:(id)a1;
- (void)zStackParticipant:(id)a0 updatePreferences:(id)a1;
- (void)dealloc;
- (void)viewDidLoad;
- (void)zStackParticipantDidChange:(id)a0;
- (void)traitCollectionDidChange:(id)a0;
- (id)_transitionCoordinator;
- (void)viewWillLayoutSubviews;
- (unsigned long long)supportedInterfaceOrientations;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (void).cxx_destruct;
- (void)viewDidLayoutSubviews;
- (id)_layoutMetrics;
- (id)_primaryContainerView;
- (void)_elementKeyColorWasInvalidated:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })interSensorRegionInContentView:(id)a0;
- (BOOL)systemApertureProximityBacklightPolicyShouldDisableGracePeriod:(id)a0;
- (BOOL)_abortInProgressShakeAnimation;
- (long long)_activeElementInterfaceOrientation;
- (id)_activeOvershootingState;
- (void)_addMitosisBlobEffects;
- (void)_addZoomAnimationAssertion;
- (struct CGSize { double x0; double x1; })_adjunctContainerMinimalViewSize;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_adjunctContainerViewFrameForContainerWithRank:(unsigned long long)a0 containerCount:(unsigned long long)a1 bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 sensorContainerViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3 layoutMode:(long long)a4 preferredEdgeOutsets:(struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })a5 interfaceOrientation:(long long)a6 layoutDirection:(long long)a7;
- (id)_animatablePropertyWithProgressMilestones:(id)a0 block:(id /* block */)a1;
- (void)_animateNegativeResponseForElement:(id)a0;
- (struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })_applySymmetryToPreferredLayoutOutsets:(struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })a0;
- (id)_associatedWindowScene;
- (BOOL)_axLayoutSpecifierRequestsCollapseIfExpandedByUserInteraction:(id)a0;
- (void)_axLayoutSpecifierRequestsDiminishment:(id)a0;
- (void)_axRegisterForZoomUpdatesIfNecessary;
- (void)_axRevealHiddenElementIfPossible;
- (BOOL)_axZoomActiveAndEnabled;
- (void)_axZoomLevelOrStandbyModeChanged;
- (BOOL)_bailForHandlingPanGestureDueToLandscapeOrientation;
- (void)_beginInteractionLongPressTimerIfNecessary;
- (void)_beginRequiringBacklightAssertionForReason:(id)a0;
- (void)_beginRequiringMitosisBlobEffectsForReason:(id)a0;
- (void)_beginTargetingInertStateIfNecessaryWithOrderedElementViewControllers:(id)a0;
- (id)_bounceAnimationSettingsForState:(id)a0;
- (id)_boundsDefaultSettings;
- (id)_boundsExpandingSettings;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_boundsForAdjunctContainerViewWithPreferredEdgeOutsets:(struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })a0 layoutDirection:(long long)a1;
- (id)_boundsResizingAnimationSettings:(BOOL)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_calculateStatusBarAvoidanceFrame;
- (BOOL)_canPurgeViewController:(id)a0;
- (void)_cleanupAfterLayout;
- (void)_cleanupViewControllerIfPossible:(id)a0;
- (BOOL)_collapseExpandedElementIfPossible;
- (void)_configureIndicatorContainerView;
- (void)_configureInteractionLongPressIfNecessary;
- (void)_configureVariableBlur;
- (id)_containerViewAncestorOfViewOfViewController:(id)a0;
- (id)_containerViewForGesture:(id)a0 initialLocationInContainerView:(out struct CGPoint { double x0; double x1; } *)a1;
- (id)_containerViewForLayoutSpecifier:(id)a0;
- (id)_containerViewForTouch:(id)a0 ofGestureRecognizer:(id)a1 initialLocation:(out struct CGPoint { double x0; double x1; } *)a2;
- (id)_containerViewForViewController:(id)a0;
- (id)_containerViewForViewController:(id)a0 includingOutgoing:(BOOL)a1;
- (id)_containerViewWithRank:(unsigned long long)a0;
- (id)_containerViewWithRank:(unsigned long long)a0 creatingIfNecessary:(BOOL)a1;
- (BOOL)_didContainerViewForActiveGestureCollapseWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)_elementConfigurationDescriptionForElement:(id)a0 inLayoutMode:(long long)a1;
- (id)_elementForContainerView:(id)a0;
- (id)_elementViewControllerForLayoutSpecifyingOverrider:(id)a0;
- (void)_endRequiringBacklightAssertionForReason:(id)a0;
- (void)_endRequiringMitosisBlobEffectsForReason:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_expandedBouncingContainerViewFrameForBounceStyle:(long long)a0 unexpandedFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForAdjunctContainerView:(id)a0 resizedWithGesture:(id)a1 initialLocationInContainerView:(struct CGPoint { double x0; double x1; })a2 initialContainerViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForContainerView:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForContainerView:(id)a0 resizedWithGesture:(id)a1 initialLocationInContainerView:(struct CGPoint { double x0; double x1; })a2 initialContainerViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForSensorRegionInBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForVariableBlurUnderContainerViewWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_handleInteractionLongPress:(id)a0;
- (void)_handleResizePan:(id)a0;
- (void)_handleResizeResult:(long long)a0 withContainerView:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_indicatorContainerViewFrameInBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_initialFrameForContainerView:(id)a0;
- (void)_interactionLongPressTimerDidEnd:(id)a0;
- (void)_invalidateInteractionLongPressTimer;
- (BOOL)_isAnyGestureRecognizerActive;
- (BOOL)_isGestureRecognizerActive:(id)a0;
- (BOOL)_isInteractionLongPressGestureActive;
- (BOOL)_isInteractiveHidingSupportedByElement:(id)a0;
- (BOOL)_isManualExpansionTransitionTargetingInertState:(BOOL)a0 orderedElementViewControllers:(id)a1;
- (BOOL)_isObjectTrackingTransitionForLayout:(id)a0;
- (BOOL)_isResizePanGestureActive;
- (BOOL)_isSystemGesture:(id)a0;
- (BOOL)_isTargetingInertOrIsInert;
- (id)_layoutAssertionWithMaximumPermittedLayoutMode:(long long)a0 reason:(id)a1 creatingIfNecessary:(BOOL)a2;
- (void)_layoutContainerViewsWithLayoutState:(id)a0 orderedElementViewControllers:(id)a1 animationSettings:(id)a2 transitionCoordinator:(id)a3;
- (id)_layoutSpecifyingOverriderForContainerView:(id)a0;
- (void)_layoutVariableBlurForContainerView:(id)a0 withFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 targetingInert:(BOOL)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_maximumContainerViewFrame;
- (struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })_maximumContainerViewOutsetsInBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inLayoutMode:(long long)a1;
- (long long)_mostRestrictiveLayoutModeFromActiveLayoutAssertions;
- (id)_newContainerViewHousingSensorRegion:(BOOL)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_portraitFrameForPrimaryContainerViewInBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withPreferredEdgeOutsets:(struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })a1 layoutDirection:(long long)a2;
- (struct CGSize { double x0; double x1; })_preferredMinSizeForCustomLayout:(long long)a0 elementInterfaceOrientation:(long long)a1;
- (void)_promote:(BOOL)a0 gestureRecognizer:(id)a1 toSystemGestureWithManager:(id)a2 type:(unsigned long long)a3;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_rectClippedToMaximumContainerFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_reduceTransparencyDidChange:(id)a0;
- (void)_reevaluateElementSuppression;
- (void)_reevaluateRenderingAndDisplayCloningConfigurationAfterLayout:(BOOL)a0;
- (void)_removeLayoutAssertionAndReevaluate:(id)a0;
- (void)_removeMitosisBlobEffects;
- (void)_resetContainerViewForActiveGestureIfPossible;
- (void)_setContainerForActiveGesture:(id)a0;
- (long long)_shadowStyleForContainerView:(id)a0 targetingInert:(BOOL)a1 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (BOOL)_shouldSuppressElement:(id)a0 allowsSuppressionForSystemChromeSuppression:(BOOL)a1;
- (id)_startOrRestartTemporaryKeyLineSuppressionForMitosis;
- (void)_triggerBounceAcceptResponse:(long long)a0 triggeredBlock:(id /* block */)a1;
- (void)_updateActiveElementInterfaceOrientation;
- (void)_updateAndLayoutIndicatorIfNecessary;
- (void)_updateContainerViewRanks;
- (void)_updateElementViewControllerReferences:(id)a0;
- (void)_updateElementViewControllersAndPerformLayout;
- (void)_updateKeyLineStyle;
- (void)_updatePreferredContentSizeCategoryForAllElements;
- (void)_updatePreferredContentSizeCategoryForElementViewController:(id)a0;
- (void)_updateRenderingStyle;
- (void)_updateStatusBarAvoidanceFrameWithAnimationSettings:(id)a0;
- (void)_updateStatusBarAvoidanceFrameWithAnimationSettings:(id)a0 options:(unsigned long long)a1;
- (void)_updateVariableBlurVisibility;
- (struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })_validatedEdgeOutsetsForPreferredOutsets:(struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })a0 maximumOutsets:(struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })a1;
- (double)_viewScaleForOvershoot;
- (double)_viewScaleForOvershootTargetingFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 fromFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (double)_viewScaleForOvershootTargetingInertState:(BOOL)a0 reboundingFromBounce:(id)a1 orderedElementViewControllers:(id)a2;
- (double)_yOffsetForCustomLayout:(long long)a0;
- (long long)activeElementInterfaceOrientationForSystemApertureElementOrientationObserver:(id)a0;
- (double)alertingDurationForHost:(id)a0;
- (void)animateNegativeResponse;
- (void)animateTransitionAcceptanceBounceWithVelocityVector:(struct CGPoint { double x0; double x1; })a0 triggeredBlock:(id /* block */)a1;
- (void)animateTransitionEjectionStretchWithVelocityVector:(struct CGPoint { double x0; double x1; })a0;
- (void)applyFailureRequirementsForCoverSheetPresentationGesture:(id)a0;
- (double)concentricPaddingForProvidedView:(id)a0 fromViewProvider:(id)a1;
- (struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })edgeOutsetsForSize:(struct CGSize { double x0; double x1; })a0;
- (void)elementOrientationDidChangeWithTransitionCoordinator:(id)a0;
- (void)elementRequestsCancellingResizeGesture:(id)a0;
- (void)elementRequestsNegativeResponse:(id)a0;
- (void)elementRequestsSignificantUpdateTransition:(id)a0;
- (void)elementViewControllingDidAppear:(id)a0;
- (void)elementViewControllingDidDisappear:(id)a0;
- (void)elementViewControllingWillAppear:(id)a0;
- (void)elementViewControllingWillDisappear:(id)a0;
- (BOOL)isRequestingMenuPresentationForTargetWithOverrider:(id)a0 isDefaultValue:(BOOL *)a1;
- (BOOL)isTransitionTargetForSceneIdentifier:(id)a0 bundleIdentifier:(id)a1;
- (id)keyLineColorValidatorForSystemApertureContainerView:(id)a0;
- (id)layoutModePreferenceForTargetWithOverrider:(id)a0 isDefaultValue:(BOOL *)a1;
- (void)menuPresentationRequestDidChangeForLayoutSpecifier:(id)a0;
- (id)parentViewForBackgroundForSystemApertureContainerView:(id)a0;
- (id)parentViewForSubBackgroundForSystemApertureContainerView:(id)a0;
- (void)preferredEdgeOutsetsDidInvalidateForLayoutSpecifier:(id)a0;
- (struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })preferredEdgeOutsetsForLayoutMode:(long long)a0 suggestedOutsets:(struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })a1 maximumOutsets:(struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })a2 forTargetWithOverrider:(id)a3 isDefaultValue:(BOOL *)a4;
- (void)preferredLayoutModeDidInvalidateForLayoutSpecifier:(id)a0;
- (id)registerElement:(id)a0;
- (id)requireHeavyShadowAssertionForTransition;
- (id)restrictSystemApertureToDefaultLayoutWithReason:(id)a0;
- (id)restrictSystemApertureToInertWithReason:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })sensorRegionInContentView:(id)a0 fromViewProvider:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })sensorRegionObstructingViewProvider:(id)a0 inContentView:(id)a1;
- (void)setLayoutMode:(long long)a0 reason:(long long)a1 forTargetWithOverrider:(id)a2;
- (void)statusBarStyleOverridesDidChangeWithoutUpdateFromProvider:(id)a0;
- (BOOL)systemApertureApertureElementAuthority:(id)a0 isActivityElementAlerting:(id)a1;
- (BOOL)systemApertureApertureElementAuthority:(id)a0 isElementExpandedDueToUserInteraction:(id)a1;
- (BOOL)systemApertureApertureElementAuthority:(id)a0 isElementRequiredToRemainVisible:(id)a1;
- (long long)systemApertureApertureElementAuthority:(id)a0 preferredLayoutModeForElement:(id)a1;
- (unsigned long long)systemApertureApertureElementAuthorityMaximumNumberOfSimultaneouslyVisibleElements:(id)a0;
- (double)systemApertureContainerView:(id)a0 cornerRadiusWithSuggestion:(double)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })systemApertureContainerView:(id)a0 hitRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 debugColor:(out id *)a2;
- (void)systemApertureContainerView:(id)a0 sampledLuminanceLevelChangedTo:(long long)a1;
- (void)systemApertureManagerIndicatorHostingDidChange:(BOOL)a0;
- (unsigned long long)systemApertureManagerMaximumNumberOfSimultaneouslyVisibleElements:(id)a0;
- (void)systemApertureManagerRequestsHostNeedsLayout:(id)a0;
- (BOOL)systemApertureManagerShouldUseOrderedElementViewControllers:(id)a0;
- (void)systemApertureProximityBacklightPolicy:(id)a0 embedProximityTouchTrackingView:(id)a1 touchBlockingView:(id)a2;
- (BOOL)systemApertureProximityBacklightPolicy:(id)a0 isSystemApertureElementVisibleAtPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)systemApertureProximityBacklightPolicy:(id)a0 removeProximityTouchTrackingView:(id)a1 touchBlockingView:(id)a2;
- (BOOL)systemApertureProximityBacklightPolicyShouldConsiderSystemApertureInert:(id)a0;
- (id)systemApertureRepresentationSuppressionAssertionForCoversheetVisibility;
- (id)systemApertureRepresentationSuppressionAssertionForSystemChromeSuppression;
- (double)viewProviderSensorShadowOpacityFactor:(id)a0;
- (BOOL)viewProviderShouldAvoidAppearanceTransitionInitialization:(id)a0;
- (BOOL)viewProviderShouldMakeSensorShadowVisible:(id)a0;

@end
