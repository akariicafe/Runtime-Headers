@class TUCall, NSString, CoreTelephonyClient, SBBluetoothController, SBAlertItem, NWSystemPathMonitor, STWifiStatusDomain, NSObject, STTelephonyStateProvider;
@protocol OS_dispatch_queue;

@interface SBTelephonyManager : NSObject <STTelephonyStateObserver> {
    struct __CTServerConnection { } *_serverConnection;
    BOOL _containsCellularRadio;
    BOOL _hasCellularTelephony;
    BOOL _hasCellularData;
    unsigned char _usingVPN : 1;
    NSObject<OS_dispatch_queue> *_wirelessModemDynamicStoreQueue;
    struct __SCDynamicStore { } *_queue_wirelessModemDynamicStore;
    struct __CFString { } *_queue_wirelessModemDynamicStoreSharingKey;
    BOOL _isNetworkTethering;
    int _numberOfNetworkTetheredDevices;
    unsigned char _hasShownWaitingAlert : 1;
    SBAlertItem *_activationAlertItem;
    int _numActivationFailures;
    int _inEmergencyCallbackMode;
    unsigned char _loggingCallAudio : 1;
    void *_queue_fastDormancySuspendAssertion;
    NWSystemPathMonitor *_systemPathMonitor;
}

@property (retain, nonatomic) TUCall *incomingCall;
@property (retain, nonatomic) TUCall *activeCall;
@property (retain, nonatomic) TUCall *heldCall;
@property (retain, nonatomic) TUCall *outgoingCall;
@property (retain, nonatomic) CoreTelephonyClient *coreTelephonyClient;
@property (readonly, nonatomic) STTelephonyStateProvider *telephonyStateProvider;
@property (readonly, nonatomic) STWifiStatusDomain *wifiDomain;
@property (readonly, nonatomic) SBBluetoothController *bluetoothController;
@property (copy, nonatomic) NSString *cachedSlot1CountryCode;
@property (copy, nonatomic) NSString *cachedSlot2CountryCode;
@property (copy, nonatomic) NSString *cachedSlot1SIMStatus;
@property (copy, nonatomic) NSString *cachedSlot2SIMStatus;
@property (readonly, nonatomic) unsigned long long dataConnectionAvailabilityWithCurrentCalls;
@property (nonatomic, getter=isCellDataSwitchingEnabled) BOOL cellDataSwitchingEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedTelephonyManager;
+ (struct __CTServerConnection { } *)defaultTelephonyCenter;
+ (id)sharedTelephonyManagerCreatingIfNecessary:(BOOL)a0;

- (void)swapCalls;
- (void)disconnectAllCalls;
- (id)displayedCall;
- (double)inCallDuration;
- (BOOL)inCall;
- (void)_avSystemControllerDidError:(id)a0;
- (unsigned long long)callCount;
- (BOOL)emergencyCallSupported;
- (void)_setIsNetworkTethering:(BOOL)a0 withNumberOfDevices:(int)a1;
- (void)telephonyAudioChangeHandler;
- (BOOL)outgoingCallExists;
- (void)setFastDormancySuspended:(BOOL)a0;
- (void)_updateState;
- (void)_serverConnectionDidError:(struct { int x0; int x1; })a0;
- (void)_provisioningUpdateWithStatus:(int)a0 slot:(long long)a1;
- (int)numberOfNetworkTetheredDevices;
- (void)_performQueryInBackground:(id /* block */)a0 withMainQueueResultHandler:(id /* block */)a1;
- (BOOL)isEndpointOnCurrentDevice;
- (BOOL)hasCellularTelephony;
- (id)_backgroundQueryQueue;
- (BOOL)hasCellularData;
- (BOOL)toggleBargeCallState;
- (void)preHeatDataLinkForDomains:(id)a0;
- (BOOL)inBargeCall;
- (void)queue_setFastDormancySuspended:(BOOL)a0 withConnection:(struct __CTServerConnection { } *)a1;
- (BOOL)activeCallExists;
- (id)_secondarySubscriptionInfo;
- (void)updateCalls;
- (long long)_secondarySubscriptionSlot;
- (unsigned long long)telephonyCallCount;
- (unsigned long long)faceTimeAudioCallCount;
- (BOOL)multipleCallsExist;
- (id)_secondaryMobileEquipmentInfo;
- (long long)_primarySubscriptionSlot;
- (void)setNetworkRegistrationEnabled:(BOOL)a0;
- (id)_primarySubscriptionInfo;
- (void)dumpBasebandState:(id)a0;
- (id)_secondaryCarrierBundleInfo;
- (id)_phoneApp;
- (void)carrierBundleInfoDidChangeForStateProvider:(id)a0 slot:(long long)a1;
- (void)_queue_noteWirelessModemDynamicStoreChanged;
- (BOOL)incomingCallExists;
- (BOOL)inCallUsingSpeakerOrReceiver;
- (BOOL)isInEmergencyCallbackMode;
- (id)_primaryCarrierBundleInfo;
- (id)_callsForService:(int)a0;
- (id)_subscriptionInfoForCall:(id)a0;
- (void)disconnectDisplayedCall;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)subscriptionInfoDidChangeForStateProvider:(id)a0 slot:(long long)a1;
- (void)_setCurrentActivationAlertItem:(id)a0;
- (long long)_dataPreferredSubscriptionSlotIfSIMPresent;
- (BOOL)hasNonCellularNetworkConnection;
- (BOOL)isEmergencyCallActive;
- (long long)_anySubscriptionSlotWithSIMPresent;
- (void)_updateNetworkLocale;
- (long long)_otherSubscriptionSlotIfSIMPresent:(long long)a0;
- (long long)_dataConnectedSubscriptionSlot;
- (void)disconnectCallAndActivateHeld;
- (BOOL)isTTYEnabled;
- (id)_primaryMobileEquipmentInfo;
- (void)_setIsInEmergencyCallbackMode:(unsigned char)a0;
- (id)init;
- (id)carrierDisabledApplicationIDs;
- (long long)_subscriptionSlotIfSIMPresent:(long long)a0;
- (BOOL)containsCellularRadio;
- (void)updateSpringBoard;
- (id)initWithStateProvider:(id)a0 wifiDomain:(id)a1 bluetoothController:(id)a2;
- (void)callEventHandler:(id)a0;
- (unsigned long long)_callCountForService:(int)a0;
- (void)_handleTelephonyDaemonRestart;
- (BOOL)isNetworkRegistrationEnabled;
- (BOOL)isUsingVPNConnection;
- (BOOL)isUsingSlowDataConnection;
- (BOOL)updateLocale;
- (void).cxx_destruct;
- (void)handleCallControlFailure:(id)a0;
- (void)disconnectIncomingCall;
- (BOOL)isNetworkTethering;
- (struct __CTServerConnection { } *)_serverConnection;
- (BOOL)heldCallExists;

@end
