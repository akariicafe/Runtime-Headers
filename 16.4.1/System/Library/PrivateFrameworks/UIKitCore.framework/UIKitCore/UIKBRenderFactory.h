@class UIKBRenderConfig, NSMutableArray, UIKBRenderingContext;

@interface UIKBRenderFactory : NSObject {
    BOOL _suppressSegmentTraits;
}

@property (readonly, nonatomic) NSMutableArray *segmentTraits;
@property (nonatomic) double rivenSizeFactor;
@property (nonatomic) BOOL lightweightFactory;
@property (nonatomic) BOOL increasedContrastEnabled;
@property (nonatomic) double scale;
@property (nonatomic) struct CGSize { double width; double height; } stretchFactor;
@property (retain, nonatomic) UIKBRenderingContext *renderingContext;
@property (readonly, getter=renderConfig) UIKBRenderConfig *renderConfig;
@property (nonatomic) BOOL allowsPaddles;
@property (nonatomic) BOOL preferStringKeycapOverImage;
@property (readonly, nonatomic) BOOL boldTextEnabled;
@property (nonatomic) BOOL drawsOneHandedAffordance;
@property (readonly, nonatomic) long long assetIdiom;
@property (nonatomic) BOOL dynamicFactory;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } dynamicInsets;
@property (readonly, nonatomic) double dynamicBottomRowMultiplier;

+ (BOOL)_enabled;
+ (id)_characterSetForGlyphSelectors;
+ (long long)_graphicsQuality;
+ (id)cacheKeyForString:(id)a0 withRenderFlags:(long long)a1 renderingContext:(id)a2;
+ (BOOL)couldUseGlyphSelectorForDisplayString:(id)a0;
+ (Class)factoryClassForVisualStyle:(struct { unsigned char x0 : 6; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 8; unsigned char x4 : 8; unsigned char x5 : 8; })a0 renderingContext:(id)a1;
+ (id)factoryForVisualStyle:(struct { unsigned char x0 : 6; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 8; unsigned char x4 : 8; unsigned char x5 : 8; })a0 renderingContext:(id)a1;
+ (id)factoryForVisualStyle:(struct { unsigned char x0 : 6; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 8; unsigned char x4 : 8; unsigned char x5 : 8; })a0 renderingContext:(id)a1 skipLayoutSegments:(BOOL)a2;
+ (id)lightweightFactoryForVisualStyle:(struct { unsigned char x0 : 6; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 8; unsigned char x4 : 8; unsigned char x5 : 8; })a0 renderingContext:(id)a1;
+ (id)segmentedControlColor:(BOOL)a0;

- (id)lightKeycapsFontName;
- (void).cxx_destruct;
- (struct CGPoint { double x0; double x1; })RivenPointFactor:(struct CGPoint { double x0; double x1; })a0;
- (double)keyCornerRadius;
- (id)passcodeShiftedControlKeyTraits;
- (double)RivenFactor:(double)a0;
- (id)biuKeyImageName;
- (id)cutKeyImageName;
- (id)spaceKeyGrabberHandlesImageName;
- (id)ZWNJKeyImageName;
- (id)_controlKeyBackgroundColorName;
- (void)_customizeTraits:(id)a0 forPopupForKey:(id)a1 withRenderingContext:(id)a2 keycapsFontName:(id)a3;
- (id)_defaultControlKeyBackgroundColorName;
- (id)_traitsForKey:(id)a0 onKeyplane:(id)a1;
- (void)addLayoutSegment:(id)a0;
- (BOOL)allowsPaddleForKey:(id)a0;
- (void)applyBoldTextForContent:(id)a0 withKey:(id)a1;
- (id)backgroundTraitsForKeyplane:(id)a0;
- (id)boldKeyImageName;
- (Class)contentViewClassForPopupKey:(id)a0;
- (id)controlKeyBackgroundColorName;
- (id)controlKeyForegroundColorName;
- (id)controlKeyShadowColorName;
- (id)copyKeyImageName;
- (void)customizeLanguageIndicatorTraitsForTraits:(id)a0;
- (void)customizeMicOnTraitsForTraits:(id)a0 lightKeyboard:(BOOL)a1 keyState:(int)a2;
- (id)defaultKeyBackgroundColorName;
- (id)defaultKeyShadowColorName;
- (id)deleteKeyImageName;
- (id)deleteOnKeyImageName;
- (id)dictationKeyImageName;
- (id)dismissKeyImageName;
- (id)displayContentsForKey:(id)a0;
- (struct CGPoint { double x0; double x1; })dualStringKeyBottomTextOffset:(id)a0 keyplane:(id)a1;
- (struct CGPoint { double x0; double x1; })dualStringKeyTopTextOffset:(id)a0 keyplane:(id)a1;
- (double)emojiPopupDividerKeyOffset;
- (long long)enabledBlendForm;
- (id)extraPasscodePaddleTraits;
- (id)globalEmojiKeyImageName;
- (id)globalKeyImageName;
- (long long)glyphSelectorForDisplayString:(id)a0;
- (id)handwritingMoreKeyImageName;
- (id)hashStringElement;
- (id)initWithRenderingContext:(id)a0 skipLayoutSegments:(BOOL)a1;
- (id)keyImageNameWithSkinnyVariation:(id)a0;
- (BOOL)keyIsRightToLeftSensitive:(id)a0;
- (id)leftArrowKeyImageName;
- (long long)lightHighQualityEnabledBlendForm;
- (id)lightPadKeycapsFontName;
- (id)lightTextFontName;
- (id)lowQualityLayeredBackgroundColorName;
- (void)lowQualityTraits:(id)a0;
- (id)messagesWriteboardKeyImageName;
- (void)modifyKeyTraitsForPasscode:(id)a0 forKey:(id)a1 onKeyplane:(id)a2;
- (void)modifyTraitsForDetachedInputSwitcher:(id)a0 withKey:(id)a1;
- (void)modifyTraitsForDividerVariant:(id)a0 withKey:(id)a1;
- (id)multitapCompleteKeyImageName;
- (id)muttitapReverseKeyImageName;
- (id)passcodeActiveControlKeyTraits;
- (id)passcodeBackgroundTraitsForKeyplane:(id)a0;
- (id)passcodeControlKeyTraits;
- (double)passcodeEdgeWeight;
- (id)passcodeKeyEdgeColorName;
- (id)pasteKeyImageName;
- (BOOL)popupKeyUsesCustomKeyContentView:(id)a0;
- (id)redoKeyImageName;
- (id)returnKeyImageName;
- (id)rightArrowKeyImageName;
- (void)scaleTraits:(id)a0;
- (void)setupLayoutSegments;
- (id)shiftKeyImageName;
- (id)shiftLockImageName;
- (id)shiftOnKeyImageName;
- (BOOL)shouldClearBaseDisplayStringForVariants:(id)a0;
- (double)skinnyKeyThreshold;
- (BOOL)supportsInputTraits:(id)a0 forKeyplane:(id)a1;
- (void)suppressLayoutSegments;
- (id)thinKeycapsFontName;
- (id)thinTextFontName;
- (id)traitsForKey:(id)a0 onKeyplane:(id)a1;
- (id)traitsHashStringForKey:(id)a0 withGeometry:(id)a1 withSymbolStyle:(id)a2 controlOpacities:(BOOL)a3 blurBlending:(BOOL)a4;
- (double)translucentGapWidth;
- (id)undoKeyImageName;
- (BOOL)useBlueThemingForKey:(id)a0;

@end
