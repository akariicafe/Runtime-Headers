@class _UIDatePickerStyle, NSString, NSDate, NSCalendar, UIView, NSDictionary, NSLocale, NSTimeZone, _UIDatePickerOverlayPresentation, _UIDatePickerDataModel, UIColor;
@protocol _UIDatePickerViewComponent, _UIDatePickerCompactStyleDelegate;

@interface UIDatePicker : UIControl <UIPickerViewScrollTesting, NSCoding> {
    struct { unsigned int selectionBarIgnoresInset; } _datePickerViewFlags;
    UIView<_UIDatePickerViewComponent> *_pickerView;
    _UIDatePickerDataModel *_data;
    BOOL _useCurrentDateDuringDecoding;
    BOOL _ignoresEmitValueChanged;
}

@property (readonly, nonatomic) _UIDatePickerStyle *_style;
@property (weak, nonatomic) _UIDatePickerOverlayPresentation *_overlayPresentation;
@property (nonatomic) double timeInterval;
@property (nonatomic, setter=_setDisplaysTimeZone:) BOOL _displaysTimeZone;
@property (weak, nonatomic, setter=_setCompactStyleDelegate:) id<_UIDatePickerCompactStyleDelegate> _compactStyleDelegate;
@property (retain, nonatomic, setter=_setOverrideCompactTextAttributes:) NSDictionary *_overrideCompactTextAttributes;
@property (nonatomic, getter=_usesBlackChrome, setter=_setUsesBlackChrome:) BOOL usesBlackChrome;
@property (nonatomic, getter=_drawsBackground, setter=_setDrawsBackground:) BOOL drawsBackground;
@property (nonatomic, getter=_useCurrentDateDuringDecoding, setter=_setUseCurrentDateDuringDecoding:) BOOL useCurrentDateDuringDecoding;
@property (nonatomic, setter=_setRoundsToMinuteInterval:) BOOL _roundsToMinuteInterval;
@property (nonatomic, getter=_allowsZeroCountDownDuration, setter=_setAllowsZeroCountDownDuration:) BOOL allowsZeroCountDownDuration;
@property (nonatomic, getter=_allowsZeroTimeInterval, setter=_setAllowsZeroTimeInterval:) BOOL allowsZeroTimeInterval;
@property (readonly, nonatomic, getter=_dateUnderSelectionBar) NSDate *dateUnderSelectionBar;
@property (retain, nonatomic, getter=_highlightColor, setter=_setHighlightColor:) UIColor *highlightColor;
@property (retain, nonatomic, getter=_textColor, setter=_setTextColor:) UIColor *textColor;
@property (retain, nonatomic, getter=_textShadowColor, setter=_setTextShadowColor:) UIColor *textShadowColor;
@property (retain, nonatomic, getter=_magnifierLineColor, setter=_setMagnifierLineColor:) UIColor *magnifierLineColor;
@property (readonly, nonatomic, getter=_contentWidth) double contentWidth;
@property (readonly, nonatomic, getter=_isTimeIntervalMode) BOOL isTimeIntervalMode;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } _appliedInsetsToEdgeOfContent;
@property (nonatomic, setter=_setSelectionBarIgnoresInset:) BOOL _selectionBarIgnoresInset;
@property (retain, nonatomic, getter=_customFontDesign, setter=_setCustomFontDesign:) NSString *customFontDesign;
@property (nonatomic) long long datePickerMode;
@property (retain, nonatomic) NSLocale *locale;
@property (copy, nonatomic) NSCalendar *calendar;
@property (retain, nonatomic) NSTimeZone *timeZone;
@property (retain, nonatomic) NSDate *date;
@property (retain, nonatomic) NSDate *minimumDate;
@property (retain, nonatomic) NSDate *maximumDate;
@property (nonatomic) double countDownDuration;
@property (nonatomic) long long minuteInterval;
@property (nonatomic) long long preferredDatePickerStyle;
@property (readonly, nonatomic) long long datePickerStyle;
@property (nonatomic) BOOL roundsToMinuteInterval;

+ (void)_prepareStyleStorageIfNecessary;
+ (id)_styleForIdiom:(long long)a0;
+ (void)_registerStyle:(id)a0 forIdiom:(long long)a1;

- (id)_systemDefaultFocusGroupIdentifier;
- (int)second;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (unsigned long long)_controlEventsForActionTriggered;
- (void)awakeFromNib;
- (void)setContentHorizontalAlignment:(long long)a0;
- (void)encodeWithCoder:(id)a0;
- (BOOL)becomeFirstResponder;
- (id)calendar;
- (void)setTimeZone:(id)a0;
- (void)setCalendar:(id)a0;
- (void)setLocale:(id)a0;
- (id)initWithCoder:(id)a0;
- (struct CGSize { double x0; double x1; })_intrinsicSizeWithinSize:(struct CGSize { double x0; double x1; })a0;
- (void)_populateArchivedSubviews:(id)a0;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (double)timeInterval;
- (int)minute;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)_contentHuggingDefault_isUsuallyFixedWidth;
- (void)setDelegate:(id)a0;
- (void)layoutMarginsDidChange;
- (void)setDate:(id)a0;
- (void)setBackgroundColor:(id)a0;
- (id)date;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)dateComponents;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (void)setEnabled:(BOOL)a0;
- (void)traitCollectionDidChange:(id)a0;
- (BOOL)resignFirstResponder;
- (int)hour;
- (void)invalidateIntrinsicContentSize;
- (id)timeZone;
- (void)setTimeInterval:(double)a0;
- (void).cxx_destruct;
- (id)locale;
- (void)_registerObservers;
- (void)_emitEndEditing;
- (void)setMaximumDate:(id)a0;
- (void)setMinimumDate:(id)a0;
- (void)_compactStyleSetActiveComponent:(long long)a0;
- (void)_datePickerReset:(id)a0;
- (void)_emitBeginEditing;
- (void)_emitValueChanged;
- (void)_installPickerView:(id)a0 updatingSize:(BOOL)a1;
- (id)_labelTextForCalendarUnit:(unsigned long long)a0;
- (id)_lastSelectedDateComponents;
- (void)_performScrollTest:(id)a0 withIterations:(long long)a1 rowsToScroll:(long long)a2 inComponent:(long long)a3;
- (id)_selectedTextForCalendarUnit:(unsigned long long)a0;
- (void)_setHidesLabels:(BOOL)a0;
- (void)_setHighlightsToday:(BOOL)a0;
- (void)_setUpInitialValues;
- (void)_todayChanged:(id)a0;
- (void)_updatePickerDateFromOldDate:(id)a0 animated:(BOOL)a1;
- (void)_updatePickerViewIfNecessary;
- (void)_workaround66574039_updateLayoutMargins;
- (double)countDownDuration;
- (long long)datePickerMode;
- (id)maximumDate;
- (id)minimumDate;
- (long long)minuteInterval;
- (void)setCountDownDuration:(double)a0;
- (void)setDate:(id)a0 animate:(BOOL)a1;
- (void)setDate:(id)a0 animated:(BOOL)a1;
- (void)setDateComponents:(id)a0;
- (void)setDatePickerMode:(long long)a0;
- (void)setHighlightsToday:(BOOL)a0;
- (void)setMinuteInterval:(long long)a0;
- (void)setStaggerTimeIntervals:(BOOL)a0;

@end
