@class NSData, NSString, NSArray, NSDate, NSURL, APSConnection, NSDictionary, DMCJobQueue, MDMServerAppInstallBlocking, NSObject, NSNumber;
@protocol OS_dispatch_queue;

@interface MDMServerCore : NSObject <UMUserSwitchStakeholder, APSConnectionDelegate, MDMXPCProtocol, MDMUserXPCProtocol> {
    unsigned int _reauthMAIDNotifyToken;
}

@property (retain, nonatomic) MDMServerAppInstallBlocking *appInstallBlocker;
@property (readonly, copy, nonatomic) NSString *daemonIdentifier;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *memberQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *notificationQueue;
@property (readonly, nonatomic) DMCJobQueue *jobQueue;
@property (nonatomic) BOOL memberQueueIsMDMConfigurationValid;
@property (nonatomic) BOOL memberQueueIsUprooting;
@property (nonatomic) BOOL memberQueueLastResponseWasNotNow;
@property (nonatomic) BOOL memberQueuePinningRevocationCheckRequired;
@property (nonatomic) BOOL memberQueueSignMessage;
@property (nonatomic) BOOL memberQueueUseDevelopmentAPNS;
@property (nonatomic) BOOL memberQueueUseEnrollmentID;
@property (nonatomic) BOOL memberQueueUserSwitchAlreadyInitiated;
@property (nonatomic) unsigned long long memberQueueAccessRights;
@property (nonatomic) int memberQueuePowerAssertionDeassertedNotificationToken;
@property (retain, nonatomic) APSConnection *memberQueueDevAPSConnection;
@property (retain, nonatomic) APSConnection *memberQueueProdAPSConnection;
@property (retain, nonatomic) NSArray *memberQueueCheckInPinnedSecCertificateRefs;
@property (retain, nonatomic) NSArray *memberQueueServerPinnedSecCertificateRefs;
@property (retain, nonatomic) NSData *memberQueuePushToken;
@property (retain, nonatomic) NSDate *memberQueueLastPollingAttempt;
@property (retain, nonatomic) NSDate *memberQueueLastPollingSuccess;
@property (retain, nonatomic) NSDictionary *memberQueueCachedResponse;
@property (retain, nonatomic) NSDictionary *memberQueueMDMOptions;
@property (retain, nonatomic) NSDictionary *memberQueueOrganizationInfo;
@property (retain, nonatomic) NSNumber *memberQueueLastPollingAttemptMonotonicTime;
@property (retain, nonatomic) NSNumber *memberQueueLastPollingAttemptRTCResetCount;
@property (retain, nonatomic) NSNumber *memberQueueLastPollingSuccessMonotonicTime;
@property (retain, nonatomic) NSNumber *memberQueueLastPollingSuccessRTCResetCount;
@property (retain, nonatomic) NSNumber *memberQueuePollingInterval;
@property (retain, nonatomic) NSString *memberQueueCommandUUID;
@property (retain, nonatomic) NSString *memberQueueEnrollmentID;
@property (retain, nonatomic) NSString *memberQueueManagingProfileIdentifier;
@property (retain, nonatomic) NSString *memberQueuePushMagic;
@property (retain, nonatomic) NSString *memberQueueTopic;
@property (retain, nonatomic) NSURL *memberQueueCheckInURL;
@property (retain, nonatomic) NSURL *memberQueueServerURL;
@property (nonatomic) struct __SecIdentity { } *memberQueueIdentity;
@property (copy, nonatomic) id /* block */ executionQueuePushTokenWaitContinuationBlock;
@property (nonatomic) BOOL executionQueueIsCheckinInProgress;
@property (nonatomic) int keybagEventToken;
@property (nonatomic) int buddyDoneEventToken;
@property (nonatomic) BOOL isObservingReachability;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *appBlockQueue;
@property (copy, nonatomic) id /* block */ appBlockCompletionBlock;
@property (nonatomic) unsigned long long channelType;
@property (copy, nonatomic) NSDictionary *organizationInfo;
@property (readonly, copy, nonatomic) NSString *organizationName;
@property (readonly, copy, nonatomic) NSString *serverName;
@property (copy, nonatomic) NSDictionary *MDMOptions;
@property (readonly, copy, nonatomic) NSDictionary *softwareUpdatePathFromDisk;
@property (nonatomic) BOOL userSwitchAlreadyInitiated;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)willSwitchUser;
- (void)connection:(id)a0 didReceivePublicToken:(id)a1;
- (void)unblockAppInstallsWithCompletion:(id /* block */)a0;
- (void)connection:(id)a0 didReceiveMessageForTopic:(id)a1 userInfo:(id)a2;
- (void)_currentLocaleDidChange:(id)a0;
- (void)_networkReachabilityDidChange;
- (void)blockAppInstallsWithCompletion:(id /* block */)a0;
- (void)dealloc;
- (id)_mdmPropertiesFilePathForChannelType:(unsigned long long)a0;
- (void).cxx_destruct;
- (id)_cachedResponse;
- (void)pushTokenWithCompletion:(id /* block */)a0;
- (id)_userFieldsForResponse;
- (void)getAssertionDescriptionsWithCompletion:(id /* block */)a0;
- (id)initWithChannelType:(unsigned long long)a0;
- (void)migrateMDMWithContext:(int)a0 completion:(id /* block */)a1;
- (void)notifyNewConfigurationWithCompletion:(id /* block */)a0;
- (void)processDeviceRequest:(id)a0 encodeResponse:(BOOL)a1 completion:(id /* block */)a2;
- (void)processUserRequest:(id)a0 encodeResponse:(BOOL)a1 completion:(id /* block */)a2;
- (void)reauthenticationCompleteWithCompletion:(id /* block */)a0;
- (void)requestInstallOfAppsInRestoreWithCompletion:(id /* block */)a0;
- (void)retryNotNowWithCompletion:(id /* block */)a0;
- (void)scheduleTokenUpdateIfNecessaryWithCompletion:(id /* block */)a0;
- (void)scheduleTokenUpdateWithCompletion:(id /* block */)a0;
- (void)simulatePushIfNetworkTetheredWithCompletion:(id /* block */)a0;
- (void)simulatePushWithCompletion:(id /* block */)a0;
- (void)touchWithCompletion:(id /* block */)a0;
- (void)uprootMDMWithCompletion:(id /* block */)a0;
- (unsigned int)_cancelDispatchNotificationWithToken:(unsigned int)a0;
- (void)_changeOrganizationNameForRMAccountIdentifier:(id)a0 personaID:(id)a1 organizationName:(id)a2;
- (void)_clearCachedResponse;
- (void)_clearCoreFollowup;
- (void)_clearMAIDNotification;
- (id)_createBadInstallationError;
- (void)_executeBlockWhenPushTokenIsAvailable:(id /* block */)a0;
- (void)_executionQueueCheckForOutstandingActivityIsReachabilityEvent:(BOOL)a0 assertion:(id)a1 completionBlock:(id /* block */)a2;
- (void)_executionQueueHandleRequest:(id)a0 assertion:(id)a1 completionBlock:(id /* block */)a2;
- (void)_executionQueuePollServerForCommandWithAssertion:(id)a0 completionBlock:(id /* block */)a1;
- (void)_executionQueueRemoveMDMProfileWithAssertion:(id)a0;
- (void)_executionQueueTellServerAboutDeviceTokenWithAssertion:(id)a0 completionBlock:(id /* block */)a1;
- (void)_executionQueueUpdateTokenIfNeededAndCheckForOutstandingActivityIsReachabilityEvent:(BOOL)a0 assertion:(id)a1 completionBlock:(id /* block */)a2;
- (BOOL)_handleHTTPStatusGoneResponse;
- (id)_httpErrorFromTransaction:(id)a0 assertion:(id)a1 rmAccountID:(id)a2 enrollmentMode:(id)a3 reauthQueue:(id)a4;
- (id)_idleResponse;
- (BOOL)_isMAIDNotificationActive;
- (BOOL)_isTokenUpdateScheduled;
- (void)_keybagStateDidChange;
- (void)_listenForManagedAppleAccountLongLivedTokenChangedNotificationsOnQueue:(id)a0 perform:(id /* block */)a1;
- (id)_mdmFilePathForChannelType:(unsigned long long)a0;
- (id)_mdmOutstandingActivitiesFilePathForChannelType:(unsigned long long)a0;
- (id)_memberQueueCachedResponse;
- (void)_memberQueueDecrementTokenUpdateRequestCount;
- (void)_memberQueueForgetCurrentConfiguration;
- (void)_memberQueueIncrementTokenUpdateRequestCount;
- (id)_memberQueueLastPushTokenHash;
- (BOOL)_memberQueueParseMDMConfigurationDict:(id)a0;
- (void)_memberQueuePollOrScheduleNextPollForHRN;
- (id)_memberQueuePushMagicMismatchDateMarker;
- (void)_memberQueueRemoveOutstandingActivityForKey:(id)a0;
- (void)_memberQueueSetCachedResponse:(id)a0;
- (void)_memberQueueSetLastPollingAttempt;
- (void)_memberQueueSetLastPollingSuccess;
- (void)_memberQueueSetLastPushTokenHash:(id)a0;
- (void)_memberQueueSetOutstandingActivity:(id)a0 forKey:(id)a1;
- (void)_memberQueueSetPushMagicMismatchDateMarker:(id)a0;
- (void)_memberQueueSetTokenUpdateRequestCount:(long long)a0;
- (void)_memberQueueSetupAPSConnectionIfNeeeded:(BOOL)a0 valid:(BOOL)a1;
- (void)_memberQueueSetupAPSConnectionIsMDMConfigurationValid:(BOOL)a0 isUserDaemon:(BOOL)a1;
- (void)_memberQueueStartListeningForInterestingEvents;
- (void)_memberQueueStopListeningForInterestingEvents;
- (long long)_memberQueueTokenUpdateCount;
- (void)_memberQueueUpdateMDMConfiguration:(id)a0 organizationInfo:(id)a1;
- (void)_memberQueueWriteDict:(id)a0 toMDMConfigurationFileForChannel:(unsigned long long)a1 shouldNotify:(BOOL)a2;
- (void)_pollFromServerIfNeeded:(BOOL)a0 isReachabilityEvent:(BOOL)a1 completionHandler:(id /* block */)a2;
- (void)_pollOrScheduleNextPollForHRN;
- (void)_pollingFailed;
- (void)_pollingSucceeded;
- (void)_postReauthFollowUpChangedNotification;
- (id)_prefixNameForChannelType:(unsigned long long)a0;
- (void)_presentFollowUpForAuthURL:(id)a0 accountUsername:(id)a1 isMAIDAccount:(BOOL)a2;
- (void)_processRequest:(id)a0 encodeResponse:(BOOL)a1 completion:(id /* block */)a2;
- (id)_processTraditionalErrorFromTransaction:(id)a0;
- (id)_processTraditionalUnauthorizedFromTransaction:(id)a0 assertion:(id)a1;
- (id)_processUnauthorizedFromTransaction:(id)a0 authParams:(id)a1 rmAccountID:(id)a2 rmAccountUsername:(id)a3 reauthQueue:(id)a4;
- (id)_processUserChannelUnauthorizedFromTransaction:(id)a0 rmAccountID:(id)a1 reauthQueue:(id)a2;
- (BOOL)_readConfigurationOutError:(id *)a0 isUproot:(BOOL)a1;
- (id)_reasonStringWithReason:(id)a0;
- (void)_registerAsUserSwitchStakeholder;
- (unsigned int)_registerForDispatchNotification:(id)a0 outToken:(int *)a1 targetQueue:(id)a2 handler:(id /* block */)a3;
- (id)_responseDataFromResponseDictionary:(id)a0;
- (void)_scheduleNextPollWithInterval:(double)a0;
- (void)_schedulePollingServerForCommand;
- (void)_sendResponse:(id)a0 completionBlock:(id /* block */)a1;
- (id)_sendResponseSynchornously:(id)a0;
- (void)_setCachedResponse:(id)a0;
- (void)_setLastPollingAttempt;
- (void)_setLastPollingSuccess;
- (void)_setTokenUpdateRequestCountToZero;
- (long long)_tokenUpdateCount;
- (id)_transactionForResponse:(id)a0;
- (id)_triggerReauthenticationForTransaction:(id)a0 authenticator:(id)a1 authParams:(id)a2 rmAccountID:(id)a3 rmAccountUsername:(id)a4;
- (id)_triggerRefreshTokenForTransaction:(id)a0 authenticator:(id)a1 authParams:(id)a2 rmAccountID:(id)a3 rmAccountUsername:(id)a4 reauthQueue:(id)a5;
- (void)buddyDidFinish;
- (BOOL)isAppInstallBlocked;
- (id)responseFromBasicResponse:(id)a0;
- (id)sendResponseSynchronously:(id)a0 outStatusCode:(long long *)a1 outError:(id *)a2;
- (BOOL)startOutError:(id *)a0;

@end
