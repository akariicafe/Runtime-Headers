@class NSMutableDictionary, _SBUISystemApertureAlertingAssertion, SBUISystemApertureElementConfiguration, SBUISystemApertureElementTransitionContext, UIWindowScene, UIViewController, NSMutableArray, SBUIDependencyGestureRecognizer, NSLayoutConstraint, SBUISystemApertureAnimationParameters, _SBUISystemApertureElementSourceAnimationContext, NSHashTable, NSString, UIScene, UIView, NSArray, BSSettings, UIWindow;
@protocol SBUISystemApertureElementProviding, SBUISystemApertureElement;

@interface SBUISystemApertureElementSource : NSObject <_UISceneComponentProviding, _UISceneSettingsDiffAction, UIGestureRecognizerDelegate, SBUISystemApertureHostedElementContext> {
    NSMutableDictionary *_constraintsByLayoutMode;
}

@property (weak, nonatomic) UIWindowScene *windowScene;
@property (retain, nonatomic) UIWindow *systemApertureOwnedWindow;
@property (weak, nonatomic) UIViewController<SBUISystemApertureElement> *_elementViewController;
@property (readonly, nonatomic) SBUISystemApertureElementConfiguration *mutableConfiguration;
@property (copy, nonatomic) BSSettings *lastKnownOtherSettings;
@property (retain, nonatomic) NSHashTable *_observers;
@property (readonly, nonatomic) NSMutableArray *transitionContexts;
@property (nonatomic) long long layoutModeAsFarAsClientsAreConcerned;
@property (nonatomic) BOOL elementHasMenuPresentation;
@property (copy, nonatomic) NSArray *_activeConstraintsForLayoutMode;
@property (copy, nonatomic) NSLayoutConstraint *_maximumLeadingViewWidthConstraint;
@property (copy, nonatomic) NSLayoutConstraint *_maximumTrailingViewWidthConstraint;
@property (retain, nonatomic) SBUIDependencyGestureRecognizer *dependencyGestureRecognizer;
@property (retain, nonatomic, getter=_alertingAssertion, setter=_setAlertingAssertion:) _SBUISystemApertureAlertingAssertion *alertingAssertion;
@property (nonatomic) BOOL elementCanRequestAlertingAssertion;
@property (retain, nonatomic) SBUISystemApertureAnimationParameters *localSceneResizeParameters;
@property (readonly, nonatomic) _SBUISystemApertureElementSourceAnimationContext *animationContext;
@property (readonly, nonatomic) NSString *associatedScenePersistenceIdentifier;
@property (weak, nonatomic, getter=_scene, setter=_setScene:) UIScene *_scene;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<SBUISystemApertureElementProviding> systemApertureElementProvider;
@property (readonly, nonatomic) UIViewController<SBUISystemApertureElement> *systemApertureElement;
@property (weak, nonatomic) id<SBUISystemApertureElementProviding> systemApertureElementViewControllerProvider;
@property (readonly, nonatomic) long long layoutMode;
@property (readonly, nonatomic, getter=isPresentationPossible) BOOL presentationPossible;
@property (weak, nonatomic) UIView *containerView;
@property (readonly, weak, nonatomic) UIView *layoutGuideRootView;
@property (readonly, nonatomic, getter=isFallbackContext) BOOL fallbackContext;
@property (readonly, nonatomic) SBUISystemApertureElementTransitionContext *transitionContext;

+ (void)_addSource:(id)a0;
+ (void)_removeSource:(id)a0;
+ (id)openSources;
+ (id)unassociatedContext;

- (void)_contentSizeCategoryDidChange;
- (void)_enumerateObserversRespondingToSelector:(SEL)a0 usingBlock:(id /* block */)a1;
- (id)initWithScene:(id)a0;
- (id)_settingsDiffActionsForScene:(id)a0;
- (id)descriptionBuilderWithMultilinePrefix:(id)a0;
- (void)_performActionsForUIScene:(id)a0 withUpdatedFBSScene:(id)a1 settingsDiff:(id)a2 fromSettings:(id)a3 transitionContext:(id)a4 lifecycleActionType:(unsigned int)a5;
- (id)succinctDescriptionBuilder;
- (void)addObserver:(id)a0;
- (void)_sceneWillInvalidate:(id)a0;
- (void)_scene:(id)a0 didTransitionFromActivationState:(long long)a1 withReasonsMask:(unsigned long long)a2;
- (id)containerViewController;
- (void)dealloc;
- (void)removeObserver:(id)a0;
- (id)succinctDescription;
- (id)init;
- (id)descriptionWithMultilinePrefix:(id)a0;
- (void)_sendActions:(id)a0;
- (id)_sceneSettings;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (void).cxx_destruct;
- (id)_FBSScene;
- (id)requestAlertingAssertion;
- (void)requestNegativeResponseAnimation;
- (void)setElementNeedsUpdate;
- (void)setElementNeedsUpdateWithCoordinatedAnimations:(id /* block */)a0;
- (id)systemApertureElementViewController;
- (BOOL)_elementSupportsDynamicResizing;
- (void)_handleGestureDependencyChange:(id)a0;
- (void)_activateConstraintsForActiveLayoutModeIfNeeded:(long long)a0;
- (void)_activateConstraintsForLayoutMode:(long long)a0;
- (void)_animateWithSceneResizeAction:(id)a0;
- (void)_conformsToSystemApertureElementContextPrivate;
- (void)_conformsToSystemApertureHostedElementContext;
- (id)_constraintsForLayoutMode:(long long)a0;
- (BOOL)_elementIsInAWindow;
- (BOOL)_elementRequiresConstraintBasedLayout;
- (void)_ensureAccessoryView:(id)a0 hasLayoutFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)_ensureAccessoryViewLayoutForTransitionWithAnimator:(id)a0;
- (void)_ensureElementViewControllerIsInAWindow;
- (void)_handleAlertingAction:(id)a0;
- (BOOL)_handleSceneResizeAction:(id)a0;
- (BOOL)_isPresentationPossibleAndSceneForeground;
- (BOOL)_performElementUpdate;
- (BOOL)_performElementUpdateWithActions:(id)a0;
- (BOOL)_performElementUpdateWithActionsIfPossible:(id)a0;
- (void)_sendActionForCommand:(long long)a0;
- (void)_updateElementCanRequestAlertingAssertion;
- (void)_updateTraitCollectionForElementIfNeeded;
- (BOOL)_wantsCenteredCustomLayout;
- (void)_windowDidAttachToContext:(id)a0;
- (void)addTransitionContext:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })anchorFrameForDetachedMinimalView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })anchorFrameForLeadingView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })anchorFrameForMinimalView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })anchorFrameForTrailingView;
- (void)elementDidDismissMenu;
- (void)elementWillPresentMenu;
- (void)registerWithScene:(id)a0;
- (void)removeTransitionContext:(id)a0;
- (void)requestTransitionToMaximumSupportedLayoutMode;
- (void)requestTransitionToPreferredLayoutMode;
- (void)setElementNeedsLayoutUpdateWithOptions:(unsigned long long)a0 coordinatedAnimations:(id /* block */)a1;
- (void)setPresentationPossible:(BOOL)a0;
- (void)unregisterFromScene;
- (void)validateConfiguration;

@end
