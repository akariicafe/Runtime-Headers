@class GKInvite, NSString, GKEventEmitter, UIAlertView, NSInvocation, NSError;
@protocol GKLocalPlayerListenerPrivate;

@interface GKLocalPlayer : GKPlayer <NSCoding, NSSecureCoding, GKSavedGameListener>

@property (class, readonly) BOOL supportsSecureCoding;
@property (class, readonly) GKLocalPlayer *local;
@property (class, readonly) GKLocalPlayer *localPlayer;

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic) id /* block */ validateAccountCompletionHandler;
@property (retain, nonatomic) UIAlertView *loginAlertView;
@property (nonatomic) UIAlertView *currentAlert;
@property (retain, nonatomic) NSInvocation *currentFriendRequestInvocation;
@property (nonatomic) BOOL didAuthenticate;
@property (nonatomic) BOOL validatingAccount;
@property (nonatomic) BOOL enteringForeground;
@property (nonatomic) BOOL appIsInBackground;
@property (copy, nonatomic) id /* block */ authenticateHandler;
@property (nonatomic, getter=isAuthenticated) BOOL authenticated;
@property (readonly, nonatomic, getter=isAuthenticating) BOOL authenticating;
@property (nonatomic) unsigned long long authenticationState;
@property (nonatomic) NSError *authenticationError;
@property (nonatomic) BOOL insideAuthenticatorInvocation;
@property (nonatomic) BOOL isShowingFriendRequestUI;
@property (retain, nonatomic) NSString *accountName;
@property (retain, nonatomic) NSString *firstName;
@property (retain, nonatomic) NSString *lastName;
@property (retain, nonatomic) GKInvite *acceptedInvite;
@property (readonly, nonatomic, getter=isAvatarEditingRestricted) BOOL avatarEditingRestricted;
@property (nonatomic, getter=isPurpleBuddyAccount) BOOL purpleBuddyAccount;
@property (nonatomic, getter=isDefaultNickname) BOOL defaultNickname;
@property (nonatomic, getter=isDefaultPrivacyVisibility) BOOL defaultPrivacyVisibility;
@property (nonatomic, getter=isDefaultContactsIntegrationConsent) BOOL defaultContactsIntegrationConsent;
@property (readonly, nonatomic) long long environment;
@property (readonly, nonatomic) BOOL allowNearbyMultiplayer;
@property (nonatomic, getter=isNewToGameCenter) BOOL newToGameCenter;
@property (readonly, nonatomic, getter=isFindable) BOOL findable;
@property (retain, nonatomic) GKEventEmitter<GKLocalPlayerListenerPrivate> *eventEmitter;
@property (nonatomic, getter=isShowingInGameUI) BOOL showingInGameUI;
@property (nonatomic) BOOL shouldPreserveOnboardingUI;
@property (nonatomic) double authStartTimeStamp;
@property (nonatomic) unsigned long long authenticationType;
@property (readonly, nonatomic, getter=isUnderage) BOOL underage;
@property (readonly, nonatomic, getter=isMultiplayerGamingRestricted) BOOL multiplayerGamingRestricted;
@property (readonly, nonatomic, getter=isPersonalizedCommunicationRestricted) BOOL personalizedCommunicationRestricted;

+ (void)performAsync:(id /* block */)a0;
+ (id)authenticatedLocalPlayersWithStatus:(unsigned long long)a0;
+ (id)authenticatedLocalPlayers;
+ (id)authenticatedLocalPlayersFiltered:(long long)a0;
+ (void)loadHighlightsDataWithCompletionHandler:(id /* block */)a0;
+ (id)localPlayers;
+ (void)performSync:(id /* block */)a0;
+ (id)_localPlayersFromInternals:(id)a0 authenticated:(BOOL)a1;
+ (void)_sendPlayerAuthAPINotificationForLoggedInPlayerInternals:(id)a0 loggedOutPlayerInternals:(id)a1 oldPrimary:(id)a2 newPrimary:(id)a3;
+ (void)authenticateWithUsername:(id)a0 password:(id)a1 completionHandler:(id /* block */)a2;
+ (void)authenticatedLocalPlayersDidChange:(id)a0 complete:(id /* block */)a1;
+ (id)localPlayerAccessQueue;
+ (id)localPlayerForCredential:(id)a0;

- (void)encodeWithCoder:(id)a0;
- (void)registerListener:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)unregisterListener:(id)a0;
- (void)setStatus:(id)a0;
- (void)unregisterAllListeners;
- (void)authenticateWithCompletionHandler:(id /* block */)a0;
- (void)dealloc;
- (void)saveGameData:(id)a0 withName:(id)a1 completionHandler:(id /* block */)a2;
- (void)cancelGameInvite:(id)a0;
- (void)resolveConflictingSavedGames:(id)a0 withData:(id)a1 completionHandler:(id /* block */)a2;
- (id)friends;
- (void)cancelInviteWithNotification:(id)a0;
- (void)fetchSavedGamesWithCompletionHandler:(id /* block */)a0;
- (void).cxx_destruct;
- (void)deleteSavedGamesWithName:(id)a0 completionHandler:(id /* block */)a1;
- (void)createFriendRequestWithIdentifier:(id)a0 handler:(id /* block */)a1;
- (void)callAuthHandlerWithError:(id)a0;
- (void)cancelFriendRequestWithIdentifier:(id)a0 handler:(id /* block */)a1;
- (id)displayNameWithOptions:(unsigned char)a0;
- (void)loadChallengableFriendsWithCompletionHandler:(id /* block */)a0;
- (void)loadRecentPlayersWithCompletionHandler:(id /* block */)a0;
- (void)removeFriend:(id)a0 block:(id /* block */)a1;
- (void)reportAuthenticatingWithAuthKitInvocation;
- (void)reportAuthenticatingWithGreenBuddyInvocation;
- (void)reportAuthenticationLoginCanceled;
- (void)signOutAndOptOut:(BOOL)a0 completionHandler:(id /* block */)a1;
- (void)signOutWithCompletionHandler:(id /* block */)a0;
- (void)updateFromLocalPlayer:(id)a0;
- (void)loadFriendsAuthorizationStatus:(id /* block */)a0;
- (id)_friendsAPICommunicationsError;
- (id)_friendsAPIDeniedError;
- (id)_friendsAPIDescriptionMissingError;
- (id)_friendsAPIRestrictedError;
- (id)_gkFriendListUsageDescription;
- (void)_loadFriendPlayersWithCompletionHandler:(id /* block */)a0;
- (void)_loadFriendPlayersWithFilter:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)_loadFriendsListGlobalAccessOptInFlow:(id /* block */)a0;
- (void)_loadFriendsListPerGameAuthorizedFlow:(id /* block */)a0;
- (void)_loadFriendsListPerGameNotDeterminedFlow:(id /* block */)a0;
- (void)_startAuthenticationForExistingPrimaryPlayer;
- (void)_updatePerGameSettings:(long long)a0 withCompletionHandler:(id /* block */)a1;
- (void)acceptFriendRequestWithIdentifier:(id)a0 sendPush:(BOOL)a1 handler:(id /* block */)a2;
- (void)fetchItemsForIdentityVerificationSignature:(id /* block */)a0;
- (void)fetchMultiplayerGameInvite;
- (void)fetchTurnBasedEvent;
- (void)generateIdentityVerificationSignatureWithCompletionHandler:(id /* block */)a0;
- (void)getPlayerIDFromFriendCode:(id)a0 handler:(id /* block */)a1;
- (void)inviteeAcceptedGameInviteWithNotification:(id)a0;
- (void)inviteeDeclinedGameInviteWithNotification:(id)a0;
- (BOOL)isWelcomeBannerTooLate;
- (void)loadDefaultLeaderboardCategoryIDWithCompletionHandler:(id /* block */)a0;
- (void)loadDefaultLeaderboardIdentifierWithCompletionHandler:(id /* block */)a0;
- (void)loadFriendPlayersWithCompletionHandler:(id /* block */)a0;
- (void)loadFriendPlayersWithFilter:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)loadFriends:(id /* block */)a0;
- (void)loadFriendsWithCompletionHandler:(id /* block */)a0;
- (void)loadFriendsWithIdentifiers:(id)a0 completionHandler:(id /* block */)a1;
- (void)promotePlayerInternalToLocalPlayerInternal:(id)a0;
- (void)recordScopedIdState:(BOOL)a0;
- (oneway void)rejectFriendRequestWithIdentifier:(id)a0 handler:(id /* block */)a1;
- (void)removeAllFriendsWithBlock:(id /* block */)a0;
- (void)reportAuthenticationErrorNoInternetConnection;
- (void)reportAuthenticationPlayerAuthenticated;
- (void)reportAuthenticationStartForPlayer;
- (void)resetTCCAuthorization;
- (BOOL)scopedIDsArePersistent;
- (void)setDefaultLeaderboardCategoryID:(id)a0 completionHandler:(id /* block */)a1;
- (void)setDefaultLeaderboardIdentifier:(id)a0 completionHandler:(id /* block */)a1;
- (void)setFriendListAuthorizationStatus:(long long)a0 forBundleID:(id)a1 handler:(id /* block */)a2;
- (void)setLastContactsIntegrationConsentVersion:(id)a0;
- (void)setLastFriendSuggestionsVersion:(id)a0;
- (void)setLastPersonalizationVersion:(id)a0;
- (void)setLastPrivacyNoticeVersion:(unsigned long long)a0;
- (void)setLastProfilePrivacyVersion:(id)a0;
- (void)setLastWelcomeWhatsNewCopyVersion:(unsigned long long)a0;
- (void)setStatus:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)setupForCloudSavedGames;
- (BOOL)shouldDisplayWelcomeBannerForPlayer:(id)a0 lastAuthDate:(id)a1 remoteUI:(BOOL)a2 timeBetweenBanners:(double)a3;
- (void)showSettings;
- (void)updateLoginStatus:(unsigned long long)a0 completionHandler:(id /* block */)a1;

@end
