@class TIKeyboardCandidateResultSet, TISmartPunctuationController, TIKeyboardInputManagerWrapper, NSString, NSMutableSet, TIInputMode, NSArray, NSMutableDictionary, TICandidateRequestToken, TIKeyboardInputManagerState, TIKeyboardCandidate, NSMutableString, TIKeyboardIntermediateText, ACTKeyboardLayoutUtils, UIKBTree, TIAutocorrectionList, TIInputContextHistory, NSLock, TTKSimpleKeyboardPlane, TIKeyboardState, TIKeyboardInputManager, NSCondition;
@protocol TIKeyboardInputManagerFactory;

@interface ACTKeyboardController : NSObject <ACTClientProtocol> {
    BOOL _hardwareKeyboardMode;
    TIAutocorrectionList *_autocorrectionList;
}

@property (retain, nonatomic) NSArray *keys;
@property (retain, nonatomic) NSMutableSet *leftKeys;
@property (retain, nonatomic) NSMutableSet *rightKeys;
@property (retain, nonatomic) TIKeyboardInputManagerWrapper *inputManagerWrapper;
@property (retain, nonatomic) TIKeyboardState *keyboardState;
@property (retain, nonatomic) TIKeyboardInputManagerState *inputManagerState;
@property (retain, nonatomic) TIAutocorrectionList *autocorrectionList;
@property (retain, nonatomic) TIKeyboardCandidateResultSet *candidateResultSet;
@property (copy, nonatomic) NSString *markedText;
@property (retain, nonatomic) TIKeyboardIntermediateText *intermediateText;
@property (retain, nonatomic) NSMutableDictionary *activeTouchState;
@property (readonly, nonatomic) NSCondition *requestCondition;
@property (retain, nonatomic) TICandidateRequestToken *currentRequestToken;
@property (retain, nonatomic) NSLock *cpRequestTokenLock;
@property (retain, nonatomic) TICandidateRequestToken *lastCPRequestToken;
@property (nonatomic) id<TIKeyboardInputManagerFactory> keyboardInputManagerFactory;
@property (copy, nonatomic) NSString *inputModeIdentifier;
@property (readonly, nonatomic) TIInputMode *inputMode;
@property (nonatomic) unsigned long long supplementalLexiconIdentifier;
@property (nonatomic) BOOL canSuggestSupplementalItemsForCurrentSelection;
@property (nonatomic) BOOL asyncPredictions;
@property (retain, nonatomic) UIKBTree *keyboard;
@property (retain, nonatomic) UIKBTree *keyplane;
@property (readonly, nonatomic, getter=isShifted) BOOL shifted;
@property (readonly, nonatomic, getter=isAutoshifted) BOOL autoshifted;
@property (copy, nonatomic) NSString *clientIdentifier;
@property (copy, nonatomic) NSString *recipientIdentifier;
@property (retain, nonatomic) TIInputContextHistory *inputContextHistory;
@property (nonatomic) BOOL lastInputWasSelection;
@property (nonatomic) BOOL lastInputWasContinuousPath;
@property (nonatomic) BOOL inputIsPunctuationFollowingContinuousPath;
@property (nonatomic) BOOL nextKeyIsMultitap;
@property (nonatomic) BOOL nextKeyIsFlick;
@property (readonly, nonatomic) TIKeyboardInputManager *inputManager;
@property (readonly, nonatomic) TIKeyboardInputManager *existingInputManager;
@property (nonatomic) BOOL usesAutocorrection;
@property (nonatomic) unsigned long long autocorrectionType;
@property (nonatomic) unsigned long long autocapitalizationType;
@property (nonatomic) BOOL usesPrediction;
@property (nonatomic) BOOL usesAutocapitalization;
@property (nonatomic) BOOL wordLearningEnabled;
@property (nonatomic) BOOL hardwareKeyboardMode;
@property (nonatomic) BOOL longPredictionListEnabled;
@property (nonatomic) BOOL insertsSpaceAfterPredictiveInput;
@property (readonly, nonatomic) TISmartPunctuationController *smartPunctuationController;
@property (nonatomic) BOOL usesTransliteration;
@property (retain, nonatomic) TTKSimpleKeyboardPlane *ttkLayout;
@property (nonatomic) BOOL shouldSkipCandidateSelection;
@property (readonly, nonatomic) ACTKeyboardLayoutUtils *layoutUtils;
@property (readonly, nonatomic) NSMutableString *text;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } selectedRange;
@property (readonly, nonatomic) NSString *lastCommittedText;
@property (nonatomic) BOOL secureTextEntry;
@property (nonatomic) BOOL isScreenLocked;
@property (readonly, nonatomic) TIKeyboardCandidate *autocorrection;
@property (readonly, nonatomic) NSArray *predictions;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)pushAutocorrections:(id)a0 requestToken:(id)a1;
- (void)acceptAutocorrection;
- (void)generateCandidates;
- (void)textAccepted:(id)a0;
- (void)tearDown;
- (void)insertText:(id)a0;
- (void)dealloc;
- (void)processPayloadInfo:(id)a0;
- (void)syncToDocumentState:(id)a0;
- (id)init;
- (void)acceptCandidate:(id)a0;
- (void)handleKeyboardInput:(id)a0;
- (void).cxx_destruct;
- (void)reset;
- (id)initWithInputMode:(id)a0;
- (void)deleteInput;
- (void)adjustPhraseBoundaryInForwardDirection:(BOOL)a0 granularity:(int)a1;
- (id)candidatesForString:(id)a0;
- (void)closeRequestToken:(id)a0;
- (long long)performTouchDragAtLocation:(struct CGPoint { double x0; double x1; })a0 radius:(float)a1 timestamp:(double)a2 pathIndex:(unsigned long long)a3 fingerID:(int)a4;
- (void)updateAutoshift;
- (void)deleteBackwards;
- (BOOL)isKeyplane:(id)a0 alternateOfKeyplane:(id)a1;
- (long long)performTouchDownAtLocation:(struct CGPoint { double x0; double x1; })a0 radius:(float)a1 timestamp:(double)a2 pathIndex:(unsigned long long)a3 fingerID:(int)a4;
- (void)performTouchRestAtLocation:(struct CGPoint { double x0; double x1; })a0 radius:(float)a1 timestamp:(double)a2 pathIndex:(unsigned long long)a3 fingerID:(int)a4;
- (void)acceptCandidate:(id)a0 predictiveCandidate:(BOOL)a1;
- (void)acceptCandidateInputEvent:(id)a0 fromCandidateBar:(BOOL)a1;
- (void)addInput:(id)a0 fromVariantKey:(BOOL)a1 fromGestureKey:(BOOL)a2;
- (void)addInput:(id)a0 fromVariantKey:(BOOL)a1 fromGestureKey:(BOOL)a2 touchEvent:(id)a3;
- (void)addInput:(id)a0 fromVariantKey:(BOOL)a1 touchEvent:(id)a2;
- (void)addStringFromGestureKeyInput:(id)a0;
- (void)addStringFromVariantKey:(id)a0;
- (id)adjustContinuousPathCandidate:(id)a0;
- (void)adjustCursorByOffset:(long long)a0;
- (void)adjustKeyplaneEmulatingKBStar:(id)a0;
- (void)alternateKeyplane;
- (id)candidateByApplyingSmartPunctuationToCandidate:(id)a0;
- (id)candidateToConfirmInputString;
- (id)clonedKeyboardState;
- (void)commitText;
- (id)createKeyboardInputManagerWrapper;
- (void)deleteInput:(id)a0;
- (void)deleteText:(id)a0 rawText:(id)a1;
- (id)displayStringOverrideForKey:(id)a0;
- (float)distanceFromKey:(id)a0 toPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)divideKeyplane:(id)a0 intoLeft:(id)a1 right:(id)a2;
- (void)enumerateKeyplaneNamesAdjacentToKeyplane:(id)a0 usingBlock:(id /* block */)a1;
- (void)generateAutocorrectionsOrCandidates;
- (void)generateAutocorrectionsWithCount:(unsigned long long)a0;
- (void)generateAutocorrectionsWithKeyboardState:(id)a0;
- (void)generateAutocorrectionsWithShiftState:(int)a0;
- (void)generateCandidatesWithKeyboardState:(id)a0;
- (BOOL)generatesCandidates;
- (BOOL)hasPrediction:(id)a0;
- (BOOL)isContinuousPathNonSpacePunctuation:(unsigned int)a0;
- (BOOL)isKeyplane:(id)a0 shiftAlternateOfKeyplane:(id)a1;
- (long long)keyCodeWithString:(id)a0 inKeyplane:(id)a1;
- (id)keyContainingPoint:(struct CGPoint { double x0; double x1; })a0 inKeyplane:(id)a1;
- (id)keyToAccessKeyplane:(id)a0 fromKeyplane:(id)a1;
- (void)mergeFrameFromKey:(id)a0 intoKey:(id)a1;
- (id)performSkipTapAtLocation:(struct CGPoint { double x0; double x1; })a0 radius:(float)a1 timestamp:(double)a2 pathIndex:(unsigned long long)a3 fingerID:(int)a4 forcedKeyCode:(long long)a5;
- (void)performTouchCancelAtLocation:(struct CGPoint { double x0; double x1; })a0 radius:(float)a1 timestamp:(double)a2 pathIndex:(unsigned long long)a3 fingerID:(int)a4;
- (void)performTouchEndRestAtLocation:(struct CGPoint { double x0; double x1; })a0 radius:(float)a1 timestamp:(double)a2 pathIndex:(unsigned long long)a3 fingerID:(int)a4;
- (id)performTouchUpAtLocation:(struct CGPoint { double x0; double x1; })a0 radius:(float)a1 timestamp:(double)a2 pathIndex:(unsigned long long)a3 fingerID:(int)a4 secondaryString:(BOOL)a5;
- (void)registerLayoutWithFavonius;
- (void)rejectCandidate:(id)a0;
- (long long)retestTouchAtLocation:(struct CGPoint { double x0; double x1; })a0 radius:(float)a1 timestamp:(double)a2 pathIndex:(unsigned long long)a3 fingerID:(int)a4;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })selectedRangeForText:(id)a0;
- (void)setInitialKeyplane;
- (void)setKeyboardConfiguration:(id)a0;
- (void)shiftKeyplane;
- (void)syncToEmptyDocument;
- (void)syncToKeyboardState;
- (BOOL)syncToKeyboardStateByWaitingForResults:(BOOL)a0;
- (BOOL)touchPassesDragThresholdAtPoint:(struct CGPoint { double x0; double x1; })a0 pathIndex:(unsigned long long)a1;
- (id)trimmedCandidate:(id)a0;
- (void)updateDocumentState;
- (void)updateKeyboardOutput:(id)a0 withInputForSmartPunctuation:(id)a1;

@end
