@class UITextView, NSString, ICNoteEditorViewController, ICNAEventReporter, UILongPressGestureRecognizer;

@interface ICiOSTableAttachmentViewController : ICTableAttachmentViewController <UIGestureRecognizerDelegate, UIScrollViewDelegate, UITextViewDelegate, NSLayoutManagerDelegate>

@property (readonly, nonatomic) ICNoteEditorViewController *noteEditorViewController;
@property (nonatomic) struct CGPoint { double x; double y; } initialDragOffset;
@property (nonatomic) BOOL isObservingContentOffset;
@property (nonatomic, getter=isMenuHiding) BOOL menuHiding;
@property (nonatomic) struct CGPoint { double x; double y; } previousNoteContentOffset;
@property (nonatomic) struct CGPoint { double x; double y; } previousViewOrigin;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } previousSelectedRange;
@property (nonatomic, getter=isShowingTextStyleOptions) BOOL showingTextStyleOptions;
@property (retain, nonatomic) UITextView *biuTextView;
@property (weak, nonatomic) UILongPressGestureRecognizer *rowLongPress;
@property (retain, nonatomic) ICNAEventReporter *eventReporter;
@property (nonatomic) BOOL isTrackingAnalyticsEdit;
@property (nonatomic, getter=isTouchingColumnButton) BOOL touchingColumnButton;
@property (nonatomic, getter=isTouchingRowButton) BOOL touchingRowButton;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)willMoveToParentViewController:(id)a0;
- (void)menuDidHide:(id)a0;
- (void)makeTextWritingDirectionRightToLeft:(id)a0;
- (void)scrollViewDidEndDecelerating:(id)a0;
- (void)makeTextWritingDirectionLeftToRight:(id)a0;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (void)didMoveToParentViewController:(id)a0;
- (void)cut:(id)a0;
- (void)paste:(id)a0;
- (void)scrollViewDidScroll:(id)a0;
- (BOOL)gestureRecognizer:(id)a0 shouldReceiveTouch:(id)a1;
- (void)dealloc;
- (void)viewDidLoad;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)copy:(id)a0;
- (void)viewWillDisappear:(BOOL)a0;
- (void)traitCollectionDidChange:(id)a0;
- (void)viewDidAppear:(BOOL)a0;
- (void)layoutManager:(id)a0 didCompleteLayoutForTextContainer:(id)a1 atEnd:(BOOL)a2;
- (void)buildMenuWithBuilder:(id)a0;
- (void)viewWillLayoutSubviews;
- (void)scrollViewDidEndScrollingAnimation:(id)a0;
- (void)scrollViewDidEndDragging:(id)a0 willDecelerate:(BOOL)a1;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (void).cxx_destruct;
- (void)viewDidLayoutSubviews;
- (void)loadView;
- (BOOL)canPerformAction:(SEL)a0 withSender:(id)a1;
- (void)viewWillAppear:(BOOL)a0;
- (BOOL)textView:(id)a0 shouldChangeTextInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 replacementText:(id)a2;
- (void)textViewDidBeginEditing:(id)a0;
- (void)textViewDidChange:(id)a0;
- (void)textViewDidChangeSelection:(id)a0;
- (void)textViewDidEndEditing:(id)a0;
- (BOOL)textViewShouldBeginEditing:(id)a0;
- (void)menuWillHide:(id)a0;
- (void)strikethrough:(id)a0;
- (void)selectCell;
- (id)addColumnAction;
- (BOOL)canConvertToTag;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })editingViewport;
- (id)removeRowAction;
- (id)rowMenu;
- (void)sendAnalyticsForEndEditIfNeeded;
- (id)addRowAction;
- (void)adjustScrollPositionByOffset:(struct CGPoint { double x0; double x1; })a0;
- (id)auxiliaryTextViewHost;
- (BOOL)becomeFirstResponderForAuxStyling;
- (void)beginEditingNoteAtRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (BOOL)canConvertToText;
- (void)cellFirstResponderChanged;
- (void)cleanUpKVOIfNeeded;
- (void)columnButtonMenuActionTriggered:(id)a0;
- (void)columnButtonPressed:(id)a0;
- (void)columnButtonTouched:(id)a0;
- (id)columnMenu;
- (void)convertToTag:(id)a0;
- (void)convertToText:(id)a0;
- (void)convertUnconfirmedHashtagsMentionsIfNecessary;
- (void)copySelection:(id)a0;
- (id)copySelectionAction;
- (BOOL)cursorPrefersWordBoundary;
- (id)cutSelectionAction;
- (void)didBeginEditingWithTextView:(id)a0;
- (void)didTapEmptyTable:(id)a0;
- (void)didUpdateContentSize;
- (void)dragCellRange:(id)a0;
- (void)dragColumn:(id)a0;
- (void)dragRow:(id)a0;
- (id)dragSnapshotFromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 afterScreenUpdates:(BOOL)a1;
- (void)dragTextRange:(id)a0;
- (void)ensureGesturesOnSelectionGrabbers:(id)a0;
- (id)formatMenu;
- (id)icTableDataFromPasteboard;
- (void)ic_makeFirstResponder:(id)a0;
- (void)ic_resignFirstResponder:(id)a0;
- (void)invalidateCachedChildrenForAccessibilityReparenting;
- (void)makeDelegateOfTextView:(id)a0;
- (void)moveAccessibilityFocusToSelectedColumnOrRowButton;
- (id)noteScrollView;
- (id)notesDataFromPasteboard;
- (id)pasteSelectionAction;
- (void)performInitialLayoutIfNeeded;
- (unsigned long long)preferredNavigationSelection;
- (id)removeColumnAction;
- (BOOL)resignFirstResponderForAuxStyling;
- (void)rowButtonMenuActionTriggered:(id)a0;
- (void)rowButtonPressed:(id)a0;
- (void)rowButtonTouched:(id)a0;
- (void)scrollToCaretIfNeededForTextView:(id)a0;
- (void)scrollToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (void)selectCurrentColumnForAccessibility;
- (void)selectCurrentRowForAccessibility;
- (void)selectionDidResignFirstResponder:(id)a0;
- (void)sendAnalyticsForStartEditIfNeeded;
- (void)setTextViewWritingDirection:(long long)a0 sender:(id)a1;
- (void)setupEventHandling;
- (void)setupKVOIfNeeded;
- (void)setupTableTextView:(id)a0;
- (void)shareTable:(id)a0;
- (void)showButtonsAtColumns:(id)a0 rows:(id)a1;
- (void)showRangeSelectionMenu;
- (void)showRangeSelectionMenuAfterDelay;
- (void)showSelectionMenuFromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)soloPlainTextStringFromPasteboard;
- (void)speakAccessibilityAnnouncementForMoveToCellWithColumnID:(id)a0 rowID:(id)a1;
- (void)speakAccessibilityExitedTableAnnouncementAndDidRemoveRow:(BOOL)a0;
- (void)tableAttachmentDidChange;
- (void)tableAttachmentSelectionDidChange:(id)a0;
- (id)toggleBoldAction;
- (id)toggleItalicAction;
- (id)toggleStrikethroughAction;
- (id)toggleTableDirectionAction;
- (id)toggleUnderlineAction;
- (void)unselectColumnRow;
- (void)updateAccessibilityValueForColumnAndRowButtons;
- (void)updateChrome;
- (void)updateKeyboardAppearanceForTextView:(id)a0;
- (void)willBeginEditingWithTextView:(id)a0;

@end
