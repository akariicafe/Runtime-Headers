@class ICSelectorDelayer, UITextRange, ICHashtagController, ICAuthorHighlightsUpdater, ICTextView, ICTextViewController, TPKContentView, ICShareNoteExporter, NSUserActivity, ICNote, NSMutableDictionary, PKTool, UIViewController, NSLayoutConstraint, ICAttachmentPresenter, NSObject, ICAttributionSidebarController, NSUUID, UIBarButtonItemGroup, ICInlineCanvasTextAttachment, NotesBackgroundView, ICActivityStreamDockView, UIMenu, NSRegularExpression, UIView, ICNoteContext, ICTextViewScrollState, ICNoteUserActivityState, ICAuthorHighlightsController, NSUndoManager, ICTextController, ICInkPaletteController, ICNoteEditorTextFindingController, ICMentionsController, NSDate, TPKContentController, TPKContent, NSArray, NSAttributedString, ICSystemPaperLinkBarViewController, ICSidecarInsertMenu, ICInvitationViewController, ICStyleSelectorViewController, ICHandwritingDebugWindow, NSString, ICInvitation, ICGelatoCollaborationController, ICAttachmentInsertionController, ICInkToolPickerResponder, ICAudioBarViewController, UIButton, UIToolbar, ICNoteMergeabilityController, TPKContentPopoverViewController, ICPasswordEntryViewController, UIBarButtonItem, UIResponder, ICNoteEditorInputAccessoryView, UIAlertController, ICVisualAssetImportController, ICUnsupportedNoteView, UITouch, ICManagedObjectContextChangeController, ICViewControllerManager, TTMergeableStringSelection;
@protocol UIActivityItemsConfigurationProviding, ICNoteEditorDelegate, ICAuxiliaryStyling, OS_dispatch_queue;

@interface ICNoteEditorViewController : ICNoteEditorBaseViewController <ICAccessibilityChildReparentingController, ICAddCollaboratorsActivityDelegate, ICAttachmentInsertionDelegate, ICAudioBarViewControllerDelegate, ICBaseTextViewDelegate, ICDocCamViewControllerDelegate, ICRemoteDocCamViewControllerDelegate, ICHandwritingDebugDelegate, ICHashtagViewControllerDelegate, ICInkPaletteControllerDelegate, ICInkToolPickerResponderDelegate, ICMentionsAnalyticsDelegate, ICHashtagAnalyticsDelegate, ICNoteEditorInputAccessoryViewDelegate, ICStyleSelectorDelegate, NSUserActivityDelegate, PKRulerHostingDelegate, PKScribbleInteractionDelegate, TPKContentControllerDelegate, UIGestureRecognizerDelegate, UINavigationControllerDelegate, UIPopoverPresentationControllerDelegate, UITextViewDrawingDelegate, _UIViewBoundingPathChangeObserver, ICManagedObjectContextChangeControllerDelegate, ICAttachmentViewDelegate, ICAuxiliaryTextViewHosting, ICNoteEditing, UITextViewDelegate>

@property (class, readonly, nonatomic) UIMenu *formatKeyboardShortcutMenu;

@property (readonly, nonatomic) UIViewController *rootViewController;
@property (retain, nonatomic) ICTextViewController *textViewController;
@property (retain, nonatomic) UIToolbar *toolbar;
@property (retain, nonatomic) UIBarButtonItem *leadingBarItem;
@property (retain, nonatomic) UIBarButtonItem *toggleTodoBarItem;
@property (retain, nonatomic) UIBarButtonItem *selectStyleBarItem;
@property (retain, nonatomic) UIBarButtonItem *insertToolbarItem;
@property (retain, nonatomic) UIBarButtonItem *tableToolbarItem;
@property (retain, nonatomic) UIBarButtonItem *showInkPickerBarItem;
@property (retain, nonatomic) UIBarButtonItem *trailingBarItem;
@property (nonatomic) unsigned long long toolbarState;
@property (retain, nonatomic) UIBarButtonItem *inlineSketchBarButton;
@property (retain, nonatomic) UIBarButtonItem *insertBarButton;
@property (retain, nonatomic) UIBarButtonItem *photoLibraryBarButton;
@property (retain, nonatomic) UIBarButtonItem *composeNoteBarButton;
@property (retain, nonatomic) UIBarButtonItem *composeNoteNavBarButton;
@property (retain, nonatomic) UIBarButtonItem *actionBarButton;
@property (retain, nonatomic) UIBarButtonItem *iCloudShareOnNoteNavBarButton;
@property (retain, nonatomic) UIBarButtonItem *iCloudShareOnFolderNavBarButton;
@property (retain, nonatomic) UIBarButtonItem *iCloudShareOffNavBarButton;
@property (retain, nonatomic) UIBarButtonItem *shareNavBarButtonItem;
@property (retain, nonatomic) UIBarButtonItem *gelatoCollaborationBarButtonItem;
@property (retain, nonatomic) UIBarButtonItem *deleteBarButton;
@property (retain, nonatomic) UIBarButtonItem *addTodoBarButton;
@property (retain, nonatomic) UIBarButtonItem *deleteNavBarButton;
@property (retain, nonatomic) UIBarButtonItem *moveBarButton;
@property (retain, nonatomic) UIBarButtonItem *moveNavBarButton;
@property (retain, nonatomic) UIBarButtonItem *lockNavBarButton;
@property (retain, nonatomic) UIBarButtonItem *unlockNavBarButton;
@property (retain, nonatomic) UIBarButtonItem *changeStyleBarButton;
@property (retain, nonatomic) UIBarButtonItem *quickNoteAllNotesBarButton;
@property (retain, nonatomic) UIBarButtonItem *iPhoneSystemPaperCancelBarButton;
@property (retain, nonatomic) UIBarButtonItem *iPhoneSystemPaperSaveBarButton;
@property (nonatomic) BOOL iPhoneSystemPaperDidSaveOrCancel;
@property (retain, nonatomic) ICAttachmentPresenter *iPhoneSystemPaperAttachmentPresenter;
@property (retain, nonatomic) UIBarButtonItem *flexibleSpaceBarItem;
@property (retain, nonatomic) UIBarButtonItem *doneNavBarButton;
@property (retain, nonatomic) UIButton *undoButton;
@property (retain, nonatomic) UIButton *redoButton;
@property (retain, nonatomic) UIBarButtonItem *undoBarButton;
@property (retain, nonatomic) UIBarButtonItem *redoBarButton;
@property (retain, nonatomic) UIBarButtonItem *undoNavBarButton;
@property (retain, nonatomic) UIBarButtonItem *redoNavBarButton;
@property (retain, nonatomic) UIBarButtonItem *closeAuxiliaryWindowBarButton;
@property (retain, nonatomic) TPKContentController *tipContentController;
@property (retain, nonatomic) TPKContent *tipContent;
@property (retain, nonatomic) TPKContentView *tipContentView;
@property (retain, nonatomic) TPKContentPopoverViewController *tipContentViewController;
@property (nonatomic) BOOL tipContentControllerDelegateEnabled;
@property (retain, nonatomic) ICStyleSelectorViewController *styleSelectorController;
@property (retain, nonatomic) UIView *styleSelectorDummyInputView;
@property (readonly, nonatomic) BOOL styleSelectorInputViewShowing;
@property (retain, nonatomic) ICNoteEditorInputAccessoryView *textViewInputAccessoryView;
@property (nonatomic) BOOL suspendBarButtonUpdates;
@property (nonatomic) BOOL suspendSelectedRangeUpdates;
@property (nonatomic) BOOL suspendTapGestureRecognizer;
@property (retain, nonatomic) ICAudioBarViewController *audioBarViewController;
@property (readonly, nonatomic) ICNoteContext *noteContext;
@property (retain) NSUserActivity *noteUserActivity;
@property (retain) ICNoteUserActivityState *noteUserActivityState;
@property (retain, nonatomic) NSArray *keyboardButtonItems;
@property (nonatomic) BOOL isEditingNewNote;
@property (nonatomic) BOOL isSettingEditing;
@property (nonatomic, getter=isTogglingLock) BOOL togglingLock;
@property (retain, nonatomic) TTMergeableStringSelection *originalEndOfNote;
@property (nonatomic) BOOL isAddingImageAttachment;
@property (nonatomic) BOOL didEndEditingForAddingImageAttachment;
@property (nonatomic) BOOL isConvertToTag;
@property (copy, nonatomic) NSDate *keyboardAnimateInFinishTime;
@property (retain, nonatomic) UIBarButtonItem *showInkPickerButton;
@property (retain, nonatomic) UIBarButtonItem *toggleTodoStyleButton;
@property (retain, nonatomic) UIBarButtonItem *changeStyleButton;
@property (retain, nonatomic) UIBarButtonItem *insertButton;
@property (retain, nonatomic) UIBarButtonItem *photoLibraryButton;
@property (retain, nonatomic) UIBarButtonItem *addTableButton;
@property (retain, nonatomic) UIBarButtonItemGroup *inputAssistantLeadingGroup;
@property (retain, nonatomic) UIBarButtonItemGroup *inputAssistantTrailingGroup;
@property (retain, nonatomic) UIBarButtonItem *toggleTodoStyleCenterButton;
@property (retain, nonatomic) UIBarButtonItem *changeStyleCenterButton;
@property (retain, nonatomic) UIBarButtonItem *insertCenterButton;
@property (retain, nonatomic) UIBarButtonItem *photoLibraryCenterButton;
@property (retain, nonatomic) UIBarButtonItem *addTableCenterButton;
@property (readonly, nonatomic) BOOL canShowOverflowActionMenu;
@property (nonatomic) double inputAccessoryViewHeight;
@property (retain, nonatomic) ICAttachmentInsertionController *attachmentInsertionController;
@property (retain, nonatomic) ICHashtagController *hashtagController;
@property (retain, nonatomic) ICMentionsController *mentionsController;
@property (retain, nonatomic) ICGelatoCollaborationController *gelatoCollaborationController;
@property (readonly, nonatomic) NotesBackgroundView *backgroundView;
@property (retain, nonatomic) ICPasswordEntryViewController *passwordEntryViewController;
@property (retain, nonatomic) ICPasswordEntryViewController *lockIconCoverViewController;
@property (retain, nonatomic) ICInvitationViewController *invitationViewController;
@property (nonatomic) double textViewMinimumBottomInset;
@property (nonatomic) double textViewScrollIndicatorBottomInsetOverride;
@property (nonatomic) double textViewScrollIndicatorBottomInsetOverrideToRestore;
@property (readonly, nonatomic) double textViewBottomInsetThatWeWant;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } textViewScrollIndicatorInsetsThatWeWant;
@property (readonly, nonatomic) double textViewTopInsetThatWeWant;
@property (nonatomic) BOOL userWantsToSeeDateLabel;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } rangeToScrollToVisible;
@property (nonatomic) BOOL animateRangeToScrollToVisible;
@property (retain, nonatomic) NSAttributedString *searchableStringToScrollToVisible;
@property (retain, nonatomic) UIAlertController *limitExceededAlertController;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } lastSelectedRange;
@property (retain, nonatomic) NSMutableDictionary *savedScrollStates;
@property (retain, nonatomic) ICTextViewScrollState *archivedScrollStateToApply;
@property (nonatomic) BOOL shouldOverscrollScrollState;
@property (nonatomic) long long currentWritingDirection;
@property (retain, nonatomic) NSRegularExpression *searchRegex;
@property (retain, nonatomic) UITextRange *selectedTextRangeToRestoreAfterBarSourcedPopoverPresentation;
@property (retain, nonatomic) ICSelectorDelayer *updateNoteUserActivityStateDelayer;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *userActivityUpdateQueue;
@property (nonatomic) BOOL isSelecting;
@property (retain, nonatomic) NSDate *keyboardDidShowAnimationDate;
@property (nonatomic) BOOL shouldBeginEditingAfterNoteUnlock;
@property (nonatomic) struct CGPoint { double x; double y; } changePasswordContentOffset;
@property (nonatomic) BOOL isPerformingDeleteAnimation;
@property (nonatomic) BOOL isSettingSelection;
@property (readonly, nonatomic) BOOL shouldForceLightContent;
@property (nonatomic) BOOL didDrawWithPencilWithoutPalette;
@property (weak, nonatomic) ICInlineCanvasTextAttachment *selectedCanvasAttachment;
@property (nonatomic, getter=isShowingIndentationItems) BOOL showingIndentationItems;
@property (nonatomic, getter=isShowingChecklistItems) BOOL showingChecklistItems;
@property (retain, nonatomic) NSArray *extraItemsBeforeCustomCalloutOptions;
@property (retain, nonatomic) NSArray *swipeGestureRecognizers;
@property (retain, nonatomic) ICActivityStreamDockView *activityStreamToolbar;
@property (retain, nonatomic) NSLayoutConstraint *activityStreamToolbarBottomConstraint;
@property (nonatomic) BOOL isShowingUnseenShareSummaryIndicator;
@property (nonatomic) BOOL isPreviewingAttachmentFromNote;
@property (nonatomic) BOOL shouldClearBackgroundColorAfterPreview;
@property (nonatomic) BOOL shouldClearCornerRadiusAfterPreview;
@property (readonly, nonatomic) BOOL canFindInNote;
@property (readonly, nonatomic) BOOL currentSelectionContainsListOrFixedWidth;
@property (nonatomic) BOOL hasKeyboardBeenVisibleBefore;
@property (nonatomic) BOOL shouldInputAccessoryViewButtonsBeVisible;
@property (retain, nonatomic) ICSelectorDelayer *applyAccessibilityInfoDelayer;
@property (nonatomic) BOOL previouslyHadMarkedText;
@property (nonatomic) BOOL wasWindowlessDuringTransitionToSize;
@property (retain, nonatomic) UIView *rulerHostingView;
@property (retain, nonatomic) ICInkPaletteController *inkPaletteController;
@property (nonatomic) unsigned long long inkPickerState;
@property (retain, nonatomic) UIBarButtonItem *openInkPickerToolbarButton;
@property (retain, nonatomic) ICHandwritingDebugWindow *handwritingDebugWindow;
@property (retain, nonatomic) ICSelectorDelayer *handwritingDebugSelectorDelayer;
@property (retain, nonatomic) NSDate *dateOfLastStrokeOrNewDrawing;
@property (nonatomic) BOOL isDrawingStroke;
@property (nonatomic) BOOL isDrawingStrokeWithPencil;
@property (retain, nonatomic) UITouch *currentStrokeStartTouch;
@property (retain, nonatomic) ICInkToolPickerResponder *paletteResponder;
@property (retain, nonatomic) ICSelectorDelayer *inlineSketchVisualIndicatorFadeOutSelectorDelayer;
@property (nonatomic) BOOL wasEditingBeforeDrawing;
@property (nonatomic) BOOL tableButtonsShowMore;
@property (retain, nonatomic) ICSelectorDelayer *noteOrFolderChangedCallbackSelectorDelayer;
@property (retain, nonatomic) NSUUID *createdGalleryAttachmentUUID;
@property (retain, nonatomic) NSArray *indentKeyCommands;
@property (retain, nonatomic) NSArray *indentRTLKeyCommands;
@property (nonatomic) BOOL isLoadingStyleSelectorInputView;
@property (nonatomic) BOOL shouldRemoveEmptyNoteWhenViewDisappeared;
@property (retain, nonatomic) ICShareNoteExporter *noteExporter;
@property (nonatomic) BOOL updateContentSizeCategoryWhenVisible;
@property (readonly, nonatomic) BOOL keyboardCameraIsAvailable;
@property (nonatomic) BOOL inlineSketchBarButtonHasSelectedImage;
@property (retain, nonatomic) ICSelectorDelayer *showOrHideSearchPatternHighlightsDelayer;
@property (nonatomic) BOOL shouldFireNoteViewEventOnViewDisappear;
@property (copy, nonatomic) NSDate *noteLastModificationDate;
@property (nonatomic) BOOL shouldTrackNoteViewEventAnalyticsFromSettingNote;
@property (nonatomic) BOOL showInkPickerAfterViewAppears;
@property (nonatomic) BOOL showInsertUIAfterViewAppears;
@property (nonatomic) BOOL addToDoListAfterViewAppears;
@property (nonatomic) BOOL addDocumentScanAfterViewAppears;
@property (weak, nonatomic) ICNote *previousNote;
@property (retain, nonatomic) ICAuthorHighlightsController *authorHighlightsController;
@property (retain, nonatomic) ICAuthorHighlightsUpdater *authorHighlightsUpdater;
@property (nonatomic) BOOL shouldAllowAttributionSidebar;
@property (retain, nonatomic) ICSystemPaperLinkBarViewController *paperLinkBarViewController;
@property (retain, nonatomic) NSLayoutConstraint *paperLinkBarTopConstraint;
@property (nonatomic) BOOL linksBarNeedsAnimationWhileEditorIsVisible;
@property (retain, nonatomic) ICManagedObjectContextChangeController *noteAndFolderChangeController;
@property (retain, nonatomic) ICManagedObjectContextChangeController *hashtagsChangeController;
@property (retain, nonatomic) ICUnsupportedNoteView *unsupportedNoteView;
@property (retain, nonatomic) ICSidecarInsertMenu *sidecarInsertMenu;
@property (retain, nonatomic) ICVisualAssetImportController *visualAssetImportController;
@property (retain, nonatomic) id<UIActivityItemsConfigurationProviding> activityItemsConfigurationProvider;
@property (readonly, nonatomic) ICTextController *icaxTextController;
@property (readonly, nonatomic) ICAudioBarViewController *icaxAudioBarViewController;
@property (readonly, nonatomic) UIBarButtonItem *icaxToggleTodoBarItem;
@property (readonly, nonatomic) UIBarButtonItem *icaxSelectStyleBarItem;
@property (readonly, nonatomic) UIBarButtonItem *icaxAddAttachmentBarItem;
@property (readonly, nonatomic) UIBarButtonItem *icaxDrawBarButton;
@property (readonly, nonatomic) UIBarButtonItem *icaxDrawBarButtonCompact;
@property (readonly, nonatomic) UIBarButtonItem *icaxCameraBarButton;
@property (readonly, nonatomic) UIBarButtonItem *icaxCameraBarButtonCompact;
@property (readonly, nonatomic) UIBarButtonItem *icaxRecordAudioBarButton;
@property (readonly, nonatomic) UIBarButtonItem *icaxRecordAudioBarButtonCompact;
@property (retain, nonatomic) ICInvitation *invitation;
@property (readonly, nonatomic) ICTextController *textController;
@property (weak, nonatomic) id<ICNoteEditorDelegate> delegate;
@property (weak, nonatomic) ICViewControllerManager *viewControllerManager;
@property (nonatomic) BOOL startEditingAfterViewAppears;
@property (nonatomic, getter=isStyleSelectorInputViewPresenting) BOOL styleSelectorInputViewPresenting;
@property (readonly, nonatomic) NSUndoManager *textViewUndoManager;
@property (readonly, nonatomic) ICTextView *textView;
@property (readonly, nonatomic) ICTextView *textViewIfLoaded;
@property (retain, nonatomic) ICNoteMergeabilityController *mergeabilityController;
@property (readonly, nonatomic) ICNoteEditorTextFindingController *textFindingController;
@property (nonatomic) BOOL shouldResetTextViewContentOffsetWhenAppearing;
@property (readonly, nonatomic) ICTextViewScrollState *currentScrollState;
@property (readonly, nonatomic) PKTool *lastSavedInkingTool;
@property (readonly, nonatomic) ICAttributionSidebarController *attributionSidebarController;
@property (readonly, nonatomic) BOOL isInkPickerShowing;
@property (nonatomic) BOOL doNotAdvanceInsertionPointAfterInsertingAttachment;
@property (copy, nonatomic) NSString *hostBundleIdentifier;
@property (nonatomic, getter=isSplitViewExpandingOrCollapsing) BOOL splitViewExpandingOrCollapsing;
@property (nonatomic) BOOL canShowLinkBar;
@property (nonatomic, getter=isPaperLinkBarShowing) BOOL paperLinkBarShowing;
@property (nonatomic) BOOL needsToPerformInitialPaperAnimations;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) UIResponder *auxiliaryResponder;
@property (weak, nonatomic) id<ICAuxiliaryStyling> auxiliaryStylingController;
@property (readonly, nonatomic) BOOL wantsToRemainFirstResponder;

+ (void)initialize;
+ (void)dismissChildPresentedViewControllersInPostOrder:(id)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
+ (id)keyPathsForValuesAffectingIsInGridView;
+ (id)keyPathsForValuesAffectingTextView;

- (void)presentationControllerDidDismiss:(id)a0;
- (void)keyboardDidHide:(id)a0;
- (void)contentController:(id)a0 didFinishWithContent:(id)a1 animated:(BOOL)a2;
- (void)contentController:(id)a0 contentDidBecomeAvailable:(id)a1 animated:(BOOL)a2;
- (void)applicationDidBecomeActive:(id)a0;
- (void)viewDidMoveToWindow:(id)a0 shouldAppearOrDisappear:(BOOL)a1;
- (void)setSelectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)keyboardDidChangeFrame:(id)a0;
- (void)scrollViewDidEndDecelerating:(id)a0;
- (BOOL)gestureRecognizer:(id)a0 shouldRequireFailureOfGestureRecognizer:(id)a1;
- (BOOL)becomeFirstResponder;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (void)fetchAll;
- (void)setNote:(id)a0;
- (long long)adaptivePresentationStyleForPresentationController:(id)a0 traitCollection:(id)a1;
- (void)applicationDidEnterBackground:(id)a0;
- (void)sceneDidActivate:(id)a0;
- (id)scrollView;
- (BOOL)textView:(id)a0 shouldInteractWithURL:(id)a1 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 interaction:(long long)a3;
- (void)contentSizeCategoryDidChange;
- (void)userActivityWillSave:(id)a0;
- (void)keyboardWillShow:(id)a0;
- (BOOL)_canShowWhileLocked;
- (void)_handleKeyUIEvent:(id)a0;
- (void)scrollViewDidScroll:(id)a0;
- (BOOL)_scribbleInteraction:(id)a0 shouldBeginAtLocation:(struct CGPoint { double x0; double x1; })a1;
- (BOOL)gestureRecognizer:(id)a0 shouldReceiveTouch:(id)a1;
- (void)localeChanged:(id)a0;
- (id)userActivity;
- (id)contentScrollView;
- (long long)preferredStatusBarStyle;
- (void)_scribbleInteraction:(id)a0 willBeginWritingInElement:(id)a1;
- (void)dealloc;
- (id)textStorage;
- (void)viewDidLoad;
- (void)scrollViewWillEndDragging:(id)a0 withVelocity:(struct CGPoint { double x0; double x1; })a1 targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)a2;
- (BOOL)canBecomeFirstResponder;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)viewWillDisappear:(BOOL)a0;
- (void)scrollViewWillBeginDecelerating:(id)a0;
- (id)contentController:(id)a0 clientContextMapForKeys:(id)a1;
- (void)traitCollectionDidChange:(id)a0;
- (BOOL)resignFirstResponder;
- (void)setEditing:(BOOL)a0 animated:(BOOL)a1;
- (void)viewDidDisappear:(BOOL)a0;
- (void)viewDidAppear:(BOOL)a0;
- (id)undoManager;
- (void)setNeedsStatusBarAppearanceUpdate;
- (void)scrollViewWillBeginDragging:(id)a0;
- (void)setUserInteractionEnabled:(BOOL)a0;
- (void)scrollViewDidEndScrollingAnimation:(id)a0;
- (void)_boundingPathMayHaveChangedForView:(id)a0 relativeToBoundsOriginOnly:(BOOL)a1;
- (void)scrollViewDidEndDragging:(id)a0 willDecelerate:(BOOL)a1;
- (id)contentController:(id)a0 contentView:(id)a1 iconForCustomizationID:(long long)a2;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (void).cxx_destruct;
- (void)_scrollViewDidInterruptDecelerating:(id)a0;
- (void)viewDidLayoutSubviews;
- (BOOL)canPerformAction:(SEL)a0 withSender:(id)a1;
- (void)viewWillAppear:(BOOL)a0;
- (void)userActivity:(id)a0 didReceiveInputStream:(id)a1 outputStream:(id)a2;
- (void)keyboardDidShow:(id)a0;
- (id)nibBundle;
- (BOOL)textView:(id)a0 shouldChangeTextInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 replacementText:(id)a2;
- (void)textViewDidBeginEditing:(id)a0;
- (void)textViewDidChange:(id)a0;
- (void)textViewDidChangeSelection:(id)a0;
- (void)textViewDidEndEditing:(id)a0;
- (BOOL)textViewShouldBeginEditing:(id)a0;
- (void)addTable:(id)a0;
- (void)contentController:(id)a0 eventOccurred:(long long)a1 content:(id)a2 context:(id)a3;
- (void)undoAction:(id)a0;
- (id)initWithIdentifier:(long long)a0 options:(unsigned long long)a1;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })visibleRange;
- (void)_accessibilityLoadAccessibilityInformation;
- (void)setTitleStyle:(id)a0;
- (void)doneEditing;
- (void)updateToolbarItems;
- (void)updateInputAssistantItem;
- (void)startEditing;
- (BOOL)allowsAccessibilityChildReparenting;
- (BOOL)allowsNewTextLength:(unsigned long long)a0;
- (void)attachmentInsertionController:(id)a0 didAddAttachment:(id)a1 atRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)attachmentInsertionController:(id)a0 didAddInlineAttachment:(id)a1 atRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 textStorage:(id)a3;
- (void)attachmentInsertionController:(id)a0 willAddAttachment:(id)a1 atRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)audioPlaybackPlayNotification:(id)a0;
- (double)consumedBottomAreaForResizer:(id)a0;
- (id)drawingsForHandwritingDebugWindow:(id)a0;
- (void)handwritingDebugWindowShouldClose:(id)a0;
- (void)inkPalette:(id)a0 didChangeColor:(id)a1;
- (void)inkPalette:(id)a0 didChangePalettePositionStart:(long long)a1 end:(long long)a2;
- (void)inkPalette:(id)a0 didHideAnimated:(BOOL)a1;
- (void)inkPalette:(id)a0 didPickTool:(id)a1;
- (void)inkPalette:(id)a0 didShowAnimated:(BOOL)a1;
- (BOOL)inkPalette:(id)a0 shouldResignFirstResponder:(id)a1;
- (void)inkPalette:(id)a0 willHideAnimated:(BOOL)a1;
- (void)inkPalette:(id)a0 willShowAnimated:(BOOL)a1;
- (id)inkPaletteButtonView:(id)a0;
- (void)inkPaletteDidToggleRuler:(id)a0 isRulerActive:(BOOL)a1;
- (void)keyboardResizerAdjustInsetsWithKeyboardFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 scrollAboveHeight:(double)a1 duration:(double)a2;
- (BOOL)keyboardResizerAutoscrollAboveKeyboard;
- (id)managedObjectContextChangeController:(id)a0 managedObjectIDsToUpdateForUpdatedManagedObjects:(id)a1;
- (void)managedObjectContextChangeController:(id)a0 performUpdatesForManagedObjectIDs:(id)a1;
- (BOOL)managedObjectContextChangeControllerShouldUpdateImmediately:(id)a0;
- (id)responderToMatch;
- (void)strikethrough:(id)a0;
- (double)topInsetForResizer:(id)a0;
- (void)updateDataOwnerForCopyAndPaste;
- (void)updateForceLightContentIfNecessary;
- (void)textView:(id)a0 willAddDrawingAtIndex:(unsigned long long)a1;
- (BOOL)textView:(id)a0 canAddDrawingAtIndex:(unsigned long long)a1;
- (void)textView:(id)a0 didRemoveDrawingAtIndex:(unsigned long long)a1;
- (id)textView:(id)a0 newAttachmentForFileType:(id)a1;
- (void)textView:(id)a0 upgradeDrawingAtIndex:(unsigned long long)a1 itemProviders:(id)a2 insertionLocationInDrawing:(struct CGPoint { double x0; double x1; })a3;
- (BOOL)textViewCanAddStroke:(id)a0;
- (BOOL)textViewCanSelectDrawing:(id)a0;
- (void)textViewDidEndStroke:(id)a0;
- (void)textViewWillBeginStroke:(id)a0 forTouch:(id)a1;
- (BOOL)canConvertToTag;
- (id)defaultInkColor;
- (BOOL)handleTapGestureForAttribution:(id)a0;
- (BOOL)shouldLockTextViewContentOffset;
- (void)highlightSearchMatchesForRegex:(id)a0;
- (void)noteWillAppear:(id)a0;
- (id)scanDataDelegateWithIdentifier:(id)a0;
- (void)showUserAndDateViewsIfNecessary;
- (void)warnUserAttachmentLimitExceeded;
- (void)_iCloudShareButtonPressed:(id)a0;
- (void)addKVOObserversForNote:(id)a0;
- (id)addNewNote;
- (void)addNewNoteIfNeeded;
- (id)addNewNoteWithEvent:(id)a0;
- (void)addNote:(id)a0;
- (void)addNote:(id)a0 event:(id)a1;
- (id)addQuickNoteWithPencil:(BOOL)a0;
- (void)addSystemPaperAttachment;
- (void)addSystemPaperImageData:(id)a0 updateFirstResponder:(BOOL)a1;
- (void)addSystemPaperImageData:(id)a0 updateFirstResponder:(BOOL)a1 forceAddToPaper:(BOOL)a2;
- (BOOL)addSystemPaperLink:(id)a0 updateFirstResponder:(BOOL)a1;
- (void)addToTags:(id)a0;
- (void)addTodoListAtEndOfNote;
- (void)applyAccessibilityInfo;
- (void)applyScrollStateFromArchive:(id)a0;
- (void)applyScrollStateIfAvailable;
- (void)attachmentBrickDidChangeSize;
- (id)attachmentPresenter:(id)a0 transitionViewForAttachment:(id)a1;
- (BOOL)attachmentPresenter:(id)a0 useFullPDFTransitionForAttachment:(id)a1;
- (void)attachmentPresenterDidDismiss:(id)a0;
- (void)attachmentsExceeded:(id)a0;
- (id)attributedStringFromHTML:(id)a0;
- (long long)attributionSidebarVisibility;
- (void)audioBarViewControllerDone:(id)a0;
- (void)authenticationAuthenticateBiometricsAttemptDidFail:(id)a0;
- (id)barButtonItemForTipCustomizationID:(long long)a0;
- (id)barButtonItemWithImage:(id)a0 selector:(SEL)a1;
- (void)blockAccessibilityScreenChangedNotificationsIfNecessaryForDuration:(double)a0;
- (BOOL)canAddToTags;
- (BOOL)canConvertToText;
- (BOOL)canIndentByAmount:(long long)a0;
- (BOOL)canIndentLeft;
- (BOOL)canIndentRight;
- (BOOL)canMoveSelectedListItemDown;
- (BOOL)canMoveSelectedListItemUp;
- (BOOL)canOpenLink;
- (void)cancelFromSystemPaperCard:(id)a0;
- (void)changeStyle:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })charRangeForSwipeTextRange:(id)a0;
- (void)checkAll:(id)a0;
- (void)cleanupAfterAddImageAttachmentOperation;
- (void)cleanupAfterBarSourcedPopoverPresentation;
- (void)cleanupAfterFingerDrawing;
- (void)clearTextViewSelection;
- (void)clearTipContent:(id)a0 animated:(BOOL)a1;
- (void)convertToTag:(id)a0;
- (void)convertToText:(id)a0;
- (void)createAndPresentCloudSharingControllerBySender:(id)a0;
- (void)createInkPickerControllerIfNecessary;
- (id)createNewNote;
- (void)createSystemPaperLinkBarIfNecessary;
- (void)createTodoListItem:(id)a0;
- (void)createUndoRedoBarButtonsIfNecessary;
- (unsigned long long)currentBIUSForStyleSelector;
- (id)currentStylesForStyleSelectorIgnoreTypingAttributes:(BOOL)a0;
- (id)currentValidToolForNewDrawingOrNote;
- (void)decreaseIndentation:(id)a0;
- (void)deleteCurrentNote:(id)a0;
- (void)didAddAttachmentForNoteNotification:(id)a0;
- (void)didBeginFindInteraction;
- (void)didEndEditingNote;
- (void)didEndFindInteraction;
- (void)didInvokeAnalyticsCalloutBarButtonActionOfType:(long long)a0;
- (void)didInvokeAnalyticsChecklistActionChecked:(BOOL)a0;
- (void)disableTipContentControllerDelegateAnimated:(BOOL)a0;
- (BOOL)documentCameraController:(id)a0 canAddImages:(unsigned long long)a1;
- (void)documentCameraController:(id)a0 didFinishWithDocInfoCollection:(id)a1 imageCache:(id)a2 warnUser:(BOOL)a3;
- (void)documentCameraController:(id)a0 didFinishWithDocInfoCollection:(id)a1 imageCache:(id)a2 warnUser:(BOOL)a3 closeViewController:(BOOL)a4;
- (id)documentCameraControllerCreateDataCryptorIfNecessary;
- (void)documentCameraControllerDidCancel:(id)a0;
- (void)documentCameraControllerDidCancelWithPresentingViewController:(id)a0;
- (void)documentCameraControllerDidRetake:(id)a0 pageCount:(unsigned long long)a1;
- (void)documentCameraPresentingViewController:(id)a0 didFinishWithInfoCollection:(id)a1 imageCache:(id)a2 warnUser:(BOOL)a3 closeViewController:(BOOL)a4;
- (void)donateEditingIntentIfNecessary;
- (void)doneEditing:(id)a0;
- (void)enableTipContentControllerDelegate;
- (void)ensurePaperPreviewsExistIfNecessary;
- (void)ensureValidInkForNewDrawingOrNote;
- (void)fadeOutVisualIndicator;
- (id)flexibleSpaceBarButtonItem;
- (void)forceLightContentDidChange:(id)a0;
- (id)getTableControllerFor:(id)a0;
- (void)gridViewBack:(id)a0;
- (void)handleLeftOrRightSwipe:(id)a0;
- (void)handleMenuBarButtonTap:(id)a0;
- (BOOL)hasInlineTip;
- (void)hashtagInsertedInNote:(id)a0 tokenContentIdentifier:(id)a1 viaAutoComplete:(BOOL)a2;
- (void)hashtagViewController:(id)a0 insertFutureHashtagWithText:(id)a1;
- (void)hashtagViewController:(id)a0 insertHashtagWithText:(id)a1;
- (void)hashtagViewController:(id)a0 insertUnknownInlineAttachmentWithText:(id)a1;
- (void)hideActivityStreamToolbarAnimated:(BOOL)a0;
- (void)hideAndDismissPresentedViewController;
- (void)hideInkPicker;
- (void)hideTipAnimated:(BOOL)a0;
- (void)iCloudShareButtonPressed:(id)a0;
- (id)iCloudShareNavBarButton;
- (id)icSplitViewController;
- (long long)icasPalettePositionFromPKPalettePosition:(long long)a0;
- (void)icaxToggleTodoStyle;
- (void)increaseIndentation:(id)a0;
- (void)indentLeft:(id)a0;
- (void)indentRight:(id)a0;
- (void)indentSelectionIfPossibleByAmount:(long long)a0;
- (id)inkPaletteUndoManager:(id)a0;
- (void)inlineAttachmentDeleted:(id)a0;
- (id)inlineDrawingAttachmentForPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)inlineSketchBarButtonSelectedImage;
- (id)inlineSketchBarButtonUnselectedImage;
- (id)inlineSketchBarButtonVisualIndicator;
- (void)inputAccessoryDisclosureStateDidChange:(id)a0 tapped:(BOOL)a1;
- (void)inputAccessoryDisclosureStateWillChange:(id)a0;
- (id)insertMenuWithSender:(id)a0;
- (void)insertSidecarItems:(id)a0 service:(long long)a1;
- (BOOL)isDocumentCameraAvailable;
- (BOOL)isEditingOnSystemPaperOnPad;
- (BOOL)isEditingOnSystemPaperOnPhone;
- (BOOL)isKeyboardCameraAvailable;
- (BOOL)isNewInk:(id)a0;
- (BOOL)isNotePasswordProtectedAndLocked;
- (BOOL)isPhotosLibraryAvailable;
- (BOOL)isPositionOnTodoItem:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)isSwipeOnTodoItem:(id)a0;
- (id)linkForSelection;
- (void)loadNoteContentIntoView;
- (void)lockBarButtonPressed:(id)a0;
- (void)lockNoteManagerDidToggleLock:(id)a0;
- (void)lockNoteManagerWillToggleLock:(id)a0;
- (void)mentionInsertedInNote:(id)a0 mentionID:(id)a1 participantID:(id)a2 viaAutoComplete:(BOOL)a3;
- (id)menuElementForSourceType:(long long)a0 sender:(id)a1;
- (void)mergeRelatedOperationsDidEnd:(id)a0;
- (void)migrationStateDidChange:(id)a0;
- (void)moveCheckedToBottom:(id)a0;
- (void)moveSelectedListItemDown:(id)a0;
- (void)moveSelectedListItemUp:(id)a0;
- (void)moveToFolderPressed:(id)a0;
- (void)noteDecryptedStatusDidChange:(id)a0;
- (BOOL)noteHasAnyPencilKitDrawings;
- (void)noteOrFolderChangedCallback;
- (void)noteShowsAuthorHighlightsDidChange:(id)a0;
- (void)noteWillBeDeleted:(id)a0;
- (void)notesContextRefreshNotification:(id)a0;
- (void)openExperimentalHashtagUI:(id)a0;
- (void)openLink:(id)a0;
- (void)paperKitBundleDidMerge:(id)a0;
- (void)passwordEntryAlertControllerAttemptDidFail:(id)a0;
- (void)performAddCollaboratorsActivity:(id)a0;
- (void)performDeleteAnimation:(id)a0;
- (void)performFindInNote:(id)a0;
- (void)performReplaceInNote:(id)a0;
- (void)prepareForBarSourcedPopoverPresentation;
- (void)prepareSelectionForAddingAttachment;
- (void)presentAttachment:(id)a0;
- (void)quickNoteAllNotes:(id)a0;
- (id)radarTitleForHandwritingDebugWindow:(id)a0;
- (void)rebuildInputAccessoryView;
- (void)recreateTextView;
- (BOOL)recreateTextViewIfNecessary;
- (void)recreateTextViewIfPasswordEntryScreenExistsButNoteIsUnlocked;
- (void)redoAction:(id)a0;
- (void)refreshHandwritingDebugWindow;
- (void)rememberNoteContentForEditingIntent;
- (void)remoteDocumentCameraController:(id)a0 didFailWithError:(id)a1;
- (void)remoteDocumentCameraController:(id)a0 didFinishWithInfoCollection:(id)a1;
- (void)remoteDocumentCameraControllerDidCancel:(id)a0;
- (void)removeChecked:(id)a0;
- (void)removeCurrentScrollState;
- (void)removeInlineTipViewAnimated:(BOOL)a0;
- (void)removeKVOObserversForNote:(id)a0;
- (void)resetBarButtonsAnimated:(BOOL)a0;
- (void)resetBarButtonsAnimated:(BOOL)a0 accessoryViewOnly:(BOOL)a1;
- (void)resetDateView;
- (void)resetTextViewContentOffset;
- (void)resetTextViewUndoManager;
- (void)restoreTextViewScrollPosition:(double)a0;
- (void)restoreTextViewVisibleRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 animated:(BOOL)a1;
- (void)restoreVisualIndicatorImageAnimated:(BOOL)a0;
- (void)runScrollPerformanceTest:(id)a0 iterations:(int)a1 offset:(int)a2;
- (void)runTableHorizontalScrollPerformanceTest:(id)a0 iterations:(int)a1 offset:(int)a2;
- (void)saveCurrentScrollState;
- (void)saveFromSystemPaperCard:(id)a0;
- (void)saveInlineDrawings;
- (void)saveNote;
- (void)saveToolAsCurrentTool:(id)a0;
- (void)sceneWillDeactivate:(id)a0;
- (void)scrollRangeToVisible:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 animated:(BOOL)a1;
- (void)scrollRangeToVisible:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 animated:(BOOL)a1 inSearchableString:(id)a2 searchHighlightRegex:(id)a3;
- (void)scrollRangeToVisibleWhenViewAppears:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 animated:(BOOL)a1 inSearchableString:(id)a2 searchHighlightRegex:(id)a3;
- (void)selectDrawingAttachmentIfNeeded:(id)a0;
- (void)setBodyStyle:(id)a0;
- (void)setBulletedListStyle:(id)a0;
- (void)setCurrentTextStyle:(unsigned int)a0;
- (void)setDashedListStyle:(id)a0;
- (void)setFixedWidthStyle:(id)a0;
- (void)setHeadingStyle:(id)a0;
- (void)setNote:(id)a0 delayedForLaunch:(BOOL)a1 successHandler:(id /* block */)a2;
- (void)setNote:(id)a0 overrideScrollState:(id)a1;
- (void)setNumberedListStyle:(id)a0;
- (void)setSubheadingStyle:(id)a0;
- (void)setupForFingerDrawing;
- (void)setupLinedPaperOnNewNote:(id)a0 willStartEditing:(BOOL)a1;
- (void)shareButtonPressedWithSender:(id)a0;
- (void)sharedWithYouControllerDidUpdateHighlights:(id)a0;
- (void)shiftReturn:(id)a0;
- (void)shiftTab:(id)a0;
- (BOOL)shouldBlockHitTestOnTextView:(id)a0 event:(id)a1;
- (BOOL)shouldEnablePencilGestures;
- (BOOL)shouldIgnoreTapToStartEditingTextView:(id)a0;
- (BOOL)shouldInsertNewDrawingsAsPaper;
- (BOOL)shouldRespondToPanGestureTouch:(id)a0 forAttachment:(id)a1;
- (BOOL)shouldShowInlineTipForCustomizationID:(long long)a0;
- (BOOL)shouldShowMenuItems;
- (BOOL)shouldStartEditingForTapGesture:(id)a0;
- (BOOL)shouldUseiPadBarLayout;
- (void)showActivityStreamToolbarForObject:(id)a0 selection:(id)a1 animated:(BOOL)a2;
- (void)showDocumentCamera;
- (void)showDrawingUpdateAlert;
- (void)showHandwritingDebugWindow:(BOOL)a0;
- (void)showInkPicker:(id)a0;
- (void)showInkPicker:(BOOL)a0 animated:(BOOL)a1;
- (void)showInkPickerAndEndEditingIfNecessary;
- (void)showInlineDrawingIndicator;
- (void)showInsertUIForSourceType:(long long)a0 sender:(id)a1;
- (void)showInsertUIWithPreferredSourceType:(long long)a0;
- (void)showOrHideLockIconCoverViewControllerIfNeededIsBackgrounding:(BOOL)a0;
- (void)showOrHidePasswordEntryViewControllerIfNeeded;
- (void)showOrHideSearchPatternHighlightsIfNecessary;
- (void)showOrHideToolbarIfNecessaryAnimated:(BOOL)a0;
- (void)showOverscrollContentAndScrollToTop;
- (void)showPhotoLibrary;
- (void)showRecoverNoteAlert;
- (void)showStyleSelector:(BOOL)a0 animated:(BOOL)a1;
- (void)showStyleSelector:(BOOL)a0 animated:(BOOL)a1 sender:(id)a2;
- (void)showStyleSelectorInputView:(BOOL)a0 animated:(BOOL)a1 doneEditing:(BOOL)a2;
- (void)showStyleSelectorPopover:(BOOL)a0 animated:(BOOL)a1 sender:(id)a2;
- (void)showTipAnimated:(BOOL)a0;
- (BOOL)showsInsertButton;
- (void)startBlockingMerge;
- (void)stopBlockingMerge;
- (void)stopTextFindingIfNecessary;
- (void)styleSelector:(id)a0 didChangeIndentAmount:(long long)a1;
- (void)styleSelector:(id)a0 didSelectStyle:(unsigned int)a1;
- (void)styleSelector:(id)a0 presentViewController:(id)a1 animated:(BOOL)a2 completion:(id /* block */)a3;
- (void)styleSelector:(id)a0 toggleBIUS:(unsigned long long)a1;
- (BOOL)styleSelectorCanIndentLeft:(id)a0;
- (BOOL)styleSelectorCanIndentRight:(id)a0;
- (void)styleSelectorDidCancel:(id)a0;
- (void)styleSelectorDidIndentLeft:(id)a0;
- (void)styleSelectorDidIndentRight:(id)a0;
- (void)submitChecklistAnalyticsEventForActionType:(long long)a0;
- (void)submitNoteEditEventIfNecessary;
- (id)systemImageNameForAddCollaboratorsActivity:(id)a0;
- (void)systemPaperLinkBarVisibilityPreferenceChanged:(id)a0;
- (void)tab:(id)a0;
- (id)tableActionMenu:(id)a0;
- (void)tableButtonPressed:(id)a0;
- (void)tableCellFirstResponderChanged;
- (void)teardownSystemPaperLinkBarIfNecessary;
- (double)textViewBottomInsetThatWeWantForEditing:(BOOL)a0;
- (double)textViewBottomPaddingVisibleRatio;
- (double)textViewScrollPosition;
- (double)textViewTopInsetThatWeWantWithWillEndDragging:(BOOL)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })textViewVisibleRange;
- (id)tipFeatureForCustomizationID:(long long)a0;
- (id)titleForAddCollaboratorsActivity:(id)a0;
- (BOOL)toggleInkPickerAnimated:(BOOL)a0;
- (void)toggleTodoChecked:(id)a0;
- (void)toggleTodoStyle:(id)a0;
- (void)uncheckAll:(id)a0;
- (void)undoablySwitchToPPK:(BOOL)a0;
- (void)updateActionMenu;
- (void)updateActivityItemsConfigurationProviderWithNote:(id)a0;
- (void)updateAuthorHighlightsIfNeeded;
- (void)updateBarButtons;
- (void)updateBarButtonsAnimated:(BOOL)a0;
- (void)updateBarButtonsAnimated:(BOOL)a0 checkIfVisible:(BOOL)a1;
- (void)updateBottomContentPadding;
- (void)updateCenterToolbarButtonsVisibility;
- (void)updateChecklistButtonAccessibility;
- (void)updateDateLabelAccessibility;
- (void)updateDrawingAttachmentsIfNeeded;
- (void)updateDrawingAttachmentsInNote;
- (void)updateFormatToolbarLayoutWithSize:(struct CGSize { double x0; double x1; })a0;
- (void)updateICloudShareNavBarButton;
- (void)updateICloudShareNavBarButtonAccessibility;
- (void)updateInkPickerAndTextViewToTool:(id)a0;
- (void)updateInlineDrawings;
- (void)updateInlineDrawingsPaletteVisibility;
- (void)updateInlineSketchBarButtonItemForSelected:(BOOL)a0;
- (void)updateLastViewedMetadataIfNessessary;
- (void)updateMergeabilityController;
- (void)updateNoteUserActivityState;
- (void)updateParticipantsInDrawings;
- (void)updatePencilKitPaperStyleType;
- (void)updatePencilKitSelectionViewEnabled;
- (void)updateSelectionOnUndo:(id)a0;
- (void)updateStyleButtonMenu;
- (void)updateStyleSelectorStateIfVisibleIgnoreTypingAttributes:(BOOL)a0;
- (void)updateTableButtonsToShowMore:(BOOL)a0;
- (void)updateTextInputAccessoryViewForDidBeginEditing:(id)a0;
- (void)updateTextInputAccessoryViewForDidEndEditing:(id)a0;
- (void)updateTextViewBackground;
- (void)updateTextViewContentInsetsAnimated:(BOOL)a0;
- (void)updateTextViewContentOffset;
- (void)updateUIEnabledStatePencilActive:(BOOL)a0;
- (void)updateUndoRedoBarButtons;
- (void)updateiPhoneSystemPaperBarButtons;
- (void)upgradeAllAttachmentsInNoteWithUpgradeHelper:(id)a0;
- (void)upgradeAllAttachmentsInNoteWithUpgradeHelper:(id)a0 forSydney:(BOOL)a1;
- (void)upgradePencilKitDrawingsForNewInksPromptingIfNecessary;
- (BOOL)useInputViewForStyleSelector;
- (void)viewControllerWillStartEditModeNotification:(id)a0;
- (void)warnLimitExceededWithTitle:(id)a0 andMessage:(id)a1;
- (void)warnUserAttachmentSizeExceededWithAttachmentCount:(unsigned long long)a0;
- (void)warnUserNoteLengthExceeded;
- (void)willAddAttachmentForNoteNotification:(id)a0;

@end
