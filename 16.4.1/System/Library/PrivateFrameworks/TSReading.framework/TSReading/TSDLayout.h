@class TSDLayoutGeometry, NSString, NSMutableSet, NSObject;
@protocol TSDInfo;

@interface TSDLayout : TSDAbstractLayout <TSKSearchTarget, TSDAttachmentLayout> {
    struct CGPoint { double x; double y; } mBaseAlignmentFrameOriginForFixingInterimPosition;
    struct CGPoint { double x; double y; } mBaseCapturedAlignmentFrameOriginForInline;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mDirtyRect;
    struct { unsigned char position : 1; unsigned char size : 1; } mInvalidFlags;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mInitialBoundsForStandardKnobs;
    struct CGPoint { double x; double y; } mCapturedInfoGeometryPositionForInline;
    struct CGPoint { double x; double y; } mCapturedAlignmentFrameOriginForInline;
}

@property (readonly, nonatomic) NSObject<TSDInfo> *info;
@property (copy, nonatomic) TSDLayoutGeometry *dynamicGeometry;
@property (readonly, nonatomic) TSDLayoutGeometry *originalGeometry;
@property (readonly, nonatomic) int layoutState;
@property (readonly, nonatomic) NSMutableSet *connectedLayouts;
@property (readonly, nonatomic) BOOL invalidGeometry;
@property (retain, nonatomic) id iterativePositioningState;
@property (readonly, nonatomic) BOOL hasFinishedIterativePositioning;
@property (readonly, nonatomic) BOOL isStrokeBeingManipulated;
@property (readonly, nonatomic) BOOL canAspectRatioLockBeChangedByUser;
@property (readonly, nonatomic) BOOL resizeMayChangeAspectRatio;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL attachmentLayoutDisplacedByDropCap;

+ (id)descendentWrappablesOfLayout:(id)a0;

- (void)validate;
- (id)initWithInfo:(id)a0;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGSize { double x0; double x1; })minimumSize;
- (void)setNeedsDisplay;
- (void)setParent:(id)a0;
- (void)dealloc;
- (id)rootLayout;
- (id)layoutController;
- (void)invalidate;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForSelection:(id)a0;
- (id)stroke;
- (void)endRotate;
- (BOOL)isBeingManipulated;
- (void)invalidateChildren;
- (void)invalidateSize;
- (void)parentDidChange;
- (void)dragBy:(struct CGPoint { double x0; double x1; })a0;
- (void)invalidateFrame;
- (BOOL)allowsConnections;
- (struct CGPoint { double x0; double x1; })capturedInfoPositionForAttachment;
- (id)computeLayoutGeometry;
- (id)i_externalWrapPath;
- (id)i_wrapPath;
- (void)invalidateExteriorWrap;
- (void)invalidatePosition;
- (id)layoutGeometryFromInfo;
- (void)processChangedProperty:(int)a0;
- (Class)repClassOverride;
- (BOOL)shouldDisplayGuides;
- (BOOL)shouldProvideSizingGuides;
- (void)updateChildrenFromInfo;
- (void)endDrag;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })i_takeDirtyRect;
- (BOOL)isInTopLevelContainerForEditing;
- (id)reliedOnLayouts;
- (id)additionalLayoutsForRepCreation;
- (BOOL)canFlip;
- (id)computeInfoGeometryDuringResize;
- (void)dragByUnscaled:(struct CGPoint { double x0; double x1; })a0;
- (void)p_registerWithLayoutController:(id)a0;
- (void)processChanges:(id)a0;
- (void)validateFromLastInterimPosition;
- (void)wasRemovedFromLayoutController:(id)a0;
- (void)addConnectedLayout:(id)a0;
- (id)additionalDependenciesForChildLayout:(id)a0;
- (id)additionalGuides;
- (struct CGPoint { double x0; double x1; })alignmentFrameOriginForFixingInterimPosition;
- (void)beginDrag;
- (void)beginDynamicOperation;
- (void)beginResize;
- (void)beginRotate;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundsForStandardKnobs;
- (struct CGPoint { double x0; double x1; })calculatePointFromSearchReference:(id)a0;
- (struct CGPoint { double x0; double x1; })centerForConnecting;
- (struct CGPoint { double x0; double x1; })centerForRotation;
- (id)childSearchTargets;
- (id)computeInfoGeometryFromLayoutGeometry:(id)a0;
- (id)dependentLayouts;
- (BOOL)dependentsRelyOnSize;
- (void)dynamicStrokeWidthChangeDidBegin;
- (void)dynamicStrokeWidthChangeDidEnd;
- (void)dynamicStrokeWidthUpdateToValue:(double)a0;
- (void)endDynamicOperation;
- (void)finishIterativePositioning;
- (void)i_accumulateLayoutsIntoSet:(id)a0;
- (id)i_layoutGeometryProvider;
- (void)i_setBaseCapturedAlignmentFrameOriginForInline;
- (BOOL)i_useBaseCapturedAlignmentFrameOriginForInline;
- (struct CGPoint { double x0; double x1; })infoGeometryPositionForCurrentAttachedLayoutGeometry;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })initialBoundsForStandardKnobs;
- (id)initialInfoGeometry;
- (double)inlineCenteredAlignmentOffset;
- (double)inlineVerticalOffset;
- (id)inspectorGeometry;
- (BOOL)isBeingTransformed;
- (BOOL)isInGroup;
- (id)layoutGeometryFromProvider;
- (void)layoutSearchForAnnotationWithHitBlock:(id /* block */)a0;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })layoutTransformInInfoSpace:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a0;
- (struct CGSize { double x0; double x1; })maximumFrameSizeForChild:(id)a0;
- (struct CGSize { double x0; double x1; })maximumSizeForChildLayout:(id)a0;
- (BOOL)orderedBefore:(id)a0;
- (id)originalPureGeometry;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })originalPureTransformInRoot;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })originalTransformForProvidingGuides;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })originalTransformInRoot;
- (void)p_invalidateConnectedLayouts;
- (void)p_recursiveInvalidate;
- (void)p_unregisterWithLayoutController:(id)a0;
- (void)parentWillChangeTo:(id)a0;
- (void)pauseDynamicTransformation;
- (id)pureGeometry;
- (id)pureGeometryInRoot;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })pureTransformInRoot;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForPresentingAnnotationPopoverForSelection:(id)a0;
- (void)removeConnectedLayout:(id)a0;
- (void)resizeWithTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a0 asChild:(BOOL)a1;
- (double)scaleForInlineClampingUnrotatedSize:(struct CGSize { double x0; double x1; })a0 withGeometry:(id)a1;
- (id)searchTarget;
- (void)setAdjustedInterimPositionX:(double)a0;
- (void)setAdjustedInterimPositionY:(double)a0;
- (BOOL)shouldBeDisplayedInShowMode;
- (BOOL)shouldProvideGuidesDuringExclusiveAlignmentOperation;
- (BOOL)shouldValidate;
- (void)takeRotationFromTracker:(id)a0;
- (void)unregisterFromLayoutController;
- (BOOL)wantsRoundedInlinePosition;
- (void)wasAddedToLayoutController:(id)a0;
- (void)willBeAddedToLayoutController:(id)a0;
- (void)willBeRemovedFromLayoutController:(id)a0;
- (void)willLayoutInlineWithTextAttributes:(struct __CFDictionary { } *)a0 columnWidth:(double)a1;

@end
