@class NSMutableDictionary, NSArray, NSDictionary, NSString, NSLocale, NSMutableArray, OITSULocaleStructuredDictionary;

@interface OITSUNumberFormatter : NSObject {
    NSLocale *_locale;
    NSArray *_decimalFormatters;
    NSDictionary *_currencyFormatters;
    NSArray *_percentageFormatters;
    NSArray *_scientificFormatters;
    struct __CFNumberFormatter { } *_fractionFormatter;
    NSString *_currencyString;
    NSString *_percentageString;
    NSString *_scientificString;
    NSString *_decimalString;
    NSString *_decimalSeparator;
    NSString *_currencyDecimalSeparator;
    NSString *_groupingSeparator;
    NSString *_currencyGroupingSeparator;
    NSString *_percentSymbol;
    unsigned long long _groupingSize;
    NSMutableArray *_transformedDecimalStrings;
    NSMutableArray *_transformedCurrencyStrings;
    NSMutableArray *_transformedPercentageStrings;
    NSMutableArray *_transformedScientificStrings;
    OITSULocaleStructuredDictionary *_harmonizedNumberFormatterSymbols;
    NSMutableDictionary *_currencyCodeToSymbolMap;
    NSMutableDictionary *_currencyCodeToHalfWidthSymbolMap;
    NSString *_additionalCurrencyCode;
    NSDictionary *_additionalCurrencyCodeFormatters;
}

+ (void)initialize;
+ (id)availableCurrencyCodes;
+ (id)currencySymbolForCurrencyCode:(id)a0;
+ (id)currentLocaleCurrencyCode;
+ (id)currentLocaleDecimalSeparator;
+ (unsigned short)defaultDecimalPlacesForCurrencyCode:(id)a0;
+ (id)defaultFormatStringForValueType:(int)a0;
+ (id)defaultFormatStringForValueType:(int)a0 negativeStyle:(int)a1;
+ (id)displayNameForCurrencyCode:(id)a0;
+ (void)formatString:(id)a0 replaceOccurencesOfUnescapedString:(id)a1 withString:(id)a2;
+ (id)formatString:(id)a0 transformedForNegativeStyle:(int)a1;
+ (id)formatterForLocale:(id)a0;
+ (id)numberFormatStringSpecialSymbols;
+ (int)positionOfCurrencySymbolInNumberFormatSubpattern:(id)a0;
+ (int)positionOfMinusSignInNumberFormatSubpattern:(id)a0;
+ (int)positionOfSymbol:(id)a0 inNumberFormatSubpattern:(id)a1;
+ (id)userVisibleCurrencyCodes;
+ (struct __CFNumberFormatter { } *)createHarmonizedCFNumberFormatterWithLocale:(id)a0 style:(long long)a1;
+ (id)currencyDecimalSeparatorForLocale:(id)a0;
+ (id)currencyGroupingSeparatorForLocale:(id)a0;
+ (id)currencySymbolForCurrencyCode:(id)a0 locale:(id)a1;
+ (id)currentLocaleCurrencyDecimalSeparator;
+ (id)decimalSeparatorForLocale:(id)a0;
+ (id)defaultCurrencyCodeForLocale:(id)a0;
+ (id)groupingSeparatorForLocale:(id)a0;
+ (unsigned long long)groupingSizeForLocale:(id)a0;
+ (id)percentSymbolForLocale:(id)a0;
+ (id)stringBySubstitutingCharactersCFNumberFormatterDoesntUnderstand:(id)a0;

- (id)currencyCode;
- (void)dealloc;
- (id)initWithLocale:(id)a0;
- (void).cxx_destruct;
- (id)currencyDecimalSeparator;
- (id)currencyGroupingSeparator;
- (id)decimalSeparator;
- (id)groupingSeparator;
- (unsigned long long)groupingSize;
- (id)percentSymbol;
- (BOOL)currencyFromString:(id)a0 additionalCurrencyCode:(id)a1 value:(double *)a2 formatString:(id *)a3 currencyCode:(id *)a4;
- (id)currencySymbolForCurrencyCode:(id)a0;
- (BOOL)decimalFromString:(id)a0 value:(double *)a1 formatString:(id *)a2;
- (id)defaultFormatStringForValueType:(int)a0;
- (id)defaultFormatStringForValueType:(int)a0 negativeStyle:(int)a1;
- (id)displayNameForCurrencyCode:(id)a0;
- (BOOL)fractionFromString:(id)a0 value:(double *)a1;
- (id)halfWidthCurrencySymbolForCurrencyCode:(id)a0;
- (id)p_currencyFormatters;
- (id)p_decimalFormatters;
- (id)p_percentageFormatters;
- (id)p_scientificFormatters;
- (BOOL)percentageFromString:(id)a0 value:(double *)a1 formatString:(id *)a2;
- (BOOL)scientificFromString:(id)a0 value:(double *)a1 formatString:(id *)a2;
- (id)p_createDictionaryOfCurrencyFormattersForCurrencies:(id)a0;
- (struct __CFNumberFormatter { } *)p_createHarmonizedCFNumberFormatterOfStyle:(long long)a0;
- (id)p_findCurrencySymbolInString:(id)a0 additionalCurrencyCode:(id)a1 successfullString:(id *)a2 currencyCode:(id *)a3;
- (void)p_loadHarmonizedNumberFormatterSymbols;
- (void)p_numberPreferencesChanged:(id)a0;
- (BOOL)p_valueFromString:(id)a0 formatters:(id)a1 value:(double *)a2 formatString:(id *)a3;

@end
