@class NSString, NSURL, ARSession, NSSet, NSMutableDictionary, MOVReaderInterface, ARImageCroppingTechnique, NSMutableArray, NSObject, ARSessionReplayStats, CVADepthIR, ARParentImageSensorSettings;
@protocol ARReplaySensorDelegate, ARSensorDelegate, OS_dispatch_source, OS_dispatch_queue;

@interface ARReplaySensorPublic : NSObject <ARReplaySensorProtocolInternal, ARReplaySensorProtocol> {
    BOOL _manualCommandLineMode;
    NSMutableDictionary *_nextWrappedImageDataForStreamIdentifierMap;
    NSMutableDictionary *_metadataCache;
    double _recordTimestampToMovieTimestampDifference;
    NSObject<OS_dispatch_queue> *_replayQueue;
    NSObject<OS_dispatch_source> *_timer;
    double _startTime;
    long long _tick;
    BOOL _running;
    BOOL _replayStarted;
    _Atomic BOOL _finishedReplaying;
    MOVReaderInterface *_reader;
    BOOL _displaySynchronizationMarker;
    long long _displaySynchronizationMarkerFrames;
    struct __CVBuffer { } *_synchronizationMarker;
    struct __CVPixelBufferPool { } *_synchronizationMarkerPool;
    struct OpaqueVTPixelTransferSession { } *_synchronizationTransferSession;
    ARImageCroppingTechnique *_croppingTechnique;
    NSSet *_availableVideoStreams;
    NSSet *_availableMetadataStreams;
    NSSet *_videoStreamsToReplay;
    id<ARReplaySensorDelegate> _traceReplaySensorDelegate;
    struct { void /* unknown type, empty encoding */ columns[4]; } _extrinsicsFromUltrawideToWide;
    unsigned long long _depthVideoTrackType;
    long long _recordingFormatVersion;
    struct { void /* unknown type, empty encoding */ columns[4]; } _extrinsicsFromWideToJasper;
    struct { void /* unknown type, empty encoding */ columns[4]; } _extrinsicsFromUltrawideToJasper;
    ARSessionReplayStats *_determinedReplayStats;
    CVADepthIR *_depthContainer;
    struct __CVBuffer { } *_depthFloat32PixelBuffer;
    NSMutableDictionary *_calibrationBuffer;
    NSMutableDictionary *_featureBuffers;
    BOOL _shouldReplayPearlDepthData;
    BOOL _usingST2Recording;
}

@property (nonatomic) int imageIndex;
@property long long nextFrameIndex;
@property long long targetFrameIndex;
@property (nonatomic) double recordingTimeToReplayTimeOffset;
@property (nonatomic) BOOL recordingTimeToReplayTimeOffsetReset;
@property (readonly, nonatomic) NSMutableArray *cmDataBuffer;
@property (readonly, nonatomic) NSMutableArray *userEventBuffer;
@property (readonly, nonatomic) NSMutableArray *cvaDepthTOFBuffer;
@property (weak, nonatomic) id<ARSensorDelegate> delegate;
@property (weak) id<ARReplaySensorDelegate> replaySensorDelegate;
@property (readonly, nonatomic) NSURL *sequenceURL;
@property (readonly, nonatomic) NSString *deviceModel;
@property (readonly, nonatomic) NSString *osVersion;
@property (readonly, nonatomic) NSString *arkitVersion;
@property (readonly, nonatomic) struct CGSize { double width; double height; } imageResolution;
@property (readonly, nonatomic) double nominalFrameRate;
@property (readonly, nonatomic) unsigned long long recordedSensorTypes;
@property (readonly, nonatomic) long long replayMode;
@property (readonly, nonatomic) BOOL isReplayingManually;
@property (readonly, nonatomic, getter=isSynchronousMode) BOOL synchronousMode;
@property float advanceFramesPerSecondMultiplier;
@property (copy, nonatomic) NSSet *customDataClasses;
@property (retain, nonatomic) ARParentImageSensorSettings *parentImageSensorSettings;
@property (retain, nonatomic) NSString *mainVideoStreamIdentifier;
@property (weak, nonatomic) ARSession *session;
@property (readonly, nonatomic) BOOL interrupted;
@property (readonly, nonatomic) BOOL shouldReplayVisionData;
@property (weak) id<ARReplaySensorDelegate> traceReplaySensorDelegate;
@property (nonatomic) unsigned long long powerUsage;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL finishedReplaying;

- (double)currentTime;
- (void)interrupt;
- (void)dealloc;
- (BOOL)isEqual:(id)a0;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)failWithError:(id)a0;
- (void)stop;
- (void)start;
- (void).cxx_destruct;
- (void)advance;
- (void)endInterruption;
- (void)tick;
- (id)initWithSequenceURL:(id)a0 replayMode:(long long)a1;
- (void)_populateDepthDataForImageData:(id)a0;
- (BOOL)_allStreamsAreAvailable:(id)a0;
- (void)_appendCalibrationData:(id)a0 streamIdentifier:(id)a1;
- (void)_appendVisionDataToImageData:(id)a0 streamIdentifier:(id)a1;
- (id)_cameraCalibrationDataForStream:(id)a0 timestamp:(double)a1;
- (void)_didOutputSensorData:(id)a0;
- (void)_endReplay;
- (double)_getMinFrameDurationForStream:(id)a0;
- (id)_mainVideoStringID:(id)a0;
- (id)_populateCalibrationStream:(id)a0 timestamp:(double)a1;
- (void)_populateDeviceOrientationIfNeededOnImageData:(id)a0 fromDeviceOrientationData:(id)a1 accelerometerData:(id)a2 streamIdentifier:(id)a3;
- (void)_replaySensorFinishedReplayingData;
- (id)_streamIdentifierForCaptureDeviceType:(id)a0 position:(long long)a1;
- (void)advanceFrame;
- (void)advanceToFrameIndex:(long long)a0;
- (id)availableVideoFormatForDeviceType:(id)a0 position:(long long)a1;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })currentCMTime;
- (id)customDataForTimestamp:(double)a0;
- (id)getItemsFromStream:(id)a0 upToMovieTime:(double)a1 converter:(id /* block */)a2;
- (id)getItemsFromStream:(id)a0 upToMovieTime:(double)a1 metadataClass:(Class)a2;
- (id)getNextWrappedImageDataForReplay;
- (id)getNextWrappedItemsFromStream:(id)a0 converter:(id /* block */)a1;
- (id)getWrappedItemsFromPixelBufferStream:(id)a0 upToMovieTime:(double)a1 converter:(id /* block */)a2;
- (id)getWrappedItemsFromStream:(id)a0 upToMovieTime:(double)a1 converter:(id /* block */)a2;
- (id)getWrappedItemsFromStream:(id)a0 upToMovieTime:(double)a1 withBlock:(id /* block */)a2;
- (id)imageDataToReplayForTimestamp:(double)a0;
- (id)initWithDataFromFile:(id)a0;
- (id)initWithSequenceURL:(id)a0 manualReplay:(BOOL)a1;
- (id)initWithSequenceURL:(id)a0 manualReplay:(BOOL)a1 synchronousMode:(BOOL)a2;
- (id /* block */)keyedArchiveConverter:(Class)a0;
- (id /* block */)keyedArchiveConverterForClasses:(id)a0;
- (id /* block */)metadataWrapperConverter:(Class)a0;
- (id)peekNextWrappedImageDataForAllRequiredStreams;
- (id)peekNextWrappedImageDataForStreamIdentifier:(id)a0;
- (void)prepareForReplay;
- (unsigned long long)providedDataTypes;
- (void)readAndVendCMDatasUntil:(double)a0;
- (void)readAndVendCVADepthTOFsUntil:(double)a0;
- (void)readAndVendCVAUserEventsUntil:(double)a0;
- (void)readFileMetadata;
- (BOOL)readNextFrameFromStream:(id)a0 forWrapper:(id)a1;
- (double)sourceTimestampForMovieTimestamp:(double)a0;
- (void)startReplayIfNeeded;
- (void)waitForOutstandingCallbacks;
- (id)wrappedImageDataOrderedByTime:(id)a0;

@end
