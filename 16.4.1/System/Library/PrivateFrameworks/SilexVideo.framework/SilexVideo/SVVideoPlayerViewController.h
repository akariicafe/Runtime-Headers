@class SVKeyValueObserver, UIViewController, SVVideoVolumeObserver, SVAutomaticFullscreenVideoPlaybackBehaviorManager, SVVideoPlaybackQueue, SVVideoAdSkipButton, UIGestureRecognizer, NSString, UIActivityIndicatorView, SVAdGradientView, SVAdPrivacyButton, AVPlayerViewController, SVLearnMoreButton, SVPlaybackCoordinator;
@protocol SVVideoPlayerViewControllerDelegate, SVVideoPlayerViewControllerDataSource, SVVideoAdProviding;

@interface SVVideoPlayerViewController : UIViewController <SVVideoPlaybackObserver, AVPlayerViewControllerDelegate_WebKitOnly, AVPlayerViewControllerDelegatePrivate, SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate, UIGestureRecognizerDelegate, SVVideoAdViewControllerProviding>

@property (retain, nonatomic) SVVideoPlaybackQueue *queue;
@property (retain, nonatomic) SVPlaybackCoordinator *coordinator;
@property (retain, nonatomic) SVPlaybackCoordinator *primaryContentCoordinator;
@property (retain, nonatomic) id<SVVideoAdProviding> videoAd;
@property (nonatomic) BOOL playButtonTapped;
@property (retain, nonatomic) SVLearnMoreButton *learnMoreButton;
@property (retain, nonatomic) SVVideoAdSkipButton *skipButton;
@property (retain, nonatomic) SVAdPrivacyButton *adPrivacyButton;
@property (retain, nonatomic) SVAdGradientView *adGradientView;
@property (retain, nonatomic) UIActivityIndicatorView *activityIndicatorView;
@property (retain, nonatomic) SVKeyValueObserver *videoBoundsObserver;
@property (readonly, nonatomic) SVAutomaticFullscreenVideoPlaybackBehaviorManager *fullscreenBehaviorManager;
@property (nonatomic) unsigned long long mode;
@property (nonatomic, getter=isFullscreen) BOOL fullscreen;
@property (retain, nonatomic) SVVideoVolumeObserver *volumeObserver;
@property (readonly, nonatomic) UIGestureRecognizer *tapGesture;
@property (nonatomic) BOOL showsPlaybackControls;
@property (weak, nonatomic) id<SVVideoPlayerViewControllerDelegate> delegate;
@property (weak, nonatomic) id<SVVideoPlayerViewControllerDataSource> dataSource;
@property (nonatomic) BOOL enablePictureInPictureBehaviors;
@property (readonly, nonatomic, getter=isPlaying) BOOL playing;
@property (readonly, nonatomic, getter=isLoading) BOOL loading;
@property (readonly, nonatomic, getter=isFullscreenInProgress) BOOL fullscreenInProgress;
@property (nonatomic) unsigned long long fullscreenBehavior;
@property (readonly, nonatomic, getter=isPictureInPictureActive) BOOL pictureInPictureActive;
@property (retain, nonatomic) AVPlayerViewController *playerViewController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) UIViewController *viewControllerForModalPresentation;

- (void)finished;
- (void)playerViewController:(id)a0 willTransitionToVisibilityOfPlaybackControls:(BOOL)a1 withAnimationCoordinator:(id)a2;
- (void)updateViewConstraints;
- (void)pause;
- (void)stopPictureInPicture;
- (void)dealloc;
- (void)viewDidLoad;
- (id)init;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (void).cxx_destruct;
- (void)viewDidLayoutSubviews;
- (void)loadView;
- (void)advance;
- (void)tapped;
- (void)playerViewController:(id)a0 restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:(id /* block */)a1;
- (void)playerViewController:(id)a0 willBeginFullScreenPresentationWithAnimationCoordinator:(id)a1;
- (void)playerViewController:(id)a0 willEndFullScreenPresentationWithAnimationCoordinator:(id)a1;
- (void)playerViewControllerDidStartPictureInPicture:(id)a0;
- (void)playerViewControllerDidStopPictureInPicture:(id)a0;
- (void)playerViewControllerWillStartPictureInPicture:(id)a0;
- (void)playerViewControllerWillStopPictureInPicture:(id)a0;
- (BOOL)playerViewController:(id)a0 shouldExitFullScreenWithReason:(long long)a1;
- (void)learnMoreButtonTapped:(id)a0;
- (void)playerViewController:(id)a0 metricsCollectionEventOccured:(long long)a1;
- (void)willUnload;
- (void)startPictureInPictureIfPossible;
- (void)addDebuggerAction:(id /* block */)a0;
- (void)embedVideoPlayerIfNeeded;
- (void)playWithButtonTapped:(BOOL)a0;
- (void)removeVideoPlayerIfNeeded;
- (void)enterFullscreenWithCompletionBlock:(id /* block */)a0;
- (void)adSkipButtonTapped:(id)a0;
- (void)exitFullscreenWithCompletionBlock:(id /* block */)a0;
- (void)fullscreenBehaviorManagerRequiresFullscreenPlayback:(id)a0;
- (BOOL)playbackAllowedForPlaybackCoordinator:(id)a0;
- (void)playbackCoordinator:(id)a0 playbackFailedWithError:(id)a1;
- (void)playbackCoordinator:(id)a0 timeElapsed:(double)a1 duration:(double)a2;
- (void)playbackCoordinatorFinishedLoadingVideoURL:(id)a0;
- (void)playbackCoordinatorFinishedPlayback:(id)a0;
- (void)playbackCoordinatorPausedPlayback:(id)a0;
- (void)playbackCoordinatorResumedPlayback:(id)a0;
- (void)playbackCoordinatorStartedPlayback:(id)a0;
- (void)playbackCoordinatorStateChanged:(id)a0;
- (void)refreshControlsForPlaybackCoordinator:(id)a0;
- (void)setupQueueIfNeeded;
- (void)startPlaybackForCoordinatorIfAllowed:(id)a0;
- (void)transitionToCoordinator:(id)a0;
- (void)updateAdsButtonsVisibility;
- (void)updateSkipButtonWithThreshold:(unsigned long long)a0 time:(double)a1;

@end
