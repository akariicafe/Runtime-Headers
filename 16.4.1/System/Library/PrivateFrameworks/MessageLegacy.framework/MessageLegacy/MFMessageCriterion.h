@class NSString, NSIndexSet, NSArray;

@interface MFMessageCriterion : NSObject <NSCopying> {
    NSString *_criterionIdentifier;
    long long _type;
    NSString *_uniqueId;
    NSString *_expression;
    NSArray *_criteria;
    int _dateUnitType;
    unsigned char _allCriteriaMustBeSatisfied : 1;
    unsigned char _dateIsRelative : 1;
    NSArray *_requiredHeaders;
}

@property (nonatomic) long long criterionType;
@property (retain, nonatomic) NSString *criterionIdentifier;
@property (nonatomic) int qualifier;
@property (copy, nonatomic) NSString *expression;
@property (retain, nonatomic) NSIndexSet *libraryIdentifiers;
@property (nonatomic) BOOL preferFullTextSearch;
@property (nonatomic) BOOL useFlaggedForUnreadCount;
@property (nonatomic) unsigned char includeRelatedMessages : 1;
@property (nonatomic) BOOL expressionIsSanitized;
@property (nonatomic) BOOL includeRemoteBodyContent;
@property (retain, nonatomic) NSString *name;
@property (copy, nonatomic) NSArray *criteria;

+ (id)andCompoundCriterionWithCriteria:(id)a0;
+ (id)ccMeCriterion;
+ (id)criteriaFromDefaultsArray:(id)a0;
+ (id)criteriaFromDefaultsArray:(id)a0 removingRecognizedKeys:(BOOL)a1;
+ (id)criterionExcludingMailboxes:(id)a0;
+ (id)criterionForAccount:(id)a0;
+ (id)criterionForConversationID:(long long)a0;
+ (id)criterionForDateReceivedOlderThanDate:(id)a0;
+ (id)criterionForLibraryID:(id)a0;
+ (id)criterionForMailbox:(id)a0;
+ (id)criterionForMailboxURL:(id)a0;
+ (id)criterionForNotDeletedConversationID:(long long)a0;
+ (long long)criterionTypeForString:(id)a0;
+ (id)defaultsArrayFromCriteria:(id)a0;
+ (id)expressionForDate:(id)a0;
+ (id)flaggedMessageCriterion;
+ (id)hasAttachmentsCriterion;
+ (id)includesMeCriterion;
+ (id)messageIsDeletedCriterion:(BOOL)a0;
+ (id)messageIsJournaledCriterion:(BOOL)a0;
+ (id)messageIsServerSearchResultCriterion:(BOOL)a0;
+ (id)notCriterionWithCriterion:(id)a0;
+ (id)orCompoundCriterionWithCriteria:(id)a0;
+ (id)readMessageCriterion;
+ (id)stringForCriterionType:(long long)a0;
+ (id)threadMuteMessageCriterion;
+ (id)threadNotifyMessageCriterion;
+ (id)toMeCriterion;
+ (id)todayMessageCriterion;
+ (id)unreadMessageCriterion;
+ (id)VIPSenderMessageCriterion;
+ (void)_updateAddressComments:(id)a0;

- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)dictionaryRepresentation;
- (void)dealloc;
- (BOOL)isEqual:(id)a0;
- (id)initWithDictionary:(id)a0;
- (unsigned long long)hash;
- (id)init;
- (id)description;
- (id)initWithType:(long long)a0 qualifier:(int)a1 expression:(id)a2;
- (BOOL)_evaluateSenderHeaderCriterion:(id)a0;
- (BOOL)_evaluateAccountCriterion:(id)a0;
- (BOOL)_evaluateAddressBookCriterion:(id)a0;
- (BOOL)_evaluateAddressHistoryCriterion:(id)a0;
- (BOOL)_evaluateAttachmentCriterion:(id)a0;
- (BOOL)_evaluateCompoundCriterion:(id)a0;
- (BOOL)_evaluateConversationIDCriterion:(id)a0;
- (BOOL)_evaluateDateCriterion:(id)a0;
- (BOOL)_evaluateFlagCriterion:(id)a0;
- (BOOL)_evaluateFullNameCriterion:(id)a0;
- (BOOL)_evaluateHeaderCriterion:(id)a0;
- (BOOL)_evaluateIsDigitallySignedCriterion:(id)a0;
- (BOOL)_evaluateIsEncryptedCriterion:(id)a0;
- (BOOL)_evaluateMailboxCriterion:(id)a0;
- (BOOL)_evaluatePartOfStructure:(id)a0;
- (BOOL)_evaluatePriorityIsHighCriterion:(id)a0;
- (BOOL)_evaluatePriorityIsLowCriterion:(id)a0;
- (BOOL)_evaluatePriorityIsNormalCriterion:(id)a0;
- (id)_headersRequiredForEvaluation;
- (id)_qualifierString;
- (BOOL)allCriteriaMustBeSatisfied;
- (id)dateFromExpression;
- (BOOL)dateIsRelative;
- (int)dateUnits;
- (id)descriptionWithDepth:(unsigned int)a0;
- (BOOL)doesMessageSatisfyCriterion:(id)a0;
- (id)initWithCriterion:(id)a0 expression:(id)a1;
- (id)initWithDictionary:(id)a0 andRemoveRecognizedKeysIfMutable:(BOOL)a1;
- (BOOL)isVIPCriterion;
- (int)messageRuleQualifierForString:(id)a0;
- (void)setAllCriteriaMustBeSatisfied:(BOOL)a0;
- (void)setDateIsRelative:(BOOL)a0;
- (void)setDateUnits:(int)a0;
- (id)simplifiedCriterion;
- (id)simplifyOnce;
- (id)stringForMessageRuleQualifier:(int)a0;

@end
