@class NSUndoManager, WFMoveToFolderCoordinator, WFComposeFlowController, WFRunWorkflowToolbar, WFWorkflow, WFWorkflowSettingsViewController, UILabel, UIAction, NSMutableArray, NSString, WFAddToHomeScreenActivity, WFSwiftUIActionDrawerCoordinator, UIImage, HMHome, UIButton, WFDatabase, UIView, WFIcon, WFEditorViewController, WFComposeUserActivityManager, NSHashTable;
@protocol WFEditorDocumentMenuDelegate, WFComposeViewControllerPresenter, WFComposeViewControllerDelegate;

@interface WFComposeViewController : UIViewController <WFComposeFlowControllerDelegate, WFWorkflowSettingsViewControllerDelegate, WFDrawerControllerDelegate, WFSwiftUIActionDrawerCoordinatorDelegate, UINavigationBarDelegate, WFEditorViewControllerDelegate, WFRunWorkflowToolbarDelegate, WFSwiftUIActionDescriptionViewControllerDelegate, WFEditorAuxiliaryViewPresenter, WFInspectorPaneSegmentedControlDelegate, UIPopoverPresentationControllerDelegate, WFShortcutIconEditorViewControllerDelegate, UINavigationItemRenameDelegate, WFAddToHomeScreenActivityDelegate>

@property (readonly, nonatomic) WFDatabase *database;
@property (readonly, nonatomic) NSUndoManager *undoManager;
@property (readonly, weak, nonatomic) UIButton *settingsButton;
@property (readonly, weak, nonatomic) UIView *separatorView;
@property (readonly, nonatomic) NSHashTable *movedDragControllers;
@property (retain, nonatomic) WFComposeUserActivityManager *userActivityManager;
@property (readonly, nonatomic) NSMutableArray *editingStates;
@property (retain, nonatomic) WFRunWorkflowToolbar *toolbar;
@property (nonatomic) BOOL isRenameSessionActive;
@property (nonatomic) BOOL shouldShowShareButton;
@property (nonatomic) BOOL observingSharingEnabledUserDefault;
@property (readonly, nonatomic) BOOL isNewShortcutFlow;
@property (retain, nonatomic) UILabel *titleViewLabel;
@property (retain, nonatomic) UIButton *titleViewSettingsButton;
@property (retain, nonatomic) UIButton *titleAccessorySettingsButton;
@property (retain, nonatomic) UIAction *backAction;
@property (retain, nonatomic) WFComposeFlowController *flowController;
@property (retain, nonatomic) WFMoveToFolderCoordinator *moveCoordinator;
@property (retain, nonatomic) WFAddToHomeScreenActivity *addToHomeScreenActivity;
@property (readonly, nonatomic) WFWorkflowSettingsViewController *settingsViewController;
@property (retain, nonatomic) HMHome *home;
@property (retain, nonatomic) WFIcon *cachedWorkflowIcon;
@property (retain, nonatomic) UIImage *cachedWorkflowIconImage;
@property (readonly, nonatomic) WFSwiftUIActionDrawerCoordinator *drawerCoordinator;
@property (readonly, nonatomic) WFWorkflow *workflow;
@property (readonly, nonatomic) WFEditorViewController *editorViewController;
@property (readonly, nonatomic) double bottomContentInset;
@property (readonly, nonatomic) unsigned long long navigationUpdateBehavior;
@property (weak, nonatomic) id<WFComposeViewControllerPresenter> presenter;
@property (readonly, nonatomic) unsigned long long editingState;
@property (weak, nonatomic) id<WFComposeViewControllerDelegate> delegate;
@property (weak, nonatomic) id<WFEditorDocumentMenuDelegate> editorDocumentMenuDelegate;
@property (nonatomic) BOOL isEditingNewWorkflow;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL canExpandDrawerAsAuxiliaryViewPresenter;

+ (BOOL)canShowInputAction;

- (void)viewSafeAreaInsetsDidChange;
- (void)presentationControllerDidDismiss:(id)a0;
- (long long)positionForBar:(id)a0;
- (id)cancelBarButtonItem;
- (void)updateUserActivityState:(id)a0;
- (void)dealloc;
- (BOOL)canBecomeFirstResponder;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (id)keyCommands;
- (void)traitCollectionDidChange:(id)a0;
- (void)viewDidDisappear:(BOOL)a0;
- (struct CGSize { double x0; double x1; })sizeForChildContentContainer:(id)a0 withParentContainerSize:(struct CGSize { double x0; double x1; })a1;
- (void)updateToolbarVisibility;
- (void)beginEditing;
- (void)viewWillLayoutSubviews;
- (void).cxx_destruct;
- (void)loadView;
- (void)viewWillAppear:(BOOL)a0;
- (BOOL)accessibilityPerformEscape;
- (BOOL)accessibilityPerformMagicTap;
- (void)navigationItem:(id)a0 didEndRenamingWithTitle:(id)a1;
- (id)navigationItem:(id)a0 willBeginRenamingWithSuggestedTitle:(id)a1 selectedRange:(inout struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a2;
- (void)didTapDone;
- (void)finishEditing;
- (id)placeholderName;
- (void)didTapCancel:(id)a0;
- (void)didTapDone:(id)a0;
- (id)doneBarButtonItem;
- (void)presentSettingsViewController;
- (void)resetToolbar;
- (void)updateTitleView:(id)a0;
- (id)initWithWorkflow:(id)a0 database:(id)a1 home:(id)a2 shouldShowShareButton:(BOOL)a3;
- (void)addShowResultActionFromKeyPress;
- (void)layoutTitleView;
- (void)updateBackActionForDocumentMenu;
- (void)addRepeatEachActionFromKeyPress;
- (double)actionCanvasWidthForSwiftUIActionDrawerCoordinator:(id)a0;
- (void)actionsDidChangeInEditorViewController:(id)a0;
- (id)activityControllerWithFileActivity:(id)a0 sender:(id)a1;
- (void)addAskForInputActionFromKeyPress;
- (void)addChooseFromMenuActionFromKeyPress;
- (void)addCommentActionFromKeyPress;
- (void)addConditionalActionFromKeyPress;
- (void)addRepeatCountActionFromKeyPress;
- (void)addSetVariableActionFromKeyPress;
- (void)adjustLargeTitleSize;
- (void)appDidResume;
- (void)appendAction:(id)a0;
- (void)appendActionWithIdentifier:(id)a0;
- (void)collapseDrawerAsAuxiliaryViewPresenter;
- (void)composeFlowControllerDidFinishEditing:(id)a0;
- (void)didTapNext;
- (void)dismissForTutorial:(BOOL)a0 completionHandler:(id /* block */)a1;
- (id)dismissingScrollViewForDrawerController:(id)a0;
- (BOOL)displaysInlineRenameInHeader;
- (id)drawerController;
- (void)drawerController:(id)a0 didTransitionToVisibility:(unsigned long long)a1;
- (void)drawerController:(id)a0 willTransitionToVisibility:(unsigned long long)a1;
- (id)drawerHostingViewController;
- (id)drawerViewController;
- (void)editorViewController:(id)a0 didChangeRunningState:(BOOL)a1 fractionCompleted:(double)a2 isWaiting:(BOOL)a3;
- (void)editorViewController:(id)a0 didChangeVariablePickingState:(BOOL)a1;
- (void)editorViewControllerDidFinishRunning:(id)a0 cancelled:(BOOL)a1;
- (id)emptyStateString;
- (void)expandDrawer;
- (void)expandDrawerAsAuxiliaryViewPresenter;
- (id)findViewInNavigationBarWithName:(id)a0;
- (id)findViewInView:(id)a0 withName:(id)a1;
- (void)finishEditingAndDismissForTutorial:(BOOL)a0 completionHandler:(id /* block */)a1;
- (void)homeScreenActivityDidFinish:(id)a0 success:(BOOL)a1;
- (void)iconEditorWillDisappear:(id)a0;
- (id)initWithWorkflow:(id)a0 database:(id)a1;
- (void)inspectorPaneSegmentedControl:(id)a0 didSelectPane:(long long)a1;
- (void)layoutDocumentMenuControl;
- (BOOL)needsAdditionalSpaceInNavBar;
- (void)popEditingState:(unsigned long long)a0 animated:(BOOL)a1 completionHandler:(id /* block */)a2;
- (void)presentAddToHomeScreenWithSource:(id)a0;
- (void)presentDrawerViewControllerAsAuxiliaryViewPresenter:(id)a0 inPopover:(BOOL)a1 sourceRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (void)presentIconPickerWithSourceItem:(id)a0;
- (void)presentShortcutDetailsAsAuxiliaryViewPresenter;
- (void)pushEditingState:(unsigned long long)a0 animated:(BOOL)a1 completionHandler:(id /* block */)a2;
- (void)redoLastWorkflowEdit;
- (void)renameWorkflow;
- (void)runToolbarPlayTapped:(id)a0;
- (void)runToolbarRedoTapped:(id)a0;
- (void)runToolbarSettingsTapped:(id)a0;
- (void)runToolbarShareTapped:(id)a0 sender:(id)a1;
- (void)runToolbarStopTapped:(id)a0;
- (void)runToolbarUndoTapped:(id)a0;
- (void)runWorkflowFromKeyPress;
- (void)searchActions;
- (void)setDocumentMenuControlWithTitle:(id)a0 navigationItem:(id)a1;
- (void)setEditingState:(unsigned long long)a0 animated:(BOOL)a1 completionHandler:(id /* block */)a2;
- (void)setUpToolbar;
- (id)settingsButtonWithConfiguration:(id)a0;
- (BOOL)settingsViewControllerWantsToKnowIfNewShortcutFlow:(id)a0;
- (void)settingsViewControllerWantsWorkflowReload:(id)a0;
- (void)setupDrawerIfNeeded;
- (void)shareWorkflowWithSender:(id)a0;
- (BOOL)shouldUseOverlaidDrawer;
- (BOOL)showsDetailsButton;
- (void)stopWorkflow;
- (void)swiftUIActionDrawerCoordinator:(id)a0 didAppendAction:(id)a1;
- (void)undoLastWorkflowEdit;
- (void)updateBottomContentInsetForVisibility:(unsigned long long)a0;
- (void)updateDocumentMenuWithTitle:(id)a0 navigationItem:(id)a1;
- (void)updateDrawerVisibility;
- (void)updateEditingStateAnimated:(BOOL)a0 completionHandler:(id /* block */)a1;
- (void)updateNavigationBarStateAnimated:(BOOL)a0;
- (void)updateShareButtonVisibility;
- (void)updateTitleItemIfNeeded;
- (BOOL)usesDocumentMenu;
- (unsigned long long)visibleToolbarPlacement;
- (BOOL)workflowHasContent;
- (id)workflowView;

@end
