@class NSString, NSMapTable, NSArray, PRSQueryRankingConfiguration, SSTrialManager;

@interface PRSRankingItemRanker : NSObject {
    PRSQueryRankingConfiguration *_rankingConfiguration;
    SSTrialManager *_trialModelManager;
    NSArray *_rankCategories;
    NSArray *_queryTerms;
    BOOL _isNLSearch;
    BOOL _isPeopleSearch;
    BOOL _isFuzzySearch;
}

@property (retain, nonatomic) NSString *keyboardLanguage;
@property (retain, nonatomic) NSString *searchString;
@property (retain, nonatomic) NSString *userQueryString;
@property BOOL isInternalDevice;
@property (retain, nonatomic) NSMapTable *bundleFeatures;
@property (retain, nonatomic) NSArray *rankCategories;
@property (nonatomic) double experimentalWeight1;
@property (nonatomic) double experimentalWeight2;
@property (retain, nonatomic) NSString *meContactIdentifier;
@property (retain, nonatomic) NSString *clientBundle;
@property (nonatomic) BOOL policyDisabled;
@property (nonatomic) float lastIsSpaceFeature;
@property BOOL isCancelled;
@property BOOL isCJK;
@property (nonatomic) double currentTime;
@property (nonatomic) BOOL hasPolicyMultipleTermsPhraseMatch;
@property (nonatomic) BOOL hasPolicySingleTermPhraseMatch;
@property (nonatomic) BOOL hasParsecPolicyPhraseMatch;
@property (nonatomic) BOOL exact;
@property (nonatomic) BOOL isContentWord;
@property (nonatomic) unsigned long long queryTermCount;
@property (nonatomic) unsigned long long queryTermLength;
@property (retain, nonatomic) NSArray *queryTerms;
@property (nonatomic) BOOL isAltNamePrefixMatchOnlyTopHitExcludedQuery;
@property (nonatomic) BOOL isSpellCorrectPrefixMatchOnlyTopHitExcludedQuery;
@property (nonatomic) BOOL containsEnglishAlphabetInQuery;
@property (nonatomic) BOOL containsDigitInQuery;
@property (nonatomic) BOOL isPeopleSearch;
@property (nonatomic) BOOL isNLSearch;
@property (nonatomic) unsigned long long queryKind;
@property (nonatomic) unsigned long long topHitMaxCount;
@property (nonatomic) BOOL sodium;

+ (void)initialize;
+ (void)preheat;
+ (void)sortSectionResults:(id)a0 currentTime:(double)a1;
+ (BOOL)isBlendingScoreDemoted:(float)a0;
+ (id)embeddingForLanguage:(id)a0;
+ (void)setDockApps:(id)a0;
+ (id)itemSpecificImportantAttributesForBundle:(id)a0 withItem:(id)a1;
+ (struct _LanguageModel { } *)languageModel;
+ (unsigned long long)spellCorrectedAppMinQueryLen;
+ (id)englishEmbedding;
+ (BOOL)isCJK;
+ (id)phoneFavoritesCopy;
+ (id)importantAttributesForParsecBundle:(id)a0;
+ (id)preferredEmbedding;
+ (BOOL)isKeywordsHidingEnabled;
+ (void)clearState;
+ (BOOL)isContentWordQuery:(id)a0 queryTermCount:(long long)a1 keyboardLanguage:(id)a2;
+ (id)importantAttributesForBundle:(id)a0;
+ (id)sortedUniqueBundleFeatureValuesFromBundleFeatures:(id)a0;

- (void)deactivate;
- (id)userQuery;
- (void)cancel;
- (void)dealloc;
- (id)init;
- (void)activate;
- (void).cxx_destruct;
- (void)updateScoresForPreparedItems:(id)a0 isCJK:(BOOL)a1 clientBundle:(id)a2 thresholdValue:(double)a3;
- (id /* block */)comparatorByJoiningComparator:(id /* block */)a0 withPredicate:(id)a1;
- (void)computePolicyFeaturesForBundleItems:(id)a0 isCJK:(BOOL)a1;
- (void)computeRelativeFeatureForContext:(id)a0 items:(id)a1;
- (void)computeResultSetDependantFeatures:(id)a0 allItems:(id)a1;
- (float *)computeScoresForVectors:(id)a0 withBundleFeatures:(id)a1;
- (id)filterRankedItems:(id)a0 bundle:(id)a1 userQuery:(id)a2;
- (id)initWithSearchString:(id)a0 language:(id)a1 currentTime:(double)a2;
- (id)initWithSearchString:(id)a0 language:(id)a1 isCJK:(BOOL)a2 experimentalWeight1:(double)a3 experimentalWeight2:(double)a4 currentTime:(double)a5;
- (id)initWithSearchString:(id)a0 userQueryString:(id)a1 language:(id)a2 currentTime:(double)a3;
- (id)initWithSearchString:(id)a0 userQueryString:(id)a1 language:(id)a2 isCJK:(BOOL)a3 experimentalWeight1:(double)a4 experimentalWeight2:(double)a5 currentTime:(double)a6;
- (BOOL)isFuzzySearch;
- (void)pickMostRecentDateForItem:(id)a0 pastItems:(id *)a1 futureItems:(id *)a2;
- (void)populateLocalResultSetDateFeaturesForItems:(id)a0;
- (void)populateMailContactFeaturesWithMailItems:(id)a0 contactItems:(id)a1;
- (void)populateRankResultSetBundleFeaturesWithBundleItems:(id)a0 withUniqueBundleMaxScores:(id)a1;
- (void)prepareForPureSodiumL2RankingWithMailItems:(id)a0 inBundle:(id)a1;
- (void)prepareItems:(id)a0 inBundle:(id)a1;
- (void)prepareParsecResults:(id)a0 inBundle:(id)a1;
- (id)rankingConfiguration;
- (id)rankingConfigurationWithMeContact:(id)a0 emailAddresses:(id)a1 phoneFavorites:(id)a2 vipList:(id)a3 clientBundle:(id)a4 isScopedSearch:(BOOL)a5 isAdvancedSyntax:(BOOL)a6 spotlightQuery:(id)a7 userQuery:(id)a8 tokenString:(id)a9 queryKind:(unsigned long long)a10 isPeopleSearch:(BOOL)a11 keyboardLanguage:(id)a12;
- (id)rankingConfigurationWithMeContact:(id)a0 emailAddresses:(id)a1 phoneFavorites:(id)a2 vipList:(id)a3 clientBundle:(id)a4 isScopedSearch:(BOOL)a5 spotlightQuery:(id)a6 keyboardLanguage:(id)a7;
- (id)rankingConfigurationWithMeContact:(id)a0 emailAddresses:(id)a1 phoneFavorites:(id)a2 vipList:(id)a3 clientBundle:(id)a4 isScopedSearch:(BOOL)a5 spotlightQuery:(id)a6 userQuery:(id)a7 tokenString:(id)a8 queryKind:(unsigned long long)a9 isPeopleSearch:(BOOL)a10 keyboardLanguage:(id)a11;
- (void)relevantResultSetPRSL2FeaturesFromBundleFeature:(unsigned long long)a0 absRankFeatureOut:(unsigned short *)a1 relRankFeatureOut:(unsigned short *)a2;
- (id)requery:(id *)a0;
- (void)rerankItemsWithPolicyForBundleItems:(id)a0 isCJK:(BOOL)a1;
- (void)resetWithSearchString:(id)a0;
- (void)resetWithSearchString:(id)a0 userQueryString:(id)a1;
- (void)resetbundleFeaturesScratchBuf:(float *)a0;
- (void)setIsFuzzySearch:(BOOL)a0;
- (void)setRenderEngagementFeaturesForItem:(id)a0 counts:(id)a1 isRender:(BOOL)a2 bundleDict:(id)a3;
- (void)setRenderEngagementFeaturesForItemAsShorts:(id)a0 counts:(short[6])a1 isRender:(BOOL)a2 bundleDict:(id)a3;
- (void)updateResultSetContext:(struct _resultset_computation_ctx { float *x0; BOOL x1; BOOL x2; BOOL x3; float x4; float x5; float x6; float x7[44]; } *)a0 andUniqueScores:(id)a1 withResultSetItems:(id)a2;
- (void)updateResultSetFeaturesOnItems:(id)a0 withContext:(struct _resultset_computation_ctx { float *x0; BOOL x1; BOOL x2; BOOL x3; float x4; float x5; float x6; float x7[44]; } *)a1 uniqueScores:(id)a2;
- (void)updateScoresForPreparedItems:(id)a0;
- (BOOL)wasItemCreatedWithinAWeek:(id)a0;

@end
