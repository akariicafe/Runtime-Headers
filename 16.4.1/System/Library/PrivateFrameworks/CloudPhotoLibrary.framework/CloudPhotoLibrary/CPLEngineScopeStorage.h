@class NSCountedSet, NSString, CPLPlatformObject, NSDictionary, NSMutableArray, _CPLEngineScopeCache;

@interface CPLEngineScopeStorage : CPLEngineStorage <CPLAbstractObject> {
    _CPLEngineScopeCache *_scopeCache;
    BOOL _shouldResetGlobalsForMainScope;
    BOOL _scheduleATransportUpdate;
    BOOL _scheduleAScopeUpdate;
    BOOL _schedulePushHighPriorityToTransport;
    BOOL _schedulePushToTransport;
    BOOL _schedulePullFromTransport;
    BOOL _schedulePullFromClient;
    BOOL _shouldChangeSyncManagerPriorityBoost;
    BOOL _syncManagerPriorityBoost;
    BOOL _someScopeMightHaveToBePulledByClient;
    BOOL _clearSomeScopeMightHaveToBePulledByClient;
    NSMutableArray *_scopesToRemoveFromBrokenScopes;
    BOOL _shouldUpdateAssetCountsAtEndOfTransaction;
    NSDictionary *_assetCountsToUpdate;
    NSCountedSet *_scopeIdentifiersBeingCreated;
}

@property (readonly, nonatomic) BOOL hasStagedSyncAnchors;
@property (readonly, nonatomic) CPLPlatformObject *platformObject;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (BOOL)openWithError:(id *)a0;
- (BOOL)_resetCompleteSyncStateForScope:(id)a0 error:(id *)a1;
- (id)scopeWithStableIndex:(long long)a0;
- (BOOL)setScopeNeedsToBePulledByClient:(id)a0 error:(id *)a1;
- (BOOL)_activateSharedScopeIfPresentWithError:(id *)a0;
- (BOOL)addRewindSyncAnchor:(id)a0 forScope:(id)a1 error:(id *)a2;
- (BOOL)doesScopeNeedToBePulledByClient:(id)a0;
- (BOOL)resetCloudRecordsForScopeWithIdentifier:(id)a0 error:(id *)a1;
- (BOOL)setTransportScope:(id)a0 forScope:(id)a1 error:(id *)a2;
- (BOOL)updateFlags:(id)a0 forScope:(id)a1 error:(id *)a2;
- (id)flagsForScope:(id)a0;
- (BOOL)_setScopeType:(long long)a0 forScope:(id)a1 error:(id *)a2;
- (id)validCloudScopeIndexes;
- (BOOL)resetCompleteSyncStateForScope:(id)a0 error:(id *)a1;
- (BOOL)resetInitialSyncAnchorForScope:(id)a0 error:(id *)a1;
- (id)uploadTransportGroupForScope:(id)a0;
- (BOOL)disableInitialQueriesForScope:(id)a0 error:(id *)a1;
- (BOOL)storeSupportedFeatureVersionInLastSync:(unsigned long long)a0 forScope:(id)a1 error:(id *)a2;
- (id)scopeChangesNeedingToBePulledByClientWithMaximumCount:(unsigned long long)a0;
- (id)downloadTransportGroupForScope:(id)a0;
- (BOOL)storeScopeChange:(id)a0 forScope:(id)a1 error:(id *)a2;
- (id)scopeWithIdentifier:(id)a0;
- (id)lastDateOfClearedPushRepositoryForScope:(id)a0;
- (BOOL)enablePrimaryScopeWithError:(id *)a0;
- (BOOL)addCleanupTasksForScope:(id)a0 error:(id *)a1;
- (void)_checkSyncManagerPriorityBoost;
- (void)_clearScopeCache;
- (id)_realScopeIdentifiersFromScopeIdentifiers:(id)a0;
- (void)writeTransactionDidFail;
- (long long)stableScopeIndexForScopeIdentifier:(id)a0;
- (void)_resetGlobalsForMainScope;
- (BOOL)doesScopeNeedToUpdateTransport:(id)a0;
- (BOOL)clearTransportGroupsForScope:(id)a0 error:(id *)a1;
- (void)_forceSyncManagerPriorityBoost;
- (BOOL)doesScopeSupportToBePulledByClient:(id)a0;
- (long long)busyStateForScope:(id)a0;
- (BOOL)deleteScopeWithIdentifier:(id)a0 error:(id *)a1;
- (BOOL)setDeleteDate:(id)a0 forScope:(id)a1 error:(id *)a2;
- (BOOL)hasScopesNeedingToPullChangesFromTransport;
- (BOOL)resetSyncAnchorForScope:(id)a0 error:(id *)a1;
- (unsigned long long)supportedFeatureVersionInLastSyncForScope:(id)a0;
- (id)allScopeIdentifiersIncludeInactive:(BOOL)a0;
- (id)sharingScopeForScope:(id)a0;
- (unsigned long long)scopeType;
- (id)enumeratorForScopesWithMingling;
- (BOOL)clearAllQuotaFlagsForMainScopeWithReason:(id)a0 error:(id *)a1;
- (id)deleteDateForScope:(id)a0;
- (BOOL)setScopeNeedsToUpdateTransport:(id)a0 error:(id *)a1;
- (id)scopeChangeForScope:(id)a0;
- (BOOL)activateScope:(id)a0 error:(id *)a1;
- (unsigned long long)_indexOfCurrentClassForInitialQueriesForScope:(id)a0;
- (BOOL)storeScopeListSyncAnchor:(id)a0 error:(id *)a1;
- (long long)pushToTransportTaskForScope:(id)a0;
- (BOOL)storeRewindSyncAnchors:(id)a0 forScope:(id)a1 error:(id *)a2;
- (void)writeTransactionDidSucceed;
- (BOOL)deactivateScope:(id)a0 error:(id *)a1;
- (BOOL)_doesScopeContributeToAssetCounts:(id)a0;
- (BOOL)disablePrimaryScopeWithError:(id *)a0;
- (BOOL)storeBusyState:(long long)a0 forScope:(id)a1 error:(id *)a2;
- (id)remainingClassesForInitialQueryForScope:(id)a0;
- (BOOL)storeLastDateOfClearedPushRepository:(id)a0 forScope:(id)a1 error:(id *)a2;
- (BOOL)doesScopeNeedToPullChangesFromTransport:(id)a0;
- (BOOL)setAllScopesHasChangesToPullFromTransportWithError:(id *)a0;
- (id)syncAnchorForScope:(id)a0;
- (void)beginCreatingScopeWithIdentifier:(id)a0;
- (BOOL)resetLocalRecordsForScopeWithIdentifier:(id)a0 error:(id *)a1;
- (BOOL)doesScopeNeedToPushChangesToTransport:(id)a0;
- (id)enumeratorForScopesNeedingToPushHighPriorityChangesToTransport;
- (id)disabledDateForScope:(id)a0;
- (id)initWithEngineStore:(id)a0 name:(id)a1;
- (BOOL)doesScopeAllowCourtesyMingling:(id)a0;
- (id)_scopeChangeToBePulledByClientForScope:(id)a0;
- (void)endCreatingScopeWithIdentifier:(id)a0;
- (BOOL)resetSyncStateForScope:(id)a0 error:(id *)a1;
- (id)rewindSyncAnchorsForScope:(id)a0;
- (void)_updateAssetCountsWithScopeChange:(id)a0 forScope:(id)a1;
- (id)initialSyncAnchorForScope:(id)a0;
- (BOOL)didDropSomeRecordsForScope:(id)a0;
- (BOOL)setDisabledDate:(id)a0 forScope:(id)a1 error:(id *)a2;
- (BOOL)setScopeNeedsUpdateFromTransport:(id)a0 error:(id *)a1;
- (unsigned long long)estimatedSizeForScope:(id)a0;
- (BOOL)commitSyncAnchorForScope:(id)a0 error:(id *)a1;
- (BOOL)doScopesNeedMetadataSync:(id)a0;
- (id)scopeWithCloudScopeIndex:(long long)a0;
- (id)enumeratorForScopesNeedingUpdateFromTransport;
- (BOOL)setScope:(id)a0 hasCompletedPullFromTransportTask:(long long)a1 error:(id *)a2;
- (BOOL)shouldAutoactivateScopeWithIdentifier:(id)a0 scopeType:(long long)a1;
- (BOOL)discardStagedSyncAnchorForScope:(id)a0 error:(id *)a1;
- (BOOL)setPullFromTransportExpirationInterval:(double)a0 scope:(id)a1 error:(id *)a2;
- (BOOL)hasFinishedAFullSyncForScope:(id)a0;
- (BOOL)_resetLocalSyncStateForScope:(id)a0 error:(id *)a1;
- (id)enumeratorForDeletedStagedScopes;
- (long long)pullFromTransportTaskForScope:(id)a0;
- (id)scopeIdentifierForCloudScopeIndex:(long long)a0;
- (BOOL)setValue:(BOOL)a0 forFlag:(long long)a1 forScope:(id)a2 error:(id *)a3;
- (id)createScopeWithIdentifier:(id)a0 scopeType:(long long)a1 flags:(long long)a2 transportScope:(id)a3 error:(id *)a4;
- (BOOL)setHasFetchedInitialSyncAnchor:(BOOL)a0 forScope:(id)a1 error:(id *)a2;
- (id)scopedIdentifierForLocalScopedIdentifier:(id)a0;
- (id)supervisorInfoForScope:(id)a0;
- (BOOL)setScopeHasChangesToPushToTransport:(id)a0 error:(id *)a1;
- (id)scopedIdentifierForCloudScopedIdentifier:(id)a0;
- (long long)transportUpdateTaskForScope:(id)a0;
- (id)transientSyncAnchorForScope:(id)a0;
- (BOOL)setupInitialSyncTransportGroupsForScope:(id)a0 error:(id *)a1;
- (BOOL)setSyncAnchor:(id)a0 forScope:(id)a1 error:(id *)a2;
- (id)transportScopeForScope:(id)a0;
- (id)filterForIncludedScopeIdentifiers:(id)a0;
- (BOOL)supportedFeatureVersionIsMostRecentForScope:(id)a0;
- (id)enumeratorForScopesIncludeInactive:(BOOL)a0;
- (BOOL)setCloudScopeIndexOnChange:(id)a0;
- (BOOL)hasStagedSyncAnchorForScope:(id)a0;
- (id)enumeratorForScopesNeedingToPushChangesToTransport;
- (BOOL)storeTransientSyncAnchor:(id)a0 forScope:(id)a1 error:(id *)a2;
- (BOOL)resetStableRecordsForScopeWithIdentifier:(id)a0 error:(id *)a1;
- (BOOL)_dropSharingScopeIdentifier:(id)a0 error:(id *)a1;
- (unsigned long long)estimatedAssetCountForScope:(id)a0;
- (BOOL)setInitialSyncAnchor:(id)a0 forScope:(id)a1 error:(id *)a2;
- (BOOL)setupResetSyncTransportGroupForScope:(id)a0 error:(id *)a1;
- (BOOL)storeEstimatedSize:(unsigned long long)a0 estimatedAssetCount:(unsigned long long)a1 forScope:(id)a2 error:(id *)a3;
- (BOOL)setLocalScopeIndexOnChange:(id)a0;
- (BOOL)hasScopeFetchedInitialSyncAnchor:(id)a0;
- (id)filterForExcludedScopeIdentifiers:(id)a0;
- (BOOL)setScopeHasChangesToPullFromTransport:(id)a0 error:(id *)a1;
- (id)_scopeWithIdentifier:(id)a0;
- (id)primaryScope;
- (BOOL)setScope:(id)a0 hasCompletedPushToTransportTask:(long long)a1 error:(id *)a2;
- (BOOL)discardStagedSyncAnchorWithScopeFilter:(id)a0 error:(id *)a1;
- (BOOL)updateInitialSyncTransportGroupEstimatedSize:(unsigned long long)a0 assetCount:(unsigned long long)a1 forScope:(id)a2 error:(id *)a3;
- (id)lastDateOfCompletedPullFromTransportForScope:(id)a0;
- (void)_cacheScope:(id)a0;
- (void)_removeBrokenScope:(id)a0;
- (id)stagingScopeForScope:(id)a0;
- (id)scopeForSharingScope:(id)a0;
- (id)scopeIdentifierForLocalScopeIndex:(long long)a0;
- (id)statusDictionaryForScope:(id)a0;
- (BOOL)resetCompleteSyncStateIncludingIDMappingForScope:(id)a0 error:(id *)a1;
- (BOOL)_setSharingScopeIdentifier:(id)a0 error:(id *)a1;
- (id)scopeWithLocalScopeIndex:(long long)a0;
- (BOOL)setDidDropSomeRecordsForScope:(id)a0 error:(id *)a1;
- (BOOL)hasScopesNeedingToUpdateTransport;
- (long long)indexForLocalScopeIdentifier:(id)a0;
- (BOOL)hasScopesNeedingToPushChangesToTransport;
- (BOOL)setScope:(id)a0 hasCompletedTransportUpdate:(long long)a1 error:(id *)a2;
- (BOOL)hasScopesNeedingToPushHighPriorityChangesToTransport;
- (long long)indexForCloudScopeIdentifier:(id)a0;
- (id)_createScopeFromScopeChange:(id)a0 error:(id *)a1;
- (BOOL)valueForFlag:(long long)a0 forScope:(id)a1;
- (id)mostCurrentChangesSyncAnchorForScope:(id)a0;
- (BOOL)setupAnchorResetTransportGroupForScope:(id)a0 error:(id *)a1;
- (BOOL)clientAcknowledgedScopeChanges:(id)a0 error:(id *)a1;
- (id)scopeListSyncAnchor;
- (id)status;
- (BOOL)markInitialQueryIsDoneForRecordsOfClass:(Class)a0 forScope:(id)a1 error:(id *)a2;
- (BOOL)updateScopeWithChange:(id)a0 error:(id *)a1;
- (BOOL)storeSupervisorInfo:(id)a0 forScope:(id)a1 error:(id *)a2;
- (BOOL)resetLocalSyncStateForScope:(id)a0 error:(id *)a1;
- (void).cxx_destruct;
- (BOOL)_handledDisabledFeaturesForScopeIfNecessary:(id)a0 type:(long long)a1 error:(id *)a2;
- (BOOL)upgradeScopesWithNewLibraryOptions:(unsigned long long)a0 error:(id *)a1;
- (BOOL)_forceClientToPullScopeIfNecessary:(id)a0 error:(id *)a1;
- (id)enumeratorForScopesNeedingToUpdateTransport;
- (BOOL)hasFinishedInitialSyncForScope:(id)a0;
- (id)enumeratorForScopesNeedingToPullChangesFromTransport;
- (id)validLocalScopeIndexes;
- (Class)classOfRecordsForInitialQueryForScope:(id)a0;

@end
