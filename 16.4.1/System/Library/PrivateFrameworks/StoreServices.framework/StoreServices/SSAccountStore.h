@class SSAccount, NSArray, SSPromise, NSString, ACAccountStore, NSObject, SSKeyValueStore;
@protocol OS_dispatch_queue;

@interface SSAccountStore : NSObject <AKAppleIDAuthenticationDelegate>

@property (retain, nonatomic) NSArray *accountsCache;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *accountsCacheAccessQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *fetchAccountsQueue;
@property (nonatomic, getter=isInProcessCacheDisabled) BOOL inProcessCacheDisabled;
@property (retain, nonatomic) SSKeyValueStore *keyValueStore;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *metricsQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *notificationQueue;
@property (readonly, nonatomic) SSPromise *accountsPromise;
@property (readonly, getter=isAuthenticationActive) BOOL authenticationActive;
@property (readonly, nonatomic) ACAccountStore *backingAccountStore;
@property (readonly, nonatomic) SSAccount *demoAccount;
@property (readonly, nonatomic) SSPromise *localAccount;
@property (readonly) SSAccount *activeAccount;
@property (readonly) SSAccount *activeSandboxAccount;
@property (readonly) SSAccount *activeLockerAccount;
@property (readonly, copy) NSArray *accounts;
@property (readonly, copy) SSAccount *localiTunesAccount;
@property (readonly, getter=isExpired) BOOL expired;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)areAccountStoreChangedNotificationsDisabled;
+ (void)_setActiveAccountIsManagedAppleIDPreference:(BOOL)a0;
+ (id)_unitTestAccountsAccessQueue;
+ (BOOL)unitTestModeEnabled;
+ (void)_cleanupActiveAccountsAfterMigrationWithActiveDSID:(id)a0 activeLockerDSID:(id)a1;
+ (BOOL)isExpired;
+ (void)setUnitTestModeEnabled:(BOOL)a0;
+ (double)tokenExpirationInterval;
+ (id)_migrateAccountDictionary:(id)a0 fromKeyValueStore:(id)a1 originalActiveDSID:(id)a2 originalActiveLockerDSID:(id)a3 logKey:(id)a4 error:(id *)a5;
+ (id)_createAuthenticationContextForAccount:(id)a0 silentAuthentication:(BOOL)a1 options:(id)a2;
+ (BOOL)_copyKVSDatabaseWithError:(id *)a0;
+ (void)_addAccountToUnitTestStore:(id)a0;
+ (BOOL)migrateToAccountsFramework;
+ (void)resetExpirationForTokenType:(long long)a0;
+ (BOOL)_accountDictionaryRepresentsActiveLockerAccount:(id)a0 inKeyValueStore:(id)a1;
+ (void)_postAccountsChangedInternalDarwinNotification;
+ (id)_refreshAccount:(id)a0;
+ (void)_excludeCopyKVSDatabasePathFromBackups;
+ (void)_removeAccountDictionary:(id)a0 fromKeyValueStore:(id)a1;
+ (id)_backingAccountForAccount:(id)a0;
+ (void)_disableAccountStoreChangedNotifications;
+ (BOOL)isExpiredForTokenType:(long long)a0;
+ (id)_createAuthenticationController;
+ (BOOL)_currentProcessLinksUIKit;
+ (id)_hashedDescriptionFromAccountDictionary:(id)a0;
+ (BOOL)_accountDictionaryRepresentsActiveAccount:(id)a0 inKeyValueStore:(id)a1;
+ (void)setAuthenticationStartedDate:(id)a0;
+ (id)defaultStore;
+ (id)existingDefaultStore;
+ (void)resetExpiration;
+ (BOOL)_shouldRemoveAccountDictionaryWithoutMigration:(id)a0 reason:(id *)a1;
+ (BOOL)_isBuddyRunning;
+ (id)_createUpdatedAccount:(id)a0 withAuthenticationResults:(id)a1 options:(id)a2;
+ (BOOL)_allowSilentPasswordAuthForAccount:(id)a0 withOptions:(id)a1;
+ (BOOL)URLResponseAllowsSilentAuthentication:(id)a0;
+ (void)_removeAccountFromUnitTestStore:(id)a0;
+ (void)_enableAccountStoreChangedNotifications;
+ (id)_copyKVSDatabasePath;
+ (void)_postAccountsChangedDarwinNotification;

- (void)reloadAccounts;
- (id)setActiveAccount:(id)a0;
- (id)addAccount:(id)a0;
- (BOOL)saveAccount:(id)a0 error:(id *)a1;
- (BOOL)authenticationController:(id)a0 shouldContinueWithAuthenticationResults:(id)a1 error:(id)a2 forContext:(id)a3;
- (id)_passwordEquivalentTokenFromAlternateAccountWithAltDSID:(id)a0 DSID:(id)a1 username:(id)a2;
- (id)_updateAccountWithAuthKitViaPromptAuth:(id)a0 store:(id)a1 options:(id)a2;
- (void)setAccountCredits:(id)a0 forAccountWithUniqueIdentifier:(id)a1;
- (id)accountWithUniqueIdentifier:(id)a0 reloadIfNecessary:(BOOL)a1;
- (id)accountWithUniqueIdentifier:(id)a0 scope:(long long)a1;
- (id)_saveAccount:(id)a0 verifyCredentials:(BOOL)a1;
- (void)clearCachedAccounts;
- (id)accountWithAltDSID:(id)a0 uniqueIdentifier:(id)a1 accountName:(id)a2;
- (void)signOutAccount:(id)a0 completion:(id /* block */)a1;
- (void)signOutAllAccounts;
- (id)setActiveLockerAccount:(id)a0;
- (void)resetExpirationForTokenType:(long long)a0;
- (BOOL)saveAccount:(id)a0 verifyCredentials:(BOOL)a1 error:(id *)a2;
- (void)_setCachedAccounts:(id)a0;
- (void)signOutAllAccountsWithCompletionBlock:(id /* block */)a0;
- (void)_postAccountStoreChangeNotification;
- (id)iTunesStoreAccountType;
- (BOOL)repairAccountWithBrokenDSID:(id)a0;
- (id)accountWithAltDSID:(id)a0 uniqueIdentifier:(id)a1 accountName:(id)a2 scope:(long long)a3;
- (void)setDefaultAccountName:(id)a0 completionBlock:(id /* block */)a1;
- (BOOL)isExpiredForTokenType:(long long)a0;
- (id)accountWithAccountName:(id)a0;
- (void)removeAccount:(id)a0 completion:(id /* block */)a1;
- (void)dealloc;
- (void)removeAllAccountsWithCompletion:(id /* block */)a0;
- (void)saveAccount:(id)a0 verifyCredentials:(BOOL)a1 completion:(id /* block */)a2;
- (BOOL)removeAccount:(id)a0 error:(id *)a1;
- (id)_optionsForProxiedAuthenticationWithVerifyCredentialsOptions:(id)a0;
- (id)_updateAccountWithAuthKitViaSilentPETAuth:(id)a0 options:(id)a1;
- (void)saveAccount:(id)a0 completion:(id /* block */)a1;
- (void)_postAuthenticationActivityNotification;
- (id)_updateAccountWithAuthKitViaSilentPasswordAuth:(id)a0 options:(id)a1;
- (id)_updateAccountWithAuthKitViaSilentAuth:(id)a0 options:(id)a1;
- (id)accountWithUniqueIdentifier:(id)a0;
- (id)_shouldCreateNewAccountForAccount:(id)a0 options:(id)a1;
- (void)getDefaultAccountNameUsingBlock:(id /* block */)a0;
- (void)removeCookiesForAccount:(id)a0 logKey:(id)a1;
- (id)iTunesStoreAccountTypePromise;
- (void)_recordAnalyticsForMetricsDialogEvent:(id)a0 withTopic:(id)a1;
- (id)accountWithAccountName:(id)a0 scope:(long long)a1;
- (void)_postActiveAccountChangedNotification;
- (id)updateAccountWithAuthKit:(id)a0 store:(id)a1 options:(id)a2;
- (id)_saveAccountInUnitTestMode:(id)a0 ignoreValidationErrors:(BOOL)a1;
- (id)init;
- (id)accountWithAltDSID:(id)a0;
- (void)signOutAccount:(id)a0;
- (void)resetExpiration;
- (id)_cachedAccounts;
- (id)_buyParamsForBuyParamsString:(id)a0;
- (void)resetLocalAccount;
- (id)_convertPasswordToPET:(id)a0 forAccount:(id)a1 options:(id)a2;
- (id)accountWithAltDSID:(id)a0 scope:(long long)a1;
- (void).cxx_destruct;

@end
