@class DNDSDrivingTriggerManager, DNDSLocationLifetimeMonitor, DNDSAppInfoCache, STFocusStatusDomainPublisher, DNDSSettingsManager, DNDSModeConfigurationsStore, DNDSModeConfigurationManager, DNDSScheduleManager, DNDSStateProvider, DNDSAppForegroundTriggerManager, DNDSSmartTriggerManager, DNDSGlobalConfigurationManager, DNDSSleepingTriggerManager, DNDSContactMonitor, DNDSAppConfigurationManager, DNDSMindfulnessTriggerManager, FBSDisplayLayoutMonitor, DNDSRemoteAppConfigurationServiceProvider, DNDSClientDetailsProvider, DNDSEventBehaviorResolver, DNDSMeDeviceService, DNDSAppFocusConfigurationCoordinator, DNDSXPCEventPublisher, DNDSSyncEngine, DNDSSystemFocusConfigurationCoordinator, DNDSRemoteAvailabilityServiceProvider, DNDSWorkoutTriggerManager, DNDSPairedDeviceStateMonitor, IDSService, DNDSCalendarEventLifetimeMonitor, DNDSMetricsManager, DNDSBiomeDonationManager, DNDSIDSSyncEngine, NSArray, DNDSScheduleLifetimeMonitor, DNDSGamingTriggerManager, DNDSReachability, DNDSXPCEventStream, DNDSPlaceholderModeManager, NSString, NSObject, DNDSAuxiliaryStateMonitor, DNDSModeAssertionManager, DNDSUserAvailabilityCoordinator, DNDSGlobalConfigurationStore, DNDSRemoteServiceProvider;
@protocol DNDSAssertionSyncManager, DNDSSettingsSyncManager, DNDSKeybagStateProviding, OS_dispatch_queue;

@interface DNDSServer : NSObject <DNDSAppForegroundTriggerManagerDataSource, DNDSDrivingTriggerManagerDataSource, DNDSGamingTriggerManagerDataSource, DNDSMindfulnessTriggerManagerDataSource, DNDSSleepingTriggerManagerDataSource, DNDSSmartTriggerManagerDataSource, DNDSWorkoutTriggerManagerDataSource, DNDSGlobalConfigurationManagerDelegate, DNDSEventBehaviorResolverDataSource, DNDSLifetimeMonitorDataSource, DNDSLocationLifetimeMonitorDataSource, DNDSScheduleLifetimeMonitorDataSource, DNDSLifetimeMonitorDelegate, DNDSRemoteServiceProviderDelegate, DNDSRemoteAvailabilityServiceProviderDelegate, DNDSRemoteAppConfigurationServiceProviderDelegate, DNDSAssertionSyncManagerDataSource, DNDSAssertionSyncManagerDelegate, DNDSLegacyAssertionSyncManagerDataSource, DNDSSettingsSyncManagerDataSource, DNDSSettingsSyncManagerDelegate, DNDSScheduleManagerDataSource, DNDSSettingsManagerDelegate, DNDSPairedDeviceStateMonitorDelegate, DNDSModeConfigurationManagerDelegate, DNDSReachabilityDelegate, DNDSMeDeviceServiceListener, DNDSAppFocusConfigurationCoordinatorDelegate, DNDSSystemFocusConfigurationCoordinatorDelegate> {
    NSObject<OS_dispatch_queue> *_queue;
    DNDSCalendarEventLifetimeMonitor *_calendarEventLifetimeMonitor;
    DNDSScheduleLifetimeMonitor *_scheduleLifetimeMonitor;
    DNDSLocationLifetimeMonitor *_locationLifetimeMonitor;
    NSArray *_lifetimeMonitors;
    DNDSScheduleManager *_scheduleManager;
    DNDSAppFocusConfigurationCoordinator *_appFocusConfigurationCoordinator;
    DNDSSystemFocusConfigurationCoordinator *_systemFocusConfigurationCoordinator;
    DNDSAppForegroundTriggerManager *_appForegroundTriggerManager;
    DNDSAuxiliaryStateMonitor *_auxiliaryStateMonitor;
    DNDSBiomeDonationManager *_biomeDonationManager;
    DNDSDrivingTriggerManager *_drivingTriggerManager;
    DNDSGamingTriggerManager *_gamingTriggerManager;
    DNDSMindfulnessTriggerManager *_mindfulnessTriggerManager;
    DNDSSleepingTriggerManager *_sleepingTriggerManager;
    DNDSSmartTriggerManager *_smartTriggerManager;
    DNDSWorkoutTriggerManager *_workoutTriggerManager;
    DNDSMeDeviceService *_meDeviceService;
    DNDSStateProvider *_stateProvider;
    DNDSEventBehaviorResolver *_eventBehaviorResolver;
    DNDSRemoteServiceProvider *_serviceProvider;
    DNDSRemoteAvailabilityServiceProvider *_availabilityServiceProvider;
    DNDSRemoteAppConfigurationServiceProvider *_appConfigurationServiceProvider;
    id<DNDSAssertionSyncManager> _assertionSyncManager;
    id<DNDSAssertionSyncManager> _legacyAssertionSyncManager;
    id<DNDSSettingsSyncManager> _settingsSyncManager;
    DNDSSettingsManager *_settingsManager;
    IDSService *_idsLocalService;
    IDSService *_idsCloudService;
    DNDSPairedDeviceStateMonitor *_pairedDeviceStateMonitor;
    DNDSSyncEngine *_syncEngine;
    DNDSIDSSyncEngine *_idsSyncEngine;
    DNDSReachability *_reachability;
    id<DNDSKeybagStateProviding> _keybag;
    DNDSXPCEventStream *_eventStream;
    DNDSXPCEventPublisher *_focusConfigurationEventPublisher;
    FBSDisplayLayoutMonitor *_layoutMonitor;
    DNDSGlobalConfigurationStore *_globalConfigurationStore;
    DNDSGlobalConfigurationManager *_globalConfigurationManager;
    DNDSModeConfigurationsStore *_modeConfigurationsStore;
    DNDSPlaceholderModeManager *_placeholderModeManager;
    DNDSContactMonitor *_contactMonitor;
    DNDSAppInfoCache *_appInfoCache;
    DNDSAppConfigurationManager *_appConfigurationManager;
    DNDSUserAvailabilityCoordinator *_userAvailabilityCoordinator;
    STFocusStatusDomainPublisher *_focusStatusDomainPublisher;
    DNDSClientDetailsProvider *_clientDetailsProvider;
    DNDSModeAssertionManager *_modeAssertionManager;
    DNDSModeConfigurationManager *_modeConfigurationManager;
    DNDSMetricsManager *_metricsManager;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property unsigned long long lockState;
@property unsigned long long lostModeState;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)appFocusConfigurationCoordinator:(id)a0 didUpdateAppConfigurationContextForModeIdentifier:(id)a1;
- (BOOL)remoteServiceProvider:(id)a0 syncModeConfigurationsReturningError:(id *)a1;
- (id)triggerManager:(id)a0 performModeAssertionUpdatesWithHandler:(id /* block */)a1;
- (id)remoteServiceProvider:(id)a0 modeConfigurationForModeIdentifier:(id)a1 withError:(id *)a2;
- (unsigned long long)remoteServiceProvider:(id)a0 getPairSyncStateReturningError:(id *)a1;
- (id)remoteServiceProvider:(id)a0 currentMeDeviceStateWithError:(id *)a1;
- (id)remoteServiceProvider:(id)a0 publishStatusKitAvailabilityReturningError:(id *)a1;
- (id)_createDefaultModeForWorkoutTriggerIfNecessary;
- (id)eventBehaviorResolver:(id)a0 appPredicateForApplicationIdentifier:(id)a1 modeIdentifier:(id)a2;
- (BOOL)remoteServiceProvider:(id)a0 setScreenIsShared:(BOOL)a1 screenIsMirrored:(BOOL)a2 withError:(id *)a3;
- (void)modeConfigurationManager:(id)a0 didModifyAvailableMode:(id)a1;
- (BOOL)_setLostModeState:(unsigned long long)a0 error:(id *)a1;
- (id)_activeDateIntervalForModeAssertion:(id)a0 currentlyActive:(BOOL)a1;
- (void)_handleSignificantTimeChange;
- (id)remoteAppConfigurationServiceProvider:(id)a0 getCurrentAppConfigurationForActionIdentifier:(id)a1 bundleIdentifier:(id)a2 withError:(out id *)a3;
- (id)triggerManager:(id)a0 latestInvalidationWithClientIdentifer:(id)a1 error:(id *)a2;
- (id)triggerManager:(id)a0 takeModeAssertionWithDetails:(id)a1 clientIdentifier:(id)a2 error:(id *)a3;
- (id)triggerManager:(id)a0 assertionsWithClientIdentifer:(id)a1 error:(id *)a2;
- (id)remoteServiceProvider:(id)a0 getAppInfoForBundleIdentifier:(id)a1 withError:(id *)a2;
- (void)modeConfigurationManager:(id)a0 didUpdateAvailableModes:(id)a1;
- (BOOL)remoteAvailabilityServiceProvider:(id)a0 isLocalUserAvailableForApplicationIdentifier:(id)a1 withError:(out id *)a2;
- (id)_scheduleTriggerMatchingSettings:(id)a0;
- (BOOL)remoteServiceProvider:(id)a0 setPreventAutoReply:(BOOL)a1 withError:(id *)a2;
- (BOOL)isCloudSyncDisabledForSyncManager:(id)a0;
- (id)sleepingModeForSleepingTriggerManager:(id)a0;
- (BOOL)remoteServiceProvider:(id)a0 getModesCanImpactAvailabilityReturningError:(id *)a1;
- (unsigned long long)currentUILockStateForEventBehaviorResolver:(id)a0;
- (id)remoteServiceProvider:(id)a0 allActiveModeAssertionsWithError:(id *)a1;
- (id)currentStateForAppFocusConfigurationCoordinator:(id)a0;
- (BOOL)remoteServiceProvider:(id)a0 setModeConfiguration:(id)a1 withError:(id *)a2;
- (BOOL)remoteServiceProvider:(id)a0 clearAppActionWithIdentifier:(id)a1 forApplicationIdentifier:(id)a2 modeIdentifier:(id)a3 withError:(id *)a4;
- (void)_forceConfigurationSyncIfNeededWithUpdateResult:(id)a0;
- (BOOL)remoteServiceProvider:(id)a0 setAppConfigurationTargetContentIdentifierPrefix:(id)a1 forActionIdentifier:(id)a2 forApplicationIdentifier:(id)a3 modeIdentifier:(id)a4 withError:(id *)a5;
- (id)remoteServiceProvider:(id)a0 modeConfigurationsWithError:(id *)a1;
- (id)remoteServiceProvider:(id)a0 latestInvalidationWithClientIdentifer:(id)a1 error:(id *)a2;
- (id)currentStateForEventBehaviorResolver:(id)a0;
- (BOOL)remoteServiceProvider:(id)a0 setPairSyncPreferenceEnabled:(BOOL)a1 withError:(id *)a2;
- (void)reachabilityChangedTo:(BOOL)a0;
- (void)_queue_handlePairedDeviceAndSyncSettingsChange;
- (id)remoteServiceProvider:(id)a0 currentStateWithError:(id *)a1;
- (void)pairedDeviceStateMonitor:(id)a0 cloudPairingChangedFromDevices:(id)a1 toDevices:(id)a2;
- (id)remoteServiceProvider:(id)a0 getAppConfigurationTargetContentIdentifierPrefixesForModeIdentifier:(id)a1 withError:(id *)a2;
- (id)remoteServiceProvider:(id)a0 activeAssertionWithClientIdentifer:(id)a1 error:(id *)a2;
- (unsigned long long)remoteServiceProvider:(id)a0 getCloudSyncStateReturningError:(id *)a1;
- (void)meDeviceService:(id)a0 didReceiveMeDeviceStateUpdate:(id)a1;
- (id)appForegroundTriggerConfigurationForAppForegroundTriggerManager:(id)a0;
- (id)currentStateForSystemFocusConfigurationCoordinator:(id)a0;
- (id)syncManager:(id)a0 scheduleSettingsForModeIdentifier:(id)a1;
- (id)_allModes;
- (BOOL)setUILockState:(unsigned long long)a0 error:(id *)a1;
- (id)remoteServiceProvider:(id)a0 scheduleSettingsWithError:(id *)a1;
- (id)remoteServiceProvider:(id)a0 getAppInfoForBundleIdentifiers:(id)a1 withError:(id *)a2;
- (id)remoteServiceProvider:(id)a0 invalidateModeAssertionForClientIdentifier:(id)a1 reason:(unsigned long long)a2 reasonOverride:(unsigned long long)a3 details:(id)a4 error:(id *)a5;
- (void)syncManager:(id)a0 didReceiveUpdatedScheduleSettings:(id)a1;
- (id)lifetimeMonitor:(id)a0 takeModeAssertionWithDetails:(id)a1 clientIdentifier:(id)a2 error:(id *)a3;
- (id)drivingModeForDrivingTriggerManager:(id)a0;
- (void)lifetimeMonitor:(id)a0 lifetimeDidExpireForAssertionUUIDs:(id)a1 expirationDate:(id)a2;
- (id)remoteServiceProvider:(id)a0 availableModesReturningError:(id *)a1;
- (id)_stateSystemSnapshot;
- (id)_scheduleSettingsForModeConfigurations;
- (id)lifetimeMonitor:(id)a0 modeAssertionsWithLifetimeClass:(Class)a1;
- (void)settingsManager:(id)a0 didReceiveUpdatedSyncSettings:(id)a1;
- (BOOL)remoteServiceProvider:(id)a0 userAvailabilityInActiveModeForContactHandle:(id)a1 withError:(id *)a2;
- (void)lifetimeMonitor:(id)a0 setTimer:(id)a1;
- (id)remoteServiceProvider:(id)a0 takeModeAssertionWithDetails:(id)a1 clientIdentifier:(id)a2 error:(id *)a3;
- (id)currentStateForLegacyAssertionSyncManager:(id)a0;
- (id)_scheduleSettingsMatchingTrigger:(id)a0;
- (void)_queue_updateScheduleManagerLifetimeMonitorsAndStateForReason:(unsigned long long)a0 source:(long long)a1 options:(long long)a2;
- (id)eventBehaviorResolver:(id)a0 bypassSettingsForClientIdentifier:(id)a1;
- (BOOL)layoutIsLocked:(id)a0;
- (BOOL)_setDefaultScheduleTriggerWithScheduleSettings:(id)a0;
- (id)_scheduleSettingsFromDefaultScheduleTrigger;
- (id)remoteServiceProvider:(id)a0 getAppActionsForModeIdentifier:(id)a1 withError:(id *)a2;
- (id)syncManager:(id)a0 deviceForDeviceIdentifier:(id)a1;
- (BOOL)eventBehaviorResolver:(id)a0 isAvailabilityActiveForBundleIdentifier:(id)a1;
- (id)remoteServiceProvider:(id)a0 allModesReturningError:(id *)a1;
- (id)remoteServiceProvider:(id)a0 getAccountFeatureSupportWithError:(id *)a1;
- (id)syncManager:(id)a0 updateOutboundModeAssertion:(id)a1;
- (void)_migrateDefaultDoNotDisturbModeIfNeeded;
- (void)remoteServiceProvider:(id)a0 didChangeFocusStatusSharingSettingForApplicationIdentifier:(id)a1;
- (void)_migrateBypassSettingsIfNeeded;
- (void)modeConfigurationManager:(id)a0 didModifyExceptionsForContacts:(id)a1 forModeConfiguration:(id)a2;
- (void)_queue_updateScheduleManagerLifetimeMonitorsAndStateForReason:(unsigned long long)a0 source:(long long)a1;
- (void)syncManager:(id)a0 didReceiveUpdatedPhoneCallBypassSettings:(id)a1;
- (BOOL)remoteServiceProvider:(id)a0 setModesCanImpactAvailability:(BOOL)a1 withError:(id *)a2;
- (void)_queue_validateIDSSyncEngine;
- (BOOL)remoteServiceProvider:(id)a0 clearSystemConfigurationActionWithIdentifier:(id)a1 modeIdentifier:(id)a2 withError:(id *)a3;
- (id)eventBehaviorResolver:(id)a0 configurationForModeIdentifier:(id)a1;
- (id)scheduleSettingsByModeIdentifierForScheduleLifetimeMonitor:(id)a0;
- (id)_updateModeAssertionManagerAndRefreshLifetimesAndStateWithHandler:(id /* block */)a0 error:(id *)a1;
- (void)setWorkoutTriggerEnabled:(BOOL)a0 forWorkoutTriggerManager:(id)a1;
- (void)activeAssertionsDidChangeForLifetimeMonitor:(id)a0;
- (id)pairedDevicesForSyncManager:(id)a0;
- (BOOL)remoteServiceProvider:(id)a0 setCloudSyncPreferenceEnabled:(BOOL)a1 withError:(id *)a2;
- (void)syncManager:(id)a0 prepareForSyncToDevices:(id)a1;
- (BOOL)remoteServiceProvider:(id)a0 setSystemAction:(id)a1 forModeIdentifier:(id)a2 withError:(id *)a3;
- (id)remoteServiceProvider:(id)a0 invalidateAllModeAssertionsTakenBeforeDate:(id)a1 forReason:(unsigned long long)a2 clientIdentifier:(id)a3 error:(id *)a4;
- (void)pairedDeviceStateMonitor:(id)a0 pairingChangedFromDevice:(id)a1 toDevice:(id)a2;
- (id)remoteServiceProvider:(id)a0 allowedModesForContactHandle:(id)a1 withError:(id *)a2;
- (id)remoteServiceProvider:(id)a0 assertionWithClientIdentifer:(id)a1 error:(id *)a2;
- (BOOL)remoteServiceProvider:(id)a0 setAppConfigurationPredicate:(id)a1 forActionIdentifier:(id)a2 forApplicationIdentifier:(id)a3 modeIdentifier:(id)a4 withError:(id *)a5;
- (void)globalConfigurationManager:(id)a0 didUpdatePreventAutoReplySetting:(BOOL)a1;
- (id)_invalidateModeAssertionForClientIdentifier:(id)a0 reason:(unsigned long long)a1 reasonOverride:(unsigned long long)a2 details:(id)a3 error:(id *)a4;
- (id)init;
- (BOOL)remoteServiceProvider:(id)a0 setAppAction:(id)a1 forApplicationIdentifier:(id)a2 modeIdentifier:(id)a3 withError:(id *)a4;
- (id)locationTriggerConfigurationForLifetimeMonitor:(id)a0;
- (void)globalConfigurationManager:(id)a0 didUpdateModesCanImpactAvailabilitySetting:(BOOL)a1;
- (id)gamingModeForGamingTriggerManager:(id)a0;
- (id)scheduleSettingsByModeIdentifierForScheduleManager:(id)a0;
- (id)remoteServiceProvider:(id)a0 invalidateModeAssertionWithUUID:(id)a1 reason:(unsigned long long)a2 reasonOverride:(unsigned long long)a3 clientIdentifier:(id)a4 error:(id *)a5;
- (void)settingsManager:(id)a0 didReceiveUpdatedBehaviorSettings:(id)a1;
- (BOOL)remoteServiceProvider:(id)a0 clearSystemActionWithIdentifier:(id)a1 forModeIdentifier:(id)a2 withError:(id *)a3;
- (id)remoteServiceProvider:(id)a0 behaviorSettingsWithError:(id *)a1;
- (void)lifetimeMonitor:(id)a0 registerTimerHandlerWithServiceIdentifier:(id)a1 handler:(id /* block */)a2;
- (void)syncManager:(id)a0 performModeAssertionUpdatesWithHandler:(id /* block */)a1;
- (BOOL)remoteServiceProvider:(id)a0 setScheduleSettings:(id)a1 withError:(id *)a2;
- (id)remoteServiceProvider:(id)a0 getSystemActionsForModeIdentifier:(id)a1 withError:(id *)a2;
- (void)settingsManager:(id)a0 didReceiveUpdatedPhoneCallBypassSettings:(id)a1;
- (id)triggerManager:(id)a0 invalidateModeAssertionWithUUID:(id)a1 reason:(unsigned long long)a2 reasonOverride:(unsigned long long)a3 clientIdentifier:(id)a4 error:(id *)a5;
- (id)remoteServiceProvider:(id)a0 getAppConfigurationPredicateForActionIdentifier:(id)a1 forApplicationIdentifier:(id)a2 modeIdentifier:(id)a3 withError:(id *)a4;
- (id)currentlyActivePairedDeviceForSyncManager:(id)a0;
- (BOOL)remoteServiceProvider:(id)a0 getPreventAutoReplyReturningError:(id *)a1;
- (id)mindfulnessModeForMindfulnessTriggerManager:(id)a0;
- (BOOL)remoteAppConfigurationServiceProvider:(id)a0 invalidateAppContextForActionIdentifier:(id)a1 bundleIdentifier:(id)a2 withError:(out id *)a3;
- (id)workoutModeForWorkoutTriggerManager:(id)a0;
- (BOOL)remoteServiceProvider:(id)a0 removeModeConfigurationWithModeIdentifier:(id)a1 deletePlaceholder:(BOOL)a2 withError:(id *)a3;
- (void)keybagDidUnlockForTheFirstTime:(id)a0;
- (id)createWorkoutModeForWorkoutTriggerManager:(id)a0;
- (BOOL)remoteServiceProvider:(id)a0 setBehaviorSettings:(id)a1 withError:(id *)a2;
- (BOOL)_setScheduleTrigger:(id)a0 forModeConfigurationWithIdentifier:(id)a1;
- (id)modesSupportingSmartEntryForSmartTriggerManager:(id)a0;
- (void)globalConfigurationManager:(id)a0 didUpdatePhoneCallBypassSettings:(id)a1;
- (id)phoneCallBypassSettingsForSyncManager:(id)a0;
- (void).cxx_destruct;
- (id)remoteServiceProvider:(id)a0 silencedModesForContactHandle:(id)a1 withError:(id *)a2;
- (id)scheduleSettingsForSyncManager:(id)a0;
- (void)resume;
- (void)settingsManager:(id)a0 didReceiveUpdatedScheduleSettings:(id)a1;
- (void)_queue_resume;
- (BOOL)_setDimsLockScreenSetting:(unsigned long long)a0 forModeConfigurationWithIdentifier:(id)a1;
- (id)remoteServiceProvider:(id)a0 resolveBehaviorForEventDetails:(id)a1 clientDetails:(id)a2 date:(id)a3 error:(id *)a4;

@end
