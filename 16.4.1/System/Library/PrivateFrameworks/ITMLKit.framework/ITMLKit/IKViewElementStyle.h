@class NSShadow, NSString, NSArray, IKColor, NSURL, IKCSSRule, NSMutableDictionary, IKFourTuple, NSNumber, UIColor;

@interface IKViewElementStyle : NSObject <NSCopying> {
    BOOL _filterBlockedStyles;
    NSString *_classDescriptorString;
}

@property (readonly, copy, nonatomic) IKCSSRule *cssRule;
@property (readonly, nonatomic) NSString *classDescriptorString;
@property (retain, nonatomic) NSArray *mediaQueryList;
@property (retain, nonatomic) NSMutableDictionary *styleDict;
@property (retain, nonatomic) NSMutableDictionary *overridingValuesByStyle;
@property (readonly, nonatomic) BOOL hidden;
@property (readonly, nonatomic) UIColor *color;
@property (readonly, nonatomic) UIColor *backgroundColor;
@property (readonly, nonatomic) UIColor *borderColor;
@property (readonly, nonatomic) IKColor *ikColor;
@property (readonly, nonatomic) IKColor *ikHighlightColor;
@property (readonly, nonatomic) IKColor *ikBackgroundColor;
@property (readonly, nonatomic) IKColor *ikBorderColor;
@property (readonly, nonatomic) NSString *badgeTreatment;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } borderMargins;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } borderWidths;
@property (readonly, nonatomic) NSString *dividerType;
@property (readonly, nonatomic) double fontSize;
@property (readonly, nonatomic) NSString *fontWeight;
@property (readonly, nonatomic) long long maxTextLines;
@property (readonly, nonatomic) unsigned long long textAlignment;
@property (readonly, nonatomic) unsigned long long elementAlignment;
@property (readonly, nonatomic) unsigned long long elementPosition;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } elementPadding;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } elementMargin;
@property (readonly, nonatomic) long long columnCount;
@property (readonly, nonatomic) NSString *columnType;
@property (readonly, nonatomic) NSString *columnItemType;
@property (readonly, nonatomic) NSString *rowHeight;
@property (readonly, nonatomic) NSString *maxWidth;
@property (readonly, nonatomic) NSString *itemWidth;
@property (readonly, nonatomic) NSString *itemHeight;
@property (readonly, nonatomic) IKColor *imageMaskColor;
@property (readonly, nonatomic) NSURL *imagePlaceholderURL;
@property (readonly, nonatomic) IKColor *imagePlaceholderBackgroundColor;
@property (readonly, nonatomic) long long reflectImage;
@property (readonly, nonatomic) long long fillImage;
@property (readonly, nonatomic) unsigned long long imagePosition;
@property (readonly, nonatomic) NSString *imageTreatment;
@property (readonly, nonatomic) struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } transform;
@property (readonly, nonatomic) NSString *transition;
@property (readonly, nonatomic) NSNumber *transitionInterval;
@property (readonly, nonatomic) NSString *labelsState;
@property (readonly, nonatomic) unsigned long long ordinalMaxLength;
@property (readonly, nonatomic) NSString *lockupType;
@property (readonly, nonatomic) NSString *visibility;
@property (readonly, nonatomic) NSString *cardType;
@property (readonly, nonatomic) NSString *textScale;
@property (readonly, nonatomic) NSString *textStyle;
@property (readonly, nonatomic) IKFourTuple *borderRadius;
@property (readonly, nonatomic) NSShadow *textShadow;
@property (readonly, nonatomic) NSString *maxHeight;
@property (readonly, nonatomic) NSNumber *letterSpacing;
@property (readonly, nonatomic) NSNumber *lineHeight;

+ (void)initialize;
+ (void)registerStyle:(id)a0 withType:(unsigned long long)a1 inherited:(BOOL)a2;
+ (id)elementStyleWithSelector:(id)a0 inlineStyleString:(id)a1 filterBlockedStyles:(BOOL)a2;
+ (id)elementStyleWithParentStyle:(id)a0 elementStyle:(id)a1 elementStyleOverrides:(id)a2;
+ (void)addBlockedStyle:(id)a0;
+ (unsigned long long)alignmentFromString:(id)a0;
+ (void)clearBlockedStyles;
+ (id)elementStyleWithSelector:(id)a0 aggregatingStyles:(id)a1;
+ (id)elementStyleWithSelector:(id)a0 cssRule:(id)a1 filterBlockedStyles:(BOOL)a2;
+ (id)elementStyleWithSelector:(id)a0 inlineStyleString:(id)a1 filterBlockedStyles:(BOOL)a2 inlineStyleRangeCorrect:(BOOL)a3;
+ (unsigned long long)imageTreatmentFromString:(id)a0;
+ (BOOL)isHiddenStyleRegistered;
+ (id)normalizeClassSelectorString:(id)a0;
+ (unsigned long long)positionFromString:(id)a0;
+ (id)propertiesForStyleName:(id)a0;
+ (void)registerEdgeInsetStyle:(id)a0 aliasName:(id)a1 withPositionStyleNames:(id)a2 inherited:(BOOL)a3;
+ (void)registerHiddenStyle:(id)a0;
+ (void)registerStyle:(id)a0 aliasName:(id)a1 withType:(unsigned long long)a2 inherited:(BOOL)a3;
+ (id)registeredAliases;
+ (id)registeredStyles;
+ (unsigned long long)transitionFromString:(id)a0;
+ (void)unregisterStyles;

- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)debugDescription;
- (id)description;
- (void).cxx_destruct;
- (id)prototype;
- (id)valueForStyle:(id)a0;
- (void)_addDeclaration:(id)a0;
- (void)_addElementStyle:(id)a0;
- (void)_addParentStyle:(id)a0;
- (id)_declarationForStyleName:(id)a0 expectedClass:(Class)a1;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_edgeInsetsForStyleName:(id)a0;
- (id)_gradientFromString:(id)a0;
- (id)_newColorFromString:(id)a0;
- (id)_styleNameForAlias:(id)a0;
- (id)cssValueForStyle:(id)a0;
- (unsigned long long)edgeFlagForStyle:(id)a0;
- (id)initWithCSSRule:(id)a0 filterBlockedStyles:(BOOL)a1 selStr:(id)a2;
- (id)initWithClassSelector:(id)a0;
- (id)initWithStyle:(id)a0 classSelector:(id)a1;
- (BOOL)requiresDynamicEvaluation;
- (unsigned long long)typeForStyle:(id)a0;

@end
