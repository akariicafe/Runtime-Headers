@class NSDictionary, RTIInputSystemSourceSession, UITextInputTraits, UITextPosition, UILabel, UITextRange, NSString, NSMutableArray, UIImage, NSArray, UIInputContextHistory, UITextInputPasswordRules, UITextInteractionAssistant, UIButton, UIView, _UISupplementalLexicon, NSLayoutConstraint, UIFont, _CNAtomFieldEditor, UIColor, UIScrollView, NSIndexSet, _UITextFieldRoundedRectBackgroundViewNeue, _CNAtomTextViewBaselineLayoutStrut;
@protocol CNAtomTextViewDelegateInternal, UITextInputDelegate, UITextInputSuggestionDelegate, UITextInputTokenizer;

@interface CNAtomTextView : UIControl <NSLayoutManagerDelegate, UITextViewDelegate, UITextInputPrivate, UITextInput> {
    UITextInputTraits *_textInputTraits;
    _UITextFieldRoundedRectBackgroundViewNeue *_background;
    UIScrollView *_scrollView;
    _CNAtomFieldEditor *_textView;
    UILabel *_placeholderLabel;
    UIButton *_clearButton;
    NSMutableArray *_atomViews;
    _CNAtomTextViewBaselineLayoutStrut *_baselineLayoutLabel;
    NSLayoutConstraint *_baselineLayoutConstraint;
    struct { unsigned char delegateDidChangeSelection : 1; unsigned char delegateSupportedPasteboardTypes : 1; unsigned char delegateRepresentedObjectsFromPasteboard : 1; unsigned char delegateStoreRepresentedObjectsOnPasteboard : 1; unsigned char delegateShouldReplaceRepresentedObjectReplacementText : 1; unsigned char inLayoutSubviews : 1; unsigned char needsScrollToSelectionAfterLayout : 1; } _flags;
}

@property (class, readonly, nonatomic) Class _backgroundViewClass;

@property (nonatomic, getter=_drawsDebugBaselines, setter=_setDrawsDebugBaselines:) BOOL drawsDebugBaselines;
@property (readonly, nonatomic, getter=_systemBackgroundView) UIView *systemBackgroundView;
@property (readonly, nonatomic, getter=_fieldEditor) _CNAtomFieldEditor *fieldEditor;
@property (readonly, nonatomic) UILabel *placeholderLabel;
@property (readonly, nonatomic) UIButton *clearButton;
@property (weak, nonatomic) id<CNAtomTextViewDelegateInternal> delegate;
@property (retain, nonatomic) UIFont *font;
@property (retain, nonatomic) UIColor *textColor;
@property (nonatomic) struct NSDirectionalEdgeInsets { double top; double leading; double bottom; double trailing; } textInsets;
@property (copy, nonatomic) NSString *placeholder;
@property (retain, nonatomic) UIColor *placeholderColor;
@property (nonatomic) struct NSDirectionalEdgeInsets { double top; double leading; double bottom; double trailing; } placeholderInsets;
@property (retain, nonatomic) UIView *leadingView;
@property (nonatomic) long long leadingViewMode;
@property (nonatomic) struct NSDirectionalEdgeInsets { double top; double leading; double bottom; double trailing; } leadingViewInsets;
@property (retain, nonatomic) UIView *trailingView;
@property (nonatomic) long long trailingViewMode;
@property (nonatomic) struct NSDirectionalEdgeInsets { double top; double leading; double bottom; double trailing; } trailingViewInsets;
@property (nonatomic) long long clearButtonMode;
@property (nonatomic) struct NSDirectionalEdgeInsets { double top; double leading; double bottom; double trailing; } clearButtonInsets;
@property (copy, nonatomic) NSArray *representedObjects;
@property (readonly, copy, nonatomic) NSArray *selectedRepresentedObjects;
@property (readonly, copy, nonatomic) NSString *currentEditingString;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) UITextInteractionAssistant *interactionAssistant;
@property (nonatomic) long long selectionGranularity;
@property (readonly, nonatomic) long long cursorBehavior;
@property (readonly, nonatomic) id<UITextInputSuggestionDelegate> textInputSuggestionDelegate;
@property (nonatomic) long long _textInputSource;
@property (readonly, nonatomic) RTIInputSystemSourceSession *_rtiSourceSession;
@property (readonly, nonatomic) BOOL supportsImagePaste;
@property (copy) UITextRange *selectedTextRange;
@property (readonly, nonatomic) UITextRange *markedTextRange;
@property (copy, nonatomic) NSDictionary *markedTextStyle;
@property (readonly, nonatomic) UITextPosition *beginningOfDocument;
@property (readonly, nonatomic) UITextPosition *endOfDocument;
@property (weak, nonatomic) id<UITextInputDelegate> inputDelegate;
@property (readonly, nonatomic) id<UITextInputTokenizer> tokenizer;
@property (readonly, nonatomic) UIView *textInputView;
@property (nonatomic) long long selectionAffinity;
@property (readonly, nonatomic) id insertDictationResultPlaceholder;
@property (readonly, nonatomic) BOOL hasText;
@property (nonatomic) long long autocapitalizationType;
@property (nonatomic) long long autocorrectionType;
@property (nonatomic) long long spellCheckingType;
@property (nonatomic) long long smartQuotesType;
@property (nonatomic) long long smartDashesType;
@property (nonatomic) long long smartInsertDeleteType;
@property (nonatomic) long long keyboardType;
@property (nonatomic) long long keyboardAppearance;
@property (nonatomic) long long returnKeyType;
@property (nonatomic) BOOL enablesReturnKeyAutomatically;
@property (nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property (copy, nonatomic) NSString *textContentType;
@property (copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property (copy, nonatomic) NSString *recentInputIdentifier;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } validTextRange;
@property (copy, nonatomic) NSIndexSet *PINEntrySeparatorIndexes;
@property (nonatomic) struct __CFCharacterSet { } *textTrimmingSet;
@property (retain, nonatomic) UIColor *insertionPointColor;
@property (retain, nonatomic) UIColor *selectionBarColor;
@property (retain, nonatomic) UIColor *selectionHighlightColor;
@property (retain, nonatomic) UIImage *selectionDragDotImage;
@property (retain, nonatomic) UIColor *selectionBorderColor;
@property (nonatomic) double selectionBorderWidth;
@property (nonatomic) double selectionCornerRadius;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } selectionEdgeInsets;
@property (retain, nonatomic) UIColor *underlineColorForTextAlternatives;
@property (retain, nonatomic) UIColor *underlineColorForSpelling;
@property (nonatomic) unsigned long long insertionPointWidth;
@property (nonatomic) int textLoupeVisibility;
@property (nonatomic) int textSelectionBehavior;
@property (nonatomic) id textSuggestionDelegate;
@property (nonatomic) BOOL isSingleLineDocument;
@property (nonatomic) BOOL contentsIsSingleValue;
@property (nonatomic) BOOL hasDefaultContents;
@property (nonatomic) BOOL acceptsPayloads;
@property (nonatomic) BOOL acceptsEmoji;
@property (nonatomic) BOOL acceptsInitialEmojiKeyboard;
@property (nonatomic) BOOL acceptsDictationSearchResults;
@property (nonatomic) BOOL useAutomaticEndpointing;
@property (nonatomic) BOOL showDictationButton;
@property (nonatomic) BOOL forceEnableDictation;
@property (nonatomic) BOOL forceDisableDictation;
@property (nonatomic) BOOL forceSpellingDictation;
@property (nonatomic) BOOL forceDefaultDictationInfo;
@property (nonatomic) long long forceDictationKeyboardType;
@property (nonatomic) BOOL preferOnlineDictation;
@property (nonatomic) int emptyContentReturnKeyType;
@property (nonatomic) BOOL returnKeyGoesToNextResponder;
@property (nonatomic) BOOL acceptsFloatingKeyboard;
@property (nonatomic) BOOL forceFloatingKeyboard;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } floatingKeyboardEdgeInsets;
@property (nonatomic) BOOL acceptsSplitKeyboard;
@property (nonatomic) BOOL displaySecureTextUsingPlainText;
@property (nonatomic) BOOL displaySecureEditsUsingPlainText;
@property (nonatomic) BOOL learnsCorrections;
@property (nonatomic) int shortcutConversionType;
@property (nonatomic) BOOL suppressReturnKeyStyling;
@property (nonatomic) BOOL useInterfaceLanguageForLocalization;
@property (nonatomic) BOOL deferBecomingResponder;
@property (nonatomic) BOOL enablesReturnKeyOnNonWhiteSpaceContent;
@property (copy, nonatomic) NSString *autocorrectionContext;
@property (copy, nonatomic) NSString *responseContext;
@property (retain, nonatomic) UIInputContextHistory *inputContextHistory;
@property (nonatomic) BOOL disableInputBars;
@property (nonatomic) BOOL isCarPlayIdiom;
@property (nonatomic) long long textScriptType;
@property (nonatomic) BOOL loadKeyboardsForSiriLanguage;
@property (retain, nonatomic) _UISupplementalLexicon *supplementalLexicon;
@property (retain, nonatomic) UIImage *supplementalLexiconAmbiguousItemIcon;
@property (nonatomic) BOOL disablePrediction;
@property (nonatomic) BOOL hidePrediction;
@property (nonatomic) BOOL disableHandwritingKeyboard;
@property (nonatomic, getter=isDevicePasscodeEntry) BOOL devicePasscodeEntry;
@property (nonatomic) long long preferredKeyboardStyle;
@property (readonly, nonatomic) UITextRange *textRangeForServicesInteraction;

+ (id)defaultTextColor;
+ (id)defaultFont;
+ (Class)_fieldEditorClass;
+ (id)defaultPlaceholderColor;

- (id)positionFromPosition:(id)a0 offset:(long long)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })firstRectForRange:(id)a0;
- (id)characterRangeByExtendingPosition:(id)a0 inDirection:(long long)a1;
- (BOOL)hasSelection;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })selectionRange;
- (id)rangeEnclosingPosition:(id)a0 withGranularity:(long long)a1 inDirection:(long long)a2;
- (void)selectAll;
- (BOOL)isPosition:(id)a0 withinTextUnit:(long long)a1 inDirection:(long long)a2;
- (long long)offsetFromPosition:(id)a0 toPosition:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })caretRectForPosition:(id)a0;
- (id)closestPositionToPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)closestPositionToPoint:(struct CGPoint { double x0; double x1; })a0 withinRange:(id)a1;
- (id)positionWithinRange:(id)a0 farthestInDirection:(long long)a1;
- (id)positionFromPosition:(id)a0 toBoundary:(long long)a1 inDirection:(long long)a2;
- (id)positionFromPosition:(id)a0 inDirection:(long long)a1 offset:(long long)a2;
- (BOOL)isPosition:(id)a0 atBoundary:(long long)a1 inDirection:(long long)a2;
- (void)takeTraitsFrom:(id)a0;
- (id)selectionRectsForRange:(id)a0;
- (id)characterRangeAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })edgeInsets;
- (BOOL)becomeFirstResponder;
- (BOOL)isFirstResponder;
- (long long)baseWritingDirectionForPosition:(id)a0 inDirection:(long long)a1;
- (void)_tapRecognized:(id)a0;
- (void)unmarkText;
- (id)forwardingTargetForSelector:(SEL)a0;
- (long long)comparePosition:(id)a0 toPosition:(id)a1;
- (id)paragraphStyle;
- (void)replaceRange:(id)a0 withText:(id)a1;
- (BOOL)keyboardInputChanged:(id)a0;
- (void)scrollViewDidScroll:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)insertText:(id)a0;
- (void)setBaseWritingDirection:(long long)a0 forRange:(id)a1;
- (id)textInputTraits;
- (id)textRangeFromPosition:(id)a0 toPosition:(id)a1;
- (id)viewForLastBaselineLayout;
- (void)_textStorageDidProcessEditing:(id)a0;
- (BOOL)respondsToSelector:(SEL)a0;
- (void)dealloc;
- (BOOL)canBecomeFirstResponder;
- (void)layoutSubviews;
- (id)_clearButtonImageForState:(unsigned long long)a0;
- (id)keyCommands;
- (void)_setEnabled:(BOOL)a0 animated:(BOOL)a1;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (id)methodSignatureForSelector:(SEL)a0;
- (void)setEnabled:(BOOL)a0;
- (void)keyboardInputChangedSelection:(id)a0;
- (BOOL)_showsPlaceholder;
- (BOOL)resignFirstResponder;
- (void)setMarkedText:(id)a0 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)layoutManager:(id)a0 didCompleteLayoutForTextContainer:(id)a1 atEnd:(BOOL)a2;
- (void)deleteBackward;
- (BOOL)canResignFirstResponder;
- (id)textInRange:(id)a0;
- (BOOL)hasContent;
- (void).cxx_destruct;
- (struct CGSize { double x0; double x1; })_clearButtonSize;
- (BOOL)canPerformAction:(SEL)a0 withSender:(id)a1;
- (BOOL)_hasContent;
- (void)_layoutPlaceholder;
- (void)_scrollToSelectionIfNeeded;
- (id)positionWithinRange:(id)a0 atCharacterOffset:(long long)a1;
- (BOOL)textView:(id)a0 shouldChangeTextInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 replacementText:(id)a2;
- (void)textViewDidBeginEditing:(id)a0;
- (void)textViewDidChange:(id)a0;
- (void)textViewDidChangeSelection:(id)a0;
- (void)textViewDidEndEditing:(id)a0;
- (void)addRepresentedObject:(id)a0;
- (void)removeRepresentedObjectAtIndex:(unsigned long long)a0;
- (id)_atomLayoutViewForRepresentedObject:(id)a0;
- (id)_attachmentAtCharacterIndex:(unsigned long long)a0;
- (id)_baseAttributedStringWithRepresentedObject:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_characterRangeForAtomView:(id)a0;
- (void)_clearButtonTapped:(id)a0;
- (void)_createBaselineLayoutStrutIfNecessary;
- (void)_deleteCharactersInStorage:(id)a0 ranges:(id)a1 rangeToAdjust:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a2;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_edgeInsetsForDirectionalInsets:(struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })a0;
- (struct CGPoint { double x0; double x1; })_firstGlyphBaselineLeftPointWithLayoutManager:(id)a0;
- (void)_insertRepresentedObjects:(id)a0 atCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)_layoutButtons;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_rectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 sizingView:(id)a1 isLeft:(BOOL)a2;
- (void)_removeRepresentedObjectsInCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)_representedObjectsFromPasteboard:(id)a0;
- (id)_representedObjectsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 ranges:(id *)a1;
- (BOOL)_showViewWithMode:(long long)a0 alwaysDefinition:(BOOL)a1;
- (BOOL)_showsClearButton;
- (BOOL)_showsLeadingView;
- (BOOL)_showsTrailingView;
- (void)_storeRepresentedObjects:(id)a0 onPasteboard:(id)a1;
- (id)_supportedPasteboardTypes;
- (void)_updateAtomMasksInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_updateBaselineConstraintIfNecessaryUsingTextViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_usedRectWithLayoutManager:(id)a0 textContainer:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_visibleAtomsRect;
- (id)baseAttributes;
- (id)baseAttributesWithRepresentedObject:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })clearButtonFrameForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)currentEditingString:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a0;
- (void)escKeyPressed:(id)a0;
- (void)insertRepresentedObject:(id)a0 atIndex:(unsigned long long)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })leadingViewFrameForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })placeholderFrameForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)removeRepresentedObject:(id)a0;
- (void)removeRepresentedObjects:(id)a0;
- (void)removeRepresentedObjectsAtIndexes:(id)a0;
- (void)replaceCurrentEditingStringWithRepresentedObject:(id)a0;
- (void)replaceCurrentEditingStringWithRepresentedObject:(id)a0 autoSelect:(BOOL)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })trailingViewFrameForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;

@end
