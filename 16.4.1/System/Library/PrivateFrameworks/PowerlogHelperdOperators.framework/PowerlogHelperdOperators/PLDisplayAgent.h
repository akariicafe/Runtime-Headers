@class NSMutableDictionary, PLXPCListenerOperatorComposition, PLEntryNotificationOperatorComposition, NSDate, NSDictionary, PLEventForwardDisplayEntry, PLIOKitOperatorComposition, PLDisplayIOReportStats, CBAdaptationClient, NSMutableArray, BrightnessSystemClient, PLEntry, PLNSNotificationOperatorComposition, PLDisplayIOReportAODStats, NSString, KeyboardBrightnessClient, PLMonotonicTimer, PLTimer;

@interface PLDisplayAgent : PLAgent <BLSBacklightStateObserving>

@property (readonly) PLIOKitOperatorComposition *iokitBacklight;
@property (readonly) PLIOKitOperatorComposition *iokitBacklightDCP;
@property (readonly) PLIOKitOperatorComposition *iokitBacklightControl;
@property (readonly) PLIOKitOperatorComposition *iokitDisplay;
@property (readonly) PLIOKitOperatorComposition *iokitTouch;
@property (readonly) PLIOKitOperatorComposition *iokitKeyboardBrightness;
@property (readonly) PLIOKitOperatorComposition *iokitLCD;
@property (retain) BrightnessSystemClient *brightnessSystemClient;
@property (retain) CBAdaptationClient *colorAdaptationClient;
@property (retain) PLTimer *backlightFilterTimer;
@property (retain) PLTimer *dcpTimeoffsetCalibTimer;
@property (retain) PLTimer *bluelightFilterTimer;
@property (retain) PLTimer *uAmpsFilterTimer;
@property (retain) PLTimer *alsLuxFilterTimer;
@property (retain) PLTimer *AZLSnapshotsTimer;
@property (retain) NSMutableDictionary *pendingBacklightEntry;
@property (retain) NSDate *pendingBacklightEntryDate;
@property double currAFKSystemTimestamp;
@property double currMonoTimestamp;
@property double currAFKSystemTimeOffset;
@property unsigned long long pendingALSLux;
@property unsigned long long lastALSLux;
@property (retain) NSDate *pendingALSLuxEntryDate;
@property BOOL alsOn;
@property double lastALSPowerSaved;
@property BOOL userTouch;
@property (retain) NSDate *userTouchDownTime;
@property (readonly) NSDictionary *displayPowerModel;
@property struct __IOHIDEventSystemClient { } *touchHIDClientRef;
@property struct __IOHIDEventSystemClient { } *ambientLightSensorHIDClientRef;
@property BOOL alsPluginKeyRegistered;
@property (retain) PLXPCListenerOperatorComposition *multitouchXPCListener;
@property BOOL isMultitouchLoggingEnabled;
@property (retain) PLMonotonicTimer *logLastALSPowerSavedTimer;
@property (retain) PLEntry *bluelightStatusEntry;
@property (retain) PLEventForwardDisplayEntry *uAmpsEntry;
@property BOOL isMIEActive;
@property BOOL firstEntryOnInit;
@property BOOL wasDisplayOn;
@property BOOL isDisplayOnNow;
@property BOOL isDisplayHighBrightness;
@property BOOL isFirstTimeModeling;
@property (retain) PLEntryNotificationOperatorComposition *IOMFBScanoutNotification;
@property (retain) PLEntryNotificationOperatorComposition *ApplicationNotification;
@property (retain) PLEntryNotificationOperatorComposition *aodstateChangedNotification;
@property (retain) PLNSNotificationOperatorComposition *thermalMonitorListener;
@property (retain) NSMutableArray *displayStateChanges;
@property (retain) PLDisplayIOReportStats *displayIOReportStats;
@property (retain) PLDisplayIOReportStats *displayIOReportAZLStats;
@property (retain) PLDisplayIOReportStats *displayIOReportAZLSnapshots;
@property BOOL ShouldLogAmbient;
@property (retain) PLDisplayIOReportAODStats *displayIOReportAODStats;
@property int lastScreenState;
@property long long AZLSnapshotsEntries;
@property double displayLux;
@property double displaymNits;
@property float realmNits;
@property float autobrightnessmNits;
@property (retain) PLEntryNotificationOperatorComposition *batteryLevelChanged;
@property (retain) NSString *lastForegroundAppAPL;
@property (retain) NSMutableArray *afkEndpoints;
@property double lastBuiltinDisplayLux;
@property double lastBuiltinDisplayBrightness;
@property double lastBuiltinDisplaySliderValue;
@property double lastBuiltinDisplayTime;
@property (retain) KeyboardBrightnessClient *kbClient;
@property (retain) PLTimer *keyboardBrightnessFilterTimer;
@property double pendingKeyboardBrightnessValue;
@property (retain) NSDate *pendingKeyboardBrightnessDate;
@property struct __IOMobileFramebuffer { } *frameBuffer;
@property long long lastRearLuxValue;
@property BOOL supportsFinalBrightnessCommit;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)entryEventForwardDefinitions;
+ (id)entryEventBackwardDefinitions;
+ (id)entryEventPointDefinitions;
+ (void)load;
+ (id)entryAggregateDefinitions;
+ (id)entryEventNoneDefinitions;
+ (id)entryEventIntervalDefinitions;
+ (id)entryAggregateDefinitionScreenOn;
+ (id)entryAggregateDefinitionUserTouch;
+ (id)entryEventBackwardDefinitionALSSamplesBeforeWake;
+ (id)entryEventBackwardDefinitionALSThreshold;
+ (id)entryEventBackwardDefinitionAPLStats;
+ (id)entryEventBackwardDefinitionAZLSnapshots;
+ (id)entryEventBackwardDefinitionAZLStats;
+ (id)entryEventBackwardDefinitionAmbientLight;
+ (id)entryEventBackwardDefinitionBlueLightParameters;
+ (id)entryEventBackwardDefinitionCurveUpdate;
+ (id)entryEventBackwardDefinitionDCPAODstats;
+ (id)entryEventBackwardDefinitionHarmonyParameters;
+ (id)entryEventBackwardDefinitionRampInfo;
+ (id)entryEventBackwardDefinitionTouch;
+ (id)entryEventForwardDefinitionALSEnabled;
+ (id)entryEventForwardDefinitionALSLux;
+ (id)entryEventForwardDefinitionALSPowerSaved;
+ (id)entryEventForwardDefinitionALSUserPreferences;
+ (id)entryEventForwardDefinitionBlueLightReductionStatus;
+ (id)entryEventForwardDefinitionColorAdaptationMode;
+ (id)entryEventForwardDefinitionDisplay;
+ (id)entryEventForwardDefinitionLinearBrightness;
+ (id)entryEventForwardDefinitionLuxStats;
+ (id)entryEventNoneDefinitionPanelStats;
+ (id)entryEventPointDefinitionBacklightControl;
+ (id)entryEventPointDefinitionDisplay;
+ (id)entryEventPointDefinitionKeyboardBrightness;
+ (id)entryEventPointDefinitionMultitouch;
+ (id)entryEventPointDefinitionUserBrightness;
+ (BOOL)shouldLogALSPowerSaved;
+ (BOOL)shouldLogAPL;
+ (BOOL)shouldLogBLR;
+ (BOOL)shouldLogBacklightControl;
+ (BOOL)shouldLogDisplay;
+ (BOOL)shouldLogFromDCP;
+ (BOOL)shouldLogKeyboardBrightness;
+ (BOOL)shouldLogLCD;
+ (BOOL)shouldLogLuxStats;
+ (BOOL)shouldLogTouch;
+ (BOOL)shouldLogUserBrightness;
+ (BOOL)shouldModelPowerFromAPL;
+ (BOOL)shouldModelPowerFromIOMFB;

- (void)initOperatorDependancies;
- (void)log;
- (void)dealloc;
- (void)initTaskOperatorDependancies;
- (void)backlight:(id)a0 didCompleteUpdateToState:(long long)a1 forEvent:(id)a2;
- (id)init;
- (void)reArmCallback;
- (id)trimConditionsForEntryKey:(id)a0 forTrimDate:(id)a1;
- (void).cxx_destruct;
- (void)handleBrightnessClientNotification:(id)a0 withValue:(id)a1;
- (void)registerForBuiltInDisplayNotifications:(id)a0 withNewBuiltInDisplayID:(long long)a1;
- (void)logBlueLightDataWithDictionary:(id)a0;
- (void)__FrameBufferEventCallback:(struct __IOMobileFramebuffer { } *)a0;
- (double)averageFrameRateFromIOMFBScanout:(id)a0;
- (double)calculatePowerFromAPL:(double)a0 withAvgRed:(double)a1 withAvgGreen:(double)a2 withAvgBlue:(double)a3;
- (void)chunkScreenOnAtDate:(id)a0;
- (void)cleanUpAFKInterfaces;
- (void)clearDisplayAccountingEvents;
- (void)extractDataWithEntry:(id)a0 withColName:(id)a1 withDataArray:(id)a2;
- (void)fillInBuiltinDisplayBrightnessParameters:(id)a0;
- (unsigned long long)getBacklightEnabledTimestamp:(unsigned int)a0;
- (long long)getBuiltInDisplayID:(id)a0;
- (id)getSubFrameMap;
- (void)handleAFKInterfaceIOServiceCallback:(unsigned int)a0;
- (void)handleAFKInterfaceMsg:(id)a0;
- (void)initAODState:(long long)a0;
- (void)initializeScreenOnAccumulation;
- (BOOL)isAlsEnabled;
- (BOOL)listenForAlsPluginMatchingKeys:(struct __IOHIDEventSystemClient { } *)a0 withKeys:(const void **)a1 withValues:(const void **)a2 withCount:(unsigned long long)a3;
- (void)logAODChange;
- (void)logAODState:(int)a0;
- (void)logBrightnessDataWithEntryKey:(id)a0 withColName:(id)a1 withValue:(id)a2;
- (void)logDisplayAPL;
- (void)logDisplayAZL;
- (void)logDisplayEntry:(id)a0;
- (void)logEventBackwardALSSamplesBeforeWake:(id)a0;
- (void)logEventBackwardALSThreshold:(id)a0;
- (void)logEventBackwardAmbientLight:(id)a0;
- (void)logEventBackwardCurveUpdate:(id)a0;
- (void)logEventBackwardRampInfo:(id)a0;
- (void)logEventBackwardTouch;
- (void)logEventBackwardUserTouch:(BOOL)a0;
- (void)logEventForwardALSEnabled;
- (void)logEventForwardALSLux:(unsigned long long)a0;
- (void)logEventForwardALSUserPreferences;
- (void)logEventForwardALSUserPreferencesEntryWithLux:(id)a0;
- (void)logEventForwardALSUserPreferencesWithCurrLux;
- (void)logEventForwardColorAdaptationMode;
- (void)logEventForwardDisplay;
- (void)logEventForwardDisplayWithInactiveScreenHistoryArray:(id)a0;
- (void)logEventForwardDisplayWithRawData:(id)a0 withDate:(id)a1;
- (void)logEventForwardExtendedALSUserPreferences:(id)a0;
- (void)logEventForwardLinearBrightness:(id)a0;
- (void)logEventForwardLuxStats:(id)a0;
- (void)logEventNonePanelStats;
- (void)logEventPointDisplay;
- (void)logEventPointDisplayBacklight;
- (void)logEventPointDisplayBacklightWithState:(unsigned long long)a0;
- (void)logEventPointDisplayForBlock:(id)a0 isActive:(int)a1;
- (void)logEventPointDisplayMIE;
- (void)logEventPointKeyboardBrightness:(double)a0;
- (void)logEventPointKeyboardBrightness:(double)a0 withDate:(id)a1;
- (void)logEventPointMultitouchWithPayload:(id)a0;
- (void)logEventPointUserBrightnessCommitted:(double)a0;
- (void)logScreenOnAccumulationWithDelta:(double)a0;
- (void)modelDisplayPower:(id)a0;
- (void)modelDisplayPowerFromIOMFB:(id)a0;
- (void)modelDynamicDisplayPower:(id)a0;
- (void)modelDynamicDisplayPowerFromAPL:(id)a0;
- (void)qualifyDisplayPower:(id)a0;
- (void)reArmUAmpsCallback;
- (void)screenStateChangedTo:(BOOL)a0 atDate:(id)a1;
- (struct __IOHIDEventSystemClient { } *)setUpIOHIDAmbientLightSensorSystemClient;
- (struct __IOHIDEventSystemClient { } *)setUpIOHIDTouchSystemClient;
- (double)uAmpsToDisplayPower:(double)a0;
- (BOOL)updateDisplayIOReportStats:(id)a0;
- (void)updateLastForegroundAppAPL:(id)a0;

@end
