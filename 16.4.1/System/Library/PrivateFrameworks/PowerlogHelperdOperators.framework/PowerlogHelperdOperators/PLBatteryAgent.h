@class PLEntryNotificationOperatorComposition, PLXPCListenerOperatorComposition, NSMutableDictionary, NSDate, NSDictionary, PLIOKitOperatorComposition, AVSystemController, NSMutableArray, PLEntry, PLSemaphore, NSString, PLNSNotificationOperatorComposition, PLXPCResponderOperatorComposition, PLCFNotificationOperatorComposition, PLMonotonicTimer, NSNumber, PLTimer;

@interface PLBatteryAgent : PLAgent <ACCConnectionInfoDelegateProtocol>

@property (readonly) PLIOKitOperatorComposition *iokitPowerSource;
@property (readonly) PLIOKitOperatorComposition *iokitPPM;
@property (retain) PLNSNotificationOperatorComposition *thermalMonitorListener;
@property (retain) PLEntryNotificationOperatorComposition *batteryLevelChanged;
@property (retain) NSNumber *deviceIsPluggedIn;
@property double batteryLevelPercent;
@property double rawBatteryVoltageVolt;
@property int presentMaxRa;
@property int lifetimeMaxRa;
@property (retain) NSDictionary *lastITMiscStatus;
@property int previousCurrentAccumulator;
@property int previousCurrentAccumulatorCount;
@property (retain) NSDate *previousCurrentAccumulatorDate;
@property (retain) PLTimer *EABatteryTimer;
@property (retain) PLMonotonicTimer *significantBatteryChangeTimer;
@property (readonly) NSString *entryKeyEABattery;
@property (readonly) NSString *entryKeyEAPencilStats;
@property double EAEnergyDrained;
@property double EABatteryLevel;
@property (retain) NSNumber *lastkIOPSAppleBatteryCaseCumulativeCurrentKey;
@property (retain) NSDate *lastEABatteryConnectedTime;
@property (retain) PLTimer *eaBatteryConnectCountTimer;
@property BOOL isPingPongCharging;
@property BOOL isFirstTimeCheckingPingPong;
@property BOOL lifetimeDataLogged;
@property (retain) PLTimer *periodicAggdTimer;
@property (retain) PLTimer *xFlagsRetryTimer;
@property (retain) PLEntry *lastBatteryConfigEntry;
@property (retain) NSNumber *lastDOD0;
@property (retain) NSNumber *lastVacVoltageLimit;
@property struct __IOHIDManager { } *BTMmanager;
@property (retain) PLXPCResponderOperatorComposition *batteryInfoResponder;
@property (retain) PLXPCResponderOperatorComposition *batteryTemperatureResponder;
@property (retain) PLXPCResponderOperatorComposition *batteryDischargeCurrentResponder;
@property (retain) PLXPCResponderOperatorComposition *batteryChargingStateResponder;
@property (retain) PLIOKitOperatorComposition *chargerIOService;
@property (retain) PLEntry *lastChargerEntry;
@property (retain) PLIOKitOperatorComposition *magsafeIOService;
@property BOOL isTLCNotificationSurfaced;
@property BOOL smartChargingEngaged;
@property BOOL demoMode;
@property int aggregatedTimeTLC;
@property (retain) NSDate *lastTLCEntryStartTime;
@property BOOL cleanEnergyChargingEngaged;
@property (readonly) PLEntryNotificationOperatorComposition *canSleepEntryNotifications;
@property (retain) PLSemaphore *canSleepSemaphore;
@property (readonly) PLEntryNotificationOperatorComposition *wakeEntryNotifications;
@property (retain) PLTimer *gasGaugeTimer;
@property (retain) NSDate *lastGasGaugeLogTime;
@property int gasGaugeConsecutiveEmptyEntriesCount;
@property BOOL allowGasGaugeRead;
@property (readonly) PLIOKitOperatorComposition *ioAccessoryManager;
@property (retain) PLXPCResponderOperatorComposition *batteryShutdownDataResponder;
@property (retain) PLXPCResponderOperatorComposition *batteryUPOStepperResponder;
@property (retain) PLXPCResponderOperatorComposition *batteryConfigResponder;
@property (retain) PLXPCListenerOperatorComposition *UPOStepperListener;
@property (retain) PLXPCListenerOperatorComposition *smartChargingListener;
@property (retain) PLXPCListenerOperatorComposition *cleanEnergyChargingListener;
@property (retain) AVSystemController *avSystemController;
@property BOOL cameraStreamingActive;
@property (retain) PLXPCListenerOperatorComposition *mobileChargeModeListener;
@property (retain) PLXPCListenerOperatorComposition *bdcAMAListener;
@property BOOL shouldLogEABatteryConfig;
@property (retain) NSMutableArray *trackedAccessories;
@property int priIOAccessoryPowerMode;
@property BOOL shouldQueryForAccessory;
@property (retain) NSMutableDictionary *openChargingIntervals;
@property (retain) NSString *chargingIntervalsEntryKey;
@property (retain) NSNumber *lastTLCCounter;
@property BOOL tlcIncreased;
@property (retain) PLCFNotificationOperatorComposition *tlcOverrideNotification;
@property (retain) NSNumber *TLCOverrideValue;
@property (retain) PLCFNotificationOperatorComposition *batteryUIVisitNotification;
@property (retain) NSDate *lastTimeChargingInfoUpdated;
@property int prevConnectedState;
@property int prevChargingState;
@property (retain) PLEntry *entryChargingOld;
@property (retain) NSDate *lastTimePenaltyBoxIntervalUpdated;
@property (retain) NSDate *lastTimeInPenaltyBox;
@property BOOL inPenaltyBox;
@property (retain) NSNumber *prevGGResetCount;
@property (retain) NSNumber *prevBatteryCellDisconnectCount;
@property int presentChemicalWeightedRa;
@property int presentWeightedRa;
@property int presentBatteryHealthMetric;
@property int presentPeakPerformanceCapacity;
@property int presentOCVCount;
@property int presentOCV;
@property int presentRaUpdateDisqualified;
@property int presentQmaxUpdateDisqualified;
@property int presentTimeSinceLastOCV;
@property (retain) NSNumber *mitigatedUPOCount;
@property BOOL rejudgeBattery;
@property struct ggcontext { } *gasGagueConnection;
@property int lastUILevel;
@property long long ppmEventLoggingCount;
@property (retain) PLTimer *ppmEventThresholdTimer;
@property (retain) PLCFNotificationOperatorComposition *cpmsDebugNotification;
@property long long csmTotalCount;
@property long long csmFailureCount;
@property (retain) NSDate *csmLastFlushMonotonicDate;
@property double csmFlushInterval;
@property (retain) PLCFNotificationOperatorComposition *csmFlushNotification;
@property (retain) PLCFNotificationOperatorComposition *csmOverrideNotification;
@property BOOL csmOverrideValue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)entryEventForwardDefinitions;
+ (id)entryEventBackwardDefinitions;
+ (id)entryEventPointDefinitions;
+ (id)defaults;
+ (void)load;
+ (id)entryAggregateDefinitions;
+ (id)entryEventNoneDefinitions;
+ (id)entryEventIntervalDefinitions;
+ (id)entryEventBackwardDefinitionBTM;
+ (id)entryAggregateDefinitionUILevel;
+ (id)connectStateStringToEnum:(id)a0;
+ (id)entryEventBackwardDefinitionAdapter;
+ (id)entryEventBackwardDefinitionBattery;
+ (id)entryEventBackwardDefinitionBatteryUI;
+ (id)entryEventBackwardDefinitionChargingHeatMapA;
+ (id)entryEventBackwardDefinitionChargingHeatMapB;
+ (id)entryEventBackwardDefinitionCurrentAccumulator;
+ (id)entryEventBackwardDefinitionDischargingHeatMap;
+ (id)entryEventBackwardDefinitionEABattery;
+ (id)entryEventBackwardDefinitionKioskMode;
+ (id)entryEventForwardDefinitionCalibration0;
+ (id)entryEventForwardDefinitionCalibration0Info;
+ (id)entryEventForwardDefinitionCleanEnergyCharging;
+ (id)entryEventForwardDefinitionEAPencil;
+ (id)entryEventForwardDefinitionEAPencilCharging;
+ (id)entryEventForwardDefinitionExternalCharger;
+ (id)entryEventForwardDefinitionIOPMUBootLPMLog;
+ (id)entryEventForwardDefinitionLightningConnectorStatus;
+ (id)entryEventForwardDefinitionMitigationState;
+ (id)entryEventForwardDefinitionMobileChargeMode;
+ (id)entryEventForwardDefinitionSmartCharging;
+ (id)entryEventForwardDefinitionUPOStepper;
+ (id)entryEventForwardDefinitionUSBCCharging;
+ (id)entryEventIntervalDefinitionCharging;
+ (id)entryEventIntervalDefinitionGasGauge;
+ (id)entryEventNoneDefinitionBatteryConfig;
+ (id)entryEventNoneDefinitionUserType;
+ (id)entryEventPointDefinitionBatteryPanicShutdown;
+ (id)entryEventPointDefinitionBatterySample;
+ (id)entryEventPointDefinitionBatteryShutdown;
+ (id)entryEventPointDefinitionBatteryTrapInfo;
+ (id)entryEventPointDefinitionBatteryUILogging;
+ (id)entryEventPointDefinitionBatteryUIVisit;
+ (id)entryEventPointDefinitionCPMSClientState;
+ (id)entryEventPointDefinitionCPMSControlState;
+ (id)entryEventPointDefinitionChargingInfo;
+ (id)entryEventPointDefinitionEABatteryConfig;
+ (id)entryEventPointDefinitionEAPencil;
+ (id)entryEventPointDefinitionGasGaugeReconnect;
+ (id)entryEventPointDefinitionPPMClientMetrics;
+ (id)entryEventPointDefinitionPPMDebug;
+ (id)entryEventPointDefinitionUPOStepper;
+ (BOOL)hasChargingInfoLogging;
+ (BOOL)hasExternalAccessory;
+ (BOOL)hasLightning;
+ (BOOL)hasWirelessCharger;
+ (BOOL)shouldLogBTM;
+ (BOOL)shouldLogCPMS;
+ (BOOL)shouldLogPPMDebugDetail;
+ (BOOL)supportsAccConnectionLogging;
+ (BOOL)supportsCleanEnergyCharging;
+ (BOOL)supportsSmartCharging;
+ (BOOL)supportsxFlags;

- (void)initOperatorDependancies;
- (void)log;
- (void)setupAVSystemController;
- (void)dealloc;
- (void)logEventForwardLPEM;
- (int)deviceType;
- (id)init;
- (void).cxx_destruct;
- (id)dataFromHexString:(id)a0;
- (id)getPPMDebugData;
- (void)logAdapterInfo:(id)a0;
- (void)setupCSMLogging;
- (void)cancelEALogging;
- (void)accessoryConnected:(id)a0;
- (void)accessoryConnectionEventNotification:(id)a0;
- (void)accessoryDisconnectEventNotification:(id)a0;
- (void)accessoryDisconnected:(id)a0;
- (void)accountGaugePowerFromCurrentAccumulatorEntry:(id)a0;
- (void)addPowerMeasurementToAccounting:(double)a0 withStartDate:(id)a1 withEndDate:(id)a2;
- (void)aggdTimerFired;
- (id)batteryEEEECode:(id)a0;
- (int)batteryLifetimeUPOCount;
- (BOOL)batterySerialChanged:(id)a0;
- (int)calculateChargingState:(id)a0;
- (int)calculateConnectedState:(id)a0;
- (void)checkChargingInfoChange:(id)a0;
- (BOOL)checkForPenaltyBox:(id)a0;
- (id)createTimerForEABatteryCountLogging;
- (void)detectEAPencilConnectionWithNotification:(id)a0;
- (BOOL)driverActive:(id)a0;
- (void)fakeLogEntry:(id)a0;
- (void)flushCSMToAggdAtDate:(id)a0;
- (BOOL)gasGaugeOpenAndStartLogging;
- (void)gasGaugeRead;
- (BOOL)gasGaugeStopLoggingAndClose;
- (id)getBaseIdentifierFromDevice:(id)a0;
- (id)getBatteryCalibration0Data;
- (int)getBatteryHealthServiceFlags;
- (int)getBatteryHealthServiceState;
- (int)getBatteryMaximumCapacityPercent;
- (id)getBatteryShutdownData;
- (id)getIOPSDevices;
- (id)getMitigatedUPOCountDefault;
- (int)getMitigationDefaults;
- (id)getUPOStepperData;
- (BOOL)givePluggedInFreePass;
- (void)handleBDCAMALogging:(id)a0;
- (void)handleCameraStreaming:(BOOL)a0 withProperties:(id)a1;
- (void)handleCameraStreamingLogging:(id)a0;
- (void)handleMitigationStateCallback:(int)a0;
- (void)handlePPMCallback;
- (void)handleSBC;
- (void)handleTLCNotification:(id)a0 externalConnected:(BOOL)a1;
- (BOOL)hasAppleSmartBattery;
- (void)initCameraStreamingIntervalTracking;
- (void)initCleanEnergyChargingLogging;
- (void)initSmartChargingLogging;
- (void)initializeChargingStateIntervals;
- (BOOL)isEABatteryConnectedNow;
- (BOOL)isEAPencilConnectedNow;
- (id)isOriginalBattery;
- (BOOL)isUPOEntry:(id)a0;
- (void)logBTM;
- (void)logBaselineToAggD:(id)a0;
- (void)logBaselineToCA:(id)a0;
- (void)logBatteryConfigToAggd:(id)a0;
- (void)logBatteryConfigToCA:(id)a0;
- (void)logBatteryEntry:(id)a0;
- (void)logBatteryShutdownToCA:(id)a0;
- (void)logCPMSSnapshotWithTrigger:(long long)a0;
- (void)logChargingParametersToAggd:(id)a0;
- (void)logChargingTimeToAggd:(double)a0;
- (void)logCurrentAccumulatorWithRawData:(id)a0;
- (void)logEABatteryConfig:(id)a0;
- (void)logEABatteryConfigToCA:(id)a0;
- (void)logEABatteryConnectedEventToAnalyticsIgnoreLastLogTimestamp:(BOOL)a0;
- (void)logEABatteryConnectedTimeToAnalyticsWithEAConnectionState:(BOOL)a0;
- (void)logEABatteryStatistics;
- (void)logEventBackwardBattery;
- (id)logEventBackwardBatteryWithRawData:(id)a0;
- (void)logEventBackwardHeatMap;
- (void)logEventBackwardHeatMapCallback:(id)a0 andHeatMapType:(long long)a1;
- (void)logEventBackwardKioskMode;
- (void)logEventBackwardKioskModeCallback:(id)a0;
- (void)logEventForwardCalibration0InfowithData:(id)a0;
- (void)logEventForwardCalibration0withData:(id)a0;
- (void)logEventForwardCleanEnergyChargingWithPayload:(id)a0;
- (void)logEventForwardMitigationStateWithState:(unsigned long long)a0 userDisabled:(BOOL)a1;
- (void)logEventForwardMobileChargeMode:(id)a0;
- (void)logEventForwardSmartChargingWithPayload:(id)a0;
- (void)logEventForwardUPOStepperWithPayload:(id)a0;
- (void)logEventIntervalGasGauge;
- (void)logEventNoneBatteryConfigCycleCountData;
- (void)logEventNoneBatteryConfigWithRawData:(id)a0;
- (void)logEventNoneUserType;
- (void)logEventPointBatteryPanicShutdown:(id)a0;
- (void)logEventPointBatteryShutdown;
- (void)logEventPointBatteryTrapInfo:(id)a0;
- (void)logEventPointBatteryUIVisit;
- (void)logEventPointChargingInfoWithChargingData:(id)a0;
- (void)logEventPointUPOStepper;
- (void)logFedDetails:(id)a0;
- (void)logFlashAgingToCA:(id)a0;
- (void)logKioskModeEntryToAggd:(id)a0;
- (void)logKioskModeEntryToCA:(id)a0;
- (void)logPPMDebug;
- (void)logPenaltyBoxDurationToAggd:(double)a0;
- (void)logShallowChargingToCA:(id)a0;
- (void)logWatchdogDebugDumpToCA:(id)a0;
- (id)lowBatteryLogPath;
- (id)lowBatteryLogString;
- (BOOL)modifiedExternalChargerEntry:(id)a0;
- (id)overrideBatteryData:(id)a0 withPath:(id)a1;
- (id)parseBatterySerialNumber:(id)a0;
- (id)parseITMiscStatusCounters:(id)a0;
- (id)parseLowVoltageResidencyCounters:(id)a0;
- (id)parseRawRaTableData:(id)a0;
- (id)parseRawSafetyFaultCounter:(id)a0;
- (id)parseTimeAtHighSoc:(id)a0;
- (id)parseTimeAtHighSocHex:(id)a0;
- (void)populateClientEntry:(id)a0 withBudget:(id)a1 withTemplate:(id)a2;
- (id)presentMaxRaFromRawData:(id)a0;
- (void)pushFCCDataToCoreAnalytics;
- (void)pushLowVoltageResidencyCountersToCA:(id)a0;
- (void)pushTimeAtHighSocToAggD:(id)a0;
- (void)pushTimeAtHighSocToCA:(id)a0;
- (void)refreshEABatteryStatusTriggeredByConnectionEvent:(BOOL)a0;
- (void)sampleBatteryEntryWithRawData:(id)a0 andProperties:(id)a1;
- (void)setAggdIntegerValueFromEntry:(id)a0 forKey:(id)a1 withPrefix:(id)a2;
- (void)setMitigatedUPOCountDefault:(id)a0;
- (void)setMitigationStateDefault:(unsigned long long)a0;
- (void)setupBatterySubsampling;
- (void)setupEALoggingTriggeredByConnectionEvent:(BOOL)a0;
- (BOOL)shouldLogCPMSSnapshotWithReason:(unsigned char)a0 withTrigger:(long long)a1;
- (BOOL)shouldWaitForLifetimeDataWithRawData:(id)a0;
- (void)showOrHideTLCNotification:(BOOL)a0 timeInTLC:(double)a1;
- (void)updateCurrentSenseMonitorStatusWithEntry:(id)a0;
- (void)updateIntervalForType:(short)a0 withState:(BOOL)a1 andTime:(id)a2;
- (void)updateLastChargeLevel:(int)a0 withTimestamp:(double)a1;
- (id)weekOfManufacture:(id)a0;
- (long long)xFlags;

@end
