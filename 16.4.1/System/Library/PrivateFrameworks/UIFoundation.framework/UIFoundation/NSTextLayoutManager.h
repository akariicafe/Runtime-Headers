@class NSMapTable, NSTextLineFragment, NSTextContainer, NSTextSelectionNavigation, NSDictionary, _NSTextAttributeStorage, layoutFragmentsHint, NSTextRange, NSLayoutManager, NSString, NSOperationQueue, NSArray, NSTextViewportLayoutController, NSTextParagraph, NSTextContentManager, layoutFragmentsCount;
@protocol NSTextLayoutManagerDelegatePrivate, NSTextLayoutManagerDelegate, NSTextLocation;

@interface NSTextLayoutManager : NSObject <NSTextViewportElementProvider, NSSecureCoding, NSTextSelectionDataSource> {
    NSTextContentManager *_textContentManager;
    NSArray *_textContainers;
    NSTextViewportLayoutController *_viewportLayoutController;
    long long _applicationFrameworkContext;
    id<NSTextLayoutManagerDelegatePrivate> _delegate;
    NSLayoutManager *_companion;
    NSTextSelectionNavigation *_textSelectionNavigation;
    _NSTextAttributeStorage *_temporaryAttributesTable;
    BOOL _usesFontLeading;
    BOOL _limitsLayoutForSuspiciousContents;
    BOOL _usesHyphenation;
    BOOL _allowsFontSubstitutionAffectingVerticalMetrics;
    long long _maximumNumberOfCachedTextLayoutFragments;
    NSArray *_textSelections;
    NSTextParagraph *_textParagraphForEmptyDocument;
    struct { id x0; id x1; double x2; long long x3; BOOL x4; BOOL x5; BOOL x6; } *_activeEnumerationCache;
    BOOL _isProcessingRenderingAttributesMethod;
    BOOL _delegateWithTextSelectionNotification;
    struct { NSTextContainer *textContainer; NSTextRange *textRange; NSMapTable *layoutFragmentTable; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } usageBounds; layoutFragmentsHint **layoutFragments; layoutFragmentsCount **x0; unsigned long long x1; unsigned long long layoutFragmentsSize; unsigned long long layoutFragmentsGapIndex; BOOL layoutFragmentsValid; BOOL containerFilled; } _lastTextContainerEntry;
    struct { id x0; id x1; id x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; id *x4; id *x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; BOOL x9; BOOL x10; } *_textContainerEntries;
    struct { id x0; id x1; id x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; id *x4; id *x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; BOOL x9; BOOL x10; } *_textContainerEntriesAccessHint;
    unsigned long long _textContainerEntriesSize;
    unsigned long long _textContainerEntriesCount;
    id<NSTextLocation> _softInvalidationLocation;
}

@property (class, readonly) NSDictionary *linkRenderingAttributes;
@property (class, readonly) NSDictionary *linkRenderingAttributesForLabels;
@property (class, readonly) BOOL supportsSecureCoding;

@property (copy) id /* block */ isSelectionOverridableColor;
@property (readonly) BOOL lastContainerFilled;
@property (readonly) long long maximumNumberOfLinesForLastContainer;
@property (readonly) NSTextLineFragment *_extraTextLineFragment;
@property (retain) NSTextContainer *templateTextContainer;
@property (weak) id<NSTextLayoutManagerDelegate> delegate;
@property BOOL usesFontLeading;
@property BOOL limitsLayoutForSuspiciousContents;
@property BOOL usesHyphenation;
@property (readonly, weak) NSTextContentManager *textContentManager;
@property (retain) NSTextContainer *textContainer;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } usageBoundsForTextContainer;
@property (readonly) NSTextViewportLayoutController *textViewportLayoutController;
@property (retain) NSOperationQueue *layoutQueue;
@property (retain) NSArray *textSelections;
@property (retain) NSTextSelectionNavigation *textSelectionNavigation;
@property (copy) id /* block */ renderingAttributesValidator;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) NSTextRange *documentRange;

+ (BOOL)_throwsOnAssertionError;
+ (long long)maximumNumberOfSeedElements;
+ (id)linkRenderingAttributes;
+ (id)linkRenderingAttributesForLabels;
+ (BOOL)shouldBeUsedForNSTextView;
+ (Class)viewportLayoutControllerClass;
+ (void)_setThrowsOnAssertionError:(BOOL)a0;
+ (long long)maximumNumberOfCachedTextLayoutFragments;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)a0;
+ (BOOL)usesHyphenation;
+ (void)_setValidatesInternalCaches:(BOOL)a0;
+ (id)validRenderingAttributes;
+ (BOOL)_validatesInternalCaches;
+ (Class)companionLayoutManagerClass;

- (void)setApplicationFrameworkContext:(long long)a0;
- (id)delegate;
- (BOOL)usesFontLeading;
- (void)replaceCharactersInRange:(id)a0 withAttributedString:(id)a1;
- (void)synchronize;
- (void)encodeWithCoder:(id)a0;
- (void)setUsesFontLeading:(BOOL)a0;
- (id)textContentManager;
- (void)replaceContentsInRange:(id)a0 withTextElements:(id)a1;
- (void)_commonInit;
- (void)enumerateRenderingAttributesFromLocation:(id)a0 reverse:(BOOL)a1 usingBlock:(id /* block */)a2;
- (id)baseLocation;
- (void)enumerateViewportElementsFromLocation:(id)a0 options:(long long)a1 usingBlock:(id /* block */)a2;
- (void)ensureLayoutForRange:(id)a0;
- (id)initWithCoder:(id)a0;
- (long long)offsetFromLocation:(id)a0 toLocation:(id)a1;
- (id)textSelectionNavigation;
- (long long)applicationFrameworkContext;
- (id)locationFromLocation:(id)a0 withOffset:(long long)a1;
- (void)enumerateSubstringsFromLocation:(id)a0 options:(unsigned long long)a1 usingBlock:(id /* block */)a2;
- (id)textContainers;
- (void)removeRenderingAttribute:(id)a0 forTextRange:(id)a1;
- (void)setRenderingAttributes:(id)a0 forTextRange:(id)a1;
- (void)addRenderingAttribute:(id)a0 value:(id)a1 forTextRange:(id)a2;
- (void)setDelegate:(id)a0;
- (BOOL)limitsLayoutForSuspiciousContents;
- (void)dealloc;
- (long long)maximumNumberOfCachedTextLayoutFragments;
- (BOOL)allowsFontSubstitutionAffectingVerticalMetrics;
- (void)invalidateRenderingAttributesForTextRange:(id)a0;
- (void)setLimitsLayoutForSuspiciousContents:(BOOL)a0;
- (BOOL)usesHyphenation;
- (void)setAllowsFontSubstitutionAffectingVerticalMetrics:(BOOL)a0;
- (void)setUsesDefaultHyphenation:(BOOL)a0;
- (BOOL)usesDefaultHyphenation;
- (id)init;
- (void)invalidateLayoutForRange:(id)a0;
- (id)textContainerForLocation:(id)a0;
- (BOOL)isCountableDataSource;
- (void)setTextContentManager:(id)a0;
- (void).cxx_destruct;
- (id)documentRange;
- (long long)baseWritingDirectionAtLocation:(id)a0;
- (void)addTemporaryAttribute:(id)a0 value:(id)a1 forTextRange:(id)a2;
- (void)ensureLayoutForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)enumerateTemporaryAttributesFromLocation:(id)a0 reverse:(BOOL)a1 usingBlock:(id /* block */)a2;
- (id)enumerateTextLayoutFragmentsFromLocation:(id)a0 options:(unsigned long long)a1 usingBlock:(id /* block */)a2;
- (void)enumerateTextSegmentsInRange:(id)a0 type:(long long)a1 options:(unsigned long long)a2 usingBlock:(id /* block */)a3;
- (id)rangeForTextContainerAtIndex:(long long)a0;
- (void)removeTemporaryAttribute:(id)a0 forTextRange:(id)a1;
- (void)setTextSelections:(id)a0;
- (void)setViewProvider:(id)a0 forTextAttachment:(id)a1 location:(id)a2;
- (void)textContainerChangedGeometry:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })usageBoundsForLastTextContainer;
- (void)_addTextContainer:(id)a0;
- (void)_addTextContainerFromTemplate:(id)a0;
- (void)_configureCoreTypesetter:(id)a0 forTextParagraph:(id)a1 textContainer:(id)a2;
- (id)_copyTextLineFragmentRangeForPoint:(struct CGPoint { double x0; double x1; })a0 inContainerAtLocation:(id)a1 pointPlacement:(out unsigned long long *)a2;
- (id)_currentTextLayoutFragmentEnumerated;
- (id)_estimatedTextLocationForVerticalOffset:(double)a0 originLocation:(id)a1 originOffset:(double)a2;
- (id)_estimatedTextLocationForVerticalOffset:(double)a0 originLocation:(id)a1 originOffset:(double)a2 deltaFromOffset:(out double *)a3;
- (double)_estimatedVerticalSizeForTextRange:(id)a0 adjustedTextRange:(out id *)a1;
- (long long)_fallbackWritingDirection;
- (void)_fillLayoutToLocation:(id)a0 enumerationCache:(struct { id x0; id x1; double x2; long long x3; BOOL x4; BOOL x5; BOOL x6; } *)a1;
- (id)_fillSoftInvalidationToLocation:(id)a0 verticalOffset:(double)a1;
- (void)_fixSelectionAfterChangeInCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 changeInLength:(long long)a1;
- (BOOL)_hasLayoutForLocation:(id)a0;
- (void)_invalidateTextParagraphForEmptyDocument;
- (long long)_numberOfLinesToCurrentlyEnumeratedTextLayoutFragment;
- (void)_prepareAttributedString:(id)a0 forTextLayoutFragment:(id)a1;
- (void)_removeTextContainer;
- (void)_removeTextContainersToCondition:(id /* block */)a0;
- (id)_selectionAndMarkedTextAttributesForLocation:(id)a0 inTextRange:(id)a1 effectiveTextRange:(out id *)a2;
- (BOOL)_shouldDrawTextCorrectionMarkerWithType:(long long)a0 inRange:(id)a1;
- (id)_textLayoutFragmentAtLocation:(id)a0;
- (id)_textLineFragmentAtLocation:(id)a0 textLayoutFragment:(out id *)a1 rangeDelta:(out long long *)a2;
- (id)_textParagraphForEmptyDocument;
- (id)_textRangeForDoubleClickAtLocation:(id)a0;
- (id)_textSelectionsFromTextView;
- (id)_textViewRespondingToSelector:(SEL)a0;
- (BOOL)_validateTextContainerEntries;
- (id)_viewProviderForTextAttachment:(id)a0 parentView:(id)a1 location:(id)a2 textContainer:(id)a3;
- (id)adjustedTextSelectionsForEditingContextFromTextSelections:(id)a0;
- (id)companionLayoutManager;
- (void)enumerateCaretOffsetsInLineFragmentAtLocation:(id)a0 usingBlock:(id /* block */)a1;
- (void)enumerateContainerBoundariesFromLocation:(id)a0 reverse:(BOOL)a1 usingBlock:(id /* block */)a2;
- (id)enumerateTextLayoutFragmentsInTextRange:(id)a0 options:(unsigned long long)a1 usingBlock:(id /* block */)a2;
- (void)finalizeAndPushLastTextContainer;
- (BOOL)flushTextLayoutFragmentsFromLocation:(id)a0 direction:(BOOL)a1;
- (void)invalidateTemporaryAttributesForTextRange:(id)a0;
- (id)lineFragmentRangeForPoint:(struct CGPoint { double x0; double x1; })a0 inContainerAtLocation:(id)a1;
- (unsigned long long)placementOfPoint:(struct CGPoint { double x0; double x1; })a0 inContainerAtLocation:(id)a1;
- (void)processLayoutInvalidationForTextRange:(id)a0 synchronizing:(BOOL)a1;
- (id)renderingAttributesForLink:(id)a0 atLocation:(id)a1;
- (id)renderingColorForDocumentColor:(id)a0 atLocation:(id)a1;
- (void)replaceCharactersInRange:(id)a0 withElements:(id)a1;
- (void)replaceContentsInRange:(id)a0 withAttributedString:(id)a1;
- (void)replaceTextContentManager:(id)a0;
- (void)setMaximumNumberOfCachedTextLayoutFragments:(long long)a0;
- (void)setTemporaryAttributes:(id)a0 forTextRange:(id)a1;
- (void)setTextSelectionNavigation:(id)a0;
- (void)setUsesHyphenation:(BOOL)a0;
- (id)temporaryAttributesTable;
- (id)textLayoutFragmentForLocation:(id)a0;
- (id)textLayoutFragmentForPosition:(struct CGPoint { double x0; double x1; })a0;
- (id)textLayoutFragmentForPosition:(struct CGPoint { double x0; double x1; })a0 inTextContainerAtIndex:(long long)a1;
- (id)textLayoutFragmentForPosition:(struct CGPoint { double x0; double x1; })a0 inTextContainerAtIndex:(long long)a1 avoidsAdditionalLayout:(BOOL)a2;
- (long long)textLayoutOrientationAtLocation:(id)a0;
- (id)textRangeForSelectionGranularity:(long long)a0 enclosingLocation:(id)a1;
- (id)textSelections;
- (void)updateLayoutWithTextLayoutFragment:(id)a0;
- (void)updateLayoutWithTextLayoutFragment:(id)a0 addition:(BOOL)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })usageBoundsInTextContainerAtIndex:(long long)a0;
- (BOOL)usesContiguousLayout;
- (BOOL)usesContiguousLayoutForEnumeration;
- (id)viewProviderForTextAttachment:(id)a0 location:(id)a1;
- (id)viewportLayoutController;

@end
