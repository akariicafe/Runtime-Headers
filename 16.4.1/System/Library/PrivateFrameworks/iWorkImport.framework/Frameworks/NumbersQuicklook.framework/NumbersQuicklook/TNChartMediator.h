@class TSCECalculationEngine, NSString, TNChartFormulaStorage, NSCondition, TSUIntToIntDictionary, NSDictionary, TNMutableChartFormulaStorage;

@interface TNChartMediator : TSCHChartMediator <TSCECalculationEngineRegistration, TSCEFormulaOwning> {
    TNChartFormulaStorage *_cleanFormulaStorage;
    struct unordered_set<TSUCellCoord, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<TSUCellCoord>> { struct __hash_table<TSUCellCoord, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<TSUCellCoord>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *>, std::allocator<std::__hash_node<TSUCellCoord, void *>>> { struct __hash_node_base<std::__hash_node<TSUCellCoord, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::hash<TSUCellCoord>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::equal_to<TSUCellCoord>> { float __value_; } __p3_; } __table_; } _formulasToRecalculate;
    int _scatterFormat;
    BOOL _isRegisteredWithCalcEngine;
    BOOL _editingHasIsPhantomOverride;
    BOOL _editingIsPhantomOverride;
    TNChartFormulaStorage *_editingStorageOverride;
    TNMutableChartFormulaStorage *_editingAccumulatedFormulas;
    TNMutableChartFormulaStorage *_editingActiveFormulas;
    NSCondition *_importUpgradeCondition;
    BOOL _shouldFixAreaFormula;
    TSUIntToIntDictionary *_formulaIndexToGridIndex;
    NSDictionary *_tableUidToHeaderRowRangesInPrecedents;
    BOOL _shouldResetFormulas;
}

@property (readonly, nonatomic) TNChartFormulaStorage *formulaStorage;
@property (retain) TNChartFormulaStorage *rawFormulaStorage;
@property (readonly, nonatomic) struct TSKUIDStruct { unsigned long long _lower; unsigned long long _upper; } entityUID;
@property (readonly, nonatomic) int scatterFormat;
@property (readonly, nonatomic) TSCECalculationEngine *calculationEngine;
@property (readonly, nonatomic) int direction;
@property (readonly, nonatomic) BOOL labelFormulasAreAllStatic;
@property (readonly, nonatomic) BOOL seriesLabelFormulasAreAllStatic;
@property (readonly, nonatomic) BOOL categoryLabelFormulasAreAllStatic;
@property (nonatomic) BOOL isEditing;
@property (readonly, nonatomic) BOOL hasBlittedSinceConditionVarSet;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)defaultErrorBarFormulaWrapper;
+ (id)propertiesThatInvalidateMediator;

- (id).cxx_construct;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void).cxx_destruct;
- (BOOL)isPhantom;
- (unsigned long long)referenceType;
- (long long)evaluationMode;
- (void)wasAddedToDocumentRoot:(id)a0 dolcContext:(id)a1;
- (void)willBeAddedToDocumentRoot:(id)a0 dolcContext:(id)a1;
- (void)willBeRemovedFromDocumentRoot:(id)a0;
- (void)saveToArchive:(void *)a0 archiver:(id)a1;
- (struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; })formulaOwnerUID;
- (void)p_disconnectLabelsInMap:(id)a0 ofType:(unsigned long long)a1;
- (id)seriesDimensionForFormulaIndex:(unsigned long long)a0;
- (unsigned long long)formulaIndexForSeriesDimension:(id)a0;
- (id)p_formulaWrapperFromTSTFormula:(id)a0;
- (void)repairMissingSeriesLabelsInMap:(id)a0;
- (void)amendRewriteSpec:(id)a0 withPostCellRefs:(const void *)a1 calcEngine:(id)a2;
- (id)categoryLabelFormulas;
- (void)clearEditingIsPhantomOverride;
- (void)clearFormulasToRecalculate;
- (id)columnFormulas;
- (id)commandSetCategoryName:(id)a0 forCategoryIndex:(unsigned long long)a1;
- (id)commandSetSeriesName:(id)a0 forSeriesIndex:(unsigned long long)a1;
- (id)commandToChangeCategoryLabelFormulas:(id)a0;
- (id)commandToChangeLabelFormulas:(id)a0 forType:(unsigned long long)a1 modelUpdateDataType:(int)a2;
- (id)commandToSetChartGridDirection:(int)a0 documentRoot:(id)a1;
- (id)commandToSetErrorBarCustomFormula:(id)a0 seriesIndex:(unsigned long long)a1 dataType:(int)a2;
- (id)commandToSetNewSeriesIndex:(unsigned long long)a0 forSeriesIndex:(unsigned long long)a1;
- (id)commandToSetSeriesDataFormula:(id)a0 seriesDimension:(id)a1;
- (id)commandToSetSeriesNameFormula:(id)a0 seriesIndex:(unsigned long long)a1;
- (void)copyValuesIntoChartModelOutOfBandUsingCalcEngine:(id)a0 formulaMap:(id)a1;
- (id)customNegFormulas;
- (id)customNegScatterXFormulas;
- (id)customPosFormulas;
- (id)customPosScatterXFormulas;
- (id)dataFormatterForAxis:(id)a0 documentRoot:(id)a1;
- (id)dataFormatterForSeries:(id)a0 index:(unsigned long long)a1 axisType:(int)a2 documentRoot:(id)a3;
- (id)dataFormatterFromFormat:(id)a0 in:(id)a1;
- (id)dataFormulas;
- (id)descriptorForChartSeries:(long long)a0 inTable:(id)a1;
- (id)descriptorForSummaryChart;
- (id)errorBarCustomFormulaForSeriesIndex:(unsigned long long)a0 dataType:(int)a1;
- (struct TSCERecalculationState { unsigned char x0; })evaluateFormulaAt:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a0 withCalcEngine:(id)a1 recalcOptions:(struct TSCERecalculationState { unsigned char x0; })a2;
- (struct vector<TSCERangeRef, std::allocator<TSCERangeRef>> { struct TSCERangeRef *x0; struct TSCERangeRef *x1; struct __compressed_pair<TSCERangeRef *, std::allocator<TSCERangeRef>> { struct TSCERangeRef *x0; } x2; })expandSingleRangeForLabels:(const struct TSCERangeRef { struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a0 formulaType:(unsigned long long)a1;
- (struct vector<TSCERangeRef, std::allocator<TSCERangeRef>> { struct TSCERangeRef *x0; struct TSCERangeRef *x1; struct __compressed_pair<TSCERangeRef *, std::allocator<TSCERangeRef>> { struct TSCERangeRef *x0; } x2; })expandSingleTractForProposedCategoryLabels:(id)a0 byRow:(BOOL)a1;
- (id)formulaOwner;
- (id)formulaStorageFromCatTable:(id)a0 selection:(id)a1 direction:(int)a2;
- (id)formulaStorageFromPivotTable:(id)a0;
- (id)formulaStorageFromPivotTable:(id)a0 cellRect:(struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; } *)a1;
- (id)formulaStorageFromPivotTable:(id)a0 cellRect:(struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; } *)a1 aggregateIndex:(unsigned short)a2 plotDirection:(int)a3 groupLabelOptions:(unsigned char)a4;
- (id)formulaStorageFromPivotTable:(id)a0 cellRegion:(id)a1;
- (id)formulaStorageFromPivotTable:(id)a0 rowLevel:(unsigned char)a1 columnLevel:(unsigned char)a2 aggregateIndex:(unsigned short)a3 plotDirection:(int)a4;
- (id)formulaStorageFromPivotTable:(id)a0 rowLevel:(unsigned char)a1 columnLevel:(unsigned char)a2 aggregateIndex:(unsigned short)a3 plotDirection:(int)a4 groupLabelOptions:(unsigned char)a5;
- (id)formulaStorageFromTable:(id)a0 selection:(id)a1 direction:(int)a2 scheme:(int)a3;
- (unsigned long long)formulaTypeFromDataType:(int)a0;
- (int)formulasDirection;
- (BOOL)hasCategoryReferences;
- (BOOL)hasTractReference;
- (id)hubFormulaPrecedentsWithCalcEngine:(id)a0 hostOwnerUID:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a1;
- (id)initFromArchive:(const void *)a0 unarchiver:(id)a1;
- (id)initWithChartInfo:(id)a0;
- (id)initWithChartInfo:(id)a0 withTable:(id)a1 direction:(int)a2;
- (id)initWithChartInfo:(id)a0 withTable:(id)a1 selection:(id)a2 direction:(int)a3;
- (id)initWithChartInfo:(id)a0 withTable:(id)a1 selection:(id)a2 direction:(int)a3 scheme:(int)a4;
- (BOOL)interestedInRewrite:(id)a0;
- (void)invalidateAndSynchronizeMediator;
- (void)invalidateForCalcEngine:(id)a0;
- (BOOL)labelFormulasAreAllStaticInFormulaStorage:(id)a0;
- (id)labelFormulasForType:(unsigned long long)a0;
- (unsigned long long)labelIndexForSeriesNameSeriesIndex:(unsigned long long)a0;
- (id)linkedResolver;
- (void)localizeFormulaLiteralsWithTemplateBundle:(id)a0 locale:(id)a1;
- (struct TSCERecalculationState { unsigned char x0; })multiEvaluateFormulasAt:(const void *)a0 withCalcEngine:(id)a1 recalcOptions:(struct TSCERecalculationState { unsigned char x0; })a2;
- (id)nonDefaultDataFormatterForSeries:(id)a0 index:(unsigned long long)a1 axisType:(int)a2 documentRoot:(id)a3;
- (id)nonDefaultDataFormatterForSummarySeries:(id)a0 index:(unsigned long long)a1 axisType:(int)a2 documentRoot:(id)a3;
- (id)objectToArchiveInDependencyTracker;
- (unsigned short)ownerKind;
- (struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; })ownerUID;
- (id)ownerUIDMapper;
- (id)p_chartFormulaStorageForEditingOverride;
- (id)p_commandToSetSeriesNameFormulaWrapper:(id)a0 seriesIndex:(unsigned long long)a1;
- (void)p_copyValuesIntoToChartModel:(id)a0 formulaMap:(id)a1;
- (void)p_detectAndRepairInsertedCategoryConditionFromPreviousState:(id)a0 andEditingState:(id)a1 rewriteSpec:(id)a2;
- (void)p_detectAndRepairInsertedSeriesConditionFromPreviousState:(id)a0 andEditingState:(id)a1 rewriteSpec:(id)a2;
- (BOOL)p_didHeaderRowRangesChangeForCalcEngine:(id)a0;
- (struct vector<TSCERangeRef, std::allocator<TSCERangeRef>> { struct TSCERangeRef *x0; struct TSCERangeRef *x1; struct __compressed_pair<TSCERangeRef *, std::allocator<TSCERangeRef>> { struct TSCERangeRef *x0; } x2; })p_expandSingleRangeForLabels:(const struct TSCERangeRef { struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a0 iterateOverRowsNotColumns:(BOOL)a1;
- (unsigned long long)p_formulaComponents:(id)a0;
- (unsigned long long)p_formulaComponentsInMap:(id)a0 ofType:(unsigned long long)a1;
- (void)p_hackSetCalcEngineLegacyGlobalID;
- (struct TSCERangeRef { struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; })p_headerRowRangeRefForTableInfo:(id)a0;
- (BOOL)p_isScatterOrBubble;
- (BOOL)p_isValidFormulaEditForScheme:(id)a0;
- (BOOL)p_labelsAreStaticInMap:(id)a0 ofType:(unsigned long long)a1;
- (void)p_logFormulaEditAnalytics;
- (id)p_newStaticNameForCategoryAvoidingExistingNames:(id)a0 runningCount:(unsigned long long *)a1;
- (unsigned long long)p_numberOfLabelsFromExpandedGeometricRangeRefsWithFormulas:(id)a0 formulaType:(unsigned long long)a1;
- (void)p_promoteSpanningCategorizedCategoryLabelsInMap:(id)a0;
- (void)p_registerAreaFormulaForMap:(id)a0 withCalcEngine:(id)a1;
- (void)p_registerFormulaeWithCalcEngine:(id)a0;
- (void)p_registerHubFormulaWithCalcEngine:(id)a0;
- (void)p_removeDeletedFormulas:(id)a0;
- (void)p_repairCategorizedCategoryLabelsInMap:(id)a0;
- (void)p_repairMissingCategoryLabelsInMap:(id)a0;
- (void)p_repairMissingStaticCategoryLabelsInMap:(id)a0;
- (void)p_repairMissingTabularCategoryLabelsIrregularInMap:(id)a0;
- (void)p_repairMissingTabularCategoryLabelsRegularInMap:(id)a0;
- (void)p_reregister:(BOOL)a0 withCalculationEngine:(id)a1;
- (void)p_signalImportUpgradeCondition;
- (BOOL)p_tableHasBaseCell:(struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; })a0 withCalcEngine:(id)a1;
- (BOOL)p_tableHasBaseRange:(struct TSCERangeRef { struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; })a0 withCalcEngine:(id)a1;
- (BOOL)p_tabularCategoryLabelsAppearRegularInMap:(id)a0;
- (void)p_transposeSeriesAndCategoryLabelsInMap:(id)a0;
- (id)p_tstFormulaFromForumulaWrapper:(id)a0;
- (void)p_unregisterAllFormulaeFromCalcEngine:(id)a0;
- (id)p_untitledLabelWithIndex:(unsigned long long)a0;
- (void)pauseCalculationEngine;
- (void)prepareRewriteSpec:(id)a0 withPreCellRefs:(const void *)a1 calcEngine:(id)a2;
- (id)referencedEntities;
- (BOOL)registerLast;
- (void)registerWithCalcEngineForDocumentLoad:(id)a0 ownerKind:(unsigned short)a1;
- (BOOL)repairBadRefsInFormulas:(id)a0;
- (void)repairMissingCategoryLabelsInMap:(id)a0;
- (void)repairMissingCategoryLabelsInMap:(id)a0 ignoringNonVisibleLabels:(BOOL)a1;
- (void)resetFormulasForCellRefs:(const void *)a0 calcEngine:(id)a1;
- (void)resumeCalculationEngine;
- (id)rowFormulas;
- (id)seriesDataFormulaForSeriesDimension:(id)a0;
- (id)seriesNameFormulaForSeriesIndex:(unsigned long long)a0;
- (void)setEditingIsPhantomOverride:(BOOL)a0;
- (void)setEditingStorageOverride:(id)a0;
- (void)setFormulaOwnerUID:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a0;
- (void)setFormulaStorage:(id)a0;
- (void)setFormulaStorage:(id)a0 doRegistration:(BOOL)a1;
- (void)setImportUpgradeCondition:(id)a0;
- (BOOL)shouldSkipHiddenData;
- (void)synchronizeModelFromFormulaStorage;
- (void)synchronizeModelFromFormulaStorage:(id)a0;
- (void)unregisterFromCalcEngine:(id)a0;
- (id)untitledLabelOfType:(unsigned long long)a0 formulaMap:(id)a1 existingLabels:(id)a2 runningIndex:(unsigned long long *)a3;
- (void)updateForTableIDHistoryWithCalcEngine:(id)a0;
- (void)writeResultsForCalcEngine:(id)a0;

@end
