@interface TSCECellTractRef : NSObject <NSCopying>

@property (nonatomic) BOOL spansAllColumns;
@property (nonatomic) BOOL spansAllRows;
@property (nonatomic) BOOL preserveRectangular;
@property (nonatomic) BOOL mixedColumnStartedWithPreserve;
@property (nonatomic) BOOL mixedRowStartedWithPreserve;
@property (nonatomic) struct TSCECellTractRefCore { struct TSUIndexSet { unsigned char _isEmpty : 1; unsigned char _hasSingleRange : 1; struct TSUIndexRange { long long _begin; long long _end; } _singleRange; struct *_multipleRanges; } _columns; struct TSUIndexSet { unsigned char _isEmpty : 1; unsigned char _hasSingleRange : 1; struct TSUIndexRange { long long _begin; long long _end; } _singleRange; struct *_multipleRanges; } _rows; struct TSKUIDStruct { unsigned long long _lower; unsigned long long _upper; } _tableUID; unsigned char _spanType; struct TSUPreserveFlags { unsigned char _flags; } _preserveFlags; BOOL _preserveRectangular; BOOL _mixedColumnStartedWithPreserve; BOOL _mixedRowStartedWithPreserve; } cppCellTractRef;
@property (nonatomic) struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } tableUID;
@property (nonatomic) struct TSUPreserveFlags { unsigned char x0; } preserveFlags;

+ (id)cellTractRefWithUidTractList:(id)a0 onTable:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a1 preserveFlags:(struct TSUPreserveFlags { unsigned char x0; })a2 rewriteContext:(struct TSCEFormulaRewriteContext { id x0; id x1; struct TSCEFormulaRewriteContextRecord { struct TSCEFormulaContainingCell { struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x0; struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } x1; BOOL x2; BOOL x3; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; struct TSUColumnRowOffset { int x0; int x1; } x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; } x2; } *)a3;

- (void)setColumns:(const struct TSUIndexSet { unsigned char x0 : 1; unsigned char x1 : 1; struct TSUIndexRange { long long x0; long long x1; } x2; struct *x3; } *)a0;
- (const struct TSUIndexSet { unsigned char x0 : 1; unsigned char x1 : 1; struct TSUIndexRange { long long x0; long long x1; } x2; struct *x3; } *)rows;
- (const struct TSUIndexSet { unsigned char x0 : 1; unsigned char x1 : 1; struct TSUIndexRange { long long x0; long long x1; } x2; struct *x3; } *)columns;
- (void)setRows:(const struct TSUIndexSet { unsigned char x0 : 1; unsigned char x1 : 1; struct TSUIndexRange { long long x0; long long x1; } x2; struct *x3; } *)a0;
- (id).cxx_construct;
- (struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })bottomRight;
- (void)addColumn:(unsigned short)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (BOOL)isValid;
- (struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })topLeft;
- (id)debugDescription;
- (BOOL)isEqual:(id)a0;
- (unsigned long long)hash;
- (id)description;
- (void).cxx_destruct;
- (void)setBottomRight:(const struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } *)a0;
- (void)setTopLeft:(const struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } *)a0;
- (void)addColumns:(const struct TSUIndexSet { unsigned char x0 : 1; unsigned char x1 : 1; struct TSUIndexRange { long long x0; long long x1; } x2; struct *x3; } *)a0;
- (void)addRow:(unsigned int)a0;
- (BOOL)transpose;
- (unsigned int)numRows;
- (BOOL)isSingleCell;
- (void)addRows:(const struct TSUIndexSet { unsigned char x0 : 1; unsigned char x1 : 1; struct TSUIndexRange { long long x0; long long x1; } x2; struct *x3; } *)a0;
- (void)addColumnRange:(const struct TSUIndexRange { long long x0; long long x1; } *)a0;
- (void)removeRowRange:(const struct TSUIndexRange { long long x0; long long x1; } *)a0;
- (void)addRowRange:(const struct TSUIndexRange { long long x0; long long x1; } *)a0;
- (struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; })boundingRange;
- (struct TSCERangeRef { struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; })boundingRangeRef;
- (void)foreachCellRect:(id /* block */)a0;
- (id)initWithColumns:(const struct TSUIndexSet { unsigned char x0 : 1; unsigned char x1 : 1; struct TSUIndexRange { long long x0; long long x1; } x2; struct *x3; } *)a0 rows:(const struct TSUIndexSet { unsigned char x0 : 1; unsigned char x1 : 1; struct TSUIndexRange { long long x0; long long x1; } x2; struct *x3; } *)a1 tableUID:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a2;
- (id)initWithCppCellTractRef:(const struct TSCECellTractRefCore { struct TSUIndexSet { unsigned char x0 : 1; unsigned char x1 : 1; struct TSUIndexRange { long long x0; long long x1; } x2; struct *x3; } x0; struct TSUIndexSet { unsigned char x0 : 1; unsigned char x1 : 1; struct TSUIndexRange { long long x0; long long x1; } x2; struct *x3; } x1; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x2; unsigned char x3; struct TSUPreserveFlags { unsigned char x0; } x4; BOOL x5; BOOL x6; BOOL x7; } *)a0;
- (id)initWithRangeRef:(const struct TSCERangeRef { struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a0;
- (BOOL)isRectangularRange;
- (unsigned int)numColumns;
- (void)removeColumnRange:(const struct TSUIndexRange { long long x0; long long x1; } *)a0;
- (BOOL)edgeExpandTractUsingIncludeUidTract:(id)a0 resolver:(id)a1 forRows:(BOOL)a2 isInverse:(BOOL)a3;
- (id)edgeExpandUsingIndexes:(id)a0 forRows:(BOOL)a1;
- (void)adjustIndexesBy:(const struct TSUColumnRowOffset { int x0; int x1; } *)a0;
- (id)collapseOutColumnIndexes:(id)a0;
- (id)collapseOutRowIndexes:(id)a0;
- (struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })coordAtColumnOffset:(unsigned int)a0 rowOffset:(unsigned int)a1;
- (BOOL)edgeExpandUsingMovingUids:(id)a0 tractList:(id)a1;
- (id)expandUsingIndexes:(id)a0 forRows:(BOOL)a1;
- (id)fillInColumnGapsUsingIndexes:(id)a0;
- (id)fillInRowGapsUsingIndexes:(id)a0;
- (void)foreachAnyRef:(id /* block */)a0;
- (void)foreachRangeRef:(id /* block */)a0;
- (BOOL)hasTableUID;
- (id)initWithCellRefVector:(const void *)a0;
- (id)initWithTopLeft:(const struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } *)a0 bottomRight:(const struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } *)a1;
- (id)initWithTopLeft:(const struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } *)a0 bottomRight:(const struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } *)a1 tableUID:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a2;
- (id)initWithUidTract:(const void *)a0 calcEngine:(id)a1 tableUID:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a2;
- (BOOL)insertColumnGapsAtIndexes:(id)a0;
- (BOOL)insertRowGapsAtIndexes:(id)a0;
- (void)intersectWithCellRect:(const struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; } *)a0;
- (void)intersectWithCellRectIgnoringSpanning:(const struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; } *)a0;
- (BOOL)isPreservedColumn:(unsigned short)a0 preferStart:(BOOL)a1;
- (BOOL)isPreservedRow:(unsigned int)a0 preferStart:(BOOL)a1;
- (BOOL)isSingleCellOrSpanningRange;
- (struct TSUPreserveFlags { unsigned char x0; })preserveFlagsForCoord:(const struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } *)a0 preferStart:(BOOL)a1;
- (void)removeColumns:(const struct TSUIndexSet { unsigned char x0 : 1; unsigned char x1 : 1; struct TSUIndexRange { long long x0; long long x1; } x2; struct *x3; } *)a0;
- (void)removeRows:(const struct TSUIndexSet { unsigned char x0 : 1; unsigned char x1 : 1; struct TSUIndexRange { long long x0; long long x1; } x2; struct *x3; } *)a0;
- (void)setPreserveFlagsOnSubrange:(struct TSCERangeRef { struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } x0; struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } x1; } *)a0;
- (struct TSKUIDStructTract { struct TSKUIDStructVectorTemplate<TSKUIDStruct> { struct TSKUIDStruct *x0; struct TSKUIDStruct *x1; struct __compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>> { struct TSKUIDStruct *x0; } x2; } x0; struct TSKUIDStructVectorTemplate<TSKUIDStruct> { struct TSKUIDStruct *x0; struct TSKUIDStruct *x1; struct __compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>> { struct TSKUIDStruct *x0; } x2; } x1; })uidTractWithCalcEngine:(id)a0 hostTableUID:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a1;

@end
