@class TSPObjectContext, TSPObjectContainer, TSPPackageMetadata, TSPArchiverManager, NSMutableArray, NSError, NSString, NSMutableSet, TSPDocumentRevision, TSPPersistedDataReferenceMap, TSPObjectReferenceMap, NSObject, NSSet, TSPComponentExternalReferenceMap, TSPObject, TSPDataAttributesSnapshot, TSPSupportPackageWriteCoordinator, TSPPersistedObjectUUIDMap, NSURL, NSMapTable, NSHashTable;
@protocol OS_dispatch_queue, OS_dispatch_group;

@interface TSPPackageWriteCoordinator : NSObject <TSPArchiverManagerDelegate, TSPComponentWriterDelegate, TSPDataArchiver, TSPDataReferenceMapPersistedObjectProvider, TSPExternalReferenceDelegate, TSPPersistedObjectUUIDMapDelegate, TSPObjectModifyDelegate> {
    _Atomic BOOL _didWriteObjectContainer;
    TSPObjectContext *_context;
    unsigned char _packageIdentifier;
    TSPDocumentRevision *_documentRevision;
    unsigned long long _fileFormatVersion;
    unsigned long long _saveToken;
    long long _preferredPackageType;
    TSPObject *_metadataObject;
    TSPDataAttributesSnapshot *_dataAttributesSnapshot;
    TSPObjectReferenceMap *_objectReferenceMap;
    TSPArchiverManager *_archiverManager;
    NSObject<OS_dispatch_queue> *_completionQueue;
    NSObject<OS_dispatch_group> *_completionGroup;
    NSSet *_knownComponentLocators;
    struct IdentifierMap<TSP::ComponentPropertiesSnapshot> { struct __hash_table<std::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, std::__unordered_map_hasher<const long long, std::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, std::hash<long long>, std::equal_to<const long long>, true>, std::__unordered_map_equal<const long long, std::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, std::equal_to<const long long>, std::hash<long long>, true>, std::allocator<std::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<const long long, std::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, std::hash<long long>, std::equal_to<const long long>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<const long long, std::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, std::equal_to<const long long>, std::hash<long long>, true>> { float __value_; } __p3_; } __table_; } _componentPropertiesSnapshot;
    NSObject<OS_dispatch_queue> *_accessQueue;
    _Atomic unsigned long long _accessQueueSuspendCount;
    _Atomic void *_currentComponentWriterPointer;
    struct IdentifierMap<TSP::WrittenComponentInfo> { struct __hash_table<std::__hash_value_type<const long long, TSP::WrittenComponentInfo>, std::__unordered_map_hasher<const long long, std::__hash_value_type<const long long, TSP::WrittenComponentInfo>, std::hash<long long>, std::equal_to<const long long>, true>, std::__unordered_map_equal<const long long, std::__hash_value_type<const long long, TSP::WrittenComponentInfo>, std::equal_to<const long long>, std::hash<long long>, true>, std::allocator<std::__hash_value_type<const long long, TSP::WrittenComponentInfo>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<const long long, std::__hash_value_type<const long long, TSP::WrittenComponentInfo>, std::hash<long long>, std::equal_to<const long long>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<const long long, std::__hash_value_type<const long long, TSP::WrittenComponentInfo>, std::equal_to<const long long>, std::hash<long long>, true>> { float __value_; } __p3_; } __table_; } _writtenComponents;
    struct IdentifierMap<TSP::ComponentProperties> { struct __hash_table<std::__hash_value_type<const long long, TSP::ComponentProperties>, std::__unordered_map_hasher<const long long, std::__hash_value_type<const long long, TSP::ComponentProperties>, std::hash<long long>, std::equal_to<const long long>, true>, std::__unordered_map_equal<const long long, std::__hash_value_type<const long long, TSP::ComponentProperties>, std::equal_to<const long long>, std::hash<long long>, true>, std::allocator<std::__hash_value_type<const long long, TSP::ComponentProperties>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::ComponentProperties>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::ComponentProperties>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::ComponentProperties>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::ComponentProperties>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::ComponentProperties>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::ComponentProperties>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::ComponentProperties>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<const long long, TSP::ComponentProperties>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::ComponentProperties>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<const long long, std::__hash_value_type<const long long, TSP::ComponentProperties>, std::hash<long long>, std::equal_to<const long long>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<const long long, std::__hash_value_type<const long long, TSP::ComponentProperties>, std::equal_to<const long long>, std::hash<long long>, true>> { float __value_; } __p3_; } __table_; } _componentProperties;
    struct map<unsigned int, std::map<long long, TSPComponent *>, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::map<long long, TSPComponent *>>>> { struct __tree<std::__value_type<unsigned int, std::map<long long, TSPComponent *>>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, std::map<long long, TSPComponent *>>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, std::map<long long, TSPComponent *>>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, std::map<long long, TSPComponent *>>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, std::map<long long, TSPComponent *>>, std::less<unsigned int>, true>> { unsigned long long __value_; } __pair3_; } __tree_; } _remainingComponentsQueue;
    NSMutableSet *_packageLocatorSet;
    TSPObjectContainer *_objectContainer;
    long long _objectContainerIdentifier;
    TSPPersistedObjectUUIDMap *_persistedUUIDMap;
    TSPPersistedDataReferenceMap *_persistedDataReferenceMap;
    NSMapTable *_loadedObjects;
    _Atomic unsigned long long _wastefullyEnqueuedComponentCount;
    struct IdentifierMap<TSP::WrittenObjectInfo> { struct __hash_table<std::__hash_value_type<const long long, TSP::WrittenObjectInfo>, std::__unordered_map_hasher<const long long, std::__hash_value_type<const long long, TSP::WrittenObjectInfo>, std::hash<long long>, std::equal_to<const long long>, true>, std::__unordered_map_equal<const long long, std::__hash_value_type<const long long, TSP::WrittenObjectInfo>, std::equal_to<const long long>, std::hash<long long>, true>, std::allocator<std::__hash_value_type<const long long, TSP::WrittenObjectInfo>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<const long long, std::__hash_value_type<const long long, TSP::WrittenObjectInfo>, std::hash<long long>, std::equal_to<const long long>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<const long long, std::__hash_value_type<const long long, TSP::WrittenObjectInfo>, std::equal_to<const long long>, std::hash<long long>, true>> { float __value_; } __p3_; } __table_; } _writtenObjects;
    struct IdentifierMap<long long> { struct __hash_table<std::__hash_value_type<const long long, long long>, std::__unordered_map_hasher<const long long, std::__hash_value_type<const long long, long long>, std::hash<long long>, std::equal_to<const long long>, true>, std::__unordered_map_equal<const long long, std::__hash_value_type<const long long, long long>, std::equal_to<const long long>, std::hash<long long>, true>, std::allocator<std::__hash_value_type<const long long, long long>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, long long>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, long long>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, long long>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, long long>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, long long>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, long long>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, long long>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<const long long, long long>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<const long long, long long>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<const long long, std::__hash_value_type<const long long, long long>, std::hash<long long>, std::equal_to<const long long>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<const long long, std::__hash_value_type<const long long, long long>, std::equal_to<const long long>, std::hash<long long>, true>> { float __value_; } __p3_; } __table_; } _delayedObjects;
    struct queue<TSP::WrittenObjectInfo, std::deque<TSP::WrittenObjectInfo>> { struct deque<TSP::WrittenObjectInfo, std::allocator<TSP::WrittenObjectInfo>> { struct __split_buffer<TSP::WrittenObjectInfo *, std::allocator<TSP::WrittenObjectInfo *>> { struct WrittenObjectInfo **__first_; struct WrittenObjectInfo **__begin_; struct WrittenObjectInfo **__end_; struct __compressed_pair<TSP::WrittenObjectInfo **, std::allocator<TSP::WrittenObjectInfo *>> { struct WrittenObjectInfo **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::allocator<TSP::WrittenObjectInfo>> { unsigned long long __value_; } __size_; } c; } _writtenLazyReferences;
    NSObject<OS_dispatch_queue> *_modifyObjectQueue;
    NSHashTable *_modifiedObjectsDuringWrite;
    BOOL _captureSnapshots;
    NSObject<OS_dispatch_queue> *_externalLazyReferencesQueue;
    TSPComponentExternalReferenceMap *_externalLazyReferencesMap;
    NSObject<OS_dispatch_queue> *_externalReferenceQueue;
    NSMutableArray *_externalReferenceBlocks;
    NSMutableSet *_duplicateUUIDs;
    NSObject<OS_dispatch_queue> *_metadataQueue;
    unsigned long long _readVersion;
    unsigned long long _writeVersion;
    NSMutableSet *_featureIdentifiers;
    NSHashTable *_referencedDatas;
    NSMutableArray *_dataFinalizeHandlers;
    _Atomic BOOL _writeSuccess;
    _Atomic BOOL _didAttemptRecoveryByDirtyingAllComponents;
    _Atomic BOOL _isRecoverableError;
    _Atomic BOOL _isCancelled;
    _Atomic BOOL _didWriteRootObject;
    _Atomic BOOL _didWriteMetadata;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _packageWriterErrorLock;
    NSError *_packageWriterError;
    NSURL *_documentTargetURL;
    TSPSupportPackageWriteCoordinator *_supportPackageWriteCoordinator;
    struct IdentifierMap<bool> { struct __hash_table<std::__hash_value_type<const long long, bool>, std::__unordered_map_hasher<const long long, std::__hash_value_type<const long long, bool>, std::hash<long long>, std::equal_to<const long long>, true>, std::__unordered_map_equal<const long long, std::__hash_value_type<const long long, bool>, std::equal_to<const long long>, std::hash<long long>, true>, std::allocator<std::__hash_value_type<const long long, bool>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, bool>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, bool>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, bool>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, bool>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, bool>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, bool>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, bool>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<const long long, bool>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<const long long, bool>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<const long long, std::__hash_value_type<const long long, bool>, std::hash<long long>, std::equal_to<const long long>, true>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<const long long, std::__hash_value_type<const long long, bool>, std::equal_to<const long long>, std::hash<long long>, true>> { float __value_; } __p3_; } __table_; } _validatedExternalReferences;
}

@property (readonly, nonatomic) TSPPackageMetadata *packageMetadata;
@property (readonly, nonatomic) TSPObjectContainer *objectContainer;
@property (readonly, nonatomic) NSSet *featureIdentifiers;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSURL *relativeURLForExternalData;

- (id).cxx_construct;
- (id)objectForIdentifier:(long long)a0;
- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (BOOL)didWriteComponentWithIdentifier:(long long)a0 wasCopied:(BOOL *)a1 componentReadVersion:(unsigned long long *)a2;
- (void)addDataFinalizeHandlerForSuccessfulSave:(id /* block */)a0;
- (void)addDelayedObject:(id)a0 forComponentRootObject:(id)a1 claimingComponent:(id)a2 isDelayedObjectReferencedByObjectContainer:(BOOL)a3 completion:(id /* block */)a4;
- (void)addDelayedObjectToObjectContainer:(id)a0 referencingComponent:(id)a1 forWastefullyEnqueuedComponent:(id)a2 componentRootObject:(id)a3;
- (void)archiveComponent:(id)a0 locator:(id)a1 compressionAlgorithm:(long long)a2 storeOutsideObjectArchive:(BOOL)a3 rootObject:(id)a4 withPackageWriter:(id)a5;
- (void)attemptDocumentRecovery;
- (void)calculateExternalReferences;
- (id)componentForObjectIdentifier:(long long)a0 objectOrNil:(id)a1 componentReadVersion:(unsigned long long *)a2;
- (long long)componentIdentifierForObjectIdentifier:(long long)a0 objectOrNil:(id)a1 objectUUIDOrNil:(id)a2 outComponentIsVersioned:(BOOL *)a3;
- (void)componentWriter:(id)a0 canSkipArchivingStronglyReferencedObject:(id)a1 fromComponentRootObject:(id)a2 completion:(id /* block */)a3;
- (id)componentWriter:(id)a0 locatorForClaimingComponent:(id)a1;
- (BOOL)componentWriter:(id)a0 object:(id)a1 belongsToCopiedComponent:(id)a2;
- (id)componentWriter:(id)a0 wantsComponentOfObject:(id)a1 componentReadVersion:(unsigned long long *)a2;
- (id)componentWriter:(id)a0 wantsExplicitComponentRootObjectForObject:(id)a1 archiverOrNil:(id)a2 claimingComponent:(id)a3 hasArchiverAccessLock:(BOOL)a4;
- (void)componentWriterNeedsDocumentRecovery:(id)a0;
- (id)componentWriterWantsDelayedObjects:(id)a0;
- (void)copyComponent:(id)a0 locator:(id)a1 preferredLocator:(id)a2 rootObject:(id)a3 packageWriter:(id)a4;
- (id)createPackageMetadataWritingDatasWithPackageWriter:(id)a0 saveOperationState:(id)a1 error:(id *)a2;
- (void)didFinishWritingWithSupportPackageWriteCoordinator:(id)a0;
- (void)didReferenceData:(id)a0;
- (BOOL)didWriteData:(id)a0;
- (BOOL)didWriteObject:(id)a0 claimingComponent:(id *)a1 componentReadVersion:(unsigned long long *)a2;
- (BOOL)didWriteObjectWithIdentifier:(long long)a0;
- (BOOL)enqueueComponent:(id)a0 rootObjectOrNil:(id)a1 forceArchive:(BOOL)a2 isWastefullyEnqueueing:(BOOL)a3 isWeakReference:(BOOL)a4 referencingComponent:(id)a5 referencedObject:(id)a6 hasArchiverAccessLock:(BOOL)a7;
- (void)enqueueReferencedObject:(id)a0 referencingComponent:(id)a1 isWeakReference:(BOOL)a2 forWastefullyEnqueuedComponent:(id)a3 componentRootObject:(id)a4 componentInfo:(struct WrittenComponentInfo { id x0; id x1; BOOL x2; BOOL x3; id x4; BOOL x5; BOOL x6; BOOL x7; id x8; id x9; BOOL x10; unsigned char x11; long long x12; unsigned long long x13; unsigned long long x14; unsigned long long x15; unsigned long long x16; BOOL x17; id x18; id x19; id x20; id x21; id x22; id x23; id x24; id x25; } *)a5 hasArchiverAccessLock:(BOOL)a6;
- (void)enqueueRootObject:(id)a0 forceArchive:(BOOL)a1 isAddingDelayedObjectReferencedByObjectContainer:(BOOL)a2 completion:(id /* block */)a3;
- (void)enqueueRootObjectImpl:(id)a0 forceArchive:(BOOL)a1 isAddingDelayedObjectReferencedByObjectContainer:(BOOL)a2 completion:(id /* block */)a3;
- (void)enumerateWrittenObjectsWithBlock:(id /* block */)a0;
- (id)explicitComponentRootObjectForObject:(id)a0;
- (id)explicitComponentRootObjectForObject:(id)a0 archiverOrNil:(id)a1 claimingComponent:(id)a2 newClaimingComponent:(id)a3 newClaimingRootObject:(id)a4 willEnqueueDelayedObject:(BOOL)a5 hasArchiverAccessLock:(BOOL)a6;
- (void)forceArchivingComponentIdentifier:(long long)a0;
- (id)initWithContext:(id)a0 archiverClass:(Class)a1 archiverFlags:(char)a2 documentRevision:(id)a3 saveToken:(unsigned long long)a4 packageIdentifier:(unsigned char)a5 fileFormatVersion:(unsigned long long)a6 preferredPackageType:(long long)a7 metadataObject:(id)a8;
- (id)initWithContext:(id)a0 archiverClass:(Class)a1 archiverFlags:(char)a2 documentRevision:(id)a3 saveToken:(unsigned long long)a4 packageIdentifier:(unsigned char)a5 fileFormatVersion:(unsigned long long)a6 preferredPackageType:(long long)a7 metadataObject:(id)a8 packageWriteCoordinator:(id)a9 captureSnapshots:(BOOL)a10;
- (BOOL)isComponentExternalWithIdentifier:(long long)a0 wasCopied:(BOOL *)a1 componentReadVersion:(unsigned long long *)a2;
- (BOOL)isComponentPersisted:(id)a0;
- (BOOL)isObjectInExternalPackage:(id)a0 claimingComponent:(id *)a1 componentReadVersion:(unsigned long long *)a2;
- (BOOL)isObjectWrittenInExternalPackageWithIdentifier:(long long)a0;
- (void)nextComponentAndRootObjectForComponentWriteWithCompletion:(id /* block */)a0;
- (unsigned long long)objectTargetType;
- (unsigned long long)objectTargetTypeForComponentWriter:(id)a0;
- (id)packageWriterError;
- (void)persistedObjectUUIDMap:(id)a0 foundDuplicateUUID:(id)a1 firstObjectLocation:(struct TSPObjectLocation { long long x0; long long x1; })a2 secondObjectLocation:(struct TSPObjectLocation { long long x0; long long x1; })a3;
- (id)persistedObjectUUIDMap:(id)a0 needsDescriptionForComponentIdentifier:(long long)a1 objectIdentifier:(long long)a2;
- (void)setArchivedObjects:(id)a0 componentObjectUUIDMap:(id)a1 objectReferenceMap:(id)a2 externalStrongReferences:(id)a3 ambiguousReferences:(id)a4 externalWeakReferences:(id)a5 featureInfos:(id)a6 componentDataReferenceMap:(id)a7 forComponent:(id)a8;
- (void)setDataAttributesSnapshot:(id)a0;
- (void)setPackageWriterErrorIfNeeded:(id)a0;
- (void)setSupportPackageWriteCoordinator:(id)a0;
- (BOOL)shouldArchiveComponent:(id)a0 checkForceArchive:(BOOL)a1;
- (BOOL)shouldCopyComponentOfObject:(id)a0;
- (BOOL)shouldEnqueueComponent:(id)a0;
- (void)stopCapturingSnapshots;
- (long long)updateDelayedObjectsSetForWrittenComponentInfo:(struct WrittenComponentInfo { id x0; id x1; BOOL x2; BOOL x3; id x4; BOOL x5; BOOL x6; BOOL x7; id x8; id x9; BOOL x10; unsigned char x11; long long x12; unsigned long long x13; unsigned long long x14; unsigned long long x15; unsigned long long x16; BOOL x17; id x18; id x19; id x20; id x21; id x22; id x23; id x24; id x25; } *)a0 componentIdentifier:(long long)a1 withObject:(id)a2 canDelayObjects:(BOOL)a3;
- (void)updateExternalReferencesForCopiedComponent:(id)a0;
- (void)updateObjectContextForSuccessfulSaveWithPackageWriter:(id)a0 packageURL:(id)a1 allDataIdentifiers:(id)a2;
- (BOOL)wasComponentCopied:(long long)a0;
- (BOOL)wasObjectPersistedWithIdentifier:(long long)a0;
- (void)willModifyObject:(id)a0 options:(unsigned long long)a1;
- (void)writeComponent:(id)a0 rootObjectOrNil:(id)a1 forceArchive:(BOOL)a2 withPackageWriter:(id)a3;
- (void)writeExternalReferences:(id)a0 andUpdateLazyReferences:(id)a1 withPackageWriter:(id)a2 forComponent:(id)a3 locator:(id)a4;
- (void)writeRemainingComponentsWithPackageWriter:(id)a0 completionQueue:(id)a1 completion:(id /* block */)a2;
- (void)writeRemainingRootObjectsAndRelatedComponents:(id)a0 withPackageWriter:(id)a1 completionQueue:(id)a2 completion:(id /* block */)a3;
- (void)writeRootObject:(id)a0 withPackageWriter:(id)a1 saveOperationState:(id)a2 completionQueue:(id)a3 completion:(id /* block */)a4;
- (unsigned long long)writeRootObject:(id)a0 withPackageWriter:(id)a1 saveOperationState:(id)a2 error:(id *)a3;
- (void)writeRootObjectAndRelatedComponents:(id)a0 withPackageWriter:(id)a1 completionQueue:(id)a2 completion:(id /* block */)a3;
- (const void *)writtenComponents;

@end
