@class NSDate, UITapGestureRecognizer, SBHIconImageCache, _UIStatesFeedbackGenerator, SBFolderIconImageCache, NSMutableArray, SBHRecentsDocumentExtensionProvider, UIFont, SBIconContinuityItem, UIDragInteraction, NSCountedSet, UIColor, UILongPressGestureRecognizer, UIViewController, _UILegibilitySettings, SBIcon, NSURL, SBIconFocusEffectPlatterView, SBIconImageCrossfadeView, UIView, SBIconImageView, NSArray, UIFocusEffect, NSString, NSObject, UIContextMenuInteraction, SBCloseBoxView, SBFolderIcon, UIViewPropertyAnimator, NSHashTable, UILabel, SBHIconEditingSettings, UIImage, UIPointerInteraction;
@protocol UIFocusEnvironment, UIFocusItem, SBIconContinuityInfo, UIDragSession, SBIconLabelView, SBIconListLayoutProvider, OS_os_activity, SBIconListLayout, SBIconViewDelegate, SBHIconViewConfigurationInteraction, BSInvalidatable, SBIconAccessoryView, SBIconLabelViewFactory, SBIconLabelAccessoryView, SBIconViewActionDelegate, SBIconViewSnapshotProviding, UIFocusItemContainer, SBIconViewCustomImageViewControlling;

@interface SBIconView : UIView <UIPointerInteractionDelegate, _UISettingsKeyObserver, UIGestureRecognizerDelegate, UIDragInteractionDelegate, SBCloseBoxViewDelegate, UIContextMenuInteractionDelegate, SBSHardwareButtonEventConsuming, SBHIconViewConfigurationInteractionDelegate, SBIconViewCustomImageViewControllerObserving, SBHFocusProxyable, SBIconObserver, SBReusableView, SBIconAccessoryInfoProvider> {
    SBIcon *_icon;
    SBIconImageView *_iconImageView;
    SBIconImageCrossfadeView *_crossfadeView;
    UIView *_snapshotContainerView;
    UIView *_temporarySnapshotContainerViewForDragPreview;
    UIView<SBIconAccessoryView> *_accessoryView;
    SBCloseBoxView *_closeBox;
    UIView<SBIconLabelView> *_labelView;
    UIView<SBIconLabelAccessoryView> *_labelAccessoryView;
    UIView *_dropGlow;
    SBIconFocusEffectPlatterView *_focusEffectPlatterView;
    SBHIconEditingSettings *_iconEditingSettings;
    UILabel *_iconIndexLabel;
    id<SBIconViewSnapshotProviding> _snapshotProvider;
    unsigned char _drawsLabel : 1;
    unsigned char _isEditing : 1;
    unsigned char _discardClose : 2;
    unsigned char _pauseReasons : 5;
    unsigned char _isGrabbed : 1;
    unsigned char _isOverlapping : 1;
    unsigned char _isFocused : 1;
    unsigned char _refusesRecipientStatus : 1;
    unsigned char _highlighted : 1;
    unsigned char _launchDisabled : 1;
    unsigned char _suppressesDisabledPresentation : 1;
    unsigned char _iconWasTappedWhenDisabled : 1;
    unsigned char _isJittering : 1;
    unsigned char _allowJitter : 1;
    unsigned char _allowCloseBox : 1;
    unsigned char _touchDownInIcon : 1;
    unsigned char _hideLabel : 1;
    unsigned char _hideLabelAccessoryView : 1;
    unsigned char _iconContentScalingEnabled : 1;
    unsigned char _forcingIconContentScalingEnabled : 1;
    unsigned char _startsDragMoreQuickly : 1;
    unsigned char _isDragging : 1;
    unsigned char _isDragLifted : 1;
    unsigned char _folderIconFrozen : 1;
    unsigned char _showingCloseBox : 1;
    unsigned char _allowsAccessoryView : 1;
    unsigned char _allowsProgressState : 1;
    unsigned char _showingAccessoryView : 1;
    unsigned char _allowsLabelArea : 1;
    unsigned char _allowsPassthroughHitTesting : 1;
    unsigned char _showsDropGlow : 1;
    unsigned char _hasSetIconImageInfo : 1;
    unsigned char _showsSquareCorners : 1;
    unsigned char _disableContextMenuInteraction : 1;
    unsigned char _disallowsBlockedForScreenTimeExpiration : 1;
    unsigned char _reallyHasPopover : 2;
    unsigned char _imageLoadingBehavior : 2;
    unsigned char _disallowCursorInteraction : 1;
    unsigned char _customIconImageViewHitTestingDisabled : 1;
    unsigned char _labelStyle : 2;
    unsigned char _allIconElementsButLabelHidden : 1;
    unsigned char _displaysIconStatusInLabel : 1;
    unsigned char _userVisibilityStatus : 2;
    unsigned char _wantsFocusProxyView : 1;
    double _iconContentScale;
    UIView *_scalingContainer;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _visibleImageRect;
    NSHashTable *_observers;
    NSCountedSet *_forbidEditingModeReasons;
    NSCountedSet *_forbidAccessoryReasons;
    struct SBIconImageInfo { struct CGSize { double width; double height; } size; double scale; double continuousCornerRadius; } _iconImageInfo;
    SBHRecentsDocumentExtensionProvider *_recentsDocumentExtensionProvider;
    _UIStatesFeedbackGenerator *_feedbackGenerator;
    NSMutableArray *_performAfterContextMenuBlocks;
    NSHashTable *_droppingAssertions;
    NSHashTable *_contextMenuInteractionConfigurations;
    NSHashTable *_dismissingContextMenuInteractionConfigurations;
    NSObject<OS_os_activity> *_iconContextMenuActivity;
    struct os_activity_scope_state_s { unsigned long long opaque[2]; } _iconContextMenuActivityState;
    NSCountedSet *_activePointerRegions;
    unsigned long long _fetchedSupportedMultitaskingKeyboardShortcuts;
    id<SBIconLabelViewFactory> _iconLabelViewFactory;
}

@property (class, readonly, nonatomic) Class contentContainerViewClass;
@property (class, readonly, copy, nonatomic) NSString *defaultIconLocation;
@property (class, readonly, nonatomic) struct CGSize { double x0; double x1; } defaultIconImageSize;
@property (class, readonly, nonatomic) double defaultIconImageCornerRadius;
@property (class, readonly, nonatomic) BOOL supportsDragInteraction;
@property (class, readonly, nonatomic) BOOL supportsPreviewInteraction;
@property (class, readonly, nonatomic) BOOL supportsTapGesture;
@property (class, readonly, nonatomic) BOOL supportsCursorInteraction;
@property (class, readonly, nonatomic) double iconLiftAlpha;
@property (class, readonly, nonatomic) BOOL allowsLabelAccessoryView;
@property (class, readonly, nonatomic) unsigned long long defaultImageLoadingBehavior;

@property (readonly, nonatomic) UIView *contentContainerView;
@property (readonly, nonatomic) UIDragInteraction *dragInteraction;
@property (weak, nonatomic) id<UIDragSession> liftingDragSession;
@property (readonly, nonatomic) UITapGestureRecognizer *tapGestureRecognizer;
@property (copy, nonatomic) NSDate *lastTouchDownDate;
@property (retain, nonatomic) UIViewPropertyAnimator *accessoryViewAnimator;
@property (nonatomic, getter=isOverlapping) BOOL overlapping;
@property (readonly, nonatomic) long long displayedLabelAccessoryType;
@property (readonly, nonatomic) UILongPressGestureRecognizer *editingModeGestureRecognizer;
@property (readonly, nonatomic) UIContextMenuInteraction *contextMenuInteraction;
@property (retain, nonatomic) id<BSInvalidatable> homeButtonPressConsumingAssertion;
@property (nonatomic) BOOL lastContextMenuInteractionFailedToLoad;
@property (retain, nonatomic) id<SBHIconViewConfigurationInteraction> currentConfigurationInteraction;
@property (retain, nonatomic) id<SBHIconViewConfigurationInteraction> currentStackConfigurationInteraction;
@property (readonly, nonatomic) UIPointerInteraction *iconViewCursorInteraction;
@property (readonly, nonatomic) UIPointerInteraction *closeBoxCursorInteraction;
@property (readonly, nonatomic) UIPointerInteraction *accessoryViewCursorInteraction;
@property (retain, nonatomic) UIViewPropertyAnimator *closeBoxAnimator;
@property (copy, nonatomic) NSArray *fetchedApplicationShortcutItems;
@property (retain, nonatomic) id<SBIconLabelViewFactory> iconLabelViewFactory;
@property (readonly, copy, nonatomic) NSString *representedFolderIconLocation;
@property (readonly, nonatomic) BOOL canBeginDrags;
@property (readonly, nonatomic) BOOL shouldTapGestureRecognizeAlongsideDragInteractionGestures;
@property (readonly, copy, nonatomic) NSString *applicationBundleIdentifierForShortcuts;
@property (readonly, copy, nonatomic) NSURL *applicationBundleURLForShortcuts;
@property (readonly, copy, nonatomic) NSArray *effectiveApplicationShortcutItems;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } maxLabelSize;
@property (nonatomic) long long labelStyle;
@property (nonatomic) BOOL displaysIconStatusInLabel;
@property (retain, nonatomic) SBIcon *icon;
@property (weak, nonatomic) id<SBIconViewDelegate> delegate;
@property (weak, nonatomic) id<SBIconViewActionDelegate> overrideActionDelegate;
@property (copy, nonatomic) NSString *location;
@property (nonatomic) unsigned long long configurationOptions;
@property (retain, nonatomic) _UILegibilitySettings *legibilitySettings;
@property (nonatomic) double iconImageAlpha;
@property (readonly, nonatomic) double effectiveIconImageAlpha;
@property (nonatomic) double iconAccessoryAlpha;
@property (nonatomic) double iconLabelAlpha;
@property (nonatomic) BOOL allIconElementsButLabelHidden;
@property (copy, nonatomic) NSArray *applicationShortcutItems;
@property (readonly, nonatomic) UIView *labelAccessoryView;
@property (readonly, nonatomic) BOOL shouldShowLabelAccessoryView;
@property (readonly, nonatomic) BOOL allowsLabelAccessoryView;
@property (readonly, nonatomic) long long currentLabelAccessoryType;
@property (readonly, nonatomic) double labelAccessoryTotalWidth;
@property (nonatomic, getter=isLabelAccessoryHidden) BOOL labelAccessoryHidden;
@property (readonly, nonatomic) double baselineOffsetFromBottom;
@property (readonly, nonatomic) double firstLineBaseline;
@property (readonly, nonatomic) double lastLineBaseline;
@property (nonatomic, getter=isEnabled) BOOL enabled;
@property (nonatomic, getter=isPaused) BOOL paused;
@property (nonatomic, getter=isEditing) BOOL editing;
@property (nonatomic) BOOL allowsEditingAnimation;
@property (nonatomic) double editingAnimationStrength;
@property (nonatomic) BOOL allowsCloseBox;
@property (readonly, nonatomic) BOOL canShowCloseBox;
@property (readonly, nonatomic) BOOL shouldShowCloseBox;
@property (readonly, nonatomic, getter=isShowingContextMenu) BOOL showingContextMenu;
@property (nonatomic) BOOL allowsBlockedForScreenTimeExpiration;
@property (readonly, nonatomic) UIImage *iconImageSnapshot;
@property (readonly, nonatomic) UIView *iconImageSnapshotView;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } iconImageFrame;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } iconImageCenter;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } iconImageVisibleSize;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } iconImageSize;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } iconViewSize;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } cursorHitTestPadding;
@property (readonly, nonatomic) BOOL isCursorActive;
@property (readonly, nonatomic) BOOL allowsTapWhileEditing;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic) BOOL allowsLabelArea;
@property (nonatomic) BOOL allowsPassthroughHitTesting;
@property (nonatomic, getter=isCustomIconImageViewHitTestingDisabled) BOOL customIconImageViewHitTestingDisabled;
@property (nonatomic, getter=isLabelHidden) BOOL labelHidden;
@property (nonatomic) BOOL showsSquareCorners;
@property (readonly, nonatomic, getter=isTouchDownInIcon) BOOL touchDownInIcon;
@property (nonatomic, getter=isGrabbed) BOOL grabbed;
@property (readonly, nonatomic, getter=isDropping) BOOL dropping;
@property (nonatomic) BOOL showsImageAndLabelDuringDrop;
@property (readonly, nonatomic) UIView *dropContainerView;
@property (nonatomic) BOOL refusesRecipientStatus;
@property (readonly, nonatomic) BOOL showsDropGlow;
@property (readonly, getter=isCrossfadingImageWithView) BOOL crossfadingImageWithView;
@property (readonly, nonatomic) UIView<SBIconLabelView> *labelView;
@property (retain, nonatomic) UIFont *labelFont;
@property (readonly, nonatomic) long long currentAccessoryType;
@property (nonatomic) BOOL allowsAccessoryView;
@property (readonly, nonatomic) BOOL shouldShowAccessoryView;
@property (readonly, nonatomic) BOOL canShowAccessoryView;
@property (readonly, nonatomic) SBIconContinuityItem *continuityItem;
@property (retain, nonatomic) id<SBIconContinuityInfo> continuityInfo;
@property (nonatomic) double iconContentScale;
@property (nonatomic, getter=isIconContentScalingEnabled) BOOL iconContentScalingEnabled;
@property (nonatomic) BOOL startsDragMoreQuickly;
@property (readonly, nonatomic) double dragInteractionLiftDelay;
@property (readonly, nonatomic) Class expectedIconImageViewClass;
@property (nonatomic) unsigned long long customIconImageViewControllerPriority;
@property (readonly, nonatomic) UIViewController<SBIconViewCustomImageViewControlling> *customIconImageViewController;
@property (retain, nonatomic) id<SBIconListLayoutProvider> listLayoutProvider;
@property (readonly, nonatomic) id<SBIconListLayout> listLayout;
@property (nonatomic) struct SBIconImageInfo { struct CGSize { double x0; double x1; } x0; double x1; double x2; } iconImageInfo;
@property (retain, nonatomic) SBHIconImageCache *iconImageCache;
@property (retain, nonatomic) SBFolderIconImageCache *folderIconImageCache;
@property (retain, nonatomic) SBFolderIcon *folderIcon;
@property (nonatomic) unsigned long long folderBackgroundStyle;
@property (retain, nonatomic) UIView *folderIconBackgroundView;
@property (nonatomic, getter=isFolderIconFrozen) BOOL folderIconFrozen;
@property (readonly, nonatomic) unsigned long long visibleMiniIconCount;
@property (readonly, nonatomic) unsigned long long visibleMiniIconListIndex;
@property (readonly, nonatomic) unsigned long long firstVisibleMiniIconIndex;
@property (readonly, nonatomic) unsigned long long centerVisibleMiniIconIndex;
@property (readonly, nonatomic) unsigned long long lastVisibleMiniIconIndex;
@property (readonly, nonatomic, getter=isAnimatingScrolling) BOOL animatingScrolling;
@property (retain, nonatomic) UIColor *accessibilityTintColor;
@property (readonly, nonatomic) long long progressState;
@property (nonatomic) BOOL allowsProgressState;
@property (readonly, nonatomic) BOOL supportsConfigurationCard;
@property (readonly, nonatomic, getter=isShowingConfigurationCard) BOOL showingConfigurationCard;
@property (readonly, nonatomic) BOOL supportsStackConfigurationCard;
@property (readonly, nonatomic, getter=isShowingStackConfigurationCard) BOOL showingStackConfigurationCard;
@property (nonatomic) unsigned long long imageLoadingBehavior;
@property (nonatomic) unsigned long long debugIconIndex;
@property (nonatomic) BOOL iconImageSizeMatchesBoundsSize;
@property (readonly, copy, nonatomic) NSString *backgroundViewGroupNameBase;
@property (nonatomic) unsigned long long userVisibilityStatus;
@property (nonatomic) struct SBIconApproximateLayoutPosition { unsigned long long horizontal; unsigned long long vertical; } approximateLayoutPosition;
@property (readonly, nonatomic) UIView<UIFocusItem> *focusProxyView;
@property (nonatomic) BOOL wantsFocusProxyView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL canBecomeFocused;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } frame;
@property (readonly, copy, nonatomic) UIFocusEffect *focusEffect;
@property (readonly, nonatomic) long long focusGroupPriority;
@property (readonly, nonatomic) BOOL isTransparentFocusItem;
@property (readonly, copy, nonatomic) NSArray *preferredFocusEnvironments;
@property (readonly, weak, nonatomic) id<UIFocusEnvironment> parentFocusEnvironment;
@property (readonly, nonatomic) id<UIFocusItemContainer> focusItemContainer;
@property (readonly, weak, nonatomic) UIView *preferredFocusedView;
@property (readonly, copy, nonatomic) NSString *focusGroupIdentifier;

+ (id)_jitterRotationAnimationWithAmount:(double)a0;
+ (id)homeScreenService;
+ (id)applicationShortcutService;
+ (Class)defaultViewClassForLabelAccessoryType:(long long)a0;
+ (struct CGPoint { double x0; double x1; })defaultIconImageCenterForIconImageSize:(struct CGSize { double x0; double x1; })a0;
+ (id)_jitterYTranslationAnimationWithAmount:(double)a0;
+ (id)dragContextForDragItem:(id)a0;
+ (BOOL)_shouldAlwaysHaveContentContainerView;
+ (id)labelConfigurationForListLayout:(id)a0 contentSizeCategory:(id)a1 options:(unsigned long long)a2;
+ (double)defaultIconImageScale;
+ (struct CGSize { double x0; double x1; })maxLabelSizeForListLayout:(id)a0 contentSizeCategory:(id)a1 options:(unsigned long long)a2;
+ (id)groupNameBaseForComponentBackgroundViewOfType:(long long)a0;
+ (BOOL)isIconTapGestureRecognizer:(id)a0;
+ (void)setDebugContinuityItem:(id)a0;
+ (struct CGSize { double x0; double x1; })maxLabelSizeForIconImageSize:(struct CGSize { double x0; double x1; })a0 contentSizeCategory:(id)a1 options:(unsigned long long)a2;
+ (double)defaultMaxLabelWidthDeltaForContentSizeCategory:(id)a0;
+ (id)componentBackgroundViewOfType:(long long)a0 compatibleWithTraitCollection:(id)a1 initialWeighting:(double)a2;
+ (id)applicationIconSplitViewMenu;
+ (double)_labelHeight;
+ (id)_jitterXTranslationAnimationWithAmount:(double)a0;
+ (struct CGSize { double x0; double x1; })defaultIconViewSizeForIconImageSize:(struct CGSize { double x0; double x1; })a0 configurationOptions:(unsigned long long)a1;
+ (struct CGSize { double x0; double x1; })maxLabelSizeForIconImageSize:(struct CGSize { double x0; double x1; })a0;
+ (id)debugContinuityItem;
+ (id)draggedItemBundleIdentifiersInDrag:(id)a0;
+ (id)defaultLegibilitySettings;
+ (id)_jitterRotationAnimationWithStrength:(double)a0;
+ (double)defaultMaxLabelHeight;
+ (id)applicationIconMultitaskingMenu;
+ (id)_jitterXTranslationAnimationWithStrength:(double)a0;
+ (double)labelAccessoryViewAdditionalRightMarginForType:(long long)a0;
+ (id)componentBackgroundView;
+ (Class)_closeBoxClassForType:(long long)a0;
+ (struct CGSize { double x0; double x1; })defaultIconViewSize;
+ (id)applicationIconStageManagerMenu;
+ (id)_jitterYTranslationAnimationWithStrength:(double)a0;
+ (void)configureLabelImageParametersBuilder:(id)a0 forIcon:(id)a1 location:(id)a2;
+ (BOOL)_alwaysShowsAccessoryOfType:(long long)a0;
+ (double)labelAccessoryViewBaseRightMargin;
+ (double)labelMaximumHeightForContentSizeCategory:(id)a0;
+ (long long)defaultWidgetBackgroundRecipe;
+ (double)_defaultDragInteractionLiftDelay;
+ (BOOL)showsPopovers;
+ (long long)closeBoxTypeForView:(id)a0;
+ (id)componentBackgroundViewOfType:(long long)a0;
+ (struct CGSize { double x0; double x1; })maxLabelSizeForListLayout:(id)a0 iconImageSize:(struct CGSize { double x0; double x1; })a1 contentSizeCategory:(id)a2 options:(unsigned long long)a3;
+ (void)activateShortcut:(id)a0 withBundleIdentifier:(id)a1 forIconView:(id)a2;
+ (Class)defaultViewClassForAccessoryType:(long long)a0;

- (id)dragInteraction:(id)a0 previewForLiftingItem:(id)a1 session:(id)a2;
- (void)pressesChanged:(id)a0 withEvent:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_focusEffectBounds;
- (BOOL)_hasPopover;
- (double)_labelBaselineOffsetFromImage;
- (BOOL)shouldActivateApplicationShortcutItem:(id)a0 atIndex:(unsigned long long)a1;
- (void)_updateProgressAnimated:(BOOL)a0;
- (BOOL)_isShowingAccessoryView;
- (id)_makeIconImageView;
- (void)endForbiddingAccessoryWithReason:(id)a0 animated:(BOOL)a1;
- (BOOL)_shouldAnimatePropertyWithKey:(id)a0;
- (id)tintColor;
- (id)pointerInteraction:(id)a0 styleForRegion:(id)a1;
- (void)_configureLabelAccessoryViewForType:(long long)a0;
- (BOOL)isLabelTextBold;
- (id)containerViewControllerForConfigurationInteraction:(id)a0;
- (void)setCrossfadeCornerRadius:(double)a0;
- (void)touchesCancelled:(id)a0 withEvent:(id)a1;
- (BOOL)pointMostlyInside:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (id)_contextMenuInteraction:(id)a0 styleForMenuWithConfiguration:(id)a1;
- (double)effectiveBrightness;
- (BOOL)_shouldHaveContentContainerView;
- (id)_automationID;
- (void)_applyIconEditingSettings;
- (void)setDragLifted:(BOOL)a0;
- (id)descriptionBuilderWithMultilinePrefix:(id)a0;
- (void)pressesBegan:(id)a0 withEvent:(id)a1;
- (BOOL)_dragInteraction:(id)a0 shouldDelayCompetingGestureRecognizer:(id)a1;
- (void)dragInteraction:(id)a0 item:(id)a1 willAnimateCancelWithAnimator:(id)a2;
- (void)_handleAddWidgetRequest:(id)a0;
- (void)earlyTerminateContextMenuDismissAnimation;
- (void)performTap;
- (BOOL)_dragInteraction:(id)a0 canExcludeCompetingGestureRecognizer:(id)a1;
- (void)purgeCachedEditingViewData;
- (void)_contextMenuConfigurationWillDismiss:(id)a0;
- (void)configurationInteractionDidBegin:(id)a0;
- (void)presentStackConfigurationCard;
- (void)setIcon:(id)a0 animated:(BOOL)a1;
- (void)setMorphFraction:(double)a0;
- (void)_contextMenuConfigurationDidPresent:(id)a0;
- (id)effectiveListLayoutProvider;
- (void)tapGestureDidChange:(id)a0;
- (id)badgeParallaxSettings;
- (id)succinctDescriptionBuilder;
- (BOOL)_shouldShowLabel;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForVisibleImage;
- (BOOL)_hideIconLabelForContextMenu;
- (void)setBackgroundAndIconGridImageAlpha:(double)a0;
- (id)_labelImage;
- (BOOL)isDragging;
- (id)displayedLabelFont;
- (void)configurationInteractionDidEnd:(id)a0;
- (void)dismissStackConfigurationCardImmediately;
- (void)dragSessionWillBegin:(id)a0;
- (void)_insertIconImageView:(id)a0;
- (void)setIconGridImageAlpha:(double)a0;
- (id)currentImageView;
- (void)addObserver:(id)a0;
- (id)contextMenuInteraction:(id)a0 configuration:(id)a1 dismissalPreviewForItemWithIdentifier:(id)a2;
- (id)_legibilitySettingsWithPrimaryColor:(id)a0;
- (double)_additionalLiftScale;
- (void)popStackConfigurationCard;
- (id)_legibilitySettingsWithStyle:(long long)a0 primaryColor:(id)a1;
- (void)didMoveToWindow;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (void)_refreshAccessoryViewNotification:(id)a0;
- (BOOL)pointInside:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (void)_setShowingAccessoryView:(BOOL)a0;
- (void)touchesBegan:(id)a0 withEvent:(id)a1;
- (id)markAsDropping;
- (void)startForbiddingEditingModeWithReason:(id)a0;
- (id)_visiblyActiveDataSource;
- (void)scrollToGapOrTopIfFullOfPage:(unsigned long long)a0 animated:(BOOL)a1;
- (void)_updateAfterManualIconImageInfoChangeInvalidatingLayout:(BOOL)a0;
- (void)dragSession:(id)a0 willEndWithOperation:(unsigned long long)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForLabelAccessoryViewWithLabelFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 labelImage:(id)a1 labelImageParameters:(id)a2 imageFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3;
- (void)_handleTap;
- (void)setAllowsCloseBox:(BOOL)a0 withAnimation:(long long)a1;
- (id)dragInteraction:(id)a0 itemsForAddingToSession:(id)a1 withTouchAtPoint:(struct CGPoint { double x0; double x1; })a2;
- (void)_contentSizeCategoryDidChange:(id)a0;
- (void)iconImageViewDidEndAsynchronousImageLoadForIcon:(id)a0;
- (void)_applyIconImageAlpha:(double)a0;
- (void)_fetchSupportedMultitaskingShortcutActionsIfAppropriate;
- (void)_applyIconContentScale:(double)a0;
- (double)_continuousCornerRadius;
- (id)_folderIconImageView;
- (BOOL)_delegateTapAllowed;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visibleImageRelativeFrameForMiniIconAtIndex:(unsigned long long)a0;
- (BOOL)focusProxyCanBecomeFocused;
- (void)setDragging:(BOOL)a0 updateImmediately:(BOOL)a1;
- (void)iconImageDidUpdate:(id)a0;
- (id)folder;
- (id)dragInteraction:(id)a0 itemsForBeginningSession:(id)a1;
- (void)_destroyAccessoryView:(id)a0;
- (void)_configureIconImageView:(id)a0;
- (void)_removeJitter;
- (BOOL)_dragInteraction:(id)a0 competingGestureRecognizerShouldDelayLift:(id)a1;
- (void)_contextMenuConfigurationWillPresent:(id)a0 forInteraction:(id)a1;
- (void)customImageViewControllerWantsLabelHiddenDidChange:(id)a0;
- (id)labelConfiguration;
- (void)prepareForReuse;
- (id)newComponentBackgroundViewOfType:(long long)a0;
- (void)_invalidateHomeButtonPressConsumingAssertion;
- (id)initWithConfigurationOptions:(unsigned long long)a0 listLayoutProvider:(id)a1;
- (void)_setTemporarySnapshotViewForDragPreview:(id)a0;
- (BOOL)gestureRecognizerShouldBegin:(id)a0;
- (id)dragInteraction:(id)a0 sessionForAddingItems:(id)a1 withTouchAtPoint:(struct CGPoint { double x0; double x1; })a2;
- (void)cleanupAfterFloatyFolderCrossfade;
- (void)_boldTextStatusDidChange:(id)a0;
- (void)setCustomIconImageViewController:(id)a0;
- (void)configureLabelImageParametersBuilder:(id)a0;
- (void)setPaused:(BOOL)a0 forReason:(unsigned long long)a1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (double)_labelVerticalOffset;
- (void)configureMatchingIconView:(id)a0;
- (id)representativeIconViewForModalInteractions;
- (void)removeAllIconAnimations;
- (BOOL)gestureRecognizer:(id)a0 shouldReceiveTouch:(id)a1;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (void)dragInteraction:(id)a0 session:(id)a1 willEndWithOperation:(unsigned long long)a2;
- (double)effectiveIconAccessoryAlpha;
- (long long)draggingStartLocation;
- (void)cleanUpAfterDropAnimation;
- (BOOL)_hideIconLabelForCustomIconImageViewController;
- (void)_updateCustomIconImageViewController:(BOOL)a0;
- (id)initWithConfigurationOptions:(unsigned long long)a0;
- (void)dismissConfigurationCardImmediately;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForImageView;
- (BOOL)isDragLifted;
- (void)cleanupAfterCrossfade;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForLabelHighlight;
- (id)_pointerStyleForWidgetIcon;
- (BOOL)disallowCursorInteraction;
- (id)_pointerStyleForLibraryAdditionalItemsIndicatorIcon;
- (id)_labelImageParameters;
- (void)pressesCancelled:(id)a0 withEvent:(id)a1;
- (BOOL)_isForcingIconContentScalingEnabled;
- (void)_registerForAddWidgetRequestsIfNecessary;
- (id)_contextMenuInteraction:(id)a0 previewForIconWithConfigurationOptions:(unsigned long long)a1 highlighted:(BOOL)a2;
- (double)effectiveOverallAlpha;
- (id)recentsDocumentExtensionProvider;
- (BOOL)_isFolderIconFreezingSupported;
- (id)dragInteraction:(id)a0 previewForCancellingItem:(id)a1 withDefault:(id)a2;
- (void)scrollToTopOfFirstPageAnimated:(BOOL)a0;
- (void)configurationInteractionDidCommit:(id)a0;
- (void)touchesMoved:(id)a0 withEvent:(id)a1;
- (void)configurationInteractionWillBegin:(id)a0;
- (void)_setShowingCloseBox:(BOOL)a0;
- (void)_backgroundContrastDidChange:(id)a0;
- (id)referenceIconViewForConfigurationInteraction:(id)a0;
- (void)_updateLaunchDisabled;
- (void)setShowsFocusEffect:(BOOL)a0;
- (void)_toggleGroupBlendingIfNecessary;
- (void)_updateIconImageViewAnimated:(BOOL)a0;
- (void)dragInteraction:(id)a0 willAnimateLiftWithAnimator:(id)a1 session:(id)a2;
- (BOOL)dragInteraction:(id)a0 sessionIsRestrictedToDraggingApplication:(id)a1;
- (void)dismissContextMenuWithCompletion:(id /* block */)a0;
- (void)_handleActivateAppExposeKeyShortcut:(id)a0;
- (void)performAfterContextMenusDismissUsingBlock:(id /* block */)a0;
- (void)dragInteraction:(id)a0 sessionWillBegin:(id)a1;
- (long long)_widgetBackgroundMaterialForDataSource:(id)a0;
- (void)prepareToCrossfadeImageWithView:(id)a0 options:(unsigned long long)a1;
- (void)iconLaunchEnabledDidChange:(id)a0;
- (void)dealloc;
- (id)newCaptureOnlyBackgroundView;
- (BOOL)_debugContinuity;
- (void)didUpdateFocusInContext:(id)a0 withAnimationCoordinator:(id)a1;
- (void)_applyIconLabelAlpha:(double)a0;
- (void)iconAccessoriesDidUpdate:(id)a0;
- (void)_checkAndRemoveCloseBoxAfterAnimation;
- (void)_updateLabelAccessoryView;
- (void)_applyIconAccessoryAlpha:(double)a0;
- (id)behaviorDelegate;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_focusEffectBoundsForFocused:(BOOL)a0 withFocusOutset:(double)a1;
- (void)_recursivelyUpdateBackdropMaskFrames;
- (void)setupFocusEffectPlatterView;
- (void)settings:(id)a0 changedValueForKey:(id)a1;
- (void)removeObserver:(id)a0;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)homeScreenContentViewForConfigurationInteraction:(id)a0;
- (BOOL)canBecomeFirstResponder;
- (BOOL)_contextMenuInteractionShouldAllowDragAfterDismiss:(id)a0;
- (id)_pointerStyleForAppIcon;
- (void)configurationInteractionWillEnd:(id)a0;
- (void)prepareToCrossfadeImageWithView:(id)a0 anchorPoint:(struct CGPoint { double x0; double x1; })a1 options:(unsigned long long)a2;
- (void)_createAccessoryViewIfNecessary;
- (id)pointerInteraction:(id)a0 regionForRequest:(id)a1 defaultRegion:(id)a2;
- (void)_removeUnknownSubviews;
- (void)_handleAddWindowToSetCommand:(id)a0;
- (BOOL)_selfOrCustomViewCanBecomeFocused;
- (void)updateParallaxSettings;
- (void)_handleMakeSplitLeftKeyShortcut:(id)a0;
- (void)_updateCloseBoxWithAnimation:(long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForMiniIconAtIndex:(unsigned long long)a0;
- (void)layoutSubviews;
- (id)labelImageWithParameters:(id)a0;
- (struct CGPoint { double x0; double x1; })_focusEffectCenter;
- (void)dismissStackConfigurationCard;
- (struct CGSize { double x0; double x1; })iconViewSizeForIconImageSize:(struct CGSize { double x0; double x1; })a0;
- (id)_iconImageView;
- (id)_legibilitySettingsWithParameters:(id)a0;
- (void)touchesEnded:(id)a0 withEvent:(id)a1;
- (void)dragInteraction:(id)a0 session:(id)a1 willAddItems:(id)a2 forInteraction:(id)a3;
- (void)setCrossfadeFraction:(double)a0;
- (void)cancelDragLift;
- (void)addGesturesAndInteractionsIfNecessary;
- (void)updateCustomIconImageViewController;
- (BOOL)isFolderIcon;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)removeDroppingAssertion:(id)a0;
- (void)_updateLabelArea;
- (struct CGSize { double x0; double x1; })accessorySize;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (void)scrollToTopOfPage:(unsigned long long)a0 animated:(BOOL)a1;
- (void)setDisallowCursorInteraction:(BOOL)a0;
- (void)contextMenuInteraction:(id)a0 willPerformPreviewActionForMenuWithConfiguration:(id)a1 animator:(id)a2;
- (void)_dragInteraction:(id)a0 liftAnimationDidChangeDirection:(long long)a1;
- (void)_contextMenuConfigurationDidDismiss:(id)a0;
- (void)_unregisterForAddWidgetRequests;
- (id)draggingLaunchActions;
- (unsigned long long)supportedIconGridSizeClasses;
- (void)setBoundsSizeFromIconImageSize:(struct CGSize { double x0; double x1; })a0;
- (void)setIconImageAndAccessoryAlpha:(double)a0;
- (struct CGPoint { double x0; double x1; })_centerForAccessoryView;
- (BOOL)_isShowingCloseBox;
- (void)_configureViewAsFolderIconImageView:(id)a0;
- (id)matchingIconViewByAddingConfigurationOptions:(unsigned long long)a0 removingConfigurationOptions:(unsigned long long)a1;
- (void)_fetchApplicationShortcutItemsIfAppropriate;
- (id)contextMenuInteraction:(id)a0 configuration:(id)a1 highlightPreviewForItemWithIdentifier:(id)a2;
- (void)startForbiddingAccessoryWithReason:(id)a0 animated:(BOOL)a1;
- (void)_updateBrightness;
- (void)presentConfigurationCard;
- (void)_animateCloseBoxWithAnimation:(long long)a0 animationBlock:(id /* block */)a1;
- (BOOL)closeBoxShouldTrack:(id)a0;
- (void)_updateCloseBoxAnimated:(BOOL)a0;
- (id)configurationUIDelegate;
- (void)_enableContentContainerView;
- (long long)_closeBoxType;
- (id)succinctDescription;
- (void)setLocation:(id)a0 animated:(BOOL)a1;
- (id)dragPreviewForItem:(id)a0 session:(id)a1;
- (void)setEditing:(BOOL)a0 animated:(BOOL)a1;
- (id)descriptionWithMultilinePrefix:(id)a0;
- (void)_updateConfigurationForIconImageView:(id)a0;
- (void)cancelDrag;
- (void)setCrossfadeViewFadeFraction:(double)a0;
- (id)sourceIconViewForConfigurationInteraction:(id)a0;
- (void)_closeBoxTapGestureChanged:(id)a0;
- (void)scrollToFirstGapAnimated:(BOOL)a0;
- (void)popConfigurationCard;
- (void)_updateCustomIconImageViewControllerHitTesting;
- (void)dragSession:(id)a0 didEndWithOperation:(unsigned long long)a1;
- (void)_updateAccessoryViewAnimated:(BOOL)a0;
- (void)_recursiveNotifyInteractionTintColorDidChangeForReasons:(unsigned long long)a0;
- (double)effectiveIconLabelAlpha;
- (void)_toggleContentContainerViewIfNecessary;
- (id)pauseReasonsDescriptions;
- (void)endForbiddingEditingModeWithReason:(id)a0;
- (void)contextMenuInteraction:(id)a0 willDisplayMenuForConfiguration:(id)a1 animator:(id)a2;
- (BOOL)isTimedOut;
- (id)dragItems;
- (BOOL)_isCursorInteractionEnabled;
- (void)pressesEnded:(id)a0 withEvent:(id)a1;
- (void)_addJitter;
- (void)setUserInteractionEnabled:(BOOL)a0;
- (void)_delegateTouchEnded:(BOOL)a0;
- (void)iconImageViewWillBeginAsynchronousImageLoadForIcon:(id)a0;
- (void)_destroyAccessoryView;
- (void)_updateAllComponentAlphasAnimated:(BOOL)a0;
- (id)reuseDelegate;
- (BOOL)isContextMenuInteractionActive;
- (id)dragDelegate;
- (void)_updateLabel;
- (id)contextMenuInteraction:(id)a0 configurationForMenuAtLocation:(struct CGPoint { double x0; double x1; })a1;
- (void)iconInteractedWhenDisabled;
- (void)_destroyIconImageView;
- (void)setDragging:(BOOL)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentBoundingRectForConfigurationInteraction:(id)a0;
- (void)_updateJitter;
- (void)setShowsDropGlow:(BOOL)a0 animator:(id)a1;
- (void)_updateFrameToIconViewSize;
- (void)_acquireHomeButtonPressConsumingAssertionIfNecessary;
- (void)_updateAllComponentAlphas;
- (void)_updateDragInteractionLiftDelay;
- (void)_handleMakeSplitRightKeyShortcut:(id)a0;
- (id)shortcutsDelegate;
- (void)_accessoryViewTapGestureChanged:(id)a0;
- (id)_contextMenuInteraction:(id)a0 overrideSuggestedActionsForConfiguration:(id)a1;
- (void)setIconFadeFraction:(double)a0;
- (void)_handleMakeFullscreenKeyShortcut:(id)a0;
- (void)_setForcingIconContentScalingEnabled:(BOOL)a0;
- (id)contentSizeCategory;
- (id)actionDelegate;
- (void)contextMenuInteraction:(id)a0 willEndForConfiguration:(id)a1 animator:(id)a2;
- (void)setTouchDownInIcon:(BOOL)a0;
- (void)clearIconImageInfo;
- (void)consumeSinglePressUpForButtonKind:(long long)a0;
- (void)dragInteraction:(id)a0 session:(id)a1 didEndWithOperation:(unsigned long long)a2;
- (void)_applyEditingStateAnimated:(BOOL)a0;
- (void)_notifyObserversSizeDidChange;
- (void)_applyOverallAlpha:(double)a0;
- (id)draggingLaunchURL;
- (void)configureForLabelAllowed:(BOOL)a0;
- (void)_updateIconContentScale;
- (void)setContinuityInfo:(id)a0 animated:(BOOL)a1;
- (void)_updateCursorInteractionsEnabled;
- (void).cxx_destruct;
- (id)badgeString;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForLabel;
- (void)dismissConfigurationCard;
- (void)pointerInteraction:(id)a0 willEnterRegion:(id)a1 animator:(id)a2;
- (void)pointerInteraction:(id)a0 willExitRegion:(id)a1 animator:(id)a2;
- (id)createNewIconLabelViewFactory;
- (BOOL)canReceiveGrabbedIcon:(id)a0;
- (id)matchingIconViewWithConfigurationOptions:(unsigned long long)a0;
- (id)_multitaskingAppShortcutService;
- (void)prepareToCrossfadeWithFloatyFolderView:(id)a0 allowFolderInteraction:(BOOL)a1;
- (double)iconImageCornerRadius;
- (BOOL)_shouldEnableGroupBlending;
- (struct CGPoint { double x0; double x1; })_centerForCloseBox;
- (BOOL)canPerformAction:(SEL)a0 withSender:(id)a1;
- (id)prepareForIconDrop;
- (void)setFloatyFolderCrossfadeFraction:(double)a0;
- (void)editingModeGestureRecognizerDidFire:(id)a0;
- (void)_disableContentContainerView;
- (void)_createCloseBoxIfNecessary;

@end
