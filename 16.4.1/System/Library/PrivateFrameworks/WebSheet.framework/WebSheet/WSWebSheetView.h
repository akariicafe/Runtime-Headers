@class NSURL, NSMutableDictionary, UILabel, UIBarButtonItem, NSDictionary, WBUSheetController, NSObject, _SFFormAutoFillController, NSMutableArray, UIView, WSWebSheetDownloadManager, NSString, WKWebView, UINavigationBar, UINavigationItem, WSWebSheetViewController, UIAlertController, NSTimer, UIImageView;
@protocol OS_dispatch_queue, WSWebSheetViewDelegate;

@interface WSWebSheetView : UIView <UINavigationBarDelegate, SFFormAutoFillControllerDelegate, _WSWebSheetDownloadDelegate, WKNavigationDelegate, _WKInputDelegate, WKUIDelegate> {
    _SFFormAutoFillController *_autoFillController;
    UINavigationBar *_navigationBar;
    UINavigationItem *_navigationItem;
    UIBarButtonItem *_backButtonItem;
    UIBarButtonItem *_forwardButtonItem;
    UIBarButtonItem *_cancelDoneBarButtonItem;
    UIBarButtonItem *_backForwardButton;
    UIView *_addressView;
    UIImageView *_lockIconView;
    UILabel *_addressLabel;
    UILabel *_ssidLabel;
    NSMutableArray *_alerts;
    WBUSheetController *_sheetController;
    NSMutableArray *_redirectTypeQueue;
    NSObject<OS_dispatch_queue> *_queue;
    long long _currentRedirectURLType;
    BOOL _currentRedirectURLTypeSet;
    BOOL _firstNavigation;
    BOOL _everReceivedUntrustedCertificate;
    NSURL *_navigationURLAtStart;
    WSWebSheetDownloadManager *_downloadManager;
    BOOL _inDoneState;
    UIAlertController *_stayConnectedAlertController;
    NSTimer *_captiveProbeDispatchTimer;
    NSString *_loginURL;
    NSString *_postMessage;
    NSString *_ssid;
    BOOL _lastResultWasTimeoutError;
}

@property (nonatomic) BOOL hasEVCert;
@property (nonatomic) BOOL isCertTrustDone;
@property (retain, nonatomic) WKWebView *webView;
@property (retain, nonatomic) WSWebSheetViewController *webSheetViewController;
@property (retain, nonatomic) NSURL *currentURL;
@property (copy, nonatomic) NSURL *probeURL;
@property (nonatomic) BOOL shouldShowStayConnectedOptions;
@property (nonatomic) BOOL enableTVMode;
@property (copy, nonatomic) NSDictionary *proxyConfiguration;
@property (retain, nonatomic) NSMutableDictionary *resultOptions;
@property (weak, nonatomic) id<WSWebSheetViewDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)_updateTitle;
- (void)webView:(id)a0 didFailNavigation:(id)a1 withError:(id)a2;
- (void)webView:(id)a0 didStartProvisionalNavigation:(id)a1;
- (void)webView:(id)a0 didFinishNavigation:(id)a1;
- (void)webView:(id)a0 decidePolicyForNavigationAction:(id)a1 decisionHandler:(id /* block */)a2;
- (void)webView:(id)a0 didFailProvisionalNavigation:(id)a1 withError:(id)a2;
- (void)setSSID:(id)a0;
- (void)_webView:(id)a0 navigationDidFinishDocumentLoad:(id)a1;
- (void)downloadDidFinish:(id)a0;
- (void)webView:(id)a0 didCommitNavigation:(id)a1;
- (BOOL)formAutoFillControllerShouldDisableStreamlinedLogin:(id)a0;
- (void)_webView:(id)a0 accessoryViewCustomButtonTappedInFormInputSession:(id)a1;
- (void)webView:(id)a0 didReceiveAuthenticationChallenge:(id)a1 completionHandler:(id /* block */)a2;
- (void)safeAreaInsetsDidChange;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)formAutoFillControllerCanPrefillForm:(id)a0;
- (id)_titleForError:(id)a0;
- (void)dealloc;
- (id)formAutoFillControllerURLForFormAutoFill:(id)a0;
- (void)layoutSubviews;
- (id)_presentingViewControllerForWebView:(id)a0;
- (id)webView:(id)a0 createWebViewWithConfiguration:(id)a1 forNavigationAction:(id)a2 windowFeatures:(id)a3;
- (void)downloadDidFail:(id)a0;
- (void)_webView:(id)a0 willSubmitFormValues:(id)a1 userObject:(id)a2 submissionHandler:(id /* block */)a3;
- (void)_webView:(id)a0 renderingProgressDidChange:(unsigned long long)a1;
- (void)addAlert:(id)a0;
- (void)webView:(id)a0 decidePolicyForNavigationResponse:(id)a1 decisionHandler:(id /* block */)a2;
- (void).cxx_destruct;
- (void)_webView:(id)a0 insertTextSuggestion:(id)a1 inInputSession:(id)a2;
- (void)_webView:(id)a0 didStartInputSession:(id)a1;
- (void)webView:(id)a0 didCommitLoadForFrame:(id)a1;
- (void)doneTapped;
- (void)_showGenericDownloadAlert;
- (void)cancelTapped;
- (void)_startCaptiveProbeDispatchTimer;
- (BOOL)isUserAprroved:(id)a0;
- (void)_addAndRemoveAddressViewsAsNeeded;
- (void)_backButtonPressed;
- (void)_captiveProbeDispatchTimerDidFire:(id)a0;
- (id)_evCertColor;
- (void)_forwardButtonPressed;
- (BOOL)_handleCertificateError:(struct __SecTrust { } *)a0 newhost:(id)a1;
- (BOOL)_isSecureAddress;
- (id)_lockIconImage;
- (void)_precheckTrustForServerCertificate:(struct __SecTrust { } *)a0 host:(id)a1;
- (id)_promptLabelFont;
- (double)_promptLabelFontLineHeight;
- (id)_sheetController;
- (BOOL)_shouldShowPromptLabels;
- (void)_showProfileDownloadAlert;
- (void)_showProfileInstallAlert;
- (id)_specializedMessageForError:(id)a0;
- (void)_stopCaptiveProbeDispatchTimer;
- (void)_updateAddress;
- (void)_updateBackForwardButtons;
- (id)appNametoOpenURL:(id)a0;
- (void)dequeueRedirectTypeQueue;
- (void)dismissWebSheetWithCaptiveWebSheetResult:(long long)a0;
- (void)dispatchCaptiveProbe;
- (void)handleProbeResult:(long long)a0;
- (BOOL)isChinaRegion;
- (void)pushBackToRedirectTypeQueue;
- (void)setWebViewWithInterfaceName:(id)a0;
- (void)updateRedirectURLTypeSetting;
- (void)updateResultOptions;
- (void)updateToDoneButton;

@end
