@class WFAction, NSMapTable, NSDate, WFContentCollection, WFWorkflowControllerState, NSDictionary, WFOutOfProcessWorkflowController, WFContentItemCache, NSObject, WFSmartPromptsExfiltrationLogger, WFWorkflowRunningContext, WFControlFlowAttributionTracker, NSString, RBSAssertion, WFWorkflow, NSProgress;
@protocol OS_dispatch_queue, OS_voucher, WFWorkflowControllerDelegate;

@interface WFWorkflowController : NSObject <WFActionRunningDelegate, WFWorkflowNoInputBehaviorDelegate, WFVariableDataSource, WFActionParameterInputProvider, WFDialogTransformerDelegate> {
    WFWorkflowController *_strongSelf;
}

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *executionQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue;
@property (retain, nonatomic) NSDate *startDate;
@property (nonatomic) unsigned long long currentIndex;
@property (nonatomic, getter=isRunning) BOOL running;
@property (nonatomic, getter=isStepping) BOOL stepping;
@property (nonatomic) BOOL resumed;
@property (retain, nonatomic) NSProgress *progress;
@property (retain, nonatomic) NSProgress *currentActionProgress;
@property (retain, nonatomic) WFContentCollection *output;
@property (retain, nonatomic) NSMapTable *variableTable;
@property (retain, nonatomic) NSMapTable *environmentValueTable;
@property (retain, nonatomic) WFWorkflowControllerState *pendingState;
@property (retain, nonatomic) NSDictionary *pendingProcessedParameters;
@property (retain, nonatomic) WFContentCollection *pendingActionInput;
@property (retain, nonatomic) RBSAssertion *workflowRunAssertion;
@property (retain, nonatomic) NSObject<OS_voucher> *executionVoucher;
@property (retain, nonatomic) WFOutOfProcessWorkflowController *outOfProcessController;
@property (retain, nonatomic) WFControlFlowAttributionTracker *flowTracker;
@property (retain, nonatomic) WFContentItemCache *contentItemCache;
@property (retain, nonatomic) WFContentCollection *capturedFiles;
@property (retain, nonatomic) WFSmartPromptsExfiltrationLogger *exfiltrationLogger;
@property (readonly, nonatomic) WFAction *currentAction;
@property (nonatomic) BOOL actionDidRunRemotely;
@property (retain, nonatomic) WFWorkflow *workflow;
@property (retain, nonatomic) WFContentCollection *input;
@property (nonatomic) BOOL donateInteraction;
@property (weak, nonatomic) id<WFWorkflowControllerDelegate> delegate;
@property (retain, nonatomic) WFWorkflowControllerState *currentState;
@property (retain, nonatomic) WFWorkflowRunningContext *runningContext;
@property (copy, nonatomic) NSString *runSource;
@property (nonatomic) BOOL shouldDisablePrivacyPrompts;
@property (copy, nonatomic) NSString *automationType;
@property (nonatomic) BOOL isAutomationSuggestion;
@property (copy, nonatomic) NSString *automationTrialID;
@property (copy, nonatomic) NSDictionary *listenerEndpoints;
@property (nonatomic) unsigned long long outputBehavior;
@property (nonatomic) BOOL acquiresAssertionWhileRunning;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;

- (BOOL)canRun;
- (void)run;
- (void)_step;
- (void)_run;
- (id)userInterface;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)stop;
- (id)init;
- (void).cxx_destruct;
- (void)reset;
- (void)stopWithError:(id)a0;
- (void)setUpProgress;
- (id)currentRunningContextForAction:(id)a0;
- (void)autoreleaseSelf;
- (BOOL)setContent:(id)a0 forVariableWithName:(id)a1;
- (void)_finishStepWithError:(id)a0;
- (void)acquireAssertionIfNeeded;
- (BOOL)action:(id)a0 canProvideInputForParameter:(id)a1;
- (void)action:(id)a0 didDecideRunningProgressIsAllowed:(BOOL)a1;
- (void)action:(id)a0 didGenerateReversalState:(id)a1;
- (void)action:(id)a0 handleTestingEvent:(id)a1 completionHandler:(id /* block */)a2;
- (void)action:(id)a0 provideInputForParameters:(id)a1 withDefaultStates:(id)a2 prompts:(id)a3 completionHandler:(id /* block */)a4;
- (void)action:(id)a0 wantsToToastSessionKitSessionWithIdentifier:(id)a1 completionHandler:(id /* block */)a2;
- (id)actionReversalStateForAction:(id)a0;
- (id)actionSandboxExtensionProviderForAction:(id)a0;
- (void)captureFileRepresentation:(id)a0;
- (id)contentForPrivateVariableKey:(id)a0;
- (id)contentForVariableWithName:(id)a0;
- (id)currentStateWithContext:(id)a0;
- (void)dialogTransformer:(id)a0 stopRunningWithError:(id)a1;
- (void)dialogTransformerDidDisplayDialog:(id)a0;
- (void)dialogTransformerWillDisplayDialog:(id)a0;
- (void)didFinishRunningWithError:(id)a0 cancelled:(BOOL)a1;
- (void)didRunAction:(id)a0 withCompletion:(id /* block */)a1;
- (id)environmentValueForKey:(id)a0;
- (id)errorByAddingActionIndex:(long long)a0 toError:(id)a1;
- (void)handleActionCompletion:(id)a0 actionGroupSkipped:(BOOL)a1;
- (void)handleError:(id)a0 fromAction:(id)a1 completionHandler:(id /* block */)a2;
- (void)invalidateAssertionIfNeeded;
- (void)logFinishActionEventWithAction:(id)a0 completed:(BOOL)a1 error:(id)a2;
- (void)logFinishRunEvent:(BOOL)a0;
- (void)logStartActionEventWithAction:(id)a0;
- (void)logStartEvent;
- (void)noInputBehavior:(id)a0 wantsToRunAction:(id)a1 completionHandler:(id /* block */)a2;
- (id)parameterInputProviderForAction:(id)a0;
- (void)prepareToRunAction:(id)a0 withInput:(id)a1 completionHandler:(id /* block */)a2;
- (void)publishActionProgress;
- (void)publishRunningState:(long long)a0;
- (void)queue_reset;
- (void)queue_setWorkflow:(id)a0;
- (void)queue_stopWithError:(id)a0;
- (id)remoteDialogPresenterEndpointForRunWorkflowAction:(id)a0;
- (void)requestAccessToFileAtLocations:(id)a0 completionHandler:(id /* block */)a1;
- (void)requestAccessToFileAtURLs:(id)a0 completionHandler:(id /* block */)a1;
- (void)resetEvaluationCriteriaForControlFlowActions;
- (void)resolveWorkflowInputWithCompletion:(id /* block */)a0;
- (void)restorePendingStateIfNecessary;
- (void)retainSelf;
- (void)runAction:(id)a0 withInput:(id)a1 completionHandler:(id /* block */)a2;
- (void)setContent:(id)a0 forPrivateVariableKey:(id)a1;
- (void)setEnvironmentValue:(id)a0 forKey:(id)a1;
- (void)setFinishedRunningWithSuccess:(BOOL)a0;
- (void)setUpRunState;
- (id)stateWithActionIndex:(unsigned long long)a0 input:(id)a1 processedParameters:(id)a2;
- (void)trackRunActionEventWithKey:(id)a0 action:(id)a1 completed:(BOOL)a2 error:(id)a3;
- (void)trackRunShortcutEventWithKey:(id)a0 completed:(BOOL)a1;
- (void)workflowControllerWillRun:(id)a0;
- (id)workflowInput;
- (id)workflowStartDate;

@end
