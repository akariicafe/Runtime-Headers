@class NSMutableData;

@interface HalogenLdcmCalc : NSObject

@property int nSamples;
@property int diffWindowSize;
@property int clipDetectWindowSize;
@property int sizeofSample;
@property double sampleRate;
@property double signalFrequency;
@property double adcGain;
@property double tiaGain;
@property double hydraImpedance;
@property double movesumClipThreshold;
@property double hydraR;
@property double ldcmAcCap;
@property double sanitycheckImpedanceLowerbound;
@property double sanitycheckImpedanceUpperbound;
@property double sanitycheckPhaseLowerbound;
@property double sanitycheckPhaseUperbound;
@property double sanitycheckVoltageGainCorrectionLowerbound;
@property double sanitycheckVoltageGainCorrectionUpperbound;
@property double sanitycheckCurrentGainCorrectionLowerbound;
@property double sanitycheckCurrentGainCorrectionUpperbound;
@property double sanitycheckCurrentPhaseCompensationLowerbound;
@property double sanitycheckCurrentPhaseCompensationUpperbound;
@property BOOL isDigitalFilterTrigger;
@property NSMutableData *tmp1DataBuff;
@property int tmp1DataBuffSize;
@property NSMutableData *tmp2DataBuff;
@property int tmp2DataBuffSize;
@property NSMutableData *tmp3DataBuff;
@property int tmp3DataBuffSize;
@property struct OpaqueFFTSetupD { } *fftContext;
@property (readonly) double precalVoltageSignalLevel;
@property (readonly) double precalVoltageNoiseLevel;
@property (readonly) double precalVoltageSNR;
@property (readonly) double precalCurrentSignalLevel;
@property (readonly) double precalCurrentNoiseLevel;
@property (readonly) double precalCurrentSNR;
@property (readonly) double voltageGainCorrection;
@property (readonly) double currentGainCorrection;
@property (readonly) double currentPhaseCompensation;
@property (readonly) double calVoltageSignalLevel;
@property (readonly) double calVoltageNoiseLevel;
@property (readonly) double calVoltageSNR;
@property (readonly) double calCurrentSignalLevel;
@property (readonly) double calCurrentNoiseLevel;
@property (readonly) double calCurrentSNR;
@property (readonly) double goertzelImpedance;
@property (readonly) double goertzelPhase;
@property (readonly) double compensatedImpedance;
@property (readonly) double compensatedPhase;
@property (readonly) double clippingScore;
@property (readonly) double resistanceInOhms;
@property (readonly) double capacitanceInNanoF;
@property (readonly) double measurementVoltageSignalLevel;
@property (readonly) double measurementVoltageNoiseLevel;
@property (readonly) double measurementVoltageSNR;
@property (readonly) double measurementCurrentSignalLevel;
@property (readonly) double measurementCurrentNoiseLevel;
@property (readonly) double measurementCurrentSNR;
@property (readonly) double measurementCondetSNR;

- (id)initWithSize:(int)a0;
- (void)dealloc;
- (double)_sineExtractor:(id)a0;
- (double)_median:(double *)a0 ofSize:(unsigned long long)a1;
- (BOOL)_allocBuffers;
- (void)_applyDigitalFilter:(id)a0;
- (void)_applyFractionalPhaseShift:(id)a0 withPhaseDelay:(double)a1;
- (void)_applyGain:(double)a0 toData:(id)a1;
- (void)_applyHanningWindow:(id)a0 withSize:(int)a1;
- (void)_applyTiaGain:(id)a0 toCurrentData:(id)a1;
- (double)_condetSnr:(double *)a0;
- (void)_doHydraComp:(double)a0 withPhase:(double)a1;
- (void)_freeBuffers;
- (void)_goertzelSecondOrder:(id)a0 hasFftValue:(double *)a1 hasPhase:(double *)a2 withHanning:(BOOL)a3;
- (BOOL)_isClipped:(id)a0;
- (double)_mean:(double *)a0 ofSize:(unsigned long long)a1;
- (void)_rcSolver;
- (void)_reconstructSignal:(id)a0;
- (double)_snr:(id)a0 withGain:(double)a1 hasSignalLevel:(double *)a2 hasNoiseLevel:(double *)a3 hasCondetSnr:(double *)a4;
- (double)_stdev:(double *)a0 ofSize:(unsigned long long)a1;
- (double)_variance:(double *)a0 ofSize:(unsigned long long)a1;
- (int)doCalibration:(id)a0 withCurrentData:(id)a1;
- (int)doLiquidDetection:(id)a0 withCurrentData:(id)a1 isReceptacleEmpty:(BOOL)a2 isReceptacleWet:(BOOL)a3 withWetTransitionThreshold:(double)a4 withDryTransitionThreshold:(double)a5;
- (int)doPreCalibration:(id)a0 withCurrentData:(id)a1;
- (BOOL)isBoundViolation_currentGainCorrection;
- (BOOL)isBoundViolation_currentPhaseCompensation;
- (BOOL)isBoundViolation_measurementCondetSNR;
- (BOOL)isBoundViolation_voltageGainCorrection;
- (BOOL)isLowerBoundViolation_goertzelImpedance;
- (BOOL)isLowerBoundViolation_goertzelPhase;
- (BOOL)isUpperBoundViolation_goertzelImpedance;
- (BOOL)isUpperBoundViolation_goertzelPhase;

@end
