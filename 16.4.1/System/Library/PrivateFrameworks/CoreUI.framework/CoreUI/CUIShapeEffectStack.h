@interface CUIShapeEffectStack : NSObject {
    BOOL _bypassColorFills;
}

@property (readonly, nonatomic) float shapeOpacity;
@property (readonly, nonatomic) float outputOpacity;
@property (readonly, nonatomic) unsigned long long hueSaturationCount;
@property (readonly, nonatomic) struct { float x0; float x1; float x2; float x3; float x4; BOOL x5; BOOL x6; } *hueSaturation;
@property (nonatomic) unsigned long long colorOverlayCount;
@property (readonly, nonatomic) struct { unsigned int x0; float x1; float x2; float x3; float x4; BOOL x5; } *colorOverlay;
@property (nonatomic) unsigned long long innerGradientCount;
@property (readonly, nonatomic) struct { unsigned int x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } *innerGradient;
@property (nonatomic) unsigned long long innerGlowCount;
@property (readonly, nonatomic) struct { unsigned int x0; float x1; float x2; float x3; float x4; float x5; } *innerGlow;
@property (nonatomic) unsigned long long innerShadowCount;
@property (readonly, nonatomic) struct { unsigned int x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; struct CGPoint { double x0; double x1; } x8; } *innerShadow;
@property (readonly, nonatomic) unsigned long long outerGlowCount;
@property (readonly, nonatomic) struct { float x0; float x1; float x2; float x3; float x4; float x5; } *outerGlow;
@property (nonatomic) unsigned long long engraveShadowCount;
@property (readonly, nonatomic) struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; struct CGPoint { double x0; double x1; } x8; } *engraveShadow;
@property (readonly, nonatomic) unsigned long long extraShadowCount;
@property (readonly, nonatomic) struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; struct CGPoint { double x0; double x1; } x8; } *extraShadow;
@property (readonly, nonatomic) unsigned long long bevelEmbossCount;
@property (readonly, nonatomic) struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; unsigned int x12; } *emboss;
@property (readonly, nonatomic) float scalefactor;
@property (readonly, nonatomic) int renderStrategy;
@property (readonly) unsigned int outputBlendMode;

+ (id)colorWithRed:(float)a0 green:(float)a1 blue:(float)a2 alpha:(float)a3;
+ (id)sharedCIContext;
+ (id)composite:(id)a0 atop:(id)a1;
+ (id)composite:(id)a0 over:(id)a1;
+ (id)composite:(id)a0 into:(id)a1;
+ (id)invert:(id)a0;
+ (id)adjustOpacity:(id)a0 by:(float)a1;
+ (id)bevelEmbossFrom:(id)a0 withSize:(unsigned int)a1 soften:(unsigned int)a2 angle:(float)a3 altitude:(float)a4 highlightRed:(float)a5 highlightGreen:(float)a6 highlightBlue:(float)a7 highlightOpacity:(float)a8 shadowRed:(float)a9 shadowGreen:(float)a10 shadowBlue:(float)a11 shadowOpacity:(float)a12 bevelStyle:(unsigned int)a13;
+ (id)blend:(id)a0 over:(id)a1 blendKind:(unsigned int)a2;
+ (id)blur:(id)a0 radius:(float)a1;
+ (id)colorWithGray:(float)a0 alpha:(float)a1;
+ (id)composite:(id)a0 outOf:(id)a1;
+ (id)gradientWithParameters:(struct { unsigned int x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } *)a0 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
+ (id)hueSaturationFrom:(id)a0 withCenterAngle:(double)a1 width:(double)a2 tintRed:(float)a3 tintGreen:(float)a4 tintBlue:(float)a5;
+ (id)image:(id)a0 withOpacity:(float)a1;
+ (id)imageFromBlendWithMask:(id)a0 foreground:(id)a1 background:(id)a2;
+ (id)innerGlowFrom:(id)a0 withRadius:(float)a1 red:(float)a2 green:(float)a3 blue:(float)a4 opacity:(float)a5;
+ (id)innerShadowFrom:(id)a0 withOffset:(struct CGPoint { double x0; double x1; })a1 radius:(float)a2 red:(float)a3 green:(float)a4 blue:(float)a5 opacity:(float)a6;
+ (struct CGColor { } *)newColorByAdjustingLightnessOfColor:(struct CGColor { } *)a0 darker:(BOOL)a1;
+ (id)offset:(id)a0 by:(struct CGPoint { double x0; double x1; })a1;
+ (id)outerGlowFrom:(id)a0 withSize:(unsigned int)a1 spread:(unsigned int)a2 red:(float)a3 green:(float)a4 blue:(float)a5 opacity:(float)a6;
+ (id)outerShadowFrom:(id)a0 withOffset:(struct CGPoint { double x0; double x1; })a1 size:(unsigned int)a2 spread:(unsigned int)a3 red:(float)a4 green:(float)a5 blue:(float)a6 opacity:(float)a7;
+ (id)pixelZoomed:(id)a0 scale:(int)a1 about:(struct CGPoint { double x0; double x1; })a2;
+ (id)preferredCIContextOptions;
+ (id)rectangle:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withRed:(float)a1 green:(float)a2 blue:(float)a3 alpha:(float)a4;
+ (id)shadowFrom:(id)a0 red:(float)a1 green:(float)a2 blue:(float)a3 opacity:(float)a4;
+ (id)shapeEffectSingleBlurFrom:(id)a0 withInteriorFill:(id)a1 offset:(struct CGPoint { double x0; double x1; })a2 blurSize:(float)a3 innerGlowRed:(float)a4 innerGlowGreen:(float)a5 innerGlowBlue:(float)a6 innerGlowOpacity:(float)a7 innerShadowRed:(float)a8 innerShadowGreen:(float)a9 innerShadowBlue:(float)a10 innerShadowOpacity:(float)a11 outerGlowRed:(float)a12 outerGlowGreen:(float)a13 outerGlowBlue:(float)a14 outerGlowOpacity:(float)a15 outerShadowRed:(float)a16 outerShadowGreen:(float)a17 outerShadowBlue:(float)a18 outerShadowOpacity:(float)a19 hasInsideShadowBlur:(BOOL)a20 hasOutsideShadowBlur:(BOOL)a21;
+ (id)unsharpMask:(id)a0 radius:(float)a1 intensity:(float)a2;

- (id)cacheKey;
- (void)dealloc;
- (BOOL)anyEffectAllowsTintSubstitution;
- (BOOL)hasColorOverlay;
- (void)_cleanupEffectSettings;
- (struct CGImage { } *)_newFlattenedImageFromShapeCGImage:(struct CGImage { } *)a0 withScale:(double)a1 ciContext:(id)a2 blendOverImage:(BOOL)a3;
- (void)_normalizeEffectParameters;
- (BOOL)_precompositeColorOverlayInnerGradient;
- (void)_setBevelEmbossAtIndex:(unsigned long long)a0 fromPreset:(id)a1 index:(unsigned int)a2;
- (void)_setColorFillAtIndex:(unsigned long long)a0 FromPreset:(id)a1 index:(unsigned int)a2;
- (void)_setEngraveShadowAtIndex:(unsigned long long)a0 fromPreset:(id)a1 index:(unsigned int)a2;
- (void)_setExtraShadowAtIndex:(unsigned long long)a0 fromPreset:(id)a1 index:(unsigned int)a2;
- (void)_setHueSaturationAtIndex:(unsigned long long)a0 fromPreset:(id)a1 index:(unsigned int)a2;
- (void)_setInnerGlowAtIndex:(unsigned long long)a0 fromPreset:(id)a1 index:(unsigned int)a2;
- (void)_setInnerShadowAtIndex:(unsigned long long)a0 fromPreset:(id)a1 index:(unsigned int)a2;
- (void)_setInteriorGradientAtIndex:(unsigned long long)a0 fromPreset:(id)a1 index:(unsigned int)a2;
- (void)_setOuterGlowAtIndex:(unsigned long long)a0 fromPreset:(id)a1 index:(unsigned int)a2;
- (void)_setOutputOpacityFromPreset:(id)a0 atIndex:(unsigned int)a1;
- (void)_setShapeOpacityFromPreset:(id)a0 atIndex:(unsigned int)a1;
- (void)_updateRenderStrategyFromEffect:(unsigned int)a0;
- (void)adjustEffectColorsToTemperature:(int)a0 onlyTintableColors:(BOOL)a1;
- (void)applyCustomForegroundColor:(struct CGColor { } *)a0;
- (void)applyCustomForegroundColor:(struct CGColor { } *)a0 tintEffectColors:(BOOL)a1;
- (int)cgBlendModeForOutputBlending;
- (float)colorOverlayOpacity;
- (id)compositeEffectStackWithShapeImage:(id)a0 withScale:(double)a1 blendOntoImage:(BOOL)a2;
- (struct { double x0; double x1; double x2; double x3; })effectInsetsWithScale:(double)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })effectPaddingWithScale:(double)a0;
- (id)effectPreset;
- (BOOL)expressableByColorFillCheckingOutputBlending:(BOOL)a0;
- (BOOL)hasBevelEmboss;
- (BOOL)hasEffects;
- (BOOL)hasEngraveShadow;
- (BOOL)hasExtraShadow;
- (BOOL)hasHueSaturation;
- (BOOL)hasInnerGlow;
- (BOOL)hasInnerGradient;
- (BOOL)hasInnerShadow;
- (BOOL)hasOuterGlow;
- (id)image:(id)a0 withAdjustedOpacity:(float)a1;
- (id)imageWithBevelEmbossOfImage:(id)a0 effect:(struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; unsigned int x12; })a1;
- (id)imageWithColorOverlayOfImage:(id)a0 effect:(struct { unsigned int x0; float x1; float x2; float x3; float x4; BOOL x5; })a1;
- (id)imageWithEngraveShadowOfImage:(id)a0 effect:(struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; struct CGPoint { double x0; double x1; } x8; })a1;
- (id)imageWithExtraShadowOfImage:(id)a0 effect:(struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; struct CGPoint { double x0; double x1; } x8; })a1;
- (id)imageWithHueSaturationOfImage:(id)a0 effect:(struct { float x0; float x1; float x2; float x3; float x4; BOOL x5; BOOL x6; })a1;
- (id)imageWithInnerGlowOfImage:(id)a0 effect:(struct { unsigned int x0; float x1; float x2; float x3; float x4; float x5; })a1;
- (id)imageWithInnerShadowOfImage:(id)a0 effect:(struct { unsigned int x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; struct CGPoint { double x0; double x1; } x8; })a1;
- (id)imageWithInteriorGradientFillOfImage:(id)a0 effect:(struct { unsigned int x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; })a1;
- (id)imageWithOuterGlowOfImage:(id)a0 effect:(struct { float x0; float x1; float x2; float x3; float x4; float x5; })a1;
- (id)imageWithSingleBlurShapeEffectOfImage:(id)a0 withInteriorFill:(id)a1;
- (id)initWithEffectPreset:(id)a0;
- (float)innerGradientOpacity;
- (struct CGColor { } *)newColorByProcessingColor:(struct CGColor { } *)a0;
- (struct CGImage { } *)newFlattenedImageFromCGImage:(struct CGImage { } *)a0 withScale:(double)a1 ciContext:(id)a2;
- (struct CGImage { } *)newFlattenedImageFromShapeCGImage:(struct CGImage { } *)a0;
- (struct CGImage { } *)newFlattenedImageFromShapeCGImage:(struct CGImage { } *)a0 withScale:(double)a1;
- (struct CGImage { } *)newFlattenedImageFromShapeCGImage:(struct CGImage { } *)a0 withScale:(double)a1 cache:(BOOL)a2;
- (struct CGImage { } *)newFlattenedImageFromShapeCGImage:(struct CGImage { } *)a0 withScale:(double)a1 ciContext:(id)a2;
- (id)optimizedSingleBlurEffectCompositeWithShapeImage:(id)a0;
- (id)processedImageFromImage:(id)a0;
- (id)processedImageFromImage:(id)a0 withScale:(double)a1;
- (id)processedImageFromShapeImage:(id)a0;
- (id)processedImageFromShapeImage:(id)a0 withScale:(double)a1;
- (id)processedImageFromShapeImage:(id)a0 withScale:(double)a1 invertShadows:(BOOL)a2;
- (id)processedImageFromShapePath:(struct CGPath { } *)a0 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)scaleBrightnessOfEffectColorsByAmount:(double)a0 onlyTintableColors:(BOOL)a1;
- (void)scaleEffectParametersBy:(double)a0;
- (void)setBypassColorFills:(BOOL)a0;
- (id)standardEffectCompositeWithShapeImage:(id)a0 blendOntoImage:(BOOL)a1;
- (void)updateOutputBlendingWithInteriorFillHeuristic;

@end
