@class NSTimeZone, NSCalendar, UIImageView, UIImage, NSDate, UIView;

@interface MTUIAnalogClockView : UIView <MTClock> {
    UIImage *_faceDayImage;
    UIImage *_faceNightImage;
    UIView *_dayHands[3];
    UIView *_nightHands[3];
    UIImageView *_middleDotDay;
    UIImageView *_middleDotNight;
    UIImageView *_middleRedDot;
    double _seconds;
    int _flutterIndex;
    BOOL _isRenderStateStale;
    NSCalendar *_calendar;
    BOOL _minuteHourAnimationTriggered;
}

@property (nonatomic) long long runMode;
@property (readonly, nonatomic) long long style;
@property (readonly, nonatomic) UIImageView *faceView;
@property (readonly, nonatomic) long long hour;
@property (readonly, nonatomic) long long minute;
@property (retain, nonatomic) NSDate *time;
@property (retain, nonatomic) NSTimeZone *timeZone;
@property (readonly, nonatomic, getter=isNighttime) BOOL nighttime;
@property (readonly, nonatomic, getter=isStarted) BOOL started;

+ (void)initialize;
+ (double)minuteHandWidth;
+ (double)secondHandMainLength;
+ (void)registerClock:(id)a0;
+ (BOOL)shouldCacheImageOnDiskForType:(int)a0 dayTime:(BOOL)a1;
+ (void)registerTickingClock:(id)a0;
+ (id)dayTimeOverHourHandDotColor;
+ (id)dayTimeFaceColor;
+ (double)hourHandLength;
+ (BOOL)isClockRegistered:(id)a0;
+ (double)secondHandWidth;
+ (id)imageForType:(int)a0 dayTime:(BOOL)a1 generation:(id /* block */)a2 ignoreCache:(BOOL)a3;
+ (double)antialiasPaddingRatio;
+ (double)overHourHandDotSize;
+ (id)overSecondHandDotImage;
+ (void)updateFlutterForAllTicking;
+ (id)dayTimeTextColor;
+ (struct CGSize { double x0; double x1; })sizeForStyle:(long long)a0;
+ (void)registerSweepingClock:(id)a0;
+ (id)dayTimeMinuteHandColor;
+ (Class)classForStyle:(long long)a0;
+ (BOOL)hasOverHourHandDot;
+ (double)numeralInset;
+ (void)unregisterTickingClock:(id)a0;
+ (id)dayTimeHourHandColor;
+ (id)nightTimeMinuteHandColor;
+ (BOOL)hasOverSecondHandDot;
+ (BOOL)doesFaceHaveShadow;
+ (id)numeralFont;
+ (id)nightTimeHourHandColor;
+ (id)cacheVersionedPath;
+ (id)nightTimeTextColor;
+ (id)makeClockHand:(long long)a0 daytime:(BOOL)a1;
+ (id)analogClockWithStyle:(long long)a0;
+ (id)clockFaceForDaytime:(BOOL)a0;
+ (void)adjustNumberalCenter:(struct CGPoint { double x0; double x1; } *)a0 forNumeralIndex:(long long)a1;
+ (id)imageForType:(int)a0 dayTime:(BOOL)a1 generation:(id /* block */)a2;
+ (id)imageInBundleForName:(id)a0;
+ (id)clockHand:(long long)a0 daytime:(BOOL)a1;
+ (void)unregisterClock:(id)a0;
+ (double)hourHandWidth;
+ (id)nightTimeSecondHandColor;
+ (double)overSecondHandDotSize;
+ (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insetsForStyle:(long long)a0;
+ (id)makeOverSecondHandDotImage;
+ (id)imageCacheNameForType:(int)a0 daytime:(BOOL)a1;
+ (id)cacheTopLevelPath;
+ (double)secondHandOverhangLength;
+ (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })shadowInsets;
+ (double)secondHandLength;
+ (struct CGPoint { double x0; double x1; })shadowRotationalCenterForHand:(long long)a0;
+ (id)overSecondHandDotColor;
+ (id)makeDotImageSize:(double)a0 color:(id)a1;
+ (double)faceRadius;
+ (id)dayTimeSecondHandColor;
+ (id)makeClockFaceForDaytime:(BOOL)a0;
+ (id)overHourHandDotImageForDaytime:(BOOL)a0;
+ (id)shadowInfoAtIndex:(unsigned long long)a0;
+ (id)clockFaceForDaytime:(BOOL)a0 ignoreCache:(BOOL)a1;
+ (void)unregisterSweepingClock:(id)a0;
+ (struct CGSize { double x0; double x1; })clockSize;
+ (void)updateTimeForAllTicking;
+ (id)overHourHandDotForDayTime:(BOOL)a0;
+ (long long)style;
+ (double)minuteHandLength;
+ (void)updateTimeForAllSweeping;
+ (struct CGPoint { double x0; double x1; })handRotationalCenterForHand:(long long)a0;
+ (id)cacheVersionHash;
+ (id)nightTimeFaceColor;
+ (id)resourcePath;
+ (id)nightTimeOverHourHandDotColor;

- (double)coarseUpdateInterval;
- (double)updateInterval;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (void)updateTimeContinuously:(long long)a0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)stop;
- (id)init;
- (void)start;
- (void)handleLocaleChange;
- (void).cxx_destruct;
- (void)updateTime;
- (void)updateTimeAnimated:(BOOL)a0;
- (void)redrawSecondHand;
- (void)setHandAngle:(double)a0 forHandIndex:(long long)a1;
- (void)setHandTransformForHandIndex:(long long)a0;
- (void)setNighttime:(BOOL)a0;
- (void)setTime:(id)a0 animated:(BOOL)a1;
- (void)updateFlutter;

@end
