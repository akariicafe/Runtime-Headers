@class UIPanGestureRecognizer, NSDate, NSDictionary, UITapGestureRecognizer, CEKLightingFrameCache, CEKSelectionFeedbackGenerator, UILongPressGestureRecognizer, NSSet, CEKLightingNameBadge, CEKAnimationGenerator, NSTimer, CEKLightingDialBackground, NSArray, NSString, CEKMultiplyImageView, UIImageView;
@protocol CEKLightingControlDelegate;

@interface CEKLightingControl : UIView <UIGestureRecognizerDelegate, CEKBadgeViewDelegate, CAAnimationDelegate> {
    struct { BOOL respondsToWillChangeExpanded; BOOL respondsToDidChangeExpanded; } _delegateFlags;
}

@property (readonly, nonatomic) NSArray *_effectTypes;
@property (retain, nonatomic) NSSet *_enabledEffectTypes;
@property (retain, nonatomic, setter=_setEffectItemsForType:) NSDictionary *_effectItemsForType;
@property (nonatomic, setter=_setSelectionAngularOffset:) double _selectionAngularOffset;
@property (readonly, nonatomic) unsigned long long _selectionIndex;
@property (readonly, nonatomic) CEKLightingFrameCache *_frameCache;
@property (retain, nonatomic, setter=_setItemViewsForType:) NSDictionary *_itemViewsForType;
@property (retain, nonatomic, setter=_setItemShadowViewsForType:) NSDictionary *_itemShadowViewsForType;
@property (retain, nonatomic, setter=_setItemOutlineViewsForType:) NSDictionary *_itemOutlineViewsForType;
@property (retain, nonatomic, setter=_setBackgroundView:) CEKLightingDialBackground *_backgroundView;
@property (retain, nonatomic, setter=_setSelectionOverlay:) CEKMultiplyImageView *_selectionOverlay;
@property (retain, nonatomic, setter=_setSelectionUnderlay:) UIImageView *_selectionUnderlay;
@property (retain, nonatomic, setter=_setNameBadge:) CEKLightingNameBadge *_nameBadge;
@property (readonly, nonatomic) UIPanGestureRecognizer *_panGesture;
@property (readonly, nonatomic) UILongPressGestureRecognizer *_pressGesture;
@property (readonly, nonatomic) UITapGestureRecognizer *_tapGesture;
@property (retain, nonatomic, setter=_setTimeTrackingBegan:) NSDate *_timeTrackingBegan;
@property (nonatomic, getter=isTracking, setter=_setTracking:) BOOL tracking;
@property (readonly, nonatomic) CEKAnimationGenerator *_animationGenerator;
@property (retain, nonatomic, setter=_setCollapseTimer:) NSTimer *_collapseTimer;
@property (nonatomic, setter=_setExpandedAnimationCounter:) unsigned long long _expandedAnimationCounter;
@property (readonly, nonatomic) CEKSelectionFeedbackGenerator *_selectionFeedbackGenerator;
@property (weak, nonatomic) id<CEKLightingControlDelegate> delegate;
@property (nonatomic) long long lightingEffectSet;
@property (nonatomic) long long selectedLightingType;
@property (readonly, nonatomic) long long defaultLightingType;
@property (nonatomic, getter=isExpanded) BOOL expanded;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic) struct { unsigned long long leftRate; unsigned long long rightRate; } collapsedItemFading;
@property (nonatomic, getter=isNameBadgeHidden) BOOL nameBadgeHidden;
@property (nonatomic) unsigned long long nameBadgeFontStyle;
@property (nonatomic) long long orientation;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)_handlePressGesture:(id)a0;
- (void)setExpanded:(BOOL)a0 animated:(BOOL)a1;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })alignmentRectInsets;
- (void)badgeViewDidChangeIntrinsicContentSize:(id)a0;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (void)setHighlighted:(BOOL)a0 animated:(BOOL)a1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_handlePanGesture:(id)a0;
- (void)layoutSubviews;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (void).cxx_destruct;
- (void)_handleTapGesture:(id)a0;
- (unsigned long long)_itemCount;
- (double)contentHeightForWidth:(double)a0;
- (void)ppt_selectLightingType:(long long)a0;
- (void)preloadEffectChangeAnimation;
- (void)setNameBadgeHidden:(BOOL)a0 animated:(BOOL)a1;
- (void)setSelectedLightingType:(long long)a0 animated:(BOOL)a1;
- (double)_dialRadius;
- (double)_angleFromCenterToPoint:(struct CGPoint { double x0; double x1; })a0;
- (double)_angularSpacingForRadialLayout;
- (void)_cancelDelayedCollapse;
- (void)_collapseWithDelay:(double)a0;
- (double)_compressedItemOffsetForFractionalItemOffset:(double)a0;
- (void)_createBackgroundViewIfNeeded;
- (void)_createItemViewsIfNeeded;
- (void)_createNameBadgeIfNeeded;
- (void)_createSelectionViewsIfNeeded;
- (double)_dialBadgePaddingExpanded:(BOOL)a0;
- (struct CGPoint { double x0; double x1; })_dialCenter;
- (double)_dialCenterDistanceBelowBoundsForWidth:(double)a0;
- (struct CGPoint { double x0; double x1; })_dialCenterForWidth:(double)a0;
- (double)_dialRadiusForWidth:(double)a0;
- (double)_dialVisibleHeightExpanded:(BOOL)a0;
- (unsigned long long)_enabledItemCount;
- (void)_handleCollapseTimer:(id)a0;
- (void)_handleSettlingSelectionViewsFromOffset:(double)a0 withProgress:(double)a1 timingCurve:(id)a2;
- (void)_handleSnapFromOffset:(double)a0 withProgress:(double)a1 timingCurve:(id)a2;
- (void)_handleTapRotationFromOffset:(double)a0 withProgress:(double)a1 timingCurve:(id)a2;
- (BOOL)_isLightingTypeEnabled:(long long)a0;
- (BOOL)_isOverDialedWithSelectionAngularOffset:(double)a0 selectionIndex:(unsigned long long)a1;
- (void)_layoutBackgroundExpanded:(BOOL)a0;
- (void)_layoutItemViewsLinear;
- (void)_layoutItemViewsRadialWithSelectionOffsetAngle:(double)a0;
- (void)_layoutNameBadgeExpanded:(BOOL)a0;
- (void)_layoutSelectionViewsExpanded:(BOOL)a0;
- (void)_loadItemsIfNeeded;
- (double)_offsetAngleForItemAtIndex:(unsigned long long)a0 withSelectionOffset:(double)a1;
- (double)_offsetAngleForRubberBandOffsetAngle:(double)a0 selectionIndex:(unsigned long long)a1;
- (double)_offsetXForItemAtIndex:(unsigned long long)a0;
- (void)_performFeedback;
- (void)_prepareFeedback;
- (void)_rotateForTapFromSelectionIndex:(unsigned long long)a0 offset:(double)a1 toSelectionIndex:(unsigned long long)a2;
- (double)_rotationForPanGesture:(id)a0;
- (double)_rubberBandOffsetAngleForOffsetAngle:(double)a0;
- (double)_safeWidthForWidth:(double)a0;
- (struct CGPoint { double x0; double x1; })_selectionPointForExpanded:(BOOL)a0;
- (void)_setExpanded:(BOOL)a0 animated:(BOOL)a1 shouldNotify:(BOOL)a2;
- (void)_setSelectedLightingType:(long long)a0 atIndex:(unsigned long long)a1 shouldNotify:(BOOL)a2 shouldSuppressHaptic:(BOOL)a3 animated:(BOOL)a4;
- (void)_settleSelectionViewsFromSelectionOffsetAngle:(double)a0;
- (void)_snapFromSelectionOffsetAngle:(double)a0 toAngle:(double)a1 animated:(BOOL)a2;
- (double)_spacingForLinearLayout;
- (void)_updateItemViewsWithSelectionOffsetAngle:(double)a0;
- (void)_updateNameBadgeAnimated:(BOOL)a0;
- (void)_updateSelectionOverlayColorAnimated:(BOOL)a0;
- (void)_updateSelectionViewsWithSelectionOffsetAngle:(double)a0;
- (void)setCollapsedItemFading:(struct { unsigned long long x0; unsigned long long x1; })a0 animated:(BOOL)a1;
- (void)setLightingEffectSet:(long long)a0 animated:(BOOL)a1;

@end
