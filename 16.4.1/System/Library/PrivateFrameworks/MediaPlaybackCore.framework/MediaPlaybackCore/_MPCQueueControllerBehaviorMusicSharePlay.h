@class MPCPlaybackRequestEnvironment, NSString, MPRequestResponseController, MPPropertySet, AVPlayerPlaybackCoordinator, NSMutableArray, NSMutableSet, ICSharedListeningQueue, ICLiveLink, MPCModelGenericAVItemUserIdentityPropertySet;
@protocol MPCQueueControllerBehaviorHost, MPCQueueControllerBehaviorMusicSharePlayDelegate, MPCQueueControllerBehaviorMusicDelegate, MPCQueueControllerExternalSyncBehaviorHost;

@interface _MPCQueueControllerBehaviorMusicSharePlay : NSObject <MPRequestResponseControllerDelegate, ICLiveLinkDelegate, AVPlayerPlaybackCoordinatorDelegate, MPCQueueControllerBehaviorMusicSharePlay, MPCQueueControllerBehaviorExternalSyncImplementation, MPCQueueControllerBehaviorUpNextImplementation> {
    AVPlayerPlaybackCoordinator *_playbackCoordinator;
    id /* block */ _loadingCompletionHandler;
    unsigned short _activeItemFlags;
    MPCPlaybackRequestEnvironment *_playbackRequestEnvironment;
    BOOL _liveLinkStopped;
    BOOL _queueRanDry;
}

@property (retain, nonatomic) ICLiveLink *liveLink;
@property (retain, nonatomic, setter=_setQueue:) ICSharedListeningQueue *queue;
@property (retain, nonatomic) MPRequestResponseController *requestController;
@property (retain, nonatomic) MPCModelGenericAVItemUserIdentityPropertySet *identityPropertySet;
@property (retain, nonatomic) NSMutableArray *pendingActions;
@property (retain, nonatomic) NSMutableSet *knownContainerIDs;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<MPCQueueControllerBehaviorMusicSharePlayDelegate> musicSharePlayBehaviorDelegate;
@property (readonly, nonatomic) long long queueExplicitContentState;
@property (copy, nonatomic) MPPropertySet *requestedPropertySetForEvents;
@property (weak, nonatomic) id<MPCQueueControllerBehaviorMusicDelegate> musicBehaviorDelegate;
@property (readonly, nonatomic) long long repeatType;
@property (readonly, nonatomic) long long shuffleType;
@property (readonly, nonatomic) BOOL autoPlayEnabled;
@property (readonly, nonatomic) BOOL hasUserMutations;
@property (nonatomic) BOOL allowsQueueModifications;
@property (readonly, weak, nonatomic) id<MPCQueueControllerExternalSyncBehaviorHost> externalSyncHost;
@property (readonly, copy, nonatomic) NSString *sessionID;
@property (readonly, weak, nonatomic) id<MPCQueueControllerBehaviorHost> host;

+ (BOOL)canLoadQueue:(id)a0 reason:(id *)a1;

- (BOOL)controller:(id)a0 shouldRetryFailedRequestWithError:(id)a1;
- (void)controller:(id)a0 defersResponseReplacement:(id /* block */)a1;
- (id)initWithSessionID:(id)a0;
- (void).cxx_destruct;
- (id)playbackCoordinator:(id)a0 identifierForPlayerItem:(id)a1;
- (void)liveLink:(id)a0 didUpdateParticipants:(id)a1;
- (void)didStopLiveLink:(id)a0;
- (void)endSynchronizedPlayback;
- (void)liveLink:(id)a0 didEncounterError:(id)a1 willRetry:(BOOL)a2;
- (void)liveLink:(id)a0 didReceiveDirectCurrentItemChanged:(id)a1 fromParticipant:(id)a2;
- (void)liveLink:(id)a0 didReceiveEvent:(id)a1;
- (void)liveLink:(id)a0 didUpdateQueue:(id)a1;
- (void)disconnectFromExternalSyncHost:(id)a0;
- (id)_stateDictionaryIncludingQueue:(BOOL)a0;
- (id)contentItemIDEnumeratorStartingAfterContentItemID:(id)a0 mode:(long long)a1 options:(unsigned long long)a2;
- (void)removeContentItemID:(id)a0 completion:(id /* block */)a1;
- (id)_componentsForContentItemID:(id)a0;
- (id)_componentsForSharedListeningItemID:(id)a0;
- (void)_dequeuePendingActions;
- (void)_emitEventsForAddedSharedListeningContainer:(id)a0;
- (void)_emitEventsForParticipants:(id)a0 localUserIdentifier:(id)a1;
- (void)_emitEventsForPlaybackBehaviorChange;
- (void)_enqueuePendingActionWithLabel:(id)a0 itemIdentifier:(id)a1 block:(id /* block */)a2;
- (void)_initializeWithQueue:(id)a0;
- (id)_itemForContentItemID:(id)a0;
- (id)_itemObjectForSharedListeningItemID:(id)a0;
- (id)_mpcSharedListeningEventForICLiveLinkEvent:(id)a0;
- (void)_purgePendingActionsWithLabel:(id)a0;
- (id)_queueAsStateDictionary;
- (id)_sectionObjectForSharedListeningContainerID:(id)a0;
- (id)_sectionedCollectionForQueue:(id)a0;
- (BOOL)_useItemPlaceholderForContentItemID:(id)a0;
- (BOOL)_useItemPlaceholderForItemID:(id)a0;
- (void)activeItemFlagsDidChange:(unsigned short)a0;
- (BOOL)canJumpToContentItemID:(id)a0 reason:(id *)a1;
- (BOOL)canNextItemFromContentItemID:(id)a0 reason:(id *)a1;
- (BOOL)canPreviousItemFromContentItemID:(id)a0 reason:(id *)a1;
- (BOOL)canRemoveContentItemID:(id)a0 reason:(id *)a1;
- (void)canReuseQueue:(id)a0 completion:(id /* block */)a1;
- (BOOL)canUserChangeRepeatTypeWithReason:(id *)a0;
- (BOOL)canUserChangeShuffleModeWithReason:(id *)a0;
- (BOOL)canUserEnableAutoPlayWithReason:(id *)a0;
- (void)clearAllItemsAfterContentItemID:(id)a0;
- (id)componentsForContentItemID:(id)a0;
- (void)connectToExternalSyncHost:(id)a0;
- (void)connectToHost:(id)a0;
- (id)contentItemIDWithoutRepeatIteration:(id)a0;
- (void)currentItemDidChangeFromContentItemID:(id)a0 toContentItemID:(id)a1;
- (void)didJumpToTargetContentItemID:(id)a0;
- (void)didReachEndOfQueueWithReason:(id)a0;
- (void)disconnectFromHost:(id)a0;
- (long long)displayItemCount;
- (void)findFirstContentItemIDForItemIntersectingIdentifierSet:(id)a0 completion:(id /* block */)a1;
- (void)getExpectedCurrentItemModelObjectWithCompletion:(id /* block */)a0;
- (void)getSharedQueueTracklistWithStartingContentItemID:(id)a0 completion:(id /* block */)a1;
- (BOOL)isAutoPlayContentItemID:(id)a0;
- (BOOL)isSupportedInsertionPosition:(long long)a0 fromContentItemID:(id)a1 reason:(id *)a2;
- (BOOL)itemExistsForContentItemID:(id)a0;
- (void)moveContentItemID:(id)a0 afterContentItemID:(id)a1 completion:(id /* block */)a2;
- (void)moveContentItemID:(id)a0 beforeContentItemID:(id)a1 completion:(id /* block */)a2;
- (void)performInsertCommand:(id)a0 targetContentItemID:(id)a1 completion:(id /* block */)a2;
- (id)performLoadCommand:(id)a0 completion:(id /* block */)a1;
- (void)reshuffleWithTargetContentItemID:(id)a0 completion:(id /* block */)a1;
- (void)setAutoPlayEnabled:(BOOL)a0 targetContentItemID:(id)a1 completion:(id /* block */)a2;
- (void)setRepeatType:(long long)a0 completion:(id /* block */)a1;
- (void)setShuffleType:(long long)a0 targetContentItemID:(id)a1 completion:(id /* block */)a2;
- (void)updatePlaybackCoordinator:(id)a0;

@end
