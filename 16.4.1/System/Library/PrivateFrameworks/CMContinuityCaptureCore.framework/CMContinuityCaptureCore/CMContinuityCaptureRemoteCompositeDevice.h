@class NSMutableDictionary, CMContinuityCaptureConfiguration, AVCaptureVideoPreviewLayer, NSObject, CMContinuityCaptureThermalMonitor, NSMutableArray, AVCaptureDeviceInput, CMContinuityCaptureRemoteClient, NSString, CMContinuityCapturePongSoundManager, NSMutableSet, AVCaptureSession, NSArray, CMContinuityCaptureCapabilities, NSUUID;
@protocol OS_dispatch_queue, ContinuityCaptureCommandNotificationDelegate, OS_dispatch_group;

@interface CMContinuityCaptureRemoteCompositeDevice : NSObject <CMContinuityCaptureThermalMonitorDelegate, ContinuityCaptureControlDelegate, ContinuityCaptureStreamDelegate, ContinuityCaptureEventDelegate, ContinuityCaptureAVCNegotiationDataDelegate, ContinuityCaptureClockSynchronizationDelegate, ContinuityCaptureStillImageCaptureDelegate> {
    NSObject<OS_dispatch_queue> *_queue;
    AVCaptureVideoPreviewLayer *_videoPreviewLayer;
    NSMutableDictionary *_captureDeviceByEntityType;
    CMContinuityCaptureCapabilities *_capabilities;
    NSUUID *_sidecarIdentifier;
    NSMutableDictionary *_cmControlByName;
    AVCaptureDeviceInput *_videoCameraInput;
    BOOL _streaming;
    id<ContinuityCaptureCommandNotificationDelegate> _commandNotificationDelegate;
    BOOL _throttlingBackWide;
    struct IONotificationPort { } *_ioNotificationPort;
    unsigned int _serviceNotification;
    CMContinuityCaptureConfiguration *_preStartedStreamConfig;
    id /* block */ _falsePreStartStreamRecoveryBlock;
    NSMutableArray *_entitiesToAbort;
    CMContinuityCaptureThermalMonitor *_thermalMonitor;
    int _throttlingFrameRateLevel;
    unsigned long long _thermalLevel;
    unsigned long long _sessionID;
    BOOL _forceCenterStageEnabled;
    NSObject<OS_dispatch_group> *_debugInfoLogBlock;
    BOOL _registeredBatteryNotifications;
    id /* block */ _statusHandler;
    NSMutableSet *_pendingStreamInterruptEntitySet;
}

@property (readonly, retain) CMContinuityCaptureRemoteClient *client;
@property (readonly, retain) NSArray *continuityCaptureDevices;
@property (readonly, retain) NSUUID *sidecarIdentifier;
@property (readonly, retain) AVCaptureSession *captureSession;
@property (readonly, retain) AVCaptureSession *audioCaptureSession;
@property (readonly) BOOL streaming;
@property (readonly) NSMutableSet *activeAVCaptureStreamEntitySet;
@property (readonly, retain) NSArray *controls;
@property (readonly) int throttlingFrameRateLevel;
@property (readonly) long long deskViewCameraMode;
@property (readonly) CMContinuityCapturePongSoundManager *pongSoundManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)_reset:(id /* block */)a0;
- (void)postNotification:(id)a0 value:(id)a1;
- (void)_observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)reset:(id /* block */)a0;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)_registerForBatteryNotifications;
- (void)lowPowerModeChanged:(id)a0;
- (void)invalidate;
- (void).cxx_destruct;
- (void)_abort:(id /* block */)a0;
- (void)abort:(id /* block */)a0;
- (void)_startStream:(id)a0 option:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)preStartStreamForConfiguration:(id)a0;
- (void)_unregisterBatteryNotifications;
- (void)activateClient:(id /* block */)a0;
- (unsigned int)getThrottlingFrameRateByThermalLevelAndLowPowerModeWithDefault:(unsigned int)a0;
- (BOOL)_configureAudioCaptureSessionForInput:(id)a0 andOutput:(id)a1;
- (BOOL)_configureCaptureSessionForConnections:(id)a0;
- (void)_executeAbort:(id /* block */)a0;
- (void)_handleThermalLevelLowPowerModeChange;
- (void)_logDebugInfo:(id /* block */)a0;
- (void)_postEvent:(id)a0 entity:(long long)a1;
- (void)_postNotification:(id)a0 value:(id)a1;
- (void)_removeConnections:(id)a0;
- (void)_restartStream:(id)a0 option:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)_setDeskViewCameraModeOnDefaultVideoCamera:(long long)a0;
- (BOOL)_startAudioCaptureSession:(id *)a0;
- (BOOL)_startVideoCaptureSessionIfNeeded:(id *)a0;
- (BOOL)_stopAudioCaptureSession:(id *)a0;
- (void)_stopStream:(long long)a0 option:(unsigned long long)a1 completion:(id /* block */)a2;
- (BOOL)_stopVideoCaptureSessionIfNeeded:(id *)a0;
- (BOOL)_stopVideoStreamForConnections:(id)a0 error:(id *)a1;
- (void)_terminateAVCSession:(id /* block */)a0;
- (void)_throttleFrameRateIfNeeded;
- (void)captureStillImage:(id)a0 entity:(long long)a1 completion:(id /* block */)a2;
- (BOOL)centerStageForceEnabled;
- (BOOL)configureAudioCaptureSessionForInput:(id)a0 andOutput:(id)a1;
- (BOOL)configureCaptureSessionForConnections:(id)a0;
- (BOOL)forceCenterStage:(BOOL)a0;
- (void)handleAVCNegotiation:(long long)a0 data:(id)a1;
- (void)handleSynchronizeAudioClockCompletion;
- (id)initWithSidecarRequest:(id)a0 videoPreviewLayer:(id)a1 commandNotificationDelegate:(id)a2 sessionID:(unsigned long long)a3 statusHandler:(id /* block */)a4;
- (BOOL)isCenterStageRunning;
- (BOOL)isDeskCamRunning;
- (BOOL)isUSBConnected;
- (void)logDebugInfo:(id /* block */)a0;
- (void)postDataEvent:(id)a0 entity:(long long)a1 data:(id)a2;
- (void)postEvent:(id)a0 entity:(long long)a1;
- (void)postStreamInterruptionForDevice:(id)a0;
- (void)preStartAVCaptureSessionForConfiguration:(id)a0;
- (BOOL)prewarmDeskCam;
- (void)removeConnections:(id)a0;
- (void)resetClientWithNewSidecarRequest:(id)a0 completion:(id /* block */)a1;
- (void)restartStream:(id)a0 option:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)setCenterStageForceEnabled:(BOOL)a0;
- (void)setDefaultVideoCameraFaceDrivenAFEnabled:(BOOL)a0;
- (void)setDeskViewCameraModeOnDefaultVideoCamera:(long long)a0;
- (void)setValueForControl:(id)a0 completion:(id /* block */)a1;
- (BOOL)setupCaptureDevices:(id)a0 multiCamRequired:(BOOL *)a1;
- (BOOL)setupClient:(id)a0;
- (void)setupControls;
- (BOOL)startAudioCaptureSession:(id *)a0;
- (void)startStream:(id)a0 option:(unsigned long long)a1 completion:(id /* block */)a2;
- (BOOL)startVideoCaptureSessionIfNeeded:(id *)a0;
- (BOOL)stopAudioCaptureSession:(id *)a0;
- (void)stopStream:(long long)a0 option:(unsigned long long)a1 completion:(id /* block */)a2;
- (BOOL)stopVideoCaptureSessionIfNeeded:(id *)a0;
- (BOOL)stopVideoStreamForConnections:(id)a0 error:(id *)a1;
- (void)tearDownPrewarmedDeskCamIfNeeded;
- (void)terminateAVCSession:(id /* block */)a0;
- (void)thermalLevelChanged:(unsigned long long)a0;
- (void)throttleFrameRateIfNeeded;

@end
