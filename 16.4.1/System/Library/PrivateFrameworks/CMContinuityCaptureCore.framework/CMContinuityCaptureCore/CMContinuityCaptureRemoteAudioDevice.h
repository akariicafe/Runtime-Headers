@class NSData, NSString, CMContinuityCaptureRemoteClient, AVCAudioStream, AVCMediaStreamNegotiator, AVCStreamInput, AVCaptureDevice, NSObject, AVCaptureAudioDataOutput, AVCaptureDeviceInput, CMContinuityCaptureRemoteCompositeDevice, CMContinuityCaptureDeviceCapabilities;
@protocol OS_dispatch_queue, OS_dispatch_group;

@interface CMContinuityCaptureRemoteAudioDevice : NSObject <CMContinuityCaptureRemoteDevice, AVCaptureAudioDataOutputSampleBufferDelegate> {
    NSObject<OS_dispatch_group> *_pendingAVCActivationGroup;
    NSObject<OS_dispatch_group> *_pendingAVCTeardownGroup;
    NSObject<OS_dispatch_group> *_pendingAVCNegotiationGroup;
    CMContinuityCaptureRemoteClient *_client;
    CMContinuityCaptureDeviceCapabilities *_capabilities;
    NSObject<OS_dispatch_queue> *_queue;
    long long _entity;
    CMContinuityCaptureRemoteCompositeDevice *_compositeDevice;
    BOOL _streaming;
    AVCAudioStream *_avcAudioStream;
    AVCStreamInput *_avcStreamInput;
    AVCaptureAudioDataOutput *_audioDataOutput;
    AVCaptureDeviceInput *_audioDeviceInput;
    long long _audioBufferOutputCounter;
    long long _audioBufferDropCounter;
    double _audioSampleRate;
    unsigned int _audioBytesPerSample;
    unsigned int _requiredAudioSampleCountPerBuffer;
    NSData *_remainingAudioDataFromPreviousSbuf;
    BOOL _audioClockIsSynchronized;
    unsigned long long _networkAudioSampleTime;
    unsigned long long _lastAudioSynchronizationNetworkSampleTime;
    AVCMediaStreamNegotiator *_avcStreamNegotiator;
    NSData *_currentAnswer;
    NSString *_lastStreamStartTime;
    NSString *_lastStreamStopTime;
    id /* block */ _bufferFailureCheckBlock;
    unsigned long long _numberOfAVCFramesDropped;
    BOOL _avCaptureSessionStarted;
    BOOL _avcActive;
    BOOL _disableBufferBlockSizeCheck;
}

@property (readonly, retain) AVCaptureDevice *audioDevice;
@property (readonly, retain) CMContinuityCaptureRemoteClient *client;
@property (readonly, retain) NSObject<OS_dispatch_queue> *queue;
@property (readonly) long long entity;
@property (readonly, retain) CMContinuityCaptureDeviceCapabilities *capabilities;
@property (readonly, weak) CMContinuityCaptureRemoteCompositeDevice *compositeDevice;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)captureOutput:(id)a0 didOutputSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 fromConnection:(id)a2;
- (void)_observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)captureOutput:(id)a0 didDropSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 fromConnection:(id)a2;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)streamDidStop:(id)a0;
- (void).cxx_destruct;
- (void)_abort:(id /* block */)a0;
- (void)abort:(id /* block */)a0;
- (void)stream:(id)a0 didStart:(BOOL)a1 error:(id)a2;
- (void)streamDidRTCPTimeOut:(id)a0;
- (void)streamDidRTPTimeOut:(id)a0;
- (void)streamDidServerDie:(id)a0;
- (void)didStartStreamInput:(id)a0;
- (void)didStopStreamInput:(id)a0;
- (void)_startStream:(id)a0 option:(unsigned long long)a1 completion:(id /* block */)a2;
- (id)newAudioStreamConfigWithIsWired:(BOOL)a0 key:(id)a1 streamInputID:(long long)a2 networkClock:(id)a3;
- (struct opaqueCMSampleBuffer { } *)_createSampleBufferForAudioData:(id)a0 dataRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 pts:(struct { long long x0; int x1; unsigned int x2; long long x3; })a2 formatDescription:(struct opaqueCMFormatDescription { } *)a3;
- (void)_dispatchAudioFrame:(struct opaqueCMSampleBuffer { } *)a0;
- (void)_postEvent:(id)a0 entity:(long long)a1;
- (void)_processIncomingAudioBuffer:(struct opaqueCMSampleBuffer { } *)a0;
- (void)_resetNetworkSampleTime;
- (BOOL)_shouldPrintDroppedSampleBufferLog:(long long)a0;
- (BOOL)_shouldPrintSampleBufferLog:(long long)a0;
- (void)_stopStream:(long long)a0 option:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)_terminateAVCSession:(id /* block */)a0;
- (void)clearAVCArtifacts;
- (id)createAVCAudioStreamForSidecarStream:(id)a0;
- (void)debugInfo:(id /* block */)a0;
- (void)dispatchFrame:(struct opaqueCMSampleBuffer { } *)a0 entity:(long long)a1 completion:(id /* block */)a2;
- (void)handleAVCNegotiation:(long long)a0 data:(id)a1;
- (void)handleSynchronizeAudioClockCompletion;
- (id)initWithCompositeDevice:(id)a0 entity:(long long)a1 capabilities:(id)a2 client:(id)a3;
- (void)postAVCStreamInterruption;
- (void)postDataEvent:(id)a0 entity:(long long)a1 data:(id)a2;
- (void)postEvent:(id)a0 entity:(long long)a1;
- (void)resetClient:(id)a0;
- (void)resetClientComplete:(id)a0;
- (void)setValueForControl:(id)a0 completion:(id /* block */)a1;
- (void)startAVCInputForConfiguration:(id)a0 completion:(id /* block */)a1;
- (void)startStream:(id)a0 option:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)stopAVCInput:(id /* block */)a0 option:(unsigned long long)a1;
- (void)stopStream:(long long)a0 option:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)terminateAVCSession:(id /* block */)a0;

@end
