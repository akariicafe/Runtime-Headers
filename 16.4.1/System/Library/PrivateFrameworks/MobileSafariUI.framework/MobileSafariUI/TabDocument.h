@class WBTab, WKBackForwardListItem, _SFNavigationIntent, SFBrowserDocumentTrackerInfo, UnifiedTabBarItem, NSUserActivity, LoadingController, SFDialogController, _SFSafeBrowsingController, _SFCalendarEventDetector, NSPointerArray, _SFSecIdentityPreferencesController, _WKSessionState, NSNumber, SFTextSearchMatchesCounter, TabDocumentView, WBSFluidProgressState, NSError, _SFPageLoadErrorController, STBlockingViewController, SFQuickLookDocument, WBSHistoryVisit, NSUUID, NSMutableArray, WBSApplicationManifestFetcher, PageLoadTestStatistics, _SFWebClipMetadataFetcher, SFTabStateData, TabOverviewItem, ActionPanelActivityItemProvider, UIImage, NSTimer, _SFNavigationUtilitiesManager, _WKActivatedElementInfo, WBSTranslationContext, NSHashTable, SFNavigationBarItem, LinkPreviewViewController, _SFReloadOptionsController, _SFPrintController, TabDocumentCollectionItem, WBSPermissionDialogThrottler, CSSearchableItemAttributeSet, WBSFluidProgressController, NSArray, _SFTelephonyNavigationMitigationPolicy, _SFDownload, _WKRemoteObjectInterface, _SFInjectedJavaScriptController, UIColor, WBSURLSpoofingMitigator, NSString, FindOnPageCompletionProvider, SFQuickLookDocumentWriter, TouchIconFetcher, PageLoadTest, NSURL, UIFindInteraction, _SFFormAutoFillController, WebBookmark, NSDictionary, _SFBrowserConfiguration, WBSSameDocumentNavigationToHistoryVisitCorrelator, TabBarItem, BrowserController, SFPinnableBanner, History, _WKUserInitiatedAction, _SFWebView, WKWebView, WBSSafariExtensionStateObserver, WBSHistoryContextController, _SFReaderController, _SFSafariSharingExtensionController, SLHighlight;
@protocol WBSWebExtensionWindow, SFReaderContext, LoadProgressObserver, SFAppSuggestionBanner, UIDragSession, TabDocumentDelegate;

@interface TabDocument : NSObject <_WKAppHighlightDelegate, SFHighlightAttributionPresenter, SFAppBannerMetaTagContentObserver, SFAppSuggestionBannerDelegate, LoadingControllerDelegate, PKAddPassesViewControllerDelegate, QuickWebsiteSearchEventListener, SFFormAutoFillControllerDelegate, WBSFluidProgressControllerWindowDelegate, WKNavigationDelegatePrivate, WKUIDelegatePrivate, SFDialogControllerDelegate, SFDialogViewControllerPresenting, _SFLinkPreviewHandler, _SFPageLoadErrorControllerDelegate, _SFPrintControllerDelegate, _SFReaderControllerDelegate, _SFWebViewDelegate, _WKDiagnosticLoggingDelegate, _WKFullscreenDelegate, _WKIconLoadingDelegate, _WKInputDelegate, _WKWebAuthenticationPanelDelegate, WBSTranslationConsentAlertHelperDelegate, WBSTranslationContextDelegate, SFQuickLookDocumentSource, WBTabGroupManagerObserver, WBSWebExtensionTab, LoadableResource, ReadingListMetadataProvider, SFDialogPresenting, SFMediaRecordingDocument, WBReusableTab, WBSFluidProgressStateSource, WBSOrderedTab, WBSTabItemSearchSupport, _SFAutoFillContextProviding, _SFBrowserDocument, _SFDownloadDelegate, _SFNavigationIntentHandling> {
    long long _retainCount;
    unsigned long long _progressAnimationSuppressedCount;
    NSString *_EVOrganizationName;
    NSError *_lastLoadError;
    NSError *_lastLoadErrorForFormatMenu;
    WBSURLSpoofingMitigator *_URLSpoofingMitigator;
    _WKSessionState *_savedSessionState;
    _WKRemoteObjectInterface *_siteSpecificSearchEventListenerInterface;
    _WKRemoteObjectInterface *_appBannerMetaTagContentObserverInterface;
    _SFSafariSharingExtensionController *_sharingExtensionController;
    _SFCalendarEventDetector *_calendarEventDetector;
    _SFInjectedJavaScriptController *_activityJSController;
    _SFWebClipMetadataFetcher *_webClipMetadataFetcher;
    TouchIconFetcher *_touchIconFetcher;
    NSMutableArray *_fallbackURLs;
    unsigned long long _lastReaderDeactivationMode;
    FindOnPageCompletionProvider *_findCompletionProvider;
    _SFFormAutoFillController *_autoFillController;
    id /* block */ _autoFillAuthenticationCompletionBlock;
    LoadingController *_loadingController;
    WBSFluidProgressController *_fluidProgressController;
    NSDictionary *_initialArticleScrollDictionaryForCloudTab;
    NSURL *_overrideURLForHTTPAuthenticationDialog;
    WKBackForwardListItem *_parentTabItem;
    WBSApplicationManifestFetcher *_applicationManifestFetcher;
    _SFDownload *_activeDownload;
    TabDocumentView *_cachedView;
    unsigned long long _currentUsageState;
    NSURL *_lastURLForWhichUsageStateWasSet;
    long long _concurrentNavigationActionPolicyDecisions;
    NSHashTable *_renderingProgressEventObservers;
    NSHashTable *_navigationObservers;
    SFNavigationBarItem *_navigationBarItem;
    _SFReaderController *_readerContext;
    WebBookmark *_bookmarkForIconFetching;
    WKBackForwardListItem *_backForwardListItemForCurrentAppLinkBannerCheck;
    WKBackForwardListItem *_backForwardListItemForCurrentHighlightBannerCheck;
    SLHighlight *_highlightFromNavigation;
    WKBackForwardListItem *_backForwardListItemForCurrentNoteTakingCheck;
    SFPinnableBanner<SFAppSuggestionBanner> *_storeBanner;
    SFPinnableBanner *_appBannerPendingFirstPaint;
    NSTimer *_appBannerRemovalTimer;
    _SFTelephonyNavigationMitigationPolicy *_telephonyNavigationPolicy;
    _WKUserInitiatedAction *_lastUserInitiatedAction;
    _SFSecIdentityPreferencesController *_secIdentityPreferencesController;
    PageLoadTest *_pageLoadTest;
    NSTimer *_donateTextTimer;
    NSTimer *_unresponsiveWebProcessTimer;
    id /* block */ _unresponsiveWebProcessBlock;
    _SFNavigationIntent *_deferredDropNavigationIntent;
    unsigned long long _deferredDropNavigationIntentGeneration;
    NSNumber *_deferredDropWasHandledByWebKit;
    id<UIDragSession> _webKitDragSession;
    unsigned long long _cachedMediaStateIcon;
    NSPointerArray *_spawnedTabDocuments;
    NSURL *_cachedCanonicalURL;
    ActionPanelActivityItemProvider *_cachedActivityItemProvider;
    id /* block */ _pendingNavigationActionDueToExternalSchemePromptHandler;
    NSURL *_cachedURL;
    id _faviconToken;
    NSURL *_originalURL;
    NSTimer *_updateFaviconTimer;
    NSURL *_urlToReloadForcingContentBlockers;
    BOOL _disableContentBlockersWhenReloading;
    BOOL _previousURLWasLoadedWithContentBlockersEnabled;
    NSURL *_urlToReloadEnablingPrivateRelay;
    BOOL _disablePrivateRelayWhenReloading;
    BOOL _previousURLWasLoadedWithPrivateRelay;
    BOOL _isNavigatingViaNormalReload;
    BOOL _wasLoadedWithLockdownModeEnabled;
    BOOL _pendingNavigationWillLoadWithLockdownModeEnabled;
    _SFNavigationUtilitiesManager *_navigationUtilitiesManager;
    NSString *_domainWhereUserDeclinedAutomaticStrongPassword;
    _WKActivatedElementInfo *_elementInfoToAnimateForNextDownload;
    _SFDownload *_downloadReflectedInFluidProgress;
    BOOL _closeWhenNextDownloadStarts;
    BOOL _loadNextNavigationInline;
    BOOL _EVOrganizationNameIsValid;
    BOOL _forwardActivityToCoreSpotlight;
    BOOL _loadWasUserDriven;
    BOOL _userDrivenLoadWasConsumed;
    BOOL _skipSyncableTabUpdates;
    BOOL _shouldDismissReaderInReponseToSameDocumentNavigation;
    BOOL _allowURLAsTitle;
    BOOL _wasOpenedFromHistory;
    BOOL _quickLookDocumentCheckCompleted;
    BOOL _didFirstPaint;
    BOOL _shouldSuppressDialogsThatBlockWebProcessForProvisionalNavigation;
    BOOL _shouldResetPrintSuppressionOnNextCommit;
    BOOL _sourceApplicationIsValid;
    BOOL _isDisplayingTelephonyPrompt;
    BOOL _isDecidingNavigationResponsePolicyForMainFrameDownload;
    NSURL *_urlForDisplayedContent;
    BOOL _hasFocusedInputFieldOnCurrentPage;
    BOOL _suppressCrashBanner;
    BOOL _needsSendTelemetryForProvisionalLoad;
    BOOL _webViewIsLoading;
    BOOL _gestureRequiresGoBackToParentTab;
    BOOL _didCommitCurrentNavigation;
    BOOL _didQuickStopWhileBlank;
    BOOL _allowsExternalRedirectWithoutPrompting;
    BOOL _allowsSwitchingToPinnedTabOnNavigation;
    SFQuickLookDocumentWriter *_quickLookDocumentWriter;
    NSString *_suggestedFilenameForNextCommit;
    BOOL _shouldReflectTranslationAsFluidProgress;
    struct { long long impressionProvenance; unsigned char shouldIgnoreURLAsAnalyticsImpression : 1; unsigned char shouldNotifyImpressionAnalyticsRecorder : 1; unsigned char shouldNotifyImpressionAnalyticsRecorderWhenDisplayedToUser : 1; BOOL updateLocalAttributesWhileHibernated; } _flags;
    unsigned long long _phishingURLClassification;
    double _idForWebExtensions;
    WBSSafariExtensionStateObserver *_webExtensionsStateObserver;
    NSTimer *_fireOnUpdatedWebExtensionEventTimer;
    SFTextSearchMatchesCounter *_findMatchesCounter;
    WBSPermissionDialogThrottler *_permissionDialogThrottler;
    BOOL _hasDeferredNavigation;
    NSURL *_deferredNavigationURL;
    NSString *_deferredNavigationTitle;
    NSString *_cachedDebugTitle;
    NSURL *_cachedURLForDebugTitle;
    TabDocumentCollectionItem *_tabCollectionItem;
}

@property (nonatomic, getter=isShowingContinuous) BOOL showingContinuous;
@property (nonatomic) long long policy;
@property (nonatomic) unsigned long long changedPropertiesForOnUpdatedWebExtensionEvent;
@property (readonly, nonatomic) WBSFluidProgressState *progressState;
@property (nonatomic, getter=isActive) BOOL active;
@property (readonly, nonatomic) _SFWebView *frontWebView;
@property (readonly, weak, nonatomic) BrowserController *browserController;
@property (weak, nonatomic) TabDocument *parentTabDocumentForBackClosesSpawnedTab;
@property (readonly, nonatomic) UIFindInteraction *findInteraction;
@property (retain, nonatomic) SFQuickLookDocument *quickLookDocument;
@property (nonatomic) BOOL wasOpenedFromLink;
@property (nonatomic, getter=isShowingReader) BOOL showingReader;
@property (nonatomic) BOOL shouldRestoreReader;
@property (nonatomic) long long readerViewTopScrollOffset;
@property (retain, nonatomic) SFPinnableBanner *appBanner;
@property (nonatomic) BOOL shouldRevealAppLinkBannerForNextCommit;
@property (nonatomic) BOOL appBannerRemovalWasDeferred;
@property (copy, nonatomic) NSString *sourceApplicationBundleIdentifierForNextCommit;
@property (nonatomic) BOOL storeBannersAreDisabled;
@property (nonatomic) long long externalAppRedirectState;
@property (retain, nonatomic) UIImage *siteCustomIcon;
@property (nonatomic) BOOL siteCustomIconPrecomposed;
@property (readonly, nonatomic, getter=isShowingErrorPage) BOOL showingErrorPage;
@property (readonly, nonatomic) TabOverviewItem *tabOverviewItem;
@property (retain, nonatomic) WebBookmark *readingListBookmark;
@property (nonatomic) BOOL suppressingProgressAnimationForNavigationGesture;
@property (nonatomic) BOOL wantsReaderWhenActivated;
@property (readonly, nonatomic, getter=isPrivateBrowsingEnabled) BOOL privateBrowsingEnabled;
@property (nonatomic, getter=isDisplayingStandaloneImage) BOOL displayingStandaloneImage;
@property (nonatomic, getter=isDisplayingStandaloneMedia) BOOL displayingStandaloneMedia;
@property (nonatomic, getter=wasHibernatedDueToMemoryWarning) BOOL hibernatedDueToMemoryWarning;
@property (nonatomic) unsigned long long sessionStateRestorationSource;
@property (weak, nonatomic) id<TabDocumentDelegate> delegate;
@property (weak, nonatomic) id<LoadProgressObserver> loadProgressObserver;
@property (readonly, nonatomic) _SFBrowserConfiguration *configuration;
@property (readonly, nonatomic) BOOL webViewIsFullscreen;
@property (readonly, nonatomic) BOOL isSecure;
@property (readonly, nonatomic) TabDocumentView *view;
@property (readonly, nonatomic, getter=isExitingElementFullscreen) BOOL exitingElementFullscreen;
@property (retain, nonatomic) LinkPreviewViewController *linkPreviewViewController;
@property (retain, nonatomic) PageLoadTestStatistics *pageLoadStatistics;
@property (nonatomic) BOOL allowsProgrammaticFocusToBeginInputSession;
@property (readonly, nonatomic) _SFSafariSharingExtensionController *sharingExtensionController;
@property (readonly, nonatomic) _SFInjectedJavaScriptController *activityJSController;
@property (retain, nonatomic) NSURL *URLFromExternalApplication;
@property (readonly, nonatomic) _SFWebClipMetadataFetcher *webClipMetadataFetcher;
@property (readonly, nonatomic) _SFPageLoadErrorController *pageLoadErrorController;
@property (readonly, nonatomic) SFDialogController *dialogController;
@property (readonly, nonatomic, getter=isShowingInlineDialog) BOOL showingInlineDialog;
@property (readonly, nonatomic) WBSSameDocumentNavigationToHistoryVisitCorrelator *sameDocumentNavigationToHistoryVisitCorrelator;
@property (readonly, nonatomic) SFTabStateData *tabStateData;
@property (readonly, nonatomic) long long pageStatus;
@property (nonatomic) BOOL persistWhenHibernated;
@property (readonly, nonatomic) BOOL canSetPinned;
@property (nonatomic, getter=isPinned) BOOL pinned;
@property (readonly, nonatomic, getter=isPinnable) BOOL pinnable;
@property (copy, nonatomic) NSString *pinnedTitle;
@property (copy, nonatomic) NSURL *pinnedURL;
@property (nonatomic, getter=isUnread) BOOL unread;
@property (copy, nonatomic) NSArray *shareParticipants;
@property (nonatomic) BOOL isBlank;
@property (nonatomic) BOOL isPlaceholder;
@property (nonatomic, getter=isInteractivelyInserted) BOOL interactivelyInserted;
@property (nonatomic) BOOL hasBeenInserted;
@property (copy, nonatomic) NSString *libraryType;
@property (readonly, nonatomic, getter=isShowingSystemStartPage) BOOL showingSystemStartPage;
@property (nonatomic, getter=isPreparingForNewUserActivity) BOOL preparingForNewUserActivity;
@property (readonly, nonatomic) TabBarItem *tabBarItem;
@property (readonly, nonatomic) NSArray *tabCollectionItems;
@property (readonly, nonatomic) UnifiedTabBarItem *unifiedTabBarItem;
@property (readonly, nonatomic) UnifiedTabBarItem *currentUnifiedTabBarItem;
@property (readonly, nonatomic) UIColor *themeColor;
@property (readonly, nonatomic) SFNavigationBarItem *navigationBarItem;
@property (readonly, nonatomic) BOOL isShowingSearchQueryInNavigationBar;
@property (readonly, nonatomic) _SFSafeBrowsingController *safeBrowsingController;
@property (readonly, nonatomic, getter=isHibernated) BOOL hibernated;
@property (readonly, nonatomic, getter=isAlive) BOOL alive;
@property (readonly, nonatomic) _WKSessionState *sessionState;
@property (readonly, nonatomic, getter=isLoading) BOOL loading;
@property (readonly, nonatomic) BOOL canStopLoading;
@property (nonatomic) struct CGPoint { double x; double y; } scrollPoint;
@property (readonly, nonatomic) NSString *titleForCloudTab;
@property (readonly, nonatomic) NSString *suggestedTitleForCurrentURL;
@property (readonly, nonatomic) NSURL *cachedCanonicalURLOrURLForSharing;
@property (readonly, nonatomic) ActionPanelActivityItemProvider *activityItemProvider;
@property (nonatomic) BOOL supportsReuseForSpotlightSearch;
@property (copy, nonatomic) NSURL *tabReuseURL;
@property (copy, nonatomic) NSUUID *uuid;
@property (readonly, nonatomic) BOOL canGoBackToParentTab;
@property (nonatomic) double lastViewedTime;
@property (nonatomic, getter=isClosed) BOOL closed;
@property (readonly, nonatomic) BOOL shouldPersist;
@property (retain, nonatomic) WBTab *tabGroupTab;
@property (readonly, copy, nonatomic) id /* block */ tabUpdateBlock;
@property (retain, nonatomic) WBSHistoryVisit *lastVisit;
@property (copy, nonatomic) NSString *customUserAgent;
@property (nonatomic, getter=isPerformingFirstLoadAfterOpenInBackground) BOOL performingFirstLoadAfterOpenInBackground;
@property (nonatomic, getter=isPerformingRedirectAfterOpenInBackground) BOOL performingRedirectAfterOpenInBackground;
@property (readonly, nonatomic) BOOL didFinishDocumentLoad;
@property (readonly, nonatomic) BOOL didFirstLayout;
@property (readonly, nonatomic) BOOL didFirstMeaningfulPaint;
@property (readonly, nonatomic) BOOL contentIsReadyForSnapshot;
@property (readonly, nonatomic, getter=isShowingFindOnPage) BOOL showingFindOnPage;
@property (readonly, nonatomic) _SFPrintController *printController;
@property (retain, nonatomic) NSUUID *ownerUUID;
@property (retain, nonatomic) CSSearchableItemAttributeSet *searchableItemAttributes;
@property (copy, nonatomic) NSString *sourceApplicationBundleIdentifier;
@property (readonly, nonatomic) NSArray *ancestorUUIDs;
@property (readonly, nonatomic) BOOL hasDoneReaderDetection;
@property (readonly, nonatomic) _SFWebView *readerWebView;
@property (readonly, nonatomic, getter=isControlledByAutomation) BOOL controlledByAutomation;
@property (readonly, nonatomic) unsigned long long mediaStateIcon;
@property (nonatomic) BOOL mediaCaptureEnabled;
@property (readonly, nonatomic) BOOL shouldObscureForDigitalHealth;
@property (weak, nonatomic) STBlockingViewController *associatedBlockingViewController;
@property (nonatomic) unsigned long long mediaSuspensionReasons;
@property (readonly, nonatomic) WBSHistoryContextController *contextController;
@property (readonly, nonatomic) History *history;
@property (nonatomic) double pageZoomFactor;
@property (readonly, nonatomic) BOOL hasFormControlInteraction;
@property (readonly, nonatomic) BOOL canShowPageFormatMenu;
@property (nonatomic) BOOL suppressWebExtensionEvents;
@property (readonly, nonatomic) BOOL previousLoadingCompleteStateForWebExtensionOnUpdatedEvent;
@property (readonly, copy, nonatomic) NSString *previousTitleForWebExtensionOnUpdatedEvent;
@property (readonly, nonatomic) NSURL *previousURLForWebExtensionOnUpdatedEvent;
@property (readonly, nonatomic, getter=isShowingStartPageOverriddenByExtension) BOOL showingStartPageOverriddenByExtension;
@property (readonly, nonatomic) NSUserActivity *userActivity;
@property (copy, nonatomic) id /* block */ linkAddedToUserActivityCallback;
@property (retain, nonatomic) NSUserActivity *userActivityFromNotes;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) WKBackForwardListItem *currentBackForwardListItem;
@property (readonly, nonatomic) NSURL *attributionPresenterURL;
@property (readonly, nonatomic) double idForWebExtensions;
@property (readonly, nonatomic) WKWebView *webViewForExtensions;
@property (readonly, copy, nonatomic) NSArray *webViewsThatCanReceiveMessages;
@property (readonly, nonatomic) double parentTabIDForWebExtensions;
@property (readonly, nonatomic) NSURL *urlForExtensions;
@property (readonly, nonatomic) NSURL *expectedOrCurrentURL;
@property (readonly, nonatomic) NSURL *expectedOrCurrentURLOrLastActiveURLIfCrashed;
@property (readonly, nonatomic) NSURL *pendingURLForWebExtensions;
@property (readonly, nonatomic) BOOL isLoadingComplete;
@property (readonly, nonatomic) BOOL isAudible;
@property (readonly, nonatomic) BOOL isMuted;
@property (readonly, nonatomic) BOOL isFrontmost;
@property (readonly, nonatomic) BOOL isPinnedTab;
@property (readonly, nonatomic) BOOL isPrivate;
@property (readonly, nonatomic) BOOL isArticle;
@property (readonly, nonatomic) BOOL isInReaderMode;
@property (readonly, copy, nonatomic) NSString *tabTitle;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } tabViewSize;
@property (readonly, nonatomic) id<WBSWebExtensionWindow> webExtensionWindow;
@property (nonatomic) double zoomFactor;
@property (readonly, nonatomic) WBSTranslationContext *translationContext;
@property (copy, nonatomic) NSDictionary *extensionIdentifierToDynamicallyInjectedStyleSheets;
@property (readonly, nonatomic) double estimatedProgress;
@property (readonly, nonatomic, getter=isContentReady) BOOL contentReady;
@property (readonly, nonatomic) BOOL canOverrideStatusBar;
@property (readonly, nonatomic) BOOL audioOnly;
@property (readonly, copy, nonatomic) NSString *URLString;
@property (readonly, copy, nonatomic) NSString *identifier;
@property (readonly, copy, nonatomic) NSArray *ancestorTabIdentifiers;
@property (readonly, copy, nonatomic) NSString *windowIdentifier;
@property (readonly, nonatomic) BOOL shouldSelectOriginatingTabWhenClosed;
@property (readonly, nonatomic, getter=isClosing) BOOL closing;
@property (readonly, nonatomic) double lastActivationTime;
@property (readonly, copy, nonatomic) NSString *title;
@property (copy, nonatomic) NSString *titleForLastSearch;
@property (copy, nonatomic) NSArray *titleWords;
@property (copy, nonatomic) NSString *URLStringForLastSearch;
@property (copy, nonatomic) NSArray *URLStringComponents;
@property (copy, nonatomic) NSString *lastSearchTerm;
@property (nonatomic) BOOL matchedLastSearch;
@property (readonly, nonatomic) NSString *currentStrongPassword;
@property (readonly, nonatomic) NSString *defaultStrongPassword;
@property (readonly, nonatomic) NSString *alphanumericStrongPassword;
@property (readonly, nonatomic) _SFWebView *webView;
@property (readonly, nonatomic) _SFWebView *activeWebView;
@property (readonly, nonatomic) _SFReloadOptionsController *reloadOptionsController;
@property (readonly, nonatomic) id<SFReaderContext> readerContext;
@property (readonly, nonatomic) NSURL *URLForPerSitePreferences;
@property (readonly, nonatomic) BOOL wasLoadedWithContentBlockersEnabled;
@property (readonly, nonatomic) BOOL wasLoadedWithPrivateRelay;
@property (nonatomic) BOOL isNavigatingViaReloadWithoutPrivateRelay;
@property (readonly, nonatomic) BOOL canHideToolbar;
@property (readonly, nonatomic) BOOL canChangeSearchFieldPosition;
@property (readonly, nonatomic) SFBrowserDocumentTrackerInfo *trackerInfo;

+ (id)tabDocumentForWKWebView:(id)a0;
+ (id)urlForExternalURL:(id)a0;
+ (id)blankTabTitleWithLibraryType:(id)a0 controlledByAutomation:(BOOL)a1;

- (void)invalidateSourceApplication;
- (void)toggleMediaStateMuted;
- (void)evictFromTabReuse;
- (void)reloadUserInitiated;
- (void)updateTabTitle;
- (void)select;
- (id)initWithBrowserController:(id)a0;
- (void)mute;
- (void)willDismissLinkPreviewViewController;
- (id)URLForStatePersisting;
- (void)validateExtensionToolbarItems;
- (void)toggleReader;
- (void)setBrowserController:(id)a0 afterTabGroupReuse:(BOOL)a1;
- (BOOL)translationContextIsUsingPrivateBrowsing:(id)a0;
- (id)committedURL;
- (id)loadCloudTab:(id)a0;
- (void)showFindOnPage;
- (void)unmute;
- (void)hibernate;
- (void)showDownload:(id)a0;
- (id)tabStateDataForQuickUpdate;
- (void)commitPreviewViewController:(id)a0;
- (void)handleNavigationIntent:(id)a0 completion:(id /* block */)a1;
- (id)URLForSharing;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })sourceRectForPopoverActionPicker:(id)a0;
- (void)goBack;
- (void)webView:(id)a0 didFailNavigation:(id)a1 withError:(id)a2;
- (id)retain;
- (void)_webView:(id)a0 storeAppHighlight:(id)a1 inNewGroup:(BOOL)a2 requestOriginatedInApp:(BOOL)a3;
- (void)updateThemeColorAndUnderPageBackground:(BOOL)a0;
- (id)presentingViewControllerForAction:(id)a0;
- (void)webView:(id)a0 didStartProvisionalNavigation:(id)a1;
- (id)presentingViewControllerForPrintController:(id)a0;
- (BOOL)sfWebViewShouldFillStringForFind:(id)a0;
- (void)webView:(id)a0 didFinishNavigation:(id)a1;
- (void)translationContextReloadPageInOriginalLanguage:(id)a0;
- (id)readerPageArchiveURL;
- (id)resultOfLoadingURL:(id)a0;
- (void)clearReaderScrollInformation;
- (void)updateAccessibilityIdentifier;
- (void)displayNewTabOverridePageIfNecessary;
- (void)findOnPageCompletionProvider:(id)a0 setStringToComplete:(id)a1;
- (id)forwardListMenuWithLimit:(int)a0;
- (BOOL)isShowingReadingListArchive;
- (void)statusBarIndicatorTappedWithCompletionHandler:(id /* block */)a0;
- (BOOL)canGoBack;
- (void)_closeTabDocumentAnimated:(BOOL)a0;
- (id)_backForwardList;
- (void)webView:(id)a0 didFailProvisionalNavigation:(id)a1 withError:(id)a2;
- (void)stopLoading;
- (id)loadURL:(id)a0 userDriven:(BOOL)a1;
- (void)dismissAppSuggestionBanner:(id)a0;
- (BOOL)shouldActivateReaderWhenAvailable;
- (void)panel:(id)a0 decidePolicyForLocalAuthenticatorWithCompletionHandler:(id /* block */)a1;
- (id)loadRequest:(id)a0 userDriven:(BOOL)a1;
- (long long)_webView:(id)a0 dataOwnerForDropSession:(id)a1;
- (void)_webView:(id)a0 dataInteractionOperationWasHandled:(BOOL)a1 forSession:(id)a2 itemProviders:(id)a3;
- (id)linkPreviewHelper:(id)a0 resultOfLoadingURL:(id)a1;
- (void)goForward;
- (void)_webView:(id)a0 willStartInputSession:(id)a1;
- (void)_webView:(id)a0 contextMenuConfigurationForElement:(id)a1 completionHandler:(id /* block */)a2;
- (void)increasePageZoomSetting;
- (void)didAutoDetectSiteSpecificSearchProviderWithOriginatingURL:(id)a0 searchURLTemplate:(id)a1;
- (void)readerController:(id)a0 didExtractArticleText:(id)a1 withMetadata:(id)a2;
- (BOOL)canGoForward;
- (void)linkPreviewHelper:(id)a0 addURLToReadingList:(id)a1;
- (void)makeStrongPasswordFieldViewableAndEditable:(BOOL)a0;
- (void)_webView:(id)a0 checkUserMediaPermissionForURL:(id)a1 mainFrameURL:(id)a2 frameIdentifier:(unsigned long long)a3 decisionHandler:(id /* block */)a4;
- (void)formAutoFillControllerDidFocusSensitiveFormField:(id)a0;
- (BOOL)sfWebViewCanFindNextOrPrevious:(id)a0;
- (void)endSuppressingProgressAnimation;
- (void)_webView:(id)a0 mediaCaptureStateDidChange:(unsigned long long)a1;
- (id)previewViewControllerForURL:(id)a0;
- (oneway void)release;
- (void)presentNextDialogIfNeeded;
- (void)_webView:(id)a0 didChangeSafeAreaShouldAffectObscuredInsets:(BOOL)a1;
- (void)pageLoadErrorControllerClosePage:(id)a0;
- (id)initWithTitle:(id)a0 URL:(id)a1 UUID:(id)a2 privateBrowsingEnabled:(BOOL)a3 controlledByAutomation:(BOOL)a4 hibernated:(BOOL)a5 bookmark:(id)a6 browserController:(id)a7 relatedWebView:(id)a8;
- (void)translationContextNeedsScrollHeightVisibilityUpdate:(id)a0;
- (void)updateTabIcon;
- (void)linkPreviewHelper:(id)a0 didProduceNavigationIntent:(id)a1 forAction:(long long)a2;
- (id)loadingDialogPageTitleForPrintController:(id)a0;
- (void)updateAncestryToChildOfTopLevelAncestorRelatedTab:(id)a0;
- (void)_webView:(id)a0 navigationDidFinishDocumentLoad:(id)a1;
- (void)didActivateReader;
- (void)updateReadingListItemPreviewText:(id)a0;
- (void)userDeclinedAutomaticStrongPasswordForCurrentDomainOnTabWithUUID:(id)a0;
- (void)_webView:(id)a0 didResignInputElementStrongPasswordAppearanceWithUserInfo:(id)a1;
- (id)initWithTabGroupTab:(id)a0 privateBrowsingEnabled:(BOOL)a1 hibernated:(BOOL)a2 bookmark:(id)a3 browserController:(id)a4;
- (id)translationConsentAlertHelperViewControllerToPresentDetailsFrom:(id)a0;
- (void)perSiteSettingsUIPresentSettings;
- (void)_webView:(id)a0 requestStorageAccessPanelForDomain:(id)a1 underCurrentDomain:(id)a2 completionHandler:(id /* block */)a3;
- (void)_webViewWillExitElementFullscreen:(id)a0;
- (void)clearPageLoadStatistics;
- (void)goToBackForwardListItem:(id)a0;
- (BOOL)pageLoadErrorControllerShouldReloadAfterError:(id)a0;
- (void)readerController:(id)a0 didDetermineReaderAvailability:(id)a1 dueTo:(long long)a2;
- (void)_webViewDidEnterFullscreen:(id)a0;
- (id)pageTitleForPrintController:(id)a0;
- (void)collectReadingListItemInfo;
- (id)customUserVisibleStringForReadingListBookmarkURL:(id)a0;
- (void)downloadDidFinish:(id)a0;
- (void)createBrowserReaderViewIfNeeded;
- (id)_webView:(id)a0 contextMenuContentPreviewForElement:(id)a1;
- (void)_webViewDidDisableInspectorBrowserDomain:(id)a0;
- (void)_webView:(id)a0 requestGeolocationAuthorizationForURL:(id)a1 frame:(id)a2 decisionHandler:(id /* block */)a3;
- (BOOL)printControllerPageIsLoading:(id)a0;
- (void)reloadFromOrigin;
- (void)_webView:(id)a0 logDiagnosticMessageWithDomain:(id)a1 domain:(long long)a2;
- (void)webView:(id)a0 didCommitNavigation:(id)a1;
- (id)currentFluidProgressStateSource;
- (BOOL)formAutoFillControllerShouldDisableStreamlinedLogin:(id)a0;
- (void)snapshotWithSize:(struct CGSize { double x0; double x1; })a0 topBackdropHeight:(double)a1 options:(unsigned long long)a2 completion:(id /* block */)a3;
- (void)sfWebViewDidEndFormControlInteraction:(id)a0;
- (id)_initWithBrowserController:(id)a0 configuration:(id)a1;
- (void)translationContext:(id)a0 showFirstTimeConsentAlertWithCompletionHandler:(id /* block */)a1;
- (void)loadURL:(id)a0 title:(id)a1 deferNavigationWhenNotActive:(BOOL)a2 skipSyncableTabUpdates:(BOOL)a3;
- (void)webViewDidClose:(id)a0;
- (int)readingListBookmarkID;
- (id)pdfView;
- (void)updateUserActivity;
- (id)URL;
- (void)goForwardAllowingNewTabToSpawnIfNeeded:(BOOL)a0;
- (void)_webViewDidEndNavigationGesture:(id)a0 withNavigationToBackForwardListItem:(id)a1;
- (BOOL)hasFailedURL;
- (void)doneWaitingToContinueUserActivity;
- (void)pageLoadErrorController:(id)a0 presentViewController:(id)a1;
- (void)setAllowsRemoteInspection:(BOOL)a0;
- (BOOL)_webView:(id)a0 gestureRecognizerCouldPinch:(id)a1;
- (void)_webView:(id)a0 queryPermission:(id)a1 forOrigin:(id)a2 completionHandler:(id /* block */)a3;
- (void)_webView:(id)a0 accessoryViewCustomButtonTappedInFormInputSession:(id)a1;
- (void)_webViewWebProcessDidCrash:(id)a0;
- (BOOL)formAutoFillControllerDidUserDeclineAutomaticStrongPasswordForCurrentDomain:(id)a0;
- (void)_webView:(id)a0 logDiagnosticMessageWithEnhancedPrivacy:(id)a1 description:(id)a2;
- (void)webView:(id)a0 didReceiveAuthenticationChallenge:(id)a1 completionHandler:(id /* block */)a2;
- (void)_webView:(id)a0 contextMenuForElement:(id)a1 willCommitWithAnimator:(id)a2;
- (void)translationContext:(id)a0 urlForCurrentPageWithCompletionHandler:(id /* block */)a1;
- (BOOL)_tryRetain;
- (void)sfWebViewDidStartFormControlInteraction:(id)a0;
- (void)_unresponsiveWebProcessTimerFired:(id)a0;
- (void)linkPreviewHelper:(id)a0 commitPreviewViewControllerForAction:(long long)a1 withTabOrder:(long long)a2;
- (void)snapshotWithSize:(struct CGSize { double x0; double x1; })a0 options:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)getApplicationManifestWithCompletionHandler:(id /* block */)a0;
- (void)loadURL:(id)a0;
- (void)dispatchNavigationIntent:(id)a0;
- (void)setInitialURLForStatePersisting:(id)a0 title:(id)a1;
- (void)printController:(id)a0 didCreatePrintInfo:(id)a1;
- (void)updateUsageTrackingInformationIfNecessaryGivenDocumentIsCurrent:(BOOL)a0;
- (void)_webView:(id)a0 didFinishLoadForQuickLookDocumentInMainFrame:(id)a1;
- (void)setPinned:(BOOL)a0 notify:(BOOL)a1;
- (void)willClose;
- (void)_webView:(id)a0 navigation:(id)a1 didFailProvisionalLoadInSubframe:(id)a2 withError:(id)a3;
- (void)beginSuppressingProgressAnimation;
- (BOOL)formAutoFillControllerShouldShowIconsInPasswordPicker:(id)a0;
- (void)_translationContextStateDidChange:(id)a0;
- (void)endSuppressingProgressAnimationAnimated:(BOOL)a0;
- (void)restoreScrollPositionWithCloudTab:(id)a0;
- (void)decreasePageZoomSetting;
- (BOOL)hideFindOnPage;
- (void)unhibernate;
- (void)_webView:(id)a0 imageOrMediaDocumentSizeChanged:(struct CGSize { double x0; double x1; })a1;
- (void)_webView:(id)a0 dataInteraction:(id)a1 session:(id)a2 didEndWithOperation:(unsigned long long)a3;
- (void)applyHighlightFromNotesIfNeeded;
- (void)_webView:(id)a0 logDiagnosticMessageWithResult:(id)a1 description:(id)a2 result:(long long)a3;
- (id)_webView:(id)a0 alternateURLFromImage:(id)a1 userInfo:(id *)a2;
- (id)permissionDialogThrottler;
- (void)dialogController:(id)a0 dismissViewController:(id)a1 withAdditionalAnimations:(id /* block */)a2;
- (void)saveWebArchiveToPath:(id)a0 completion:(id /* block */)a1;
- (void)sfWebViewDidBecomeFirstResponder:(id)a0;
- (void)_webViewWillEndNavigationGesture:(id)a0 withNavigationToBackForwardListItem:(id)a1;
- (void)reloadFromOriginUserInitiated;
- (BOOL)shouldBlockAppSuggestionBanner:(id)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_webView:(id)a0 finalObscuredInsetsForScrollView:(id)a1 withVelocity:(struct CGPoint { double x0; double x1; })a2 targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)a3;
- (void)formAutoFillControllerGetAuthenticationForAutoFill:(id)a0 completion:(id /* block */)a1;
- (BOOL)_webView:(id)a0 performDataInteractionOperationWithItemProviders:(id)a1;
- (void)updateUsesDarkTheme;
- (void)freezeForNavigationGesture;
- (void)setClosed:(BOOL)a0 userDriven:(BOOL)a1;
- (void)presentDialog:(id)a0 sender:(id)a1;
- (void)webViewDidScroll;
- (void)restoreAllHighlightsData;
- (void)dialogController:(id)a0 willPresentDialog:(id)a1;
- (void)readerController:(id)a0 didClickLinkInReaderWithRequest:(id)a1;
- (void)_webView:(id)a0 decidePolicyForSOAuthorizationLoadWithCurrentPolicy:(long long)a1 forExtension:(id)a2 completionHandler:(id /* block */)a3;
- (void)_webView:(id)a0 requestUserMediaAuthorizationForDevices:(unsigned long long)a1 url:(id)a2 mainFrameURL:(id)a3 decisionHandler:(id /* block */)a4;
- (void)linkPreviewHelper:(id)a0 redirectToExternalNavigationResult:(id)a1;
- (void)translationContext:(id)a0 shouldReportProgressInUnifiedField:(BOOL)a1;
- (BOOL)currentPageLoadedFromReadingList;
- (BOOL)pageLoadErrorControllerShouldPermanentlyAcceptCertificate:(id)a0;
- (void)removeNavigationObserver:(id)a0;
- (void)setNeedsNewTabSnapshot;
- (BOOL)isReaderAvailable;
- (BOOL)formAutoFillControllerCanPrefillForm:(id)a0;
- (void)loadWindowDotOpenExternalNavigationResult:(id)a0 fromOriginalRequest:(id)a1;
- (void)_webViewFullscreenMayReturnToInline:(id)a0;
- (void)pageLoadErrorController:(id)a0 loadFailedRequestAfterError:(id)a1;
- (void)updateTabIconWithDelay:(double)a0;
- (void)clearFluidProgressState;
- (void)_webView:(id)a0 didNegotiateModernTLSForURL:(id)a1;
- (void)_translationAvailabilityDidChange:(id)a0;
- (BOOL)mustShowBarsForBackForwardListItem:(id)a0;
- (void)setUpBackClosesSpawnedTabWithParent:(id)a0;
- (void)addPassesViewControllerDidFinish:(id)a0;
- (void)reload;
- (void)performAutoFillAction;
- (BOOL)printControllerCanPresentPrintUI:(id)a0;
- (void)_webView:(id)a0 dataInteraction:(id)a1 sessionWillBegin:(id)a2;
- (BOOL)pageLoadErrorControllerIsInPreviewMode:(id)a0;
- (void)panel:(id)a0 selectAssertionResponse:(id)a1 source:(long long)a2 completionHandler:(id /* block */)a3;
- (id)safariApplicationVersionForTranslationContext:(id)a0;
- (void)translationContext:(id)a0 showTranslationErrorAlertWithTitle:(id)a1 message:(id)a2;
- (void)unfreezeAfterNavigationGesture:(BOOL)a0;
- (void)updateUsageTrackingInformationAfterLinkPreviewDismissal;
- (void)webView:(id)a0 runJavaScriptTextInputPanelWithPrompt:(id)a1 defaultText:(id)a2 initiatedByFrame:(id)a3 completionHandler:(id /* block */)a4;
- (void)clearBackForwardList;
- (id)overrideUndoManagerForSFWebView:(id)a0;
- (void)panel:(id)a0 dismissWebAuthenticationPanelWithResult:(long long)a1;
- (void)_webView:(id)a0 authenticationChallenge:(id)a1 shouldAllowLegacyTLS:(id /* block */)a2;
- (BOOL)_webView:(id)a0 gestureRecognizerCanBePreventedByTouchEvents:(id)a1;
- (void)updateMenuButtonShowsBadge;
- (void)removeMediaSuspensionReason:(unsigned long long)a0;
- (void)_webView:(id)a0 hasVideoInPictureInPictureDidChange:(BOOL)a1;
- (void)stopLoadingUserInitiated;
- (void)_webView:(id)a0 printFrame:(id)a1;
- (void)clearReaderView;
- (void)reloadEnablingDowngradedPrivateRelay:(BOOL)a0;
- (void)_webView:(id)a0 didFailProvisionalLoadWithRequest:(id)a1 inFrame:(id)a2 withError:(id)a3;
- (void)muteMediaCapture;
- (BOOL)linkPreviewHelper:(id)a0 supportsAction:(long long)a1 forURL:(id)a2;
- (void)_webViewDidEnableInspectorBrowserDomain:(id)a0;
- (void)linkPreviewHelperWillOpenUniversalLinkLocally:(id)a0;
- (void)dealloc;
- (BOOL)_webView:(id)a0 shouldIncludeAppLinkActionsForElement:(id)a1;
- (void)loadingControllerWillStartUserDrivenLoad:(id)a0;
- (void)sfWebViewDidChangeSafeAreaInsets:(id)a0;
- (id)backListMenuWithLimit:(int)a0;
- (void)translationContextWillRequestTranslatingWebpage:(id)a0;
- (void)_webView:(id)a0 didStartLoadForQuickLookDocumentInMainFrameWithFileName:(id)a1 uti:(id)a2;
- (void)replaceCurrentPasswordWithPassword:(id)a0;
- (id)formAutoFillControllerURLForFormAutoFill:(id)a0;
- (void)pageLoadErrorController:(id)a0 allowLegacyTLSConnectionForURL:(id)a1 navigateToURL:(id)a2;
- (void)stopAdvertisingProactiveActivityContent;
- (void)_webView:(id)a0 logDiagnosticMessage:(id)a1 description:(id)a2 valueDictionary:(id)a3;
- (BOOL)_webView:(id)a0 fileUploadPanelContentIsManagedWithInitiatingFrame:(id)a1;
- (void)fetchMetadataForBookmark:(id)a0 completion:(id /* block */)a1;
- (void)addNavigationObserver:(id)a0;
- (void)reloadDisablingContentBlockers:(BOOL)a0;
- (void)updateAncestryWithParentTab:(id)a0;
- (void)prepareToUseReader;
- (id)URLStringForPrintController:(id)a0;
- (id)initWithTitle:(id)a0 URL:(id)a1 UUID:(id)a2 privateBrowsingEnabled:(BOOL)a3 hibernated:(BOOL)a4 bookmark:(id)a5 browserController:(id)a6;
- (void)_webView:(id)a0 contentRuleListWithIdentifier:(id)a1 performedAction:(id)a2 forURL:(id)a3;
- (void)pageLoadErrorControllerDidAddAlert:(id)a0;
- (void)readerController:(id)a0 didDetermineAdditionalTextSamples:(id)a1 dueTo:(long long)a2;
- (void)_webView:(id)a0 mouseDidMoveOverElement:(id)a1 withFlags:(long long)a2 userInfo:(id)a3;
- (id)openInTabGroupMenuWithNewTabGroupName:(id)a0 URL:(id)a1 descendantCount:(long long)a2 handler:(id /* block */)a3;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)animateElementToDownloadsBarItemSoon:(id)a0;
- (void)resetTabViewItems;
- (void)addRenderingProgressObserver:(id)a0;
- (void)restoreStateFromTab:(id)a0;
- (void)translationContext:(id)a0 showFeedbackConsentAlertWithCompletionHandler:(id /* block */)a1;
- (void)webView:(id)a0 didReceiveServerRedirectForProvisionalNavigation:(id)a1;
- (void)_voiceSearchAvailabilityDidChange:(id)a0;
- (id)_presentingViewControllerForWebView:(id)a0;
- (void)close;
- (void)resetPageZoomSetting;
- (void)_webView:(id)a0 runWebAuthenticationPanel:(id)a1 initiatedByFrame:(id)a2 completionHandler:(id /* block */)a3;
- (void)restoreSessionState:(id)a0 andNavigate:(BOOL)a1;
- (void)displayAttributionBannerForHighlightIfNeeded:(id)a0;
- (void)_webView:(id)a0 decideWebApplicationCacheQuotaForSecurityOrigin:(id)a1 currentQuota:(unsigned long long)a2 totalBytesNeeded:(unsigned long long)a3 decisionHandler:(id /* block */)a4;
- (void)tabGroupManager:(id)a0 activeParticipantsDidUpdateInTabWithUUID:(id)a1;
- (id)dataForDisplayedPDF;
- (id)readerURLForReaderController:(id)a0;
- (void)_webView:(id)a0 logDiagnosticMessageWithValue:(id)a1 description:(id)a2 value:(id)a3;
- (void)_webView:(id)a0 navigation:(id)a1 didSameDocumentNavigation:(long long)a2;
- (void)clearReaderContext;
- (BOOL)isAutomationEnabledForLinkPreviewHelper:(id)a0;
- (void)_webView:(id)a0 didFinishLoadWithRequest:(id)a1 inFrame:(id)a2;
- (void)restoreSessionState:(id)a0 andNavigate:(BOOL)a1 fromSafariViewService:(BOOL)a2;
- (void)goBackAllowingNewTabToSpawnIfNeeded:(BOOL)a0;
- (void)_webViewDidExitFullscreen:(id)a0;
- (void)_webViewDidBeginNavigationGesture:(id)a0;
- (long long)dialogController:(id)a0 presentationPolicyForDialog:(id)a1;
- (BOOL)hasQuickLookContent;
- (BOOL)_isDeallocating;
- (void)animateProgressForCompletedDocument;
- (id)_webCryptoMasterKeyForWebView:(id)a0;
- (void)webView:(id)a0 shouldLoadIconWithParameters:(id)a1 completionHandler:(id /* block */)a2;
- (void)clearTabReuseURL;
- (BOOL)pageLoadErrorControllerShouldHandleCertificateError:(id)a0;
- (BOOL)isPDFDocument;
- (id)itemForTabCollectionView:(id)a0;
- (void)_webView:(id)a0 willSnapshotBackForwardListItem:(id)a1;
- (long long)_webView:(id)a0 decidePolicyForFocusedElement:(id)a1;
- (BOOL)printControllerShouldPrintReader:(id)a0;
- (void)removeAutomaticPasswordButton;
- (void)downloadDidFail:(id)a0;
- (id)suggestedFilenameForDisplayedPDF;
- (void)_webView:(id)a0 willGoToBackForwardListItem:(id)a1 inPageCache:(BOOL)a2;
- (void)_webViewDidExitElementFullscreen:(id)a0;
- (void)linkPreviewHelperWillDisableLinkPreview;
- (void)addAppHighlightCreatingLink:(BOOL)a0;
- (id)suggestedFileNameForQuickLookDocument:(id)a0;
- (void)performPageLevelAutoFill;
- (void)dialogController:(id)a0 didDismissDialog:(id)a1;
- (long long)_webView:(id)a0 dataOwnerForDragSession:(id)a1;
- (id)initWithTabStateData:(id)a0 hibernated:(BOOL)a1 browserController:(id)a2;
- (void)loadTestURL:(id)a0 withCallback:(id /* block */)a1;
- (void)setOverlaidAccessoryViewsInset:(struct CGSize { double x0; double x1; })a0;
- (void)clearBackForwardListKeepingCurrentItem;
- (void)readerController:(id)a0 didTwoFingerTapLinkInReaderWithContext:(id)a1;
- (void)downloadDidStart:(id)a0;
- (id)pageLoadErrorControllerGetSecIdentityPreferencesController:(id)a0;
- (BOOL)_webViewCanBecomeFocused:(id)a0;
- (void)didFindAppBannerWithContent:(id)a0;
- (void)formAutoFillControllerUserChoseToUseGeneratedPassword:(id)a0;
- (void)didReplaceTabDocument:(id)a0;
- (void)loadURLForContinuousReadingList:(id)a0 fromBookmark:(id)a1;
- (void)_webView:(id)a0 didCommitLoadWithRequest:(id)a1 inFrame:(id)a2;
- (unsigned long long)_webView:(id)a0 willUpdateDataInteractionOperationToOperation:(unsigned long long)a1 forSession:(id)a2;
- (void)linkPreviewHelperWillBeginDownload:(id)a0;
- (void)_webView:(id)a0 contextMenuDidEndForElement:(id)a1;
- (id)_webView:(id)a0 adjustedDataInteractionItemProvidersForItemProvider:(id)a1 representingObjects:(id)a2 additionalData:(id)a3;
- (BOOL)_webView:(id)a0 focusRequiresStrongPasswordAssistance:(id)a1;
- (void)hideBannerForHighlightIdentifier:(id)a0;
- (void)loadingController:(id)a0 willLoadRequest:(id)a1 webView:(id)a2 userDriven:(BOOL)a3;
- (void)_webView:(id)a0 createWebViewWithConfiguration:(id)a1 forNavigationAction:(id)a2 windowFeatures:(id)a3 completionHandler:(id /* block */)a4;
- (void)fluidProgressRocketAnimationDidComplete;
- (void)webView:(id)a0 runJavaScriptAlertPanelWithMessage:(id)a1 initiatedByFrame:(id)a2 completionHandler:(id /* block */)a3;
- (void)automaticPasswordSheetDismissed;
- (void)copyCurrentStrongPassword;
- (void)readerController:(id)a0 didClickLinkRequestingNewWindowInReaderWithRequest:(id)a1;
- (void)webView:(id)a0 runJavaScriptConfirmPanelWithMessage:(id)a1 initiatedByFrame:(id)a2 completionHandler:(id /* block */)a3;
- (id)linkPreviewHelper:(id)a0 previewViewControllerForURL:(id)a1;
- (void)panel:(id)a0 updateWebAuthenticationPanel:(long long)a1;
- (id)titleForSharing;
- (void)prepareToContinueUserActivity;
- (void)downloadShouldContinueAfterReceivingResponse:(id)a0 decisionHandler:(id /* block */)a1;
- (void)_webView:(id)a0 didStartProvisionalLoadWithRequest:(id)a1 inFrame:(id)a2;
- (void)fetchCanonicalURLWithCompletionHandler:(id /* block */)a0;
- (void)_webView:(id)a0 willSubmitFormValues:(id)a1 userObject:(id)a2 submissionHandler:(id /* block */)a3;
- (BOOL)createFluidProgressState;
- (BOOL)isPrivateBrowsingEnabledForPreviewHelper:(id)a0;
- (void)addMediaSuspensionReason:(unsigned long long)a0;
- (void)removeRenderingProgressObserver:(id)a0;
- (BOOL)shouldShowReaderOnActivate;
- (id)sfWebView:(id)a0 didStartDownload:(id)a1;
- (void)_webView:(id)a0 didFailLoadWithRequest:(id)a1 inFrame:(id)a2 withError:(id)a3;
- (void)_webView:(id)a0 renderingProgressDidChange:(unsigned long long)a1;
- (void)setAppSuggestionBanner:(id)a0 isPinned:(BOOL)a1;
- (void)createReaderWebViewForReaderController:(id)a0;
- (void)_webView:(id)a0 takeFocus:(long long)a1;
- (void)dialogController:(id)a0 presentViewController:(id)a1 withAdditionalAnimations:(id /* block */)a2;
- (void)animateElement:(id)a0 toBarItem:(long long)a1;
- (void)panel:(id)a0 requestPINWithRemainingRetries:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (id)dataForQuickLookDocument:(id)a0;
- (void)webView:(id)a0 decidePolicyForNavigationResponse:(id)a1 decisionHandler:(id /* block */)a2;
- (void)userDidManipulateVisibleRegion;
- (void).cxx_destruct;
- (void)snapshotForWebClipIcon:(id /* block */)a0;
- (void)_webView:(id)a0 insertTextSuggestion:(id)a1 inInputSession:(id)a2;
- (void)readerController:(id)a0 didDeactivateReaderWithMode:(unsigned long long)a1;
- (void)_webView:(id)a0 decideDatabaseQuotaForSecurityOrigin:(id)a1 currentQuota:(unsigned long long)a2 currentOriginUsage:(unsigned long long)a3 currentDatabaseUsage:(unsigned long long)a4 expectedUsage:(unsigned long long)a5 decisionHandler:(id /* block */)a6;
- (void)webView:(id)a0 decidePolicyForNavigationAction:(id)a1 preferences:(id)a2 decisionHandler:(id /* block */)a3;
- (void)didFailToContinueUserActivity;
- (id)initForBackgroundLoadingWithBrowserController:(id)a0 relatedWebView:(id)a1;
- (void)_searchEngineControllerDidFinishPopulating:(id)a0;
- (id)_webViewAdditionalContextForStrongPasswordAssistance:(id)a0;
- (void)goBackToParentTab;
- (id)titleForNewBookmark;
- (void)loadAlternateHTMLString:(id)a0 baseURL:(id)a1 forUnreachableURL:(id)a2;
- (void)setNeedsSendTelemetryForProvisionalLoad;
- (void)_webView:(id)a0 contextMenuWillPresentForElement:(id)a1;
- (void)clearBrowserController;
- (void)_webView:(id)a0 didStartInputSession:(id)a1;
- (void)webViewDidChangeSize;
- (unsigned long long)retainCount;
- (void)loadTestURL:(id)a0 withCallback:(id /* block */)a1 pagesNeedingMemoryWarningSent:(id)a2;
- (BOOL)shouldSpawnNewTabOnNavigationFromPinnedTabWithDestinationURL:(id)a0;
- (void)_webViewDidEnterElementFullscreen:(id)a0;
- (id)suggestedFileExtensionForQuickLookDocument:(id)a0;
- (void)_webView:(id)a0 logDiagnosticMessage:(id)a1 description:(id)a2;

@end
