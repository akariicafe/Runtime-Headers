@class UIImageView, UIBarButtonItem, _MKUserTrackingButton, FMFTitleView, UIColor, NSString, NSSet, FMFNoLocationView, FMFSession, MKMapView, FMFMapViewDelegateInternal, FMFMapOptionsViewController, FMFRefreshBarButtonItem;
@protocol FMFMapViewControllerDelegate;

@interface FMFMapViewController : UIViewController <FMFSessionDelegateInternal, FMFMapViewDelegateInternalDelegate, MKUserTrackingView, FMFNoLocationViewDelegate, FMFMapOptionsViewControllerDelegate>

@property (retain, nonatomic) MKMapView *mapView;
@property (retain, nonatomic) FMFSession *fmfSession;
@property (retain, nonatomic) FMFMapViewDelegateInternal *mapViewDelegate;
@property (retain, nonatomic) NSSet *_preloadedHandles;
@property (nonatomic) BOOL isSimpleMap;
@property (retain, nonatomic) FMFNoLocationView *noLocationView;
@property (retain, nonatomic) NSSet *_internalHandlesShowingLocations;
@property (nonatomic) BOOL _refreshingIsPaused;
@property (nonatomic) BOOL _blockDidReceiveAnimation;
@property (nonatomic) BOOL _isRenderingInitialMap;
@property (nonatomic) BOOL viewWillAppearCalled;
@property (nonatomic) BOOL alwaysShowAccuracy;
@property (nonatomic) BOOL wasToolbarPreviouslyHidden;
@property (retain, nonatomic) NSString *debugContext;
@property (retain, nonatomic) FMFMapOptionsViewController *mapOptionsVC;
@property (retain, nonatomic) FMFTitleView *titleView;
@property (retain, nonatomic) UIBarButtonItem *userTrackingButtonItem;
@property (retain, nonatomic) UIBarButtonItem *directionsBarButtonItem;
@property (retain, nonatomic) UIBarButtonItem *infoBarButtonItem;
@property (retain, nonatomic) FMFRefreshBarButtonItem *refreshButton;
@property (retain, nonatomic) UIImageView *cachedMapView;
@property (nonatomic) unsigned long long defaultMapType;
@property (nonatomic) BOOL mapTypeLoaded;
@property (retain, nonatomic) _MKUserTrackingButton *userTrackingButton;
@property (nonatomic) long long currentTrackingMode;
@property (weak, nonatomic) id<FMFMapViewControllerDelegate> delegate;
@property (nonatomic) BOOL shouldZoomToFitNewLocations;
@property (nonatomic) BOOL shouldZoomToFitMeAndLocations;
@property (nonatomic) BOOL showFloatingMapLocationButton;
@property (nonatomic) BOOL isMapCenteringDisabled;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } edgeInsets;
@property (copy, nonatomic) NSSet *handlesShowingLocations;
@property (copy, nonatomic) UIColor *annotationTintColor;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)hasUserLocation;
+ (struct CGSize { double x0; double x1; })annotationImageSize;

- (void)applicationDidBecomeActive:(id)a0;
- (void)willMoveToParentViewController:(id)a0;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (void)didMoveToParentViewController:(id)a0;
- (void)didReceiveMemoryWarning;
- (void)didStopAbilityToGetLocationForHandle:(id)a0;
- (void)_dismiss:(id)a0;
- (void)dealloc;
- (void)viewDidLoad;
- (void)loadDelegate;
- (void)viewWillDisappear:(BOOL)a0;
- (id)init;
- (void)viewDidDisappear:(BOOL)a0;
- (void)viewDidAppear:(BOOL)a0;
- (void)viewWillLayoutSubviews;
- (void).cxx_destruct;
- (void)loadView;
- (void)viewWillAppear:(BOOL)a0;
- (BOOL)isCompact;
- (BOOL)hasUserLocation;
- (long long)userTrackingMode;
- (void)didReceiveLocation:(id)a0;
- (void)_setUserTrackingMode:(long long)a0 animated:(BOOL)a1 fromTrackingButton:(BOOL)a2;
- (BOOL)canRotateForHeading;
- (BOOL)isCurrentlyRotated;
- (BOOL)canSelectAnnotation:(id)a0;
- (void)infoButtonTapped:(id)a0;
- (id)initSimpleMapWithDelegate:(id)a0 handles:(id)a1;
- (id)initWithDelegate:(id)a0 handles:(id)a1;
- (id)titleViewForSelectedHandle;
- (void)mapTypeChanged:(unsigned long long)a0;
- (void)zoomToFit;
- (void)removeAllFriendLocationsFromMap;
- (void)deselectAllAnnotations;
- (void)updateUserTrackingButtonState;
- (void)selectAnnotationIfSingleFriend:(id)a0;
- (void)stopShowingLocationsForHandles:(id)a0;
- (void)_authorizeMonitoringLocation;
- (void)_enablePreloadedHandles:(id)a0;
- (id)_generateDebugContext;
- (id)_internalAnnotationTintColor;
- (id)_selectedHandleAnnotation;
- (void)_updateDirectionsButtonEnabled;
- (void)_updateLocationButtonEnabled;
- (void)_updateTitleViewLocation:(id)a0;
- (void)addHandlesToSession;
- (id)annotationImageForAnnotation:(id)a0 andHandle:(id)a1;
- (BOOL)canShowNoLocation;
- (void)destroySession;
- (void)didDeselectLocation:(id)a0;
- (void)didReceiveLocationForDelegateCallback:(id)a0;
- (void)didSelectLocation:(id)a0;
- (void)didUpdateUserLocation:(id)a0;
- (void)enablePreloadedHandles;
- (void)getDirections;
- (void)hideCachedMap;
- (void)initializeDefaults;
- (BOOL)isLocationAlreadyOnMap:(id)a0;
- (double)liveAnimationDuration;
- (void)loadCachedLocationsForHandles;
- (id)locationOnMapForHandle:(id)a0 enforceServerId:(BOOL)a1;
- (BOOL)mapHasUserLocations;
- (void)mapTypeChangedNotification:(id)a0;
- (void)mapViewDidFinishRenderingMap;
- (double)nonLiveAnimationDuration;
- (id)openInAppURL;
- (void)openInMapsButtonTapped:(id)a0;
- (void)presentMapOptionsModal:(id)a0;
- (void)reZoomToFit;
- (void)recenterMap;
- (void)refreshButtonTapped:(id)a0;
- (void)regionDidChangeAnimated:(BOOL)a0;
- (void)regionWillChangeAnimated:(BOOL)a0;
- (void)removeAnnotationsFromMapForHandle:(id)a0;
- (void)removeHandlesFromSession;
- (void)resumeRefreshingLocations;
- (void)selectAnnotationIfSingleForMac;
- (BOOL)sessionContainsHandle:(id)a0;
- (void)setupRecenterMapTimer;
- (void)setupToolbarItems;
- (BOOL)singleAnnotationOnMap;
- (void)startShowingLocationsForHandles:(id)a0;
- (void)stopRefreshingLocations;
- (void)updateAllAnnotationsDueToAddressBookUpdate;
- (void)updateMapWithNewLocation:(id)a0 animated:(BOOL)a1;
- (void)updateNoLocationView:(BOOL)a0;
- (void)updateRefreshForLocation:(id)a0;
- (void)viewWillAppearWillMoveToWindowSetup;
- (void)zoomAndSelectHandle:(id)a0;
- (void)zoomToFit:(BOOL)a0;

@end
