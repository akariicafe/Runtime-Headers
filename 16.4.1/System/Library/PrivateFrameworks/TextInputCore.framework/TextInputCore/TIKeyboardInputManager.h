@class TIRevisionHistory, TISmartPunctuationOptions, TILanguageSelectionController, TIEmojiCandidateGenerator, NSString, TISupplementalLexiconController, TITextCheckerExemptions, TISmartSelector, TIAutoshiftRegularExpressionLoader, TICounterChangeCache, NSArray, TILRUDictionary, NSMutableSet, TIKeyboardInputManagerState, NSMutableDictionary, TIKeyboardLayout, TIFilterParameterLoader, TIKeyboardCandidate, TIKeyboardInputManagerConfig, NSMutableString, TIKeyboardLayoutState, TIAutocorrectionList, TIInputContextHistory, NSCharacterSet, TICharacterSetDescription, TITypingSessionMonitor, TIKeyboardState, TIKeyboardFeatureSpecialization;
@protocol TICandidateHandler;

@interface TIKeyboardInputManager : TIKeyboardInputManagerBase <TIRevisionHistoryDelegate, TILanguageSelectionControllerDelegate> {
    void *m_impl;
    NSMutableString *m_composedText;
    unsigned long long m_initialSelectedIndex;
    TIKeyboardLayout *_keyLayout;
    TIKeyboardLayoutState *_layoutState;
    TIKeyboardInputManagerState *_currentState;
    TIKeyboardFeatureSpecialization *_keyboardFeatureSpecialization;
    NSCharacterSet *_allowPredictionCharacterSet;
    NSMutableDictionary *_cachedLayoutTags;
    struct shared_ptr<KB::TypologyLogger> { struct TypologyLogger *__ptr_; struct __shared_weak_count *__cntrl_; } m_typology_recorder;
    struct shared_ptr<KB::LanguageModel> { struct LanguageModel *__ptr_; struct __shared_weak_count *__cntrl_; } m_lightweight_language_model;
    TILanguageSelectionController *_languageSelectionController;
    TIEmojiCandidateGenerator *_emojiCandidateGenerator;
    TIInputContextHistory *_synchronizedInputContextHistory;
    TICharacterSetDescription *_wordCharacters;
    TICharacterSetDescription *_supplementalLexiconWordExtraCharacters;
    TICharacterSetDescription *_closingQuotes;
    TICharacterSetDescription *_openingQuotes;
    TISmartPunctuationOptions *_smartOptions;
    NSMutableDictionary *_testingStateObject;
    int _lastHitTestKeycode;
    BOOL _didInitialSync;
    struct vector<RecentMessage, std::allocator<RecentMessage>> { struct RecentMessage *__begin_; struct RecentMessage *__end_; struct __compressed_pair<RecentMessage *, std::allocator<RecentMessage>> { struct RecentMessage *__value_; } __end_cap_; } conversation_history;
}

@property (retain, nonatomic) TIKeyboardLayout *keyLayout;
@property (readonly, nonatomic) TIRevisionHistory *revisionHistory;
@property (readonly, nonatomic) TILRUDictionary *autocorrectionHistory;
@property (readonly, nonatomic) TILRUDictionary *recentAutocorrections;
@property (readonly, nonatomic) TILRUDictionary *recentPredictiveInputSelections;
@property (readonly, nonatomic) TILRUDictionary *rejectedAutocorrections;
@property (readonly, nonatomic) TILRUDictionary *autocorrectionListsSuggestedForCurrentInput;
@property (readonly, nonatomic) TILRUDictionary *autocorrectionListsForWordsInDocument;
@property (nonatomic, getter=isWordLearningEnabled) BOOL wordLearningEnabled;
@property (nonatomic) BOOL isEditingWordPrefix;
@property (retain, nonatomic) TIAutoshiftRegularExpressionLoader *autoshiftRegexLoader;
@property (readonly, nonatomic) TITextCheckerExemptions *textCheckerExemptions;
@property (readonly, nonatomic) NSCharacterSet *allowPredictionCharacterSet;
@property (readonly, nonatomic) unsigned long long linguisticResourceStatus;
@property (nonatomic) long long deleteKeyCount;
@property (retain, nonatomic) TIKeyboardCandidate *hitTestCorrectedInputMatchingCandidate;
@property (copy, nonatomic) TIKeyboardCandidate *lastAcceptedText;
@property (retain, nonatomic) NSMutableSet *rejectedConversionsForCurrentContinuousPath;
@property (retain, nonatomic) TITypingSessionMonitor *typingSessionMonitor;
@property (retain, nonatomic) TICounterChangeCache *counterChangeCache;
@property (retain, nonatomic) TISmartSelector *smartSelector;
@property (copy, nonatomic) id /* block */ proactiveSuggestionsGenerationBlock;
@property (retain, nonatomic) TIAutocorrectionList *lastContinuousPathAutocorrection;
@property (retain, nonatomic) id<TICandidateHandler> candidateHandlerForOpenRequest;
@property (nonatomic) unsigned long long lastNumCandidatesRequest;
@property (readonly, nonatomic) TISmartPunctuationOptions *smartOptions;
@property (readonly, nonatomic) TIFilterParameterLoader *filterParameterLoader;
@property (copy, nonatomic) id /* block */ candidateGenerationCompletionHandler;
@property (nonatomic) long long userInterfaceIdiom;
@property (retain, nonatomic) NSString *lastInputString;
@property (readonly, nonatomic) TIEmojiCandidateGenerator *emojiCandidateGenerator;
@property (retain, nonatomic) TILRUDictionary *autocorrectionForCurrentStem;
@property (retain, nonatomic) TILRUDictionary *rejectedAutocorrectionsDisplayedOrInserted;
@property (retain, nonatomic) TILRUDictionary *rejectedAutocorrectionsDisplayedOrInsertedInverse;
@property (readonly, nonatomic) TIKeyboardInputManagerConfig *config;
@property (readonly, nonatomic) TILanguageSelectionController *languageSelectionController;
@property (readonly, nonatomic) NSArray *languageModelAssets;
@property (readonly, weak, nonatomic) TISupplementalLexiconController *currentCandidateGenerationContextSupplementalLexicons;
@property (retain, nonatomic) TIKeyboardState *keyboardState;
@property (readonly, nonatomic) TIKeyboardInputManagerState *currentState;
@property (readonly, nonatomic) unsigned short supplementalPrefix;
@property (readonly, nonatomic) TIKeyboardFeatureSpecialization *keyboardFeatureSpecialization;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } candidateRange;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)removeAllDynamicDictionaries;
+ (void)clearRecentsFileForIdentifier:(id)a0;
+ (id)dynamicDictionaryFilePathForInputMode:(id)a0;
+ (id)keyboardUserDirectory;
+ (id)offlineLearningHandleForInputMode:(id)a0;
+ (id)recentsFilePathForIdentifier:(id)a0;
+ (void)removeDynamicDictionaryForInputMode:(id)a0;
+ (void)resetResponseKit;
+ (int)shiftContextForShiftState:(int)a0 autocapitalizationType:(unsigned long long)a1;
+ (id)userDictionaryWordKeyPairsFilePath;

- (void)clearInput;
- (id)autocorrectionRecordForWord:(id)a0;
- (id)candidates;
- (BOOL)usesRetrocorrection;
- (unsigned long long)phraseBoundary;
- (BOOL)doesComposeText;
- (void)setInSplitKeyboardMode:(BOOL)a0;
- (id)wordCharacters;
- (id)autocorrection;
- (void)setInHardwareKeyboardMode:(BOOL)a0;
- (unsigned int)inputIndex;
- (BOOL)nextInputWouldStartSentence;
- (BOOL)usesCandidateSelection;
- (void)changingContextWithTrigger:(id)a0;
- (void)setAutocapitalizationType:(unsigned long long)a0;
- (BOOL)canHandleKeyHitTest;
- (unsigned int)inputCount;
- (BOOL)shouldSkipCandidateSelection;
- (void)tearDown;
- (id)testingParameters;
- (BOOL)acceptInputString:(id)a0;
- (BOOL)delayedCandidateList;
- (BOOL)usesAutoDeleteWord;
- (void)didUpdateInputModes:(id)a0;
- (void)setInputIndex:(unsigned int)a0;
- (id)searchStringForMarkedText;
- (BOOL)suppliesCompletions;
- (BOOL)usesContinuousPath;
- (BOOL)supportsNumberKeySelection;
- (id)internalStringToExternal:(id)a0;
- (BOOL)suppressCompletionsForFieldEditor;
- (void)setInput:(id)a0;
- (void *)initImplementation;
- (void)loadDictionaries;
- (id)keyboardConfiguration;
- (id)externalStringToInternal:(id)a0;
- (id).cxx_construct;
- (BOOL)supportsSetPhraseBoundary;
- (BOOL)suppressPlaceholderCandidate;
- (id)terminatorsPreventingAutocorrection;
- (void)acceptInput;
- (BOOL)newInputAcceptsUserSelectedCandidate;
- (id)markedText;
- (id)dynamicResourcePath;
- (BOOL)updateLanguageModelForKeyboardState;
- (id)sentencePrefixingCharacters;
- (id)autocorrectionList;
- (BOOL)usesLiveConversion;
- (void)prepareForKeyboardInactivity;
- (BOOL)shouldUpdateDictionary;
- (void)suspend;
- (id)replacementForDoubleSpace;
- (BOOL)commitsAcceptedCandidate;
- (id)internalStringToExternal:(id)a0 ignoreCompositionDisabled:(BOOL)a1;
- (id)supplementalLexiconWordExtraCharacters;
- (void)generateAutocorrectionsWithKeyboardState:(id)a0 candidateRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 candidateHandler:(id)a2;
- (unsigned int)internalIndexToExternal:(unsigned int)a0;
- (void)skipHitTestForTouchEvent:(id)a0 keyboardState:(id)a1;
- (BOOL)usesPunctuationKeysForRowNavigation;
- (id)terminatorsDeletingAutospace;
- (id)keyboardBehaviors;
- (id)inputsToReject;
- (BOOL)acceptAutocorrectionCommitsInline;
- (BOOL)syncToKeyboardState:(id)a0 completionHandler:(id /* block */)a1;
- (void)dealloc;
- (id)wordSeparator;
- (void)didUpdateInputModeProbabilities:(id)a0;
- (id)primaryInputMode;
- (void)prepareForKeyboardActivity;
- (BOOL)shouldAddModifierSymbolsToWordCharacters;
- (BOOL)shouldExtendPriorWord;
- (unsigned long long)initialCandidateBatchCount;
- (id)nonstopPunctuationCharacters;
- (id)inputString;
- (void)acceptingCandidateWithTrigger:(id)a0;
- (unsigned int)externalIndexToInternal:(unsigned int)a0;
- (unsigned long long)autoquoteType;
- (id)addInput:(id)a0 flags:(unsigned int)a1 point:(struct CGPoint { double x0; double x1; })a2 firstDelete:(unsigned long long *)a3;
- (id)initWithConfig:(id)a0 keyboardState:(id)a1;
- (void)setAutocapitalizationEnabled:(BOOL)a0;
- (id)deleteFromInput:(unsigned long long *)a0;
- (id)candidateResultSet;
- (id)externalStringToInternal:(id)a0 ignoreCompositionDisabled:(BOOL)a1;
- (double)continuousPathLanguageWeight;
- (id)resourceInputModes;
- (BOOL)stringEndsWord:(id)a0;
- (BOOL)shouldFixupIncompleteRomaji;
- (id)keyEventMap;
- (id)handleKeyboardInput:(id)a0;
- (id)sentenceDelimitingCharacters;
- (BOOL)ignoresDeadKeys;
- (void).cxx_destruct;
- (void)setInput:(id)a0 withIndex:(unsigned int)a1;
- (id)sentenceTrailingCharacters;
- (void)resume;
- (id)shadowTyping;
- (void)setKeyboardEventsLagging:(BOOL)a0;
- (void)candidateRejected:(id)a0;
- (id)defaultCandidate;
- (void)generateCandidatesWithKeyboardState:(id)a0 candidateRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 completionHandler:(id /* block */)a2;
- (BOOL)inHardwareKeyboardMode;
- (unsigned long long)initialSelectedIndex;
- (void)logDiscoverabilityEvent:(int)a0 userInfo:(id)a1;
- (void)setMarkedText;
- (void)setOriginalInput:(id)a0;
- (id)currentInputModeIdentifier;
- (unsigned long long)internalIndexOfInputStemSuffix:(id)a0;
- (id)sortMethodsGroupsForCandidates:(id)a0;
- (BOOL)usesMLTapTyping;
- (BOOL)canGenerateCompletionCandidates;
- (void)checkAutocorrectionDictionaries;
- (id)contextBeforeWithDesiredLength:(unsigned long long)a0;
- (id)currentWordStem;
- (unsigned long long)maxPriorWordTokensAfterTrimming;
- (BOOL)_canStartSentenceAfterString:(id)a0 maxRecursionDepth:(unsigned long long)a1;
- (void)_recalcSupplementalPrefix;
- (id)_supplementalCompletionCandidates:(unsigned long long)a0;
- (void)acceptCurrentCandidateIfSelectedWithContext:(id)a0;
- (void)acceptCurrentCandidateWithContext:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })acceptableRangeFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 inText:(id)a1 withSelectionLocation:(unsigned long long)a2;
- (BOOL)acceptsCharacter:(unsigned int)a0;
- (BOOL)acceptsRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 inString:(id)a1;
- (void)addInput:(id)a0 withContext:(id)a1;
- (void)addItemToConversationHistoryWithText:(id)a0 timestamp:(id)a1 senderID:(id)a2 recipientIdentifiers:(id)a3;
- (void)addSynthesizedTouchToInput:(id)a0;
- (long long)addTouch:(id)a0 shouldHitTest:(BOOL)a1;
- (struct TITokenID { unsigned int x0; unsigned int x1; })addWord:(id)a0 contextTokens:(id)a1 surfaceFormPtr:(id *)a2;
- (void)adjustPhraseBoundaryInForwardDirection:(BOOL)a0;
- (void)adjustPhraseBoundaryInForwardDirection:(BOOL)a0 granularity:(int)a1;
- (BOOL)alwaysShowExtensionCandidatesForSortingMethod:(id)a0;
- (void)analyzeTypingSession:(id)a0;
- (void)appendToInputContext:(id)a0;
- (id)autocorrectionCandidateForInput:(id)a0 rawInput:(id)a1 withCandidate:(const void *)a2;
- (id)autocorrectionCandidateForInput:(id)a0 rawInput:(id)a1 withCandidate:(const void *)a2 insertingSpace:(BOOL)a3 sharedPrefixLength:(unsigned long long)a4;
- (id)autocorrectionListForEmptyInputWithDesiredCandidateCount:(unsigned long long)a0;
- (id)autocorrectionListForSelectedText;
- (id)autocorrectionListWithCandidateCount:(unsigned long long)a0;
- (BOOL)autocorrectionWasRecentlyRejected:(id)a0;
- (BOOL)autocorrectionWasRecentlyRejectedForCurrentInput;
- (id)cachedAutocorrectionListResponseFor:(id)a0;
- (BOOL)canComputeSentenceContextForInputStem:(id)a0;
- (BOOL)canRetrocorrectInputAtIndex:(unsigned int)a0;
- (BOOL)canStartSentenceAfterString:(id)a0;
- (BOOL)canTrimInputAtIndex:(unsigned int)a0;
- (id)candidateResultSetFromCandidates:(id)a0;
- (id)candidateResultSetFromCandidates:(id)a0 proactiveTriggers:(id)a1;
- (id)candidatesForString:(id)a0;
- (void)candidatesOfferedFeedback:(id)a0 keyboardState:(id)a1;
- (id)cannedResponseCandidatesForString:(id)a0;
- (void)checkAndUpdateSupplementalLexicons;
- (void)clearDynamicDictionary;
- (void)clearHumanReadableTrace;
- (void)clearInputContext;
- (BOOL)closeCandidateGenerationContextWithResults:(id)a0;
- (id)closingQuotes;
- (id)completionCandidates:(unsigned long long)a0;
- (id)configurationPropertyList;
- (void)continuousPathCandidateRejected:(id)a0;
- (id)continuousPathCandidates:(unsigned long long)a0;
- (unsigned long long)countOfWordsIninputStem:(id)a0;
- (void)decrementLanguageModelCount:(id)a0 tokenID:(struct TITokenID { unsigned int x0; unsigned int x1; })a1 contextTokens:(id)a2;
- (id)deleteComposedTextFromIndex:(unsigned long long)a0 count:(unsigned long long *)a1;
- (void)deleteFromInputWithContext:(id)a0;
- (id)deletedSuffixOfInputContext:(id)a0 whenDeletingFromInputString:(id)a1 withInputIndex:(unsigned long long)a2 deletionCount:(unsigned long long)a3;
- (BOOL)deletesComposedTextByComposedCharacterSequence;
- (id)deltaDictionaryPathForInputMode:(id)a0;
- (BOOL)dictionaryContainsWord:(id)a0;
- (id)dictionaryInputMode;
- (id)dictionaryPathForContentType:(id)a0 inputMode:(id)a1 filePrefix:(id)a2;
- (id)dictionaryStringForExternalString:(id)a0;
- (BOOL)dictionaryUsesExternalEncoding;
- (id)didAcceptCandidate:(id)a0;
- (void)didDropInputStem;
- (void)displayedCandidateRejected;
- (BOOL)doesSelectedTextGenerateEmojiCandidates;
- (void)dropInput;
- (void)dropInputPrefix:(unsigned int)a0;
- (void)dynamicDictionariesRemoved:(id)a0;
- (id)dynamicDictionaryPathForInputMode:(id)a0;
- (BOOL)enablesProactiveQuickType;
- (void)enumerateWordSuffixesOfString:(id)a0 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 usingBlock:(id /* block */)a2;
- (id)extendedAutocorrection:(id)a0 spanningInputsForCandidates:(id)a1 emojis:(id)a2;
- (id)externalStringForDictionaryString:(id)a0;
- (void)fetchAssetAvailabilityStatusForInputMode:(id)a0 completionHandler:(id /* block */)a1;
- (void)fetchTypingSessionParams:(id /* block */)a0;
- (struct TITokenID { unsigned int x0; unsigned int x1; })findTokenIDForWord:(id)a0 contextTokens:(id)a1 tokenLookupMode:(unsigned int)a2;
- (struct TITokenID { unsigned int x0; unsigned int x1; })findTokenIDForWord:(id)a0 contextTokens:(id)a1 tokenLookupMode:(unsigned int)a2 surfaceFormPtr:(id *)a3 hasCaseInsensitiveStaticVariant:(BOOL *)a4;
- (void)finishGeneratingAutocorrectionsWithCandidates:(id)a0 candidateRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 candidateHandler:(id)a2;
- (void)finishGeneratingCandidates;
- (id)generateAndRenderProactiveSuggestionsWithTriggers:(id)a0 withAdditionalPredictions:(id)a1 withInput:(id)a2;
- (void)generateAndRenderProactiveSuggestionsWithTriggers:(id)a0 withAdditionalPredictions:(id)a1 withInput:(id)a2 async:(BOOL)a3 completionHandler:(id /* block */)a4;
- (void)generateAutofillFormWithKeyboardState:(id)a0 completionHandler:(id /* block */)a1;
- (void)generateCannedResponseCandidatesAsyncForString:(id)a0 completionHandler:(id /* block */)a1;
- (id)generateOneTimeCodeCandidatesWithKeyboardState:(id)a0;
- (id)generateReplacementsForString:(id)a0 keyLayout:(id)a1;
- (id)generateTypingAutocorrectionsWithCandidateRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (struct RefPtr<KB::DictionaryContainer> { struct DictionaryContainer *x0; })getDictionary;
- (id)getTestingStateObject;
- (id)groupedCandidatesFromCandidates:(id)a0 usingSortingMethod:(id)a1;
- (void)groupedCandidatesFromCandidates:(id)a0 usingSortingMethod:(id)a1 completion:(id /* block */)a2;
- (id)handleAcceptedCandidate:(id)a0 keyboardState:(id)a1;
- (void)handleTrialParametersUpdateCallback;
- (BOOL)hasLegacyInputStem;
- (BOOL)hasLegacyInputString;
- (id)humanReadableTrace;
- (void)incrementLanguageModelCount:(id)a0 tokenID:(struct TITokenID { unsigned int x0; unsigned int x1; })a1 contextTokens:(id)a2 saveToDifferentialPrivacy:(int)a3;
- (void)incrementUsageTrackingKey:(id)a0;
- (void)incrementUsageTrackingKeyForAppWithIsSentence:(BOOL)a0;
- (void)incrementUsageTrackingKeyForAutocorrectionStatistic:(id)a0 autocorrectionTypes:(unsigned int)a1;
- (void)incrementUsageTrackingKeysForDeleteFromInput;
- (id)indexTitlesForGroupTitles:(id)a0 sortingMethod:(id)a1;
- (id)indexesOfDuplicatesInCandidates:(id)a0;
- (id)initWithConfig:(id)a0 keyboardState:(id)a1 languageSelectionController:(id)a2;
- (id)initWithInputMode:(id)a0 keyboardState:(id)a1;
- (id)inputContext;
- (void)inputLocationChanged;
- (id)inputStem;
- (id)inputStringFromDocumentState:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })inputStringRangeFromRevisionHistory;
- (void)installTypologyTraceLogger;
- (id)internalInputContext;
- (BOOL)isContinuousPathCandidate:(id)a0 replacementForOriginalConversion:(id)a1;
- (BOOL)isEditingExistingWord;
- (BOOL)isExpensiveToSuspend;
- (BOOL)isHardwareKeyboardAutocorrectionEnabled;
- (BOOL)isLinguisticResourceUpdateScheduled;
- (BOOL)isProgressivelyPathing;
- (BOOL)isStringBasedModel;
- (BOOL)isTypologyEnabled;
- (id)keyboardConfigurationAccentKeyString;
- (BOOL)keyboardConfigurationAssertDefaultKeyPlane;
- (id)keyboardConfigurationLayoutTag;
- (id)languageModelAssetsForInputMode:(id)a0;
- (id)layoutTagsForLayout:(id)a0;
- (void)learnRecentMessageUserIsRespondingTo;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })legacyInputRangeForTokenRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (struct { struct String { unsigned short x0; unsigned short x1; unsigned short x2; unsigned char x3; char *x4; char x5[16]; } x0; struct String { unsigned short x0; unsigned short x1; unsigned short x2; unsigned char x3; char *x4; char x5[16]; } x1; struct String { unsigned short x0; unsigned short x1; unsigned short x2; unsigned char x3; char *x4; char x5[16]; } x2; struct String { unsigned short x0; unsigned short x1; unsigned short x2; unsigned char x3; char *x4; char x5[16]; } x3; struct String { unsigned short x0; unsigned short x1; unsigned short x2; unsigned char x3; char *x4; char x5[16]; } x4; unsigned int x5; float x6; })lexiconInformation;
- (id)linguisticContext;
- (void)loadFavoniusTypingModel;
- (struct shared_ptr<KB::LanguageModel> { struct LanguageModel *x0; struct __shared_weak_count *x1; })loadedLightweightLanguageModel;
- (void)logTestingParametersToTypology;
- (void)logToTypologyRecorderWithString:(id)a0;
- (unsigned long long)maximumShortcutLengthAllowed;
- (void)mobileAssetsChanged:(id)a0;
- (id)newInputManagerState;
- (id)newKeyboardContext;
- (BOOL)nextInputWouldStartSentenceAfterInput:(id)a0;
- (void)openCandidateGenerationContextWithCompletionHandler:(id /* block */)a0;
- (id)openingQuotes;
- (id)originatingAutocorrectionListForCandidate:(id)a0;
- (void)parseRecentMessage:(void *)a0;
- (id)pathToDeltaStaticDictionary;
- (id)pathToDynamicDictionary;
- (id)pathToPhraseDictionary;
- (id)pathToStaticDictionary;
- (long long)performHitTestForTouchEvent:(id)a0 keyboardState:(id)a1;
- (id)phraseCandidateCompletedByWord:(const struct String { unsigned short x0; unsigned short x1; unsigned short x2; unsigned char x3; char *x4; char x5[16]; } *)a0 allowNoSuggest:(BOOL)a1 forAutocorrection:(BOOL)a2 shiftContext:(int)a3;
- (id)phraseDictionaryPathForInputMode:(id)a0;
- (const struct USet { } *)precomposedCharacterSet;
- (id)predictionCandidates:(unsigned long long)a0 predictionType:(int)a1;
- (unsigned long long)prefixLengthOfInput:(id)a0 sharedWithCandidate:(const void *)a1;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeOfUnclosedQuoteMatchingQuote:(id)a0 inString:(id)a1 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (id)rawInputString;
- (void)reconcileCandidates:(void *)a0 forTypedString:(struct String { unsigned short x0; unsigned short x1; unsigned short x2; unsigned char x3; char *x4; char x5[16]; } *)a1 withPhraseCandidate:(void *)a2 replacing:(const struct String { unsigned short x0; unsigned short x1; unsigned short x2; unsigned char x3; char *x4; char x5[16]; } *)a3;
- (void)reconcileConversions:(id)a0;
- (void)recordAcceptedAutocorrection:(id)a0 fromPredictiveInputBar:(BOOL)a1;
- (void)recordRejectedAutocorrectionForAcceptedText:(id)a0 fromPredictiveInputBar:(BOOL)a1;
- (void)recordSuggestedAutocorrectionList:(id)a0;
- (void)refreshInputManagerState;
- (void)registerNegativeEvidence:(id)a0 tokenID:(struct TITokenID { unsigned int x0; unsigned int x1; })a1 contextTokens:(id)a2 intended:(id)a3 intendedTokenID:(struct TITokenID { unsigned int x0; unsigned int x1; } *)a4 hint:(int)a5;
- (void)releaseDynamicLanguageModel;
- (void)releaseMRLBuffers;
- (id)remainingInput;
- (BOOL)removeSuffixOfInputContext:(id)a0;
- (void)resetConversationHistory;
- (void)resetLMCache;
- (id)revisionListFromAutocorrectionList:(id)a0 afterAcceptingCandidate:(id)a1;
- (void)runMaintenanceTask;
- (void)scheduleLinguisticResourceUpdate;
- (void)scheduleLinguisticResourceUpdateWithReason:(id)a0;
- (struct LanguageModelContext { struct shared_ptr<std::vector<KB::LanguageModelContext>> { void *x0; struct __shared_weak_count *x1; } x0; struct vector<TITokenID, std::allocator<TITokenID>> { struct TITokenID *x0; struct TITokenID *x1; struct __compressed_pair<TITokenID *, std::allocator<TITokenID>> { struct TITokenID *x0; } x2; } x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; struct LinguisticContext { struct unique_ptr<language_modeling::LinguisticContextImpl, std::default_delete<language_modeling::LinguisticContextImpl>> { struct __compressed_pair<language_modeling::LinguisticContextImpl *, std::default_delete<language_modeling::LinguisticContextImpl>> { struct LinguisticContextImpl *x0; } x0; } x0; } x5; struct LinguisticContext { struct unique_ptr<language_modeling::LinguisticContextImpl, std::default_delete<language_modeling::LinguisticContextImpl>> { struct __compressed_pair<language_modeling::LinguisticContextImpl *, std::default_delete<language_modeling::LinguisticContextImpl>> { struct LinguisticContextImpl *x0; } x0; } x0; } x6; struct vector<std::string, std::allocator<std::string>> { void *x0; void *x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void *x0; } x2; } x7; })sentenceContextForInputStem:(id)a0 inputContext:(id)a1;
- (void)setAutoCorrects:(BOOL)a0;
- (void)setAutoshiftFromInputContext;
- (void)setInputStringFromDocumentState:(id)a0 isDeleteEvent:(BOOL)a1;
- (void)setLearnsCorrection:(BOOL)a0;
- (void)setLinguisticResourceStatus:(unsigned long long)a0 reason:(id)a1;
- (void)setPhraseBoundary:(unsigned long long)a0;
- (void)setPhraseBoundaryIfNecessary;
- (void)setRejectedAutocorrection:(id)a0 forInput:(id)a1;
- (void)setTestingStateObject:(id)a0;
- (int)shiftContext;
- (id)shortcutCompletionsForDocumentState:(id)a0;
- (id)shortcutConversionForDocumentState:(id)a0;
- (id)shortcutConversionForInput:(id)a0 andExistingString:(id)a1 existingStringStartsInMiddleOfWord:(BOOL)a2;
- (id)shortcutConversionForString:(id)a0 stringStartsInMiddleOfWord:(BOOL)a1;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })shortcutSearchRangeForString:(id)a0;
- (BOOL)shouldAllowContextTokenID:(struct TITokenID { unsigned int x0; unsigned int x1; })a0;
- (BOOL)shouldAllowCorrectionOfAcceptedCandidate:(id)a0;
- (BOOL)shouldAutocapitalizePredictionAfterSpace;
- (BOOL)shouldClearInputOnMarkedTextOutOfSync;
- (BOOL)shouldCommitInputString;
- (BOOL)shouldDelayUpdateComposedText;
- (BOOL)shouldDropInputStem;
- (BOOL)shouldGeneratePredictionsForCurrentContext;
- (BOOL)shouldGenerateSuggestionsForSelectedText;
- (BOOL)shouldInsertSpaceBeforeInput:(id)a0;
- (BOOL)shouldInsertSpaceBeforePredictions;
- (BOOL)shouldLearnWord:(id)a0;
- (BOOL)shouldMonitorTypingSession;
- (BOOL)shouldOmitEmojiCandidates;
- (BOOL)shouldSkipShortcutConversionForDocumentState:(id)a0;
- (BOOL)shouldSuppressLanguageSelectionEvidence;
- (BOOL)shouldSuppressLearning;
- (BOOL)shouldSuppressTokenIDLookups;
- (BOOL)shouldUpdateLanguageModel;
- (unsigned int)simulateAutoshiftIfNecessaryForFlags:(unsigned int)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })smartSelectionRangeForTextInDocument:(id)a0 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 language:(id)a2 tokenizedRanges:(id)a3 options:(unsigned long long)a4;
- (id)sortMethodIndexes;
- (id)sortMethodTitles;
- (id)sortMethodsShowExtensionCandidates;
- (id)sortingMethods;
- (BOOL)spaceAndNextInputWouldStartSentence;
- (id)staticDictionaryPathForInputMode:(id)a0;
- (void)storeLanguageModelDynamicDataIncludingCache;
- (BOOL)stringEndsWithClosingQuote:(id)a0;
- (id)suffixOfDesiredString:(id)a0 toAppendToInputString:(id)a1 withInputIndex:(unsigned long long)a2 afterDeletionCount:(unsigned long long *)a3;
- (BOOL)suggestionBlacklistMatchesStrings:(id)a0;
- (id)supplementalAutocorrection;
- (BOOL)supportsLearning;
- (BOOL)supportsShortcutConversion;
- (void)syncInputStringToKeyboardState:(id)a0 afterContextChange:(BOOL)a1;
- (void)syncMarkedTextForKeyboardState:(id)a0 afterContextChange:(BOOL)a1;
- (void)syncToKeyboardState:(id)a0;
- (void)syncToKeyboardState:(id)a0 from:(id)a1 afterContextChange:(BOOL)a2;
- (void)syncToLayoutState:(id)a0;
- (void)synchronizeConversationHistoryWithInputContextHistory:(id)a0;
- (id)terminatorsPrecedingAutospace;
- (void)textAccepted:(id)a0 fromPredictiveInputBar:(BOOL)a1 withInput:(id)a2;
- (id)titleForSortingMethod:(id)a0;
- (struct TITokenID { unsigned int x0; unsigned int x1; })tokenIDForWordSeparator:(unsigned short)a0;
- (void)trackProactiveMetrics:(id)a0 keyboardState:(id)a1;
- (void)transferErrorCorrectionFlagsToInputCandidate:(void *)a0;
- (void)trimInput;
- (void)trimInputAfterLathamConversion;
- (id)trimmedInputStem;
- (id)trimmedInputStemAfterLathamConversion;
- (id)typedStringForEmptyAutocorrection;
- (BOOL)updateAdaptationContextToKeyboardState:(id)a0 from:(id)a1;
- (void)updateComposedText;
- (void)updateDictionaryAndLanguageModel;
- (void)updateForRevisitedString:(id)a0;
- (void)updateInputContext;
- (void)updateResponseModelForKeyboardState:(id)a0;
- (id)usageTrackingKeyForStatistic:(id)a0;
- (unsigned long long)userFrequencyOfWord:(id)a0;
- (unsigned long long)userFrequencyOfWord:(id)a0 lexiconID:(unsigned int)a1;
- (void)willChangeToKeyboardState:(id)a0 afterContextChange:(BOOL)a1;
- (void)willDropInputStem;

@end
