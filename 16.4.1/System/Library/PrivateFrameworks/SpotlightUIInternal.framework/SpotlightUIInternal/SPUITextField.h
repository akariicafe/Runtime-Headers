@class SPUICompletionStringView, SPUIHeaderBlurView, UIResponder, UIView, UIColor, UIGestureRecognizer, NSString, SPUICompletionStringModel, NSTimer, MTMaterialView, UIScribbleInteraction, SPSearchEntity, UIImage;
@protocol SPUITextFieldDelegate, UITextCursorAssertion;

@interface SPUITextField : UISearchTextField <UIGestureRecognizerDelegate, UIScribbleInteractionDelegate>

@property (retain) UIView *tintView;
@property (retain, nonatomic) SPUIHeaderBlurView *blurView;
@property (retain) MTMaterialView *materialView;
@property (readonly) SPSearchEntity *searchEntity;
@property (retain) SPUICompletionStringView *hintingView;
@property BOOL ignoreTokensUpdate;
@property (retain) UIGestureRecognizer *completionTapGestureRecognizer;
@property BOOL lastUpdateWasDeletion;
@property (retain) id<UITextCursorAssertion> caretAssertion;
@property (retain) UIScribbleInteraction *scribbleInteraction;
@property (retain) NSString *restorationStringOnKBMovement;
@property (retain) NSTimer *switchBackToSuggestionsTimer;
@property (retain) UIImage *microphoneImage;
@property (retain) id animateAssertion;
@property BOOL didShowWebEntityBeforeTap;
@property (readonly, nonatomic) BOOL needsLandscapeHeight;
@property (readonly, nonatomic) BOOL optOutOfGoButton;
@property (readonly, nonatomic) NSString *textIncludingTokens;
@property (weak, nonatomic) id<SPUITextFieldDelegate> delegate;
@property (weak, nonatomic) UIResponder *responderForKeyboardInput;
@property (nonatomic) BOOL useChunkyMetrics;
@property (retain, nonatomic) SPUICompletionStringModel *searchFieldModel;
@property (nonatomic) long long activeInterfaceOrientation;
@property (readonly) BOOL completionResultIsPotentiallyPunchout;
@property (readonly) UIView *backgroundBlurView;
@property (readonly) UIColor *primaryColor;
@property (readonly) UIColor *secondaryColor;
@property (readonly) BOOL isOnDarkBackground;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)updateBlueButton;
+ (Class)_backgroundViewClass;
+ (id)removeDictationCharacterInString:(id)a0;
+ (id)webEntityStringForEntity:(id)a0;

- (void)beginFloatingCursorAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)updateRightView;
- (BOOL)keyboardInputShouldDelete:(id)a0;
- (void)escapeKeyCommand;
- (void)updateBorderVisualStyling;
- (void)selectAll:(id)a0;
- (void)resetDeletion;
- (void)setTextColor:(id)a0;
- (void)updateFocusResult:(id)a0 cardSection:(id)a1 focusIsOnFirstResult:(BOOL)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForMagnifierForOriginalRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 isLeftSide:(BOOL)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rightViewRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)becomeFirstResponder;
- (void)keyboardFrameChanged:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })editingRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setFont:(id)a0;
- (void)scribbleInteractionWillBeginWriting:(id)a0;
- (id)focusGroupIdentifier;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })insertFilteredText:(id)a0;
- (void)textFieldWasTapped;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })clearButtonRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)unmarkText;
- (void)promoteCompletionIfPossibleAndMoveForward:(BOOL)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })textRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)updateWithPrimaryColor:(id)a0 secondaryColor:(id)a1 isOnDarkBackground:(BOOL)a2;
- (BOOL)_shouldSendContentChangedNotificationsIfOnlyMarkedTextChanged;
- (void)resetClearButtonWithScale:(long long)a0;
- (void)resetMicrophoneButtonWithScale:(long long)a0;
- (id)nextResponder;
- (void)updateTextRange:(id)a0;
- (void)enterKeyPressed;
- (BOOL)gestureRecognizerShouldBegin:(id)a0;
- (double)textFieldHeight;
- (void)insertText:(id)a0;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (BOOL)canBecomeFocused;
- (id)preferredFocusEnvironments;
- (void)clearAllTokens;
- (id)currentQueryContext;
- (void)tintColorDidChange;
- (void)_promoteCompletionAndMoveForward:(BOOL)a0;
- (BOOL)keyboardInput:(id)a0 shouldInsertText:(id)a1 isMarkedText:(BOOL)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })placeholderRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)didUpdateFocusInContext:(id)a0 withAnimationCoordinator:(id)a1;
- (double)widthOfPlaceholderLabel;
- (long long)_focusItemDeferralMode;
- (void)layoutSubviews;
- (void)updateCaretVisibility:(BOOL)a0;
- (void)removeCaretAssertion;
- (id)keyCommands;
- (void)resetPhoneClearButton;
- (void)detokenizeIfNeededAndSearch:(BOOL)a0;
- (void)keyboardInputChangedSelection:(id)a0;
- (void)updateToken:(id)a0;
- (void)traitCollectionDidChange:(id)a0;
- (BOOL)resignFirstResponder;
- (id)init;
- (void)pressesEnded:(id)a0 withEvent:(id)a1;
- (void)removeCompletionAndHighlight;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_shiftedBoundsForText:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)shouldPromoteCompletion;
- (void)updateCaretVisibility;
- (void)applyMetrics;
- (BOOL)hasContent;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (void).cxx_destruct;
- (void)commitToCommitedSearch;
- (void)removeCompletionsOrEntitiesAndGoToSuggestions:(BOOL)a0;
- (BOOL)canPerformAction:(SEL)a0 withSender:(id)a1;
- (void)toggleCommitedSearch;
- (void)toggleBackToCommittedSearch;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })leftViewRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;

@end
