@class NSString, NSDictionary, DownloadManager, MADAnalyticsManager, NSMutableDictionary, NSObject;
@protocol OS_dispatch_queue;

@interface ControlManager : NSObject

@property (retain, nonatomic) NSDictionary *managedPrefs;
@property (nonatomic) int notifyToken;
@property (nonatomic) BOOL reclaimSpace;
@property (nonatomic) long long targetingPurgeAmount;
@property (retain, nonatomic) NSString *targetingAmountString;
@property (nonatomic) int reclaimUrgency;
@property (retain, nonatomic) NSString *reclaimUrgencyName;
@property (retain, nonatomic) NSString *reclaimVolume;
@property (retain, nonatomic) NSString *cacheDeleteOperationName;
@property (nonatomic) double currentTimeInSeconds;
@property (nonatomic) double preciousNumberOfSeconds;
@property (nonatomic) double defaultNumberOfSeconds;
@property (nonatomic) double deltaToCurrentTimeSeconds;
@property (retain, nonatomic) NSString *garbageCollectionAlterAssetType;
@property (retain, nonatomic) NSString *garbageCollectionAlterBehavior;
@property (retain, nonatomic) NSDictionary *unlockedAutoAssetDescriptors;
@property (retain, nonatomic) NSDictionary *lockedOverridableAutoAssetDescriptors;
@property (retain, nonatomic) NSDictionary *lockedNeverRemoveAutoAssetDescriptors;
@property (retain, nonatomic) NSDictionary *stagedAutoAssetDescriptors;
@property (nonatomic) long long reclaimV2AssetSpace;
@property (nonatomic) long long reclaimV2AssetCount;
@property (nonatomic) long long reclaimUnlockedAutoAssetSpace;
@property (nonatomic) long long reclaimUnlockedAutoAssetCount;
@property (nonatomic) long long reclaimLockedOverridableAutoAssetSpace;
@property (nonatomic) long long reclaimLockedOverridableAutoAssetCount;
@property (nonatomic) long long reclaimLockedNeverRemoveAutoAssetSpace;
@property (nonatomic) long long reclaimLockedNeverRemoveAutoAssetCount;
@property (nonatomic) long long reclaimStagedAutoAssetSpace;
@property (nonatomic) long long reclaimStagedAutoAssetCount;
@property (nonatomic) long long reclaimMetadataBlockedSpace;
@property (nonatomic) long long reclaimMetadataBlockedCount;
@property (readonly, nonatomic) DownloadManager *downloadManager;
@property (readonly, nonatomic) MADAnalyticsManager *analytics;
@property (readonly, nonatomic) NSMutableDictionary *assetTypeDescriptors;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *metaDataQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *assetQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *analyticsQueue;

+ (id)getStringFromXpcMessage:(id)a0 forKey:(const char *)a1;

- (id)hashToString:(id)a0;
- (void)cleanObsoleteSURepo;
- (id)newExtractor:(id)a0 downloadOptions:(id)a1 sessionID:(id)a2 error:(id *)a3;
- (void)handleCommandGetPallasEnabled:(id)a0;
- (BOOL)isAllowlistedForCommand:(long long)a0;
- (void)handleCommandCleanV1Assets:(id)a0;
- (BOOL)loadCatalog:(id)a0 catalogAssets:(id *)a1 assetIds:(id *)a2 postedDate:(id *)a3 lastFetchDate:(id *)a4 catalogInfo:(id *)a5 withPurpose:(id)a6;
- (void)determinePmv:(id)a0 clientName:(id)a1 connection:(id)a2 message:(id)a3 queryDict:(id)a4;
- (BOOL)isCommandAllowedForAllClientsWithoutAssetType:(long long)a0;
- (BOOL)returnTypeIncludesPreinstalled:(long long)a0;
- (BOOL)isEntitledForCommand:(long long)a0 forConnection:(id)a1 forAssetType:(id)a2;
- (void)handleGarbageCollect:(id)a0 and:(id)a1;
- (void)dumpClientUsage:(id)a0 using:(id)a1 and:(id)a2 clientName:(id)a3;
- (void)loadAssetTypeDescriptors;
- (void)handleLoadRequest:(id)a0 clientName:(id)a1 connection:(id)a2 message:(id)a3;
- (BOOL)loadCatalog:(id)a0 catalogAssets:(id *)a1 assetIds:(id *)a2 postedDate:(id *)a3 lastFetchDate:(id *)a4 catalogInfo:(id *)a5;
- (void)determineOneAsset:(id)a0 clientName:(id)a1 connection:(id)a2 message:(id)a3 specificAssetId:(id)a4 specificAllowedDifferences:(id)a5;
- (long long)garbageCollectionDescriptorType:(id)a0;
- (void)writeDictionaryToFile:(id)a0 to:(id)a1 with:(id)a2;
- (id)alterGarbageColletionLevel:(id)a0 basedOnAssetDirectory:(id)a1;
- (id)getAssetAttributes:(id)a0;
- (void)handleCommandRefreshAssetState:(id)a0;
- (void)handleGetAllowNonUserInitiated:(id)a0 message:(id)a1 clientName:(id)a2;
- (void)handleCommandConfigDownload:(id)a0;
- (long long)performCacheDeleteForGroup:(id)a0 forAssetTypeDir:(id)a1;
- (BOOL)purgeCatalogOfType:(id)a0 clientName:(id)a1 withPurpose:(id)a2;
- (void)applyDataVaults;
- (BOOL)commandRequiresForcedSoftwareUpdateType:(id)a0;
- (void)handleDataMigrator:(id)a0 message:(id)a1 clientName:(id)a2;
- (void)handleGetMABrainInfo:(id)a0 message:(id)a1 clientName:(id)a2;
- (BOOL)categorizeAssetResults:(id)a0 fromCatalogIds:(id)a1 repositoryIds:(id)a2 andPreinstalledIds:(id)a3 intoServerOnlyIds:(id *)a4 installedCatalogIds:(id *)a5 andObsoleteIds:(id *)a6;
- (void)activityNotification:(id)a0 ofStatusChange:(unsigned long long)a1 withReason:(id)a2;
- (BOOL)loadRepository:(id)a0 localIds:(id *)a1 withPurpose:(id)a2;
- (void)purgeAll:(id)a0 and:(id)a1 assetTypesList:(id)a2 clientName:(id)a3;
- (id)convertToArchiveable:(id)a0 incoming:(id)a1 overrideState:(long long)a2 filterToIds:(id)a3 withPurpose:(id)a4;
- (id)dictionaryWithArrayOfStringValues:(id)a0 forXpcKey:(const char *)a1 andLengthKey:(const char *)a2 failureReason:(id *)a3;
- (id)associateRequiredFields:(long long)a0 fromRequest:(id)a1 toCommandRequest:(id)a2 forCommandTracker:(id)a3;
- (void)handleCommandQueryPMV:(id)a0;
- (void)handleCommandPurgeAll:(id)a0;
- (id)newPrefsCopyValueForKey:(id)a0;
- (void)sendStateOfAssetReply:(id)a0 incoming:(id)a1 with:(long long)a2;
- (void)handleCommandGetSandboxExtension:(id)a0;
- (id)getCatalogLastModifiedDate:(id)a0 ifFromXmlUrl:(id)a1 withPurpose:(id)a2;
- (void)setPreferenceKeySync:(id)a0 andValue:(id)a1 allowNilToClear:(BOOL)a2;
- (void)determineAssets:(id)a0 clientName:(id)a1 connection:(id)a2 downloadingTasks:(id)a3 message:(id)a4 resultTypes:(long long)a5 queryArray:(id)a6 isForSpecificAsset:(BOOL)a7 specificAssetId:(id)a8 specificAllowedDifferences:(id)a9;
- (void)getProductMarketingVersions:(id)a0 and:(id)a1 clientName:(id)a2 assetType:(id)a3;
- (BOOL)isAssetInCatalog:(id)a0 assetId:(id)a1;
- (void)handleCommandRepairState:(id)a0;
- (BOOL)checkEntitlementAndRespondIfErrorForConnection:(id)a0 usingMessage:(id)a1 forAssetType:(id)a2 withCommand:(long long)a3;
- (void)handleCommandMigrateAssets:(id)a0;
- (void)handleUpdateMABrain:(id)a0 message:(id)a1 clientName:(id)a2;
- (void)overrideGCValue:(id)a0 using:(id)a1 and:(id)a2 clientName:(id)a3;
- (void)maintainReclaimCountsByCollectionType:(long long)a0 reclaimAssetSpace:(long long)a1;
- (void)handleReportingRequest:(id)a0 message:(id)a1 clientName:(id)a2;
- (void)handleCommandDumpClidentUsage:(id)a0;
- (BOOL)loadRepository:(id)a0 localIds:(id *)a1;
- (id)getMetadataFromCatalog:(id)a0 key:(id)a1 withPurpose:(id)a2;
- (void)purgeCatalogs:(id)a0 and:(id)a1 assetTypesList:(id)a2 clientName:(id)a3;
- (void)handleGetServerUrl:(id)a0 message:(id)a1 client:(id)a2 clientName:(id)a3;
- (void)handleCommandPurgeCatalogs:(id)a0;
- (BOOL)purgeAllAssetsOfType:(id)a0 forPurpose:(id)a1 clientName:(id)a2 exceptForAssetIds:(id)a3;
- (BOOL)checkEntitlementAndRespondIfErrorForConnection:(id)a0 usingMessage:(id)a1 forAssetTypes:(id)a2 withCommand:(long long)a3;
- (void)removeAssetDir:(id)a0 assetType:(id)a1 clientName:(id)a2 using:(id)a3;
- (id)chooseDescriptorsOfType:(long long)a0;
- (long long)performCacheDeleteCollection:(id)a0 forCollectionType:(long long)a1 withGarbageCollectionTypes:(id)a2;
- (id)dictionaryWithArrayOfStringValues:(id)a0 forXpcKey:(const char *)a1 andLengthKey:(const char *)a2 clientName:(id)a3;
- (void)handleQueryRequest:(id)a0 clientName:(id)a1 connection:(id)a2 message:(id)a3;
- (void)handleEnsureDataVault:(id)a0 message:(id)a1 client:(id)a2 clientName:(id)a3;
- (BOOL)isAssetTypeOptionalForCommand:(long long)a0;
- (id)determineBestMatchFor:(id)a0 absoluteId:(id)a1 allowedDifferences:(id)a2 fromResults:(id)a3 isExact:(BOOL *)a4 candidates:(unsigned long long *)a5 bestMatch:(id *)a6 differencesFound:(id *)a7 missedTypeAndAssetIdMatch:(id *)a8;
- (void)handleCommandDownloadMetadata:(id)a0;
- (void)handleCoverageDump:(id)a0 using:(id)a1;
- (long long)removeDirectoryAtPath:(id)a0 firstRenamingWithExtension:(id)a1;
- (void)handleCommandGetPallasAudience:(id)a0;
- (BOOL)returnTypeIncludesInstalledInCatalog:(long long)a0;
- (void)sendPmvResults:(id)a0 pmvInfo:(id)a1 postedDate:(id)a2 lastFetchedDate:(id)a3 result:(long long)a4 connection:(id)a5 message:(id)a6;
- (void)writeJsonDictionaryToFile:(id)a0 to:(id)a1 with:(id)a2;
- (void)handleCommandCancelCatalogDownload:(id)a0;
- (void)loadManagedPrefs;
- (void)getStateOfAsset:(id)a0 incoming:(id)a1 assetType:(id)a2;
- (id)checkEntitlement:(id)a0 forAssetTypes:(id)a1;
- (void)handleCommandNSURLStateDump:(id)a0;
- (id)checkEntitlement:(id)a0 forAssetType:(id)a1;
- (void)determineAssets:(id)a0 clientName:(id)a1 connection:(id)a2 downloadingTasks:(id)a3 message:(id)a4 resultTypes:(long long)a5 queryArray:(id)a6;
- (void)moveAssetIntoRepo:(id)a0 forType:(id)a1 forAsset:(id)a2 cleanUp:(id)a3 with:(id)a4;
- (void)handleCommandGarbageCollect:(id)a0;
- (BOOL)hasOnlyAllowedDifferencesFrom:(id)a0 inAttributes:(id)a1 assetId:(id)a2 assetType:(id)a3 allowed:(id)a4 foundAbsoluteId:(id *)a5 foundDiff:(id *)a6;
- (void)handleClientConnection:(id)a0 on:(id)a1;
- (void)handleCommandSetPallasEnabled:(id)a0;
- (void)handleCommandCancelDownload:(id)a0;
- (void)handleClientConnection:(id)a0 usingDispatchQueue:(id)a1;
- (id)newCatalogLoad:(id)a0 withPurpose:(id)a1;
- (void)removeDownloadsNotRecentlyInFlight:(id)a0;
- (id)locateDescriptorForAssetDirectory:(id)a0 fromDescriptors:(id)a1;
- (void)checkAndInitiateDownloadForAssetType:(id)a0 message:(id)a1 forClientName:(id)a2 usingConnection:(id)a3 requiringClientExtractor:(BOOL)a4;
- (void)setServerConnectionHandler:(id)a0 with:(id)a1 and:(id)a2;
- (BOOL)returnTypeIncludesObsolete:(long long)a0 andHasCatalog:(BOOL)a1;
- (void)handleCommandDumpCodeCoverage:(id)a0;
- (BOOL)isAssetInCatalog:(id)a0 assetId:(id)a1 withPurpose:(id)a2;
- (BOOL)isAssetTypeRequiredForCommand:(long long)a0;
- (BOOL)returnTypeIncludesServerOnly:(long long)a0;
- (void)handleCommandDownloadAsset:(id)a0;
- (void)handleCommandPurgeAsset:(id)a0;
- (BOOL)beforeFirstUnlock;
- (void)handleCommandLoadAssetByID:(id)a0;
- (void)analyticsInitialization;
- (double)alterSecondsBeforeCollection:(double)a0 forAssetTypeDir:(id)a1 determinedDescriptorType:(long long)a2 fromDescriptors:(id)a3 isAutoAsset:(BOOL *)a4 autoAssetDescriptor:(id *)a5 assetFilesystemSize:(long long *)a6;
- (long long)performGarbageCollectionOfType:(long long)a0 forAssetTypeDir:(id)a1 fromDescriptors:(id)a2;
- (id)init;
- (void)handleCommandSetPallasURL:(id)a0;
- (void)handleServerUrlOverride:(id)a0 message:(id)a1 client:(id)a2 clientName:(id)a3;
- (void)handleUpdateClientUsage:(id)a0 using:(id)a1 and:(id)a2 clientName:(id)a3;
- (id)associateOptionalFields:(long long)a0 fromRequest:(id)a1 toCommandRequest:(id)a2 forCommandTracker:(id)a3;
- (void)handleMigrateAssetsRequest:(id)a0 using:(id)a1 and:(id)a2;
- (id)applyPmvQuery:(id)a0 queryDict:(id)a1 explanation:(id *)a2;
- (BOOL)purgeAllAssetsInDirectory:(id)a0 clientName:(id)a1 exceptForAssetIds:(id)a2;
- (void)sendQueryResults:(id)a0 assetType:(id)a1 purpose:(id)a2 catalogInfo:(id)a3 returnTypes:(long long)a4 postedDate:(id)a5 lastFetchedDate:(id)a6 result:(long long)a7 isFiltered:(BOOL)a8 requireSpecificAsset:(BOOL)a9 connection:(id)a10 message:(id)a11 clientName:(id)a12;
- (void)removeAllObsoletedV1Assets;
- (void)ensureProperDirectoryState;
- (long long)getStateOfAssetInCatalog:(id)a0 assetId:(id)a1 withPurpose:(id)a2;
- (void)cancelDownload:(id)a0 using:(id)a1 for:(id)a2 assetType:(id)a3 purpose:(id)a4 withExtension:(id)a5;
- (void)handleCommandQuerInstalledIDs:(id)a0;
- (void)handleCommandQueryAssetType:(id)a0;
- (void)setPreferenceKeyAsync:(id)a0 andValue:(id)a1 allowNilToClear:(BOOL)a2 replyUsing:(id)a3 and:(id)a4;
- (void)handleClientCommand:(id)a0;
- (void)respondToCacheDelete:(BOOL)a0 targetingPurgeAmount:(long long)a1 withUrgency:(int)a2 forVolume:(id)a3 then:(id /* block */)a4;
- (id)decodeXpcObject:(id)a0 ofClass:(Class)a1 dataKey:(id)a2 lengthKey:(id)a3 decodeClasses:(id)a4 error:(id *)a5;
- (void)handleCommandCancelPMVDownload:(id)a0;
- (void)handleCommandSetPallasAudience:(id)a0;
- (void)handlePmvRequest:(id)a0 clientName:(id)a1 connection:(id)a2 message:(id)a3;
- (void)handleCommandDownloadPMV:(id)a0;
- (void)handleCommandSpaceCheck:(id)a0;
- (void)ensureSUDownloadTempDir;
- (void).cxx_destruct;
- (BOOL)isCommandRequiringForcedSoftwareUpdateType:(long long)a0;
- (id)newCatalogLoad:(id)a0;
- (long long)updateLastFetchedDate:(id)a0 assetType:(id)a1 withPurpose:(id)a2 with:(id)a3;
- (int)getNotEntitledResultForCommand:(unsigned long long)a0;
- (void)handleCommandOverrideGC:(id)a0;
- (void)handleCommandUpdateClientUsage:(id)a0;
- (BOOL)associateFieldsFromRequest:(id)a0 withCommandTracker:(id)a1;
- (void)handleCommandServerURLOverride:(id)a0;

@end
