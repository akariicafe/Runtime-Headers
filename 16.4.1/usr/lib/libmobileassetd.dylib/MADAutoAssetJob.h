@class NSMutableDictionary, MAAutoAssetProgress, MAAutoAssetSelector, NSDictionary, MAAutoAssetInfoDesire, MAAutoAssetSummary, SUCoreFSM, NSMutableArray, NSString, MAAutoAssetInfoListen, MAAutoAssetInfoInstance, SUCoreLog, MAAutoAssetStatus, MAMsuDownloadOptions, MADAutoAssetDescriptor, MAAutoAssetPolicy, MAAutoAssetInfoFound, MAAutoAssetInfoEnd;

@interface MADAutoAssetJob : NSObject <SUCoreFSMDelegate>

@property (retain, nonatomic) MAAutoAssetInfoInstance *autoAssetInstance;
@property (retain, nonatomic) NSString *latestSafeSummary;
@property (retain, nonatomic) MAAutoAssetSummary *latestAutoAssetSummary;
@property (nonatomic) BOOL schedulerInvolved;
@property (nonatomic) BOOL potentialNetworkFailure;
@property (nonatomic) BOOL stagerJob;
@property (nonatomic) BOOL stagerJobDownloadContent;
@property (nonatomic) BOOL stagerJobResultsReported;
@property (retain, nonatomic) NSString *stagerAssetTargetOSVersion;
@property (retain, nonatomic) NSString *stagerAssetTargetBuildVersion;
@property (retain, nonatomic) MADAutoAssetJob *bondedWithJob;
@property (readonly, retain, nonatomic) SUCoreLog *logger;
@property (retain, nonatomic) NSMutableArray *activeJobTasks;
@property (readonly, retain, nonatomic) NSDictionary *stateTable;
@property (retain, nonatomic) SUCoreFSM *autoJobFSM;
@property (retain, nonatomic) MAAutoAssetInfoInstance *activeInstance;
@property (retain, nonatomic) MAAutoAssetInfoDesire *activeDesire;
@property (retain, nonatomic) MAAutoAssetInfoFound *activeFound;
@property (retain, nonatomic) MAAutoAssetInfoEnd *activeEnd;
@property (retain, nonatomic) MAAutoAssetInfoListen *activeListen;
@property (retain, nonatomic) MAAutoAssetPolicy *aggregatedClientAssetPolicy;
@property (nonatomic) BOOL aggregatedClientAssetPolicySpecified;
@property (nonatomic) BOOL clientRequestedOperation;
@property (retain, nonatomic) NSString *firstClientName;
@property (retain, nonatomic) NSString *jobCreationTriggeringLayer;
@property (retain, nonatomic) NSMutableDictionary *onFilesystemByVersion;
@property (retain, nonatomic) NSString *checkUUIDBasePortion;
@property (retain, nonatomic) NSString *checkUUID;
@property (nonatomic) BOOL holdingLookupGrant;
@property (nonatomic) BOOL rampingForeground;
@property (nonatomic) BOOL rampingForegroundLatched;
@property (retain, nonatomic) MAMsuDownloadOptions *catalogDownloadOptions;
@property (retain, nonatomic) MAMsuDownloadOptions *assetDownloadOptions;
@property (retain, nonatomic) MADAutoAssetDescriptor *baseForPatch;
@property (retain, nonatomic) MADAutoAssetDescriptor *foundNewerPatch;
@property (retain, nonatomic) MADAutoAssetDescriptor *foundNewerFull;
@property (retain, nonatomic) MADAutoAssetDescriptor *newerFoundAssetDescriptor;
@property (retain, nonatomic) MADAutoAssetDescriptor *downloadingAssetDescriptor;
@property (nonatomic) BOOL schedulerTriggerReceived;
@property (nonatomic) BOOL downloadingUserInitiated;
@property (nonatomic) BOOL boostedToUserInitiated;
@property (nonatomic) BOOL checkingAssetContent;
@property (nonatomic) BOOL determiningAssetContent;
@property (nonatomic) BOOL lockingAssetContent;
@property (nonatomic) BOOL wasPatched;
@property (retain, nonatomic) NSString *latestInstalledAssetVersion;
@property (retain, nonatomic) NSString *latestInstalledAssetBuild;
@property (retain, nonatomic) MAAutoAssetStatus *currentStatus;
@property (nonatomic) long long progressReportPhase;
@property (retain, nonatomic) MAAutoAssetProgress *lastReportedPatchProgress;
@property (retain, nonatomic) MAAutoAssetSelector *resultSelector;
@property (retain, nonatomic) MAAutoAssetInfoInstance *resultInstance;
@property (retain, nonatomic) MAAutoAssetInfoFound *resultFound;
@property (retain, nonatomic) MAAutoAssetInfoEnd *resultEnd;
@property (retain, nonatomic) MAAutoAssetInfoListen *resultListen;
@property (nonatomic) long long simulateOperation;
@property (nonatomic) long long simulateEnd;
@property (nonatomic) long long simulateTriggered;
@property (retain, nonatomic) MADAutoAssetDescriptor *simulateDescriptor;
@property (retain, nonatomic) MADAutoAssetDescriptor *simulateBaseForPatch;
@property (readonly, retain, nonatomic) MAAutoAssetSelector *autoAssetSelector;
@property (readonly, retain, nonatomic) NSString *autoAssetUUID;
@property (nonatomic) long long clientRequestCount;
@property (nonatomic) BOOL earlierSchedulerInvolved;
@property (nonatomic) BOOL earlierPotentialNetworkFailure;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)_getAutoAssetJobStateTable;

- (void)simulateSet:(id)a0;
- (void)handleSimulateOperation:(id)a0;
- (id)latestInstalledOnFilesystem;
- (id)_summary;
- (long long)action_DecideDonePurging:(id)a0 error:(id *)a1;
- (id)clientName;
- (void)releaseLookupGrant;
- (long long)action_MergeNeedsDecideLookupBoost:(id)a0 error:(id *)a1;
- (long long)action_JobSuccessAlreadyDownloaded:(id)a0 error:(id *)a1;
- (void)statusChangeDownloadProgress:(id)a0;
- (long long)action_FailRequestCanceling:(id)a0 error:(id *)a1;
- (id)initForSelector:(id)a0 withAutoAssetUUID:(id)a1;
- (long long)action_JobSuccessFoundSameSchedule:(id)a0 error:(id *)a1;
- (void)addToActiveJobTasks:(id)a0;
- (void)stagerJobDownloadDone:(id)a0 reportingError:(id)a1;
- (void)handleDownloadAssetProgressForJob:(id)a0 withProgress:(id)a1;
- (long long)action_DecideStartupDownloading:(id)a0 error:(id *)a1;
- (void)replyToJobsWhenContentDownloaded:(id)a0;
- (long long)action_JobSuccessPatchedSchedule:(id)a0 error:(id *)a1;
- (long long)action_BoostAndRequestLookupGrant:(id)a0 error:(id *)a1;
- (long long)action_RemoveClient:(id)a0 error:(id *)a1;
- (long long)action_AddTaskInterestDecideFilesystem:(id)a0 error:(id *)a1;
- (void)trackAnomaly:(long long)a0 forReason:(id)a1;
- (long long)action_AdoptRegister:(id)a0 error:(id *)a1;
- (void)stagerJobDone:(id)a0 reportingError:(id)a1;
- (void)simulateEnd:(long long)a0;
- (long long)action_ReleaseGrantJobFailedCanceled:(id)a0 error:(id *)a1;
- (long long)action_JobSuccessDownloadedSchedule:(id)a0 error:(id *)a1;
- (long long)action_MergeContinueLock:(id)a0 error:(id *)a1;
- (void)persistedStateForDownloadJob:(id)a0;
- (void)statusChangeStartingAssetDownload:(id)a0 downloadingPatch:(BOOL)a1;
- (id)newSessionID;
- (long long)action_ReportFailureUserInitiated:(id)a0 error:(id *)a1;
- (void)replyToJobsWhenLookupFailed:(id)a0 withLookupError:(id)a1;
- (long long)action_JobPostponedSchedule:(id)a0 error:(id *)a1;
- (long long)action_RequestSpecificPersisted:(id)a0 error:(id *)a1;
- (long long)action_DecideDownloadOrPostpone:(id)a0 error:(id *)a1;
- (void)updateResultPropertiesWithDescriptor:(id)a0;
- (long long)action_UserInitiatedDownloadNewestFull:(id)a0 error:(id *)a1;
- (long long)action_LookupSuccessContinue:(id)a0 error:(id *)a1;
- (long long)action_ReleaseGrantCanceling:(id)a0 error:(id *)a1;
- (long long)action_AddTaskLockDecideFilesystem:(id)a0 error:(id *)a1;
- (id)_baseAnalyticsData:(id)a0;
- (BOOL)isMorePreferredFormat:(id)a0 comparedTo:(id)a1;
- (id)_updateLatestSummary;
- (long long)action_DownloadNewestPatch:(id)a0 error:(id *)a1;
- (long long)action_PersistedDecideDownload:(id)a0 error:(id *)a1;
- (void)requestDownloadManagerConfigDownload:(id)a0 forDescriptor:(id)a1;
- (void)checkFilesystemAndDecidePurgeOrLookup;
- (void)obtainLookupGrant;
- (void)stagerJobReportProgress:(id)a0 reportingError:(id)a1;
- (void)statusChangeSuccesfullyPatched:(id)a0;
- (void)requestDownloadManagerCancelDownload:(id)a0 forDescriptor:(id)a1;
- (long long)action_StagerDetermineDecideFilesystem:(id)a0 error:(id *)a1;
- (BOOL)anyJobInterestedInContent;
- (void)statusChange:(id)a0 catalogAnomaly:(long long)a1 forReason:(id)a2;
- (long long)action_JobSuccessDownloadedAwaiting:(id)a0 error:(id *)a1;
- (void)startHandlingClientRequest:(id)a0 withControlInformation:(id)a1;
- (id)getCurrentJobTask;
- (void)startStagerDownloadForStaging:(id)a0 withAssetTargetBuildVersion:(id)a1 withControlInformation:(id)a2;
- (void)statusChangeCatalogFoundSame:(id)a0;
- (long long)action_AddTaskDecideFilesystem:(id)a0 error:(id *)a1;
- (void)doneWithAllJobs:(id)a0;
- (long long)action_MergeAddLockDecideBoost:(id)a0 error:(id *)a1;
- (void)latchWhetherDownloadingUserInitiated;
- (void)clientRequestedStatus:(id)a0;
- (long long)action_RequestLookupGrant:(id)a0 error:(id *)a1;
- (void)exclusiveLookupForAssetTypeGranted:(id)a0;
- (long long)action_JobFailedCanceled:(id)a0 error:(id *)a1;
- (void)refreshOnFilesystemFromManager;
- (id)removeCurrentJobTask;
- (long long)action_MergeContinueLockDecideBoost:(id)a0 error:(id *)a1;
- (void)refreshFoundToManager;
- (void)setCurrentJobTask:(id)a0;
- (long long)action_NowUserInitiated:(id)a0 error:(id *)a1;
- (void)startResumingInFlightDownload:(id)a0 withControlInformation:(id)a1;
- (long long)action_ReleaseGrantJobFailedSchedule:(id)a0 error:(id *)a1;
- (void)statusChangeCatalogFoundNewer:(id)a0;
- (id)summary;
- (id)initForInstance:(id)a0 orForSelector:(id)a1 orForDescriptor:(id)a2 withBaseForPatchDescriptor:(id)a3 withAutoAssetUUID:(id)a4 asStagerJob:(BOOL)a5;
- (void)finishJobTaskForJobParam:(id)a0 withResponseError:(id)a1;
- (void)handleDownloadConfigJobFinished:(id)a0 configError:(id)a1;
- (id)summaryOfJob;
- (long long)performAction:(id)a0 onEvent:(id)a1 inState:(id)a2 withInfo:(id)a3 nextState:(id)a4 error:(id *)a5;
- (long long)action_CancelAssetDownload:(id)a0 error:(id *)a1;
- (BOOL)isFoundAlreadyOnFilesystem;
- (long long)action_RemoveClientDecideInterest:(id)a0 error:(id *)a1;
- (void)statusChangeSuccessfullyDownloaded:(id)a0;
- (long long)action_JobNoNewerSchedule:(id)a0 error:(id *)a1;
- (long long)errorCodeFromUnderling:(id)a0;
- (void)_extendCatalogDownloadOptionsWithAnalyticsData:(id)a0;
- (long long)action_LookupRevokedContinue:(id)a0 error:(id *)a1;
- (long long)action_JobSuccessPatchedAwaiting:(id)a0 error:(id *)a1;
- (void)statusChangeReportCurrent:(id)a0;
- (long long)action_MergeNeedsDecideLookup:(id)a0 error:(id *)a1;
- (void)statusChangeJobFinished:(id)a0 withResponseError:(id)a1;
- (long long)action_LookupFailedContinue:(id)a0 error:(id *)a1;
- (void)finishJobTaskForJobParam:(id)a0 withUnderlyingError:(id)a1 fromAction:(id)a2;
- (long long)action_LookupNoNewerContinue:(id)a0 error:(id *)a1;
- (long long)action_MergeNeedsDecideBoost:(id)a0 error:(id *)a1;
- (long long)actionUnknownAction:(id)a0 error:(id *)a1;
- (long long)action_FailedPatchDecideTryFull:(id)a0 error:(id *)a1;
- (long long)action_MergeAddLock:(id)a0 error:(id *)a1;
- (void)stagerJobDetermineDone:(id)a0 reportingError:(id)a1;
- (id)progressReportPhaseName;
- (long long)action_DownloadCatalog:(id)a0 error:(id *)a1;
- (id)initForSelector:(id)a0 withAutoAssetUUID:(id)a1 asStagerJob:(BOOL)a2;
- (long long)action_BoostToUserInitiated:(id)a0 error:(id *)a1;
- (id)mostSpecificSelectorToReport;
- (void)addClientRequestAndMergeNeeds:(id)a0 forJobEvent:(id)a1;
- (long long)action_CheckSimulateEndStatusRequest:(id)a0 error:(id *)a1;
- (void)replyToClientForJobParam:(id)a0 withResponseError:(id)a1;
- (long long)action_StagerDownloadDecideFilesystem:(id)a0 error:(id *)a1;
- (long long)action_AddTaskDetermineDecideFilesystem:(id)a0 error:(id *)a1;
- (id)newAssetDownloadOptions;
- (void)handleDownloadCatalogJobFinished:(id)a0 withCatalog:(id)a1 downloadError:(id)a2;
- (void)_rememberIfSchedulerInvolved:(id)a0;
- (void)startStagerDetermineIfAvailable:(id)a0 withAssetTargetBuildVersion:(id)a1 withControlInformation:(id)a2;
- (long long)action_RecordSimulateOperation:(id)a0 error:(id *)a1;
- (long long)action_MergeNeeds:(id)a0 error:(id *)a1;
- (long long)action_ReportDownloadProgress:(id)a0 error:(id *)a1;
- (void)refreshDownloadedToManager;
- (long long)action_MergeRemoveLockDecideInterest:(id)a0 error:(id *)a1;
- (void)requestDownloadManagerCatalogLookup:(id)a0;
- (long long)action_ReportCatalogDecideFound:(id)a0 error:(id *)a1;
- (void)replyToJobsWhenCatalogDownloaded:(id)a0;
- (void)autoAssetJobFinished:(id)a0;
- (void)_extendAssetDownloadOptionsWithAnalyticsData:(id)a0 forDescriptor:(id)a1 withBaseForPatch:(id)a2;
- (long long)action_JobFailedSchedule:(id)a0 error:(id *)a1;
- (id)initForDescriptor:(id)a0 baseForPatchDescriptor:(id)a1 withAutoAssetUUID:(id)a2;
- (void)handleDownloadAssetJobFinished:(id)a0 downloadError:(id)a1;
- (void)cancelAutoAssetJob;
- (void)_autoAssetJobFinished:(id)a0;
- (void)handleClientRequest:(id)a0 withControlInformation:(id)a1;
- (long long)action_AddTaskCheckDecideFilesystem:(id)a0 error:(id *)a1;
- (long long)action_DownloadNewestFull:(id)a0 error:(id *)a1;
- (void)foundAndDownloaded:(id)a0 forJobParam:(id)a1 wasPatched:(BOOL)a2;
- (id)newCatalogDownloadOptions;
- (void)doneWithAllJobs:(id)a0 withLookupError:(id)a1;
- (long long)action_JobEndedSchedule:(id)a0 error:(id *)a1;
- (void)startScheduleTriggeredSelector:(id)a0 withControlInformation:(id)a1;
- (id)initForInstance:(id)a0 withAutoAssetUUID:(id)a1;
- (void)statusChange:(id)a0 catalogFailure:(long long)a1 forReason:(id)a2;
- (long long)action_JobRevokedSchedule:(id)a0 error:(id *)a1;
- (long long)action_AddTaskSchedulerDecideFilesystem:(id)a0 error:(id *)a1;
- (void)requestDownloadManagerAssetDownload:(id)a0 forDescriptor:(id)a1 withBaseForPatch:(id)a2;
- (long long)action_MergeRemoveLock:(id)a0 error:(id *)a1;
- (void).cxx_destruct;
- (long long)action_SimulateSuspendCatalogLookupIssue:(id)a0 error:(id *)a1;
- (long long)action_AddTaskScheduler:(id)a0 error:(id *)a1;
- (id)currentJobInformation:(id *)a0;
- (void)downloadCatalog:(id)a0;
- (long long)action_JobFailedAwaiting:(id)a0 error:(id *)a1;
- (id)decideFollowupBoost:(id)a0 forJobEvent:(id)a1 boostEvent:(id)a2 noBoostEvent:(id)a3;
- (void)desireChangedToUserInitiated;
- (id)installedOnFilesystemWithVersion:(id)a0;

@end
