@class NSString;

@interface NSObject <NSObject> {
    Class isa;
}

@property (class, readonly) BOOL accessInstanceVariablesDirectly;

@property void *observationInfo;
@property (readonly) Class classForKeyedArchiver;
@property (readonly, retain) id autoContentAccessingProxy;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)load;
+ (BOOL)instancesImplementSelector:(SEL)a0;
+ (long long)version;
+ (BOOL)implementsSelector:(SEL)a0;
+ (void)setVersion:(long long)a0;
+ (id)_createMutableOrderedSetValueGetterWithContainerClassID:(id)a0 key:(id)a1;
+ (id)_createMutableSetValueGetterWithContainerClassID:(id)a0 key:(id)a1;
+ (void)cancelPreviousPerformRequestsWithTarget:(id)a0 selector:(SEL)a1 object:(id)a2;
+ (id)_createValuePrimitiveGetterWithContainerClassID:(id)a0 key:(id)a1;
+ (id)_createMutableArrayValueGetterWithContainerClassID:(id)a0 key:(id)a1;
+ (id)_createValuePrimitiveSetterWithContainerClassID:(id)a0 key:(id)a1;
+ (id)_createOtherValueGetterWithContainerClassID:(id)a0 key:(id)a1;
+ (id)_createOtherValueSetterWithContainerClassID:(id)a0 key:(id)a1;
+ (void)setKeys:(id)a0 triggerChangeNotificationsForDependentKey:(id)a1;
+ (id)_createValueGetterWithContainerClassID:(id)a0 key:(id)a1;
+ (id)_createValueSetterWithContainerClassID:(id)a0 key:(id)a1;
+ (Class)classForKeyedUnarchiver;
+ (BOOL)_shouldAddObservationForwardersForKey:(id)a0;
+ (void)cancelPreviousPerformRequestsWithTarget:(id)a0;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)a0;
+ (id)_keysForValuesAffectingValueForKey:(id)a0;
+ (id)classFallbacksForKeyedArchiver;
+ (id)keyPathsForValuesAffectingValueForKey:(id)a0;
+ (id)replacementObjectForPortCoder:(id)a0;
+ (id)SFSQLiteClassName;
+ (id)_copyDescription;
+ (void)doesNotRecognizeSelector:(SEL)a0;
+ (id)__allocWithZone_OA:(struct _NSZone { } *)a0;
+ (id)instanceMethodSignatureForSelector:(SEL)a0;
+ (void)load;
+ (id)init;
+ (id)methodSignatureForSelector:(SEL)a0;
+ (void)dealloc;
+ (id)description;
+ (id)self;
+ (struct _NSZone { } *)zone;
+ (id)allocWithZone:(struct _NSZone { } *)a0;
+ (void)initialize;
+ (id)performSelector:(SEL)a0;
+ (Class)class;
+ (id)performSelector:(SEL)a0 withObject:(id)a1;
+ (id)performSelector:(SEL)a0 withObject:(id)a1 withObject:(id)a2;
+ (void)doesNotRecognizeSelector:(SEL)a0;
+ (Class)superclass;
+ (id)instanceMethodSignatureForSelector:(SEL)a0;
+ (BOOL)isProxy;
+ (void)forwardInvocation:(id)a0;
+ (id)alloc;
+ (BOOL)isSubclassOfClass:(Class)a0;
+ (id)init;
+ (BOOL)instancesRespondToSelector:(SEL)a0;
+ (id)methodSignatureForSelector:(SEL)a0;
+ (id)mutableCopy;
+ (id)forwardingTargetForSelector:(SEL)a0;
+ (BOOL)isKindOfClass:(Class)a0;
+ (id)autorelease;
+ (id)copyWithZone:(struct _NSZone { } *)a0;
+ (oneway void)release;
+ (BOOL)isMemberOfClass:(Class)a0;
+ (BOOL)_isDeallocating;
+ (void)dealloc;
+ (BOOL)_tryRetain;
+ (BOOL)respondsToSelector:(SEL)a0;
+ (unsigned long long)retainCount;
+ (id)copy;
+ (void /* function */ *)methodForSelector:(SEL)a0;
+ (unsigned long long)hash;
+ (BOOL)conformsToProtocol:(id)a0;
+ (void /* function */ *)instanceMethodForSelector:(SEL)a0;
+ (id)mutableCopyWithZone:(struct _NSZone { } *)a0;
+ (id)new;
+ (BOOL)resolveInstanceMethod:(SEL)a0;
+ (id)description;
+ (BOOL)allowsWeakReference;
+ (id)retain;
+ (BOOL)isEqual:(id)a0;
+ (BOOL)isFault;
+ (BOOL)isAncestorOfObject:(id)a0;
+ (BOOL)retainWeakReference;
+ (id)debugDescription;
+ (BOOL)resolveClassMethod:(SEL)a0;

- (id)awakeAfterUsingCoder:(id)a0;
- (id)replacementObjectForCoder:(id)a0;
- (BOOL)_allowsDirectEncoding;
- (BOOL)implementsSelector:(SEL)a0;
- (Class)classForCoder;
- (void)receiveObservedValue:(id)a0;
- (void)setValue:(id)a0 forKeyPath:(id)a1;
- (void)_receiveBox:(id)a0;
- (BOOL)_isKVOA;
- (void)_didChangeValuesForKeys:(id)a0;
- (void)willChangeValueForKey:(id)a0;
- (id)dictionaryWithValuesForKeys:(id)a0;
- (void)_changeValueForKeys:(id *)a0 count:(unsigned long long)a1 maybeOldValuesDict:(id)a2 maybeNewValuesDict:(id)a3 usingBlock:(id /* block */)a4;
- (void)_willChangeValuesForKeys:(id)a0;
- (id)replacementObjectForKeyedArchiver:(id)a0;
- (void)setValue:(id)a0 forUndefinedKey:(id)a1;
- (void)performSelectorOnMainThread:(SEL)a0 withObject:(id)a1 waitUntilDone:(BOOL)a2 modes:(id)a3;
- (void)performSelectorOnMainThread:(SEL)a0 withObject:(id)a1 waitUntilDone:(BOOL)a2;
- (void)performSelector:(SEL)a0 onThread:(id)a1 withObject:(id)a2 waitUntilDone:(BOOL)a3 modes:(id)a4;
- (void)willChangeValueForKey:(id)a0 withSetMutation:(unsigned long long)a1 usingObjects:(id)a2;
- (void)didChangeValueForKey:(id)a0 withSetMutation:(unsigned long long)a1 usingObjects:(id)a2;
- (void)performSelector:(SEL)a0 onThread:(id)a1 withObject:(id)a2 waitUntilDone:(BOOL)a3;
- (id)_pendingChangeNotificationsArrayForKey:(id)a0 create:(BOOL)a1;
- (void)performSelector:(SEL)a0 withObject:(id)a1 afterDelay:(double)a2 inModes:(id)a3;
- (void)removeObservation:(id)a0 forObservableKeyPath:(id)a1;
- (void)_addObserver:(id)a0 forProperty:(id)a1 options:(unsigned long long)a2 context:(void *)a3;
- (void)setNilValueForKey:(id)a0;
- (id)mutableOrderedSetValueForKeyPath:(id)a0;
- (id)addObserver:(id)a0 forObservableKeyPath:(id)a1;
- (void)didChange:(unsigned long long)a0 valuesAtIndexes:(id)a1 forKey:(id)a2;
- (void)performSelectorInBackground:(SEL)a0 withObject:(id)a1;
- (void)_changeValueForKey:(id)a0 key:(id)a1 key:(id)a2 usingBlock:(id /* block */)a3;
- (void)willChange:(unsigned long long)a0 valuesAtIndexes:(id)a1 forKey:(id)a2;
- (void)_notifyObserversForKeyPath:(id)a0 change:(id)a1;
- (void)setObservation:(id)a0 forObservingKeyPath:(id)a1;
- (void)removeObserver:(id)a0 forKeyPath:(id)a1;
- (void)performSelector:(SEL)a0 object:(id)a1 afterDelay:(double)a2;
- (void)removeObservation:(id)a0;
- (void)performSelector:(SEL)a0 withObject:(id)a1 afterDelay:(double)a2;
- (id)valueForUndefinedKey:(id)a0;
- (id)addObserver:(id)a0;
- (id)valueForKey:(id)a0;
- (void)setValuesForKeysWithDictionary:(id)a0;
- (id)mutableArrayValueForKeyPath:(id)a0;
- (id)replacementObjectForArchiver:(id)a0;
- (BOOL)_overrideUseFastBlockObservers;
- (BOOL)validateValue:(inout id *)a0 forKeyPath:(id)a1 error:(out id *)a2;
- (void)_changeValueForKey:(id)a0 usingBlock:(id /* block */)a1;
- (void)_removeObserver:(id)a0 forProperty:(id)a1;
- (Class)classForPortCoder;
- (BOOL)validateValue:(inout id *)a0 forKey:(id)a1 error:(out id *)a2;
- (id)mutableOrderedSetValueForKey:(id)a0;
- (void)_willBeginKeyValueObserving;
- (void)_destroyObserverList;
- (id)addChainedObservers:(id)a0;
- (id)mutableArrayValueForKey:(id)a0;
- (void)_didEndKeyValueObserving;
- (id)_implicitObservationInfo;
- (void)receiveObservedError:(id)a0;
- (id)addObserverBlock:(id /* block */)a0;
- (id)mutableSetValueForKeyPath:(id)a0;
- (BOOL)_isToManyChangeInformation;
- (id)addObservationTransformer:(id /* block */)a0;
- (id *)_observerStorage;
- (void *)_observerStorageOfSize:(unsigned long long)a0;
- (id)mutableSetValueForKey:(id)a0;
- (void)didChangeValueForKey:(id)a0;
- (void)setValue:(id)a0 forKey:(id)a1;
- (void)finishObserving;
- (void)addObserver:(id)a0 forKeyPath:(id)a1 options:(unsigned long long)a2 context:(void *)a3;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (id)valueForKeyPath:(id)a0;
- (void)removeObserver:(id)a0 forKeyPath:(id)a1 context:(void *)a2;
- (id)replacementObjectForPortCoder:(id)a0;
- (void)_notifyObserversOfChangeFromValuesForKeys:(id)a0 toValuesForKeys:(id)a1;
- (Class)classForArchiver;
- (BOOL)isNSString__;
- (BOOL)isNSDate__;
- (BOOL)isNSSet__;
- (BOOL)isNSArray__;
- (BOOL)isNSNumber__;
- (BOOL)isNSData__;
- (BOOL)isNSObject__;
- (BOOL)isNSValue__;
- (BOOL)isNSTimeZone__;
- (BOOL)isNSOrderedSet__;
- (unsigned long long)_cfTypeID;
- (BOOL)isNSDictionary__;
- (BOOL)isNSCFConstantString__;
- (oneway void)__release_OA;
- (id)__retain_OA;
- (BOOL)___tryRetain_OA;
- (id)_copyDescription;
- (void)doesNotRecognizeSelector:(SEL)a0;
- (void)__dealloc_zombie;
- (id)__autorelease_OA;
- (id)methodSignatureForSelector:(SEL)a0;
- (id)self;
- (struct _NSZone { } *)zone;
- (id)performSelector:(SEL)a0;
- (Class)class;
- (id)performSelector:(SEL)a0 withObject:(id)a1;
- (id)performSelector:(SEL)a0 withObject:(id)a1 withObject:(id)a2;
- (void)doesNotRecognizeSelector:(SEL)a0;
- (BOOL)isProxy;
- (void)forwardInvocation:(id)a0;
- (id)init;
- (id)methodSignatureForSelector:(SEL)a0;
- (id)mutableCopy;
- (id)forwardingTargetForSelector:(SEL)a0;
- (BOOL)isKindOfClass:(Class)a0;
- (id)autorelease;
- (oneway void)release;
- (BOOL)isMemberOfClass:(Class)a0;
- (BOOL)_isDeallocating;
- (void)dealloc;
- (BOOL)_tryRetain;
- (BOOL)respondsToSelector:(SEL)a0;
- (unsigned long long)retainCount;
- (id)copy;
- (void /* function */ *)methodForSelector:(SEL)a0;
- (BOOL)conformsToProtocol:(id)a0;
- (id)description;
- (BOOL)allowsWeakReference;
- (id)retain;
- (BOOL)isEqual:(id)a0;
- (BOOL)isFault;
- (void)finalize;
- (BOOL)retainWeakReference;

@end
