@class NSString, NSObject;
@protocol OS_dispatch_group, OS_dispatch_data, OS_dispatch_queue;

@interface AGXA11FamilyComputeProgram : NSObject {
    struct ComputeProgram { struct VectorMap<AGX::ComputeProgramKey, AGX::Program<AGX::G10::ComputeProgramVariant, AGX::ComputeProgramKey, AGX::G10::IndirectArgumentLayout, AGXA11FamilyIndirectArgumentBufferLayout>::VariantEntry, 4> { struct Chunk { struct ComputeProgramKey { void /* function */ **_vptr$ProgramKey; int streamType; struct vector<unsigned int, std::__1::allocator<unsigned int> > { unsigned int *__begin_; unsigned int *__end_; struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int> > { unsigned int *__value_; } __end_cap_; } stream; struct _AGCComputeStateAGP { unsigned long long mutableBuffers; unsigned int maxTotalThreadsPerThreadgroup; union { struct { unsigned char wgSizeMultipleOfSIMDWidth : 1; unsigned char genCompilerStatistics : 1; unsigned char genTelemetryStatistics : 1; unsigned char customBorderColor : 1; unsigned char disableTextureRWBoundsCheck : 1; unsigned char debugInstrumentationEnabled : 1; unsigned char bufferBoundsCheckMode : 3; unsigned char disableDMAPromotion : 1; unsigned char supportComputeSplitDispatch : 1; unsigned char textureWriteFPRoundingMode : 2; unsigned char supportExternalVisibleFunctions : 1; unsigned char enableConservativeLMFencing : 1; unsigned char enableRTZFloatCastWA : 1; unsigned int unused : 17; } ; unsigned int key; } ; } cs; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *__data_; unsigned long long __size_; unsigned long long __cap_; } __l; struct __short { char __data_[23]; struct { unsigned char __size_; } ; } __s; struct __raw { unsigned long long __words[3]; } __r; } ; } __value_; } __r_; } stage_in_desc; BOOL supportIndirectCommandBuffers; unsigned long long non_reflection_pipeline_options; struct vector<MTLUINT256_t, std::__1::allocator<MTLUINT256_t> > { struct *__begin_; struct *__end_; struct __compressed_pair<MTLUINT256_t *, std::__1::allocator<MTLUINT256_t> > { struct *__value_; } __end_cap_; } visible_functions_hash; struct vector<void *, std::__1::allocator<void *> > { void **__begin_; void **__end_; struct __compressed_pair<void **, std::__1::allocator<void *> > { void **__value_; } __end_cap_; } dynamic_libraries_hash; } keys[4]; struct VariantEntry { NSObject<OS_dispatch_group> *ve_group; struct ComputeProgramVariant *variant; unsigned long long error; NSString *message; BOOL created; } values[4]; struct Chunk *next; } initial_chunk; struct Chunk *head; unsigned int count; struct VariantEntry { NSObject<OS_dispatch_group> *ve_group; struct ComputeProgramVariant *variant; unsigned long long error; NSString *message; BOOL created; } default_value; } variants; unsigned long long requested_options; unsigned long long completed_options; NSObject<OS_dispatch_data> *reflection_data; NSObject<OS_dispatch_queue> *queue; struct IndirectArgumentLayout *argument_layouts[96]; BOOL has_layouts; } _impl;
}

- (void).cxx_destruct;
- (id).cxx_construct;

@end
