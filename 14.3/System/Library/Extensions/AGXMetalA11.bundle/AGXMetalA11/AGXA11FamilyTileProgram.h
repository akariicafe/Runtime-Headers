@class NSString, NSObject;
@protocol OS_dispatch_group, OS_dispatch_data, OS_dispatch_queue;

@interface AGXA11FamilyTileProgram : NSObject {
    struct TileProgram { struct VectorMap<AGX::TileProgramKey, AGX::Program<AGX::G10::TileProgramVariant, AGX::TileProgramKey, AGX::G10::IndirectArgumentLayout, AGXA11FamilyIndirectArgumentBufferLayout>::VariantEntry, 4> { struct Chunk { struct TileProgramKey { void /* function */ **_vptr$ProgramKey; int streamType; struct vector<unsigned int, std::__1::allocator<unsigned int> > { unsigned int *__begin_; unsigned int *__end_; struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int> > { unsigned int *__value_; } __end_cap_; } stream; struct _AGCFragmentContextStateAGP { union _AGCFragmentState { struct { unsigned char alphaToCoverage : 1; unsigned char alphaToOne : 1; unsigned char sampleCoverage : 1; unsigned char sampleCoverageInvert : 1; unsigned char depthStencilWriteDisabled : 1; unsigned char logicOp : 1; unsigned char logicOpState : 5; unsigned char alphaTest : 1; unsigned char alphaTestFunc : 4; unsigned char smoothPoints : 1; unsigned char pointSpriteEnabled : 1; unsigned char outputPointSize : 1; unsigned char shaderDebugEnable : 1; unsigned short unused : 12; } ; unsigned int key; } fragmentState; union _AGCColorMaskState { struct { unsigned char redEnableBits : 8; unsigned char greenEnableBits : 8; unsigned char blueEnableBits : 8; unsigned char alphaEnableBits : 8; } ; unsigned int key; } colorMaskState; unsigned long long mutableBuffers; union _AGCBlendState { struct { unsigned char enable : 1; unsigned char src : 5; unsigned char dst : 5; unsigned char srcA : 5; unsigned char dstA : 5; unsigned char equation : 3; unsigned char equationA : 3; unsigned char unused : 5; } ; unsigned int key; } blendState[8]; union _AGCPCFStateAGP { struct { unsigned int depthCompareClampMask : 32; } ; unsigned int key; } pcf; union { struct { unsigned char genCompilerStatistics : 1; unsigned char genTelemetryStatistics : 1; unsigned char fragmentOnly : 1; unsigned char openglMode : 1; unsigned char customBorderColor : 1; unsigned char disableTextureRWBoundsCheck : 1; unsigned char debugInstrumentationEnabled : 1; unsigned char bufferBoundsCheckMode : 3; unsigned char disableDMAPromotion : 1; unsigned char enableHLSLDiscardSemantics : 1; unsigned char textureWriteFPRoundingMode : 2; unsigned int unused : 18; } ; unsigned int key; } ; } cs; struct _AGCDrawBufferState { struct array<_AGCDrawBuffer, 8> { union _AGCDrawBuffer { struct { unsigned char pbeSourceFormat : 5; unsigned char numWrittenComponents : 3; unsigned char gammaCorrection : 1; unsigned char colorSpaceConversion : 3; unsigned char preEmitSwizzle : 3; unsigned char outputPartitionOffset : 8; unsigned short unused : 9; } ; unsigned int key; } __elems_[8]; } encoded; union { struct { unsigned char enabledBits : 8; unsigned char sampleCount : 4; unsigned char colorSampleCount : 4; unsigned char outputPartitionSize : 8; unsigned char LIBSpilling : 1; unsigned char unused : 7; } ; unsigned int key; } ; } ds; struct _AGCTileState { unsigned int maxTotalThreadsPerThreadgroup; union { struct { unsigned char dispatchSizeMatchesTileSize : 1; unsigned char unused : 7; } ; unsigned char key; } ; } ts; unsigned long long non_reflection_pipeline_options; } keys[4]; struct VariantEntry { NSObject<OS_dispatch_group> *ve_group; struct TileProgramVariant *variant; unsigned long long error; NSString *message; BOOL created; } values[4]; struct Chunk *next; } initial_chunk; struct Chunk *head; unsigned int count; struct VariantEntry { NSObject<OS_dispatch_group> *ve_group; struct TileProgramVariant *variant; unsigned long long error; NSString *message; BOOL created; } default_value; } variants; unsigned long long requested_options; unsigned long long completed_options; NSObject<OS_dispatch_data> *reflection_data; NSObject<OS_dispatch_queue> *queue; struct IndirectArgumentLayout *argument_layouts[96]; BOOL has_layouts; } _impl;
}

- (void).cxx_destruct;
- (id).cxx_construct;

@end
