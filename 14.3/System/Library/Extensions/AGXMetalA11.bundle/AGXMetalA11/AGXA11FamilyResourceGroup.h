@class NSString, NSArray;

@interface AGXA11FamilyResourceGroup : NSObject <MTLResourceGroupSPI> {
    unsigned short _resourceGroup;
    NSArray *_resources;
    struct Device { struct BackgroundObjectProgram *x0; struct EndOfTileProgram *x1; struct BlitFragmentProgram *x2; struct BlitVertexProgram *x3; struct BlitComputeProgram *x4; struct BlitSparseProgram *x5; struct SWEndOfTileProgram *x6; BOOL x7; struct ResourceGroupUsageList { } x8; struct __IOGPUDevice *x9; id x10; struct HeapSet { struct Heap { struct _ResourceHead { struct _Resource *x0; struct _Resource **x1; } x0; id x1; struct __IOGPUDevice *x2; struct AGXNewTextureDataStruc { struct IOGPUNewResourceData { unsigned int x0; unsigned int x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned int x10; unsigned long long x11; unsigned long long x12; unsigned long long x13; union { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned int x3; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned long long x4[2]; } x1; } x14; } x0; union { struct { unsigned char x0 : 1; unsigned char x1 : 3; unsigned char x2 : 3; unsigned char x3 : 1; unsigned char x4 : 2; unsigned char x5 : 2; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9 : 4; unsigned char x10 : 4; unsigned char x11 : 4; unsigned char x12 : 1; unsigned char x13 : 3; unsigned char x14 : 2; unsigned char x15 : 1; unsigned char x16 : 1; unsigned char x17 : 1; unsigned char x18 : 1; } x0; unsigned long long x1; } x1; unsigned long long x2; } x3; unsigned long long x4; unsigned long long x5; } x0[3]; } x11; struct ClearVisibilityVertexProgramVariant *x12; struct AGXGPUCoreConfig { int x0; int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; BOOL x13; BOOL x14; unsigned int x15; unsigned int x16; unsigned long long x17; unsigned long long x18; } x13; struct DeviceUSCStateLoader { struct VDMStateSyncProgramVariant *x0; struct TileDispatchVertexProgramVariant *x1; } x14; struct Compiler *x15; struct UserCommonShaderFactory *x16; struct UserTileShaderFactory *x17; struct DeviceInternalBuffer<AGX::USCSpillBufferResourceInfo> *x18; struct DeviceInternalBuffer<AGX::USCSpillBufferResourceInfo> *x19; struct DeviceInternalBuffer<AGX::USCSpillBufferResourceInfo> *x20; struct DeviceInternalBuffer<AGX::EMRTTileBufferResourceInfo> *x21; struct DummyHeap { } x22; struct DummyHeap { } x23; struct PooledAllocator { unsigned long long x0; struct AllocationInfo *x1; unsigned int x2; unsigned int x3; struct os_unfair_lock_s { unsigned int x0; } x4; } x24; struct PooledAllocator { unsigned long long x0; struct AllocationInfo *x1; unsigned int x2; unsigned int x3; struct os_unfair_lock_s { unsigned int x0; } x4; } x25; struct PooledAllocator { unsigned long long x0; struct AllocationInfo *x1; unsigned int x2; unsigned int x3; struct os_unfair_lock_s { unsigned int x0; } x4; } x26; struct DeviceSWTessellationState *x27; struct FenceGroupPool { struct FenceGroupList { struct FenceGroup *x0; } x0; struct FenceGroupAllocationBlockList { struct FenceGroupAllocationBlock *x0; } x1; id x2; } x28; struct SamplerStateFields { union _AgxTexSamplerWord0 { unsigned long long x0; struct { unsigned short x0 : 10; unsigned short x1 : 10; unsigned char x2 : 3; unsigned char x3 : 2; unsigned char x4 : 2; unsigned char x5 : 2; unsigned char x6 : 3; unsigned char x7 : 3; unsigned char x8 : 3; unsigned char x9 : 1; unsigned char x10 : 3; unsigned char x11 : 1; unsigned char x12 : 5; unsigned char x13 : 3; unsigned char x14 : 3; unsigned char x15 : 1; unsigned char x16 : 1; unsigned char x17 : 1; unsigned char x18 : 7; } x1; } x0; } x29; union DeviceOptions { struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9 : 1; unsigned char x10 : 1; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13 : 1; unsigned char x14 : 1; unsigned char x15 : 1; unsigned char x16 : 5; unsigned char x17 : 1; unsigned long x18 : 42; } x0; unsigned long long x1; } x30; unsigned int x31; unsigned int x32; id x33; struct ImageStateFields { union _AgxTexState0Word0 { unsigned long long x0; struct { unsigned char x0 : 3; unsigned char x1 : 2; unsigned char x2 : 7; unsigned char x3 : 3; unsigned char x4 : 3; unsigned char x5 : 3; unsigned char x6 : 3; unsigned char x7 : 3; unsigned short x8 : 14; unsigned short x9 : 14; unsigned char x10 : 4; unsigned char x11 : 4; unsigned char x12 : 1; } x1; } x0; union _AgxTexState0Word1 { unsigned long long x0; struct { unsigned char x0 : 2; unsigned long x1 : 36; unsigned char x2 : 3; unsigned char x3 : 3; unsigned char x4 : 2; unsigned short x5 : 16; unsigned char x6 : 1; unsigned char x7 : 1; } x1; } x1; union _AgxTexState1Word0 { unsigned long long x0; struct { unsigned long x0 : 36; unsigned short x1 : 16; unsigned short x2 : 12; } x1; } x2; } x34[2]; id x35; id x36; struct SpillInfo *x37; struct SpillInfo *x38; struct SpillInfo *x39; struct { BOOL x0; void *x1; BOOL x2; unsigned int x3; } x40; struct { unsigned long long *x0; unsigned int x1; } x41; id x42; struct map<AGX::DepthStencilStateDescriptorGen2, AGXA11FamilyDepthStencilState *, std::__1::less<AGX::DepthStencilStateDescriptorGen2>, std::__1::allocator<std::__1::pair<const AGX::DepthStencilStateDescriptorGen2, AGXA11FamilyDepthStencilState *> > > { struct __tree<std::__1::__value_type<AGX::DepthStencilStateDescriptorGen2, AGXA11FamilyDepthStencilState *>, std::__1::__map_value_compare<AGX::DepthStencilStateDescriptorGen2, std::__1::__value_type<AGX::DepthStencilStateDescriptorGen2, AGXA11FamilyDepthStencilState *>, std::__1::less<AGX::DepthStencilStateDescriptorGen2>, true>, std::__1::allocator<std::__1::__value_type<AGX::DepthStencilStateDescriptorGen2, AGXA11FamilyDepthStencilState *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<AGX::DepthStencilStateDescriptorGen2, AGXA11FamilyDepthStencilState *>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<AGX::DepthStencilStateDescriptorGen2, std::__1::__value_type<AGX::DepthStencilStateDescriptorGen2, AGXA11FamilyDepthStencilState *>, std::__1::less<AGX::DepthStencilStateDescriptorGen2>, true> > { unsigned long long x0; } x2; } x0; } x43; id x44; struct map<AGX::SamplerDescriptor, AGX::WeakObjCPtr<AGXA11FamilySampler>, std::__1::less<AGX::SamplerDescriptor>, std::__1::allocator<std::__1::pair<const AGX::SamplerDescriptor, AGX::WeakObjCPtr<AGXA11FamilySampler> > > > { struct __tree<std::__1::__value_type<AGX::SamplerDescriptor, AGX::WeakObjCPtr<AGXA11FamilySampler> >, std::__1::__map_value_compare<AGX::SamplerDescriptor, std::__1::__value_type<AGX::SamplerDescriptor, AGX::WeakObjCPtr<AGXA11FamilySampler> >, std::__1::less<AGX::SamplerDescriptor>, true>, std::__1::allocator<std::__1::__value_type<AGX::SamplerDescriptor, AGX::WeakObjCPtr<AGXA11FamilySampler> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<AGX::SamplerDescriptor, AGX::WeakObjCPtr<AGXA11FamilySampler> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<AGX::SamplerDescriptor, std::__1::__value_type<AGX::SamplerDescriptor, AGX::WeakObjCPtr<AGXA11FamilySampler> >, std::__1::less<AGX::SamplerDescriptor>, true> > { unsigned long long x0; } x2; } x0; } x45; struct vector<AGX::ConstantSamplerList<AGX::G10::Encoders> *, std::__1::allocator<AGX::ConstantSamplerList<AGX::G10::Encoders> *> > { struct ConstantSamplerList<AGX::G10::Encoders> **x0; struct ConstantSamplerList<AGX::G10::Encoders> **x1; struct __compressed_pair<AGX::ConstantSamplerList<AGX::G10::Encoders> **, std::__1::allocator<AGX::ConstantSamplerList<AGX::G10::Encoders> *> > { struct ConstantSamplerList<AGX::G10::Encoders> **x0; } x2; } x46; unsigned int x47; struct IONotificationPort *x48; id x49; id x50; id x51; id x52; id x53; id x54; id x55; BOOL x56; BOOL x57; unsigned int x58; unsigned long long x59; unsigned long long x60; unsigned long long x61; struct IOGPUResourceInfo { struct __IOSurface *x0; unsigned long x1 : 56; unsigned char x2 : 8; unsigned int x3; } x62; int x63; BOOL x64; int x65; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x66; struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool> > { _Atomic BOOL x0; } x0; } x67; struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool> > { _Atomic BOOL x0; } x0; } x68; struct MTLTargetDeviceArch { unsigned long long x0; unsigned int x1; char *x2; } x69; int x70; unsigned long long x71; id x72; id x73; struct ComputePipeline *x74; id x75; struct RenderPipeline *x76; struct ComputePipeline *x77; struct RenderPipeline *x78; struct os_unfair_lock_s { unsigned int x0; } x79; struct unordered_map<unsigned long, AGX::FunctionCompiledEventInfo, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, AGX::FunctionCompiledEventInfo> > > { struct __hash_table<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo> > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, std::__1::hash<unsigned long>, true> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, std::__1::equal_to<unsigned long>, true> > { float x0; } x3; } x0; } x80; id /* block */ x81; struct ComputePipeline *x82; id x83; struct unordered_map<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> > > > { struct __hash_table<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> > > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, std::__1::hash<unsigned int>, true> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, std::__1::equal_to<unsigned int>, true> > { float x0; } x3; } x0; } x84; unsigned long long x85; id x86; } *_device;
    BOOL _initedResourceGroup;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (BOOL)containsResource:(id)a0;
- (id)initWithDevice:(struct Device { struct BackgroundObjectProgram *x0; struct EndOfTileProgram *x1; struct BlitFragmentProgram *x2; struct BlitVertexProgram *x3; struct BlitComputeProgram *x4; struct BlitSparseProgram *x5; struct SWEndOfTileProgram *x6; BOOL x7; struct ResourceGroupUsageList { } x8; struct __IOGPUDevice *x9; id x10; struct HeapSet { struct Heap { struct _ResourceHead { struct _Resource *x0; struct _Resource **x1; } x0; id x1; struct __IOGPUDevice *x2; struct AGXNewTextureDataStruc { struct IOGPUNewResourceData { unsigned int x0; unsigned int x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned int x10; unsigned long long x11; unsigned long long x12; unsigned long long x13; union { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned int x3; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned long long x4[2]; } x1; } x14; } x0; union { struct { unsigned char x0 : 1; unsigned char x1 : 3; unsigned char x2 : 3; unsigned char x3 : 1; unsigned char x4 : 2; unsigned char x5 : 2; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9 : 4; unsigned char x10 : 4; unsigned char x11 : 4; unsigned char x12 : 1; unsigned char x13 : 3; unsigned char x14 : 2; unsigned char x15 : 1; unsigned char x16 : 1; unsigned char x17 : 1; unsigned char x18 : 1; } x0; unsigned long long x1; } x1; unsigned long long x2; } x3; unsigned long long x4; unsigned long long x5; } x0[3]; } x11; struct ClearVisibilityVertexProgramVariant *x12; struct AGXGPUCoreConfig { int x0; int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; BOOL x13; BOOL x14; unsigned int x15; unsigned int x16; unsigned long long x17; unsigned long long x18; } x13; struct DeviceUSCStateLoader { struct VDMStateSyncProgramVariant *x0; struct TileDispatchVertexProgramVariant *x1; } x14; struct Compiler *x15; struct UserCommonShaderFactory *x16; struct UserTileShaderFactory *x17; struct DeviceInternalBuffer<AGX::USCSpillBufferResourceInfo> *x18; struct DeviceInternalBuffer<AGX::USCSpillBufferResourceInfo> *x19; struct DeviceInternalBuffer<AGX::USCSpillBufferResourceInfo> *x20; struct DeviceInternalBuffer<AGX::EMRTTileBufferResourceInfo> *x21; struct DummyHeap { } x22; struct DummyHeap { } x23; struct PooledAllocator { unsigned long long x0; struct AllocationInfo *x1; unsigned int x2; unsigned int x3; struct os_unfair_lock_s { unsigned int x0; } x4; } x24; struct PooledAllocator { unsigned long long x0; struct AllocationInfo *x1; unsigned int x2; unsigned int x3; struct os_unfair_lock_s { unsigned int x0; } x4; } x25; struct PooledAllocator { unsigned long long x0; struct AllocationInfo *x1; unsigned int x2; unsigned int x3; struct os_unfair_lock_s { unsigned int x0; } x4; } x26; struct DeviceSWTessellationState *x27; struct FenceGroupPool { struct FenceGroupList { struct FenceGroup *x0; } x0; struct FenceGroupAllocationBlockList { struct FenceGroupAllocationBlock *x0; } x1; id x2; } x28; struct SamplerStateFields { union _AgxTexSamplerWord0 { unsigned long long x0; struct { unsigned short x0 : 10; unsigned short x1 : 10; unsigned char x2 : 3; unsigned char x3 : 2; unsigned char x4 : 2; unsigned char x5 : 2; unsigned char x6 : 3; unsigned char x7 : 3; unsigned char x8 : 3; unsigned char x9 : 1; unsigned char x10 : 3; unsigned char x11 : 1; unsigned char x12 : 5; unsigned char x13 : 3; unsigned char x14 : 3; unsigned char x15 : 1; unsigned char x16 : 1; unsigned char x17 : 1; unsigned char x18 : 7; } x1; } x0; } x29; union DeviceOptions { struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9 : 1; unsigned char x10 : 1; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13 : 1; unsigned char x14 : 1; unsigned char x15 : 1; unsigned char x16 : 5; unsigned char x17 : 1; unsigned long x18 : 42; } x0; unsigned long long x1; } x30; unsigned int x31; unsigned int x32; id x33; struct ImageStateFields { union _AgxTexState0Word0 { unsigned long long x0; struct { unsigned char x0 : 3; unsigned char x1 : 2; unsigned char x2 : 7; unsigned char x3 : 3; unsigned char x4 : 3; unsigned char x5 : 3; unsigned char x6 : 3; unsigned char x7 : 3; unsigned short x8 : 14; unsigned short x9 : 14; unsigned char x10 : 4; unsigned char x11 : 4; unsigned char x12 : 1; } x1; } x0; union _AgxTexState0Word1 { unsigned long long x0; struct { unsigned char x0 : 2; unsigned long x1 : 36; unsigned char x2 : 3; unsigned char x3 : 3; unsigned char x4 : 2; unsigned short x5 : 16; unsigned char x6 : 1; unsigned char x7 : 1; } x1; } x1; union _AgxTexState1Word0 { unsigned long long x0; struct { unsigned long x0 : 36; unsigned short x1 : 16; unsigned short x2 : 12; } x1; } x2; } x34[2]; id x35; id x36; struct SpillInfo *x37; struct SpillInfo *x38; struct SpillInfo *x39; struct { BOOL x0; void *x1; BOOL x2; unsigned int x3; } x40; struct { unsigned long long *x0; unsigned int x1; } x41; id x42; struct map<AGX::DepthStencilStateDescriptorGen2, AGXA11FamilyDepthStencilState *, std::__1::less<AGX::DepthStencilStateDescriptorGen2>, std::__1::allocator<std::__1::pair<const AGX::DepthStencilStateDescriptorGen2, AGXA11FamilyDepthStencilState *> > > { struct __tree<std::__1::__value_type<AGX::DepthStencilStateDescriptorGen2, AGXA11FamilyDepthStencilState *>, std::__1::__map_value_compare<AGX::DepthStencilStateDescriptorGen2, std::__1::__value_type<AGX::DepthStencilStateDescriptorGen2, AGXA11FamilyDepthStencilState *>, std::__1::less<AGX::DepthStencilStateDescriptorGen2>, true>, std::__1::allocator<std::__1::__value_type<AGX::DepthStencilStateDescriptorGen2, AGXA11FamilyDepthStencilState *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<AGX::DepthStencilStateDescriptorGen2, AGXA11FamilyDepthStencilState *>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<AGX::DepthStencilStateDescriptorGen2, std::__1::__value_type<AGX::DepthStencilStateDescriptorGen2, AGXA11FamilyDepthStencilState *>, std::__1::less<AGX::DepthStencilStateDescriptorGen2>, true> > { unsigned long long x0; } x2; } x0; } x43; id x44; struct map<AGX::SamplerDescriptor, AGX::WeakObjCPtr<AGXA11FamilySampler>, std::__1::less<AGX::SamplerDescriptor>, std::__1::allocator<std::__1::pair<const AGX::SamplerDescriptor, AGX::WeakObjCPtr<AGXA11FamilySampler> > > > { struct __tree<std::__1::__value_type<AGX::SamplerDescriptor, AGX::WeakObjCPtr<AGXA11FamilySampler> >, std::__1::__map_value_compare<AGX::SamplerDescriptor, std::__1::__value_type<AGX::SamplerDescriptor, AGX::WeakObjCPtr<AGXA11FamilySampler> >, std::__1::less<AGX::SamplerDescriptor>, true>, std::__1::allocator<std::__1::__value_type<AGX::SamplerDescriptor, AGX::WeakObjCPtr<AGXA11FamilySampler> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<AGX::SamplerDescriptor, AGX::WeakObjCPtr<AGXA11FamilySampler> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<AGX::SamplerDescriptor, std::__1::__value_type<AGX::SamplerDescriptor, AGX::WeakObjCPtr<AGXA11FamilySampler> >, std::__1::less<AGX::SamplerDescriptor>, true> > { unsigned long long x0; } x2; } x0; } x45; struct vector<AGX::ConstantSamplerList<AGX::G10::Encoders> *, std::__1::allocator<AGX::ConstantSamplerList<AGX::G10::Encoders> *> > { struct ConstantSamplerList<AGX::G10::Encoders> **x0; struct ConstantSamplerList<AGX::G10::Encoders> **x1; struct __compressed_pair<AGX::ConstantSamplerList<AGX::G10::Encoders> **, std::__1::allocator<AGX::ConstantSamplerList<AGX::G10::Encoders> *> > { struct ConstantSamplerList<AGX::G10::Encoders> **x0; } x2; } x46; unsigned int x47; struct IONotificationPort *x48; id x49; id x50; id x51; id x52; id x53; id x54; id x55; BOOL x56; BOOL x57; unsigned int x58; unsigned long long x59; unsigned long long x60; unsigned long long x61; struct IOGPUResourceInfo { struct __IOSurface *x0; unsigned long x1 : 56; unsigned char x2 : 8; unsigned int x3; } x62; int x63; BOOL x64; int x65; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x66; struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool> > { _Atomic BOOL x0; } x0; } x67; struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool> > { _Atomic BOOL x0; } x0; } x68; struct MTLTargetDeviceArch { unsigned long long x0; unsigned int x1; char *x2; } x69; int x70; unsigned long long x71; id x72; id x73; struct ComputePipeline *x74; id x75; struct RenderPipeline *x76; struct ComputePipeline *x77; struct RenderPipeline *x78; struct os_unfair_lock_s { unsigned int x0; } x79; struct unordered_map<unsigned long, AGX::FunctionCompiledEventInfo, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, AGX::FunctionCompiledEventInfo> > > { struct __hash_table<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo> > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, std::__1::hash<unsigned long>, true> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, AGX::FunctionCompiledEventInfo>, std::__1::equal_to<unsigned long>, true> > { float x0; } x3; } x0; } x80; id /* block */ x81; struct ComputePipeline *x82; id x83; struct unordered_map<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> > > > { struct __hash_table<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> > > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, std::__1::hash<unsigned int>, true> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::pair<const IOGPUResourceInfo *, int> >, std::__1::equal_to<unsigned int>, true> > { float x0; } x3; } x0; } x84; unsigned long long x85; id x86; } *)a0 resources:(const id *)a1 count:(unsigned long long)a2;

@end
