@class SCNMTLMeshElement, NSString, SCNMTLMesh, SCNMTLRenderPipeline, NSMutableDictionary, SCNMTLShadable, NSMutableArray, NSObject, MTLRenderPassDescriptor, CAMetalLayer, SCNMTLResourceManager;
@protocol MTLCommandBuffer, MTLDevice, OS_dispatch_group, MTLComputePipelineState, OS_dispatch_queue, CAMetalDrawable, MTLDepthStencilState, MTLTexture, OS_dispatch_semaphore, MTLBlitCommandEncoder, MTLBuffer, MTLComputeCommandEncoder, MTLRenderCommandEncoder, MTLSamplerState, MTLCommandQueue;

@interface SCNMTLRenderContext : NSObject <SCNBufferStream> {
    long long _currentFrameIndex;
    struct __C3DEngineStats { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; double x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; double x32; double x33; double x34; double x35; double x36; double x37; double x38; unsigned int x39; unsigned int x40; unsigned int x41; unsigned int x42; unsigned int x43; unsigned int x44; unsigned int x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned int x49; unsigned int x50; unsigned int x51; unsigned int x52; unsigned int x53; unsigned int x54; unsigned int x55; double x56; unsigned int x57; double x58; unsigned int x59; double x60; double x61; double x62; double x63; double x64[60]; unsigned int x65; double x66; double x67; } *__engineStats;
    struct SCNMatrix4 { float m11; float m12; float m13; float m14; float m21; float m22; float m23; float m24; float m31; float m32; float m33; float m34; float m41; float m42; float m43; float m44; } _screenTransform;
    long long _sampleCount;
    BOOL _needSuperSampling;
    id<MTLDevice> _device;
    BOOL _isValidationEnabled;
    int _profile;
    unsigned int _features;
    struct __C3DEngineContext { } *_engineContext;
    unsigned char _wantsWideGamut : 1;
    unsigned char _isOpaque : 1;
    unsigned char _disableLinearRendering : 1;
    unsigned char _enableARMode : 1;
    unsigned char _shouldDelegateARCompositing : 1;
    unsigned char _useFunctionConstants : 1;
    unsigned char _reverseZ : 1;
    id<MTLCommandQueue> _ownedCommandQueue;
    NSObject<OS_dispatch_semaphore> *_inFlightSemaphore;
    struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int __a_value; } __a_; } _pendingGPUFrameCount;
    id<MTLTexture> _textureTarget;
    CAMetalLayer *_layerTarget;
    id<CAMetalDrawable> _drawable;
    float _targetedFrameInterval;
    BOOL _shouldPresentWithTransaction;
    MTLRenderPassDescriptor *_currentRenderPassDescriptor;
    MTLRenderPassDescriptor *_originalRenderPassDescriptor;
    void /* unknown type, empty encoding */ _renderSize;
    id<MTLCommandBuffer> _currentCommandBuffer;
    id<MTLCommandBuffer> _resourceCommandBuffer;
    struct SCNMTLBlitCommandEncoder { id<MTLBlitCommandEncoder> _encoder; id<MTLCommandBuffer> _commandBuffer; } _resourceBlitEncoder;
    struct SCNMTLComputeCommandEncoder { id<MTLBuffer> _buffers[31]; unsigned long long _offsets[31]; id<MTLTexture> _textures[128]; id<MTLSamplerState> _samplers[16]; id<MTLComputePipelineState> _computePipelineState; id<MTLComputeCommandEncoder> _encoder; id<MTLCommandBuffer> _commandBuffer; struct SCNMTLBufferPool *_bufferPool; unsigned int _features; unsigned long long _texturesToBind[2]; unsigned long long _buffersToBind[1]; } _resourceComputeEncoder;
    struct { unsigned char renderSliceIndex; unsigned char eyeCount; unsigned char renderMode; BOOL isMainPass; BOOL isFinalTechnique; } _renderPassParameters;
    struct { char vertexIndex; char fragmentIndex; } _currentStreamBufferIndices;
    struct SCNMTLBufferPool *_volatileBufferPools[3];
    struct SCNMTLBufferPool { id x0; unsigned long long x1; id x2; unsigned long long x3; struct vector<SCNMTLBufferPool::Buffer, std::__1::allocator<SCNMTLBufferPool::Buffer> > { struct Buffer *x0; struct Buffer *x1; struct __compressed_pair<SCNMTLBufferPool::Buffer *, std::__1::allocator<SCNMTLBufferPool::Buffer> > { struct Buffer *x0; } x2; } x4; unsigned int x5; unsigned int x6; id x7; char *x8; unsigned long long x9; unsigned long long x10; } *_frameVolatileBufferPool;
    NSMutableArray *_volatileMeshes;
    NSMutableArray *_bufferPool;
    NSMutableArray *_usedVolatileMeshElements;
    NSMutableArray *_freeVolatileMeshElements;
    struct SCNMTLBufferPool *_constantBufferPools[3];
    struct SCNMTLBufferPool { id x0; unsigned long long x1; id x2; unsigned long long x3; struct vector<SCNMTLBufferPool::Buffer, std::__1::allocator<SCNMTLBufferPool::Buffer> > { struct Buffer *x0; struct Buffer *x1; struct __compressed_pair<SCNMTLBufferPool::Buffer *, std::__1::allocator<SCNMTLBufferPool::Buffer> > { struct Buffer *x0; } x2; } x4; unsigned int x5; unsigned int x6; id x7; char *x8; unsigned long long x9; unsigned long long x10; } *_frameConstantBufferPool;
    id<MTLDepthStencilState> _defaultDepthStencilState;
    id<MTLSamplerState> _defaultSamplerState;
    struct __C3DFXMetalProgram *_background2DProgram[3];
    struct __C3DFXMetalProgram *_backgroundCubeProgram[3];
    struct __C3DFXMetalProgram { struct __C3DFXProgram { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; int x1; unsigned char x2 : 1; unsigned char x3 : 1; struct __C3DFXProgramDelegate *x4; } x0; struct __CFString *x1[2]; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; void *x5; struct __CFDictionary *x6; void *x7; unsigned long long x8; } *_backgroundVideoProgram;
    struct __C3DFXMetalProgram { struct __C3DFXProgram { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; int x1; unsigned char x2 : 1; unsigned char x3 : 1; struct __C3DFXProgramDelegate *x4; } x0; struct __CFString *x1[2]; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; void *x5; struct __CFDictionary *x6; void *x7; unsigned long long x8; } *_backgroundVideoAlpha0Program;
    struct __C3DRasterizerStates { } *_backgroundRasterizerStates;
    double _initialTime;
    NSObject<OS_dispatch_queue> *_resourceQueue;
    NSObject<OS_dispatch_group> *_resourceGroup;
    id<MTLBuffer> _shadowKernelBuffer;
    struct { struct __C3DFXPassInstance *passInstance; struct __C3DLightingSystem *lightingSystem; struct __C3DDynamicBatchingSystem *dynamicBatchingSystem; struct __C3DFXPass *pass; void *renderGraphPass; BOOL passRequiresLighting; struct __C3DTransformTree *transformTree; } _processingContext;
    unsigned int _seed;
    struct SCNSceneBuffer { struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } viewTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } inverseViewTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } projectionTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } viewProjectionTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } viewToCubeTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } lastFrameViewProjectionTransform; void /* unknown type, empty encoding */ ambientLightingColor; void /* unknown type, empty encoding */ fogColor; void /* unknown type, empty encoding */ fogParameters; void /* unknown type, empty encoding */ inverseResolution; float time; float sinTime; float cosTime; float random01; float motionBlurIntensity; float environmentIntensity; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } inverseProjectionTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } inverseViewProjectionTransform; void /* unknown type, empty encoding */ nearFar; void /* unknown type, empty encoding */ viewportSize; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } inverseTransposeViewTransform; void /* unknown type, empty encoding */ clusterScale; } _frameUniforms[6];
    struct { id<MTLBuffer> buffer; unsigned long long offset; } _sceneUniforms;
    struct { id<MTLBuffer> buffer; unsigned long long offset; unsigned long long size; id<MTLTexture> shadowMaps[256]; id<MTLTexture> textureMaps[256]; id<MTLSamplerState> samplerStates[256]; } _lightsData;
    struct { struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } modelTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } lastFrameModelTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } normalTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } modelViewTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } modelViewProjectionTransform; struct float2x3 { void /* unknown type, empty encoding */ columns[2]; } boundingBox; struct float2x3 { void /* unknown type, empty encoding */ columns[2]; } worldBoundingBox; struct __C3DNode *instanceNode; unsigned int flags; unsigned int *probeCacheIndex; unsigned int boneTransformSizeWritten; } _nodeUniforms;
    struct { struct { unsigned char lights[8]; } currentLightingSet; id<MTLTexture> currentShadowMaps[8]; id<MTLTexture> currentGoboMaps[8]; struct unordered_map<unsigned long long, SCNMTLLightSetData, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCNMTLLightSetData> > > { struct __hash_table<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData> > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> *> **__value_; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> *> *> > { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, void *> *> *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, std::__1::hash<unsigned long long>, true> > { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, SCNMTLLightSetData>, std::__1::equal_to<unsigned long long>, true> > { float __value_; } __p3_; } __table_; } frameLightingSetDatas; unsigned long long currentLightingHashKey; struct { long long count; struct __C3DLight *lights[8]; struct __C3DLightRuntimeData *lightsData[8]; } currentLightingDesc; struct { void /* unknown type, empty encoding */ columns[4]; } currentLightingSpace; struct { void /* unknown type, empty encoding */ columns[4]; } currentLightingSpaceShadow; BOOL needLightingSpaceTransformation; struct SCNMTLClusterSystem { void /* unknown type, empty encoding */ clustersCount; void /* unknown type, empty encoding */ tileSize; void /* unknown type, empty encoding */ selectedDebugClusterIndex; SCNMTLRenderPipeline *_debugClusterTilesPipeline; SCNMTLRenderPipeline *_debugLightIndicesBufferPipeline; SCNMTLRenderPipeline *_debugClusterSlicesPipeline; struct __C3DFXMetalProgram *_debugProgram[7]; struct __C3DMesh *_debugShapes[7]; } clusterSystem; struct Info { struct { char *memory; id<MTLBuffer> buffer; unsigned long long offset; } clusterBuffer; id<MTLTexture> clusterTexture; id<MTLTexture> lightIndicesTexture; void /* unknown type, empty encoding */ cellSize; void /* unknown type, empty encoding */ clusterScale; void /* unknown type, empty encoding */ cellPixelSize; void /* unknown type, empty encoding */ omniLightsRange; void /* unknown type, empty encoding */ spotLightsRange; void /* unknown type, empty encoding */ probeLightsRange; struct { char *memory; id<MTLBuffer> buffer; unsigned long long offset; } lightsBuffer; unsigned int lightsBufferSize; id<MTLTexture> shadowTextures[8]; id<MTLTexture> iesOrGoboTextures[8]; id<MTLSamplerState> samplerStates[8]; id<MTLBuffer> areaBuffer; unsigned long long areaBufferOffset; unsigned long long areaBufferOffsets[8]; } clusterInfo; id<MTLTexture> reflectionProbesTextureArray; } _lighting;
    struct Cache { struct __C3DRasterizerStates *rasterizerStates; struct __C3DMesh *mesh; SCNMTLMesh *metalMesh; struct __C3DMeshElement *meshElement; SCNMTLMeshElement *metalMeshElement; struct __C3DFXMetalProgram *program; struct __C3DMaterial *material; struct __C3DGeometry *geometry; SCNMTLShadable *metalShadable; struct __C3DEffectCommonProfile *commonProfile; struct __C3DBlendStates *blendStates; unsigned char colorBufferWriteMask; unsigned char topologyClass; struct __C3DNode *node; unsigned long long vertexDescriptorHash; unsigned char tessellationPipelineStateHash; SCNMTLRenderPipeline *renderPipeline; } _cache;
    struct { struct __C3DFXPass *debugLightMeshPass[7]; struct __C3DFXPass *lightPasses[7]; struct __C3DMesh *lightMeshes[7]; BOOL resourcesAreReady; } _deferredRendering;
    struct { unsigned long long hash; SCNMTLRenderPipeline *pipeline; } _compositeRendering[2];
    SCNMTLRenderPipeline *_downSamplePipeline;
    struct { id<MTLTexture> backgroundTexture; id<MTLTexture> overlayTexture; id<MTLTexture> stencilDepthTexture; } _skCompositing;
    struct { unsigned long long pixelFormat; unsigned long long sampleCount; SCNMTLRenderPipeline *displayCubemapPipeline; SCNMTLRenderPipeline *displayTexture2DPipeline; SCNMTLRenderPipeline *displayDepth2DPipeline; SCNMTLRenderPipeline *displayDepthCubePipeline; } _debug;
    BOOL _showsAuthoringEnvironment;
    struct { BOOL collectEnabled; NSMutableDictionary *errors; } _compilationIssues;
    struct { unsigned int modelTransformBindingCount; unsigned int modelViewTransformBindingCount; unsigned int normalTransformBindingCount; unsigned int nodeOpacityBindingCount; } _counters;
    struct { unsigned long long passHash; struct __C3DMaterial *material; } _renderGraph;
}

@property (readonly, nonatomic) long long pendingGPUFrameCount;
@property (nonatomic) long long sampleCount;
@property (nonatomic) double contentScaleFactor;
@property (nonatomic) double superSamplingFactor;
@property (nonatomic) struct SCNMatrix4 { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; } screenTransform;
@property (nonatomic) BOOL wantsWideGamut;
@property (nonatomic) BOOL disableLinearRendering;
@property (nonatomic) BOOL enableARMode;
@property (nonatomic) BOOL shouldDelegateARCompositing;
@property (nonatomic) BOOL isOpaque;
@property (readonly, nonatomic) long long currentFrameIndex;
@property (nonatomic) BOOL showsAuthoringEnvironment;
@property (nonatomic) BOOL enablesDeferredShading;
@property (nonatomic) BOOL reverseZ;
@property (nonatomic) BOOL collectsCompilationErrors;
@property (readonly, nonatomic) NSMutableDictionary *compilationErrors;
@property (retain, nonatomic) NSString *generatedTexturePath;
@property (readonly, nonatomic) unsigned int features;
@property (readonly, nonatomic) int profile;
@property (readonly, nonatomic) SCNMTLResourceManager *resourceManager;
@property (nonatomic) unsigned long long debugOptions;
@property (readonly, nonatomic) id<MTLRenderCommandEncoder> currentRenderCommandEncoder;
@property (readonly, nonatomic) MTLRenderPassDescriptor *currentRenderPassDescriptor;
@property (readonly, nonatomic) id<MTLCommandBuffer> currentCommandBuffer;
@property (readonly, nonatomic) id<MTLCommandBuffer> resourceCommandBuffer;
@property (readonly, nonatomic) struct SCNMTLComputeCommandEncoder { id x0[31]; unsigned long long x1[31]; id x2[128]; id x3[16]; id x4; id x5; id x6; struct SCNMTLBufferPool *x7; unsigned int x8; unsigned long long x9[2]; unsigned long long x10[1]; } *resourceComputeEncoder;
@property (readonly, nonatomic) struct SCNMTLBlitCommandEncoder { id x0; id x1; } *resourceBlitEncoder;
@property (readonly, nonatomic) id<MTLDevice> device;
@property (readonly, nonatomic) struct __C3DEngineContext { } *engineContext;
@property (readonly, nonatomic) id<MTLTexture> textureTarget;
@property (readonly, nonatomic) CAMetalLayer *layerTarget;
@property (nonatomic) long long preferredFramesPerSecond;
@property (nonatomic) BOOL shouldPresentAfterMinimumDuration;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *resourceQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_group> *resourceGroup;
@property (retain, nonatomic) MTLRenderPassDescriptor *clientRenderPassDescriptor;
@property (retain, nonatomic) id<MTLRenderCommandEncoder> clientRenderCommandEncoder;
@property (retain, nonatomic) id<MTLCommandBuffer> clientCommandBuffer;
@property (retain, nonatomic) id<MTLCommandQueue> clientCommandQueue;
@property (readonly, nonatomic) id<MTLCommandQueue> commandQueue;
@property (readonly, nonatomic) void *frameConstantBufferPool;
@property (readonly, nonatomic) struct SCNMTLTexturePool { id x0; id x1; struct vector<SCNMTLTexturePool::CachedTexture, std::__1::allocator<SCNMTLTexturePool::CachedTexture> > { struct CachedTexture *x0; struct CachedTexture *x1; struct __compressed_pair<SCNMTLTexturePool::CachedTexture *, std::__1::allocator<SCNMTLTexturePool::CachedTexture> > { struct CachedTexture *x0; } x2; } x2; unsigned int x3; } *frameTexturePool;
@property (readonly, nonatomic) struct SCNMTLRenderCommandEncoder { BOOL x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; unsigned int x9; unsigned int x10; BOOL x11; BOOL x12; struct { id x0; unsigned long long x1; } x13[31]; id x14[128]; id x15[16]; struct { id x0; unsigned long long x1; } x16[31]; id x17[128]; id x18[16]; id x19; id x20; id x21; struct SCNMTLBufferPool *x22; unsigned long long x23[2]; unsigned long long x24[2]; } *renderEncoder;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)registerBindings;

- (void)pushDebugGroup:(id)a0;
- (struct __C3DEngineStats { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; double x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; double x32; double x33; double x34; double x35; double x36; double x37; double x38; unsigned int x39; unsigned int x40; unsigned int x41; unsigned int x42; unsigned int x43; unsigned int x44; unsigned int x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned int x49; unsigned int x50; unsigned int x51; unsigned int x52; unsigned int x53; unsigned int x54; unsigned int x55; double x56; unsigned int x57; double x58; unsigned int x59; double x60; double x61; double x62; double x63; double x64[60]; unsigned int x65; double x66; double x67; } *)stats;
- (void).cxx_destruct;
- (void)dealloc;
- (void)writeBytes:(const void *)a0 length:(unsigned long long)a1;
- (id).cxx_construct;
- (void /* unknown type, empty encoding */)renderSize;
- (void)popDebugGroup;
- (BOOL)mapVolatileMesh:(struct __C3DMesh { } *)a0 verticesCount:(long long)a1;
- (void)unmapVolatileMesh:(struct __C3DMesh { } *)a0 modifiedVerticesCount:(long long)a1;
- (void)drawRenderElement:(struct __C3DRendererElement { unsigned int x0; struct __C3DNode *x1; struct __C3DGeometry *x2; struct __C3DMesh *x3; void *x4; struct __C3DMaterial *x5; struct __C3DFXTechnique *x6; struct { unsigned char x0[8]; } x7; int x8; unsigned int x9; unsigned char x10 : 8; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13 : 1; unsigned char x14 : 1; unsigned char x15 : 1; unsigned char x16 : 1; unsigned char x17 : 3; unsigned char x18 : 1; unsigned char x19 : 3; } *)a0 withPass:(struct __C3DFXPass { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct __CFString *x1; int x2; int x3; BOOL x4; struct __C3DFXTechnique *x5; struct __CFString *x6; struct __CFString *x7; struct __CFString *x8; struct __CFString *x9; BOOL x10; struct __C3DFXProgram *x11; struct __C3DMaterial *x12; struct __C3DBlendStates *x13; struct __C3DRasterizerStates *x14; struct C3DColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x15; unsigned char x16; unsigned int x17; unsigned char x18 : 1; unsigned char x19 : 1; unsigned char x20 : 1; unsigned char x21 : 1; unsigned char x22 : 1; unsigned char x23 : 1; unsigned char x24 : 1; unsigned char x25 : 1; unsigned char x26 : 1; unsigned char x27 : 1; unsigned char x28 : 1; unsigned char x29 : 1; unsigned char x30 : 1; unsigned char x31 : 1; unsigned char x32 : 1; unsigned char x33 : 1; unsigned char x34 : 1; unsigned char x35 : 1; unsigned char x36 : 1; unsigned char x37 : 1; unsigned char x38 : 1; unsigned char x39 : 1; unsigned char x40 : 1; unsigned char x41 : 1; unsigned char x42 : 1; unsigned char x43 : 1; unsigned char x44 : 1; unsigned char x45 : 1; struct __C3DRendererElement *x46; unsigned long long x47; unsigned long long x48; struct { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; void /* function */ *x4; void /* function */ *x5; void /* function */ *x6; void /* function */ *x7; void *x8; } x49; struct { struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9[4]; } x0[8]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9[4]; } x1; unsigned char x2 : 3; unsigned char x3 : 1; unsigned char x4 : 1; } x50; struct CGPoint { double x0; double x1; } x51; float x52[9]; struct *x53; unsigned int x54; struct __C3DNode *x55; struct __C3DNode *x56; struct __CFArray *x57; struct __C3DNode *x58; unsigned char x59; struct __CFString *x60; struct __CFString *x61; struct __CFString *x62; struct __C3DFXPassInput **x63; long long x64; long long x65; struct __CFDictionary *x66; id /* block */ x67; id /* block */ x68; struct __CFDictionary *x69; void *x70; } *)a1;
- (id)textureForEffectSlot:(struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct C3DColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x1; void *x2; union { struct __C3DImage *x0; void *x1; struct __C3DImageProxy *x2; struct __C3DTexture *x3; } x3; unsigned char x4 : 8; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 4; char x9; struct __C3DTextureSampler *x10; union C3DMatrix4x4)fi^v { } *x11; float x12; int x13; void *x14; } *)a0;
- (void)_drawFullScreenTexture:(id)a0 over:(BOOL)a1;
- (void)renderSKSceneWithRenderer:(id)a0 overlay:(BOOL)a1 atTime:(double)a2;
- (unsigned long long)cubeArrayTypeIfSupported;
- (id)_finalRenderTexture;
- (void)beginRenderPass:(id)a0 renderEncoder:(void *)a1 parameters:(struct { unsigned char x0; unsigned char x1; unsigned char x2; BOOL x3; BOOL x4; })a2;
- (void)endRenderPass;
- (void)renderMesh:(struct __C3DMesh { } *)a0 meshElement:(struct __C3DMeshElement { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; unsigned int x1; unsigned int x2; struct __C3DMeshElement *x3; unsigned char x4; unsigned char x5; unsigned char x6; struct { char x0; struct __CFData *x1; unsigned int x2; unsigned int *x3; struct { long long x0; long long x1; } x4; unsigned char x5; BOOL x6; } x7; void *x8; float x9; float x10; float x11; void *x12; struct __C3DMeshSource *x13; void /* unknown type, empty encoding */ x14[2]; struct *x15; unsigned int x16; } *)a1 withProgram:(struct __C3DFXMetalProgram { struct __C3DFXProgram { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; int x1; unsigned char x2 : 1; unsigned char x3 : 1; struct __C3DFXProgramDelegate *x4; } x0; struct __CFString *x1[2]; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; void *x5; struct __CFDictionary *x6; void *x7; unsigned long long x8; } *)a2 engineContext:(struct __C3DEngineContext { } *)a3 transform:(union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; })a4 color:(const struct C3DColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } *)a5 rasterizerStates:(struct __C3DRasterizerStates { } *)a6 blendState:(struct __C3DBlendStates { } *)a7 texture:(struct __C3DImage { } *)a8 depthBias:(BOOL)a9;
- (void)renderVideoBackground:(struct __C3DImageProxy { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; } x1; void *x2; unsigned char x3; } *)a0 engineContext:(struct __C3DEngineContext { } *)a1 slot:(struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct C3DColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x1; void *x2; union { struct __C3DImage *x0; void *x1; struct __C3DImageProxy *x2; struct __C3DTexture *x3; } x3; unsigned char x4 : 8; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 4; char x9; struct __C3DTextureSampler *x10; union C3DMatrix4x4)fi^v { } *x11; float x12; int x13; void *x14; } *)a2;
- (void)renderBackground:(struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct C3DColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x1; void *x2; union { struct __C3DImage *x0; void *x1; struct __C3DImageProxy *x2; struct __C3DTexture *x3; } x3; unsigned char x4 : 8; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 4; char x9; struct __C3DTextureSampler *x10; union C3DMatrix4x4)fi^v { } *x11; float x12; int x13; void *x14; } *)a0 engineContext:(struct __C3DEngineContext { } *)a1 passInstance:(struct __C3DFXPassInstance { struct __C3DFXPass *x0; long long x1; struct __C3DFXPassInstance *x2; unsigned char x3; unsigned char x4; BOOL x5; unsigned char x6; struct __C3DArray *x7[6]; struct __C3DCullingContext { struct __C3DEnginePipeline *x0; struct { union { struct { float x0; float x1; float x2; float x3; } x0; } x0[6]; } x1[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x2[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x3[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x4[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x5[6]; struct { union { struct { float x0; float x1; float x2; float x3; } x0; } x0[6]; } x6[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x7[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x8[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x9[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x10[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x11[6]; unsigned int x12; unsigned char x13; unsigned char x14; unsigned char x15; unsigned char x16; BOOL x17; struct __C3DFXPass *x18; void *x19; struct __C3DNode *x20; struct __C3DNode *x21; BOOL x22; BOOL x23; BOOL x24; BOOL x25; BOOL x26; BOOL x27; BOOL x28; BOOL x29; BOOL x30; BOOL x31; unsigned long long x32; unsigned long long x33; void *x34; struct __C3DScene *x35; struct __C3DEngineContext *x36; double x37; double x38; union { struct { float x0; float x1; float x2; float x3; } x0; } x39; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x40; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x41; struct { struct *x0; unsigned int x1; unsigned int x2; } x42[6]; BOOL x43; void /* function */ *x44; } x8; struct __C3DNode *x9; } *)a2;
- (BOOL)supportsMTLFeatureSet:(unsigned long long)a0;
- (void)resetVolatileMeshes;
- (void)resetVolatileMeshElements;
- (void)_createResourceCommandBufferIfNeeded;
- (void)_clearRenderCaches;
- (void)_updateProjectionMatrixForOrthographicSkyboxRenderingIfNeeded:(union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } *)a0;
- (void)setRasterizerStates:(struct __C3DRasterizerStates { } *)a0;
- (float)_zFarForSkyboxRenderingProjectionMatrix:(const union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } *)a0 defaultZFar:(float)a1;
- (void)_setMeshBuffers:(id)a0;
- (void)_drawMeshElement:(id)a0 instanceCount:(unsigned long long)a1;
- (void)startProcessingRendererElementsWithEngineIterationContext:(struct { struct __C3DEnginePipeline *x0; struct __C3DEngineContext *x1; struct __C3DFXPassInstance *x2; void *x3; struct __C3DNode *x4; BOOL x5; BOOL x6; BOOL x7; } *)a0;
- (void)beginDeferredLighting;
- (void)renderLight:(struct __C3DNode { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; struct __C3DNode *x1; struct __C3DNode *x2; struct __C3DNode *x3; int x4; struct { union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x0; union { } x1; } x5; union C3DMatrix4x4)BfQib1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b3{? { } *x6; BOOL x7; float x8; unsigned long long x9; int x10; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13 : 1; unsigned char x14 : 1; unsigned char x15 : 1; unsigned char x16 : 1; unsigned char x17 : 1; unsigned char x18 : 1; unsigned char x19 : 1; unsigned char x20 : 1; unsigned char x21 : 1; unsigned char x22 : 1; unsigned char x23 : 1; unsigned char x24 : 1; unsigned char x25 : 1; unsigned char x26 : 1; unsigned char x27 : 1; unsigned char x28 : 1; unsigned char x29 : 1; unsigned char x30 : 1; unsigned char x31 : 1; unsigned char x32 : 1; unsigned char x33 : 1; unsigned char x34 : 1; unsigned char x35 : 3; struct { struct { unsigned short x0; unsigned short x1; } x0; unsigned int x1; } x36; struct *x37; struct __C3DGeometry *x38; struct __C3DSkinner *x39; float x40; struct { } x41; } *)a0 lightType:(int)a1 lightData:(struct __C3DLightRuntimeData { unsigned int x0; float x1; struct { void /* unknown type, empty encoding */ x0[4]; } x2[4]; void *x3; struct __C3DTextureSampler *x4; void *x5; struct __C3DTextureSampler *x6; } *)a2;
- (void)endDeferredLighting;
- (void)drawWireframeOverlayForElements:(struct { unsigned short x0; unsigned short x1; } *)a0 range:(struct { long long x0; long long x1; })a1 store:(struct __C3DRendererElementStore { } *)a2 passInstance:(struct __C3DFXPassInstance { struct __C3DFXPass *x0; long long x1; struct __C3DFXPassInstance *x2; unsigned char x3; unsigned char x4; BOOL x5; unsigned char x6; struct __C3DArray *x7[6]; struct __C3DCullingContext { struct __C3DEnginePipeline *x0; struct { union { struct { float x0; float x1; float x2; float x3; } x0; } x0[6]; } x1[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x2[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x3[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x4[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x5[6]; struct { union { struct { float x0; float x1; float x2; float x3; } x0; } x0[6]; } x6[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x7[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x8[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x9[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x10[6]; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x11[6]; unsigned int x12; unsigned char x13; unsigned char x14; unsigned char x15; unsigned char x16; BOOL x17; struct __C3DFXPass *x18; void *x19; struct __C3DNode *x20; struct __C3DNode *x21; BOOL x22; BOOL x23; BOOL x24; BOOL x25; BOOL x26; BOOL x27; BOOL x28; BOOL x29; BOOL x30; BOOL x31; unsigned long long x32; unsigned long long x33; void *x34; struct __C3DScene *x35; struct __C3DEngineContext *x36; double x37; double x38; union { struct { float x0; float x1; float x2; float x3; } x0; } x39; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x40; union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x41; struct { struct *x0; unsigned int x1; unsigned int x2; } x42[6]; BOOL x43; void /* function */ *x44; } x8; struct __C3DNode *x9; } *)a3;
- (void)stopProcessingRendererElements:(BOOL)a0;
- (void)_drawPBRTextures;
- (void)_drawShadowMaps;
- (id)radianceTextureForEffectSlot:(struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct C3DColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x1; void *x2; union { struct __C3DImage *x0; void *x1; struct __C3DImageProxy *x2; struct __C3DTexture *x3; } x3; unsigned char x4 : 8; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 4; char x9; struct __C3DTextureSampler *x10; union C3DMatrix4x4)fi^v { } *x11; float x12; int x13; void *x14; } *)a0;
- (id)irradianceTextureForEffectSlot:(struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct C3DColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x1; void *x2; union { struct __C3DImage *x0; void *x1; struct __C3DImageProxy *x2; struct __C3DTexture *x3; } x3; unsigned char x4 : 8; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 4; char x9; struct __C3DTextureSampler *x10; union C3DMatrix4x4)fi^v { } *x11; float x12; int x13; void *x14; } *)a0;
- (id)_newMTLBufferFromPoolWithLength:(unsigned long long)a0;
- (void)_recycleMTLBufferToPool:(id)a0;
- (struct __C3DFXPass { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct __CFString *x1; int x2; int x3; BOOL x4; struct __C3DFXTechnique *x5; struct __CFString *x6; struct __CFString *x7; struct __CFString *x8; struct __CFString *x9; BOOL x10; struct __C3DFXProgram *x11; struct __C3DMaterial *x12; struct __C3DBlendStates *x13; struct __C3DRasterizerStates *x14; struct C3DColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x15; unsigned char x16; unsigned int x17; unsigned char x18 : 1; unsigned char x19 : 1; unsigned char x20 : 1; unsigned char x21 : 1; unsigned char x22 : 1; unsigned char x23 : 1; unsigned char x24 : 1; unsigned char x25 : 1; unsigned char x26 : 1; unsigned char x27 : 1; unsigned char x28 : 1; unsigned char x29 : 1; unsigned char x30 : 1; unsigned char x31 : 1; unsigned char x32 : 1; unsigned char x33 : 1; unsigned char x34 : 1; unsigned char x35 : 1; unsigned char x36 : 1; unsigned char x37 : 1; unsigned char x38 : 1; unsigned char x39 : 1; unsigned char x40 : 1; unsigned char x41 : 1; unsigned char x42 : 1; unsigned char x43 : 1; unsigned char x44 : 1; unsigned char x45 : 1; struct __C3DRendererElement *x46; unsigned long long x47; unsigned long long x48; struct { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; void /* function */ *x4; void /* function */ *x5; void /* function */ *x6; void /* function */ *x7; void *x8; } x49; struct { struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9[4]; } x0[8]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9[4]; } x1; unsigned char x2 : 3; unsigned char x3 : 1; unsigned char x4 : 1; } x50; struct CGPoint { double x0; double x1; } x51; float x52[9]; struct *x53; unsigned int x54; struct __C3DNode *x55; struct __C3DNode *x56; struct __CFArray *x57; struct __C3DNode *x58; unsigned char x59; struct __CFString *x60; struct __CFString *x61; struct __CFString *x62; struct __C3DFXPassInput **x63; long long x64; long long x65; struct __CFDictionary *x66; id /* block */ x67; id /* block */ x68; struct __CFDictionary *x69; void *x70; } *)_createPassWithVertex:(id)a0 fragment:(id)a1;
- (void)_reduceStatsOfConstantBuffer:(id)a0;
- (id)initWithDevice:(id)a0 engineContext:(struct __C3DEngineContext { } *)a1;
- (void)_clearUnusedBindingPoints;
- (void)beginFrame:(id)a0;
- (void)endFrameSceneSpecifics;
- (void)endFrameWaitingUntilCompleted:(BOOL)a0;
- (id)_reflectionProbeArrayTexture;
- (void)_setReflectionProbeArrayTexture:(id)a0;
- (void *)_clusterInfo;
- (id)newRenderTargetWithDescription:(SEL)a0 size:(struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9[4]; } *)a1 arrayLength:(unsigned long long)a2;
- (void)_logLightingInformation;
- (void)_setSceneBufferAtVertexIndex:(long long)a0 fragmentIndex:(long long)a1;
- (void)_drawPatchForMeshElement:(id)a0 instanceCount:(unsigned long long)a1;
- (void)processRendererElements:(struct { unsigned short x0; unsigned short x1; } *)a0 count:(unsigned int)a1 engineIterationContext:(struct { struct __C3DEnginePipeline *x0; struct __C3DEngineContext *x1; struct __C3DFXPassInstance *x2; void *x3; struct __C3DNode *x4; BOOL x5; BOOL x6; BOOL x7; } *)a2;
- (void)_prepareMaterialTextures:(struct __C3DMaterial { } *)a0;
- (struct __C3DMeshElement { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; unsigned int x1; unsigned int x2; struct __C3DMeshElement *x3; unsigned char x4; unsigned char x5; unsigned char x6; struct { char x0; struct __CFData *x1; unsigned int x2; unsigned int *x3; struct { long long x0; long long x1; } x4; unsigned char x5; BOOL x6; } x7; void *x8; float x9; float x10; float x11; void *x12; struct __C3DMeshSource *x13; void /* unknown type, empty encoding */ x14[2]; struct *x15; unsigned int x16; } *)createVolatileMeshElementOfType:(char)a0 primitiveCount:(long long)a1 bytesPerIndex:(long long)a2;
- (void)unmapVolatileMeshElement:(struct __C3DMeshElement { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; unsigned int x1; unsigned int x2; struct __C3DMeshElement *x3; unsigned char x4; unsigned char x5; unsigned char x6; struct { char x0; struct __CFData *x1; unsigned int x2; unsigned int *x3; struct { long long x0; long long x1; } x4; unsigned char x5; BOOL x6; } x7; void *x8; float x9; float x10; float x11; void *x12; struct __C3DMeshSource *x13; void /* unknown type, empty encoding */ x14[2]; struct *x15; unsigned int x16; } *)a0;
- (void)drawFullScreenQuadForPass:(struct __C3DFXPass { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct __CFString *x1; int x2; int x3; BOOL x4; struct __C3DFXTechnique *x5; struct __CFString *x6; struct __CFString *x7; struct __CFString *x8; struct __CFString *x9; BOOL x10; struct __C3DFXProgram *x11; struct __C3DMaterial *x12; struct __C3DBlendStates *x13; struct __C3DRasterizerStates *x14; struct C3DColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x15; unsigned char x16; unsigned int x17; unsigned char x18 : 1; unsigned char x19 : 1; unsigned char x20 : 1; unsigned char x21 : 1; unsigned char x22 : 1; unsigned char x23 : 1; unsigned char x24 : 1; unsigned char x25 : 1; unsigned char x26 : 1; unsigned char x27 : 1; unsigned char x28 : 1; unsigned char x29 : 1; unsigned char x30 : 1; unsigned char x31 : 1; unsigned char x32 : 1; unsigned char x33 : 1; unsigned char x34 : 1; unsigned char x35 : 1; unsigned char x36 : 1; unsigned char x37 : 1; unsigned char x38 : 1; unsigned char x39 : 1; unsigned char x40 : 1; unsigned char x41 : 1; unsigned char x42 : 1; unsigned char x43 : 1; unsigned char x44 : 1; unsigned char x45 : 1; struct __C3DRendererElement *x46; unsigned long long x47; unsigned long long x48; struct { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; void /* function */ *x4; void /* function */ *x5; void /* function */ *x6; void /* function */ *x7; void *x8; } x49; struct { struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9[4]; } x0[8]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9[4]; } x1; unsigned char x2 : 3; unsigned char x3 : 1; unsigned char x4 : 1; } x50; struct CGPoint { double x0; double x1; } x51; float x52[9]; struct *x53; unsigned int x54; struct __C3DNode *x55; struct __C3DNode *x56; struct __CFArray *x57; struct __C3DNode *x58; unsigned char x59; struct __CFString *x60; struct __CFString *x61; struct __CFString *x62; struct __C3DFXPassInput **x63; long long x64; long long x65; struct __CFDictionary *x66; id /* block */ x67; id /* block */ x68; struct __CFDictionary *x69; void *x70; } *)a0;
- (float)renderTime;
- (void)endRenderCommandEncoding;
- (void)setCurrentPassHash:(unsigned long long)a0;
- (void)setCurrentPassMaterial:(struct __C3DMaterial { } *)a0;
- (unsigned long long)getCurrentPassHash;
- (struct __C3DMaterial { } *)getCurrentPassMaterial;

@end
