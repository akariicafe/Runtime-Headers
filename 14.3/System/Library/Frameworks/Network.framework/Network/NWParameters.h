@class NSUUID, NSString, NSArray, NSURL, NSSet, NSData, NSDictionary, NSObject, NWAddressEndpoint, NWInterface;
@protocol OS_nw_parameters;

@interface NWParameters : NSObject <NWPrettyDescription, NSSecureCoding, NSCopying>

@property (class, readonly) BOOL supportsSecureCoding;

@property (retain) NSObject<OS_nw_parameters> *internalParameters;
@property (nonatomic) BOOL indefinite;
@property (nonatomic) BOOL noProxy;
@property (readonly, nonatomic, getter=isValid) BOOL valid;
@property (readonly, nonatomic, getter=isDryRun) BOOL dryRun;
@property (readonly, nonatomic) BOOL prohibitCellular;
@property (nonatomic) BOOL prohibitFallback;
@property (nonatomic, getter=isDiscretionary) BOOL discretionary;
@property (nonatomic) BOOL allowSocketAccess;
@property (retain, nonatomic) NSUUID *parentID;
@property (readonly, nonatomic) NSArray *parentIDs;
@property (retain, nonatomic) NSSet *SSLCipherSuitesInternal;
@property (nonatomic) unsigned long long minimumSSLProtocolVersionInternal;
@property (nonatomic) unsigned long long maximumSSLProtocolVersionInternal;
@property (readonly, nonatomic) unsigned char transportProtocol;
@property (nonatomic) BOOL keepAlive;
@property (nonatomic) unsigned long long keepAliveIdleTime;
@property (nonatomic) unsigned long long keepAliveInterval;
@property (nonatomic) BOOL keepAliveOffload;
@property (nonatomic) BOOL httpsProxyIsOpaque;
@property (nonatomic) BOOL httpsProxyOverTLS;
@property (nonatomic) BOOL attachProtocolListener;
@property (nonatomic) BOOL prohibitJoiningProtocols;
@property (nonatomic) BOOL allowJoiningConnectedFd;
@property (nonatomic) BOOL allowDuplicateStateUpdates;
@property (nonatomic) BOOL trustInvalidCertificates;
@property (readonly, copy, nonatomic) NSString *privateDescription;
@property (readonly, nonatomic) unsigned char ipProtocol;
@property (nonatomic) int pid;
@property (nonatomic) unsigned int uid;
@property (copy, nonatomic) NSUUID *processUUID;
@property (copy, nonatomic) NSUUID *effectiveProcessUUID;
@property (copy, nonatomic) NSString *effectiveBundleID;
@property (nonatomic) BOOL useLongOutstandingQueries;
@property (nonatomic) BOOL ignoreResolverStats;
@property (nonatomic) BOOL useAWDL;
@property (nonatomic) BOOL useP2P;
@property (nonatomic) BOOL resolvePTR;
@property (nonatomic) BOOL multipath;
@property (nonatomic) int multipathService;
@property (nonatomic) BOOL multipathForceEnable;
@property (nonatomic) unsigned char requiredAddressFamily;
@property (copy, nonatomic) NSURL *url;
@property (readonly, nonatomic) NSURL *sanitizedURL;
@property (copy, nonatomic) NSDictionary *proxyConfiguration;
@property (retain, nonatomic) NWAddressEndpoint *localAddress;
@property (nonatomic) BOOL reuseLocalAddress;
@property (retain, nonatomic) NWInterface *requiredInterface;
@property (nonatomic) long long requiredInterfaceType;
@property (nonatomic) long long requiredInterfaceSubtype;
@property (nonatomic) BOOL enableTFO;
@property (nonatomic) BOOL enableTFONoCookie;
@property (nonatomic) BOOL fastOpenForceEnable;
@property (nonatomic) BOOL enableSFO;
@property (retain, nonatomic) NSData *metadata;
@property (nonatomic) BOOL prohibitRoaming;
@property (copy, nonatomic) NSArray *protocolTransforms;
@property (nonatomic) BOOL allowUnusableAddresses;
@property (nonatomic) BOOL preferNoProxy;
@property (copy, nonatomic) NSString *account;
@property (nonatomic) unsigned long long dataMode;
@property (nonatomic) unsigned long long trafficClass;
@property (nonatomic) BOOL prohibitExpensivePaths;
@property (nonatomic) BOOL prohibitConstrainedPaths;
@property (nonatomic) BOOL reduceBuffering;
@property (nonatomic) BOOL disableNagleAlgorithm;
@property (nonatomic) BOOL enableTLS;
@property (copy, nonatomic) NSData *TLSSessionID;
@property (copy, nonatomic) NSSet *SSLCipherSuites;
@property (nonatomic) unsigned long long minimumSSLProtocolVersion;
@property (nonatomic) unsigned long long maximumSSLProtocolVersion;

+ (id)parametersWithProtocolBufferData:(id)a0;
+ (id)parametersWithCParameters:(id)a0;

- (void)setSourceApplicationWithBundleID:(id)a0;
- (id)init;
- (void)prohibitInterface:(id)a0;
- (id)createProtocolBufferObject;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)descriptionWithIndent:(int)a0 showFullContent:(BOOL)a1;
- (void)avoidNetworkAgentWithDomain:(id)a0 type:(id)a1;
- (BOOL)hasDelegatedPIDForOriginatingPID:(int)a0;
- (id)copyCParameters;
- (void)setSourceApplicationWithToken:(struct { unsigned int x0[8]; })a0;
- (BOOL)hasDelegatedProcessUUID;
- (void)setProtocolAtLevel:(unsigned long long)a0 protocol:(struct nw_protocol_identifier { char x0[32]; int x1; int x2; } *)a1;
- (unsigned long long)hash;
- (id)initWithParameters:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)avoidNetworkAgentWithUUID:(id)a0;
- (unsigned short)tlsVersionWithSSLProtocol:(int)a0;
- (id)description;
- (void)prohibitInterfaceType:(long long)a0;
- (void)requireNetworkAgentWithDomain:(id)a0 type:(id)a1;
- (void)requireNetworkAgentWithUUID:(id)a0;
- (BOOL)isEqual:(id)a0;
- (BOOL)hasNonEmptyProxyConfiguration;
- (void)prohibitNetworkAgentWithUUID:(id)a0;
- (BOOL)copyEffectiveAuditToken:(struct { unsigned int x0[8]; } *)a0;
- (void)preferNetworkAgentWithDomain:(id)a0 type:(id)a1;
- (void)preferNetworkAgentWithUUID:(id)a0;
- (BOOL)hasProhibitedNetworkAgents;
- (void)prohibitNetworkAgentsWithDomain:(id)a0 type:(id)a1;
- (BOOL)hasPreferredNetworkAgents;
- (BOOL)hasRequiredNetworkAgents;
- (void)setInitialDataPayload:(id)a0;
- (void)prohibitInterfaceSubtype:(long long)a0;
- (void)encodeWithCoder:(id)a0;
- (id)copyRequiredAgentsDescription;

@end
