@class SKPhysicsWorld, AVAudioEnvironmentNode, SKNode, SKCameraNode, SKView, SKPhysicsBody, PKPhysicsWorld, NSMutableArray, AVAudioEngine, NSMapTable, UIColor;
@protocol SKSceneDelegate;

@interface SKScene : SKEffectNode {
    double _lastUpdate;
    double _pausedTime;
    NSMapTable *_touchMap;
    NSMutableArray *_allChildenWithConstraints;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _bounds;
    BOOL _isSetup;
    BOOL _usesExplicitUpdate;
    BOOL _usesExplicitRender;
    SKPhysicsBody *_scenePinBody;
    id _view;
    struct SKCSceneNode { void /* function */ **x0; id x1; BOOL x2; struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *> > > { struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *> > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::hash<std::__1::basic_string<char> >, true> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::equal_to<std::__1::basic_string<char> >, true> > { float x0; } x3; } x0; } x3; id x4; id x5; struct SKCNode *x6; struct vector<SKCNode *, std::__1::allocator<SKCNode *> > { struct SKCNode **x0; struct SKCNode **x1; struct __compressed_pair<SKCNode **, std::__1::allocator<SKCNode *> > { struct SKCNode **x0; } x2; } x7; struct vector<SKCNode *, std::__1::allocator<SKCNode *> > { struct SKCNode **x0; struct SKCNode **x1; struct __compressed_pair<SKCNode **, std::__1::allocator<SKCNode *> > { struct SKCNode **x0; } x2; } x8; struct vector<SKCNode *, std::__1::allocator<SKCNode *> > { struct SKCNode **x0; struct SKCNode **x1; struct __compressed_pair<SKCNode **, std::__1::allocator<SKCNode *> > { struct SKCNode **x0; } x2; } x9; id x10; float x11; BOOL x12; struct list<SKCAction *, std::__1::allocator<SKCAction *> > { struct __list_node_base<SKCAction *, void *> { struct __list_node_base<SKCAction *, void *> *x0; struct __list_node_base<SKCAction *, void *> *x1; } x0; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCAction *, void *> > > { unsigned long long x0; } x1; } x13; struct list<SKCAction *, std::__1::allocator<SKCAction *> > { struct __list_node_base<SKCAction *, void *> { struct __list_node_base<SKCAction *, void *> *x0; struct __list_node_base<SKCAction *, void *> *x1; } x0; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCAction *, void *> > > { unsigned long long x0; } x1; } x14; BOOL x15; id x16; struct shared_ptr<PKPath> { struct PKPath *x0; struct __shared_weak_count *x1; } x17; unsigned int x18; unsigned int x19; BOOL x20; long long x21; float x22; float x23; BOOL x24; BOOL x25; struct { void /* unknown type, empty encoding */ x0[4]; } x26; struct { void /* unknown type, empty encoding */ x0[4]; } x27; id x28; BOOL x29; id x30; struct shared_ptr<jet_framebuffer> { struct jet_framebuffer *x0; struct __shared_weak_count *x1; } x31; struct shared_ptr<jet_texture> { struct jet_texture *x0; struct __shared_weak_count *x1; } x32; struct shared_ptr<jet_texture> { struct jet_texture *x0; struct __shared_weak_count *x1; } x33; struct shared_ptr<jet_texture> { struct jet_texture *x0; struct __shared_weak_count *x1; } x34; BOOL x35; unsigned int x36; id x37; BOOL x38; BOOL x39; id x40; unsigned int x41; long long x42; BOOL x43; struct SKCSpriteNode *x44; struct SKCSpriteNode *x45; struct SKCVideoBackdropNode *x46; } *_skcSceneNode;
    SKNode *_listener;
    AVAudioEngine *_audioEngine;
}

@property BOOL _usesExplicitUpdate;
@property BOOL _usesExplicitRender;
@property BOOL _needsUpdate;
@property BOOL _needsRender;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } visibleRect;
@property (nonatomic) struct CGSize { double x0; double x1; } visibleRectSize;
@property (nonatomic) struct CGPoint { double x0; double x1; } visibleRectCenter;
@property (retain, nonatomic) AVAudioEnvironmentNode *avAudioEnvironmentNode;
@property (retain, nonatomic) PKPhysicsWorld *_pkPhysicsWorld;
@property (nonatomic) struct CGSize { double x0; double x1; } size;
@property (nonatomic) long long scaleMode;
@property (weak, nonatomic) SKCameraNode *camera;
@property (weak, nonatomic) SKNode *listener;
@property (readonly, retain, nonatomic) AVAudioEngine *audioEngine;
@property (retain, nonatomic) UIColor *backgroundColor;
@property (weak, nonatomic) id<SKSceneDelegate> delegate;
@property (nonatomic) struct CGPoint { double x0; double x1; } anchorPoint;
@property (readonly, nonatomic) SKPhysicsWorld *physicsWorld;
@property (readonly, weak, nonatomic) SKView *view;

+ (BOOL)supportsSecureCoding;
+ (id)debugHierarchyPropertyDescriptions;
+ (id)debugHierarchyValueForPropertyWithName:(id)a0 onObject:(id)a1 outOptions:(id *)a2 outError:(id *)a3;
+ (id)sceneWithContentsOfFile:(id)a0;
+ (id)sceneWithSize:(struct CGSize { double x0; double x1; })a0;
+ (id)sceneWithContentsOfFile:(id)a0 size:(struct CGSize { double x0; double x1; })a1;

- (struct CGPoint { double x0; double x1; })position;
- (id)initWithSize:(struct CGSize { double x0; double x1; })a0;
- (void)didMoveToView:(id)a0;
- (void)setPaused:(BOOL)a0;
- (id)init;
- (double)zPosition;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)_setNeedsUpdate;
- (BOOL)_isDirty;
- (void)dealloc;
- (BOOL)isEqualToNode:(id)a0;
- (void)_update:(double)a0;
- (id)initWithCoder:(id)a0;
- (double)xScale;
- (double)yScale;
- (void)_setDirty;
- (id)parentFocusEnvironment;
- (id)description;
- (void)setZRotation:(double)a0;
- (void)setZPosition:(double)a0;
- (double)zRotation;
- (void)setScale:(double)a0;
- (void)setPosition:(struct CGPoint { double x0; double x1; })a0;
- (void)_setNeedsRender;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)update:(double)a0;
- (void)encodeWithCoder:(id)a0;
- (void)setXScale:(double)a0;
- (void)setYScale:(double)a0;
- (void)_setBackgroundContentsWithBuffer:(struct __CVBuffer { } *)a0;
- (void)_notifyNextDirtyState;
- (void)willMoveFromView:(id)a0;
- (void)_didMoveToView:(id)a0;
- (id)_getFocusNodes;
- (struct SKCNode { void /* function */ **x0; id x1; BOOL x2; struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *> > > { struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *> > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::hash<std::__1::basic_string<char> >, true> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::equal_to<std::__1::basic_string<char> >, true> > { float x0; } x3; } x0; } x3; id x4; id x5; struct SKCNode *x6; struct vector<SKCNode *, std::__1::allocator<SKCNode *> > { struct SKCNode **x0; struct SKCNode **x1; struct __compressed_pair<SKCNode **, std::__1::allocator<SKCNode *> > { struct SKCNode **x0; } x2; } x7; struct vector<SKCNode *, std::__1::allocator<SKCNode *> > { struct SKCNode **x0; struct SKCNode **x1; struct __compressed_pair<SKCNode **, std::__1::allocator<SKCNode *> > { struct SKCNode **x0; } x2; } x8; struct vector<SKCNode *, std::__1::allocator<SKCNode *> > { struct SKCNode **x0; struct SKCNode **x1; struct __compressed_pair<SKCNode **, std::__1::allocator<SKCNode *> > { struct SKCNode **x0; } x2; } x9; id x10; float x11; BOOL x12; struct list<SKCAction *, std::__1::allocator<SKCAction *> > { struct __list_node_base<SKCAction *, void *> { struct __list_node_base<SKCAction *, void *> *x0; struct __list_node_base<SKCAction *, void *> *x1; } x0; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCAction *, void *> > > { unsigned long long x0; } x1; } x13; struct list<SKCAction *, std::__1::allocator<SKCAction *> > { struct __list_node_base<SKCAction *, void *> { struct __list_node_base<SKCAction *, void *> *x0; struct __list_node_base<SKCAction *, void *> *x1; } x0; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCAction *, void *> > > { unsigned long long x0; } x1; } x14; BOOL x15; id x16; struct shared_ptr<PKPath> { struct PKPath *x0; struct __shared_weak_count *x1; } x17; unsigned int x18; unsigned int x19; BOOL x20; long long x21; float x22; float x23; BOOL x24; BOOL x25; struct { void /* unknown type, empty encoding */ x0[4]; } x26; struct { void /* unknown type, empty encoding */ x0[4]; } x27; } *)_makeBackingNode;
- (void)_didMakeBackingNode;
- (void)didChangeSize:(struct CGSize { double x0; double x1; })a0;
- (void)_willMoveFromView:(id)a0;
- (void)sceneDidLoad;
- (void)checkAudioEngine;
- (void)handleAVAudioEngineInterruption:(id)a0;
- (void)didEvaluateActions;
- (void)didSimulatePhysics;
- (void)didApplyConstraints;
- (void)didFinishUpdate;
- (BOOL)_hasConstraints;
- (void)_registerConstraintsForNode:(id)a0;
- (void)_removeConstraintsForNode:(id)a0;
- (struct CGPoint { double x0; double x1; })convertPointFromParent:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })convertPointToParent:(struct CGPoint { double x0; double x1; })a0;
- (void)set_anchorPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })convertPointFromView:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })convertPointToView:(struct CGPoint { double x0; double x1; })a0;
- (void)willRenderContent;
- (void)didContinueContact:(id)a0;

@end
