@class SKTransition, NSMapTable, NSMutableDictionary, SKScene;

@interface SKRenderer : NSObject {
    BOOL _needsInitialUpdate;
    BOOL _disableInput;
    BOOL _hasRenderedForCurrentUpdate;
    double _currentTime;
    double _previousTime;
    struct SKCRenderer { id x0; float x1; struct shared_ptr<SKCRenderPass> { struct SKCRenderPass *x0; struct __shared_weak_count *x1; } x2; unsigned int x3; struct shared_ptr<jet_command_buffer> { struct jet_command_buffer *x0; struct __shared_weak_count *x1; } x4; struct list<std::__1::shared_ptr<SKCRenderPass>, std::__1::allocator<std::__1::shared_ptr<SKCRenderPass> > > { struct __list_node_base<std::__1::shared_ptr<SKCRenderPass>, void *> { struct __list_node_base<std::__1::shared_ptr<SKCRenderPass>, void *> *x0; struct __list_node_base<std::__1::shared_ptr<SKCRenderPass>, void *> *x1; } x0; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<SKCRenderPass>, void *> > > { unsigned long long x0; } x1; } x5; struct { unsigned int x0; unsigned int x1; struct { void /* unknown type, empty encoding */ x0[4]; } ***x2; float x3; struct SKCRenderer *x4; float x5; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x8; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x9; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x10; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x11; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x12; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x13; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x14; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x15; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x16; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x17; struct jet_buffer *x18; struct jet_buffer *x19; struct jet_buffer *x20; struct shared_ptr<jet_buffer_pool> { struct jet_buffer_pool *x0; struct __shared_weak_count *x1; } x21; struct shared_ptr<jet_buffer_pool> { struct jet_buffer_pool *x0; struct __shared_weak_count *x1; } x22; struct shared_ptr<jet_buffer_pool> { struct jet_buffer_pool *x0; struct __shared_weak_count *x1; } x23; struct shared_ptr<jet_buffer> { struct jet_buffer *x0; struct __shared_weak_count *x1; } x24; struct shared_ptr<jet_buffer> { struct jet_buffer *x0; struct __shared_weak_count *x1; } x25; struct shared_ptr<jet_texture> { struct jet_texture *x0; struct __shared_weak_count *x1; } x26; struct shared_ptr<jet_texture> { struct jet_texture *x0; struct __shared_weak_count *x1; } x27; struct shared_ptr<jet_sampler> { struct jet_sampler *x0; struct __shared_weak_count *x1; } x28; struct shared_ptr<jet_sampler> { struct jet_sampler *x0; struct __shared_weak_count *x1; } x29; struct shared_ptr<jet_sampler> { struct jet_sampler *x0; struct __shared_weak_count *x1; } x30; struct shared_ptr<jet_sampler> { struct jet_sampler *x0; struct __shared_weak_count *x1; } x31; struct shared_ptr<jet_depth_stencil_mode> { struct jet_depth_stencil_mode *x0; struct __shared_weak_count *x1; } x32; struct shared_ptr<jet_depth_stencil_mode> { struct jet_depth_stencil_mode *x0; struct __shared_weak_count *x1; } x33; struct shared_ptr<jet_depth_stencil_mode> { struct jet_depth_stencil_mode *x0; struct __shared_weak_count *x1; } x34; BOOL x35; unsigned int x36; struct SKCRenderBatch { BOOL x0; int x1; unsigned int x2; unsigned int x3; id x4; struct jet_program *x5; struct jet_texture *x6; struct jet_texture *x7; struct jet_sampler *x8; struct jet_sampler *x9; unsigned int x10; unsigned int x11; float x12; } x37; struct SKCStats *x38; struct vector<std::__1::shared_ptr<jet_buffer>, std::__1::allocator<std::__1::shared_ptr<jet_buffer> > > { struct shared_ptr<jet_buffer> *x0; struct shared_ptr<jet_buffer> *x1; struct __compressed_pair<std::__1::shared_ptr<jet_buffer> *, std::__1::allocator<std::__1::shared_ptr<jet_buffer> > > { struct shared_ptr<jet_buffer> *x0; } x2; } x39; struct vector<std::__1::shared_ptr<jet_buffer_pool>, std::__1::allocator<std::__1::shared_ptr<jet_buffer_pool> > > { struct shared_ptr<jet_buffer_pool> *x0; struct shared_ptr<jet_buffer_pool> *x1; struct __compressed_pair<std::__1::shared_ptr<jet_buffer_pool> *, std::__1::allocator<std::__1::shared_ptr<jet_buffer_pool> > > { struct shared_ptr<jet_buffer_pool> *x0; } x2; } x40; } x6; struct SKCStats *x7; struct SKCStats { void /* function */ **x0; double x1; double x2; double x3; double x4; int x5; struct { double x0; double x1; } x6; struct { double x0; double x1; } x7; struct { double x0; double x1; int x2; } x8; struct { double x0; double x1; int x2; } x9; struct { double x0; double x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; } x10; } x8; id x9; id x10; BOOL x11; BOOL x12; BOOL x13; struct shared_ptr<jet_context> { struct jet_context *x0; struct __shared_weak_count *x1; } x14; struct shared_ptr<jet_fence> { struct jet_fence *x0; struct __shared_weak_count *x1; } x15; struct map<SKCLightNode *, float __attribute__((ext_vector_type(4))), std::__1::less<SKCLightNode *>, std::__1::allocator<std::__1::pair<SKCLightNode *const, float __attribute__((ext_vector_type(4)))> > > { struct __tree<std::__1::__value_type<SKCLightNode *, float __attribute__((ext_vector_type(4)))>, std::__1::__map_value_compare<SKCLightNode *, std::__1::__value_type<SKCLightNode *, float __attribute__((ext_vector_type(4)))>, std::__1::less<SKCLightNode *>, true>, std::__1::allocator<std::__1::__value_type<SKCLightNode *, float __attribute__((ext_vector_type(4)))> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<SKCLightNode *, float __attribute__((ext_vector_type(4)))>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<SKCLightNode *, std::__1::__value_type<SKCLightNode *, float __attribute__((ext_vector_type(4)))>, std::__1::less<SKCLightNode *>, true> > { unsigned long long x0; } x2; } x0; } x16; struct map<unsigned int, SKCLightMaskUniforms, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SKCLightMaskUniforms> > > { struct __tree<std::__1::__value_type<unsigned int, SKCLightMaskUniforms>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, SKCLightMaskUniforms>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, SKCLightMaskUniforms> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, SKCLightMaskUniforms>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, SKCLightMaskUniforms>, std::__1::less<unsigned int>, true> > { unsigned long long x0; } x2; } x0; } x17; struct vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > { struct SKCRenderSortInfo **x0; struct SKCRenderSortInfo **x1; struct __compressed_pair<SKCRenderSortInfo **, std::__1::allocator<SKCRenderSortInfo *> > { struct SKCRenderSortInfo **x0; } x2; } x18; struct map<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > >, std::__1::less<SKCLightNode *>, std::__1::allocator<std::__1::pair<SKCLightNode *const, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > > > > > { struct __tree<std::__1::__value_type<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > > >, std::__1::__map_value_compare<SKCLightNode *, std::__1::__value_type<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > > >, std::__1::less<SKCLightNode *>, true>, std::__1::allocator<std::__1::__value_type<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > > > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > > >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<SKCLightNode *, std::__1::__value_type<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > > >, std::__1::less<SKCLightNode *>, true> > { unsigned long long x0; } x2; } x0; } x19; struct SKCSpriteNode *x20; struct SKCLabelNode *x21; struct { struct SKCRenderPass *x0; struct SKCRenderSortGroup *x1; unsigned int x2; struct list<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > { struct __list_node_base<SKCRenderSortInfo *, void *> { struct __list_node_base<SKCRenderSortInfo *, void *> *x0; struct __list_node_base<SKCRenderSortInfo *, void *> *x1; } x0; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCRenderSortInfo *, void *> > > { unsigned long long x0; } x1; } x3; struct list<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > { struct __list_node_base<SKCRenderSortInfo *, void *> { struct __list_node_base<SKCRenderSortInfo *, void *> *x0; struct __list_node_base<SKCRenderSortInfo *, void *> *x1; } x0; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCRenderSortInfo *, void *> > > { unsigned long long x0; } x1; } x4; struct __list_iterator<SKCRenderSortInfo *, void *> { struct __list_node_base<SKCRenderSortInfo *, void *> *x0; } x5; } x22; struct vector<std::__1::shared_ptr<jet_framebuffer>, std::__1::allocator<std::__1::shared_ptr<jet_framebuffer> > > { struct shared_ptr<jet_framebuffer> *x0; struct shared_ptr<jet_framebuffer> *x1; struct __compressed_pair<std::__1::shared_ptr<jet_framebuffer> *, std::__1::allocator<std::__1::shared_ptr<jet_framebuffer> > > { struct shared_ptr<jet_framebuffer> *x0; } x2; } x23; struct shared_ptr<jet_buffer_pool> { struct jet_buffer_pool *x0; struct __shared_weak_count *x1; } x24; id x25; } *_skcRenderer;
    SKScene *_nextScene;
    SKTransition *_transition;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _renderBounds;
    NSMapTable *_touchMap;
    NSMutableDictionary *_renderOptions;
}

@property (retain, nonatomic) SKScene *scene;
@property (nonatomic) BOOL ignoresSiblingOrder;
@property (nonatomic) BOOL shouldCullNonVisibleNodes;
@property (nonatomic) BOOL showsDrawCount;
@property (nonatomic) BOOL showsNodeCount;
@property (nonatomic) BOOL showsQuadCount;
@property (nonatomic) BOOL showsPhysics;
@property (nonatomic) BOOL showsFields;

+ (id)rendererWithDevice:(id)a0;

- (void).cxx_destruct;
- (void)dealloc;
- (void)_update:(double)a0;
- (void)_initialize;
- (void)updateAtTime:(double)a0;
- (id)_getOptions;
- (id)initWithSKCRenderer:(struct SKCRenderer { id x0; float x1; struct shared_ptr<SKCRenderPass> { struct SKCRenderPass *x0; struct __shared_weak_count *x1; } x2; unsigned int x3; struct shared_ptr<jet_command_buffer> { struct jet_command_buffer *x0; struct __shared_weak_count *x1; } x4; struct list<std::__1::shared_ptr<SKCRenderPass>, std::__1::allocator<std::__1::shared_ptr<SKCRenderPass> > > { struct __list_node_base<std::__1::shared_ptr<SKCRenderPass>, void *> { struct __list_node_base<std::__1::shared_ptr<SKCRenderPass>, void *> *x0; struct __list_node_base<std::__1::shared_ptr<SKCRenderPass>, void *> *x1; } x0; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<SKCRenderPass>, void *> > > { unsigned long long x0; } x1; } x5; struct { unsigned int x0; unsigned int x1; struct { void /* unknown type, empty encoding */ x0[4]; } ***x2; float x3; struct SKCRenderer *x4; float x5; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x8; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x9; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x10; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x11; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x12; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x13; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x14; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x15; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x16; struct shared_ptr<jet_program> { struct jet_program *x0; struct __shared_weak_count *x1; } x17; struct jet_buffer *x18; struct jet_buffer *x19; struct jet_buffer *x20; struct shared_ptr<jet_buffer_pool> { struct jet_buffer_pool *x0; struct __shared_weak_count *x1; } x21; struct shared_ptr<jet_buffer_pool> { struct jet_buffer_pool *x0; struct __shared_weak_count *x1; } x22; struct shared_ptr<jet_buffer_pool> { struct jet_buffer_pool *x0; struct __shared_weak_count *x1; } x23; struct shared_ptr<jet_buffer> { struct jet_buffer *x0; struct __shared_weak_count *x1; } x24; struct shared_ptr<jet_buffer> { struct jet_buffer *x0; struct __shared_weak_count *x1; } x25; struct shared_ptr<jet_texture> { struct jet_texture *x0; struct __shared_weak_count *x1; } x26; struct shared_ptr<jet_texture> { struct jet_texture *x0; struct __shared_weak_count *x1; } x27; struct shared_ptr<jet_sampler> { struct jet_sampler *x0; struct __shared_weak_count *x1; } x28; struct shared_ptr<jet_sampler> { struct jet_sampler *x0; struct __shared_weak_count *x1; } x29; struct shared_ptr<jet_sampler> { struct jet_sampler *x0; struct __shared_weak_count *x1; } x30; struct shared_ptr<jet_sampler> { struct jet_sampler *x0; struct __shared_weak_count *x1; } x31; struct shared_ptr<jet_depth_stencil_mode> { struct jet_depth_stencil_mode *x0; struct __shared_weak_count *x1; } x32; struct shared_ptr<jet_depth_stencil_mode> { struct jet_depth_stencil_mode *x0; struct __shared_weak_count *x1; } x33; struct shared_ptr<jet_depth_stencil_mode> { struct jet_depth_stencil_mode *x0; struct __shared_weak_count *x1; } x34; BOOL x35; unsigned int x36; struct SKCRenderBatch { BOOL x0; int x1; unsigned int x2; unsigned int x3; id x4; struct jet_program *x5; struct jet_texture *x6; struct jet_texture *x7; struct jet_sampler *x8; struct jet_sampler *x9; unsigned int x10; unsigned int x11; float x12; } x37; struct SKCStats *x38; struct vector<std::__1::shared_ptr<jet_buffer>, std::__1::allocator<std::__1::shared_ptr<jet_buffer> > > { struct shared_ptr<jet_buffer> *x0; struct shared_ptr<jet_buffer> *x1; struct __compressed_pair<std::__1::shared_ptr<jet_buffer> *, std::__1::allocator<std::__1::shared_ptr<jet_buffer> > > { struct shared_ptr<jet_buffer> *x0; } x2; } x39; struct vector<std::__1::shared_ptr<jet_buffer_pool>, std::__1::allocator<std::__1::shared_ptr<jet_buffer_pool> > > { struct shared_ptr<jet_buffer_pool> *x0; struct shared_ptr<jet_buffer_pool> *x1; struct __compressed_pair<std::__1::shared_ptr<jet_buffer_pool> *, std::__1::allocator<std::__1::shared_ptr<jet_buffer_pool> > > { struct shared_ptr<jet_buffer_pool> *x0; } x2; } x40; } x6; struct SKCStats *x7; struct SKCStats { void /* function */ **x0; double x1; double x2; double x3; double x4; int x5; struct { double x0; double x1; } x6; struct { double x0; double x1; } x7; struct { double x0; double x1; int x2; } x8; struct { double x0; double x1; int x2; } x9; struct { double x0; double x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; } x10; } x8; id x9; id x10; BOOL x11; BOOL x12; BOOL x13; struct shared_ptr<jet_context> { struct jet_context *x0; struct __shared_weak_count *x1; } x14; struct shared_ptr<jet_fence> { struct jet_fence *x0; struct __shared_weak_count *x1; } x15; struct map<SKCLightNode *, float __attribute__((ext_vector_type(4))), std::__1::less<SKCLightNode *>, std::__1::allocator<std::__1::pair<SKCLightNode *const, float __attribute__((ext_vector_type(4)))> > > { struct __tree<std::__1::__value_type<SKCLightNode *, float __attribute__((ext_vector_type(4)))>, std::__1::__map_value_compare<SKCLightNode *, std::__1::__value_type<SKCLightNode *, float __attribute__((ext_vector_type(4)))>, std::__1::less<SKCLightNode *>, true>, std::__1::allocator<std::__1::__value_type<SKCLightNode *, float __attribute__((ext_vector_type(4)))> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<SKCLightNode *, float __attribute__((ext_vector_type(4)))>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<SKCLightNode *, std::__1::__value_type<SKCLightNode *, float __attribute__((ext_vector_type(4)))>, std::__1::less<SKCLightNode *>, true> > { unsigned long long x0; } x2; } x0; } x16; struct map<unsigned int, SKCLightMaskUniforms, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SKCLightMaskUniforms> > > { struct __tree<std::__1::__value_type<unsigned int, SKCLightMaskUniforms>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, SKCLightMaskUniforms>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, SKCLightMaskUniforms> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, SKCLightMaskUniforms>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, SKCLightMaskUniforms>, std::__1::less<unsigned int>, true> > { unsigned long long x0; } x2; } x0; } x17; struct vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > { struct SKCRenderSortInfo **x0; struct SKCRenderSortInfo **x1; struct __compressed_pair<SKCRenderSortInfo **, std::__1::allocator<SKCRenderSortInfo *> > { struct SKCRenderSortInfo **x0; } x2; } x18; struct map<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > >, std::__1::less<SKCLightNode *>, std::__1::allocator<std::__1::pair<SKCLightNode *const, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > > > > > { struct __tree<std::__1::__value_type<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > > >, std::__1::__map_value_compare<SKCLightNode *, std::__1::__value_type<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > > >, std::__1::less<SKCLightNode *>, true>, std::__1::allocator<std::__1::__value_type<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > > > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > > >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<SKCLightNode *, std::__1::__value_type<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > > >, std::__1::less<SKCLightNode *>, true> > { unsigned long long x0; } x2; } x0; } x19; struct SKCSpriteNode *x20; struct SKCLabelNode *x21; struct { struct SKCRenderPass *x0; struct SKCRenderSortGroup *x1; unsigned int x2; struct list<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > { struct __list_node_base<SKCRenderSortInfo *, void *> { struct __list_node_base<SKCRenderSortInfo *, void *> *x0; struct __list_node_base<SKCRenderSortInfo *, void *> *x1; } x0; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCRenderSortInfo *, void *> > > { unsigned long long x0; } x1; } x3; struct list<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *> > { struct __list_node_base<SKCRenderSortInfo *, void *> { struct __list_node_base<SKCRenderSortInfo *, void *> *x0; struct __list_node_base<SKCRenderSortInfo *, void *> *x1; } x0; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCRenderSortInfo *, void *> > > { unsigned long long x0; } x1; } x4; struct __list_iterator<SKCRenderSortInfo *, void *> { struct __list_node_base<SKCRenderSortInfo *, void *> *x0; } x5; } x22; struct vector<std::__1::shared_ptr<jet_framebuffer>, std::__1::allocator<std::__1::shared_ptr<jet_framebuffer> > > { struct shared_ptr<jet_framebuffer> *x0; struct shared_ptr<jet_framebuffer> *x1; struct __compressed_pair<std::__1::shared_ptr<jet_framebuffer> *, std::__1::allocator<std::__1::shared_ptr<jet_framebuffer> > > { struct shared_ptr<jet_framebuffer> *x0; } x2; } x23; struct shared_ptr<jet_buffer_pool> { struct jet_buffer_pool *x0; struct __shared_weak_count *x1; } x24; id x25; } *)a0;
- (void)_notifyWillRenderContent;
- (void)renderWithViewport:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 renderCommandEncoder:(id)a1 renderPassDescriptor:(id)a2 commandQueue:(id)a3;
- (void)renderWithViewport:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 commandBuffer:(id)a1 renderPassDescriptor:(id)a2;

@end
