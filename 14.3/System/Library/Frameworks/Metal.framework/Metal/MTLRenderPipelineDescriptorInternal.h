@class MTLPipelineBufferDescriptorArrayInternal, NSString, NSDictionary, NSArray, MTLRenderPipelineColorAttachmentDescriptorArrayInternal, MTLVertexDescriptorInternal;
@protocol MTLFunction, MTLPipelineLibrary;

@interface MTLRenderPipelineDescriptorInternal : MTLRenderPipelineDescriptor {
    struct MTLRenderPipelineDescriptorPrivate { MTLRenderPipelineColorAttachmentDescriptorArrayInternal *attachments; unsigned long long rtBlendDescHash[8]; unsigned long long depthAttachmentPixelFormat; unsigned long long stencilAttachmentPixelFormat; unsigned long long tessellationPartitionMode; unsigned long long maxTessellationFactor; BOOL tessellationFactorScaleEnabled; unsigned long long tessellationFactorFormat; unsigned long long tessellationControlPointIndexType; unsigned long long tessellationFactorStepFunction; unsigned long long tessellationOutputWindingOrder; unsigned long long postVertexDumpBufferIndex; BOOL supportIndirectCommandBuffers; long long textureWriteRoundingMode; union { unsigned long long sampleCount; unsigned long long rasterSampleCount; } ; unsigned long long sampleMask; union { unsigned int sampleCoverageHash; float sampleCoverage; } ; unsigned long long paddingToRemove; unsigned long long colorSampleCount; union { unsigned int miscHash[2]; struct { unsigned char alphaToCoverageEnabled : 1; unsigned char alphaToOneEnabled : 1; unsigned char rasterizationEnabled : 1; unsigned char inputPrimitiveTopology : 2; unsigned char private0 : 1; unsigned char depthStencilWriteDisabled : 1; unsigned char openGLMode : 1; unsigned char sampleCoverageInvert : 1; unsigned char private4 : 1; unsigned char vertexAmplificationMode : 1; unsigned char twoSideEnabled : 1; unsigned char pointSizeOutputVS : 1; unsigned char pointCoordLowerLeft : 1; unsigned char pointSmoothEnabled : 1; unsigned char clipDistanceEnableMask : 8; unsigned char alphaTestFunc : 3; unsigned char alphaTestEnabled : 1; unsigned char logicOp : 4; unsigned char logicOpEnabled : 1; unsigned char forceResourceIndex : 1; unsigned char forceSoftwareVertexFetch : 1; } ; } ; unsigned int vertexDepthCompareClampMask; unsigned int fragmentDepthCompareClampMask; unsigned long long resourceIndex; NSString *label; id<MTLFunction> vertexFunction; id<MTLFunction> fragmentFunction; MTLVertexDescriptorInternal *vertexDescriptor; MTLPipelineBufferDescriptorArrayInternal *vertexBuffers; MTLPipelineBufferDescriptorArrayInternal *fragmentBuffers; NSDictionary *driverCompilerOptions; id<MTLPipelineLibrary> pipelineLibrary; void *pad0; void *pad1; NSDictionary *pluginData; BOOL needsCustomBorderColorSamplers; unsigned int maxVertexAmplificationCount; NSArray *binaryArchives; } _private;
}

@property (nonatomic) unsigned long long postVertexDumpBufferIndex;
@property (nonatomic) BOOL forceSoftwareVertexFetch;

- (unsigned long long)resourceIndex;
- (id)formattedDescription:(unsigned long long)a0;
- (id)vertexDescriptor;
- (void)setSupportIndirectCommandBuffers:(BOOL)a0;
- (void)setPointSmoothEnabled:(BOOL)a0;
- (unsigned long long)tessellationFactorStepFunction;
- (const struct MTLRenderPipelineDescriptorPrivate { id x0; unsigned long long x1[8]; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; BOOL x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; BOOL x12; long long x13; union { unsigned long long x0; unsigned long long x1; } x14; unsigned long long x15; union { unsigned int x0; float x1; } x16; unsigned long long x17; unsigned long long x18; union { unsigned int x0[2]; struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 2; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9 : 1; unsigned char x10 : 1; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13 : 1; unsigned char x14 : 8; unsigned char x15 : 3; unsigned char x16 : 1; unsigned char x17 : 4; unsigned char x18 : 1; unsigned char x19 : 1; unsigned char x20 : 1; } x1; } x19; unsigned int x20; unsigned int x21; unsigned long long x22; id x23; id x24; id x25; id x26; id x27; id x28; id x29; id x30; void *x31; void *x32; id x33; BOOL x34; unsigned int x35; id x36; } *)_descriptorPrivate;
- (id)vertexFunction;
- (void)setSampleMask:(unsigned long long)a0;
- (unsigned int)vertexDepthCompareClampMask;
- (void)setTessellationFactorFormat:(unsigned long long)a0;
- (float)sampleCoverage;
- (void)setStencilAttachmentPixelFormat:(unsigned long long)a0;
- (id)init;
- (id)newSerializedFragmentDataWithFlags:(unsigned long long)a0 options:(unsigned long long)a1;
- (void)setSampleCoverageInvert:(BOOL)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)serializeFragmentData;
- (void)setMaxTessellationFactor:(unsigned long long)a0;
- (void)setTessellationFactorStepFunction:(unsigned long long)a0;
- (unsigned long long)depthAttachmentPixelFormat;
- (void)setSampleCoverage:(float)a0;
- (unsigned long long)vertexAmplificationMode;
- (void)reset;
- (void)dealloc;
- (long long)textureWriteFPRoundingMode;
- (void)setOpenGLModeEnabled:(BOOL)a0;
- (void)setDriverCompilerOptions:(id)a0;
- (BOOL)isPointSizeOutputVS;
- (id)driverCompilerOptions;
- (void)attachVertexDescriptor:(id)a0;
- (long long)textureWriteRoundingMode;
- (unsigned long long)inputPrimitiveTopology;
- (void)setResourceIndex:(unsigned long long)a0;
- (BOOL)isPointCoordLowerLeft;
- (BOOL)isTwoSideEnabled;
- (void)setLabel:(id)a0;
- (id)vertexBuffers;
- (id)pipelineLibrary;
- (void)setFragmentFunction:(id)a0;
- (void)setPointCoordLowerLeft:(BOOL)a0;
- (id)newSerializedVertexDataWithFlags:(unsigned long long)a0 error:(id *)a1;
- (unsigned long long)tessellationControlPointIndexType;
- (unsigned long long)alphaTestFunction;
- (void)setVertexDepthCompareClampMask:(unsigned int)a0;
- (void)setTessellationPartitionMode:(unsigned long long)a0;
- (void)setRasterizationEnabled:(BOOL)a0;
- (void)setTessellationFactorScaleEnabled:(BOOL)a0;
- (unsigned long long)maxVertexAmplificationCount;
- (unsigned long long)maxTessellationFactor;
- (void)setVertexAmplificationMode:(unsigned long long)a0;
- (void)setTwoSideEnabled:(BOOL)a0;
- (unsigned long long)hash;
- (void)setTextureWriteRoundingMode:(long long)a0;
- (BOOL)sampleCoverageInvert;
- (void)setAlphaTestEnabled:(BOOL)a0;
- (void)setSampleCount:(unsigned long long)a0;
- (BOOL)validateWithDevice:(id)a0 error:(id *)a1;
- (void)setAlphaToCoverageEnabled:(BOOL)a0;
- (BOOL)forceResourceIndex;
- (void)setLogicOperationEnabled:(BOOL)a0;
- (BOOL)isAlphaToOneEnabled;
- (void)setPluginData:(id)a0;
- (unsigned long long)rasterSampleCount;
- (void)setColorSampleCount:(unsigned long long)a0;
- (unsigned long long)tessellationOutputWindingOrder;
- (id)description;
- (void)setPipelineLibrary:(id)a0;
- (id)newSerializedVertexDataWithFlags:(unsigned long long)a0 options:(unsigned long long)a1 error:(id *)a2;
- (void)setMaxVertexAmplificationCount:(unsigned long long)a0;
- (void)setTextureWriteFPRoundingMode:(long long)a0;
- (BOOL)isAlphaToCoverageEnabled;
- (void)setDepthStencilWriteDisabled:(BOOL)a0;
- (BOOL)isRasterizationEnabled;
- (void)setClipDistanceEnableMask:(unsigned char)a0;
- (BOOL)isLogicOperationEnabled;
- (BOOL)isEqual:(id)a0;
- (BOOL)isPointSmoothEnabled;
- (void)setDepthAttachmentPixelFormat:(unsigned long long)a0;
- (BOOL)isDepthStencilWriteDisabled;
- (unsigned long long)sampleCount;
- (unsigned long long)sampleMask;
- (unsigned long long)stencilAttachmentPixelFormat;
- (unsigned long long)logicOperation;
- (unsigned long long)colorSampleCount;
- (id)label;
- (id)colorAttachments;
- (id)fragmentBuffers;
- (void)setTessellationControlPointIndexType:(unsigned long long)a0;
- (void)setLogicOperation:(unsigned long long)a0;
- (void)validateWithDevice:(id)a0;
- (void)setAlphaToOneEnabled:(BOOL)a0;
- (BOOL)isTessellationFactorScaleEnabled;
- (unsigned char)clipDistanceEnableMask;
- (unsigned long long)tessellationFactorFormat;
- (void)setVertexFunction:(id)a0;
- (void)setPointSizeOutputVS:(BOOL)a0;
- (void)setNeedsCustomBorderColorSamplers:(BOOL)a0;
- (void)setFragmentDepthCompareClampMask:(unsigned int)a0;
- (unsigned long long)tessellationPartitionMode;
- (void)setAlphaTestFunction:(unsigned long long)a0;
- (void)setForceResourceIndex:(BOOL)a0;
- (unsigned int)fragmentDepthCompareClampMask;
- (id)binaryArchives;
- (BOOL)openGLModeEnabled;
- (id)fragmentFunction;
- (BOOL)needsCustomBorderColorSamplers;
- (void)setBinaryArchives:(id)a0;
- (void)setTessellationOutputWindingOrder:(unsigned long long)a0;
- (BOOL)supportIndirectCommandBuffers;
- (id)pluginData;
- (void)setRasterSampleCount:(unsigned long long)a0;
- (id)fastBlendDescriptorAtIndex:(unsigned long long)a0;
- (void)setInputPrimitiveTopology:(unsigned long long)a0;
- (void)setVertexDescriptor:(id)a0;
- (BOOL)isAlphaTestEnabled;

@end
