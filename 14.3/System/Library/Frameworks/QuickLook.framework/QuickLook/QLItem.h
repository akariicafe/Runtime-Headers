@class NSURL, NSUUID, NSDictionary, NSItemProvider, UIColor, NSString, QLItemFetcher, FPSandboxingURLWrapper, QLPreviewItemEditedCopy, NSNumber, NSData, FPItem, QLUTIAnalyzer;
@protocol QLItemThumbnailGeneratorProtocolInternal, QLPreviewItemPrivateProtocol, QLPreviewItemDataProvider;

@interface QLItem : NSObject <QLTExtensionThumbnailItem, QLPreviewItemPrivateProtocol, NSSecureCoding> {
    long long _editedFileExtensionHandle;
}

@property (class, readonly) BOOL supportsSecureCoding;

@property (readonly, copy, nonatomic) NSString *contentType;
@property BOOL needsAccessToExternalResources;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL hasDeterminedShouldUseThirdPartyPreviewExtension;
@property (nonatomic) BOOL shouldUseThirdPartyPreviewExtension;
@property (nonatomic) BOOL hasDeterminedShouldUseExtensionThumbnail;
@property (nonatomic) BOOL shouldUseExtensionThumbnail;
@property (retain, nonatomic) id<QLPreviewItemPrivateProtocol> originalPreviewItem;
@property (retain, nonatomic) NSURL *previewItemURL;
@property (retain) NSData *previewItemData;
@property (retain) FPItem *fpItem;
@property (retain) id<QLPreviewItemDataProvider> previewItemDataProvider;
@property (retain) NSString *searchableItemIdentifier;
@property (retain) NSString *spotlightQueryString;
@property (retain) NSString *searchableItemApplicationBundleIdentifier;
@property (retain) NSString *relativePath;
@property (retain) NSItemProvider *previewItemProvider;
@property (retain, nonatomic) NSNumber *itemSize;
@property (retain, nonatomic) QLItemFetcher *fetcher;
@property (retain, nonatomic) id<QLItemThumbnailGeneratorProtocolInternal> thumbnailGenerator;
@property (retain, nonatomic) QLUTIAnalyzer *UTIAnalyzer;
@property (retain, nonatomic) NSString *previewItemContentType;
@property (retain, nonatomic) UIColor *backgroundColorOverride;
@property (retain, nonatomic) NSString *previewItemTitle;
@property (retain, nonatomic) QLPreviewItemEditedCopy *editedCopy;
@property (retain, nonatomic) QLPreviewItemEditedCopy *lastSavedEditedCopy;
@property (retain) NSString *password;
@property (retain, nonatomic) NSUUID *uuid;
@property (nonatomic) unsigned long long previewItemType;
@property long long processIdentifier;
@property (nonatomic) BOOL isPromisedItem;
@property (nonatomic) BOOL canBeEdited;
@property (nonatomic) BOOL canHandleEditedCopy;
@property (nonatomic) BOOL originalContentWasUpdated;
@property (nonatomic) long long editingMode;
@property (nonatomic) BOOL canBeShared;
@property (nonatomic) unsigned long long editedFileBehavior;
@property (nonatomic) BOOL hasDeterminedShouldUseThirdPartyPreviewExtension;
@property (nonatomic) BOOL shouldUseThirdPartyPreviewExtension;
@property (nonatomic) BOOL hasDeterminedShouldUseExtensionThumbnail;
@property (nonatomic) BOOL shouldUseExtensionThumbnail;
@property (nonatomic) BOOL hasDeterminedPredictedPreferredContentSizeForOrbPlatter;
@property (nonatomic) struct CGSize { double width; double height; } preferredContentSizeForOrbPlatter;
@property (retain, nonatomic) FPSandboxingURLWrapper *sandboxingURLWrapper;
@property (copy, nonatomic) NSDictionary *clientPreviewOptions;
@property BOOL needsAccessToExternalResources;
@property BOOL useAVPlayerViewController;
@property (nonatomic) BOOL useFullPDFTransition;
@property (nonatomic) BOOL useLoadingTimeout;
@property (copy, nonatomic) NSNumber *previewItemProviderProgress;
@property (readonly, nonatomic) NSURL *editedFileURL;
@property BOOL wantsPreviewInDebugViewController;
@property (readonly) NSURL *previewItemURLForDisplay;
@property (readonly) double autoPlaybackPosition;
@property (readonly) BOOL wantsDefaultMediaPlayer;
@property (readonly) NSString *MIMEType;
@property (copy, nonatomic) NSDictionary *previewOptions;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)encodedClasses;
+ (id)customExtensionCommunicationEncodedClasses;
+ (id)supportedContentTypes;
+ (id)itemWithPreviewItem:(id)a0;
+ (unsigned long long)openInTypeForItem:(id)a0 appIsContentManaged:(BOOL)a1;
+ (id)contentTypesToPreviewTypes;
+ (id)rtfContentTypes;
+ (BOOL)contentTypeConformsToRTFD:(id)a0;
+ (id)webContentTypes;
+ (BOOL)_shouldUsePreviewExtensionForContentType:(id)a0 firstPartyExtension:(BOOL)a1;
+ (BOOL)shouldUseRemoteCollection:(id)a0;

- (void)_commonInit;
- (id)init;
- (void).cxx_destruct;
- (id)initWithFPItem:(id)a0;
- (void)dealloc;
- (void)prepareShareableURL:(id /* block */)a0;
- (void)prepareSaveURL:(id /* block */)a0;
- (id)initWithCoder:(id)a0;
- (id)initWithURL:(id)a0;
- (id)saveURL;
- (BOOL)canBePreviewed;
- (BOOL)canBePrintedWithCustomPrinter;
- (double)maxLoadingTime;
- (id)createPreviewContext;
- (id)initWithURLSandboxWrapper:(id)a0;
- (Class)transformerClass;
- (struct CGSize { double x0; double x1; })predictedPreferredContentSizeForOrbPlatter;
- (BOOL)isEqual:(id)a0;
- (id)previewItemPrintingViewControllerClassName;
- (id)previewItemViewControllerClassName;
- (id)shareableURL;
- (long long)defaultWhitePointAdaptivityStyle;
- (unsigned long long)maximumNumberOfCachedPreviews;
- (struct CGSize { double x0; double x1; })previewSizeForItemViewControllerSize:(struct CGSize { double x0; double x1; })a0;
- (BOOL)useThirdPartyPreviewExtension;
- (unsigned long long)_uncachedPreviewItemType;
- (id)initWithData:(id)a0 contentType:(id)a1 previewTitle:(id)a2;
- (id)initWithSearchableItemUniqueIdentifier:(id)a0 queryString:(id)a1 applicationBundleIdentifier:(id)a2 previewTitle:(id)a3;
- (unsigned long long)_uncachedExtensionPreviewItemType;
- (id)initWithDataProvider:(id)a0 contentType:(id)a1 previewTitle:(id)a2;
- (id)internalCopy;
- (void)_removeEditedCopyIfExists;
- (id)initWithPreviewItemProvider:(id)a0 contentType:(id)a1 previewTitle:(id)a2 fileSize:(id)a3;
- (id)initWithURL:(id)a0 MIMEType:(id)a1;
- (id)initWithSearchableItemUniqueIdentifier:(id)a0 applicationBundleIdentifier:(id)a1;
- (BOOL)isStandardQuickLookType;
- (struct CGSize { double x0; double x1; })preferredContentSizeForOrbPlatterWithURL:(id)a0;
- (struct CGSize { double x0; double x1; })imageRawSizeOfContents:(id)a0 withPreviewItemType:(unsigned long long)a1 imageIsAnimated:(BOOL *)a2;
- (BOOL)shouldUseRemoteViewController;
- (unsigned long long)_getPreviewItemType;
- (BOOL)useExtensionThumbnail;
- (void)provideURLWrapper:(id /* block */)a0;
- (void)encodeWithCoder:(id)a0;

@end
