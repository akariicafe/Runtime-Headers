@interface MLNeuralNetworkUpdateUtils : NSObject

+ (BOOL)loadUpdateParameters:(struct NetworkUpdateParameters { void /* function */ **x0; struct InternalMetadataWithArenaLite { void *x0; } x1; struct RepeatedPtrField<CoreML::Specification::LossLayer> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x2; struct Optimizer *x3; struct Int64Parameter *x4; struct BoolParameter *x5; struct Int64Parameter *x6; int x7; } *)a0 fromCompiledArchive:(struct _MLModelInputArchiver { struct IArchive { struct shared_ptr<Archiver::_IArchiveImpl> { struct _IArchiveImpl *x0; struct __shared_weak_count *x1; } x0; struct map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long long x0; } x2; } x0; } x1; } x0; } *)a1 error:(id *)a2;
+ (id)loadParameterDescriptionsAndContainerFromUpdateParameters:(const struct NetworkUpdateParameters { void /* function */ **x0; struct InternalMetadataWithArenaLite { void *x0; } x1; struct RepeatedPtrField<CoreML::Specification::LossLayer> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x2; struct Optimizer *x3; struct Int64Parameter *x4; struct BoolParameter *x5; struct Int64Parameter *x6; int x7; } *)a0 modelDescription:(id)a1;
+ (id)createClassLabelToIndexMapWith:(id)a0;

@end
