@class EKSource, NSString;

@interface EKCalendar : EKObject

@property (nonatomic) unsigned long long cachedJunkStatus;
@property (retain, nonatomic) EKSource *source;
@property (readonly, nonatomic) NSString *calendarIdentifier;
@property (copy, nonatomic) NSString *title;
@property (readonly, nonatomic) long long type;
@property (readonly, nonatomic) BOOL allowsContentModifications;
@property (readonly, nonatomic, getter=isSubscribed) BOOL subscribed;
@property (readonly, nonatomic, getter=isImmutable) BOOL immutable;
@property (nonatomic) struct CGColor { } *CGColor;
@property (readonly, nonatomic) unsigned long long supportedEventAvailabilities;
@property (readonly, nonatomic) unsigned long long allowedEntityTypes;

+ (id)knownRelationshipWeakKeys;
+ (id)knownSingleValueKeysForComparison;
+ (id)EKObjectChangeSummarizer_singleValueDiffKeys;
+ (id)EKObjectChangeSummarizer_multiValueDiffKeys;
+ (id)knownIdentityKeysForComparison;
+ (id)knownRelationshipSingleValueKeys;
+ (id)knownRelationshipMultiValueKeys;
+ (BOOL)isWeakRelationship;
+ (id)typeDescription:(long long)a0;
+ (id)_eventKitBundle;
+ (id)calendarForEntityType:(unsigned long long)a0 eventStore:(id)a1;
+ (id)calendarForEntityTypes:(unsigned long long)a0 eventStore:(id)a1;
+ (id)rowIDsForCalendars:(id)a0;
+ (id)calendarWithEventStore:(id)a0;
+ (Class)frozenClass;

- (BOOL)isColorDisplayOnly;
- (void)setLastSyncErrorData:(id)a0;
- (void)setAllAlarms:(id)a0;
- (id)lastSyncErrorData;
- (void)setAlarms:(id)a0;
- (BOOL)remove:(id *)a0;
- (BOOL)_reset;
- (id)alarms;
- (id)lastSyncErrorUserInfo;
- (void)setReadOnly:(BOOL)a0;
- (void)setInvitationStatus:(unsigned long long)a0;
- (id)digest;
- (void)setUUID:(id)a0;
- (void)setSharedOwnerAddress:(id)a0;
- (void)setOwnerIdentityDisplayName:(id)a0;
- (id)lastSyncStartDate;
- (BOOL)canBeShared;
- (void)setSharedOwnerName:(id)a0;
- (unsigned long long)lastSyncError;
- (id)selfIdentityAddress;
- (BOOL)refresh;
- (void)setSyncToken:(id)a0;
- (void)setSubscriptionID:(id)a0;
- (void)setSharedOwnerURL:(id)a0;
- (void)setRefreshDate:(id)a0;
- (void)setLastSyncStartDate:(id)a0;
- (id)notes;
- (id)sharees;
- (BOOL)allowsScheduling;
- (BOOL)isMutableSuggestionsCalendar;
- (BOOL)isMutableNaturalLanguageSuggestionsCalendar;
- (BOOL)_validateAccessConsent:(id *)a0;
- (void)setLastSyncError:(unsigned long long)a0;
- (void)setNotes:(id)a0;
- (BOOL)isSuggestedEventCalendar;
- (void)setOwnerIdentityLastName:(id)a0;
- (void)setPublishURL:(id)a0;
- (BOOL)isNaturalLanguageSuggestedEventCalendar;
- (BOOL)isManaged;
- (id)findOriginalAlarmStartingWith:(id)a0;
- (int)entityType;
- (id)init;
- (void)setExternalModificationTag:(id)a0;
- (id)allAlarms;
- (id)lastSyncEndDate;
- (id)externalURI;
- (id)externalModificationTag;
- (id)refreshDate;
- (void)setExternalID:(id)a0;
- (void)setLastSyncEndDate:(id)a0;
- (void)removeAllSnoozedAlarms;
- (void)snoozeAlarm:(id)a0 withTimeIntervalFromNow:(double)a1;
- (void)snoozeAlarm:(id)a0 withLocation:(id)a1 proximity:(long long)a2;
- (BOOL)isAlarmAcknowledgedPropertyDirty;
- (void)removeAcknowledgedSnoozedAlarms;
- (BOOL)isInbox;
- (id)sendersEmail;
- (id)selfIdentityDisplayName;
- (id)sendersPhoneNumber;
- (id)unlocalizedTitle;
- (void)setDigest:(id)a0;
- (unsigned long long)invitationStatus;
- (id)ownerIdentityAddress;
- (void)setUnlocalizedTitle:(id)a0;
- (id)selfIdentityEmail;
- (void)setDisplayOrder:(int)a0;
- (id)syncToken;
- (id)UUID;
- (void)reset;
- (BOOL)readOnly;
- (void)setExternalRepresentation:(id)a0;
- (unsigned long long)sharingInvitationResponse;
- (void)setSelfIdentityEmail:(id)a0;
- (int)displayOrder;
- (id)pushKey;
- (void)setSharees:(id)a0;
- (id)externalIDTag;
- (void)setAllowedEntities:(int)a0;
- (void)setLastSyncErrorUserInfo:(id)a0;
- (BOOL)hasTasks;
- (void)setOwnerIdentityFirstName:(id)a0;
- (void)setColorStringRaw:(id)a0;
- (void)setSubcalAccountID:(id)a0;
- (void)setAllowsEvents:(BOOL)a0;
- (void)setSelfIdentityLastName:(id)a0;
- (id)subcalAccountID;
- (id)externalRepresentation;
- (id)sharedOwnerAddress;
- (id)subscriptionID;
- (void)setHidden:(BOOL)a0;
- (id)ownerIdentityLastName;
- (id)sharedOwnerName;
- (BOOL)isDefaultSchedulingCalendar;
- (int)ownerIdentityId;
- (void)setSymbolicColorName:(id)a0;
- (id)selfIdentityLastName;
- (void)setSelfIdentityAddress:(id)a0;
- (void)setSharingInvitationResponse:(unsigned long long)a0;
- (void)addAlarms:(id)a0;
- (id)ownerIdentityFirstName;
- (BOOL)isPublished;
- (id)ownerIdentityEmail;
- (void)setColorDisplayOnly:(BOOL)a0;
- (id)description;
- (BOOL)allowReminders;
- (void)setPushKey:(id)a0;
- (unsigned int)flags;
- (id)publishURL;
- (BOOL)allowEvents;
- (int)allowedEntities;
- (id)sharedOwnerURL;
- (id)syncHash;
- (void)setOwnerIdentityPhoneNumber:(id)a0;
- (BOOL)commit:(id *)a0;
- (void)setLastSyncError:(unsigned long long)a0 userInfo:(id)a1;
- (void)addSharee:(id)a0;
- (BOOL)isFacebookBirthdayCalendar;
- (BOOL)isSubscribedHolidayCalendar;
- (id)ownerIdentityDisplayName;
- (id)externalID;
- (void)setSelfIdentityPhoneNumber:(id)a0;
- (void)setInbox:(BOOL)a0;
- (BOOL)automaticEventLocationGeocodingAllowed;
- (void)setOwnerIdentityAddress:(id)a0;
- (id)colorStringRaw;
- (BOOL)supportsJunkReporting;
- (void)setSharingStatus:(unsigned long long)a0;
- (id)sharedOwnerEmail;
- (id)sharedOwnerPhoneNumber;
- (BOOL)couldBeJunk;
- (void)clearInvitationStatus;
- (void)setAllowedEntityTypes:(unsigned long long)a0;
- (id)ownerIdentityPhoneNumber;
- (void)setCalendarIdentifier:(id)a0;
- (void)setSelfIdentityFirstName:(id)a0;
- (BOOL)hasEvents;
- (BOOL)validate:(id *)a0;
- (id)symbolicColorName;
- (id)colorString;
- (void)setSelfIdentityDisplayName:(id)a0;
- (BOOL)hasSharees;
- (void)setSubscribed:(BOOL)a0;
- (void)setOwnerIdentityEmail:(id)a0;
- (id)selectionSyncIdentifier;
- (BOOL)_flagValueWithMask:(unsigned int)a0;
- (BOOL)_validateDeletable:(id *)a0;
- (void)_clearCGColorCache;
- (id)exportData;
- (BOOL)getColorRed:(int *)a0 green:(int *)a1 blue:(int *)a2;
- (BOOL)isMarkedUndeletable;
- (void)_setFlagValue:(BOOL)a0 withMask:(unsigned int)a1;
- (BOOL)_validateDeletableHelper:(id *)a0;
- (BOOL)isFamilyCalendar;
- (BOOL)prohibitsScheduling;
- (void)setExternalIDTag:(id)a0;
- (BOOL)_anotherCalendarForDefaultSchedulingExists;
- (BOOL)_anotherCalendarForRemindersExists;
- (BOOL)eligibleForDefaultSchedulingCalendar;
- (BOOL)_anyCalendarOfType:(unsigned long long)a0 inSameSourceExistsPassingTest:(id /* block */)a1;
- (void)setProhibitsScheduling:(BOOL)a0;
- (void)setCanBeShared:(BOOL)a0;
- (void)setCanBePublished:(BOOL)a0;
- (void)removeAlarms:(id)a0;
- (void)setColorString:(id)a0;
- (void)setAllowsContentModifications:(BOOL)a0;
- (void)setIsJunk:(BOOL)a0;
- (void)setIsDefaultSchedulingCalendar:(BOOL)a0;
- (BOOL)isNotificationsCollection;
- (void)setNotificationsCollection:(BOOL)a0;
- (BOOL)isImmutableRaw;
- (void)setImmutable:(BOOL)a0;
- (id)selfIdentityPhoneNumber;
- (long long)deletionWarningsMask;
- (BOOL)canMergeWithCalendar:(id)a0;
- (void)setAllowsScheduling:(BOOL)a0;
- (BOOL)isSharingInvitation;
- (void)setSharingInvitation:(BOOL)a0;
- (BOOL)canBePublished;
- (void)setFacebookBirthdayCalendar:(BOOL)a0;
- (BOOL)isHolidaySubscribedCalendar;
- (void)setSubscribedHolidayCalendar:(BOOL)a0;
- (void)removeSharee:(id)a0;
- (void)setFamilyCalendar:(BOOL)a0;
- (void)setMarkedUndeletable:(BOOL)a0;
- (BOOL)isMarkedImmutableSharees;
- (void)setMarkedImmutableSharees:(BOOL)a0;
- (BOOL)isSuggestionsCalendar;
- (BOOL)isIgnoringEventAlerts;
- (void)setIsIgnoringEventAlerts:(BOOL)a0;
- (BOOL)allowsIgnoringSharedEventChangeNotifications;
- (void)setAllowReminders:(BOOL)a0;
- (BOOL)isIgnoringSharedCalendarNotifications;
- (void)setIsIgnoringSharedCalendarNotifications:(BOOL)a0;
- (BOOL)isAffectingAvailability;
- (void)setIsAffectingAvailability:(BOOL)a0;
- (id)ownerIdentityOrganizer;
- (unsigned long long)sharingStatus;
- (id)selfIdentityFirstName;
- (BOOL)isHidden;
- (BOOL)isSyncing;
- (void)setFlags:(unsigned int)a0;
- (BOOL)isDeletable;
- (void)setIsPublished:(BOOL)a0;
- (void)setOwnerIdentityId:(id)a0;

@end
