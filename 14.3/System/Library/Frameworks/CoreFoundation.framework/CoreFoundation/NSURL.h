@class NSArray, NSString, NSData, NSNumber;

@interface NSURL : NSObject <NSItemProviderReading, NSItemProviderWriting, NSSecureCoding, NSCopying> {
    NSString *_urlString;
    NSURL *_baseURL;
    void *_clients;
    void *_reserved;
}

@property (class, readonly, copy, nonatomic) NSArray *readableTypeIdentifiersForItemProvider;
@property (class, readonly, copy, nonatomic) NSArray *writableTypeIdentifiersForItemProvider;
@property (class, readonly) BOOL supportsSecureCoding;

@property (retain, setter=ls_setPreferredLocalizations:) NSArray *ls_preferredLocalizations;
@property (readonly, getter=isiWorkURL) BOOL iWorkURL;
@property (readonly, copy) NSArray *pathComponents;
@property (readonly, copy) NSString *lastPathComponent;
@property (readonly, copy) NSString *pathExtension;
@property (readonly, copy) NSURL *URLByDeletingLastPathComponent;
@property (readonly, copy) NSURL *URLByDeletingPathExtension;
@property (readonly, copy) NSURL *URLByStandardizingPath;
@property (readonly, copy) NSURL *URLByResolvingSymlinksInPath;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSArray *writableTypeIdentifiersForItemProvider;
@property (readonly, copy) NSData *dataRepresentation;
@property (readonly, copy) NSString *absoluteString;
@property (readonly, copy) NSString *relativeString;
@property (readonly, copy) NSURL *baseURL;
@property (readonly, copy) NSURL *absoluteURL;
@property (readonly, copy) NSString *scheme;
@property (readonly, copy) NSString *resourceSpecifier;
@property (readonly, copy) NSString *host;
@property (readonly, copy) NSNumber *port;
@property (readonly, copy) NSString *user;
@property (readonly, copy) NSString *password;
@property (readonly, copy) NSString *path;
@property (readonly, copy) NSString *fragment;
@property (readonly, copy) NSString *parameterString;
@property (readonly, copy) NSString *query;
@property (readonly, copy) NSString *relativePath;
@property (readonly) BOOL hasDirectoryPath;
@property (readonly) const char *fileSystemRepresentation;
@property (readonly, getter=isFileURL) BOOL fileURL;
@property (readonly, copy) NSURL *standardizedURL;
@property (readonly, copy) NSURL *filePathURL;

+ (id)allocWithZone:(struct _NSZone { } *)a0;
+ (id)URLByResolvingAliasFileAtURL:(id)a0 options:(unsigned long long)a1 error:(id *)a2;
+ (id)URLByResolvingBookmarkData:(id)a0 options:(unsigned long long)a1 relativeToURL:(id)a2 bookmarkDataIsStale:(BOOL *)a3 error:(id *)a4;
+ (id)fileURLWithFileSystemRepresentation:(const char *)a0 isDirectory:(BOOL)a1 relativeToURL:(id)a2;
+ (id)_fileURLWithPath:(id)a0 cachingResourceValuesForKeys:(id)a1 error:(id *)a2;
+ (id)URLWithString:(id)a0;
+ (id)objectWithItemProviderData:(id)a0 typeIdentifier:(id)a1 error:(id *)a2;
+ (id)absoluteURLWithDataRepresentation:(id)a0 relativeToURL:(id)a1;
+ (id)fileURLWithPath:(id)a0 isDirectory:(BOOL)a1;
+ (id)fileURLWithPath:(id)a0 isDirectory:(BOOL)a1 relativeToURL:(id)a2;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)a0;
+ (id)URLWithDataRepresentation:(id)a0 relativeToURL:(id)a1;
+ (id)_web_URLWithString:(id)a0 relativeToURL:(id)a1;
+ (id)_URLWithDataAsString:(id)a0 relativeToURL:(id)a1;
+ (id)fileURLWithPath:(id)a0;
+ (id)fileURLWithPath:(id)a0 relativeToURL:(id)a1;
+ (id)URLWithString:(id)a0 relativeToURL:(id)a1;
+ (id)_URLWithData:(id)a0 relativeToURL:(id)a1;
+ (id)fileURLWithPathComponents:(id)a0;
+ (id)_web_URLWithComponents:(struct { id x0; id x1; id x2; id x3; long long x4; id x5; id x6; id x7; })a0;
+ (id)__unurl;
+ (id)resourceValuesForKeys:(id)a0 fromBookmarkData:(id)a1;
+ (BOOL)writeBookmarkData:(id)a0 toURL:(id)a1 options:(unsigned long long)a2 error:(id *)a3;
+ (id)bookmarkDataWithContentsOfURL:(id)a0 error:(id *)a1;

- (id)fmipURL;
- (id)fmfURL;
- (id)photosURL;
- (id)iTunesStoreURL;
- (id)keynoteLiveURL;
- (BOOL)conformsToOverridePatternWithKey:(id)a0;
- (id)iCloudSharingURL;
- (id)iWorkApplicationName;
- (id)keynoteLiveURL_noFragment;
- (id)iCloudEmailPrefsURL;
- (id)iWorkDocumentName;
- (id)iCloudSharingURL_noFragment;
- (id)mapsURL;
- (struct __CFURL { } *)_cfurl;
- (id)absoluteURL;
- (id)port;
- (id)host;
- (id)relativeString;
- (id)user;
- (id)parameterString;
- (id)initFileURLWithPath:(id)a0;
- (id)initByResolvingBookmarkData:(id)a0 options:(unsigned long long)a1 relativeToURL:(id)a2 bookmarkDataIsStale:(BOOL *)a3 error:(id *)a4;
- (id)initFileURLWithFileSystemRepresentation:(const char *)a0 isDirectory:(BOOL)a1 relativeToURL:(id)a2;
- (id)URLByAppendingPathComponent:(id)a0 isDirectory:(BOOL)a1;
- (id)scheme;
- (id)initFileURLWithPath:(id)a0 isDirectory:(BOOL)a1;
- (const char *)fileSystemRepresentation;
- (id)baseURL;
- (id)absoluteString;
- (id)initFileURLWithPath:(id)a0 isDirectory:(BOOL)a1 relativeToURL:(id)a2;
- (BOOL)getFileSystemRepresentation:(char *)a0 maxLength:(unsigned long long)a1;
- (id)URLByAppendingPathExtension:(id)a0;
- (id)loadDataWithTypeIdentifier:(id)a0 forItemProviderCompletionHandler:(id /* block */)a1;
- (id)URLByAppendingPathComponent:(id)a0;
- (id)_initFileURLWithPath:(id)a0 cachingResourceValuesForKeys:(id)a1 error:(id *)a2;
- (id)query;
- (id)initAbsoluteURLWithDataRepresentation:(id)a0 relativeToURL:(id)a1;
- (id)path;
- (BOOL)hasDirectoryPath;
- (id)initWithString:(id)a0 relativeToURL:(id)a1;
- (id)init;
- (unsigned long long)_cfTypeID;
- (BOOL)checkPromisedItemIsReachableAndReturnError:(id *)a0;
- (id)_web_URLByRemovingUserAndQueryAndFragment_nowarn;
- (BOOL)isKindOfClass:(Class)a0;
- (id)standardizedURL;
- (id)initByResolvingAliasFileAtURL:(id)a0 options:(unsigned long long)a1 error:(id *)a2;
- (BOOL)getPromisedItemResourceValue:(out id *)a0 forKey:(id)a1 error:(out id *)a2;
- (id)promisedItemResourceValuesForKeys:(id)a0 error:(id *)a1;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)initWithDataRepresentation:(id)a0 relativeToURL:(id)a1;
- (oneway void)release;
- (id)_valueFromFaultDictionary:(id)a0 forKey:(id)a1;
- (BOOL)isMemberOfClass:(Class)a0;
- (id)_web_URLByRemovingLastPathComponent_nowarn;
- (BOOL)_isDeallocating;
- (void)dealloc;
- (id)initFileURLWithPath:(id)a0 relativeToURL:(id)a1;
- (BOOL)_tryRetain;
- (id)_web_suggestedFilenameWithMIMEType:(id)a0;
- (id)_URLByEscapingSpacesAndControlChars;
- (id)initWithString:(id)a0;
- (id)_web_URLByRemovingUserAndPath_nowarn;
- (BOOL)_isAbsolute;
- (id)_hostString;
- (id)_URLArchive;
- (unsigned long long)retainCount;
- (void)_freeClients;
- (id)relativePath;
- (void)_promiseExtensionRelease:(long long)a0;
- (id)initWithCoder:(id)a0;
- (long long)_promiseExtensionConsume;
- (void)_performWithPhysicalURL:(id /* block */)a0;
- (id)initWithScheme:(id)a0 host:(id)a1 path:(id)a2;
- (struct __CFDictionary { } *)_clientsCreatingIfNecessary:(BOOL)a0;
- (id)_fixedUpSideFaultError:(id)a0;
- (BOOL)_web_isJavaScriptURL;
- (id)fragment;
- (id)retain;
- (id)_web_scriptIfJavaScriptURL;
- (id)resourceSpecifier;
- (BOOL)isEqual:(id)a0;
- (struct { id x0; id x1; id x2; id x3; long long x4; id x5; id x6; id x7; })_web_URLComponents;
- (id)dataRepresentation;
- (id)password;
- (void)encodeWithCoder:(id)a0;
- (BOOL)_isSafeFileForBackgroundUpload:(int)a0 withToken:(struct { unsigned int x0[8]; })a1;
- (BOOL)_isSafeDirectoryForDownloads:(int)a0 withToken:(struct { unsigned int x0[8]; })a1;
- (BOOL)_isSafeFileForBackgroundUploadForMe;
- (BOOL)isFileReferenceURL;
- (id)resourceValuesForKeys:(id)a0 error:(id *)a1;
- (id)bookmarkDataWithOptions:(unsigned long long)a0 includingResourceValuesForKeys:(id)a1 relativeToURL:(id)a2 error:(id *)a3;
- (BOOL)setResourceValues:(id)a0 error:(id *)a1;
- (id)fileReferenceURL;
- (void)stopAccessingSecurityScopedResource;
- (BOOL)startAccessingSecurityScopedResource;
- (BOOL)getResourceValue:(out id *)a0 forKey:(id)a1 error:(out id *)a2;
- (BOOL)setResourceValue:(id)a0 forKey:(id)a1 error:(id *)a2;
- (void)removeAllCachedResourceValues;
- (BOOL)checkResourceIsReachableAndReturnError:(id *)a0;
- (void)removeCachedResourceValueForKey:(id)a0;
- (void)setTemporaryResourceValue:(id)a0 forKey:(id)a1;

@end
