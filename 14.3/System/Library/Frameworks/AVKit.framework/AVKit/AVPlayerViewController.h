@class UIViewController, AVPlayerViewControllerCustomControlsView, AVFullScreenViewController, AVContentOverlayView, NSDictionary, AVSecondScreenConnection, UIPopoverPresentationController, NSString, AVPictureInPictureController, AVPlayerView, AVPlayerController, AVPlayerViewControllerContentView, NSMutableDictionary, NSValue, NSArray, AVPlayer, __AVPlayerLayerView, AVObservationController, AVBehaviorStorage, UIView, UIHoverGestureRecognizer, AVPlaybackControlsController, AVTransitionController, AVPlayerControllerVolumeAnimator, AVPresentationContext, NSNumber, UIWindow;
@protocol AVPlayerViewControllerContentTransitioning_NewsOnly, AVPlayerViewControllerDelegate;

@interface AVPlayerViewController : UIViewController <AVPictureInPictureControllerDelegate, UIGestureRecognizerDelegate, UIPopoverPresentationControllerDelegate, AVFullScreenViewControllerDelegate, AVTransitionControllerDelegate, AVPictureInPictureContentSource, AVContentOverlayViewDelegate, AVPlayerControllerDelegate, AVPlaybackControlsViewVisibilityDelegate> {
    BOOL _playerShouldAutoplay;
    BOOL _showsPlaybackControls;
    BOOL _requiresLinearPlayback;
    long long _videoGravity;
    BOOL _allowsPictureInPicturePlayback;
    BOOL _hasClientSetVideoGravity;
    BOOL _canShowPictureInPictureButton;
    NSDictionary *_pixelBufferAttributes;
    AVSecondScreenConnection *_secondScreenConnection;
    AVPictureInPictureController *_pictureInPictureController;
    UIPopoverPresentationController *_mediaSelectionPopoverPresentationController;
    AVTransitionController *_transitionController;
    AVPlaybackControlsController *_playbackControlsController;
    AVPlayerView *_playerViewControllerView;
    NSValue *_overrideLayoutMarginsWhenEmbeddedInline;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _overrideTransformForProminentPlayButton;
    BOOL _canToggleVideoGravityWhenEmbeddedInline;
    BOOL _playbackControlsShouldControlSystemVolume;
}

@property (readonly, nonatomic) AVPlaybackControlsController *playbackControlsController;
@property (readonly, nonatomic) AVTransitionController *_transitionController;
@property (nonatomic) BOOL canShowPictureInPictureButton;
@property (readonly, nonatomic) BOOL hasCustomPlaybackControls;
@property (readonly, nonatomic) BOOL canControlPlayback;
@property (readonly, nonatomic, getter=isAudioOnlyContent) BOOL audioOnlyContent;
@property (readonly, weak, nonatomic) UIViewController *fullScreenViewController;
@property (readonly, nonatomic) AVPlayerViewControllerContentView *contentView;
@property (readonly, nonatomic, getter=isPresentingFullScreenFromInline) BOOL presentingFullScreenFromInline;
@property (readonly, nonatomic, getter=isPresentedFullScreen) BOOL presentedFullScreen;
@property (readonly, nonatomic) BOOL hasActiveTransition;
@property (readonly, nonatomic) AVPresentationContext *presentationContext;
@property (readonly, nonatomic) UIView *iAdPrerollView;
@property (nonatomic, setter=_setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:) BOOL _inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused;
@property (nonatomic) struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } overrideTransformForProminentPlayButton;
@property (nonatomic) BOOL canToggleVideoGravityWhenEmbeddedInline;
@property (nonatomic) BOOL showsExitFullScreenButton;
@property (readonly, nonatomic, getter=isPictureInPicturePossible) BOOL pictureInPicturePossible;
@property (nonatomic) BOOL playbackControlsShouldControlSystemVolume;
@property (readonly, nonatomic, getter=isPictureInPictureSuspended) BOOL pictureInPictureSuspended;
@property (readonly, nonatomic) BOOL pictureInPictureWasStartedWhenEnteringBackground;
@property (nonatomic) long long preferredUnobscuredArea;
@property (nonatomic) BOOL entersFullScreenWhenTapped;
@property (readonly, nonatomic) long long activeContentTransitionType;
@property (readonly, nonatomic, getter=isContentTransitionInteractive) BOOL contentTransitionInteractive;
@property (readonly, nonatomic) AVPlayer *contentTransitioningPlayer;
@property (readonly, nonatomic) UIView *contentTransitioningOverlayView;
@property (weak, nonatomic) id<AVPlayerViewControllerContentTransitioning_NewsOnly> contentTransitioningDelegate;
@property (nonatomic, getter=isStartNextContentTransitionButtonEnabled) BOOL startNextContentTransitionButtonEnabled;
@property (nonatomic, getter=isStartPreviousContentTransitionButtonEnabled) BOOL startPreviousContentTransitionButtonEnabled;
@property (retain, nonatomic) UIView *customContentTransitioningInfoPanel;
@property (readonly, nonatomic) NSArray *behaviors;
@property (readonly, nonatomic) AVContentOverlayView *_actualContentOverlayView;
@property (retain, nonatomic) NSNumber *_defaultPlaybackRateStorage;
@property (readonly, nonatomic) AVFullScreenViewController *fullScreenViewController;
@property (nonatomic) BOOL shouldUseNetworkingResourcesForLiveStreamingWhilePaused;
@property (copy, nonatomic) id /* block */ finishPreparingForInteractiveDismissalHandler;
@property (copy, nonatomic) id /* block */ pendingRestoreUserInterfaceForPictureInPictureStopHandler;
@property (copy, nonatomic) id /* block */ interactiveDismissalCompletionHandler;
@property (readonly, nonatomic) AVObservationController *_observationController;
@property (readonly, nonatomic) AVBehaviorStorage *_behaviorStorage;
@property (readonly, nonatomic) NSMutableDictionary *_targetVideoGravitiesForLayoutClass;
@property (nonatomic) BOOL _hasBegunObservation;
@property (nonatomic, setter=_setNumberOfTrackedUserInteractions:) long long _numberOfTrackedUserInteractions;
@property (retain, nonatomic) UIHoverGestureRecognizer *hoverGestureRecognizer;
@property (readonly, nonatomic) NSMutableDictionary *_localizedDiscoverabilityTitleForKeyCommandLocalizationKey;
@property (nonatomic) unsigned long long overrideRouteSharingPolicy;
@property (nonatomic) struct CGSize { double width; double height; } secondScreenConnectionDisplaySize;
@property (retain, nonatomic) AVPlayerControllerVolumeAnimator *volumeAnimator;
@property (retain, nonatomic) __AVPlayerLayerView *playerLayerView;
@property (nonatomic, getter=isReadyForDisplay) BOOL readyForDisplay;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } videoBounds;
@property (nonatomic) BOOL hasPerformedInitialSetup;
@property (nonatomic) BOOL wasInitializedUsingWebKitSPI;
@property (copy, nonatomic) NSString *overrideRoutingContextUID;
@property (nonatomic) BOOL requiresImmediateAssetInspection;
@property (retain, nonatomic) AVPlayerController *playerController;
@property (nonatomic) BOOL canHidePlaybackControls;
@property (nonatomic) BOOL allowsEnteringFullScreen;
@property (nonatomic) BOOL showsMinimalPlaybackControlsWhenEmbeddedInline;
@property (nonatomic) BOOL canPausePlaybackWhenExitingFullScreen;
@property (readonly, nonatomic) AVPlayerViewControllerCustomControlsView *customControlsView;
@property (nonatomic) BOOL playbackControlsIncludeTransportControls;
@property (nonatomic) BOOL playbackControlsIncludeDisplayModeControls;
@property (nonatomic) BOOL playbackControlsIncludeVolumeControls;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } videoDisplaySize;
@property (readonly, nonatomic) double videoDisplayScale;
@property (nonatomic) BOOL volumeControlsCanShowSlider;
@property (readonly, nonatomic) UIViewController *viewControllerForFullScreenPresentation;
@property (copy, nonatomic) NSArray *customControlItems;
@property (copy, nonatomic) NSString *overrideParentApplicationDisplayIdentifier;
@property (nonatomic) double defaultPlaybackRate;
@property (nonatomic) BOOL canIncludePlaybackControlsWhenInline;
@property (retain, nonatomic) NSValue *overrideLayoutMarginsWhenEmbeddedInline;
@property (readonly, nonatomic, getter=isPictureInPictureActive) BOOL pictureInPictureActive;
@property (copy, nonatomic) id /* block */ playButtonHandlerForLazyPlayerLoading;
@property (retain, nonatomic) AVPlayer *player;
@property (nonatomic) BOOL showsPlaybackControls;
@property (nonatomic) BOOL showsTimecodes;
@property (copy, nonatomic) NSString *videoGravity;
@property (readonly, nonatomic) UIView *contentOverlayView;
@property (nonatomic) BOOL allowsPictureInPicturePlayback;
@property (nonatomic) BOOL canStartPictureInPictureAutomaticallyFromInline;
@property (nonatomic) BOOL updatesNowPlayingInfoCenter;
@property (nonatomic) BOOL entersFullScreenWhenPlaybackBegins;
@property (nonatomic) BOOL exitsFullScreenWhenPlaybackEnds;
@property (nonatomic) BOOL requiresLinearPlayback;
@property (copy, nonatomic) NSDictionary *pixelBufferAttributes;
@property (weak, nonatomic) id<AVPlayerViewControllerDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } avkit_videoRectInWindow;
@property (readonly, nonatomic) BOOL avkit_isVisible;
@property (readonly, nonatomic) UIWindow *avkit_window;

+ (id)keyPathsForValuesAffectingVideoGravity;
+ (id)keyPathsForValuesAffectingPictureInPicturePossible;
+ (id)keyPathsForValuesAffectingPictureInPictureActive;
+ (id)keyPathsForValuesAffectingPictureInPictureSuspended;
+ (id)keyPathsForValuesAffectingPictureInPictureWasStartedWhenEnteringBackground;
+ (id)keyPathsForValuesAffectingVideoDisplaySize;
+ (id)keyPathsForValuesAffectingPixelBufferAttributes;

- (long long)preferredStatusBarStyle;
- (BOOL)prefersHomeIndicatorAutoHidden;
- (long long)preferredInterfaceOrientationForPresentation;
- (BOOL)prefersStatusBarHidden;
- (long long)preferredWhitePointAdaptivityStyle;
- (BOOL)avkit_isEffectivelyFullScreen;
- (void)setView:(id)a0;
- (id)_presentationControllerForPresentedController:(id)a0 presentingController:(id)a1 sourceController:(id)a2;
- (BOOL)gestureRecognizer:(id)a0 shouldReceiveTouch:(id)a1;
- (id)keyCommands;
- (void).cxx_destruct;
- (void)dealloc;
- (void)showFullScreenPresentationFromView:(id)a0 completion:(id /* block */)a1;
- (void)popoverPresentationControllerDidDismissPopover:(id)a0;
- (void)loadView;
- (void)playbackControlsViewNeedsUpdateStatusBarAppearance:(id)a0;
- (BOOL)playerControllerCanRestorePlaybackRateAfterAudioSessionDeactivation:(id)a0;
- (void)playbackControlsView:(id)a0 animateAlongsideVisibilityAnimationsWithAnimationCoordinator:(id)a1 appearingViews:(id)a2 disappearingViews:(id)a3;
- (void)contentOverlayViewDidAddOrRemoveSubview:(id)a0;
- (void)transitionController:(id)a0 willBeginPresentingViewController:(id)a1;
- (id)interactiveContentOverlayView;
- (void)transitionController:(id)a0 willBeginDismissingViewController:(id)a1;
- (id)transitionController:(id)a0 targetViewForDismissingViewController:(id)a1;
- (BOOL)transitionController:(id)a0 gestureRecognizer:(id)a1 shouldReceiveTouch:(id)a2;
- (id)transitionControllerPresentedViewBackgroundColor:(id)a0;
- (void)updateVideoBounds;
- (id)transitionControllerBackgroundViewBackgroundColor:(id)a0;
- (BOOL)transitionControllerCanBeginInteractiveDismissalTransition:(id)a0;
- (BOOL)transitionControllerCanBeginInteractivePresentationTransition:(id)a0;
- (void)transitionControllerBeginInteractivePresentationTransition:(id)a0;
- (void)transitionControllerBeginInteractiveDismissalTransition:(id)a0;
- (void)transitionController:(id)a0 prepareForFinishingInteractiveTransition:(id /* block */)a1;
- (void)transitionController:(id)a0 transitionWillComplete:(BOOL)a1;
- (void)transitionController:(id)a0 animationProgressDidChange:(float)a1;
- (void)fullScreenViewControllerWillBeginFullScreenPresentation:(id)a0;
- (void)fullScreenViewControllerWillEndFullScreenPresentation:(id)a0;
- (id)viewForFullScreenViewController:(id)a0;
- (id)playbackContainerViewForFullScreenViewController:(id)a0;
- (id)keyCommandResponderForFullScreenViewController:(id)a0;
- (void)fullScreenViewController:(id)a0 viewWillTransitionToSize:(struct CGSize { double x0; double x1; })a1 coordinator:(id)a2;
- (BOOL)prefersStatusBarHiddenForFullScreenViewController:(id)a0;
- (long long)preferredStatusStyleForFullScreenViewController:(id)a0;
- (void)pictureInPictureControllerWillStartPictureInPicture:(id)a0;
- (void)pictureInPictureControllerDidStartPictureInPicture:(id)a0;
- (void)pictureInPictureController:(id)a0 failedToStartPictureInPictureWithError:(id)a1;
- (void)pictureInPictureControllerWillStopPictureInPicture:(id)a0;
- (void)pictureInPictureControllerDidStopPictureInPicture:(id)a0;
- (void)pictureInPictureController:(id)a0 restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:(id /* block */)a1;
- (BOOL)isPictureInPictureActive;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (BOOL)playbackControlsIncludeVolumeControlsControls;
- (void)performInitialSetup;
- (void)flashPlaybackControlsWithDuration:(double)a0;
- (id)_activeViewControllerForContentView;
- (void)_ensureBehaviorStorage;
- (void)performInitialSetupIfNeededAndPossible;
- (void)_handleExitFullScreenKeyCommand:(id)a0;
- (void)_handlePlayPauseKeyCommand:(id)a0;
- (void)_handleSkipBack15SecondsKeyCommand:(id)a0;
- (void)_handleSkipAhead15SecondsKeyCommand:(id)a0;
- (void)_handleShowNextFrameKeyCommand:(id)a0;
- (void)_handleGoToBeginningKeyCommand:(id)a0;
- (void)_handleShowPreviousFrameKeyCommand:(id)a0;
- (void)_handleVolumeUpKeyPressedCommand:(id)a0;
- (void)_handleVolumeUpKeyReleasedCommand:(id)a0;
- (void)_handleVolumeDownKeyPressedCommand:(id)a0;
- (void)_handleVolumeDownKeyReleasedCommand:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)_handleRewindKeyPressedCommand:(id)a0;
- (void)_handleRewindKeyReleasedCommand:(id)a0;
- (void)_handleFastForwardKeyPressedCommand:(id)a0;
- (void)_handleFastForwardKeyReleasedCommand:(id)a0;
- (BOOL)_isUnsupportedContent;
- (BOOL)_requiresCustomPresentationController;
- (void)_updateUnsupportedContentIndicatorView;
- (void)_updateAudioOnlyIndicatorView;
- (void)_updateExternalPlaybackIndicatorView;
- (void)_updatePlaybackControlsController;
- (BOOL)_shouldShowPictureInPictureButton;
- (void)_handleDoubleTapGesture:(id)a0;
- (void)_handleSingleTapGesture:(id)a0;
- (void)_handleDoubleDoubleTapGesture:(id)a0;
- (void)_handleUserInteractionObservationRecognizer:(id)a0;
- (void)_beginTrackingUserInteraction;
- (void)_endTrackingUserInteraction;
- (BOOL)_isTrackingUserInteraction;
- (BOOL)_isTrackingUserInteractionWithInteractiveView;
- (void)_mediaSelectionDoneButtonTapped:(id)a0;
- (void)_addObservers;
- (void)startPictureInPicture;
- (void)_notifyOfMetricsCollectionEvent:(long long)a0;
- (BOOL)_delegateRespondsTo:(SEL)a0;
- (void)_contentViewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (void)_loadObservationControllerIfNeeded;
- (void)_updateContentOverlayViewSuperview;
- (id)_transitionControllerIfLoaded;
- (id)_avkitPreferredTransitioningDelegate;
- (BOOL)_isDescendantOfRootViewController;
- (void)_transitionFromFullScreenWithReason:(long long)a0 animated:(BOOL)a1 completionHandler:(id /* block */)a2;
- (BOOL)_canEnterFullScreen;
- (void)_transitionToFullScreenAnimated:(BOOL)a0 interactive:(BOOL)a1 completionHandler:(id /* block */)a2;
- (void)_transitionFromFullScreenAnimated:(BOOL)a0 completionHandler:(id /* block */)a1;
- (void)_transitionFromFullScreenAnimated:(BOOL)a0 interactive:(BOOL)a1 completionHandler:(id /* block */)a2;
- (BOOL)_isTransitioningToOrFromFullScreen;
- (BOOL)_modalPresentationStyleIsFullScreen;
- (void)didMoveToParentViewController:(id)a0;
- (void)_togglePictureInPicture;
- (void)prepareForPopoverPresentation:(id)a0;
- (BOOL)canBecomeFirstResponder;
- (void)flashAutoplayControls;
- (void)enterAutoplayPhase;
- (void)activeContentViewDidChange;
- (void)videoGravityButtonTapped:(id)a0;
- (void)mediaSelectionButtonTapped:(id)a0;
- (void)fullScreenButtonTapped:(id)a0;
- (void)exitAutoplayPhase;
- (void)pictureInPictureButtonTapped:(id)a0;
- (void)prepareForFinishingInteractiveTransition:(id /* block */)a0;
- (void)viewWillAppear:(BOOL)a0;
- (void)setVideoGravity:(id)a0 forLayoutClass:(unsigned long long)a1;
- (long long)_preferredModalPresentationStyle;
- (void)exitFullScreenWithCompletion:(id /* block */)a0;
- (void)enterFullScreenWithCompletion:(id /* block */)a0;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (void)addBehavior:(id)a0;
- (void)viewDidAppear:(BOOL)a0;
- (void)viewDidMoveToWindow:(id)a0 shouldAppearOrDisappear:(BOOL)a1;
- (void)viewDidDisappear:(BOOL)a0;
- (void)_handleHoverGestureRecognizer:(id)a0;
- (void)togglePlayback:(id)a0;
- (id)initWithNibName:(id)a0 bundle:(id)a1;
- (void)removeBehavior:(id)a0;
- (void)toggleMuted:(id)a0;
- (id)avkit_makePlayerControllerIfNeeded:(id)a0;
- (id)avkit_pictureInPictureViewController;
- (void)avkit_startRoutingVideoToPictureInPictureViewController:(id)a0;
- (void)avkit_stopRoutingVideoToPictureInPictureViewController:(id)a0;
- (void)avkit_beginReducingResourcesForPictureInPictureViewController:(id)a0 playerController:(id)a1;
- (void)avkit_endReducingResourcesForPictureInPictureViewController:(id)a0 playerController:(id)a1;
- (void)avkit_willBeginStoppingPictureInPictureForPictureInPictureViewController:(id)a0;
- (void)doneButtonTapped:(id)a0;
- (id)transitioningDelegate;
- (void)startContentTransition:(long long)a0;
- (void)setVideoGravityForTransitioningContent:(id)a0;
- (BOOL)modalPresentationCapturesStatusBarAppearance;
- (id)_newsWidgetPlayerBehaviorContext;
- (id)_newsWidgetPlayerLegacyBehavior;
- (void)stopPictureInPicture;
- (long long)adaptivePresentationStyleForPresentationController:(id)a0;
- (void)viewDidLoad;
- (void)encodeWithCoder:(id)a0;
- (id)initWithPlayerLayerView:(id)a0;
- (void)exitFullScreenAnimated:(BOOL)a0 completionHandler:(id /* block */)a1;
- (void)setWebKitOverrideRouteSharingPolicy:(unsigned long long)a0 routingContextUID:(id)a1;
- (void)enterFullScreenAnimated:(BOOL)a0 completionHandler:(id /* block */)a1;

@end
