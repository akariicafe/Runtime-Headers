@class WBSAllowedLegacyTLSHostManager, _SFDigitalHealthViewController, WKBackForwardListItem, SFBrowserDocumentTrackerInfo, _SFBrowserView, _SFSaveToFilesOperation, _SFBarManager, _SFCalendarEventDetector, UIPanGestureRecognizer, _SFSecIdentityPreferencesController, _SFNavigationBar, _SFPinnableBanner, WBSFluidProgressState, SFSafariViewControllerConfiguration, SFReaderEnabledWebViewController, NSError, _SFPageLoadErrorController, NSMutableArray, _SFPageFormatMenuController, _SFNavigationUtilitiesManager, SFReaderViewController, WBSAutoFillQuirksManager, NSTimer, _SFPerSitePreferencesVendor, _WKActivatedElementInfo, WBSTranslationContext, _SFNavigationBarItem, _SFMailContentProvider, _SFPrintController, _SFReloadOptionsController, _SFQuickLookDocumentController, _SFDynamicBarAnimator, _SFPageZoomPreferenceManager, _SFFluidProgressView, WBSFluidProgressController, NSArray, _SFTelephonyNavigationMitigationPolicy, _SFDownload, _SFActivityViewController, UIColor, WBSURLSpoofingMitigator, WKPreferences, NSString, _SFQuickLookDocumentWriter, UITapGestureRecognizer, _SFFindOnPageView, _SFQuickLookDocument, NSURL, _SFToolbar, SFBrowserPersonaAnalyticsHelper, WBSDigitalHealthManager, _WKUserInitiatedAction, _SFWebView, WKWebView, SFNanoDomainContainerView, WBSWellKnownURLResponseCodeReliabilityChecker, _SFSafariSharingExtensionController;
@protocol _SFBrowserContentViewControllerDelegate, _SFAppSuggestionBanner, SFReaderContext, _SFBrowserDocument;

@interface _SFBrowserContentViewController : UIViewController <SFBrowserViewDelegate, SFReaderEnabledWebViewControllerDelegate, SFReaderViewControllerDelegate, _SFBarManagerDelegate, _SFDownloadDelegate, _SFDynamicBarAnimatorDelegate, _SFFindOnPageViewDelegate, _SFMailContentProviderDataSource, _SFNavigationBarDelegate, _SFPageLoadErrorControllerDelegate, _SFPrintControllerDelegate, _SFSingleBookmarkNavigationControllerDelegate, UIGestureRecognizerDelegate, UIScrollViewDelegate, WBSFluidProgressControllerWindowDelegate, WBSFluidProgressStateSource, _SFAppSuggestionBannerDelegate, WBSDigitalHealthManagerDelegate, PKAddPassesViewControllerDelegate, _SFLinkPreviewHandler, WBSTranslationConsentAlertHelperDelegate, WBSTranslationContextDelegate, _SFActivityItemCustomizationDelegate, _SFActivityViewControllerDelegate, _SFQuickLookDocumentSource, _SFSaveToFilesOperationDelegate, _SFBrowserContentController, _SFBrowserDocument, _SFBrowserKeyCommandSafariViewControllerMethods> {
    WBSDigitalHealthManager *_cachedDigitalHealthManager;
    _SFDigitalHealthViewController *_digitalHealthViewController;
    NSURL *_currentUsageTrackingURL;
    WKWebView *_previewWebView;
    NSTimer *_previewCloseTimer;
    _SFBrowserView *_browserView;
    SFReaderViewController *_readerViewController;
    BOOL _showingReader;
    WKBackForwardListItem *_lastBackFowardListItemOnWhichReaderWasActivated;
    unsigned long long _lastReaderDeactivationMode;
    _SFNavigationBar *_navigationBar;
    _SFToolbar *_bottomToolbar;
    _SFMailContentProvider *_cachedMailContentProvider;
    _WKUserInitiatedAction *_lastUserInitiatedAction;
    BOOL _canOpenDownloadForInitialLoad;
    unsigned long long _externalAppRedirectState;
    _SFBarManager *_barManager;
    SFNanoDomainContainerView *_nanoDomainContainerView;
    NSTimer *_updateContinuityTimer;
    _SFDynamicBarAnimator *_dynamicBarAnimator;
    BOOL _scrollViewIsDragging;
    unsigned long long _cachedMediaStateIcon;
    _SFNavigationBarItem *_navigationBarItem;
    WBSURLSpoofingMitigator *_URLSpoofingMitigator;
    WBSFluidProgressState *_fluidProgressState;
    WBSFluidProgressController *_fluidProgressController;
    _SFFluidProgressView *_cachedFluidProgressView;
    UITapGestureRecognizer *_showBarsFromBottomBarRecognizer;
    BOOL _pageScrollsWithBottomBar;
    BOOL _interfaceFillsScreen;
    BOOL _usesNarrowLayout;
    _SFPageLoadErrorController *_pageLoadErrorController;
    _SFCalendarEventDetector *_calendarEventDetector;
    _SFDownload *_activeDownload;
    BOOL _showingCrashBanner;
    double _crashBannerDraggingOffset;
    BOOL _showingPinnableBanner;
    double _pinnableBannerDraggingOffset;
    _SFPinnableBanner<_SFAppSuggestionBanner> *_pinnableBannerPendingFirstPaint;
    BOOL _shouldDismissReaderInReponseToSameDocumentNavigation;
    BOOL _EVOrganizationNameIsValid;
    NSString *_EVOrganizationName;
    BOOL _isShowingHTTPAuthenticationDialog;
    BOOL _isSuppressingPreviewProgressAnimation;
    _SFSafariSharingExtensionController *_sharingExtensionController;
    BOOL _didReceivePolicyForInitialLoad;
    long long _customPreferredStatusBarStyle;
    BOOL _isDisplayingTelephonyPrompt;
    _SFTelephonyNavigationMitigationPolicy *_telephonyNavigationPolicy;
    _SFPrintController *_printController;
    _SFSecIdentityPreferencesController *_secIdentityPreferencesController;
    _SFPerSitePreferencesVendor *_perSitePreferencesVendor;
    BOOL _wasLoadedWithContentBlockersEnabled;
    NSURL *_urlToReloadForcingContentBlockers;
    BOOL _enableContentBlockersWhenReloading;
    NSMutableArray *_webViewControllers;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _verticalScrollIndicatorBaseInsets;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _horizontalScrollIndicatorBaseInsets;
    BOOL _autoHidingHomeIndicatorPermitted;
    BOOL _prefersHomeIndicatorAutoHidden;
    BOOL _shouldAutoHideHomeIndicator;
    NSURL *_originalRequestURL;
    _SFQuickLookDocument *_quickLookDocument;
    _SFQuickLookDocumentController *_quickLookDocumentController;
    _SFQuickLookDocumentWriter *_quickLookDocumentWriter;
    _SFDownload *_downloadToShowInQuickLook;
    NSString *_suggestedFilenameForNextCommit;
    BOOL _quickLookDocumentCheckCompleted;
    _SFSaveToFilesOperation *_saveToFilesOperation;
    _SFActivityViewController *_activityViewController;
    _SFPageFormatMenuController *_pageFormatMenuController;
    BOOL _keepBarsMinimized;
    UIPanGestureRecognizer *_hideNavigationBarGestureRecognizer;
    NSError *_lastLoadErrorForFormatMenu;
    long long _concurrentNavigationActionPolicyDecisions;
    BOOL _loadWasUserDriven;
    BOOL _webViewIsInFullScreen;
    id /* block */ _pendingNavigationActionDueToExternalSchemePromptHandler;
    BOOL _gestureRequiresGoingBackToOwnerWebView;
    BOOL _shouldReflectTranslationAsFluidProgress;
    WKBackForwardListItem *_backForwardListItemForCurrentAppLinkBannerCheck;
    WBSAllowedLegacyTLSHostManager *_cachedLegacyTLSHostManager;
    WBSAutoFillQuirksManager *_autoFillQuirksManager;
    WBSWellKnownURLResponseCodeReliabilityChecker *_wellKnownURLResponseCodeReliabilityChecker;
    struct CGSize { double width; double height; } _lastSizeUsedForBrowserViewLayout;
    unsigned long long _sizeTransitionCount;
}

@property (readonly, nonatomic) _SFBrowserView *browserView;
@property (readonly, nonatomic) SFReaderEnabledWebViewController *rootWebViewController;
@property (readonly, nonatomic) SFReaderEnabledWebViewController *webViewController;
@property (readonly, nonatomic) WKPreferences *wkPreferences;
@property (copy, nonatomic) NSArray *linkActions;
@property (retain, nonatomic) _WKActivatedElementInfo *activatedElementInfo;
@property (nonatomic) BOOL remoteSwipeGestureEnabled;
@property (retain, nonatomic) UIColor *preferredBarTintColor;
@property (retain, nonatomic) UIColor *preferredControlTintColor;
@property (nonatomic) long long hostAppModalPresentationStyle;
@property (nonatomic) long long dismissButtonStyle;
@property (copy, nonatomic) SFSafariViewControllerConfiguration *configuration;
@property (nonatomic) BOOL webViewLayoutUnderlapsStatusBar;
@property (readonly, nonatomic) BOOL canPrint;
@property (readonly, nonatomic) BOOL isBlockedByScreenTime;
@property (readonly, nonatomic) NSString *bundleIdentifierForProfileInstallation;
@property (readonly, nonatomic) BOOL _usesScrollToTopView;
@property (readonly, nonatomic) BOOL _isUsedForAuthentication;
@property (readonly, nonatomic) unsigned long long _persona;
@property (readonly, nonatomic) SFBrowserPersonaAnalyticsHelper *_analyticsHelper;
@property (readonly, nonatomic) NSString *_hostAppBundleId;
@property (readonly, nonatomic) BOOL _shouldReloadImmediatelyAfterPageLoadError;
@property (nonatomic) long long safariDataSharingMode;
@property (readonly, nonatomic) BOOL didNotifyInitialLoadFinish;
@property (readonly, nonatomic) BOOL isShowingErrorPage;
@property (nonatomic) BOOL viewDidAppearInHostApp;
@property (retain, nonatomic) _SFNavigationUtilitiesManager *_navigationUtilitiesManager;
@property (retain, nonatomic) WBSTranslationContext *translationContext;
@property (weak, nonatomic) id<_SFBrowserContentViewControllerDelegate> delegate;
@property (nonatomic) long long displayMode;
@property (retain, nonatomic) _SFReloadOptionsController *reloadOptionsController;
@property (retain, nonatomic) _SFFindOnPageView *findOnPageView;
@property (readonly, nonatomic) WKWebView *webView;
@property (nonatomic) BOOL storeBannersAreDisabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) id<_SFBrowserDocument> activeDocument;
@property (readonly, nonatomic, getter=isShowingReader) BOOL showingReader;
@property (nonatomic) BOOL keepBarsMinimized;
@property (readonly, nonatomic) _SFPerSitePreferencesVendor *perSitePreferencesVendor;
@property (readonly, nonatomic) _SFPageZoomPreferenceManager *pageZoomManager;
@property (readonly, nonatomic) BOOL supportsPrivacyReport;
@property (readonly, nonatomic) _SFWebView *activeWebView;
@property (readonly, nonatomic) id<SFReaderContext> readerContext;
@property (readonly, nonatomic) NSURL *URLForPerSitePreferences;
@property (readonly, nonatomic) BOOL wasLoadedWithContentBlockersEnabled;
@property (readonly, nonatomic) BOOL canHideToolbar;
@property (readonly, nonatomic) SFBrowserDocumentTrackerInfo *trackerInfo;

+ (void)createDefaultWebsiteDataStore;

- (long long)preferredStatusBarStyle;
- (BOOL)prefersHomeIndicatorAutoHidden;
- (BOOL)canPerformAction:(SEL)a0 withSender:(id)a1;
- (void)increaseSize:(id)a0;
- (BOOL)becomeFirstResponder;
- (BOOL)gestureRecognizer:(id)a0 shouldBeRequiredToFailByGestureRecognizer:(id)a1;
- (BOOL)gestureRecognizer:(id)a0 shouldReceiveTouch:(id)a1;
- (BOOL)scrollViewShouldScrollToTop:(id)a0;
- (double)estimatedProgress;
- (id)keyCommands;
- (id)webViewForMailContentProvider:(id)a0;
- (BOOL)readerViewIsVisibleForMailContentProvider:(id)a0;
- (id)readerControllerForMailContentProvider:(id)a0;
- (id)dataForQuickLookDocument:(id)a0;
- (id)suggestedFileNameForQuickLookDocument:(id)a0;
- (id)suggestedFileExtensionForQuickLookDocument:(id)a0;
- (void).cxx_destruct;
- (void)webViewController:(id)a0 webViewDidClose:(id)a1;
- (void)webViewController:(id)a0 createWebViewWithConfiguration:(id)a1 forNavigationAction:(id)a2 completionHandler:(id /* block */)a3;
- (void)webViewController:(id)a0 contextMenuConfigurationForElement:(id)a1 completionHandler:(id /* block */)a2;
- (BOOL)_isSecure;
- (id)progressState;
- (void)scrollViewDidScroll:(id)a0;
- (void)_updateRemoteSwipeGestureState;
- (id)processPoolConfiguration;
- (void)_updateScrollIndicatorVerticalInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a0 horizontalInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a1;
- (void)addBookmarkNavController:(id)a0 didFinishWithResult:(BOOL)a1 bookmark:(id)a2;
- (BOOL)addBookmarkNavControllerCanSaveBookmarkChanges:(id)a0;
- (void)_setUpToolbar;
- (void)barManager:(id)a0 didReceiveTapForBarItem:(long long)a1;
- (id)printControllerForContentProvider:(id)a0;
- (void)fluidProgressRocketAnimationDidComplete;
- (id)currentFluidProgressStateSource;
- (BOOL)createFluidProgressState;
- (void)translationContextReloadPageInOriginalLanguage:(id)a0;
- (void)toggleShowingReaderForUserAction;
- (void)_goBack;
- (void)downloadDidFail:(id)a0;
- (void)dealloc;
- (void)_updateWebKitExperimentalFeatures;
- (void)_perSiteAutomaticReaderActivationPreferenceDidChange:(id)a0;
- (void)_perSitePageZoomPreferenceDidChange:(id)a0;
- (void)_invalidateWebViewControllers;
- (void)_showBarsFromBottomBarTap:(id)a0;
- (void)_updateTrackerProtectionPreferences;
- (void)_setUpTopBarAndBottomBar;
- (void)_updateStatusBarStyleForced:(BOOL)a0;
- (BOOL)_canShowPageFormatMenu;
- (BOOL)_canSaveWebpage;
- (void)viewDidLayoutSubviews;
- (void)addPassesViewControllerDidFinish:(id)a0;
- (void)reloadEnablingContentBlockers:(BOOL)a0;
- (void)perSiteSettingsUIPresentSettings;
- (void)_setUpWebViewControllerIfNeeded;
- (void)_openCurrentURLInSafari;
- (void)_showBars;
- (void)setMediaStateIcon:(unsigned long long)a0;
- (void)scrollViewDidScrollToTop:(id)a0;
- (void)dynamicBarAnimatorWillLeaveSteadyState:(id)a0;
- (void)presentViewController:(id)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (void)loadView;
- (BOOL)_redirectToHostAppWithExpectedCallbackSchemeIfPossible:(id)a0;
- (id)_applicationPayloadForOpeningInSafari;
- (void)webViewController:(id)a0 didReceiveServerRedirectForProvisionalNavigation:(id)a1;
- (void)webViewControllerDidCancelClientRedirect:(id)a0;
- (void)webViewController:(id)a0 willPerformClientRedirectToURL:(id)a1 withDelay:(double)a2;
- (void)webViewController:(id)a0 didStartProvisionalNavigation:(id)a1;
- (unsigned long long)mediaStateIcon;
- (void)webViewController:(id)a0 didFinishDocumentLoadForNavigation:(id)a1;
- (void)webViewController:(id)a0 didChangeFullScreen:(BOOL)a1;
- (void)webViewControllerWebProcessDidCrash:(id)a0;
- (void)_updateMaxVisibleHeightPercentageUserDriven:(BOOL)a0;
- (void)_didResolveDestinationURL:(id)a0 pendingAppLinkCheck:(BOOL)a1;
- (void)_getSafariDataSharingModeWithCompletion:(id /* block */)a0;
- (void)_fetchActivityViewControllerInfoForURL:(id)a0 title:(id)a1 completion:(id /* block */)a2;
- (BOOL)_notifyInitialLoadDidFinish:(BOOL)a0;
- (BOOL)_redirectToHostAppWithNavigationResult:(id)a0 options:(id)a1;
- (id)translationConsentAlertHelperViewControllerToPresentDetailsFrom:(id)a0;
- (BOOL)translationContextIsUsingPrivateBrowsing:(id)a0;
- (void)translationContext:(id)a0 urlForCurrentPageWithCompletionHandler:(id /* block */)a1;
- (void)translationContext:(id)a0 showFirstTimeConsentAlertWithCompletionHandler:(id /* block */)a1;
- (void)translationContext:(id)a0 showFeedbackConsentAlertWithCompletionHandler:(id /* block */)a1;
- (id)safariApplicationVersionForTranslationContext:(id)a0;
- (void)translationContext:(id)a0 showTranslationErrorAlertWithTitle:(id)a1 message:(id)a2;
- (id)quickLookDocument;
- (void)beginDigitalHealthTracking;
- (void)stopDigitalHealthTracking;
- (void)_updateUserActivity;
- (void)webViewController:(id)a0 contextMenuWillPresentForElement:(id)a1;
- (void)webViewController:(id)a0 contextMenuForElement:(id)a1 willCommitWithAnimator:(id)a2;
- (void)webViewController:(id)a0 contextMenuDidEndForElement:(id)a1;
- (void)webViewController:(id)a0 printFrame:(id)a1;
- (void)webViewControllerDidChangeSafeAreaShouldAffectObscuredInsets:(id)a0;
- (void)webViewController:(id)a0 mediaCaptureStateDidChange:(unsigned long long)a1;
- (long long)webViewController:(id)a0 presentationPolicyForDialog:(id)a1;
- (BOOL)printControllerCanPresentPrintUI:(id)a0;
- (void)printController:(id)a0 didCreatePrintInfo:(id)a1;
- (id)presentingViewControllerForPrintController:(id)a0;
- (void)webViewControllerDidChangeLoadingState:(id)a0;
- (void)webViewControllerDidFirstVisuallyNonEmptyLayout:(id)a0;
- (void)webViewController:(id)a0 decidePolicyForNavigationAction:(id)a1 decisionHandler:(id /* block */)a2;
- (void)_setWebView:(id)a0;
- (void)translationContext:(id)a0 shouldReportProgressInUnifiedField:(BOOL)a1;
- (void)translationContextNeedsScrollHeightVisibilityUpdate:(id)a0;
- (void)webViewControllerWillPresentJavaScriptDialog:(id)a0;
- (void)webViewControllerDidChangeSafeAreaInsets:(id)a0;
- (id)webViewController:(id)a0 didStartDownload:(id)a1;
- (BOOL)webViewControllerCanPromptForAccountSecurityRecommendation:(id)a0;
- (void)webViewController:(id)a0 didFailProvisionalNavigation:(id)a1 withError:(id)a2;
- (void)webViewController:(id)a0 didFinishNavigation:(id)a1;
- (void)webViewControllerDidChangeURL:(id)a0;
- (id)websiteDataStoreConfiguration;
- (id)newProcessPool;
- (void)dynamicBarAnimatorOutputsDidChange:(id)a0;
- (void)dynamicBarAnimatorWillEnterSteadyState:(id)a0;
- (void)_setUpReloadOptionsControllerIfNeeded;
- (void)_setUpCalendarEventDetectorIfNeeded;
- (void)_setUpFindOnPageViewIfNeeded;
- (void)_setUpAnalyticsPersona;
- (void)_cleanUpWebViewController:(id)a0;
- (BOOL)_isPreviewing;
- (void)_setSuppressingPreviewProgressAnimation:(BOOL)a0;
- (void)_layOutBrowserViewForSizeTransition;
- (void)_didCompleteViewSizeTransition;
- (BOOL)isSafariRestricted;
- (void)_pushWebViewController:(id)a0;
- (void)_popWebViewController;
- (BOOL)_dismissTransientUIAnimated:(BOOL)a0;
- (BOOL)_shouldGoBackToOwnerWebView;
- (void)_willBeginUserInitiatedNavigation;
- (void)_updateBarTheme;
- (void)_didCompleteScrolling;
- (void)_updateNavigationBar;
- (void)scrollViewDidEndDecelerating:(id)a0;
- (void)stopLoading;
- (void)contextMenuConfigurationForReaderViewController:(id)a0 element:(id)a1 completionHandler:(id /* block */)a2;
- (void)readerViewController:(id)a0 contextMenuWillPresentForElement:(id)a1;
- (void)readerViewController:(id)a0 contextMenuForElement:(id)a1 willCommitWithAnimator:(id)a2;
- (void)readerViewController:(id)a0 contextMenuDidEndForElement:(id)a1;
- (void)pageLoadErrorController:(id)a0 setAllowsSpecificHTTPSCertificate:(id)a1 forHost:(id)a2;
- (void)saveToFilesOperation:(id)a0 presentViewController:(id)a1;
- (void)saveToFilesOperation:(id)a0 didFinishWithSuccess:(BOOL)a1;
- (void)_hideNavigationBarGestureRecognized:(id)a0;
- (void)_updateDynamicBarGeometry;
- (void)_decideDataSharingModeIfNecessaryAndSetUpInterface;
- (void)_cancelPendingUpdateUserActivityTimer;
- (void)_updateInterfaceFillsScreen;
- (void)_updateUsesNarrowLayout;
- (void)_updateScrollToTopView;
- (void)_updateWebViewLayoutSize;
- (void)_updateWebViewShrinkToFit;
- (void)_updatePinnableBannerFrame;
- (void)_updateCurrentScrollViewInsets;
- (BOOL)_safeAreaShouldAffectWebViewObscuredInsets;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_effectiveWebViewSafeAreaInsets;
- (BOOL)_isSplitScreen;
- (BOOL)_canScrollToTopInView:(id)a0;
- (void)navigationBar:(id)a0 didCreateLeadingToolbar:(id)a1 trailingToolbar:(id)a2;
- (void)navigationBarMetricsDidChange:(id)a0;
- (void)navigationBarReloadButtonWasTapped:(id)a0;
- (void)navigationBarFormatMenuButtonStartedInteraction:(id)a0;
- (void)_keyboardWillHide:(id)a0;
- (id)webViewConfiguration;
- (void)_setCurrentWebViewController:(id)a0;
- (void)_initialLoadFinishedWithSuccess:(BOOL)a0;
- (void)_goBackToOwnerWebView;
- (void)visibilityWillChangeForFindOnPageView:(id)a0;
- (id)websiteDataStore;
- (double)_maximumHeightObscuredByBottomBar;
- (void)_scrollToTopFromScrollToTopView;
- (void)_updateHomeIndicatorAutoHideState;
- (BOOL)_effectiveBarCollapsingEnabled;
- (double)_offsetForDynamicBarAnimator;
- (void)_setShowingReader:(BOOL)a0 deactivationMode:(unsigned long long)a1 animated:(BOOL)a2;
- (BOOL)_readerViewControllerNeedsSetUp;
- (void)_updateUserActivitySoon;
- (void)_setUpReaderViewController;
- (id)_fallbackURLForWellKnownChangePasswordURL:(id)a0;
- (BOOL)isPageEligibileToShowNotSecureWarning;
- (void)didUpdateNavigationBarItem:(id)a0;
- (void)downloadDidStart:(id)a0;
- (void)didMoveToParentViewController:(id)a0;
- (id)presentingViewControllerForWebViewController:(id)a0;
- (void)webViewControllerDidChangeEstimatedProgress:(id)a0;
- (void)webViewControllerDidChangeHasOnlySecureContent:(id)a0;
- (void)webViewControllerWebProcessDidBecomeResponsive:(id)a0;
- (void)webViewControllerWebProcessDidBecomeUnresponsive:(id)a0;
- (void)webViewController:(id)a0 didCommitNavigation:(id)a1;
- (void)webViewController:(id)a0 didSameDocumentNavigation:(id)a1 ofType:(long long)a2;
- (void)webViewControllerDidFirstPaint:(id)a0;
- (id)webViewForFindOnPageView:(id)a0;
- (void)downloadDidReceiveResponse:(id)a0;
- (unsigned long long)browserPersonaForActivityViewController:(id)a0;
- (void)activityViewController:(id)a0 prepareActivity:(id)a1 completion:(id /* block */)a2;
- (void)customizationControllerCustomizationsDidChange:(id)a0;
- (void)dynamicBarAnimatorStateDidChange:(id)a0;
- (void)_updateUI;
- (void)_didLoadWebView;
- (void)_recordHostAppIdAndURLForTapToRadar:(id)a0;
- (void)policyDidChangeForDigitalHealthManager:(id)a0;
- (void)navigationBarReaderButtonWasTapped:(id)a0;
- (void)navigationBarStopLoadingButtonWasTapped:(id)a0;
- (void)compressedNavigationBarWasTapped:(id)a0;
- (void)navigationBarTranslateButtonWasTapped:(id)a0;
- (void)navigationBarFormatMenuButtonWasTapped:(id)a0;
- (void)navigationBarMediaStateMuteButtonWasTapped:(id)a0;
- (void)navigationBarCancelButtonWasTapped:(id)a0;
- (void)navigationBarDoneButtonWasTapped:(id)a0;
- (void)navigationBarFormatMenuButtonBecameUnavailable:(id)a0;
- (BOOL)canBecomeFirstResponder;
- (id)webViewForCustomizationController:(id)a0;
- (BOOL)isContentObscuredByDigitalHealthForCustomizationController:(id)a0;
- (BOOL)isDisplayingQuickLookDocumentForCustomizationController:(id)a0;
- (BOOL)isReaderAvailableForCustomizationController:(id)a0;
- (BOOL)isShowingReaderForCustomizationController:(id)a0;
- (id)pageLoadErrorControllerGetSecIdentityPreferencesController:(id)a0;
- (void)_updateBarItems;
- (void)_updatePreviewLoadingUI;
- (void)_setShowingCrashBanner:(BOOL)a0 animated:(BOOL)a1;
- (void)_updatePinnableBannerOffset;
- (void)_showCrashBanner:(id)a0 animated:(BOOL)a1;
- (void)_hideCrashBanner;
- (void)_updateCrashBannerOffset;
- (BOOL)_canTranslateWebpages;
- (void)setQuickLookDocumentForCurrentBackForwardListItem:(id)a0;
- (id)quickLookDocumentForCurrentBackForwardListItem;
- (void)_translationContextStateDidChange:(id)a0;
- (id)legacyTLSHostManager;
- (void)_setShowingPinnableBanner:(id)a0 animated:(BOOL)a1;
- (void)_hideReaderAnimated:(BOOL)a0 deactivationMode:(unsigned long long)a1;
- (void)_updatePageZoomWithPreference;
- (void)_showQuickLookDocumentView;
- (void)_hideQuickLookDocumentView;
- (void)_updateDigitalHealthTracking;
- (id)expectedOrCurrentURL;
- (void)_showReaderAnimated:(BOOL)a0;
- (id)_committedDomainForPreferences;
- (BOOL)_shouldAllowAutomaticReader;
- (id)navigationBarURLForSharing:(id)a0;
- (void)viewWillAppear:(BOOL)a0;
- (id)_currentWebView;
- (BOOL)pageLoadErrorControllerShouldHandleCertificateError:(id)a0;
- (BOOL)pageLoadErrorControllerShouldReloadAfterError:(id)a0;
- (void)pageLoadErrorController:(id)a0 loadFailedRequestAfterError:(id)a1;
- (void)pageLoadErrorControllerClosePage:(id)a0;
- (void)pageLoadErrorController:(id)a0 allowLegacyTLSConnectionForURL:(id)a1 navigateToURL:(id)a2;
- (void)linkPreviewHelper:(id)a0 commitPreviewViewControllerForAction:(long long)a1;
- (void)linkPreviewHelper:(id)a0 didProduceNavigationIntent:(id)a1 forAction:(long long)a2;
- (id)linkPreviewHelper:(id)a0 previewViewControllerForURL:(id)a1;
- (void)downloadDidFinish:(id)a0;
- (void)_cleanUpAfterRedirectToExternalApp;
- (void)_redirectToExternalNavigationResult:(id)a0 fromOriginalRequest:(id)a1 promptPolicy:(long long)a2 isMainFrame:(BOOL)a3 userAction:(id)a4;
- (void)_completeRedirectToExternalNavigationResult:(id)a0 fromOriginalRequest:(id)a1 dialogResult:(long long)a2;
- (void)_didDecideNavigationPolicy:(long long)a0 forNavigationAction:(id)a1;
- (void)loadRequest:(id)a0;
- (id)linkPreviewHelper:(id)a0 resultOfLoadingURL:(id)a1;
- (void)navigateBackKeyPressed;
- (void)navigateForwardKeyPressed;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (void)_translationAvailabilityDidChange:(id)a0;
- (void)_queueAlertForRedirectToExternalNavigationResult:(id)a0 fromOriginalRequest:(id)a1 isMainFrame:(BOOL)a2 promptPolicy:(long long)a3 userAction:(id)a4;
- (void)_internalWebViewController:(id)a0 decidePolicyForNavigationAction:(id)a1 decisionHandler:(id /* block */)a2;
- (id)resultOfLoadingRequest:(id)a0 inMainFrame:(BOOL)a1 disallowRedirectToExternalApps:(BOOL)a2;
- (void)scrollViewWillEndDragging:(id)a0 withVelocity:(struct CGPoint { double x0; double x1; })a1 targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)a2;
- (void)viewDidDisappear:(BOOL)a0;
- (BOOL)dynamicBarAnimator:(id)a0 canTransitionToState:(long long)a1 byDraggingWithOffset:(double)a2;
- (double)dynamicBarAnimator:(id)a0 minimumTopBarHeightForOffset:(double)a1;
- (void)_redirectToNewsIfNeededForRequest:(id)a0 isMainFrame:(BOOL)a1 userAction:(id)a2 decisionHandler:(id /* block */)a3;
- (void)_didDecideNavigationPolicy:(long long)a0 forNavigationResponse:(id)a1;
- (id)_quickLookDocumentForDownload:(id)a0;
- (void)_willPresentContextMenu;
- (void)dismissAppSuggestionBanner:(id)a0;
- (BOOL)shouldBlockAppSuggestionBanner:(id)a0;
- (void)setAppSuggestionBanner:(id)a0 isPinned:(BOOL)a1;
- (id)initWithNibName:(id)a0 bundle:(id)a1;
- (BOOL)pageLoadErrorControllerShouldPermanentlyAcceptCertificate:(id)a0;
- (void)pageLoadErrorController:(id)a0 presentViewController:(id)a1;
- (void)dismissSFSafariViewControllerKeyPressed;
- (void)reloadKeyPressed;
- (void)cancelKeyPressed;
- (void)findKeyPressed;
- (void)resetPageZoomLevelAndFontSize;
- (void)toggleReaderKeyPressed;
- (void)nextFindResultKeyPressed;
- (void)previousFindResultKeyPressed;
- (void)saveWebpageKeyPressed;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)decreaseSize:(id)a0;
- (void)saveWebpageAlternativeKeyPressed;
- (void)takeFindStringKeyPressed;
- (void)emailCurrentPage;
- (id)_openNewWebViewIfNeededWithConfiguration:(id)a0 forNavigationAction:(id)a1;
- (id)_contextMenuConfigurationForWebView:(id)a0 element:(id)a1;
- (void)_willCommitContextMenuForWebView:(id)a0 withAnimator:(id)a1;
- (void)_invalidatePreviewCloseTimer;
- (void)_closePreviewDocumentTimerFired:(id)a0;
- (void)updateBottombarOffset:(double)a0 topBarHeight:(double)a1;
- (double)_crashBannerDraggingOffsetForContentOffset:(struct CGPoint { double x0; double x1; })a0;
- (void)_reloadFromOrigin:(BOOL)a0;
- (BOOL)gestureRecognizerShouldBegin:(id)a0;
- (void)_dismiss;
- (void)linkPreviewHelper:(id)a0 redirectToExternalNavigationResult:(id)a1;
- (BOOL)linkPreviewHelper:(id)a0 supportsAction:(long long)a1 forURL:(id)a2;
- (void)reloadFromOriginKeyPressed;
- (void)_invalidateEVOrganizationName;
- (id)processPool;
- (id)overrideTraitCollectionForChildViewController:(id)a0;
- (id)_EVOrganizationName;
- (void)clearFluidProgressState;
- (BOOL)_canShowDownloadWithoutPrompting:(id)a0;
- (void)_showDownload:(id)a0;
- (void)_showPassBookControllerForPass:(id)a0;
- (void)_showGenericDownloadAlert;
- (BOOL)_showICSControllerForPath:(id)a0 sourceURL:(id)a1;
- (id)_itemProviderCollectionForSharingURL:(id)a0 title:(id)a1;
- (void)_fetchSharingURLWithCompletionHandler:(id /* block */)a0;
- (id)_mailContentProvider;
- (void)_updateUserActivityTimerFired;
- (id)handoffURL;
- (void)scrollViewDidEndDragging:(id)a0 willDecelerate:(BOOL)a1;
- (void)traitCollectionDidChange:(id)a0;
- (void)scrollViewDidEndScrollingAnimation:(id)a0;
- (void)_invalidateUserActivity;
- (BOOL)printControllerPageIsLoading:(id)a0;
- (BOOL)printControllerShouldPrintReader:(id)a0;
- (void)_goForward;
- (void)_presentSaveWebpageViewController;
- (void)_emailCurrentPageWithPreferredContentType:(long long)a0;
- (void)_increasePageZoomSetting;
- (void)_decreasePageZoomSetting;
- (void)_resetPageZoomSetting;
- (BOOL)_personaShouldUseScreenTime;
- (id)_digitalHealthManager;
- (void)_showDigitalHealthOverlayWithPolicy:(long long)a0;
- (void)_hideDigitalHealthOverlay;
- (void)_presentActivityViewController;
- (BOOL)_canSaveWebpageForURL:(id)a0;
- (void)_presentTranslationConsentAlertWithType:(unsigned long long)a0 completionHandler:(id /* block */)a1;
- (BOOL)hasFailedURL;
- (void)webViewControllerDidDetermineReaderAvailability:(id)a0 dueTo:(long long)a1;
- (void)webViewController:(id)a0 didClickLinkInReaderWithRequest:(id)a1;
- (void)createReaderWebViewForWebViewController:(id)a0;
- (void)webViewController:(id)a0 didFindAppBannerWithContent:(id)a1;
- (void)webViewController:(id)a0 didExtractTextSamplesForTranslation:(id)a1;
- (void)webViewController:(id)a0 authenticationChallenge:(id)a1 shouldAllowLegacyTLS:(id /* block */)a2;
- (void)authenticationChallengeDidNegotiateModernTLS:(id)a0;
- (void)webViewController:(id)a0 decidePolicyForSOAuthorizationLoadWithCurrentPolicy:(long long)a1 forExtension:(id)a2 completionHandler:(id /* block */)a3;
- (void)webViewController:(id)a0 willEndNavigationGestureToBackForwardListItem:(id)a1;
- (void)webViewController:(id)a0 didEndNavigationGestureToBackForwardListItem:(id)a1;
- (void)webViewController:(id)a0 willGoToBackForwardListItem:(id)a1 inPageCache:(BOOL)a2;
- (void)webViewController:(id)a0 didFailNavigation:(id)a1 withError:(id)a2;
- (void)scrollViewWillBeginDragging:(id)a0;
- (void)viewWillLayoutSubviews;
- (void)webViewController:(id)a0 decidePolicyForNavigationResponse:(id)a1 decisionHandler:(id /* block */)a2;
- (void)webViewControllerUpdateNavigationBar:(id)a0;
- (void)webViewController:(id)a0 didReceiveAuthenticationChallenge:(id)a1 completionHandler:(id /* block */)a2;
- (void)webViewController:(id)a0 didStartLoadForQuickLookDocumentInMainFrameWithFileName:(id)a1 uti:(id)a2;
- (void)webViewController:(id)a0 didFinishLoadForQuickLookDocumentInMainFrame:(id)a1;
- (unsigned long long)browserPersonaForWebViewController:(id)a0;

@end
