@class NSTimer, NSString, UIView, NSURL, ADAdSpace, ADDimmerView, NSDate, ADPrivacyMarker, ADLayoutOptions, UIViewController, UILabel;
@protocol ADBannerViewInternalDelegate, ADBannerViewDelegate;

@interface ADBannerView : UIView <ADAdRecipient, ADDimmerViewDelegate> {
    id<ADBannerViewInternalDelegate> _weakInternalDelegate;
}

@property (retain, nonatomic) UIView *highlightClippedView;
@property (retain, nonatomic) UIView *highlightHittableView;
@property (retain, nonatomic) UILabel *idLbl;
@property (retain, nonatomic) NSTimer *highlightUpdateTimer;
@property (retain, nonatomic) ADPrivacyMarker *privacyMarker;
@property (copy, nonatomic) NSString *authenticationUserName;
@property (copy, nonatomic) NSURL *serverURL;
@property (readonly, nonatomic) BOOL createdForIBInternal;
@property (nonatomic, getter=isBannerViewActionInProgress) BOOL bannerViewActionInProgress;
@property (retain, nonatomic) ADAdSpace *adSpace;
@property (retain, nonatomic) ADDimmerView *dimmerView;
@property (nonatomic) BOOL dimmed;
@property (nonatomic) BOOL determiningConstraintBasedWidth;
@property (nonatomic) double constraintBasedWidth;
@property (nonatomic) BOOL inSecondConstraintsPass;
@property (nonatomic) BOOL scrolling;
@property (nonatomic) struct CGSize { double width; double height; } portraitSize;
@property (nonatomic) struct CGSize { double width; double height; } landscapeSize;
@property (nonatomic) BOOL imageUpdateEnabled;
@property (nonatomic) BOOL debugHighlightEnabled;
@property (nonatomic) BOOL internalAdTypeCanChange;
@property (copy, nonatomic) NSString *originID;
@property (copy, nonatomic) NSDate *adDisplayDate;
@property (nonatomic) BOOL requestCalledbackError;
@property (copy, nonatomic) NSDate *loadStartTime;
@property (copy, nonatomic) NSDate *webLoadStartTime;
@property (copy, nonatomic) NSDate *loadEndTime;
@property (nonatomic) double adDataLoadTime;
@property (nonatomic) double bannerLoadTime;
@property (weak, nonatomic) id<ADBannerViewDelegate> weakDelegate;
@property (readonly, nonatomic) long long adType;
@property (weak, nonatomic) id<ADBannerViewDelegate> delegate;
@property (readonly, nonatomic, getter=isBannerLoaded) BOOL bannerLoaded;
@property (copy, nonatomic) NSString *advertisingSection;
@property (readonly, nonatomic) int internalAdType;
@property (retain, nonatomic) ADLayoutOptions *layoutOptions;
@property (readonly, nonatomic) long long options;
@property (readonly, nonatomic) UIView *adSpaceView;
@property (readonly, nonatomic) UIViewController *presentingViewController;
@property (copy, nonatomic) NSString *adResponseId;
@property (nonatomic) int screenfuls;
@property (nonatomic) int slotPosition;
@property (nonatomic) BOOL displayed;
@property (nonatomic) BOOL reUsed;
@property (nonatomic) long long lastErrorCode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)requiresConstraintBasedLayout;
+ (void)setServerURL:(id)a0;
+ (struct CGSize { double x0; double x1; })_sizeThatFitsSize:(struct CGSize { double x0; double x1; })a0 adType:(int)a1 statusBarOrientationIsPortrait:(BOOL)a2;
+ (struct CGSize { double x0; double x1; })sizeFromBannerContentSizeIdentifier:(id)a0;
+ (struct CGSize { double x0; double x1; })_landscapeBannerSize;
+ (struct CGSize { double x0; double x1; })_portraitBannerSize;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameThatFits:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 adType:(int)a1 statusBarOrientationIsPortrait:(BOOL)a2;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_adWindowBounds;

- (void)setTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a0;
- (void)_prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_commonInit;
- (void)setAutoresizingMask:(unsigned long long)a0;
- (id)context;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void).cxx_destruct;
- (void)privacyButtonWasTapped;
- (void)dealloc;
- (void)_prepareForFirstIntrinsicContentSizeCalculation;
- (void)updateConstraints;
- (void)setInternalDelegate:(id)a0;
- (id)audioURL;
- (void)setHidden:(BOOL)a0;
- (void)setContext:(id)a0;
- (id)initWithCoder:(id)a0;
- (int)action;
- (void)dimmerView:(id)a0 didReceiveTouchUpAtPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)didMoveToWindow;
- (BOOL)_needsDoubleUpdateConstraintsPass;
- (void)setCenter:(struct CGPoint { double x0; double x1; })a0;
- (id)uniqueIdentifier;
- (BOOL)hasAction;
- (void)layoutSubviews;
- (id)initFromIBWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setAlpha:(double)a0;
- (void)cancelBannerViewAction;
- (void)resizeWithOldSuperviewSize:(struct CGSize { double x0; double x1; })a0;
- (id)internalDelegate;
- (void)reportNativeClickEvent;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)hasImpressed;
- (BOOL)enableDimmerView:(id)a0;
- (BOOL)canReuseForContext:(id)a0;
- (void)_setInSecondConstraintsPass:(BOOL)a0;
- (void)_resetToBeginningOfDoublePass;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setIdentifier:(id)a0;
- (void)traitCollectionDidChange:(id)a0;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (id)_accessibilityUserTestingElementAttributes;
- (id)identifier;
- (void)encodeWithCoder:(id)a0;
- (double)skipThreshold;
- (void)beginAction;
- (void)playbackStarted;
- (void)playbackPaused;
- (void)playbackResumed;
- (id)nativeMetadata;
- (id)initWithAdType:(long long)a0;
- (void)displayBannerView;
- (void)displayCreativeView;
- (void)removeCreativeView;
- (void)playbackDidStart:(id)a0;
- (void)playbackDidPause:(id)a0;
- (void)playbackDidResume:(id)a0;
- (void)playbackFailed:(id)a0 forURL:(id)a1;
- (void)playbackDidFinish:(id)a0;
- (void)videoBannerVisibilityDidChange:(id)a0;
- (void)playbackMediaWasSkipped:(id)a0;
- (void)videoBannerDidLoad:(id)a0;
- (void)playbackDidEnterFullscreen:(id)a0;
- (void)playbackDidExitFullscreen:(id)a0;
- (void)videoBannerTouched:(id)a0;
- (void)playbackAudioWasMuted:(id)a0;
- (void)playbackAudioWasUnmuted:(id)a0;
- (void)nextContentVideoStartedPlaying;
- (void)playbackDidReachProgressEvent:(id)a0;
- (id)_initWithInternalAdType:(int)a0 options:(long long)a1;
- (id)_initWithInternalAdType:(int)a0 layoutOptions:(id)a1 options:(long long)a2;
- (id)initFromIBWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 adType:(long long)a1;
- (void)_resetHighlightTimer;
- (void)bannerTappedAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)requiresMRAID;
- (void)bannerTappedAtPoint:(struct CGPoint { double x0; double x1; })a0 withMRAIDAction:(id)a1;
- (id)publicImpressionAttributes;
- (void)_updateHighlight:(id)a0;
- (BOOL)hasTransparencyDetails;
- (void)_setAdPrivacyMarkPosition;
- (void)_forwardErrorToDelegate:(id)a0;
- (id)currentAdIdentifier;
- (void)registerVideoPlayerForAdAnalytics:(id)a0;
- (void)unregisterVideoPlayerForAdAnalytics:(id)a0;
- (void)serverBannerViewWillLoad;
- (void)serverBannerViewDidLoad;
- (void)serverBannerViewDidFailToReceiveAdWithError:(id)a0;
- (void)serverStoryboardDidTransitionOut;
- (void)storyboardViewControllerDidPresent;
- (void)pauseBannerMedia;
- (void)resumeBannerMedia;
- (BOOL)shouldTestVisibilityAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)adlibManagedVideoAdDidImpress;
- (void)adlibManagedVideoAdDidResumePlay;
- (void)adlibManagedVideoAdDidPausePlay;
- (void)adlibManagedVideoAdDidCompletePlay:(int)a0;
- (void)adlibManagedVideoAdDidTapForMoreInfo;
- (void)adlibManagedVideoAdDidTapVideo;
- (void)adlibManagedVideoAdDidToggleToMute:(BOOL)a0;
- (void)setViewSizeInPortrait:(struct CGSize { double x0; double x1; })a0 inLandscape:(struct CGSize { double x0; double x1; })a1;
- (void)creativeControllerViewWasTappedAtPoint:(struct CGPoint { double x0; double x1; })a0 withMRAIDAction:(id)a1;
- (void)cycleImpressionImmediately;
- (void)setInternalAdType:(int)a0;
- (void)prerollDidStart;
- (void)prerollDidStop;
- (void)setRequiredContentSizeIdentifiers:(id)a0;
- (id)requiredContentSizeIdentifiers;
- (void)setCurrentContentSizeIdentifier:(id)a0;
- (id)currentContentSizeIdentifier;
- (void)suspendImpressionCycling;
- (void)resumeImpressionCycling;
- (id)videoAssets;
- (void)playbackStartedForImpressionSource:(int)a0;
- (void)playbackFinished:(id)a0;
- (void)playbackFailed:(id)a0;
- (void)userDidSkipPreroll;
- (void)bannerDidAppear;
- (void)bannerDidDisappear;
- (void)cancelScheduledAd;
- (void)scheduleAd;
- (void)videoBannerDidUnload:(id)a0;

@end
