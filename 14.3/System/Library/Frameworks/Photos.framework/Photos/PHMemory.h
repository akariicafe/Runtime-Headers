@class PHMemoryFeature, NSString, NSDictionary, NSData, NSDate, NSSet, NSArray;

@interface PHMemory : PHAssetCollection {
    NSString *_title;
    NSString *_localizedSubtitle;
    NSData *_photosGraphData;
    NSDictionary *_transientMemoryProperties;
    NSDate *_creationDate;
    NSDictionary *_movieAssetState;
    NSString *_titleFontName;
    long long _syncedPlayCount;
    long long _syncedShareCount;
    long long _syncedViewCount;
    long long _pendingPlayCount;
    long long _pendingShareCount;
    long long _pendingViewCount;
    BOOL _didLoadTitleCategory;
    long long _titleCategory;
}

@property (readonly, nonatomic, getter=isPresentedFromURLNavigation) BOOL presentedFromURLNavigation;
@property (readonly, copy, nonatomic) NSString *URLNavigationSourceIdentifier;
@property (readonly, nonatomic) unsigned long long category;
@property (readonly, nonatomic) unsigned long long subcategory;
@property (readonly, nonatomic) unsigned long long notificationState;
@property (readonly, nonatomic) unsigned long long featuredState;
@property (readonly, nonatomic, getter=isRejected) BOOL rejected;
@property (readonly, nonatomic, getter=isFavorite) BOOL favorite;
@property (readonly, nonatomic, getter=isPending) BOOL pending;
@property (readonly, nonatomic, getter=isUserCreated) BOOL userCreated;
@property (readonly, nonatomic) NSString *subtitle;
@property (readonly, nonatomic) NSData *movieData;
@property (readonly, nonatomic) long long photosGraphVersion;
@property (readonly, nonatomic) NSDictionary *photosGraphProperties;
@property (readonly, nonatomic) double score;
@property (readonly, nonatomic) NSDate *lastViewedDate;
@property (readonly, nonatomic) NSDate *lastMoviePlayedDate;
@property (readonly, nonatomic) NSSet *featuredPeopleIdentifiers;
@property (readonly, nonatomic) NSData *assetListPredicate;
@property (readonly, nonatomic) BOOL isContiguous;
@property (readonly, nonatomic) NSArray *blacklistableFeatures;
@property (readonly, nonatomic) PHMemoryFeature *blacklistedFeature;
@property (readonly, nonatomic) long long playCount;
@property (readonly, nonatomic) long long shareCount;
@property (readonly, nonatomic) long long viewCount;
@property (readonly, nonatomic) BOOL isMustSee;
@property (readonly, nonatomic) BOOL isStellar;
@property (readonly, nonatomic) BOOL isGreat;
@property (readonly, nonatomic) BOOL isCurrentlyRelevant;
@property (readonly, nonatomic) double currentRelevanceScore;
@property (readonly, nonatomic) NSDictionary *musicGenreDistribution;

+ (void)clearCurrentMemoryForURLNavigation;
+ (id)identifierCode;
+ (BOOL)isTriggeredMemoryCategory:(unsigned long long)a0;
+ (id)titleFontNameFromMovieData:(id)a0;
+ (id)stringForFeaturedState:(unsigned long long)a0;
+ (id)movieDataWithTitleFontName:(id)a0;
+ (void)setCurrentMemoryForURLNavigation:(id)a0;
+ (id)propertiesToFetchWithHint:(unsigned long long)a0;
+ (id)fetchType;
+ (id)fetchBlacklistedMemoriesWithOptions:(id)a0;
+ (id)entityKeyMap;
+ (id)memoryInfosWithOptions:(id)a0 photoLibrary:(id)a1;
+ (id)blockedPersonLocalIdentifiersInPhotoLibrary:(id)a0;
+ (id)fetchBestRecentMemoryWithOptions:(id)a0;
+ (id)stringForSubcategory:(unsigned long long)a0;
+ (id)transformValueExpression:(id)a0 forKeyPath:(id)a1;
+ (unsigned long long)_contextualScoreForMemory:(id)a0;
+ (id)memoryTreeLevelWithOptions:(id)a0 photoLibrary:(id)a1;
+ (id)stringForCategory:(unsigned long long)a0;
+ (id)_fetchOptionsForTransientMemoryAssetsWithOptions:(id)a0;
+ (id)stringForNotificationState:(unsigned long long)a0;
+ (void)generateMemoriesWithOptions:(id)a0 completion:(id /* block */)a1;
+ (BOOL)managedObjectSupportsPendingState;
+ (BOOL)managedObjectSupportsTrashedState;
+ (id)fetchMostRelevantMemoryWithOptions:(id)a0;
+ (id)fetchMostRelevantMemoryAtDate:(id)a0 options:(id)a1;
+ (id)managedEntityName;
+ (id)transientMemoryWithInfo:(id)a0 photoLibrary:(id)a1;
+ (BOOL)managedObjectSupportsRejectedState;
+ (id)mostRelevantMemoryInMemories:(id)a0 atDate:(id)a1;
+ (id)assetListPredicateFromQueryHintObjects:(id)a0;

- (id)meaningLabels;
- (BOOL)canPerformEditOperation:(long long)a0;
- (Class)changeRequestClass;
- (void)setupTransientMemory;
- (id)queryForExtendedCuratedAssetsWithOptions:(id)a0;
- (id)queryForCuratedAssetsWithOptions:(id)a0;
- (id)queryForKeyAssetWithOptions:(id)a0;
- (id)transientRepresentativeAndCuratedAssetIDs;
- (id)rejectionCause;
- (id)transientMemoryStartDate;
- (id)query;
- (BOOL)isTransient;
- (void).cxx_destruct;
- (id)titleFontName;
- (id)localizedSubtitle;
- (id)creationDate;
- (BOOL)collectionHasFixedOrder;
- (id)movieStateDataForAsset:(id)a0;
- (BOOL)hasBlacklistableFeature;
- (id)defaultSortDescriptor;
- (id)predicateForAllAssetsWithLibrary:(id)a0;
- (id)predicateForAllMomentsFromRepresentativeAssets;
- (unsigned long long)suggestedMood;
- (id)_representativeAndCuratedAssetIDs;
- (id)_curatedAssetIDsWithLibrary:(id)a0;
- (id)_extendedCuratedAssetIDsWithLibrary:(id)a0;
- (id)moodKeywords;
- (id)presentationHints;
- (id)description;
- (BOOL)canShowAvalancheStacks;
- (id)initWithFetchDictionary:(id)a0 propertyHint:(unsigned long long)a1 photoLibrary:(id)a2;
- (long long)titleCategory;
- (BOOL)canContainAssets;
- (unsigned long long)titleFontNameHash;
- (double)relevanceScoreAtDate:(id)a0;
- (BOOL)isRelevantAtDate:(id)a0;

@end
