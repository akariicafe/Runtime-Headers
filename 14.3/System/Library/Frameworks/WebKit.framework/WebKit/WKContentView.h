@class UIImage, UITextRange, UIInputContextHistory, NSDictionary, RTIInputSystemSourceSession, UITextInputAssistantItem, UIView, UIColor, UITextInteractionAssistant, NSString, NSIndexSet, UIWebFormAccessory, NSArray, UITextPosition, WKBrowsingContextController, WKDateTimeInputControl, UITextInputPasswordRules;
@protocol UITextInputDelegate, UITextInputSuggestionDelegate, WKFormControl, UITextInputTokenizer;

@interface WKContentView : WKApplicationStateTrackingView <UIIndirectScribbleInteractionDelegate, _WKWebViewPrintProvider, UIGestureRecognizerDelegate, UITextAutoscrolling, UITextInputMultiDocument, UITextInputPrivate, UIWebFormAccessoryDelegate, UIWebTouchEventsGestureRecognizerDelegate, UIWKInteractionViewProtocol, WKActionSheetAssistantDelegate, WKFileUploadPanelDelegate, WKKeyboardScrollViewAnimatorDelegate, WKDeferringGestureRecognizerDelegate, WKShareSheetDelegate, UIDragInteractionDelegate, UIDropInteractionDelegate, WKTouchActionGestureRecognizerDelegate, UIContextMenuInteractionDelegate, UIPreviewItemDelegate> {
    struct RefPtr<WebKit::WebPageProxy, WTF::DumbPtrTraits<WebKit::WebPageProxy> > { struct WebPageProxy *m_ptr; } _page;
    struct WeakObjCPtr<WKWebView> { id m_weakReference; } _webView;
    struct RetainPtr<WKDeferringGestureRecognizer> { void *m_ptr; } _deferringGestureRecognizerForImmediatelyResettableGestures;
    struct RetainPtr<WKDeferringGestureRecognizer> { void *m_ptr; } _deferringGestureRecognizerForDelayedResettableGestures;
    struct RetainPtr<WKDeferringGestureRecognizer> { void *m_ptr; } _deferringGestureRecognizerForSyntheticTapGestures;
    struct RetainPtr<UIWebTouchEventsGestureRecognizer> { void *m_ptr; } _touchEventGestureRecognizer;
    BOOL _touchEventsCanPreventNativeGestures;
    BOOL _preventsPanningInXAxis;
    BOOL _preventsPanningInYAxis;
    struct RetainPtr<WKSyntheticTapGestureRecognizer> { void *m_ptr; } _singleTapGestureRecognizer;
    struct RetainPtr<WKHighlightLongPressGestureRecognizer> { void *m_ptr; } _highlightLongPressGestureRecognizer;
    struct RetainPtr<UILongPressGestureRecognizer> { void *m_ptr; } _longPressGestureRecognizer;
    struct RetainPtr<WKSyntheticTapGestureRecognizer> { void *m_ptr; } _doubleTapGestureRecognizer;
    struct RetainPtr<UITapGestureRecognizer> { void *m_ptr; } _nonBlockingDoubleTapGestureRecognizer;
    struct RetainPtr<UITapGestureRecognizer> { void *m_ptr; } _doubleTapGestureRecognizerForDoubleClick;
    struct RetainPtr<UITapGestureRecognizer> { void *m_ptr; } _twoFingerDoubleTapGestureRecognizer;
    struct RetainPtr<UITapGestureRecognizer> { void *m_ptr; } _twoFingerSingleTapGestureRecognizer;
    struct RetainPtr<UITapGestureRecognizer> { void *m_ptr; } _stylusSingleTapGestureRecognizer;
    struct RetainPtr<WKInspectorNodeSearchGestureRecognizer> { void *m_ptr; } _inspectorNodeSearchGestureRecognizer;
    struct RetainPtr<WKTouchActionGestureRecognizer> { void *m_ptr; } _touchActionGestureRecognizer;
    struct RetainPtr<UISwipeGestureRecognizer> { void *m_ptr; } _touchActionLeftSwipeGestureRecognizer;
    struct RetainPtr<UISwipeGestureRecognizer> { void *m_ptr; } _touchActionRightSwipeGestureRecognizer;
    struct RetainPtr<UISwipeGestureRecognizer> { void *m_ptr; } _touchActionUpSwipeGestureRecognizer;
    struct RetainPtr<UISwipeGestureRecognizer> { void *m_ptr; } _touchActionDownSwipeGestureRecognizer;
    struct RetainPtr<WKMouseGestureRecognizer> { void *m_ptr; } _mouseGestureRecognizer;
    unsigned char _mouseEventPolicy;
    struct RetainPtr<_UICursorInteraction> { void *m_ptr; } _cursorInteraction;
    BOOL _hasOutstandingCursorInteractionRequest;
    struct Optional<std::__1::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (_UICursorRegion *)> > > { BOOL init_; union storage_t<std::__1::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (_UICursorRegion *)> > > { unsigned char dummy_; struct pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (_UICursorRegion *)> > { struct InteractionInformationRequest { struct IntPoint { int m_x; int m_y; } point; BOOL includeSnapshot; BOOL includeLinkIndicator; BOOL includeCaretContext; BOOL includeHasDoubleClickHandler; BOOL linkIndicatorShouldHaveLegacyMargins; } first; struct BlockPtr<void (_UICursorRegion *)> { id /* block */ m_block; } second; } value_; } storage_; } _deferredCursorInteractionRequest;
    struct RetainPtr<UIWKTextInteractionAssistant> { void *m_ptr; } _textInteractionAssistant;
    struct OptionSet<WebKit::SuppressSelectionAssistantReason> { unsigned char m_storage; } _suppressSelectionAssistantReasons;
    struct RetainPtr<UITextInputTraits> { void *m_ptr; } _traits;
    struct RetainPtr<UIWebFormAccessory> { void *m_ptr; } _formAccessoryView;
    struct RetainPtr<_UIHighlightView> { void *m_ptr; } _highlightView;
    struct RetainPtr<UIView> { void *m_ptr; } _interactionViewsContainerView;
    struct RetainPtr<UIView> { void *m_ptr; } _contextMenuHintContainerView;
    struct RetainPtr<UIView> { void *m_ptr; } _dragPreviewContainerView;
    struct RetainPtr<UIView> { void *m_ptr; } _dropPreviewContainerView;
    struct RetainPtr<NSString> { void *m_ptr; } _markedText;
    struct RetainPtr<WKActionSheetAssistant> { void *m_ptr; } _actionSheetAssistant;
    struct RetainPtr<WKAirPlayRoutePicker> { void *m_ptr; } _airPlayRoutePicker;
    struct RetainPtr<WKFormInputSession> { void *m_ptr; } _formInputSession;
    struct RetainPtr<WKFileUploadPanel> { void *m_ptr; } _fileUploadPanel;
    struct FrameInfoData { BOOL isMainFrame; struct ResourceRequest { struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } m_string; unsigned char m_isValid : 1; unsigned char m_protocolIsInHTTPFamily : 1; unsigned char m_cannotBeABaseURL : 1; unsigned char m_portLength : 3; unsigned int m_schemeEnd : 26; unsigned int m_userStart; unsigned int m_userEnd; unsigned int m_passwordEnd; unsigned int m_hostEnd; unsigned int m_pathAfterLastSlash; unsigned int m_pathEnd; unsigned int m_queryEnd; } m_url; double m_timeoutInterval; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } m_string; unsigned char m_isValid : 1; unsigned char m_protocolIsInHTTPFamily : 1; unsigned char m_cannotBeABaseURL : 1; unsigned char m_portLength : 3; unsigned int m_schemeEnd : 26; unsigned int m_userStart; unsigned int m_userEnd; unsigned int m_passwordEnd; unsigned int m_hostEnd; unsigned int m_pathAfterLastSlash; unsigned int m_pathEnd; unsigned int m_queryEnd; } m_firstPartyForCookies; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } m_httpMethod; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } m_initiatorIdentifier; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } m_cachePartition; struct HTTPHeaderMap { struct Vector<WebCore::HTTPHeaderMap::CommonHeader, 0, WTF::CrashOnOverflow, 6, WTF::FastMalloc> { struct CommonHeader *m_buffer; unsigned int m_capacity; unsigned int m_size; } m_commonHeaders; struct Vector<WebCore::HTTPHeaderMap::UncommonHeader, 0, WTF::CrashOnOverflow, 0, WTF::FastMalloc> { struct UncommonHeader *m_buffer; unsigned int m_capacity; unsigned int m_size; } m_uncommonHeaders; } m_httpHeaderFields; struct Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct String *m_buffer; unsigned int m_capacity; unsigned int m_size; } m_responseContentDispositionEncodingFallbackArray; struct RefPtr<WebCore::FormData, WTF::DumbPtrTraits<WebCore::FormData> > { struct FormData *m_ptr; } m_httpBody; unsigned char m_cachePolicy; unsigned char m_sameSiteDisposition; unsigned char m_priority; unsigned char m_requester; struct Optional<int> { BOOL init_; union constexpr_storage_t<int> { unsigned char dummy_; int value_; } storage_; } m_inspectorInitiatorNodeIdentifier; unsigned char m_allowCookies : 1; unsigned char m_resourceRequestUpdated : 1; unsigned char m_platformRequestUpdated : 1; unsigned char m_resourceRequestBodyUpdated : 1; unsigned char m_platformRequestBodyUpdated : 1; unsigned char m_hiddenFromInspector : 1; unsigned char m_isTopSite : 1; struct Optional<WebCore::SystemPreviewInfo> { BOOL init_; union constexpr_storage_t<WebCore::SystemPreviewInfo> { unsigned char dummy_; struct SystemPreviewInfo { struct ElementContext { struct FloatRect { struct FloatPoint { float m_x; float m_y; } m_location; struct FloatSize { float m_width; float m_height; } m_size; } boundingRect; struct ObjectIdentifier<WebCore::PageIdentifierType> { unsigned long long m_identifier; } webPageIdentifier; struct ObjectIdentifier<WebCore::DocumentIdentifierType> { unsigned long long m_identifier; } documentIdentifier; struct ObjectIdentifier<WebCore::ElementIdentifierType> { unsigned long long m_identifier; } elementIdentifier; } element; struct IntRect { struct IntPoint { int m_x; int m_y; } m_location; struct IntSize { int m_width; int m_height; } m_size; } previewRect; BOOL isPreview; } value_; } storage_; } m_systemPreviewInfo; struct RetainPtr<NSURLRequest> { void *m_ptr; } m_nsRequest; } request; struct SecurityOriginData { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } protocol; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } host; struct Optional<unsigned short> { BOOL init_; union constexpr_storage_t<unsigned short> { unsigned char dummy_; unsigned short value_; } storage_; } port; } securityOrigin; struct Optional<WTF::ObjectIdentifier<WebCore::FrameIdentifierType> > { BOOL init_; union constexpr_storage_t<WTF::ObjectIdentifier<WebCore::FrameIdentifierType> > { unsigned char dummy_; struct ObjectIdentifier<WebCore::FrameIdentifierType> { unsigned long long m_identifier; } value_; } storage_; } frameID; struct Optional<WTF::ObjectIdentifier<WebCore::FrameIdentifierType> > { BOOL init_; union constexpr_storage_t<WTF::ObjectIdentifier<WebCore::FrameIdentifierType> > { unsigned char dummy_; struct ObjectIdentifier<WebCore::FrameIdentifierType> { unsigned long long m_identifier; } value_; } storage_; } parentFrameID; } _frameInfoForFileUploadPanel;
    struct RetainPtr<WKShareSheet> { void *m_ptr; } _shareSheet;
    struct RetainPtr<UIGestureRecognizer> { void *m_ptr; } _previewGestureRecognizer;
    struct RetainPtr<UIGestureRecognizer> { void *m_ptr; } _previewSecondaryGestureRecognizer;
    struct Vector<bool, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { BOOL *m_buffer; unsigned int m_capacity; unsigned int m_size; } _focusStateStack;
    struct RetainPtr<UIContextMenuInteraction> { void *m_ptr; } _contextMenuInteraction;
    struct RetainPtr<WKContextMenuElementInfo> { void *m_ptr; } _contextMenuElementInfo;
    BOOL _showLinkPreviews;
    struct RetainPtr<UIViewController> { void *m_ptr; } _contextMenuLegacyPreviewController;
    struct RetainPtr<UIMenu> { void *m_ptr; } _contextMenuLegacyMenu;
    BOOL _contextMenuHasRequestedLegacyData;
    BOOL _contextMenuActionProviderDelegateNeedsOverride;
    struct RetainPtr<UIPreviewItemController> { void *m_ptr; } _previewItemController;
    struct RetainPtr<UITargetedPreview> { void *m_ptr; } _contextMenuInteractionTargetedPreview;
    struct unique_ptr<WebKit::SmartMagnificationController, std::__1::default_delete<WebKit::SmartMagnificationController> > { struct __compressed_pair<WebKit::SmartMagnificationController *, std::__1::default_delete<WebKit::SmartMagnificationController> > { struct SmartMagnificationController *__value_; } __ptr_; } _smartMagnificationController;
    struct WeakObjCPtr<id<UITextInputDelegate> > { id m_weakReference; } _inputDelegate;
    unsigned long long _latestTapID;
    struct TapHighlightInformation { BOOL nodeHasBuiltInClickHandling; struct Color { union { unsigned long long inlineColorAndFlags; struct ExtendedColor *extendedColor; } m_colorData; } color; struct Vector<WebCore::FloatQuad, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct FloatQuad *m_buffer; unsigned int m_capacity; unsigned int m_size; } quads; struct IntSize { int m_width; int m_height; } topLeftRadius; struct IntSize { int m_width; int m_height; } topRightRadius; struct IntSize { int m_width; int m_height; } bottomLeftRadius; struct IntSize { int m_width; int m_height; } bottomRightRadius; } _tapHighlightInformation;
    struct WebAutocorrectionContext { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } contextBefore; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } markedText; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } selectedText; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } contextAfter; struct EditingRange { unsigned long long location; unsigned long long length; } markedTextRange; } _lastAutocorrectionContext;
    struct WKAutoCorrectionData { struct RetainPtr<UIFont> { void *m_ptr; } font; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } textFirstRect; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } textLastRect; } _autocorrectionData;
    struct InteractionInformationAtPosition { struct InteractionInformationRequest { struct IntPoint { int m_x; int m_y; } point; BOOL includeSnapshot; BOOL includeLinkIndicator; BOOL includeCaretContext; BOOL includeHasDoubleClickHandler; BOOL linkIndicatorShouldHaveLegacyMargins; } request; BOOL canBeValid; struct Optional<bool> { BOOL init_; union constexpr_storage_t<bool> { unsigned char dummy_; BOOL value_; } storage_; } nodeAtPositionHasDoubleClickHandler; BOOL isSelectable; BOOL prefersDraggingOverTextSelection; BOOL isNearMarkedText; BOOL touchCalloutEnabled; BOOL isLink; BOOL isImage; BOOL isAttachment; BOOL isAnimatedImage; BOOL isElement; unsigned long long containerScrollingNodeID; BOOL isDataDetectorLink; BOOL preventTextInteraction; BOOL shouldNotUseIBeamInEditableContent; struct FloatPoint { float m_x; float m_y; } adjustedPointForNodeRespondingToClickEvents; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } m_string; unsigned char m_isValid : 1; unsigned char m_protocolIsInHTTPFamily : 1; unsigned char m_cannotBeABaseURL : 1; unsigned char m_portLength : 3; unsigned int m_schemeEnd : 26; unsigned int m_userStart; unsigned int m_userEnd; unsigned int m_passwordEnd; unsigned int m_hostEnd; unsigned int m_pathAfterLastSlash; unsigned int m_pathEnd; unsigned int m_queryEnd; } url; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } m_string; unsigned char m_isValid : 1; unsigned char m_protocolIsInHTTPFamily : 1; unsigned char m_cannotBeABaseURL : 1; unsigned char m_portLength : 3; unsigned int m_schemeEnd : 26; unsigned int m_userStart; unsigned int m_userEnd; unsigned int m_passwordEnd; unsigned int m_hostEnd; unsigned int m_pathAfterLastSlash; unsigned int m_pathEnd; unsigned int m_queryEnd; } imageURL; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } title; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } idAttribute; struct IntRect { struct IntPoint { int m_x; int m_y; } m_location; struct IntSize { int m_width; int m_height; } m_size; } bounds; struct RefPtr<WebKit::ShareableBitmap, WTF::DumbPtrTraits<WebKit::ShareableBitmap> > { struct ShareableBitmap *m_ptr; } image; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } textBefore; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } textAfter; float caretHeight; struct FloatRect { struct FloatPoint { float m_x; float m_y; } m_location; struct FloatSize { float m_width; float m_height; } m_size; } lineCaretExtent; struct Optional<WebCore::Cursor> { BOOL init_; union storage_t<WebCore::Cursor> { unsigned char dummy_; struct Cursor { int m_type; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *m_ptr; } m_image; struct IntPoint { int m_x; int m_y; } m_hotSpot; void *m_platformCursor; } value_; } storage_; } cursor; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float m_x; float m_y; } m_location; struct FloatSize { float m_width; float m_height; } m_size; } selectionRectInRootViewCoordinates; struct FloatRect { struct FloatPoint { float m_x; float m_y; } m_location; struct FloatSize { float m_width; float m_height; } m_size; } textBoundingRectInRootViewCoordinates; struct FloatRect { struct FloatPoint { float m_x; float m_y; } m_location; struct FloatSize { float m_width; float m_height; } m_size; } contentImageWithoutSelectionRectInRootViewCoordinates; struct Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct FloatRect *m_buffer; unsigned int m_capacity; unsigned int m_size; } textRectsInBoundingRectCoordinates; float contentImageScaleFactor; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *m_ptr; } contentImageWithHighlight; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *m_ptr; } contentImageWithoutSelection; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *m_ptr; } contentImage; struct Color { union { unsigned long long inlineColorAndFlags; struct ExtendedColor *extendedColor; } m_colorData; } estimatedBackgroundColor; unsigned char presentationTransition; struct OptionSet<WebCore::TextIndicatorOption> { unsigned short m_storage; } options; } linkIndicator; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } dataDetectorIdentifier; struct RetainPtr<NSArray> { void *m_ptr; } dataDetectorResults; struct Optional<WebCore::ElementContext> { BOOL init_; union constexpr_storage_t<WebCore::ElementContext> { unsigned char dummy_; struct ElementContext { struct FloatRect { struct FloatPoint { float m_x; float m_y; } m_location; struct FloatSize { float m_width; float m_height; } m_size; } boundingRect; struct ObjectIdentifier<WebCore::PageIdentifierType> { unsigned long long m_identifier; } webPageIdentifier; struct ObjectIdentifier<WebCore::DocumentIdentifierType> { unsigned long long m_identifier; } documentIdentifier; struct ObjectIdentifier<WebCore::ElementIdentifierType> { unsigned long long m_identifier; } elementIdentifier; } value_; } storage_; } elementContext; } _positionInformation;
    struct FocusedElementInformation { struct IntRect { struct IntPoint { int m_x; int m_y; } m_location; struct IntSize { int m_width; int m_height; } m_size; } interactionRect; struct ElementContext { struct FloatRect { struct FloatPoint { float m_x; float m_y; } m_location; struct FloatSize { float m_width; float m_height; } m_size; } boundingRect; struct ObjectIdentifier<WebCore::PageIdentifierType> { unsigned long long m_identifier; } webPageIdentifier; struct ObjectIdentifier<WebCore::DocumentIdentifierType> { unsigned long long m_identifier; } documentIdentifier; struct ObjectIdentifier<WebCore::ElementIdentifierType> { unsigned long long m_identifier; } elementIdentifier; } elementContext; struct IntPoint { int m_x; int m_y; } lastInteractionLocation; double minimumScaleFactor; double maximumScaleFactor; double maximumScaleFactorIgnoringAlwaysScalable; double nodeFontSize; BOOL hasNextNode; struct IntRect { struct IntPoint { int m_x; int m_y; } m_location; struct IntSize { int m_width; int m_height; } m_size; } nextNodeRect; BOOL hasPreviousNode; struct IntRect { struct IntPoint { int m_x; int m_y; } m_location; struct IntSize { int m_width; int m_height; } m_size; } previousNodeRect; BOOL isAutocorrect; BOOL isRTL; BOOL isMultiSelect; BOOL isReadOnly; BOOL allowsUserScaling; BOOL allowsUserScalingIgnoringAlwaysScalable; BOOL insideFixedPosition; unsigned char autocapitalizeType; int elementType; unsigned char inputMode; unsigned char enterKeyHint; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } formAction; struct Vector<WebKit::OptionItem, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct OptionItem *m_buffer; unsigned int m_capacity; unsigned int m_size; } selectOptions; int selectedIndex; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } value; double valueAsNumber; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } title; BOOL acceptsAutofilledLoginCredentials; BOOL isAutofillableUsernameField; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } m_string; unsigned char m_isValid : 1; unsigned char m_protocolIsInHTTPFamily : 1; unsigned char m_cannotBeABaseURL : 1; unsigned char m_portLength : 3; unsigned int m_schemeEnd : 26; unsigned int m_userStart; unsigned int m_userEnd; unsigned int m_passwordEnd; unsigned int m_hostEnd; unsigned int m_pathAfterLastSlash; unsigned int m_pathEnd; unsigned int m_queryEnd; } representingPageURL; int autofillFieldName; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } placeholder; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } label; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } ariaLabel; unsigned long long embeddedViewID; BOOL hasSuggestions; struct Vector<WebCore::Color, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct Color *m_buffer; unsigned int m_capacity; unsigned int m_size; } suggestedColors; BOOL shouldSynthesizeKeyEventsForEditing; BOOL isSpellCheckingEnabled; BOOL shouldAvoidResizingWhenInputViewBoundsChange; BOOL shouldAvoidScrollingWhenFocusedContentIsVisible; BOOL shouldUseLegacySelectPopoverDismissalBehaviorInDataActivation; unsigned long long focusedElementIdentifier; } _focusedElementInformation;
    struct RetainPtr<NSObject<WKFormPeripheral> > { void *m_ptr; } _inputPeripheral;
    struct BlockPtr<void (WebEvent *, bool)> { id /* block */ m_block; } _keyWebEventHandler;
    struct CGPoint { double x; double y; } _lastInteractionLocation;
    struct MonotonicObjectIdentifier<WebKit::TransactionIDType> { unsigned long long m_identifier; } _layerTreeTransactionIdAtLastInteractionStart;
    struct WKSelectionDrawingInfo { int type; struct IntRect { struct IntPoint { int m_x; int m_y; } m_location; struct IntSize { int m_width; int m_height; } m_size; } caretRect; struct Vector<WebCore::SelectionRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct SelectionRect *m_buffer; unsigned int m_capacity; unsigned int m_size; } selectionRects; struct IntRect { struct IntPoint { int m_x; int m_y; } m_location; struct IntSize { int m_width; int m_height; } m_size; } selectionClipRect; } _lastSelectionDrawingInfo;
    struct RetainPtr<WKTextRange> { void *m_ptr; } _cachedSelectedTextRange;
    struct Optional<WebKit::InteractionInformationRequest> { BOOL init_; union constexpr_storage_t<WebKit::InteractionInformationRequest> { unsigned char dummy_; struct InteractionInformationRequest { struct IntPoint { int m_x; int m_y; } point; BOOL includeSnapshot; BOOL includeLinkIndicator; BOOL includeCaretContext; BOOL includeHasDoubleClickHandler; BOOL linkIndicatorShouldHaveLegacyMargins; } value_; } storage_; } _lastOutstandingPositionInformationRequest;
    unsigned long long _positionInformationCallbackDepth;
    struct Vector<WTF::Optional<std::__1::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (WebKit::InteractionInformationAtPosition)> > >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct Optional<std::__1::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (WebKit::InteractionInformationAtPosition)> > > *m_buffer; unsigned int m_capacity; unsigned int m_size; } _pendingPositionInformationHandlers;
    struct unique_ptr<WebKit::InputViewUpdateDeferrer, std::__1::default_delete<WebKit::InputViewUpdateDeferrer> > { struct __compressed_pair<WebKit::InputViewUpdateDeferrer *, std::__1::default_delete<WebKit::InputViewUpdateDeferrer> > { struct InputViewUpdateDeferrer *__value_; } __ptr_; } _inputViewUpdateDeferrer;
    struct RetainPtr<WKKeyboardScrollViewAnimator> { void *m_ptr; } _keyboardScrollingAnimator;
    struct RetainPtr<UIView<WKFormControl> > { void *m_ptr; } _dataListTextSuggestionsInputView;
    struct RetainPtr<NSArray<UITextSuggestion *> > { void *m_ptr; } _dataListTextSuggestions;
    BOOL _isEditable;
    BOOL _showingTextStyleOptions;
    BOOL _hasValidPositionInformation;
    BOOL _isTapHighlightIDValid;
    BOOL _potentialTapInProgress;
    BOOL _isDoubleTapPending;
    BOOL _longPressCanClick;
    BOOL _hasTapHighlightForPotentialTap;
    BOOL _selectionNeedsUpdate;
    BOOL _shouldRestoreSelection;
    BOOL _usingGestureForSelection;
    BOOL _inspectorNodeSearchEnabled;
    BOOL _isChangingFocusUsingAccessoryTab;
    BOOL _didAccessoryTabInitiateFocus;
    BOOL _isExpectingFastSingleTapCommit;
    BOOL _showDebugTapHighlightsForFastClicking;
    BOOL _textInteractionDidChangeFocusedElement;
    BOOL _textInteractionIsHappening;
    BOOL _treatAsContentEditableUntilNextEditorStateUpdate;
    BOOL _isWaitingOnPositionInformation;
    int m_commitPotentialTapPointerId;
    BOOL _keyboardDidRequestDismissal;
    BOOL _candidateViewNeedsUpdate;
    BOOL _seenHardwareKeyDownInNonEditableElement;
    BOOL _becomingFirstResponder;
    BOOL _needsDeferredEndScrollingSelectionUpdate;
    BOOL _isChangingFocus;
    BOOL _isFocusingElementWithKeyboard;
    BOOL _isBlurringFocusedElement;
    BOOL _isRelinquishingFirstResponderToFocusedElement;
    BOOL _focusRequiresStrongPasswordAssistance;
    BOOL _waitingForEditDragSnapshot;
    long long _dropAnimationCount;
    BOOL _hasSetUpInteractions;
    unsigned long long _ignoreSelectionCommandFadeCount;
    long long _suppressNonEditableSingleTapTextInteractionCount;
    struct CompletionHandler<void (WebCore::DOMPasteAccessResponse)> { struct Function<void (WebCore::DOMPasteAccessResponse)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, WebCore::DOMPasteAccessResponse>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WebCore::DOMPasteAccessResponse> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, WebCore::DOMPasteAccessResponse> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WebCore::DOMPasteAccessResponse> > > { struct CallableWrapperBase<void, WebCore::DOMPasteAccessResponse> *__value_; } __ptr_; } m_callableWrapper; } m_function; } _domPasteRequestHandler;
    struct BlockPtr<void (UIWKAutocorrectionContext *)> { id /* block */ m_block; } _pendingAutocorrectionContextHandler;
    struct RetainPtr<NSDictionary> { void *m_ptr; } _additionalContextForStrongPasswordAssistance;
    struct Optional<int> { BOOL init_; union constexpr_storage_t<int> { unsigned char dummy_; int value_; } storage_; } _lastInsertedCharacterToOverrideCharacterBeforeSelection;
    struct DragDropInteractionState { struct CGPoint { double x; double y; } m_lastGlobalPosition; struct CGPoint { double x; double y; } m_adjustedPositionForDragEnd; BOOL m_didBeginDragging; BOOL m_isPerformingDrop; struct RetainPtr<id<UIDragSession> > { void *m_ptr; } m_dragSession; struct RetainPtr<id<UIDropSession> > { void *m_ptr; } m_dropSession; struct BlockPtr<void ()> { id /* block */ m_block; } m_dragStartCompletionBlock; struct BlockPtr<void ()> { id /* block */ m_block; } m_dragCancelSetDownBlock; struct BlockPtr<void (NSArray<UIDragItem *> *)> { id /* block */ m_block; } m_addDragItemCompletionBlock; struct Optional<WebKit::DragSourceState> { BOOL init_; union storage_t<WebKit::DragSourceState> { unsigned char dummy_; struct DragSourceState { struct OptionSet<WebCore::DragSourceAction> { unsigned char m_storage; } action; struct CGPoint { double x; double y; } adjustedOrigin; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } dragPreviewFrameInRootViewCoordinates; struct RetainPtr<UIImage> { void *m_ptr; } image; struct Optional<WebCore::TextIndicatorData> { BOOL init_; union storage_t<WebCore::TextIndicatorData> { unsigned char dummy_; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float m_x; float m_y; } m_location; struct FloatSize { float m_width; float m_height; } m_size; } selectionRectInRootViewCoordinates; struct FloatRect { struct FloatPoint { float m_x; float m_y; } m_location; struct FloatSize { float m_width; float m_height; } m_size; } textBoundingRectInRootViewCoordinates; struct FloatRect { struct FloatPoint { float m_x; float m_y; } m_location; struct FloatSize { float m_width; float m_height; } m_size; } contentImageWithoutSelectionRectInRootViewCoordinates; struct Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct FloatRect *m_buffer; unsigned int m_capacity; unsigned int m_size; } textRectsInBoundingRectCoordinates; float contentImageScaleFactor; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *m_ptr; } contentImageWithHighlight; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *m_ptr; } contentImageWithoutSelection; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *m_ptr; } contentImage; struct Color { union { unsigned long long inlineColorAndFlags; struct ExtendedColor *extendedColor; } m_colorData; } estimatedBackgroundColor; unsigned char presentationTransition; struct OptionSet<WebCore::TextIndicatorOption> { unsigned short m_storage; } options; } value_; } storage_; } indicatorData; struct Optional<WebCore::Path> { BOOL init_; union storage_t<WebCore::Path> { unsigned char dummy_; struct Path { struct RetainPtr<CGPath *> { void *m_ptr; } m_path; struct Variant<WTF::Monostate, WebCore::MoveData, WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WTF::Monostate, WebCore::MoveData, WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WTF::Monostate> { struct Monostate { } __val; struct __dummy_type { } __dummy; } __head; union __variant_data<WebCore::MoveData, WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WebCore::MoveData> { struct __storage_wrapper<WebCore::MoveData> { struct type { unsigned char __lx[8]; } __storage; } __val; struct __dummy_type { } __dummy; } __head; union __variant_data<WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WebCore::LineData> { struct __storage_wrapper<WebCore::LineData> { struct type { unsigned char __lx[16]; } __storage; } __val; struct __dummy_type { } __dummy; } __head; union __variant_data<WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WebCore::ArcData> { struct __storage_wrapper<WebCore::ArcData> { struct type { unsigned char __lx[32]; } __storage; } __val; struct __dummy_type { } __dummy; } __head; union __variant_data<WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WebCore::QuadCurveData> { struct __storage_wrapper<WebCore::QuadCurveData> { struct type { unsigned char __lx[24]; } __storage; } __val; struct __dummy_type { } __dummy; } __head; union __variant_data<WebCore::BezierCurveData> { struct __storage_wrapper<WebCore::BezierCurveData> { struct type { unsigned char __lx[32]; } __storage; } __val; struct __dummy_type { } __dummy; } __rest; } __rest; } __rest; } __rest; } __rest; } __storage; char __index; } m_inlineData; BOOL m_copyPathBeforeMutation; } value_; } storage_; } visiblePath; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } linkTitle; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *m_ptr; } m_impl; } m_string; unsigned char m_isValid : 1; unsigned char m_protocolIsInHTTPFamily : 1; unsigned char m_cannotBeABaseURL : 1; unsigned char m_portLength : 3; unsigned int m_schemeEnd : 26; unsigned int m_userStart; unsigned int m_userEnd; unsigned int m_passwordEnd; unsigned int m_hostEnd; unsigned int m_pathAfterLastSlash; unsigned int m_pathEnd; unsigned int m_queryEnd; } linkURL; BOOL possiblyNeedsDragPreviewUpdate; long long itemIdentifier; } value_; } storage_; } m_stagedDragSource; struct Vector<WebKit::DragSourceState, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct DragSourceState *m_buffer; unsigned int m_capacity; unsigned int m_size; } m_activeDragSources; struct Vector<WebKit::ItemAndPreviewProvider, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct ItemAndPreviewProvider *m_buffer; unsigned int m_capacity; unsigned int m_size; } m_delayedItemPreviewProviders; struct Vector<WebKit::ItemAndPreview, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct ItemAndPreview *m_buffer; unsigned int m_capacity; unsigned int m_size; } m_defaultDropPreviews; } _dragDropInteractionState;
    struct RetainPtr<UIDragInteraction> { void *m_ptr; } _dragInteraction;
    struct RetainPtr<UIDropInteraction> { void *m_ptr; } _dropInteraction;
    BOOL _shouldRestoreCalloutBarAfterDrop;
    struct RetainPtr<UIView> { void *m_ptr; } _visibleContentViewSnapshot;
    struct RetainPtr<UIView> { void *m_ptr; } _unselectedContentSnapshot;
    struct RetainPtr<_UITextDragCaretView> { void *m_ptr; } _editDropCaretView;
    struct BlockPtr<void ()> { id /* block */ m_block; } _actionToPerformAfterReceivingEditDragSnapshot;
    struct Vector<WTF::BlockPtr<void ()>, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct BlockPtr<void ()> *m_buffer; unsigned int m_capacity; unsigned int m_size; } _actionsToPerformAfterResettingSingleTapGestureRecognizer;
    struct unique_ptr<WebKit::PageClientImpl, std::__1::default_delete<WebKit::PageClientImpl> > { struct __compressed_pair<WebKit::PageClientImpl *, std::__1::default_delete<WebKit::PageClientImpl> > { struct PageClientImpl *__value_; } __ptr_; } _pageClient;
    struct RetainPtr<WKBrowsingContextController> { void *m_ptr; } _browsingContextController;
    struct RetainPtr<UIView> { void *m_ptr; } _rootContentView;
    struct RetainPtr<UIView> { void *m_ptr; } _fixedClippingView;
    struct RetainPtr<WKInspectorIndicationView> { void *m_ptr; } _inspectorIndicationView;
    struct RetainPtr<WKInspectorHighlightView> { void *m_ptr; } _inspectorHighlightView;
    struct RetainPtr<_UILayerHostView> { void *m_ptr; } _visibilityPropagationView;
    struct RetainPtr<_UILayerHostView> { void *m_ptr; } _visibilityPropagationViewForGPUProcess;
    struct HistoricalVelocityData { unsigned int m_historySize; unsigned int m_latestDataIndex; struct MonotonicTime { double m_value; } m_lastAppendTimestamp; struct Data { struct MonotonicTime { double m_value; } timestamp; struct FloatPoint { float m_x; float m_y; } position; double scale; } m_positionHistory[3]; } _historicalKinematicData;
    struct RetainPtr<NSUndoManager> { void *m_ptr; } _undoManager;
    struct RetainPtr<WKQuirkyNSUndoManager> { void *m_ptr; } _quirkyUndoManager;
    BOOL _isPrintingToPDF;
    struct RetainPtr<CGPDFDocument *> { void *m_ptr; } _printedDocument;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) struct CGPDFDocument { } *_wk_printedDocument;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } lastInteractionLocation;
@property (readonly, nonatomic) BOOL isEditable;
@property (readonly, nonatomic) BOOL shouldHideSelectionWhenScrolling;
@property (readonly, nonatomic) BOOL shouldIgnoreKeyboardWillHideNotification;
@property (readonly, nonatomic) const struct InteractionInformationAtPosition { struct InteractionInformationRequest { struct IntPoint { int x0; int x1; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; } x0; BOOL x1; struct Optional<bool> { BOOL x0; union constexpr_storage_t<bool> { unsigned char x0; BOOL x1; } x1; } x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; unsigned long long x12; BOOL x13; BOOL x14; BOOL x15; struct FloatPoint { float x0; float x1; } x16; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x17; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x18; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x19; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x20; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x21; struct RefPtr<WebKit::ShareableBitmap, WTF::DumbPtrTraits<WebKit::ShareableBitmap> > { struct ShareableBitmap *x0; } x22; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x23; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x24; float x25; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x26; struct Optional<WebCore::Cursor> { BOOL x0; union storage_t<WebCore::Cursor> { unsigned char x0; struct Cursor { int x0; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x1; struct IntPoint { int x0; int x1; } x2; void *x3; } x1; } x1; } x27; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x2; struct Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct FloatRect *x0; unsigned int x1; unsigned int x2; } x3; float x4; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x5; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x6; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x7; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x8; unsigned char x9; struct OptionSet<WebCore::TextIndicatorOption> { unsigned short x0; } x10; } x28; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x29; struct RetainPtr<NSArray> { void *x0; } x30; struct Optional<WebCore::ElementContext> { BOOL x0; union constexpr_storage_t<WebCore::ElementContext> { unsigned char x0; struct ElementContext { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct ObjectIdentifier<WebCore::PageIdentifierType> { unsigned long long x0; } x1; struct ObjectIdentifier<WebCore::DocumentIdentifierType> { unsigned long long x0; } x2; struct ObjectIdentifier<WebCore::ElementIdentifierType> { unsigned long long x0; } x3; } x1; } x1; } x31; } *positionInformation;
@property (readonly, nonatomic) const struct WKAutoCorrectionData { struct RetainPtr<UIFont> { void *x0; } x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; } *autocorrectionData;
@property (readonly, nonatomic) const struct FocusedElementInformation { struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x0; struct ElementContext { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct ObjectIdentifier<WebCore::PageIdentifierType> { unsigned long long x0; } x1; struct ObjectIdentifier<WebCore::DocumentIdentifierType> { unsigned long long x0; } x2; struct ObjectIdentifier<WebCore::ElementIdentifierType> { unsigned long long x0; } x3; } x1; struct IntPoint { int x0; int x1; } x2; double x3; double x4; double x5; double x6; BOOL x7; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x8; BOOL x9; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; BOOL x16; BOOL x17; unsigned char x18; int x19; unsigned char x20; unsigned char x21; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x22; struct Vector<WebKit::OptionItem, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct OptionItem *x0; unsigned int x1; unsigned int x2; } x23; int x24; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x25; double x26; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x27; BOOL x28; BOOL x29; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x30; int x31; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x32; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x33; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x34; unsigned long long x35; BOOL x36; struct Vector<WebCore::Color, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct Color *x0; unsigned int x1; unsigned int x2; } x37; BOOL x38; BOOL x39; BOOL x40; BOOL x41; BOOL x42; unsigned long long x43; } *focusedElementInformation;
@property (readonly, nonatomic) UIWebFormAccessory *formAccessoryView;
@property (readonly, nonatomic) UITextInputAssistantItem *inputAssistantItemForWebView;
@property (readonly, nonatomic) UIView *inputViewForWebView;
@property (readonly, nonatomic) UIView *inputAccessoryViewForWebView;
@property (readonly, nonatomic) BOOL preventsPanningInXAxis;
@property (readonly, nonatomic) BOOL preventsPanningInYAxis;
@property (retain, nonatomic) UIView<WKFormControl> *dataListTextSuggestionsInputView;
@property (retain, nonatomic) NSArray *dataListTextSuggestions;
@property (readonly, nonatomic) BOOL _shouldUseContextMenus;
@property (readonly, nonatomic) BOOL _shouldAvoidResizingWhenInputViewBoundsChange;
@property (readonly, nonatomic) BOOL _shouldAvoidScrollingWhenFocusedContentIsVisible;
@property (readonly, nonatomic) BOOL _shouldUseLegacySelectPopoverDismissalBehavior;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) UITextInteractionAssistant *interactionAssistant;
@property (nonatomic) long long selectionGranularity;
@property (readonly, nonatomic) long long cursorBehavior;
@property (readonly, nonatomic) id<UITextInputSuggestionDelegate> textInputSuggestionDelegate;
@property (nonatomic) long long _textInputSource;
@property (readonly, nonatomic) RTIInputSystemSourceSession *_rtiSourceSession;
@property (readonly, nonatomic) BOOL supportsImagePaste;
@property (copy) UITextRange *selectedTextRange;
@property (readonly, nonatomic) UITextRange *markedTextRange;
@property (copy, nonatomic) NSDictionary *markedTextStyle;
@property (readonly, nonatomic) UITextPosition *beginningOfDocument;
@property (readonly, nonatomic) UITextPosition *endOfDocument;
@property (weak, nonatomic) id<UITextInputDelegate> inputDelegate;
@property (readonly, nonatomic) id<UITextInputTokenizer> tokenizer;
@property (readonly, nonatomic) UIView *textInputView;
@property (nonatomic) long long selectionAffinity;
@property (readonly, nonatomic) id insertDictationResultPlaceholder;
@property (readonly, nonatomic) BOOL hasText;
@property (nonatomic) long long autocapitalizationType;
@property (nonatomic) long long autocorrectionType;
@property (nonatomic) long long spellCheckingType;
@property (nonatomic) long long smartQuotesType;
@property (nonatomic) long long smartDashesType;
@property (nonatomic) long long smartInsertDeleteType;
@property (nonatomic) long long keyboardType;
@property (nonatomic) long long keyboardAppearance;
@property (nonatomic) long long returnKeyType;
@property (nonatomic) BOOL enablesReturnKeyAutomatically;
@property (nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property (copy, nonatomic) NSString *textContentType;
@property (copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property (copy, nonatomic) NSString *recentInputIdentifier;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } validTextRange;
@property (copy, nonatomic) NSIndexSet *PINEntrySeparatorIndexes;
@property (nonatomic) struct __CFCharacterSet { } *textTrimmingSet;
@property (retain, nonatomic) UIColor *insertionPointColor;
@property (retain, nonatomic) UIColor *selectionBarColor;
@property (retain, nonatomic) UIColor *selectionHighlightColor;
@property (retain, nonatomic) UIImage *selectionDragDotImage;
@property (retain, nonatomic) UIColor *underlineColorForTextAlternatives;
@property (retain, nonatomic) UIColor *underlineColorForSpelling;
@property (nonatomic) unsigned long long insertionPointWidth;
@property (nonatomic) int textLoupeVisibility;
@property (nonatomic) int textSelectionBehavior;
@property (nonatomic) id textSuggestionDelegate;
@property (nonatomic) BOOL isSingleLineDocument;
@property (nonatomic) BOOL contentsIsSingleValue;
@property (nonatomic) BOOL hasDefaultContents;
@property (nonatomic) BOOL acceptsPayloads;
@property (nonatomic) BOOL acceptsEmoji;
@property (nonatomic) BOOL acceptsInitialEmojiKeyboard;
@property (nonatomic) BOOL acceptsDictationSearchResults;
@property (nonatomic) BOOL useAutomaticEndpointing;
@property (nonatomic) BOOL showDictationButton;
@property (nonatomic) BOOL forceEnableDictation;
@property (nonatomic) BOOL forceDisableDictation;
@property (nonatomic) BOOL forceDefaultDictationInfo;
@property (nonatomic) long long forceDictationKeyboardType;
@property (nonatomic) BOOL preferOnlineDictation;
@property (nonatomic) int emptyContentReturnKeyType;
@property (nonatomic) BOOL returnKeyGoesToNextResponder;
@property (nonatomic) BOOL acceptsFloatingKeyboard;
@property (nonatomic) BOOL forceFloatingKeyboard;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } floatingKeyboardEdgeInsets;
@property (nonatomic) BOOL acceptsSplitKeyboard;
@property (nonatomic) BOOL displaySecureTextUsingPlainText;
@property (nonatomic) BOOL displaySecureEditsUsingPlainText;
@property (nonatomic) BOOL learnsCorrections;
@property (nonatomic) int shortcutConversionType;
@property (nonatomic) BOOL suppressReturnKeyStyling;
@property (nonatomic) BOOL useInterfaceLanguageForLocalization;
@property (nonatomic) BOOL deferBecomingResponder;
@property (nonatomic) BOOL enablesReturnKeyOnNonWhiteSpaceContent;
@property (copy, nonatomic) NSString *autocorrectionContext;
@property (copy, nonatomic) NSString *responseContext;
@property (retain, nonatomic) UIInputContextHistory *inputContextHistory;
@property (nonatomic) BOOL disableInputBars;
@property (nonatomic) BOOL isCarPlayIdiom;
@property (nonatomic) long long textScriptType;
@property (nonatomic) BOOL loadKeyboardsForSiriLanguage;
@property (nonatomic) BOOL disablePrediction;
@property (nonatomic) BOOL hidePrediction;
@property (nonatomic, getter=isDevicePasscodeEntry) BOOL devicePasscodeEntry;
@property (readonly, nonatomic) NSString *textContentTypeForTesting;
@property (readonly, nonatomic) NSString *selectFormPopoverTitle;
@property (readonly, nonatomic) NSString *formInputLabel;
@property (readonly, nonatomic) WKDateTimeInputControl *dateTimeInputControl;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) WKBrowsingContextController *browsingContextController;
@property (readonly, nonatomic) struct WebPageProxy { void /* function */ **x0; id x1; void /* function */ **x2; void /* function */ **x3; void /* function */ **x4; void /* function */ **x5; void /* function */ **x6; void /* function */ **x7; struct WeakPtrFactory<WebKit::WebPageProxy, WTF::EmptyCounter> { struct RefPtr<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > { struct WeakPtrImpl<WTF::EmptyCounter> *x0; } x0; } x8; struct RetainPtr<NSArray> { void *x0; } x9; struct ObjectIdentifier<WebKit::WebPageProxyIdentifierType> { unsigned long long x0; } x10; struct ObjectIdentifier<WebCore::PageIdentifierType> { unsigned long long x0; } x11; struct WeakPtr<WebKit::PageClient, WTF::EmptyCounter> { struct RefPtr<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > { struct WeakPtrImpl<WTF::EmptyCounter> *x0; } x0; } x12; struct Ref<API::PageConfiguration, WTF::DumbPtrTraits<API::PageConfiguration> > { struct PageConfiguration *x0; } x13; struct unique_ptr<API::LoaderClient, std::__1::default_delete<API::LoaderClient> > { struct __compressed_pair<API::LoaderClient *, std::__1::default_delete<API::LoaderClient> > { struct LoaderClient *x0; } x0; } x14; struct unique_ptr<API::PolicyClient, std::__1::default_delete<API::PolicyClient> > { struct __compressed_pair<API::PolicyClient *, std::__1::default_delete<API::PolicyClient> > { struct PolicyClient *x0; } x0; } x15; struct UniqueRef<API::NavigationClient> { struct unique_ptr<API::NavigationClient, std::__1::default_delete<API::NavigationClient> > { struct __compressed_pair<API::NavigationClient *, std::__1::default_delete<API::NavigationClient> > { struct NavigationClient *x0; } x0; } x0; } x16; struct UniqueRef<API::HistoryClient> { struct unique_ptr<API::HistoryClient, std::__1::default_delete<API::HistoryClient> > { struct __compressed_pair<API::HistoryClient *, std::__1::default_delete<API::HistoryClient> > { struct HistoryClient *x0; } x0; } x0; } x17; struct unique_ptr<API::IconLoadingClient, std::__1::default_delete<API::IconLoadingClient> > { struct __compressed_pair<API::IconLoadingClient *, std::__1::default_delete<API::IconLoadingClient> > { struct IconLoadingClient *x0; } x0; } x18; struct unique_ptr<API::FormClient, std::__1::default_delete<API::FormClient> > { struct __compressed_pair<API::FormClient *, std::__1::default_delete<API::FormClient> > { struct FormClient *x0; } x0; } x19; struct unique_ptr<API::UIClient, std::__1::default_delete<API::UIClient> > { struct __compressed_pair<API::UIClient *, std::__1::default_delete<API::UIClient> > { struct UIClient *x0; } x0; } x20; struct unique_ptr<API::FindClient, std::__1::default_delete<API::FindClient> > { struct __compressed_pair<API::FindClient *, std::__1::default_delete<API::FindClient> > { struct FindClient *x0; } x0; } x21; struct unique_ptr<API::FindMatchesClient, std::__1::default_delete<API::FindMatchesClient> > { struct __compressed_pair<API::FindMatchesClient *, std::__1::default_delete<API::FindMatchesClient> > { struct FindMatchesClient *x0; } x0; } x22; struct unique_ptr<API::DiagnosticLoggingClient, std::__1::default_delete<API::DiagnosticLoggingClient> > { struct __compressed_pair<API::DiagnosticLoggingClient *, std::__1::default_delete<API::DiagnosticLoggingClient> > { struct DiagnosticLoggingClient *x0; } x0; } x23; struct unique_ptr<API::ResourceLoadClient, std::__1::default_delete<API::ResourceLoadClient> > { struct __compressed_pair<API::ResourceLoadClient *, std::__1::default_delete<API::ResourceLoadClient> > { struct ResourceLoadClient *x0; } x0; } x24; struct unique_ptr<API::InspectorClient, std::__1::default_delete<API::InspectorClient> > { struct __compressed_pair<API::InspectorClient *, std::__1::default_delete<API::InspectorClient> > { struct InspectorClient *x0; } x0; } x25; struct unique_ptr<WebKit::WebPageInjectedBundleClient, std::__1::default_delete<WebKit::WebPageInjectedBundleClient> > { struct __compressed_pair<WebKit::WebPageInjectedBundleClient *, std::__1::default_delete<WebKit::WebPageInjectedBundleClient> > { struct WebPageInjectedBundleClient *x0; } x0; } x26; struct unique_ptr<WebKit::PageLoadState::Observer, std::__1::default_delete<WebKit::PageLoadState::Observer> > { struct __compressed_pair<WebKit::PageLoadState::Observer *, std::__1::default_delete<WebKit::PageLoadState::Observer> > { struct Observer *x0; } x0; } x27; struct unique_ptr<WebKit::WebNavigationState, std::__1::default_delete<WebKit::WebNavigationState> > { struct __compressed_pair<WebKit::WebNavigationState *, std::__1::default_delete<WebKit::WebNavigationState> > { struct WebNavigationState *x0; } x0; } x28; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x29; BOOL x30; struct unique_ptr<WebKit::DrawingAreaProxy, std::__1::default_delete<WebKit::DrawingAreaProxy> > { struct __compressed_pair<WebKit::DrawingAreaProxy *, std::__1::default_delete<WebKit::DrawingAreaProxy> > { struct DrawingAreaProxy *x0; } x0; } x31; struct unique_ptr<WebKit::RemoteLayerTreeHost, std::__1::default_delete<WebKit::RemoteLayerTreeHost> > { struct __compressed_pair<WebKit::RemoteLayerTreeHost *, std::__1::default_delete<WebKit::RemoteLayerTreeHost> > { struct RemoteLayerTreeHost *x0; } x0; } x32; struct unique_ptr<WebKit::RemoteScrollingCoordinatorProxy, std::__1::default_delete<WebKit::RemoteScrollingCoordinatorProxy> > { struct __compressed_pair<WebKit::RemoteScrollingCoordinatorProxy *, std::__1::default_delete<WebKit::RemoteScrollingCoordinatorProxy> > { struct RemoteScrollingCoordinatorProxy *x0; } x0; } x33; struct Ref<WebKit::WebProcessProxy, WTF::DumbPtrTraits<WebKit::WebProcessProxy> > { struct WebProcessProxy *x0; } x34; struct Ref<WebKit::WebPageGroup, WTF::DumbPtrTraits<WebKit::WebPageGroup> > { struct WebPageGroup *x0; } x35; struct Ref<WebKit::WebPreferences, WTF::DumbPtrTraits<WebKit::WebPreferences> > { struct WebPreferences *x0; } x36; struct Ref<WebKit::WebUserContentControllerProxy, WTF::DumbPtrTraits<WebKit::WebUserContentControllerProxy> > { struct WebUserContentControllerProxy *x0; } x37; struct Ref<WebKit::VisitedLinkStore, WTF::DumbPtrTraits<WebKit::VisitedLinkStore> > { struct VisitedLinkStore *x0; } x38; struct Ref<WebKit::WebsiteDataStore, WTF::DumbPtrTraits<WebKit::WebsiteDataStore> > { struct WebsiteDataStore *x0; } x39; struct RefPtr<WebKit::WebFrameProxy, WTF::DumbPtrTraits<WebKit::WebFrameProxy> > { struct WebFrameProxy *x0; } x40; struct RefPtr<WebKit::WebFrameProxy, WTF::DumbPtrTraits<WebKit::WebFrameProxy> > { struct WebFrameProxy *x0; } x41; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x42; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x43; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x44; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x45; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x46; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x47; struct RefPtr<WebKit::WebInspectorProxy, WTF::DumbPtrTraits<WebKit::WebInspectorProxy> > { struct WebInspectorProxy *x0; } x48; struct unique_ptr<WebKit::WebFullScreenManagerProxy, std::__1::default_delete<WebKit::WebFullScreenManagerProxy> > { struct __compressed_pair<WebKit::WebFullScreenManagerProxy *, std::__1::default_delete<WebKit::WebFullScreenManagerProxy> > { struct WebFullScreenManagerProxy *x0; } x0; } x49; struct unique_ptr<API::FullscreenClient, std::__1::default_delete<API::FullscreenClient> > { struct __compressed_pair<API::FullscreenClient *, std::__1::default_delete<API::FullscreenClient> > { struct FullscreenClient *x0; } x0; } x50; struct RefPtr<WebKit::PlaybackSessionManagerProxy, WTF::DumbPtrTraits<WebKit::PlaybackSessionManagerProxy> > { struct PlaybackSessionManagerProxy *x0; } x51; struct RefPtr<WebKit::VideoFullscreenManagerProxy, WTF::DumbPtrTraits<WebKit::VideoFullscreenManagerProxy> > { struct VideoFullscreenManagerProxy *x0; } x52; BOOL x53; struct Optional<WebCore::InputMode> { BOOL x0; union constexpr_storage_t<WebCore::InputMode> { unsigned char x0; unsigned char x1; } x1; } x54; struct MonotonicObjectIdentifier<WebKit::TransactionIDType> { unsigned long long x0; } x55; int x56; BOOL x57; BOOL x58; BOOL x59; BOOL x60; struct VisibleContentRectUpdateInfo { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; struct RectEdges<float> { struct array<float, 4> { float x0[4]; } x0; } x2; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x3; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x4; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x5; struct RectEdges<float> { struct array<float, 4> { float x0[4]; } x0; } x6; struct RectEdges<float> { struct array<float, 4> { float x0[4]; } x0; } x7; struct VelocityData { float x0; float x1; float x2; struct MonotonicTime { double x0; } x3; } x8; struct MonotonicObjectIdentifier<WebKit::TransactionIDType> { unsigned long long x0; } x9; double x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; } x61; struct unique_ptr<WebKit::WebPaymentCoordinatorProxy, std::__1::default_delete<WebKit::WebPaymentCoordinatorProxy> > { struct __compressed_pair<WebKit::WebPaymentCoordinatorProxy *, std::__1::default_delete<WebKit::WebPaymentCoordinatorProxy> > { struct WebPaymentCoordinatorProxy *x0; } x0; } x62; struct unique_ptr<WebKit::SystemPreviewController, std::__1::default_delete<WebKit::SystemPreviewController> > { struct __compressed_pair<WebKit::SystemPreviewController *, std::__1::default_delete<WebKit::SystemPreviewController> > { struct SystemPreviewController *x0; } x0; } x63; struct unique_ptr<WebKit::WebAuthenticatorCoordinatorProxy, std::__1::default_delete<WebKit::WebAuthenticatorCoordinatorProxy> > { struct __compressed_pair<WebKit::WebAuthenticatorCoordinatorProxy *, std::__1::default_delete<WebKit::WebAuthenticatorCoordinatorProxy> > { struct WebAuthenticatorCoordinatorProxy *x0; } x0; } x64; struct CallbackMap { struct HashMap<unsigned long long, WTF::RefPtr<WebKit::CallbackBase, WTF::DumbPtrTraits<WebKit::CallbackBase> >, WTF::DefaultHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WTF::RefPtr<WebKit::CallbackBase, WTF::DumbPtrTraits<WebKit::CallbackBase> > > > { struct HashTable<unsigned long long, WTF::KeyValuePair<unsigned long long, WTF::RefPtr<WebKit::CallbackBase, WTF::DumbPtrTraits<WebKit::CallbackBase> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long long, WTF::RefPtr<WebKit::CallbackBase, WTF::DumbPtrTraits<WebKit::CallbackBase> > > >, WTF::DefaultHash<unsigned long long>, WTF::HashMap<unsigned long long, WTF::RefPtr<WebKit::CallbackBase, WTF::DumbPtrTraits<WebKit::CallbackBase> >, WTF::DefaultHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WTF::RefPtr<WebKit::CallbackBase, WTF::DumbPtrTraits<WebKit::CallbackBase> > > >::KeyValuePairTraits, WTF::HashTraits<unsigned long long> > { struct KeyValuePair<unsigned long long, WTF::RefPtr<WebKit::CallbackBase, WTF::DumbPtrTraits<WebKit::CallbackBase> > > *x0; } x0; } x0; } x65; struct HashSet<WebKit::CallbackID, WTF::DefaultHash<WebKit::CallbackID>, WTF::HashTraits<WebKit::CallbackID> > { struct HashTable<WebKit::CallbackID, WebKit::CallbackID, WTF::IdentityExtractor, WTF::DefaultHash<WebKit::CallbackID>, WTF::HashTraits<WebKit::CallbackID>, WTF::HashTraits<WebKit::CallbackID> > { struct CallbackID *x0; } x0; } x66; struct HashSet<WebKit::WebEditCommandProxy *, WTF::DefaultHash<WebKit::WebEditCommandProxy *>, WTF::HashTraits<WebKit::WebEditCommandProxy *> > { struct HashTable<WebKit::WebEditCommandProxy *, WebKit::WebEditCommandProxy *, WTF::IdentityExtractor, WTF::DefaultHash<WebKit::WebEditCommandProxy *>, WTF::HashTraits<WebKit::WebEditCommandProxy *>, WTF::HashTraits<WebKit::WebEditCommandProxy *> > { struct WebEditCommandProxy **x0; } x0; } x67; struct HashSet<WTF::String, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String> > { struct HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> > { struct String *x0; } x0; } x68; struct RefPtr<WebKit::WebPopupMenuProxy, WTF::DumbPtrTraits<WebKit::WebPopupMenuProxy> > { struct WebPopupMenuProxy *x0; } x69; struct RefPtr<API::HitTestResult, WTF::DumbPtrTraits<API::HitTestResult> > { struct HitTestResult *x0; } x70; struct RefPtr<WebKit::WebOpenPanelResultListenerProxy, WTF::DumbPtrTraits<WebKit::WebOpenPanelResultListenerProxy> > { struct WebOpenPanelResultListenerProxy *x0; } x71; struct GeolocationPermissionRequestManagerProxy { struct HashMap<WTF::ObjectIdentifier<WebKit::GeolocationIdentifierType>, WTF::RefPtr<WebKit::GeolocationPermissionRequestProxy, WTF::DumbPtrTraits<WebKit::GeolocationPermissionRequestProxy> >, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::GeolocationIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::GeolocationIdentifierType> >, WTF::HashTraits<WTF::RefPtr<WebKit::GeolocationPermissionRequestProxy, WTF::DumbPtrTraits<WebKit::GeolocationPermissionRequestProxy> > > > { struct HashTable<WTF::ObjectIdentifier<WebKit::GeolocationIdentifierType>, WTF::KeyValuePair<WTF::ObjectIdentifier<WebKit::GeolocationIdentifierType>, WTF::RefPtr<WebKit::GeolocationPermissionRequestProxy, WTF::DumbPtrTraits<WebKit::GeolocationPermissionRequestProxy> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::ObjectIdentifier<WebKit::GeolocationIdentifierType>, WTF::RefPtr<WebKit::GeolocationPermissionRequestProxy, WTF::DumbPtrTraits<WebKit::GeolocationPermissionRequestProxy> > > >, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::GeolocationIdentifierType> >, WTF::HashMap<WTF::ObjectIdentifier<WebKit::GeolocationIdentifierType>, WTF::RefPtr<WebKit::GeolocationPermissionRequestProxy, WTF::DumbPtrTraits<WebKit::GeolocationPermissionRequestProxy> >, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::GeolocationIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::GeolocationIdentifierType> >, WTF::HashTraits<WTF::RefPtr<WebKit::GeolocationPermissionRequestProxy, WTF::DumbPtrTraits<WebKit::GeolocationPermissionRequestProxy> > > >::KeyValuePairTraits, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::GeolocationIdentifierType> > > { struct KeyValuePair<WTF::ObjectIdentifier<WebKit::GeolocationIdentifierType>, WTF::RefPtr<WebKit::GeolocationPermissionRequestProxy, WTF::DumbPtrTraits<WebKit::GeolocationPermissionRequestProxy> > > *x0; } x0; } x0; struct HashSet<WTF::String, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String> > { struct HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> > { struct String *x0; } x0; } x1; struct WebPageProxy *x2; } x72; struct NotificationPermissionRequestManagerProxy { struct HashMap<unsigned long long, WTF::RefPtr<WebKit::NotificationPermissionRequest, WTF::DumbPtrTraits<WebKit::NotificationPermissionRequest> >, WTF::DefaultHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WTF::RefPtr<WebKit::NotificationPermissionRequest, WTF::DumbPtrTraits<WebKit::NotificationPermissionRequest> > > > { struct HashTable<unsigned long long, WTF::KeyValuePair<unsigned long long, WTF::RefPtr<WebKit::NotificationPermissionRequest, WTF::DumbPtrTraits<WebKit::NotificationPermissionRequest> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long long, WTF::RefPtr<WebKit::NotificationPermissionRequest, WTF::DumbPtrTraits<WebKit::NotificationPermissionRequest> > > >, WTF::DefaultHash<unsigned long long>, WTF::HashMap<unsigned long long, WTF::RefPtr<WebKit::NotificationPermissionRequest, WTF::DumbPtrTraits<WebKit::NotificationPermissionRequest> >, WTF::DefaultHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WTF::RefPtr<WebKit::NotificationPermissionRequest, WTF::DumbPtrTraits<WebKit::NotificationPermissionRequest> > > >::KeyValuePairTraits, WTF::HashTraits<unsigned long long> > { struct KeyValuePair<unsigned long long, WTF::RefPtr<WebKit::NotificationPermissionRequest, WTF::DumbPtrTraits<WebKit::NotificationPermissionRequest> > > *x0; } x0; } x0; struct WebPageProxy *x1; } x73; struct unique_ptr<WebKit::UserMediaPermissionRequestManagerProxy, std::__1::default_delete<WebKit::UserMediaPermissionRequestManagerProxy> > { struct __compressed_pair<WebKit::UserMediaPermissionRequestManagerProxy *, std::__1::default_delete<WebKit::UserMediaPermissionRequestManagerProxy> > { struct UserMediaPermissionRequestManagerProxy *x0; } x0; } x74; struct OptionSet<WebCore::ActivityState::Flag> { unsigned int x0; } x75; BOOL x76; BOOL x77; struct unique_ptr<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground>, std::__1::default_delete<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> > > { struct __compressed_pair<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> *, std::__1::default_delete<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> > > { struct Activity<WebKit::ProcessThrottler::ActivityType::Foreground> *x0; } x0; } x78; struct unique_ptr<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground>, std::__1::default_delete<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> > > { struct __compressed_pair<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> *, std::__1::default_delete<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> > > { struct Activity<WebKit::ProcessThrottler::ActivityType::Foreground> *x0; } x0; } x79; struct unique_ptr<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground>, std::__1::default_delete<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> > > { struct __compressed_pair<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> *, std::__1::default_delete<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> > > { struct Activity<WebKit::ProcessThrottler::ActivityType::Foreground> *x0; } x0; } x80; struct Timer<WebKit::WebPageProxy> { void /* function */ **x0; struct Ref<WTF::RunLoop, WTF::DumbPtrTraits<WTF::RunLoop> > { struct RunLoop *x0; } x1; struct RetainPtr<__CFRunLoopTimer *> { void *x0; } x2; struct WebPageProxy *x3; } x81; struct unique_ptr<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background>, std::__1::default_delete<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> > > { struct __compressed_pair<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> *, std::__1::default_delete<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> > > { struct Activity<WebKit::ProcessThrottler::ActivityType::Background> *x0; } x0; } x82; BOOL x83; struct Optional<double> { BOOL x0; union constexpr_storage_t<double> { unsigned char x0; double x1; } x1; } x84; struct Ref<WebKit::WebBackForwardList, WTF::DumbPtrTraits<WebKit::WebBackForwardList> > { struct WebBackForwardList *x0; } x85; BOOL x86; BOOL x87; BOOL x88; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x89; struct EditorState { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; struct PostLayoutData { unsigned int x0; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x1; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x2; unsigned long long x3; unsigned int x4; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x5; unsigned int x6; unsigned char x7; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x8; struct Vector<WebCore::SelectionRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct SelectionRect *x0; unsigned int x1; unsigned int x2; } x9; struct Vector<WebCore::SelectionRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct SelectionRect *x0; unsigned int x1; unsigned int x2; } x10; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x11; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x12; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x13; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x14; int x15; int x16; int x17; struct Vector<WTF::ObjectIdentifier<WebCore::DictationContextType>, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct ObjectIdentifier<WebCore::DictationContextType> *x0; unsigned int x1; unsigned int x2; } x18; BOOL x19; BOOL x20; BOOL x21; BOOL x22; BOOL x23; BOOL x24; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x25; BOOL x26; BOOL x27; BOOL x28; struct Optional<WebCore::FontAttributes> { BOOL x0; union storage_t<WebCore::FontAttributes> { unsigned char x0; struct FontAttributes { struct RetainPtr<UIFont> { void *x0; } x0; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x1; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x2; struct FontShadow { struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x0; struct FloatSize { float x0; float x1; } x1; double x2; } x3; unsigned char x4; unsigned char x5; struct Vector<WebCore::TextList, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct TextList *x0; unsigned int x1; unsigned int x2; } x6; BOOL x7; BOOL x8; } x1; } x1; } x29; BOOL x30; BOOL x31; BOOL x32; } x10; } x90; BOOL x91; double x92; double x93; double x94; double x95; double x96; double x97; float x98; struct Optional<float> { BOOL x0; union constexpr_storage_t<float> { unsigned char x0; float x1; } x1; } x99; float x100; unsigned char x101; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x102; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x103; BOOL x104; struct IntSize { int x0; int x1; } x105; struct Optional<WebCore::FloatRect> { BOOL x0; union constexpr_storage_t<WebCore::FloatRect> { unsigned char x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; } x1; } x106; BOOL x107; BOOL x108; struct OptionSet<WebCore::LayoutMilestone> { unsigned int x0; } x109; BOOL x110; unsigned char x111; BOOL x112; double x113; double x114; BOOL x115; BOOL x116; BOOL x117; BOOL x118; BOOL x119; BOOL x120; struct ResourceRequest { struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x0; double x1; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x2; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x3; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x4; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x5; struct HTTPHeaderMap { struct Vector<WebCore::HTTPHeaderMap::CommonHeader, 0, WTF::CrashOnOverflow, 6, WTF::FastMalloc> { struct CommonHeader *x0; unsigned int x1; unsigned int x2; } x0; struct Vector<WebCore::HTTPHeaderMap::UncommonHeader, 0, WTF::CrashOnOverflow, 0, WTF::FastMalloc> { struct UncommonHeader *x0; unsigned int x1; unsigned int x2; } x1; } x6; struct Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct String *x0; unsigned int x1; unsigned int x2; } x7; struct RefPtr<WebCore::FormData, WTF::DumbPtrTraits<WebCore::FormData> > { struct FormData *x0; } x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; struct Optional<int> { BOOL x0; union constexpr_storage_t<int> { unsigned char x0; int x1; } x1; } x13; unsigned char x14 : 1; unsigned char x15 : 1; unsigned char x16 : 1; unsigned char x17 : 1; unsigned char x18 : 1; unsigned char x19 : 1; unsigned char x20 : 1; struct Optional<WebCore::SystemPreviewInfo> { BOOL x0; union constexpr_storage_t<WebCore::SystemPreviewInfo> { unsigned char x0; struct SystemPreviewInfo { struct ElementContext { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct ObjectIdentifier<WebCore::PageIdentifierType> { unsigned long long x0; } x1; struct ObjectIdentifier<WebCore::DocumentIdentifierType> { unsigned long long x0; } x2; struct ObjectIdentifier<WebCore::ElementIdentifierType> { unsigned long long x0; } x3; } x0; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x1; BOOL x2; } x1; } x1; } x21; struct RetainPtr<NSURLRequest> { void *x0; } x22; } x121; BOOL x122; BOOL x123; BOOL x124; struct Deque<WebKit::NativeWebMouseEvent, 0> { unsigned long long x0; unsigned long long x1; struct VectorBuffer<WebKit::NativeWebMouseEvent, 0, WTF::FastMalloc> { struct NativeWebMouseEvent *x0; unsigned int x1; unsigned int x2; } x2; } x125; struct Deque<WebKit::NativeWebKeyboardEvent, 0> { unsigned long long x0; unsigned long long x1; struct VectorBuffer<WebKit::NativeWebKeyboardEvent, 0, WTF::FastMalloc> { struct NativeWebKeyboardEvent *x0; unsigned int x1; unsigned int x2; } x2; } x126; struct Deque<WebKit::NativeWebWheelEvent, 0> { unsigned long long x0; unsigned long long x1; struct VectorBuffer<WebKit::NativeWebWheelEvent, 0, WTF::FastMalloc> { struct NativeWebWheelEvent *x0; unsigned int x1; unsigned int x2; } x2; } x127; struct Deque<std::__1::unique_ptr<WTF::Vector<WebKit::NativeWebWheelEvent, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>, std::__1::default_delete<WTF::Vector<WebKit::NativeWebWheelEvent, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> > >, 0> { unsigned long long x0; unsigned long long x1; struct VectorBuffer<std::__1::unique_ptr<WTF::Vector<WebKit::NativeWebWheelEvent, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>, std::__1::default_delete<WTF::Vector<WebKit::NativeWebWheelEvent, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> > >, 0, WTF::FastMalloc> { struct unique_ptr<WTF::Vector<WebKit::NativeWebWheelEvent, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>, std::__1::default_delete<WTF::Vector<WebKit::NativeWebWheelEvent, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> > > *x0; unsigned int x1; unsigned int x2; } x2; } x128; struct Vector<WTF::Function<void ()>, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct Function<void ()> *x0; unsigned int x1; unsigned int x2; } x129; struct TouchEventTracking { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; } x130; BOOL x131; unsigned long long x132; struct RefPtr<WebKit::WebColorPicker, WTF::DumbPtrTraits<WebKit::WebColorPicker> > { struct WebColorPicker *x0; } x133; struct RefPtr<WebKit::WebDataListSuggestionsDropdown, WTF::DumbPtrTraits<WebKit::WebDataListSuggestionsDropdown> > { struct WebDataListSuggestionsDropdown *x0; } x134; struct RefPtr<WebCore::ValidationBubble, WTF::DumbPtrTraits<WebCore::ValidationBubble> > { struct ValidationBubble *x0; } x135; BOOL x136; BOOL x137; BOOL x138; unsigned int x139; BOOL x140; struct Optional<WebCore::Color> { BOOL x0; union storage_t<WebCore::Color> { unsigned char x0; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x1; } x1; } x141; unsigned int x142; BOOL x143; struct Optional<WebCore::DragOperation> { BOOL x0; union constexpr_storage_t<WebCore::DragOperation> { unsigned char x0; unsigned char x1; } x1; } x144; unsigned char x145; BOOL x146; unsigned int x147; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x148; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x149; struct PageLoadState { struct Vector<WebKit::PageLoadState::Observer *, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct Observer **x0; unsigned int x1; unsigned int x2; } x0; struct WebPageProxy *x1; struct Data { int x0; BOOL x1; BOOL x2; struct PendingAPIRequest { unsigned long long x0; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x1; } x3; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x4; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x5; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x6; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x7; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x8; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x9; BOOL x10; BOOL x11; double x12; BOOL x13; struct RefPtr<WebKit::WebCertificateInfo, WTF::DumbPtrTraits<WebKit::WebCertificateInfo> > { struct WebCertificateInfo *x0; } x14; } x2; struct Data { int x0; BOOL x1; BOOL x2; struct PendingAPIRequest { unsigned long long x0; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x1; } x3; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x4; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x5; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x6; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x7; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x8; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x9; BOOL x10; BOOL x11; double x12; BOOL x13; struct RefPtr<WebKit::WebCertificateInfo, WTF::DumbPtrTraits<WebKit::WebCertificateInfo> > { struct WebCertificateInfo *x0; } x14; } x3; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x4; BOOL x5; unsigned int x6; } x150; BOOL x151; BOOL x152; BOOL x153; BOOL x154; BOOL x155; BOOL x156; BOOL x157; BOOL x158; BOOL x159; BOOL x160; BOOL x161; BOOL x162; BOOL x163; BOOL x164; BOOL x165; BOOL x166; BOOL x167; BOOL x168; BOOL x169; unsigned int x170; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x171; unsigned long long x172; unsigned long long x173; BOOL x174; BOOL x175; BOOL x176; struct IntSize { int x0; int x1; } x177; struct IntSize { int x0; int x1; } x178; struct Optional<WebCore::IntSize> { BOOL x0; union constexpr_storage_t<WebCore::IntSize> { unsigned char x0; struct IntSize { int x0; int x1; } x1; } x1; } x179; struct LayoutSize { struct LayoutUnit { int x0; } x0; struct LayoutUnit { int x0; } x1; } x180; struct LayoutPoint { struct LayoutUnit { int x0; } x0; struct LayoutUnit { int x0; } x1; } x181; struct LayoutPoint { struct LayoutUnit { int x0; } x0; struct LayoutUnit { int x0; } x1; } x182; float x183; unsigned int x184; BOOL x185; BOOL x186; BOOL x187; BOOL x188; BOOL x189; BOOL x190; struct HashMap<WTF::String, WTF::String, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> > { struct HashTable<WTF::String, WTF::KeyValuePair<WTF::String, WTF::String>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, WTF::String> >, WTF::DefaultHash<WTF::String>, WTF::HashMap<WTF::String, WTF::String, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >::KeyValuePairTraits, WTF::HashTraits<WTF::String> > { struct KeyValuePair<WTF::String, WTF::String> *x0; } x0; } x191; struct unique_ptr<WebCore::RunLoopObserver, std::__1::default_delete<WebCore::RunLoopObserver> > { struct __compressed_pair<WebCore::RunLoopObserver *, std::__1::default_delete<WebCore::RunLoopObserver> > { struct RunLoopObserver *x0; } x0; } x192; struct unique_ptr<WebKit::RemoteLayerTreeScrollingPerformanceData, std::__1::default_delete<WebKit::RemoteLayerTreeScrollingPerformanceData> > { struct __compressed_pair<WebKit::RemoteLayerTreeScrollingPerformanceData *, std::__1::default_delete<WebKit::RemoteLayerTreeScrollingPerformanceData> > { struct RemoteLayerTreeScrollingPerformanceData *x0; } x0; } x193; BOOL x194; struct RefPtr<WTF::RefCounter<WebKit::UserObservablePageCounterType>::Count, WTF::DumbPtrTraits<WTF::RefCounter<WebKit::UserObservablePageCounterType>::Count> > { struct Count *x0; } x195; struct RefPtr<WTF::RefCounter<WebKit::ProcessSuppressionDisabledCounterType>::Count, WTF::DumbPtrTraits<WTF::RefCounter<WebKit::ProcessSuppressionDisabledCounterType>::Count> > { struct Count *x0; } x196; struct RefPtr<WTF::RefCounter<WebKit::HiddenPageThrottlingAutoIncreasesCounterType>::Count, WTF::DumbPtrTraits<WTF::RefCounter<WebKit::HiddenPageThrottlingAutoIncreasesCounterType>::Count> > { struct Count *x0; } x197; struct RefPtr<WTF::RefCounter<WebKit::VisibleWebPageCounterType>::Count, WTF::DumbPtrTraits<WTF::RefCounter<WebKit::VisibleWebPageCounterType>::Count> > { struct Count *x0; } x198; unsigned char x199; struct Optional<WebCore::ScrollbarOverlayStyle> { BOOL x0; union constexpr_storage_t<WebCore::ScrollbarOverlayStyle> { unsigned char x0; unsigned char x1; } x1; } x200; unsigned long long x201; struct OptionSet<WebCore::ActivityState::Flag> { unsigned int x0; } x202; BOOL x203; struct Vector<WebKit::CallbackID, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct CallbackID *x0; unsigned int x1; unsigned int x2; } x204; unsigned int x205; unsigned int x206; struct DeferrableTaskTimer { void /* function */ **x0; struct MonotonicTime { double x0; } x1; struct Seconds { double x0; } x2; struct RefPtr<WebCore::ThreadTimerHeapItem, WTF::DumbPtrTraits<WebCore::ThreadTimerHeapItem> > { struct ThreadTimerHeapItem *x0; } x3; struct Ref<WTF::Thread, WTF::DumbPtrTraits<WTF::Thread> > { struct Thread *x0; } x4; struct Function<void ()> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void> > > { struct CallableWrapperBase<void> *x0; } x0; } x0; } x5; } x207; struct Seconds { double x0; } x208; BOOL x209; BOOL x210; struct FloatSize { float x0; float x1; } x211; double x212; double x213; struct Optional<WebCore::ViewportArguments> { BOOL x0; union constexpr_storage_t<WebCore::ViewportArguments> { unsigned char x0; struct ViewportArguments { int x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; int x13; BOOL x14; } x1; } x1; } x214; struct Function<bool ()> { struct unique_ptr<WTF::Detail::CallableWrapperBase<bool>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<bool> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<bool> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<bool> > > { struct CallableWrapperBase<bool> *x0; } x0; } x0; } x215; BOOL x216; struct FloatSize { float x0; float x1; } x217; BOOL x218; struct Optional<WebCore::FontAttributes> { BOOL x0; union storage_t<WebCore::FontAttributes> { unsigned char x0; struct FontAttributes { struct RetainPtr<UIFont> { void *x0; } x0; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x1; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x2; struct FontShadow { struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x0; struct FloatSize { float x0; float x1; } x1; double x2; } x3; unsigned char x4; unsigned char x5; struct Vector<WebCore::TextList, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct TextList *x0; unsigned int x1; unsigned int x2; } x6; BOOL x7; BOOL x8; } x1; } x1; } x219; BOOL x220; BOOL x221; BOOL x222; BOOL x223; struct HashMap<WTF::String, WTF::Ref<WebKit::WebURLSchemeHandler, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandler> >, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::Ref<WebKit::WebURLSchemeHandler, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandler> > > > { struct HashTable<WTF::String, WTF::KeyValuePair<WTF::String, WTF::Ref<WebKit::WebURLSchemeHandler, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandler> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, WTF::Ref<WebKit::WebURLSchemeHandler, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandler> > > >, WTF::DefaultHash<WTF::String>, WTF::HashMap<WTF::String, WTF::Ref<WebKit::WebURLSchemeHandler, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandler> >, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::Ref<WebKit::WebURLSchemeHandler, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandler> > > >::KeyValuePairTraits, WTF::HashTraits<WTF::String> > { struct KeyValuePair<WTF::String, WTF::Ref<WebKit::WebURLSchemeHandler, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandler> > > *x0; } x0; } x224; struct HashMap<unsigned long long, WTF::Ref<WebKit::WebURLSchemeHandler, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandler> >, WTF::DefaultHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WTF::Ref<WebKit::WebURLSchemeHandler, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandler> > > > { struct HashTable<unsigned long long, WTF::KeyValuePair<unsigned long long, WTF::Ref<WebKit::WebURLSchemeHandler, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandler> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long long, WTF::Ref<WebKit::WebURLSchemeHandler, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandler> > > >, WTF::DefaultHash<unsigned long long>, WTF::HashMap<unsigned long long, WTF::Ref<WebKit::WebURLSchemeHandler, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandler> >, WTF::DefaultHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WTF::Ref<WebKit::WebURLSchemeHandler, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandler> > > >::KeyValuePairTraits, WTF::HashTraits<unsigned long long> > { struct KeyValuePair<unsigned long long, WTF::Ref<WebKit::WebURLSchemeHandler, WTF::DumbPtrTraits<WebKit::WebURLSchemeHandler> > > *x0; } x0; } x225; struct HashMap<WTF::String, WTF::Ref<API::Attachment, WTF::DumbPtrTraits<API::Attachment> >, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::Ref<API::Attachment, WTF::DumbPtrTraits<API::Attachment> > > > { struct HashTable<WTF::String, WTF::KeyValuePair<WTF::String, WTF::Ref<API::Attachment, WTF::DumbPtrTraits<API::Attachment> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, WTF::Ref<API::Attachment, WTF::DumbPtrTraits<API::Attachment> > > >, WTF::DefaultHash<WTF::String>, WTF::HashMap<WTF::String, WTF::Ref<API::Attachment, WTF::DumbPtrTraits<API::Attachment> >, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::Ref<API::Attachment, WTF::DumbPtrTraits<API::Attachment> > > >::KeyValuePairTraits, WTF::HashTraits<WTF::String> > { struct KeyValuePair<WTF::String, WTF::Ref<API::Attachment, WTF::DumbPtrTraits<API::Attachment> > > *x0; } x0; } x226; struct unique_ptr<WebKit::WebPageInspectorController, std::__1::default_delete<WebKit::WebPageInspectorController> > { struct __compressed_pair<WebKit::WebPageInspectorController *, std::__1::default_delete<WebKit::WebPageInspectorController> > { struct WebPageInspectorController *x0; } x0; } x227; struct unique_ptr<WebKit::WebPageDebuggable, std::__1::default_delete<WebKit::WebPageDebuggable> > { struct __compressed_pair<WebKit::WebPageDebuggable *, std::__1::default_delete<WebKit::WebPageDebuggable> > { struct WebPageDebuggable *x0; } x0; } x228; struct Optional<long long> { BOOL x0; union constexpr_storage_t<long long> { unsigned char x0; long long x1; } x1; } x229; struct Optional<WTF::MonotonicTime> { BOOL x0; union constexpr_storage_t<WTF::MonotonicTime> { unsigned char x0; struct MonotonicTime { double x0; } x1; } x1; } x230; struct HashSet<WTF::String, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String> > { struct HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> > { struct String *x0; } x0; } x231; struct Timer<WebKit::WebPageProxy> { void /* function */ **x0; struct Ref<WTF::RunLoop, WTF::DumbPtrTraits<WTF::RunLoop> > { struct RunLoop *x0; } x1; struct RetainPtr<__CFRunLoopTimer *> { void *x0; } x2; struct WebPageProxy *x3; } x232; unsigned int x233; BOOL x234; BOOL x235; struct Timer<WebKit::WebPageProxy> { void /* function */ **x0; struct Ref<WTF::RunLoop, WTF::DumbPtrTraits<WTF::RunLoop> > { struct RunLoop *x0; } x1; struct RetainPtr<__CFRunLoopTimer *> { void *x0; } x2; struct WebPageProxy *x3; } x236; struct unique_ptr<WebKit::ProvisionalPageProxy, std::__1::default_delete<WebKit::ProvisionalPageProxy> > { struct __compressed_pair<WebKit::ProvisionalPageProxy *, std::__1::default_delete<WebKit::ProvisionalPageProxy> > { struct ProvisionalPageProxy *x0; } x0; } x237; struct unique_ptr<WebKit::SuspendedPageProxy, std::__1::default_delete<WebKit::SuspendedPageProxy> > { struct __compressed_pair<WebKit::SuspendedPageProxy *, std::__1::default_delete<WebKit::SuspendedPageProxy> > { struct SuspendedPageProxy *x0; } x0; } x238; struct WeakPtr<WebKit::SuspendedPageProxy, WTF::EmptyCounter> { struct RefPtr<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > { struct WeakPtrImpl<WTF::EmptyCounter> *x0; } x0; } x239; struct Function<void (const WTF::Vector<WebCore::TextManipulationController::ManipulationItem, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> &)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, const WTF::Vector<WebCore::TextManipulationController::ManipulationItem, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> &>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, const WTF::Vector<WebCore::TextManipulationController::ManipulationItem, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> &> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, const WTF::Vector<WebCore::TextManipulationController::ManipulationItem, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> &> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, const WTF::Vector<WebCore::TextManipulationController::ManipulationItem, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> &> > > { struct CallableWrapperBase<void, const WTF::Vector<WebCore::TextManipulationController::ManipulationItem, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> &> *x0; } x0; } x0; } x240; unsigned int x241; struct HashMap<WebKit::WebViewDidMoveToWindowObserver *, WTF::WeakPtr<WebKit::WebViewDidMoveToWindowObserver, WTF::EmptyCounter>, WTF::DefaultHash<WebKit::WebViewDidMoveToWindowObserver *>, WTF::HashTraits<WebKit::WebViewDidMoveToWindowObserver *>, WTF::HashTraits<WTF::WeakPtr<WebKit::WebViewDidMoveToWindowObserver, WTF::EmptyCounter> > > { struct HashTable<WebKit::WebViewDidMoveToWindowObserver *, WTF::KeyValuePair<WebKit::WebViewDidMoveToWindowObserver *, WTF::WeakPtr<WebKit::WebViewDidMoveToWindowObserver, WTF::EmptyCounter> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebKit::WebViewDidMoveToWindowObserver *, WTF::WeakPtr<WebKit::WebViewDidMoveToWindowObserver, WTF::EmptyCounter> > >, WTF::DefaultHash<WebKit::WebViewDidMoveToWindowObserver *>, WTF::HashMap<WebKit::WebViewDidMoveToWindowObserver *, WTF::WeakPtr<WebKit::WebViewDidMoveToWindowObserver, WTF::EmptyCounter>, WTF::DefaultHash<WebKit::WebViewDidMoveToWindowObserver *>, WTF::HashTraits<WebKit::WebViewDidMoveToWindowObserver *>, WTF::HashTraits<WTF::WeakPtr<WebKit::WebViewDidMoveToWindowObserver, WTF::EmptyCounter> > >::KeyValuePairTraits, WTF::HashTraits<WebKit::WebViewDidMoveToWindowObserver *> > { struct KeyValuePair<WebKit::WebViewDidMoveToWindowObserver *, WTF::WeakPtr<WebKit::WebViewDidMoveToWindowObserver, WTF::EmptyCounter> > *x0; } x0; } x242; struct RefPtr<WTF::Logger, WTF::DumbPtrTraits<WTF::Logger> > { struct Logger *x0; } x243; struct Optional<WebKit::WebPageProxy::SpeechSynthesisData> { BOOL x0; union storage_t<WebKit::WebPageProxy::SpeechSynthesisData> { unsigned char x0; struct SpeechSynthesisData { struct unique_ptr<WebCore::PlatformSpeechSynthesizer, std::__1::default_delete<WebCore::PlatformSpeechSynthesizer> > { struct __compressed_pair<WebCore::PlatformSpeechSynthesizer *, std::__1::default_delete<WebCore::PlatformSpeechSynthesizer> > { struct PlatformSpeechSynthesizer *x0; } x0; } x0; struct RefPtr<WebCore::PlatformSpeechSynthesisUtterance, WTF::DumbPtrTraits<WebCore::PlatformSpeechSynthesisUtterance> > { struct PlatformSpeechSynthesisUtterance *x0; } x1; struct CompletionHandler<void ()> { struct Function<void ()> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void> > > { struct CallableWrapperBase<void> *x0; } x0; } x0; } x0; } x2; struct CompletionHandler<void ()> { struct Function<void ()> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void> > > { struct CallableWrapperBase<void> *x0; } x0; } x0; } x0; } x3; struct CompletionHandler<void ()> { struct Function<void ()> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void> > > { struct CallableWrapperBase<void> *x0; } x0; } x0; } x0; } x4; struct CompletionHandler<void ()> { struct Function<void ()> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void> > > { struct CallableWrapperBase<void> *x0; } x0; } x0; } x0; } x5; } x1; } x1; } x244; BOOL x245; BOOL x246; BOOL x247; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x248; struct Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct String *x0; unsigned int x1; unsigned int x2; } x249; struct Vector<WebKit::WebPageProxy::InjectedBundleMessage, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct InjectedBundleMessage *x0; unsigned int x1; unsigned int x2; } x250; struct unique_ptr<WebKit::WebDeviceOrientationUpdateProviderProxy, std::__1::default_delete<WebKit::WebDeviceOrientationUpdateProviderProxy> > { struct __compressed_pair<WebKit::WebDeviceOrientationUpdateProviderProxy *, std::__1::default_delete<WebKit::WebDeviceOrientationUpdateProviderProxy> > { struct WebDeviceOrientationUpdateProviderProxy *x0; } x0; } x251; struct MonotonicTime { double x0; } x252; struct Optional<WebKit::NavigatingToAppBoundDomain> { BOOL x0; union constexpr_storage_t<WebKit::NavigatingToAppBoundDomain> { unsigned char x0; BOOL x1; } x1; } x253; struct Optional<WebKit::NavigatingToAppBoundDomain> { BOOL x0; union constexpr_storage_t<WebKit::NavigatingToAppBoundDomain> { unsigned char x0; BOOL x1; } x1; } x254; BOOL x255; BOOL x256; BOOL x257; BOOL x258; BOOL x259; } *page;
@property (readonly, nonatomic) BOOL isFocusingElement;
@property (nonatomic, getter=isShowingInspectorIndication) BOOL showingInspectorIndication;
@property (readonly, nonatomic, getter=isResigningFirstResponder) BOOL resigningFirstResponder;
@property (nonatomic) BOOL sizeChangedSinceLastVisibleContentRectUpdate;
@property (readonly, nonatomic) long long interfaceOrientation;

+ (Class)_fileUploadPanelClass;

- (void)replace:(id)a0;
- (void)selectAll;
- (unsigned int)_characterInRelationToCaretSelection:(int)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })textFirstRect;
- (void)indentForWebView:(id)a0;
- (id)_autofillContext;
- (id)textColorForCaretSelection;
- (void)insertText:(id)a0;
- (void)accessoryDone;
- (void)insertTextSuggestion:(id)a0;
- (void)_transliterateChinese:(id)a0;
- (void)makeTextWritingDirectionRightToLeft:(id)a0;
- (id)positionWithinRange:(id)a0 farthestInDirection:(long long)a1;
- (void)_indent:(id)a0;
- (void)toggleItalics:(id)a0;
- (void)moveForward:(unsigned int)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_selectionClipRect;
- (void)unmarkText;
- (BOOL)pointIsNearMarkedText:(struct CGPoint { double x0; double x1; })a0;
- (void)select:(id)a0;
- (id)characterRangeAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)_moveUp:(BOOL)a0 withHistory:(id)a1;
- (id)_moveLeft:(BOOL)a0 withHistory:(id)a1;
- (void)setContinuousSpellCheckingEnabled:(BOOL)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForNSRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)setUpInteraction;
- (id)textInRange:(id)a0;
- (BOOL)setIsEditable:(BOOL)a0;
- (void)endSelectionChange;
- (void)_deleteToStartOfLine;
- (id)selectedDOMRange;
- (void)setMarkedText:(id)a0 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (double)inverseScale;
- (id)textRangeFromPosition:(id)a0 toPosition:(id)a1;
- (void)_wheelChangedWithEvent:(id)a0;
- (struct OpaqueWKPage { } *)_pageRef;
- (id)_moveToStartOfLine:(BOOL)a0 withHistory:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })caretRectForPosition:(id)a0;
- (void)updateFocusedElementValue:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })firstRectForRange:(id)a0;
- (id)markedText;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })selectionRange;
- (id)undoManager;
- (void)_deleteByWord;
- (BOOL)_selectionAtDocumentStart;
- (id)automaticallySelectedOverlay;
- (void)indirectScribbleInteraction:(id)a0 willBeginWritingInElement:(id)a1;
- (id)selectionRectsForRange:(id)a0;
- (id)_textInputContextByScribbleIdentifier:(id)a0;
- (void)_define:(id)a0;
- (void)accessoryClear;
- (id)textStylingAtPosition:(id)a0 inDirection:(long long)a1;
- (void)_resetInputViewDeferral;
- (struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; })_tapHighlightColorForFastClick:(BOOL)a0;
- (void)_singleTapRecognized:(id)a0;
- (void)_promptForReplace:(id)a0;
- (id)closestPositionToPoint:(struct CGPoint { double x0; double x1; })a0 withinRange:(id)a1;
- (id)positionFromPosition:(id)a0 offset:(long long)a1;
- (void)_deleteForwardByWord;
- (void)cut:(id)a0;
- (void)setAttributedMarkedText:(id)a0 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)replaceRange:(id)a0 withText:(id)a1;
- (BOOL)canPerformAction:(SEL)a0 withSender:(id)a1;
- (void)_updateRemoteAccessibilityRegistration:(BOOL)a0;
- (void)_handleKeyUIEvent:(id)a0;
- (void)_addShortcutForWebView:(id)a0;
- (void)accessoryTab:(BOOL)a0;
- (void)deleteBackward;
- (void)_share:(id)a0;
- (id)wordContainingCaretSelection;
- (void)_handleTouchActionsForTouchEvent:(const struct NativeWebTouchEvent { unsigned int x0; struct OptionSet<WebKit::WebEvent::Modifier> { unsigned char x0; } x1; struct WallTime { double x0; } x2; struct Vector<WebKit::WebPlatformTouchPoint, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct WebPlatformTouchPoint *x0; unsigned int x1; unsigned int x2; } x3; struct IntPoint { int x0; int x1; } x4; BOOL x5; BOOL x6; BOOL x7; float x8; float x9; } *)a0;
- (void)_enableInspectorNodeSearch;
- (void)_singleTapIdentified:(id)a0;
- (void)reloadContextViewForPresentedListViewController;
- (void)takeTraitsFrom:(id)a0;
- (void)selectAll:(id)a0;
- (void)_didReceiveEditDragSnapshot:(struct Optional<WebCore::TextIndicatorData> { BOOL x0; union storage_t<WebCore::TextIndicatorData> { unsigned char x0; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x2; struct Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct FloatRect *x0; unsigned int x1; unsigned int x2; } x3; float x4; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x5; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x6; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x7; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x8; unsigned char x9; struct OptionSet<WebCore::TextIndicatorOption> { unsigned short x0; } x10; } x1; } x1; })a0;
- (id)closestPositionToPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)_moveToEndOfParagraph:(BOOL)a0 withHistory:(id)a1;
- (void)increaseSize:(id)a0;
- (void)_toggleStrikeThrough:(id)a0;
- (void)_selectionChanged;
- (id)textInputTraits;
- (id)alternativesForSelectedText;
- (void)_registerPreview;
- (void)_willHideMenu:(id)a0;
- (void)_focusTextInputContext:(id)a0 placeCaretAt:(struct CGPoint { double x0; double x1; })a1 completionHandler:(id /* block */)a2;
- (void)actionSheetAssistant:(id)a0 shareElementWithURL:(id)a1 rect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (void)clearSelection;
- (id)webView;
- (BOOL)_elementForTextInputContextIsFocused:(id)a0;
- (BOOL)hasMarkedText;
- (BOOL)becomeFirstResponder;
- (id)selectionInteractionAssistant;
- (id)_dataDetectionResults;
- (id)webSelectionRects;
- (void)_alignLeft:(id)a0;
- (void)_alignCenterForWebView:(id)a0;
- (void)_deleteToEndOfLine;
- (void)toggleBoldface:(id)a0;
- (void)_showTextStyleOptions:(id)a0;
- (void)_addShortcut:(id)a0;
- (id)currentDragOrDropSession;
- (id)textEffectsWindow;
- (void)_hideKeyboard;
- (id)characterRangeByExtendingPosition:(id)a0 inDirection:(long long)a1;
- (id)_moveDown:(BOOL)a0 withHistory:(id)a1;
- (id)inputAccessoryView;
- (id)scribbleInteraction;
- (void)scrollSelectionToVisible:(BOOL)a0;
- (id)_moveToStartOfWord:(BOOL)a0 withHistory:(id)a1;
- (void)_pasteAsQuotationForWebView:(id)a0;
- (void)_didChangeWebViewEditability;
- (void)paste:(id)a0;
- (id)positionFromPosition:(id)a0 inDirection:(long long)a1 offset:(long long)a2;
- (double)timePickerValueHour;
- (void)setBaseWritingDirection:(long long)a0 forRange:(id)a1;
- (BOOL)isReplaceAllowed;
- (id)inputAssistantItem;
- (void)_showDictionary:(id)a0;
- (void)_endPotentialTapAndEnableDoubleTapGesturesIfNecessary;
- (id)dataDetectionContextForPositionInformation:(const struct InteractionInformationAtPosition { struct InteractionInformationRequest { struct IntPoint { int x0; int x1; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; } x0; BOOL x1; struct Optional<bool> { BOOL x0; union constexpr_storage_t<bool> { unsigned char x0; BOOL x1; } x1; } x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; unsigned long long x12; BOOL x13; BOOL x14; BOOL x15; struct FloatPoint { float x0; float x1; } x16; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x17; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x18; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x19; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x20; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x21; struct RefPtr<WebKit::ShareableBitmap, WTF::DumbPtrTraits<WebKit::ShareableBitmap> > { struct ShareableBitmap *x0; } x22; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x23; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x24; float x25; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x26; struct Optional<WebCore::Cursor> { BOOL x0; union storage_t<WebCore::Cursor> { unsigned char x0; struct Cursor { int x0; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x1; struct IntPoint { int x0; int x1; } x2; void *x3; } x1; } x1; } x27; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x2; struct Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct FloatRect *x0; unsigned int x1; unsigned int x2; } x3; float x4; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x5; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x6; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x7; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x8; unsigned char x9; struct OptionSet<WebCore::TextIndicatorOption> { unsigned short x0; } x10; } x28; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x29; struct RetainPtr<NSArray> { void *x0; } x30; struct Optional<WebCore::ElementContext> { BOOL x0; union constexpr_storage_t<WebCore::ElementContext> { unsigned char x0; struct ElementContext { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct ObjectIdentifier<WebCore::PageIdentifierType> { unsigned long long x0; } x1; struct ObjectIdentifier<WebCore::DocumentIdentifierType> { unsigned long long x0; } x2; struct ObjectIdentifier<WebCore::ElementIdentifierType> { unsigned long long x0; } x3; } x1; } x1; } x31; } *)a0;
- (void)insertNestedOrderedListForWebView:(id)a0;
- (void)toggleBoldfaceForWebView:(id)a0;
- (void)_screenCapturedDidChange:(id)a0;
- (void)_lookup:(id)a0;
- (void)_updateAccessory;
- (void)_requestTextInputContextsInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 completionHandler:(id /* block */)a1;
- (id)webViewUIDelegate;
- (void)_transpose;
- (void)beginSelectionChange;
- (void)_alignLeftForWebView:(id)a0;
- (double)_contentZoomScale;
- (id)_moveToStartOfDocument:(BOOL)a0 withHistory:(id)a1;
- (id)metadataDictionariesForDictationResults;
- (void)_decreaseListLevel:(id)a0;
- (BOOL)hasSelection;
- (void)cancelAutoscroll;
- (void)_alignCenter:(id)a0;
- (void)_didPerformDragOperation:(BOOL)a0;
- (id)dragInteraction:(id)a0 previewForLiftingItem:(id)a1 session:(id)a2;
- (BOOL)resignFirstResponder;
- (void)_pasteAsQuotation:(id)a0;
- (void)_applicationWillResignActive:(id)a0;
- (void)_processDidExit;
- (id)cursorInteraction:(id)a0 styleForRegion:(id)a1 modifiers:(long long)a2;
- (void)_showKeyboard;
- (void)insertUnorderedListForWebView:(id)a0;
- (BOOL)dropInteraction:(id)a0 canHandleSession:(id)a1;
- (void)_zoomOutWithOrigin:(struct CGPoint { double x0; double x1; })a0;
- (void)_deleteForwardAndNotify:(BOOL)a0;
- (BOOL)shouldShowAutomaticKeyboardUI;
- (BOOL)isPosition:(id)a0 atBoundary:(long long)a1 inDirection:(long long)a2;
- (void)startAutoscroll:(struct CGPoint { double x0; double x1; })a0;
- (void)dropInteraction:(id)a0 performDrop:(id)a1;
- (BOOL)gestureRecognizer:(id)a0 shouldBeRequiredToFailByGestureRecognizer:(id)a1;
- (void)_didUpdateEditorState;
- (void)_configureMouseGestureRecognizer;
- (void)dropInteraction:(id)a0 sessionDidExit:(id)a1;
- (id)dataDetectionContextForActionSheetAssistant:(id)a0 positionInformation:(const struct InteractionInformationAtPosition { struct InteractionInformationRequest { struct IntPoint { int x0; int x1; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; } x0; BOOL x1; struct Optional<bool> { BOOL x0; union constexpr_storage_t<bool> { unsigned char x0; BOOL x1; } x1; } x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; unsigned long long x12; BOOL x13; BOOL x14; BOOL x15; struct FloatPoint { float x0; float x1; } x16; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x17; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x18; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x19; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x20; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x21; struct RefPtr<WebKit::ShareableBitmap, WTF::DumbPtrTraits<WebKit::ShareableBitmap> > { struct ShareableBitmap *x0; } x22; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x23; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x24; float x25; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x26; struct Optional<WebCore::Cursor> { BOOL x0; union storage_t<WebCore::Cursor> { unsigned char x0; struct Cursor { int x0; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x1; struct IntPoint { int x0; int x1; } x2; void *x3; } x1; } x1; } x27; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x2; struct Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct FloatRect *x0; unsigned int x1; unsigned int x2; } x3; float x4; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x5; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x6; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x7; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x8; unsigned char x9; struct OptionSet<WebCore::TextIndicatorOption> { unsigned short x0; } x10; } x28; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x29; struct RetainPtr<NSArray> { void *x0; } x30; struct Optional<WebCore::ElementContext> { BOOL x0; union constexpr_storage_t<WebCore::ElementContext> { unsigned char x0; struct ElementContext { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct ObjectIdentifier<WebCore::PageIdentifierType> { unsigned long long x0; } x1; struct ObjectIdentifier<WebCore::DocumentIdentifierType> { unsigned long long x0; } x2; struct ObjectIdentifier<WebCore::ElementIdentifierType> { unsigned long long x0; } x3; } x1; } x1; } x31; } *)a1;
- (BOOL)gestureRecognizerMayPinchToZoomWebView:(id)a0;
- (void)_didScroll;
- (void)_hideInspectorHighlight;
- (id)contextMenuInteraction:(id)a0 previewForDismissingMenuWithConfiguration:(id)a1;
- (void)_keyboardDidRequestDismissal:(id)a0;
- (void)computeClientAndGlobalPointsForDropSession:(id)a0 outClientPoint:(struct CGPoint { double x0; double x1; } *)a1 outGlobalPoint:(struct CGPoint { double x0; double x1; } *)a2;
- (id)targetForActionForWebView:(SEL)a0 withSender:(id)a1;
- (void)_applicationDidBecomeActive:(id)a0;
- (void)toggleItalicsForWebView:(id)a0;
- (void)_handleAutocorrectionContext:(const struct WebAutocorrectionContext { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x1; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x2; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x3; struct EditingRange { unsigned long long x0; unsigned long long x1; } x4; } *)a0;
- (void)dropInteraction:(id)a0 sessionDidEnd:(id)a1;
- (void)_doAfterReceivingEditDragSnapshotForTesting:(id /* block */)a0;
- (void)copy:(id)a0;
- (void)_dropInteraction:(id)a0 delayedPreviewProviderForDroppingItem:(id)a1 previewProvider:(id /* block */)a2;
- (long long)_dropInteraction:(id)a0 dataOwnerForSession:(id)a1;
- (void)changeSelectionWithTouchesFrom:(struct CGPoint { double x0; double x1; })a0 to:(struct CGPoint { double x0; double x1; })a1 withGesture:(long long)a2 withState:(long long)a3;
- (void)selectPositionAtBoundary:(long long)a0 inDirection:(long long)a1 fromPoint:(struct CGPoint { double x0; double x1; })a2 completionHandler:(id /* block */)a3;
- (BOOL)hasContent;
- (BOOL)textInteractionGesture:(long long)a0 shouldBeginAtPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)toggleUnderlineForWebView:(id)a0;
- (BOOL)gestureRecognizer:(id)a0 shouldReceiveTouch:(id)a1;
- (void)dragInteraction:(id)a0 sessionDidTransferItems:(id)a1;
- (void)dropInteraction:(id)a0 sessionDidEnter:(id)a1;
- (void)_resetPanningPreventionFlags;
- (void)_updateInteractionTintColor;
- (void)requestAutocorrectionContextWithCompletionHandler:(id /* block */)a0;
- (id)_formInputSession;
- (BOOL)_currentPositionInformationIsValidForRequest:(const struct InteractionInformationRequest { struct IntPoint { int x0; int x1; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; } *)a0;
- (void)_insertUnorderedListForWebView:(id)a0;
- (void)_nextAccessoryTab:(id)a0;
- (void)tintColorDidChange;
- (BOOL)_shouldSimulateKeyboardInputOnTextInsertionInternal;
- (void)cancelActiveTextInteractionGestures;
- (void)actionSheetAssistantDidStopInteraction:(id)a0;
- (void)_accessibilityRetrieveRectsAtSelectionOffset:(long long)a0 withText:(id)a1 completionHandler:(id /* block */)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_computeUnobscuredContentRectRespectingInputViewBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inputViewBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (BOOL)hasHiddenContentEditable;
- (void)stopRelinquishingFirstResponderToFocusedElement;
- (void)dropInteraction:(id)a0 concludeDrop:(id)a1;
- (id)_presentedViewControllerForPreviewItemController:(id)a0;
- (id)_cascadeInteractionTintColor;
- (void)_processDidCreateContextForVisibilityPropagation;
- (id)dropInteraction:(id)a0 previewForDroppingItem:(id)a1 withDefault:(id)a2;
- (void)_showRunOpenPanel:(struct OpenPanelParameters { } *)a0 frameInfo:(const struct FrameInfoData { BOOL x0; struct ResourceRequest { struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x0; double x1; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x2; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x3; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x4; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x5; struct HTTPHeaderMap { struct Vector<WebCore::HTTPHeaderMap::CommonHeader, 0, WTF::CrashOnOverflow, 6, WTF::FastMalloc> { struct CommonHeader *x0; unsigned int x1; unsigned int x2; } x0; struct Vector<WebCore::HTTPHeaderMap::UncommonHeader, 0, WTF::CrashOnOverflow, 0, WTF::FastMalloc> { struct UncommonHeader *x0; unsigned int x1; unsigned int x2; } x1; } x6; struct Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct String *x0; unsigned int x1; unsigned int x2; } x7; struct RefPtr<WebCore::FormData, WTF::DumbPtrTraits<WebCore::FormData> > { struct FormData *x0; } x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; struct Optional<int> { BOOL x0; union constexpr_storage_t<int> { unsigned char x0; int x1; } x1; } x13; unsigned char x14 : 1; unsigned char x15 : 1; unsigned char x16 : 1; unsigned char x17 : 1; unsigned char x18 : 1; unsigned char x19 : 1; unsigned char x20 : 1; struct Optional<WebCore::SystemPreviewInfo> { BOOL x0; union constexpr_storage_t<WebCore::SystemPreviewInfo> { unsigned char x0; struct SystemPreviewInfo { struct ElementContext { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct ObjectIdentifier<WebCore::PageIdentifierType> { unsigned long long x0; } x1; struct ObjectIdentifier<WebCore::DocumentIdentifierType> { unsigned long long x0; } x2; struct ObjectIdentifier<WebCore::ElementIdentifierType> { unsigned long long x0; } x3; } x0; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x1; BOOL x2; } x1; } x1; } x21; struct RetainPtr<NSURLRequest> { void *x0; } x22; } x1; struct SecurityOriginData { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x1; struct Optional<unsigned short> { BOOL x0; union constexpr_storage_t<unsigned short> { unsigned char x0; unsigned short x1; } x1; } x2; } x2; struct Optional<WTF::ObjectIdentifier<WebCore::FrameIdentifierType> > { BOOL x0; union constexpr_storage_t<WTF::ObjectIdentifier<WebCore::FrameIdentifierType> > { unsigned char x0; struct ObjectIdentifier<WebCore::FrameIdentifierType> { unsigned long long x0; } x1; } x1; } x3; struct Optional<WTF::ObjectIdentifier<WebCore::FrameIdentifierType> > { BOOL x0; union constexpr_storage_t<WTF::ObjectIdentifier<WebCore::FrameIdentifierType> > { unsigned char x0; struct ObjectIdentifier<WebCore::FrameIdentifierType> { unsigned long long x0; } x1; } x1; } x4; } *)a1 resultListener:(struct WebOpenPanelResultListenerProxy { } *)a2;
- (void)setUpScribbleInteraction;
- (void)shareSheetDidDismiss:(id)a0;
- (void)dropInteraction:(id)a0 item:(id)a1 willAnimateDropWithAnimator:(id)a2;
- (void)accessoryAutoFill;
- (BOOL)isScrollableForKeyboardScrollViewAnimator:(id)a0;
- (void)keyboardScrollViewAnimatorDidFinishScrolling:(id)a0;
- (void)_insertOrderedList:(id)a0;
- (void)_didHandleDragStartRequest:(BOOL)a0;
- (void)_applicationWillEnterForeground:(id)a0;
- (id)dropInteraction:(id)a0 sessionDidUpdate:(id)a1;
- (void)_finishInteraction;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectContainingCaretSelection;
- (void)_outdentForWebView:(id)a0;
- (void)selectFormAccessoryPickerRow:(long long)a0;
- (id)_itemsForBeginningOrAddingToSessionWithRegistrationLists:(id)a0 stagedDragSource:(const struct DragSourceState { struct OptionSet<WebCore::DragSourceAction> { unsigned char x0; } x0; struct CGPoint { double x0; double x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct RetainPtr<UIImage> { void *x0; } x3; struct Optional<WebCore::TextIndicatorData> { BOOL x0; union storage_t<WebCore::TextIndicatorData> { unsigned char x0; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x2; struct Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct FloatRect *x0; unsigned int x1; unsigned int x2; } x3; float x4; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x5; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x6; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x7; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x8; unsigned char x9; struct OptionSet<WebCore::TextIndicatorOption> { unsigned short x0; } x10; } x1; } x1; } x4; struct Optional<WebCore::Path> { BOOL x0; union storage_t<WebCore::Path> { unsigned char x0; struct Path { struct RetainPtr<CGPath *> { void *x0; } x0; struct Variant<WTF::Monostate, WebCore::MoveData, WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WTF::Monostate, WebCore::MoveData, WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WTF::Monostate> { struct Monostate { } x0; struct __dummy_type { } x1; } x0; union __variant_data<WebCore::MoveData, WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WebCore::MoveData> { struct __storage_wrapper<WebCore::MoveData> { struct type { unsigned char x0[8]; } x0; } x0; struct __dummy_type { } x1; } x0; union __variant_data<WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WebCore::LineData> { struct __storage_wrapper<WebCore::LineData> { struct type { unsigned char x0[16]; } x0; } x0; struct __dummy_type { } x1; } x0; union __variant_data<WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WebCore::ArcData> { struct __storage_wrapper<WebCore::ArcData> { struct type { unsigned char x0[32]; } x0; } x0; struct __dummy_type { } x1; } x0; union __variant_data<WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WebCore::QuadCurveData> { struct __storage_wrapper<WebCore::QuadCurveData> { struct type { unsigned char x0[24]; } x0; } x0; struct __dummy_type { } x1; } x0; union __variant_data<WebCore::BezierCurveData> { struct __storage_wrapper<WebCore::BezierCurveData> { struct type { unsigned char x0[32]; } x0; } x0; struct __dummy_type { } x1; } x1; } x1; } x1; } x1; } x1; } x0; char x1; } x1; BOOL x2; } x1; } x1; } x5; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x6; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x7; BOOL x8; long long x9; } *)a1;
- (id)_contextMenuInteraction:(id)a0 overrideSuggestedActionsForConfiguration:(id)a1;
- (void)setUpCursorInteraction;
- (id)webSelectionRectsForSelectionRects:(const struct Vector<WebCore::SelectionRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct SelectionRect *x0; unsigned int x1; unsigned int x2; } *)a0;
- (void).cxx_destruct;
- (void)_inspectorNodeSearchRecognized:(id)a0;
- (void)executeEditCommandWithCallback:(id)a0;
- (void)willMoveToWindow:(id)a0;
- (BOOL)gestureRecognizer:(id)a0 shouldIgnoreWebTouchWithEvent:(id)a1;
- (void)_didHideMenu:(id)a0;
- (void)_didRelaunchProcess;
- (void)_previewItemController:(id)a0 didDismissPreview:(id)a1 committing:(BOOL)a2;
- (void)_commitPotentialTapFailed;
- (BOOL)gestureRecognizer:(id)a0 shouldRequireFailureOfGestureRecognizer:(id)a1;
- (void)_selectPositionAtPoint:(struct CGPoint { double x0; double x1; })a0 stayingWithinFocusedElement:(BOOL)a1 completionHandler:(id /* block */)a2;
- (void)_stylusSingleTapRecognized:(id)a0;
- (void)_transliterateChineseForWebView:(id)a0;
- (BOOL)gestureRecognizer:(id)a0 canBePreventedByGestureRecognizer:(id)a1;
- (void)handleKeyWebEvent:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)requestAutocorrectionRectsForString:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)_zoomToRevealFocusedElement;
- (void)teardownDragAndDropInteractions;
- (BOOL)deferringGestureRecognizer:(id)a0 shouldDeferGesturesAfterEndingTouchesWithEvent:(id)a1;
- (BOOL)fileUploadPanelDestinationIsManaged:(id)a0;
- (BOOL)requiresAccessoryView;
- (void)_previousAccessoryTab:(id)a0;
- (id)_scroller;
- (void)alignLeftForWebView:(id)a0;
- (struct RetainPtr<NSArray> { void *x0; })actionSheetAssistant:(id)a0 decideActionsForElement:(id)a1 defaultActions:(struct RetainPtr<NSArray> { void *x0; })a2;
- (void)pasteAndMatchStyle:(id)a0;
- (id)_moveToEndOfDocument:(BOOL)a0 withHistory:(id)a1;
- (struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; })_scaledCaretRectForSelectionStart:(struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; })a0;
- (id)rangeEnclosingPosition:(id)a0 withGranularity:(long long)a1 inDirection:(long long)a2;
- (void)_indentForWebView:(id)a0;
- (void)_disableInspectorNodeSearch;
- (void)removeContextMenuViewIfPossibleForActionSheetAssistant:(id)a0;
- (void)toggleStrikeThroughForWebView:(id)a0;
- (id)unscaledView;
- (void)updateSelectionWithExtentPoint:(struct CGPoint { double x0; double x1; })a0 withBoundary:(long long)a1 completionHandler:(id /* block */)a2;
- (BOOL)_interactionShouldBeginFromPreviewItemController:(id)a0 forPosition:(struct CGPoint { double x0; double x1; })a1;
- (BOOL)_handleDropByInsertingImagePlaceholders:(id)a0 session:(id)a1;
- (void)_nonBlockingDoubleTapRecognized:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_presentationRectForPreviewItemController:(id)a0;
- (void)applyAutocorrection:(id)a0 toString:(id)a1 withCompletionHandler:(id /* block */)a2;
- (void)didFinishScrolling;
- (void)requestDictationContext:(id /* block */)a0;
- (void)_outdent:(id)a0;
- (void)_didCompleteSyntheticClick;
- (void)selectWordForReplacement;
- (id)touchActionActiveTouches;
- (void)_highlightLongPressRecognized:(id)a0;
- (void)selectTextWithGranularity:(long long)a0 atPoint:(struct CGPoint { double x0; double x1; })a1 completionHandler:(id /* block */)a2;
- (void)_updateTapHighlight;
- (BOOL)canBecomeFirstResponderForWebView;
- (void)_didStartProvisionalLoadForMainFrame;
- (void)didZoomToScale:(double)a0;
- (void)dragInteraction:(id)a0 sessionWillBegin:(id)a1;
- (void)_showTextStyleOptionsForWebView:(id)a0;
- (id)contextMenuInteraction:(id)a0 configurationForMenuAtLocation:(struct CGPoint { double x0; double x1; })a1;
- (void)dealloc;
- (void)_defineForWebView:(id)a0;
- (void)_showDataDetectorsUI;
- (id)positionFromPosition:(id)a0 toBoundary:(long long)a1 inDirection:(long long)a2;
- (BOOL)resignFirstResponderForWebView;
- (unsigned short)characterBeforeCaretSelection;
- (BOOL)_dragInteraction:(id)a0 shouldDelayCompetingGestureRecognizer:(id)a1;
- (void)_shareForWebView:(id)a0;
- (void)_attemptSyntheticClickAtLocation:(struct CGPoint { double x0; double x1; })a0 modifierFlags:(long long)a1;
- (void)_insertNestedUnorderedListForWebView:(id)a0;
- (void)_increaseListLevel:(id)a0;
- (void)_insertNestedUnorderedList:(id)a0;
- (void)continueContextMenuInteractionWithDataDetectors:(id /* block */)a0;
- (struct DragData { struct IntPoint { int x0; int x1; } x0; struct IntPoint { int x0; int x1; } x1; void *x2; struct OptionSet<WebCore::DragOperation> { unsigned char x0; } x3; struct OptionSet<WebCore::DragApplicationFlags> { unsigned char x0; } x4; struct Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct String *x0; unsigned int x1; unsigned int x2; } x5; struct OptionSet<WebCore::DragDestinationAction> { unsigned char x0; } x6; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x7; })dragDataForDropSession:(id)a0 dragDestinationAction:(unsigned long long)a1;
- (void)makeTextWritingDirectionLeftToRightForWebView:(id)a0;
- (BOOL)_shouldSuppressSelectionCommands;
- (void)assignLegacyDataForContextMenuInteraction;
- (void)setUpTextSelectionAssistant;
- (void)_accessibilityRegisterUIProcessTokens;
- (void)_cancelPendingKeyEventHandler;
- (void)_cancelLongPressGestureRecognizer;
- (void)_layerTreeCommitComplete;
- (void)_setAcceleratedCompositingRootView:(id)a0;
- (void)_createAndConfigureLongPressGestureRecognizer;
- (void)_preserveFocusWithToken:(id)a0 destructively:(BOOL)a1;
- (void)_didHandleKeyEvent:(id)a0 eventWasHandled:(BOOL)a1;
- (void)cleanUpAdditionalInteractions;
- (BOOL)gestureRecognizerMayDoubleTapToZoomWebView:(id)a0;
- (void)pasteWithCompletionHandler:(id /* block */)a0;
- (BOOL)isAnyTouchOverActiveArea:(id)a0;
- (void)_didGetTapHighlightForRequest:(unsigned long long)a0 color:(const struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } *)a1 quads:(const struct Vector<WebCore::FloatQuad, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct FloatQuad *x0; unsigned int x1; unsigned int x2; } *)a2 topLeftRadius:(const struct IntSize { int x0; int x1; } *)a3 topRightRadius:(const struct IntSize { int x0; int x1; } *)a4 bottomLeftRadius:(const struct IntSize { int x0; int x1; } *)a5 bottomRightRadius:(const struct IntSize { int x0; int x1; } *)a6 nodeHasBuiltInClickHandling:(BOOL)a7;
- (void)_processWillSwap;
- (void)setMarkedText:(id)a0;
- (void)setUpMouseGestureRecognizer;
- (void)dismissFilePicker;
- (void)_didUpdateInputMode:(unsigned char)a0;
- (id)_moveToEndOfWord:(BOOL)a0 withHistory:(id)a1;
- (void)_invokePendingAutocorrectionContextHandler:(id)a0;
- (void)_showLinkSheet;
- (BOOL)_shouldSimulateKeyboardInputOnTextInsertion;
- (void)_writePromisedAttachmentToPasteboard:(struct PromisedAttachmentInfo { struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x0; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x1; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x2; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x3; struct Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct String *x0; unsigned int x1; unsigned int x2; } x4; struct Vector<WTF::RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> > *x0; unsigned int x1; unsigned int x2; } x5; } *)a0;
- (BOOL)indirectScribbleInteraction:(id)a0 isElementFocused:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })unoccludedWindowBoundsForActionSheetAssistant:(id)a0;
- (void)_simulateTextEntered:(id)a0;
- (void)_webTouchEventsRecognized:(id)a0;
- (void)_resetIsDoubleTapPending;
- (id)dragInteraction:(id)a0 itemsForBeginningSession:(id)a1;
- (void)_cancelTouchEventGestureRecognizer;
- (void)_insertOrderedListForWebView:(id)a0;
- (struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; })_scaledCaretRectForSelectionEnd:(struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; })a0;
- (void)doAfterPositionInformationUpdate:(id /* block */)a0 forRequest:(struct InteractionInformationRequest { struct IntPoint { int x0; int x1; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; })a1;
- (BOOL)_requiresKeyboardResetOnReload;
- (void)copyForWebView:(id)a0;
- (long long)baseWritingDirectionForPosition:(id)a0 inDirection:(long long)a1;
- (void)_handleSmartMagnificationInformationForPotentialTap:(unsigned long long)a0 renderRect:(const struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } *)a1 fitEntireRect:(BOOL)a2 viewportMinimumScale:(double)a3 viewportMaximumScale:(double)a4 nodeIsRootLevel:(BOOL)a5;
- (void)_hardwareKeyboardAvailabilityChanged;
- (id)fontForCaretSelection;
- (id)_moveToEndOfLine:(BOOL)a0 withHistory:(id)a1;
- (void)makeTextWritingDirectionRightToLeftForWebView:(id)a0;
- (void)pasteForWebView:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })unobscuredContentRect;
- (void)_showAttachmentSheet;
- (void)actionSheetAssistant:(id)a0 shareElementWithImage:(id)a1 rect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (void)_didEndScrollingOrZooming;
- (id)_contentsOfUserInterfaceItem:(id)a0;
- (SEL)_actionForLongPressFromPositionInformation:(const struct InteractionInformationAtPosition { struct InteractionInformationRequest { struct IntPoint { int x0; int x1; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; } x0; BOOL x1; struct Optional<bool> { BOOL x0; union constexpr_storage_t<bool> { unsigned char x0; BOOL x1; } x1; } x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; unsigned long long x12; BOOL x13; BOOL x14; BOOL x15; struct FloatPoint { float x0; float x1; } x16; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x17; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x18; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x19; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x20; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x21; struct RefPtr<WebKit::ShareableBitmap, WTF::DumbPtrTraits<WebKit::ShareableBitmap> > { struct ShareableBitmap *x0; } x22; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x23; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x24; float x25; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x26; struct Optional<WebCore::Cursor> { BOOL x0; union storage_t<WebCore::Cursor> { unsigned char x0; struct Cursor { int x0; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x1; struct IntPoint { int x0; int x1; } x2; void *x3; } x1; } x1; } x27; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x2; struct Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct FloatRect *x0; unsigned int x1; unsigned int x2; } x3; float x4; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x5; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x6; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x7; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x8; unsigned char x9; struct OptionSet<WebCore::TextIndicatorOption> { unsigned short x0; } x10; } x28; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x29; struct RetainPtr<NSArray> { void *x0; } x30; struct Optional<WebCore::ElementContext> { BOOL x0; union constexpr_storage_t<WebCore::ElementContext> { unsigned char x0; struct ElementContext { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct ObjectIdentifier<WebCore::PageIdentifierType> { unsigned long long x0; } x1; struct ObjectIdentifier<WebCore::DocumentIdentifierType> { unsigned long long x0; } x2; struct ObjectIdentifier<WebCore::ElementIdentifierType> { unsigned long long x0; } x3; } x1; } x1; } x31; } *)a0;
- (double)timePickerValueMinute;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (BOOL)_isHandlingWriting;
- (BOOL)_isTextInputContextFocused:(id)a0;
- (void)_startDrag:(struct RetainPtr<CGImage *> { void *x0; })a0 item:(const struct DragItem { struct DragImage { struct RetainPtr<CGImage *> { void *x0; } x0; struct Optional<WebCore::TextIndicatorData> { BOOL x0; union storage_t<WebCore::TextIndicatorData> { unsigned char x0; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x2; struct Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct FloatRect *x0; unsigned int x1; unsigned int x2; } x3; float x4; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x5; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x6; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x7; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x8; unsigned char x9; struct OptionSet<WebCore::TextIndicatorOption> { unsigned short x0; } x10; } x1; } x1; } x1; struct Optional<WebCore::Path> { BOOL x0; union storage_t<WebCore::Path> { unsigned char x0; struct Path { struct RetainPtr<CGPath *> { void *x0; } x0; struct Variant<WTF::Monostate, WebCore::MoveData, WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WTF::Monostate, WebCore::MoveData, WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WTF::Monostate> { struct Monostate { } x0; struct __dummy_type { } x1; } x0; union __variant_data<WebCore::MoveData, WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WebCore::MoveData> { struct __storage_wrapper<WebCore::MoveData> { struct type { unsigned char x0[8]; } x0; } x0; struct __dummy_type { } x1; } x0; union __variant_data<WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WebCore::LineData> { struct __storage_wrapper<WebCore::LineData> { struct type { unsigned char x0[16]; } x0; } x0; struct __dummy_type { } x1; } x0; union __variant_data<WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WebCore::ArcData> { struct __storage_wrapper<WebCore::ArcData> { struct type { unsigned char x0[32]; } x0; } x0; struct __dummy_type { } x1; } x0; union __variant_data<WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WebCore::QuadCurveData> { struct __storage_wrapper<WebCore::QuadCurveData> { struct type { unsigned char x0[24]; } x0; } x0; struct __dummy_type { } x1; } x0; union __variant_data<WebCore::BezierCurveData> { struct __storage_wrapper<WebCore::BezierCurveData> { struct type { unsigned char x0[32]; } x0; } x0; struct __dummy_type { } x1; } x1; } x1; } x1; } x1; } x1; } x0; char x1; } x1; BOOL x2; } x1; } x1; } x2; } x0; struct FloatPoint { float x0; float x1; } x1; struct Optional<WebCore::DragSourceAction> { BOOL x0; union constexpr_storage_t<WebCore::DragSourceAction> { unsigned char x0; unsigned char x1; } x1; } x2; struct IntPoint { int x0; int x1; } x3; struct IntPoint { int x0; int x1; } x4; struct IntPoint { int x0; int x1; } x5; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x6; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x7; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x8; struct PasteboardWriterData { struct Optional<WebCore::PasteboardWriterData::PlainText> { BOOL x0; union storage_t<WebCore::PasteboardWriterData::PlainText> { unsigned char x0; struct PlainText { BOOL x0; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x1; } x1; } x1; } x0; struct Optional<WebCore::PasteboardWriterData::URLData> { BOOL x0; union storage_t<WebCore::PasteboardWriterData::URLData> { unsigned char x0; struct URLData { struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x0; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x1; } x1; } x1; } x1; struct Optional<WebCore::PasteboardWriterData::WebContent> { BOOL x0; union storage_t<WebCore::PasteboardWriterData::WebContent> { unsigned char x0; struct WebContent { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; BOOL x1; struct RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> > { struct SharedBuffer *x0; } x2; struct RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> > { struct SharedBuffer *x0; } x3; struct RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> > { struct SharedBuffer *x0; } x4; struct RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> > { struct SharedBuffer *x0; } x5; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x6; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x7; struct Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct String *x0; unsigned int x1; unsigned int x2; } x8; struct Vector<WTF::RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> > *x0; unsigned int x1; unsigned int x2; } x9; } x1; } x1; } x2; } x9; struct PromisedAttachmentInfo { struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x0; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x1; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x2; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x3; struct Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct String *x0; unsigned int x1; unsigned int x2; } x4; struct Vector<WTF::RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> > *x0; unsigned int x1; unsigned int x2; } x5; } x10; } *)a1;
- (BOOL)hasSelectablePositionAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_zoomToFocusRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 selectionRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 insideFixed:(BOOL)a2 fontSize:(float)a3 minimumScale:(double)a4 maximumScale:(double)a5 allowScaling:(BOOL)a6 forceScroll:(BOOL)a7;
- (BOOL)_shouldShowAutomaticKeyboardUIIgnoringInputMode;
- (void)_didChangeLinkPreviewAvailability;
- (void)updateCurrentFocusedElementInformation:(struct Function<void (bool)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, bool>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, bool> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, bool> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, bool> > > { struct CallableWrapperBase<void, bool> *x0; } x0; } x0; } *)a0;
- (void)_showPlaybackTargetPicker:(BOOL)a0 fromRect:(const struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } *)a1 routeSharingPolicy:(unsigned char)a2 routingContextUID:(id)a3;
- (void)_dragInteraction:(id)a0 itemsForAddingToSession:(id)a1 withTouchAtPoint:(struct CGPoint { double x0; double x1; })a2 completion:(id /* block */)a3;
- (void)_elementDidFocus:(const struct FocusedElementInformation { struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x0; struct ElementContext { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct ObjectIdentifier<WebCore::PageIdentifierType> { unsigned long long x0; } x1; struct ObjectIdentifier<WebCore::DocumentIdentifierType> { unsigned long long x0; } x2; struct ObjectIdentifier<WebCore::ElementIdentifierType> { unsigned long long x0; } x3; } x1; struct IntPoint { int x0; int x1; } x2; double x3; double x4; double x5; double x6; BOOL x7; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x8; BOOL x9; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; BOOL x16; BOOL x17; unsigned char x18; int x19; unsigned char x20; unsigned char x21; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x22; struct Vector<WebKit::OptionItem, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct OptionItem *x0; unsigned int x1; unsigned int x2; } x23; int x24; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x25; double x26; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x27; BOOL x28; BOOL x29; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x30; int x31; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x32; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x33; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x34; unsigned long long x35; BOOL x36; struct Vector<WebCore::Color, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct Color *x0; unsigned int x1; unsigned int x2; } x37; BOOL x38; BOOL x39; BOOL x40; BOOL x41; BOOL x42; unsigned long long x43; } *)a0 userIsInteracting:(BOOL)a1 blurPreviousNode:(BOOL)a2 activityStateChanges:(struct OptionSet<WebCore::ActivityState::Flag> { unsigned int x0; })a3 userObject:(id)a4;
- (void)setBottomBufferHeight:(double)a0;
- (void)_showInspectorHighlight:(const struct Highlight { struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x0; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x1; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x2; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x3; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x4; int x5; struct Vector<WebCore::FloatQuad, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct FloatQuad *x0; unsigned int x1; unsigned int x2; } x6; BOOL x7; } *)a0;
- (void)_cancelInteraction;
- (void)_accessibilityRetrieveRectsEnclosingSelectionOffset:(long long)a0 withGranularity:(long long)a1;
- (void)alignJustifiedForWebView:(id)a0;
- (void)cancelPointersForGestureRecognizer:(id)a0;
- (BOOL)deferringGestureRecognizer:(id)a0 shouldDeferGesturesAfterBeginningTouchesWithEvent:(id)a1;
- (void)updatePositionInformationForActionSheetAssistant:(id)a0;
- (void)_updateInitialWritingDirectionIfNecessary;
- (void)_didFinishTextInteractionInTextInputContext:(id)a0;
- (unsigned int)_characterBeforeCaretSelection;
- (BOOL)_requiresKeyboardWhenFirstResponder;
- (void)_willPerformAction:(SEL)a0 sender:(id)a1;
- (struct Optional<unsigned int> { BOOL x0; union constexpr_storage_t<unsigned int> { unsigned char x0; unsigned int x1; } x1; })activeTouchIdentifierForGestureRecognizer:(id)a0;
- (void)_setupVisibilityPropagationViewForGPUProcess;
- (void)generateSyntheticEditingCommand:(unsigned char)a0;
- (void)_setMouseEventPolicy:(unsigned char)a0;
- (void)_decreaseListLevelForWebView:(id)a0;
- (long long)_dragInteraction:(id)a0 dataOwnerForSession:(id)a1;
- (void)_increaseListLevelForWebView:(id)a0;
- (void)shareSheet:(id)a0 willShowActivityItems:(id)a1;
- (BOOL)shouldUseMouseGestureRecognizer;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_markedTextNSRange;
- (BOOL)_hasValidOutstandingPositionInformationRequest:(const struct InteractionInformationRequest { struct IntPoint { int x0; int x1; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; } *)a0;
- (void)_applicationDidEnterBackground:(id)a0;
- (BOOL)supportsTextSelectionWithCharacterGranularity;
- (void)didMoveToWindow;
- (void)updateFocusedElementValueAsNumber:(double)a0;
- (void)_startSuppressingSelectionAssistantForReason:(unsigned char)a0;
- (void)_insertNestedOrderedList:(id)a0;
- (void)_twoFingerSingleTapGestureRecognized:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 processPool:(struct NakedRef<WebKit::WebProcessPool> { struct WebProcessPool *x0; })a1 configuration:(struct Ref<API::PageConfiguration, WTF::DumbPtrTraits<API::PageConfiguration> > { struct PageConfiguration *x0; } *)a2 webView:(id)a3;
- (void)outdentForWebView:(id)a0;
- (void)_deliverDelayedDropPreviewIfPossible:(struct Optional<WebCore::TextIndicatorData> { BOOL x0; union storage_t<WebCore::TextIndicatorData> { unsigned char x0; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x2; struct Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct FloatRect *x0; unsigned int x1; unsigned int x2; } x3; float x4; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x5; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x6; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x7; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x8; unsigned char x9; struct OptionSet<WebCore::TextIndicatorOption> { unsigned short x0; } x10; } x1; } x1; })a0;
- (id)contextMenuInteraction:(id)a0 previewForHighlightingMenuWithConfiguration:(id)a1;
- (void)dragInteraction:(id)a0 willAnimateLiftWithAnimator:(id)a1 session:(id)a2;
- (void)_longPressRecognized:(id)a0;
- (void)_showShareSheet:(const struct ShareDataWithParsedURL { struct ShareData { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x1; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x2; struct Vector<WTF::RefPtr<WebCore::File, WTF::DumbPtrTraits<WebCore::File> >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct RefPtr<WebCore::File, WTF::DumbPtrTraits<WebCore::File> > *x0; unsigned int x1; unsigned int x2; } x3; } x0; struct Optional<WTF::URL> { BOOL x0; union storage_t<WTF::URL> { unsigned char x0; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x1; } x1; } x1; struct Vector<WebCore::RawFile, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct RawFile *x0; unsigned int x1; unsigned int x2; } x2; } *)a0 inRect:(struct Optional<WebCore::FloatRect> { BOOL x0; union constexpr_storage_t<WebCore::FloatRect> { unsigned char x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; } x1; })a1 completionHandler:(struct CompletionHandler<void (bool)> { struct Function<void (bool)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, bool>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, bool> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, bool> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, bool> > > { struct CallableWrapperBase<void, bool> *x0; } x0; } x0; } x0; } *)a2;
- (id)containerForDragPreviews;
- (void)_alignJustified:(id)a0;
- (BOOL)_shouldToggleSelectionCommandsAfterTapAt:(struct CGPoint { double x0; double x1; })a0;
- (void)selectForWebView:(id)a0;
- (BOOL)_pointIsInsideSelectionRect:(struct CGPoint { double x0; double x1; })a0 outBoundingRect:(struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } *)a1;
- (void)setScribbleInteraction:(id)a0;
- (void)setTimePickerValueToHour:(long long)a0 minute:(long long)a1;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (BOOL)shouldAllowHidingSelectionCommands;
- (struct unique_ptr<WebKit::DrawingAreaProxy, std::__1::default_delete<WebKit::DrawingAreaProxy> > { struct __compressed_pair<WebKit::DrawingAreaProxy *, std::__1::default_delete<WebKit::DrawingAreaProxy> > { struct DrawingAreaProxy *x0; } x0; })_createDrawingAreaProxy:(struct WebProcessProxy { void /* function */ **x0; void /* function */ **x1; struct Vector<WebKit::AuxiliaryProcessProxy::PendingMessage, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct PendingMessage *x0; unsigned int x1; unsigned int x2; } x2; struct RefPtr<WebKit::ProcessLauncher, WTF::DumbPtrTraits<WebKit::ProcessLauncher> > { struct ProcessLauncher *x0; } x3; struct RefPtr<IPC::Connection, WTF::DumbPtrTraits<IPC::Connection> > { struct Connection *x0; } x4; struct MessageReceiverMap { struct HashMap<IPC::ReceiverName, IPC::MessageReceiver *, WTF::IntHash<IPC::ReceiverName>, WTF::StrongEnumHashTraits<IPC::ReceiverName>, WTF::HashTraits<IPC::MessageReceiver *> > { struct HashTable<IPC::ReceiverName, WTF::KeyValuePair<IPC::ReceiverName, IPC::MessageReceiver *>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<IPC::ReceiverName, IPC::MessageReceiver *> >, WTF::IntHash<IPC::ReceiverName>, WTF::HashMap<IPC::ReceiverName, IPC::MessageReceiver *, WTF::IntHash<IPC::ReceiverName>, WTF::StrongEnumHashTraits<IPC::ReceiverName>, WTF::HashTraits<IPC::MessageReceiver *> >::KeyValuePairTraits, WTF::StrongEnumHashTraits<IPC::ReceiverName> > { struct KeyValuePair<IPC::ReceiverName, IPC::MessageReceiver *> *x0; } x0; } x0; struct HashMap<std::__1::pair<IPC::ReceiverName, unsigned long long>, IPC::MessageReceiver *, WTF::DefaultHash<std::__1::pair<IPC::ReceiverName, unsigned long long> >, WTF::PairHashTraits<WTF::StrongEnumHashTraits<IPC::ReceiverName>, WTF::HashTraits<unsigned long long> >, WTF::HashTraits<IPC::MessageReceiver *> > { struct HashTable<std::__1::pair<IPC::ReceiverName, unsigned long long>, WTF::KeyValuePair<std::__1::pair<IPC::ReceiverName, unsigned long long>, IPC::MessageReceiver *>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<std::__1::pair<IPC::ReceiverName, unsigned long long>, IPC::MessageReceiver *> >, WTF::DefaultHash<std::__1::pair<IPC::ReceiverName, unsigned long long> >, WTF::HashMap<std::__1::pair<IPC::ReceiverName, unsigned long long>, IPC::MessageReceiver *, WTF::DefaultHash<std::__1::pair<IPC::ReceiverName, unsigned long long> >, WTF::PairHashTraits<WTF::StrongEnumHashTraits<IPC::ReceiverName>, WTF::HashTraits<unsigned long long> >, WTF::HashTraits<IPC::MessageReceiver *> >::KeyValuePairTraits, WTF::PairHashTraits<WTF::StrongEnumHashTraits<IPC::ReceiverName>, WTF::HashTraits<unsigned long long> > > { struct KeyValuePair<std::__1::pair<IPC::ReceiverName, unsigned long long>, IPC::MessageReceiver *> *x0; } x0; } x1; } x5; BOOL x6; struct ObjectIdentifier<WebCore::ProcessIdentifierType> { unsigned long long x0; } x7; void /* function */ **x8; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x9; struct WeakPtrFactory<WebKit::WebProcessProxy, WTF::EmptyCounter> { struct RefPtr<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > { struct WeakPtrImpl<WTF::EmptyCounter> *x0; } x0; } x10; void /* function */ **x11; struct ResponsivenessTimer { struct Client *x0; struct Timer<WebKit::ResponsivenessTimer> { void /* function */ **x0; struct Ref<WTF::RunLoop, WTF::DumbPtrTraits<WTF::RunLoop> > { struct RunLoop *x0; } x1; struct RetainPtr<__CFRunLoopTimer *> { void *x0; } x2; struct ResponsivenessTimer *x3; } x1; struct MonotonicTime { double x0; } x2; BOOL x3; BOOL x4; BOOL x5; } x12; struct BackgroundProcessResponsivenessTimer { struct WebProcessProxy *x0; struct Seconds { double x0; } x1; struct Timer<WebKit::BackgroundProcessResponsivenessTimer> { void /* function */ **x0; struct Ref<WTF::RunLoop, WTF::DumbPtrTraits<WTF::RunLoop> > { struct RunLoop *x0; } x1; struct RetainPtr<__CFRunLoopTimer *> { void *x0; } x2; struct BackgroundProcessResponsivenessTimer *x3; } x2; struct Timer<WebKit::BackgroundProcessResponsivenessTimer> { void /* function */ **x0; struct Ref<WTF::RunLoop, WTF::DumbPtrTraits<WTF::RunLoop> > { struct RunLoop *x0; } x1; struct RetainPtr<__CFRunLoopTimer *> { void *x0; } x2; struct BackgroundProcessResponsivenessTimer *x3; } x3; BOOL x4; } x13; struct RefPtr<WebKit::WebConnectionToWebProcess, WTF::DumbPtrTraits<WebKit::WebConnectionToWebProcess> > { struct WebConnectionToWebProcess *x0; } x14; struct WeakOrStrongPtr<WebKit::WebProcessPool> { int x0; struct WeakPtr<WebKit::WebProcessPool, WTF::EmptyCounter> { struct RefPtr<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > { struct WeakPtrImpl<WTF::EmptyCounter> *x0; } x0; } x1; struct RefPtr<WebKit::WebProcessPool, WTF::DumbPtrTraits<WebKit::WebProcessPool> > { struct WebProcessPool *x0; } x2; } x15; BOOL x16; struct HashSet<WTF::String, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String> > { struct HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> > { struct String *x0; } x0; } x17; struct HashMap<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WebKit::WebPageProxy *, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashTraits<WebKit::WebPageProxy *> > { struct HashTable<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WTF::KeyValuePair<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WebKit::WebPageProxy *>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WebKit::WebPageProxy *> >, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashMap<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WebKit::WebPageProxy *, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashTraits<WebKit::WebPageProxy *> >::KeyValuePairTraits, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> > > { struct KeyValuePair<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WebKit::WebPageProxy *> *x0; } x0; } x18; struct HashMap<WTF::ObjectIdentifier<WebCore::FrameIdentifierType>, WTF::RefPtr<WebKit::WebFrameProxy, WTF::DumbPtrTraits<WebKit::WebFrameProxy> >, WTF::DefaultHash<WTF::ObjectIdentifier<WebCore::FrameIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebCore::FrameIdentifierType> >, WTF::HashTraits<WTF::RefPtr<WebKit::WebFrameProxy, WTF::DumbPtrTraits<WebKit::WebFrameProxy> > > > { struct HashTable<WTF::ObjectIdentifier<WebCore::FrameIdentifierType>, WTF::KeyValuePair<WTF::ObjectIdentifier<WebCore::FrameIdentifierType>, WTF::RefPtr<WebKit::WebFrameProxy, WTF::DumbPtrTraits<WebKit::WebFrameProxy> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::ObjectIdentifier<WebCore::FrameIdentifierType>, WTF::RefPtr<WebKit::WebFrameProxy, WTF::DumbPtrTraits<WebKit::WebFrameProxy> > > >, WTF::DefaultHash<WTF::ObjectIdentifier<WebCore::FrameIdentifierType> >, WTF::HashMap<WTF::ObjectIdentifier<WebCore::FrameIdentifierType>, WTF::RefPtr<WebKit::WebFrameProxy, WTF::DumbPtrTraits<WebKit::WebFrameProxy> >, WTF::DefaultHash<WTF::ObjectIdentifier<WebCore::FrameIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebCore::FrameIdentifierType> >, WTF::HashTraits<WTF::RefPtr<WebKit::WebFrameProxy, WTF::DumbPtrTraits<WebKit::WebFrameProxy> > > >::KeyValuePairTraits, WTF::HashTraits<WTF::ObjectIdentifier<WebCore::FrameIdentifierType> > > { struct KeyValuePair<WTF::ObjectIdentifier<WebCore::FrameIdentifierType>, WTF::RefPtr<WebKit::WebFrameProxy, WTF::DumbPtrTraits<WebKit::WebFrameProxy> > > *x0; } x0; } x19; struct HashSet<WebKit::ProvisionalPageProxy *, WTF::DefaultHash<WebKit::ProvisionalPageProxy *>, WTF::HashTraits<WebKit::ProvisionalPageProxy *> > { struct HashTable<WebKit::ProvisionalPageProxy *, WebKit::ProvisionalPageProxy *, WTF::IdentityExtractor, WTF::DefaultHash<WebKit::ProvisionalPageProxy *>, WTF::HashTraits<WebKit::ProvisionalPageProxy *>, WTF::HashTraits<WebKit::ProvisionalPageProxy *> > { struct ProvisionalPageProxy **x0; } x0; } x20; struct HashMap<unsigned long long, WTF::RefPtr<API::UserInitiatedAction, WTF::DumbPtrTraits<API::UserInitiatedAction> >, WTF::DefaultHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WTF::RefPtr<API::UserInitiatedAction, WTF::DumbPtrTraits<API::UserInitiatedAction> > > > { struct HashTable<unsigned long long, WTF::KeyValuePair<unsigned long long, WTF::RefPtr<API::UserInitiatedAction, WTF::DumbPtrTraits<API::UserInitiatedAction> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long long, WTF::RefPtr<API::UserInitiatedAction, WTF::DumbPtrTraits<API::UserInitiatedAction> > > >, WTF::DefaultHash<unsigned long long>, WTF::HashMap<unsigned long long, WTF::RefPtr<API::UserInitiatedAction, WTF::DumbPtrTraits<API::UserInitiatedAction> >, WTF::DefaultHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WTF::RefPtr<API::UserInitiatedAction, WTF::DumbPtrTraits<API::UserInitiatedAction> > > >::KeyValuePairTraits, WTF::HashTraits<unsigned long long> > { struct KeyValuePair<unsigned long long, WTF::RefPtr<API::UserInitiatedAction, WTF::DumbPtrTraits<API::UserInitiatedAction> > > *x0; } x0; } x21; struct HashMap<WebKit::VisitedLinkStore *, WTF::HashSet<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> > >, WTF::DefaultHash<WebKit::VisitedLinkStore *>, WTF::HashTraits<WebKit::VisitedLinkStore *>, WTF::HashTraits<WTF::HashSet<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> > > > > { struct HashTable<WebKit::VisitedLinkStore *, WTF::KeyValuePair<WebKit::VisitedLinkStore *, WTF::HashSet<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> > > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebKit::VisitedLinkStore *, WTF::HashSet<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> > > > >, WTF::DefaultHash<WebKit::VisitedLinkStore *>, WTF::HashMap<WebKit::VisitedLinkStore *, WTF::HashSet<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> > >, WTF::DefaultHash<WebKit::VisitedLinkStore *>, WTF::HashTraits<WebKit::VisitedLinkStore *>, WTF::HashTraits<WTF::HashSet<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> > > > >::KeyValuePairTraits, WTF::HashTraits<WebKit::VisitedLinkStore *> > { struct KeyValuePair<WebKit::VisitedLinkStore *, WTF::HashSet<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> > > > *x0; } x0; } x22; struct HashSet<WebKit::WebUserContentControllerProxy *, WTF::DefaultHash<WebKit::WebUserContentControllerProxy *>, WTF::HashTraits<WebKit::WebUserContentControllerProxy *> > { struct HashTable<WebKit::WebUserContentControllerProxy *, WebKit::WebUserContentControllerProxy *, WTF::IdentityExtractor, WTF::DefaultHash<WebKit::WebUserContentControllerProxy *>, WTF::HashTraits<WebKit::WebUserContentControllerProxy *>, WTF::HashTraits<WebKit::WebUserContentControllerProxy *> > { struct WebUserContentControllerProxy **x0; } x0; } x23; int x24; struct ProcessThrottler { struct WeakPtrFactory<WebKit::ProcessThrottler, WTF::EmptyCounter> { struct RefPtr<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > { struct WeakPtrImpl<WTF::EmptyCounter> *x0; } x0; } x0; struct ProcessThrottlerClient *x1; int x2; struct unique_ptr<WebKit::ProcessAssertion, std::__1::default_delete<WebKit::ProcessAssertion> > { struct __compressed_pair<WebKit::ProcessAssertion *, std::__1::default_delete<WebKit::ProcessAssertion> > { struct ProcessAssertion *x0; } x0; } x3; struct Timer<WebKit::ProcessThrottler> { void /* function */ **x0; struct Ref<WTF::RunLoop, WTF::DumbPtrTraits<WTF::RunLoop> > { struct RunLoop *x0; } x1; struct RetainPtr<__CFRunLoopTimer *> { void *x0; } x2; struct ProcessThrottler *x3; } x4; struct HashSet<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> *, WTF::DefaultHash<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> *>, WTF::HashTraits<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> *> > { struct HashTable<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> *, WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> *, WTF::IdentityExtractor, WTF::DefaultHash<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> *>, WTF::HashTraits<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> *>, WTF::HashTraits<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> *> > { struct Activity<WebKit::ProcessThrottler::ActivityType::Foreground> **x0; } x0; } x5; struct HashSet<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> *, WTF::DefaultHash<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> *>, WTF::HashTraits<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> *> > { struct HashTable<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> *, WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> *, WTF::IdentityExtractor, WTF::DefaultHash<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> *>, WTF::HashTraits<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> *>, WTF::HashTraits<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> *> > { struct Activity<WebKit::ProcessThrottler::ActivityType::Background> **x0; } x0; } x6; struct Optional<unsigned long long> { BOOL x0; union constexpr_storage_t<unsigned long long> { unsigned char x0; unsigned long long x1; } x1; } x7; BOOL x8; } x25; struct unique_ptr<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background>, std::__1::default_delete<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> > > { struct __compressed_pair<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> *, std::__1::default_delete<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> > > { struct Activity<WebKit::ProcessThrottler::ActivityType::Background> *x0; } x0; } x26; struct RefPtr<WTF::RefCounter<WebKit::ForegroundWebProcessCounterType>::Count, WTF::DumbPtrTraits<WTF::RefCounter<WebKit::ForegroundWebProcessCounterType>::Count> > { struct Count *x0; } x27; struct RefPtr<WTF::RefCounter<WebKit::BackgroundWebProcessCounterType>::Count, WTF::DumbPtrTraits<WTF::RefCounter<WebKit::BackgroundWebProcessCounterType>::Count> > { struct Count *x0; } x28; BOOL x29; BOOL x30; struct HashMap<WTF::String, unsigned long long, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<unsigned long long> > { struct HashTable<WTF::String, WTF::KeyValuePair<WTF::String, unsigned long long>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, unsigned long long> >, WTF::DefaultHash<WTF::String>, WTF::HashMap<WTF::String, unsigned long long, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<unsigned long long> >::KeyValuePairTraits, WTF::HashTraits<WTF::String> > { struct KeyValuePair<WTF::String, unsigned long long> *x0; } x0; } x31; struct Optional<WebCore::RegistrableDomain> { BOOL x0; union storage_t<WebCore::RegistrableDomain> { unsigned char x0; struct RegistrableDomain { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; } x1; } x1; } x32; BOOL x33; int x34; struct Vector<WTF::CompletionHandler<void (bool)>, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct CompletionHandler<void (bool)> *x0; unsigned int x1; unsigned int x2; } x35; struct RefCounter<WebKit::VisibleWebPageCounterType> { struct Function<void (WTF::RefCounterEvent)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> > > { struct CallableWrapperBase<void, WTF::RefCounterEvent> *x0; } x0; } x0; } x0; struct Count *x1; } x36; struct RefPtr<WebKit::WebsiteDataStore, WTF::DumbPtrTraits<WebKit::WebsiteDataStore> > { struct WebsiteDataStore *x0; } x37; BOOL x38; struct unique_ptr<WebKit::UserMediaCaptureManagerProxy, std::__1::default_delete<WebKit::UserMediaCaptureManagerProxy> > { struct __compressed_pair<WebKit::UserMediaCaptureManagerProxy *, std::__1::default_delete<WebKit::UserMediaCaptureManagerProxy> > { struct UserMediaCaptureManagerProxy *x0; } x0; } x39; unsigned int x40; unsigned int x41; BOOL x42; BOOL x43; BOOL x44; BOOL x45; BOOL x46; struct Optional<WebKit::WebProcessProxy::UseLazyStop> { BOOL x0; union constexpr_storage_t<WebKit::WebProcessProxy::UseLazyStop> { unsigned char x0; BOOL x1; } x1; } x47; unsigned int x48; struct RefPtr<WTF::Logger, WTF::DumbPtrTraits<WTF::Logger> > { struct Logger *x0; } x49; struct Optional<WebKit::WebProcessProxy::ServiceWorkerInformation> { BOOL x0; union storage_t<WebKit::WebProcessProxy::ServiceWorkerInformation> { unsigned char x0; struct ServiceWorkerInformation { struct ObjectIdentifier<WebKit::WebPageProxyIdentifierType> { unsigned long long x0; } x0; struct ObjectIdentifier<WebCore::PageIdentifierType> { unsigned long long x0; } x1; struct ServiceWorkerInitializationData { struct Optional<WTF::ObjectIdentifier<WebKit::UserContentControllerIdentifierType> > { BOOL x0; union constexpr_storage_t<WTF::ObjectIdentifier<WebKit::UserContentControllerIdentifierType> > { unsigned char x0; struct ObjectIdentifier<WebKit::UserContentControllerIdentifierType> { unsigned long long x0; } x1; } x1; } x0; struct Vector<std::__1::pair<WTF::String, WebKit::WebCompiledContentRuleListData>, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct pair<WTF::String, WebKit::WebCompiledContentRuleListData> *x0; unsigned int x1; unsigned int x2; } x1; } x2; struct Variant<nullptr_t, WTF::UniqueRef<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> >, WTF::UniqueRef<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> > > { union __variant_data<nullptr_t, WTF::UniqueRef<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> >, WTF::UniqueRef<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> > > { union __variant_data<nullptr_t> { char *x0; struct __dummy_type { } x1; } x0; union __variant_data<WTF::UniqueRef<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> >, WTF::UniqueRef<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> > > { union __variant_data<WTF::UniqueRef<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> > > { struct __storage_wrapper<WTF::UniqueRef<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Background> > > { struct type { unsigned char x0[8]; } x0; } x0; struct __dummy_type { } x1; } x0; union __variant_data<WTF::UniqueRef<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> > > { struct __storage_wrapper<WTF::UniqueRef<WebKit::ProcessThrottler::Activity<WebKit::ProcessThrottler::ActivityType::Foreground> > > { struct type { unsigned char x0[8]; } x0; } x0; struct __dummy_type { } x1; } x1; } x1; } x0; char x1; } x3; struct WeakHashSet<WebKit::WebProcessProxy, WTF::EmptyCounter> { struct HashSet<WTF::Ref<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > >, WTF::DefaultHash<WTF::Ref<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > >, WTF::HashTraits<WTF::Ref<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > > > { struct HashTable<WTF::Ref<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > >, WTF::Ref<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > >, WTF::IdentityExtractor, WTF::DefaultHash<WTF::Ref<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > >, WTF::HashTraits<WTF::Ref<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > >, WTF::HashTraits<WTF::Ref<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > > > { struct Ref<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > *x0; } x0; } x0; } x4; } x1; } x1; } x50; struct HashMap<WTF::ObjectIdentifier<WebCore::SleepDisablerIdentifierType>, std::__1::unique_ptr<WebCore::SleepDisabler, std::__1::default_delete<WebCore::SleepDisabler> >, WTF::DefaultHash<WTF::ObjectIdentifier<WebCore::SleepDisablerIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebCore::SleepDisablerIdentifierType> >, WTF::HashTraits<std::__1::unique_ptr<WebCore::SleepDisabler, std::__1::default_delete<WebCore::SleepDisabler> > > > { struct HashTable<WTF::ObjectIdentifier<WebCore::SleepDisablerIdentifierType>, WTF::KeyValuePair<WTF::ObjectIdentifier<WebCore::SleepDisablerIdentifierType>, std::__1::unique_ptr<WebCore::SleepDisabler, std::__1::default_delete<WebCore::SleepDisabler> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::ObjectIdentifier<WebCore::SleepDisablerIdentifierType>, std::__1::unique_ptr<WebCore::SleepDisabler, std::__1::default_delete<WebCore::SleepDisabler> > > >, WTF::DefaultHash<WTF::ObjectIdentifier<WebCore::SleepDisablerIdentifierType> >, WTF::HashMap<WTF::ObjectIdentifier<WebCore::SleepDisablerIdentifierType>, std::__1::unique_ptr<WebCore::SleepDisabler, std::__1::default_delete<WebCore::SleepDisabler> >, WTF::DefaultHash<WTF::ObjectIdentifier<WebCore::SleepDisablerIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebCore::SleepDisablerIdentifierType> >, WTF::HashTraits<std::__1::unique_ptr<WebCore::SleepDisabler, std::__1::default_delete<WebCore::SleepDisabler> > > >::KeyValuePairTraits, WTF::HashTraits<WTF::ObjectIdentifier<WebCore::SleepDisablerIdentifierType> > > { struct KeyValuePair<WTF::ObjectIdentifier<WebCore::SleepDisablerIdentifierType>, std::__1::unique_ptr<WebCore::SleepDisabler, std::__1::default_delete<WebCore::SleepDisabler> > > *x0; } x0; } x51; struct Optional<WebKit::WebProcessProxy::AudibleMediaActivity> { BOOL x0; union storage_t<WebKit::WebProcessProxy::AudibleMediaActivity> { unsigned char x0; struct AudibleMediaActivity { struct UniqueRef<WebKit::ProcessAssertion> { struct unique_ptr<WebKit::ProcessAssertion, std::__1::default_delete<WebKit::ProcessAssertion> > { struct __compressed_pair<WebKit::ProcessAssertion *, std::__1::default_delete<WebKit::ProcessAssertion> > { struct ProcessAssertion *x0; } x0; } x0; } x0; struct RefPtr<WTF::RefCounter<WebKit::WebProcessWithAudibleMediaCounterType>::Count, WTF::DumbPtrTraits<WTF::RefCounter<WebKit::WebProcessWithAudibleMediaCounterType>::Count> > { struct Count *x0; } x1; } x1; } x1; } x52; } *)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })indirectScribbleInteraction:(id)a0 frameForElement:(id)a1;
- (id)_commonInitializationWithProcessPool:(struct WebProcessPool { void /* function */ **x0; id x1; struct WeakPtrFactory<WebKit::WebProcessPool, WTF::EmptyCounter> { struct RefPtr<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > { struct WeakPtrImpl<WTF::EmptyCounter> *x0; } x0; } x2; void /* function */ **x3; struct Ref<API::ProcessPoolConfiguration, WTF::DumbPtrTraits<API::ProcessPoolConfiguration> > { struct ProcessPoolConfiguration *x0; } x4; struct MessageReceiverMap { struct HashMap<IPC::ReceiverName, IPC::MessageReceiver *, WTF::IntHash<IPC::ReceiverName>, WTF::StrongEnumHashTraits<IPC::ReceiverName>, WTF::HashTraits<IPC::MessageReceiver *> > { struct HashTable<IPC::ReceiverName, WTF::KeyValuePair<IPC::ReceiverName, IPC::MessageReceiver *>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<IPC::ReceiverName, IPC::MessageReceiver *> >, WTF::IntHash<IPC::ReceiverName>, WTF::HashMap<IPC::ReceiverName, IPC::MessageReceiver *, WTF::IntHash<IPC::ReceiverName>, WTF::StrongEnumHashTraits<IPC::ReceiverName>, WTF::HashTraits<IPC::MessageReceiver *> >::KeyValuePairTraits, WTF::StrongEnumHashTraits<IPC::ReceiverName> > { struct KeyValuePair<IPC::ReceiverName, IPC::MessageReceiver *> *x0; } x0; } x0; struct HashMap<std::__1::pair<IPC::ReceiverName, unsigned long long>, IPC::MessageReceiver *, WTF::DefaultHash<std::__1::pair<IPC::ReceiverName, unsigned long long> >, WTF::PairHashTraits<WTF::StrongEnumHashTraits<IPC::ReceiverName>, WTF::HashTraits<unsigned long long> >, WTF::HashTraits<IPC::MessageReceiver *> > { struct HashTable<std::__1::pair<IPC::ReceiverName, unsigned long long>, WTF::KeyValuePair<std::__1::pair<IPC::ReceiverName, unsigned long long>, IPC::MessageReceiver *>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<std::__1::pair<IPC::ReceiverName, unsigned long long>, IPC::MessageReceiver *> >, WTF::DefaultHash<std::__1::pair<IPC::ReceiverName, unsigned long long> >, WTF::HashMap<std::__1::pair<IPC::ReceiverName, unsigned long long>, IPC::MessageReceiver *, WTF::DefaultHash<std::__1::pair<IPC::ReceiverName, unsigned long long> >, WTF::PairHashTraits<WTF::StrongEnumHashTraits<IPC::ReceiverName>, WTF::HashTraits<unsigned long long> >, WTF::HashTraits<IPC::MessageReceiver *> >::KeyValuePairTraits, WTF::PairHashTraits<WTF::StrongEnumHashTraits<IPC::ReceiverName>, WTF::HashTraits<unsigned long long> > > { struct KeyValuePair<std::__1::pair<IPC::ReceiverName, unsigned long long>, IPC::MessageReceiver *> *x0; } x0; } x1; } x5; struct Vector<WTF::RefPtr<WebKit::WebProcessProxy, WTF::DumbPtrTraits<WebKit::WebProcessProxy> >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct RefPtr<WebKit::WebProcessProxy, WTF::DumbPtrTraits<WebKit::WebProcessProxy> > *x0; unsigned int x1; unsigned int x2; } x6; struct WebProcessProxy *x7; struct HashMap<PAL::SessionID, WTF::WeakPtr<WebKit::WebProcessProxy, WTF::EmptyCounter>, WTF::DefaultHash<PAL::SessionID>, WTF::HashTraits<PAL::SessionID>, WTF::HashTraits<WTF::WeakPtr<WebKit::WebProcessProxy, WTF::EmptyCounter> > > { struct HashTable<PAL::SessionID, WTF::KeyValuePair<PAL::SessionID, WTF::WeakPtr<WebKit::WebProcessProxy, WTF::EmptyCounter> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<PAL::SessionID, WTF::WeakPtr<WebKit::WebProcessProxy, WTF::EmptyCounter> > >, WTF::DefaultHash<PAL::SessionID>, WTF::HashMap<PAL::SessionID, WTF::WeakPtr<WebKit::WebProcessProxy, WTF::EmptyCounter>, WTF::DefaultHash<PAL::SessionID>, WTF::HashTraits<PAL::SessionID>, WTF::HashTraits<WTF::WeakPtr<WebKit::WebProcessProxy, WTF::EmptyCounter> > >::KeyValuePairTraits, WTF::HashTraits<PAL::SessionID> > { struct KeyValuePair<PAL::SessionID, WTF::WeakPtr<WebKit::WebProcessProxy, WTF::EmptyCounter> > *x0; } x0; } x8; struct WeakHashSet<WebKit::WebProcessProxy, WTF::EmptyCounter> { struct HashSet<WTF::Ref<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > >, WTF::DefaultHash<WTF::Ref<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > >, WTF::HashTraits<WTF::Ref<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > > > { struct HashTable<WTF::Ref<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > >, WTF::Ref<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > >, WTF::IdentityExtractor, WTF::DefaultHash<WTF::Ref<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > >, WTF::HashTraits<WTF::Ref<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > >, WTF::HashTraits<WTF::Ref<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > > > { struct Ref<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > *x0; } x0; } x0; } x9; BOOL x10; BOOL x11; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x12; struct Optional<WebKit::WebPreferencesStore> { BOOL x0; union storage_t<WebKit::WebPreferencesStore> { unsigned char x0; struct WebPreferencesStore { struct HashMap<WTF::String, WTF::Variant<WTF::String, bool, unsigned int, double>, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::Variant<WTF::String, bool, unsigned int, double> > > { struct HashTable<WTF::String, WTF::KeyValuePair<WTF::String, WTF::Variant<WTF::String, bool, unsigned int, double> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, WTF::Variant<WTF::String, bool, unsigned int, double> > >, WTF::DefaultHash<WTF::String>, WTF::HashMap<WTF::String, WTF::Variant<WTF::String, bool, unsigned int, double>, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::Variant<WTF::String, bool, unsigned int, double> > >::KeyValuePairTraits, WTF::HashTraits<WTF::String> > { struct KeyValuePair<WTF::String, WTF::Variant<WTF::String, bool, unsigned int, double> > *x0; } x0; } x0; struct HashMap<WTF::String, WTF::Variant<WTF::String, bool, unsigned int, double>, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::Variant<WTF::String, bool, unsigned int, double> > > { struct HashTable<WTF::String, WTF::KeyValuePair<WTF::String, WTF::Variant<WTF::String, bool, unsigned int, double> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, WTF::Variant<WTF::String, bool, unsigned int, double> > >, WTF::DefaultHash<WTF::String>, WTF::HashMap<WTF::String, WTF::Variant<WTF::String, bool, unsigned int, double>, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::Variant<WTF::String, bool, unsigned int, double> > >::KeyValuePairTraits, WTF::HashTraits<WTF::String> > { struct KeyValuePair<WTF::String, WTF::Variant<WTF::String, bool, unsigned int, double> > *x0; } x0; } x1; } x1; } x1; } x13; struct Optional<WTF::ObjectIdentifier<WebKit::UserContentControllerIdentifierType> > { BOOL x0; union constexpr_storage_t<WTF::ObjectIdentifier<WebKit::UserContentControllerIdentifierType> > { unsigned char x0; struct ObjectIdentifier<WebKit::UserContentControllerIdentifierType> { unsigned long long x0; } x1; } x1; } x14; struct Ref<WebKit::WebPageGroup, WTF::DumbPtrTraits<WebKit::WebPageGroup> > { struct WebPageGroup *x0; } x15; struct RefPtr<API::Object, WTF::DumbPtrTraits<API::Object> > { struct Object *x0; } x16; struct unique_ptr<API::InjectedBundleClient, std::__1::default_delete<API::InjectedBundleClient> > { struct __compressed_pair<API::InjectedBundleClient *, std::__1::default_delete<API::InjectedBundleClient> > { struct InjectedBundleClient *x0; } x0; } x17; struct WebContextClient { struct WKContextClientV3 { struct WKContextClientBase { int x0; void *x1; } x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; void /* function */ *x4; void /* function */ *x5; void /* function */ *x6; } x0; } x18; struct WebContextConnectionClient { struct WKContextConnectionClientV0 { struct WKContextConnectionClientBase { int x0; void *x1; } x0; void /* function */ *x1; } x0; } x19; struct unique_ptr<API::AutomationClient, std::__1::default_delete<API::AutomationClient> > { struct __compressed_pair<API::AutomationClient *, std::__1::default_delete<API::AutomationClient> > { struct AutomationClient *x0; } x0; } x20; struct UniqueRef<API::DownloadClient> { struct unique_ptr<API::DownloadClient, std::__1::default_delete<API::DownloadClient> > { struct __compressed_pair<API::DownloadClient *, std::__1::default_delete<API::DownloadClient> > { struct DownloadClient *x0; } x0; } x0; } x21; struct unique_ptr<API::LegacyContextHistoryClient, std::__1::default_delete<API::LegacyContextHistoryClient> > { struct __compressed_pair<API::LegacyContextHistoryClient *, std::__1::default_delete<API::LegacyContextHistoryClient> > { struct LegacyContextHistoryClient *x0; } x0; } x22; struct unique_ptr<API::CustomProtocolManagerClient, std::__1::default_delete<API::CustomProtocolManagerClient> > { struct __compressed_pair<API::CustomProtocolManagerClient *, std::__1::default_delete<API::CustomProtocolManagerClient> > { struct CustomProtocolManagerClient *x0; } x0; } x23; struct RefPtr<WebKit::WebAutomationSession, WTF::DumbPtrTraits<WebKit::WebAutomationSession> > { struct WebAutomationSession *x0; } x24; struct Ref<WebKit::VisitedLinkStore, WTF::DumbPtrTraits<WebKit::VisitedLinkStore> > { struct VisitedLinkStore *x0; } x25; BOOL x26; struct PlugInAutoStartProvider { struct WebProcessPool *x0; struct HashMap<PAL::SessionID, WTF::HashMap<WTF::String, WTF::HashMap<unsigned int, WTF::WallTime, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::WallTime> >, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::HashMap<unsigned int, WTF::WallTime, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::WallTime> > > >, WTF::DefaultHash<PAL::SessionID>, WTF::HashTraits<PAL::SessionID>, WTF::HashTraits<WTF::HashMap<WTF::String, WTF::HashMap<unsigned int, WTF::WallTime, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::WallTime> >, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::HashMap<unsigned int, WTF::WallTime, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::WallTime> > > > > > { struct HashTable<PAL::SessionID, WTF::KeyValuePair<PAL::SessionID, WTF::HashMap<WTF::String, WTF::HashMap<unsigned int, WTF::WallTime, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::WallTime> >, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::HashMap<unsigned int, WTF::WallTime, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::WallTime> > > > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<PAL::SessionID, WTF::HashMap<WTF::String, WTF::HashMap<unsigned int, WTF::WallTime, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::WallTime> >, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::HashMap<unsigned int, WTF::WallTime, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::WallTime> > > > > >, WTF::DefaultHash<PAL::SessionID>, WTF::HashMap<PAL::SessionID, WTF::HashMap<WTF::String, WTF::HashMap<unsigned int, WTF::WallTime, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::WallTime> >, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::HashMap<unsigned int, WTF::WallTime, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::WallTime> > > >, WTF::DefaultHash<PAL::SessionID>, WTF::HashTraits<PAL::SessionID>, WTF::HashTraits<WTF::HashMap<WTF::String, WTF::HashMap<unsigned int, WTF::WallTime, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::WallTime> >, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::HashMap<unsigned int, WTF::WallTime, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::WallTime> > > > > >::KeyValuePairTraits, WTF::HashTraits<PAL::SessionID> > { struct KeyValuePair<PAL::SessionID, WTF::HashMap<WTF::String, WTF::HashMap<unsigned int, WTF::WallTime, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::WallTime> >, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::HashMap<unsigned int, WTF::WallTime, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::WallTime> > > > > *x0; } x0; } x1; struct HashMap<PAL::SessionID, WTF::HashMap<unsigned int, WTF::String, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::String> >, WTF::DefaultHash<PAL::SessionID>, WTF::HashTraits<PAL::SessionID>, WTF::HashTraits<WTF::HashMap<unsigned int, WTF::String, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::String> > > > { struct HashTable<PAL::SessionID, WTF::KeyValuePair<PAL::SessionID, WTF::HashMap<unsigned int, WTF::String, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::String> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<PAL::SessionID, WTF::HashMap<unsigned int, WTF::String, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::String> > > >, WTF::DefaultHash<PAL::SessionID>, WTF::HashMap<PAL::SessionID, WTF::HashMap<unsigned int, WTF::String, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::String> >, WTF::DefaultHash<PAL::SessionID>, WTF::HashTraits<PAL::SessionID>, WTF::HashTraits<WTF::HashMap<unsigned int, WTF::String, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::String> > > >::KeyValuePairTraits, WTF::HashTraits<PAL::SessionID> > { struct KeyValuePair<PAL::SessionID, WTF::HashMap<unsigned int, WTF::String, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::String> > > *x0; } x0; } x2; struct Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct String *x0; unsigned int x1; unsigned int x2; } x3; } x27; struct HashSet<WTF::String, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String> > { struct HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> > { struct String *x0; } x0; } x28; struct HashSet<WTF::String, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String> > { struct HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> > { struct String *x0; } x0; } x29; struct HashSet<WTF::String, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String> > { struct HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> > { struct String *x0; } x0; } x30; struct HashSet<WTF::String, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String> > { struct HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> > { struct String *x0; } x0; } x31; struct HashSet<WTF::String, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String> > { struct HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> > { struct String *x0; } x0; } x32; struct HashSet<WTF::String, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String> > { struct HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> > { struct String *x0; } x0; } x33; struct HashSet<WTF::String, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String> > { struct HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> > { struct String *x0; } x0; } x34; BOOL x35; BOOL x36; struct Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct String *x0; unsigned int x1; unsigned int x2; } x37; struct Vector<std::__1::pair<WTF::String, WTF::RefPtr<API::Object, WTF::DumbPtrTraits<API::Object> > >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct pair<WTF::String, WTF::RefPtr<API::Object, WTF::DumbPtrTraits<API::Object> > > *x0; unsigned int x1; unsigned int x2; } x38; BOOL x39; double x40; struct RefPtr<WebKit::WebsiteDataStore, WTF::DumbPtrTraits<WebKit::WebsiteDataStore> > { struct WebsiteDataStore *x0; } x41; struct HashMap<const char *, WTF::RefPtr<WebKit::WebContextSupplement, WTF::DumbPtrTraits<WebKit::WebContextSupplement> >, WTF::PtrHash<const char *>, WTF::HashTraits<const char *>, WTF::HashTraits<WTF::RefPtr<WebKit::WebContextSupplement, WTF::DumbPtrTraits<WebKit::WebContextSupplement> > > > { struct HashTable<const char *, WTF::KeyValuePair<const char *, WTF::RefPtr<WebKit::WebContextSupplement, WTF::DumbPtrTraits<WebKit::WebContextSupplement> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<const char *, WTF::RefPtr<WebKit::WebContextSupplement, WTF::DumbPtrTraits<WebKit::WebContextSupplement> > > >, WTF::PtrHash<const char *>, WTF::HashMap<const char *, WTF::RefPtr<WebKit::WebContextSupplement, WTF::DumbPtrTraits<WebKit::WebContextSupplement> >, WTF::PtrHash<const char *>, WTF::HashTraits<const char *>, WTF::HashTraits<WTF::RefPtr<WebKit::WebContextSupplement, WTF::DumbPtrTraits<WebKit::WebContextSupplement> > > >::KeyValuePairTraits, WTF::HashTraits<const char *> > { struct KeyValuePair<const char *, WTF::RefPtr<WebKit::WebContextSupplement, WTF::DumbPtrTraits<WebKit::WebContextSupplement> > > *x0; } x0; } x42; struct unique_ptr<WebCore::PowerSourceNotifier, std::__1::default_delete<WebCore::PowerSourceNotifier> > { struct __compressed_pair<WebCore::PowerSourceNotifier *, std::__1::default_delete<WebCore::PowerSourceNotifier> > { struct PowerSourceNotifier *x0; } x0; } x43; struct RetainPtr<NSObject> { void *x0; } x44; struct RetainPtr<NSObject> { void *x0; } x45; BOOL x46; BOOL x47; struct unique_ptr<WebKit::NetworkProcessProxy, std::__1::default_delete<WebKit::NetworkProcessProxy> > { struct __compressed_pair<WebKit::NetworkProcessProxy *, std::__1::default_delete<WebKit::NetworkProcessProxy> > { struct NetworkProcessProxy *x0; } x0; } x48; struct HashMap<unsigned long long, WTF::RefPtr<WebKit::GenericCallback<API::Dictionary *>, WTF::DumbPtrTraits<WebKit::GenericCallback<API::Dictionary *> > >, WTF::DefaultHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WTF::RefPtr<WebKit::GenericCallback<API::Dictionary *>, WTF::DumbPtrTraits<WebKit::GenericCallback<API::Dictionary *> > > > > { struct HashTable<unsigned long long, WTF::KeyValuePair<unsigned long long, WTF::RefPtr<WebKit::GenericCallback<API::Dictionary *>, WTF::DumbPtrTraits<WebKit::GenericCallback<API::Dictionary *> > > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long long, WTF::RefPtr<WebKit::GenericCallback<API::Dictionary *>, WTF::DumbPtrTraits<WebKit::GenericCallback<API::Dictionary *> > > > >, WTF::DefaultHash<unsigned long long>, WTF::HashMap<unsigned long long, WTF::RefPtr<WebKit::GenericCallback<API::Dictionary *>, WTF::DumbPtrTraits<WebKit::GenericCallback<API::Dictionary *> > >, WTF::DefaultHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WTF::RefPtr<WebKit::GenericCallback<API::Dictionary *>, WTF::DumbPtrTraits<WebKit::GenericCallback<API::Dictionary *> > > > >::KeyValuePairTraits, WTF::HashTraits<unsigned long long> > { struct KeyValuePair<unsigned long long, WTF::RefPtr<WebKit::GenericCallback<API::Dictionary *>, WTF::DumbPtrTraits<WebKit::GenericCallback<API::Dictionary *> > > > *x0; } x0; } x49; BOOL x50; BOOL x51; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x52; BOOL x53; BOOL x54; BOOL x55; BOOL x56; BOOL x57; struct RefCounter<WebKit::UserObservablePageCounterType> { struct Function<void (WTF::RefCounterEvent)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> > > { struct CallableWrapperBase<void, WTF::RefCounterEvent> *x0; } x0; } x0; } x0; struct Count *x1; } x58; struct RefCounter<WebKit::ProcessSuppressionDisabledCounterType> { struct Function<void (WTF::RefCounterEvent)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> > > { struct CallableWrapperBase<void, WTF::RefCounterEvent> *x0; } x0; } x0; } x0; struct Count *x1; } x59; struct RefCounter<WebKit::HiddenPageThrottlingAutoIncreasesCounterType> { struct Function<void (WTF::RefCounterEvent)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> > > { struct CallableWrapperBase<void, WTF::RefCounterEvent> *x0; } x0; } x0; } x0; struct Count *x1; } x60; struct Timer<WebKit::WebProcessPool> { void /* function */ **x0; struct Ref<WTF::RunLoop, WTF::DumbPtrTraits<WTF::RunLoop> > { struct RunLoop *x0; } x1; struct RetainPtr<__CFRunLoopTimer *> { void *x0; } x2; struct WebProcessPool *x3; } x61; struct RetainPtr<NSMutableDictionary> { void *x0; } x62; struct RefPtr<WTF::RefCounter<WebKit::ProcessSuppressionDisabledCounterType>::Count, WTF::DumbPtrTraits<WTF::RefCounter<WebKit::ProcessSuppressionDisabledCounterType>::Count> > { struct Count *x0; } x63; struct RetainPtr<NSSet> { void *x0; } x64; struct HashMap<WTF::String, WTF::String, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> > { struct HashTable<WTF::String, WTF::KeyValuePair<WTF::String, WTF::String>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, WTF::String> >, WTF::DefaultHash<WTF::String>, WTF::HashMap<WTF::String, WTF::String, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >::KeyValuePairTraits, WTF::HashTraits<WTF::String> > { struct KeyValuePair<WTF::String, WTF::String> *x0; } x0; } x65; struct HashSet<WebKit::WebProcessProxy *, WTF::DefaultHash<WebKit::WebProcessProxy *>, WTF::HashTraits<WebKit::WebProcessProxy *> > { struct HashTable<WebKit::WebProcessProxy *, WebKit::WebProcessProxy *, WTF::IdentityExtractor, WTF::DefaultHash<WebKit::WebProcessProxy *>, WTF::HashTraits<WebKit::WebProcessProxy *>, WTF::HashTraits<WebKit::WebProcessProxy *> > { struct WebProcessProxy **x0; } x0; } x66; BOOL x67; BOOL x68; struct Paths { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x1; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x2; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x3; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x4; struct Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct String *x0; unsigned int x1; unsigned int x2; } x5; } x69; struct HashMap<PAL::SessionID, WTF::HashSet<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> > >, WTF::DefaultHash<PAL::SessionID>, WTF::HashTraits<PAL::SessionID>, WTF::HashTraits<WTF::HashSet<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> > > > > { struct HashTable<PAL::SessionID, WTF::KeyValuePair<PAL::SessionID, WTF::HashSet<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> > > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<PAL::SessionID, WTF::HashSet<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> > > > >, WTF::DefaultHash<PAL::SessionID>, WTF::HashMap<PAL::SessionID, WTF::HashSet<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> > >, WTF::DefaultHash<PAL::SessionID>, WTF::HashTraits<PAL::SessionID>, WTF::HashTraits<WTF::HashSet<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> > > > >::KeyValuePairTraits, WTF::HashTraits<PAL::SessionID> > { struct KeyValuePair<PAL::SessionID, WTF::HashSet<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType>, WTF::DefaultHash<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> >, WTF::HashTraits<WTF::ObjectIdentifier<WebKit::WebPageProxyIdentifierType> > > > *x0; } x0; } x70; struct RefCounter<WebKit::ForegroundWebProcessCounterType> { struct Function<void (WTF::RefCounterEvent)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> > > { struct CallableWrapperBase<void, WTF::RefCounterEvent> *x0; } x0; } x0; } x0; struct Count *x1; } x71; struct RefCounter<WebKit::BackgroundWebProcessCounterType> { struct Function<void (WTF::RefCounterEvent)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> > > { struct CallableWrapperBase<void, WTF::RefCounterEvent> *x0; } x0; } x0; } x0; struct Count *x1; } x72; struct UniqueRef<WebKit::WebBackForwardCache> { struct unique_ptr<WebKit::WebBackForwardCache, std::__1::default_delete<WebKit::WebBackForwardCache> > { struct __compressed_pair<WebKit::WebBackForwardCache *, std::__1::default_delete<WebKit::WebBackForwardCache> > { struct WebBackForwardCache *x0; } x0; } x0; } x73; struct UniqueRef<WebKit::WebProcessCache> { struct unique_ptr<WebKit::WebProcessCache, std::__1::default_delete<WebKit::WebProcessCache> > { struct __compressed_pair<WebKit::WebProcessCache *, std::__1::default_delete<WebKit::WebProcessCache> > { struct WebProcessCache *x0; } x0; } x0; } x74; struct HashMap<WebCore::RegistrableDomain, WTF::RefPtr<WebKit::WebProcessProxy, WTF::DumbPtrTraits<WebKit::WebProcessProxy> >, WTF::DefaultHash<WebCore::RegistrableDomain>, WTF::HashTraits<WebCore::RegistrableDomain>, WTF::HashTraits<WTF::RefPtr<WebKit::WebProcessProxy, WTF::DumbPtrTraits<WebKit::WebProcessProxy> > > > { struct HashTable<WebCore::RegistrableDomain, WTF::KeyValuePair<WebCore::RegistrableDomain, WTF::RefPtr<WebKit::WebProcessProxy, WTF::DumbPtrTraits<WebKit::WebProcessProxy> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::RegistrableDomain, WTF::RefPtr<WebKit::WebProcessProxy, WTF::DumbPtrTraits<WebKit::WebProcessProxy> > > >, WTF::DefaultHash<WebCore::RegistrableDomain>, WTF::HashMap<WebCore::RegistrableDomain, WTF::RefPtr<WebKit::WebProcessProxy, WTF::DumbPtrTraits<WebKit::WebProcessProxy> >, WTF::DefaultHash<WebCore::RegistrableDomain>, WTF::HashTraits<WebCore::RegistrableDomain>, WTF::HashTraits<WTF::RefPtr<WebKit::WebProcessProxy, WTF::DumbPtrTraits<WebKit::WebProcessProxy> > > >::KeyValuePairTraits, WTF::HashTraits<WebCore::RegistrableDomain> > { struct KeyValuePair<WebCore::RegistrableDomain, WTF::RefPtr<WebKit::WebProcessProxy, WTF::DumbPtrTraits<WebKit::WebProcessProxy> > > *x0; } x0; } x75; struct HashMap<WebCore::RegistrableDomain, std::__1::unique_ptr<WebCore::PrewarmInformation, std::__1::default_delete<WebCore::PrewarmInformation> >, WTF::DefaultHash<WebCore::RegistrableDomain>, WTF::HashTraits<WebCore::RegistrableDomain>, WTF::HashTraits<std::__1::unique_ptr<WebCore::PrewarmInformation, std::__1::default_delete<WebCore::PrewarmInformation> > > > { struct HashTable<WebCore::RegistrableDomain, WTF::KeyValuePair<WebCore::RegistrableDomain, std::__1::unique_ptr<WebCore::PrewarmInformation, std::__1::default_delete<WebCore::PrewarmInformation> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::RegistrableDomain, std::__1::unique_ptr<WebCore::PrewarmInformation, std::__1::default_delete<WebCore::PrewarmInformation> > > >, WTF::DefaultHash<WebCore::RegistrableDomain>, WTF::HashMap<WebCore::RegistrableDomain, std::__1::unique_ptr<WebCore::PrewarmInformation, std::__1::default_delete<WebCore::PrewarmInformation> >, WTF::DefaultHash<WebCore::RegistrableDomain>, WTF::HashTraits<WebCore::RegistrableDomain>, WTF::HashTraits<std::__1::unique_ptr<WebCore::PrewarmInformation, std::__1::default_delete<WebCore::PrewarmInformation> > > >::KeyValuePairTraits, WTF::HashTraits<WebCore::RegistrableDomain> > { struct KeyValuePair<WebCore::RegistrableDomain, std::__1::unique_ptr<WebCore::PrewarmInformation, std::__1::default_delete<WebCore::PrewarmInformation> > > *x0; } x0; } x76; struct RefCounter<WebKit::WebProcessWithAudibleMediaCounterType> { struct Function<void (WTF::RefCounterEvent)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::RefCounterEvent> > > { struct CallableWrapperBase<void, WTF::RefCounterEvent> *x0; } x0; } x0; } x0; struct Count *x1; } x77; struct Optional<WebKit::WebProcessPool::AudibleMediaActivity> { BOOL x0; union storage_t<WebKit::WebProcessPool::AudibleMediaActivity> { unsigned char x0; struct AudibleMediaActivity { struct UniqueRef<WebKit::ProcessAssertion> { struct unique_ptr<WebKit::ProcessAssertion, std::__1::default_delete<WebKit::ProcessAssertion> > { struct __compressed_pair<WebKit::ProcessAssertion *, std::__1::default_delete<WebKit::ProcessAssertion> > { struct ProcessAssertion *x0; } x0; } x0; } x0; struct unique_ptr<WebKit::ProcessAssertion, std::__1::default_delete<WebKit::ProcessAssertion> > { struct __compressed_pair<WebKit::ProcessAssertion *, std::__1::default_delete<WebKit::ProcessAssertion> > { struct ProcessAssertion *x0; } x0; } x1; } x1; } x1; } x78; BOOL x79; BOOL x80; struct HashSet<WebCore::RegistrableDomain, WTF::DefaultHash<WebCore::RegistrableDomain>, WTF::HashTraits<WebCore::RegistrableDomain> > { struct HashTable<WebCore::RegistrableDomain, WebCore::RegistrableDomain, WTF::IdentityExtractor, WTF::DefaultHash<WebCore::RegistrableDomain>, WTF::HashTraits<WebCore::RegistrableDomain>, WTF::HashTraits<WebCore::RegistrableDomain> > { struct RegistrableDomain *x0; } x0; } x81; struct OSObjectPtr<NSObject<OS_xpc_object> *> { id x0; } x82; } *)a0 configuration:(struct Ref<API::PageConfiguration, WTF::DumbPtrTraits<API::PageConfiguration> > { struct PageConfiguration *x0; } *)a1;
- (void)selectPositionAtPoint:(struct CGPoint { double x0; double x1; })a0 completionHandler:(id /* block */)a1;
- (id)_moveRight:(BOOL)a0 withHistory:(id)a1;
- (void)_removeVisibilityPropagationViewForGPUProcess;
- (void)_willReceiveEditDragSnapshot;
- (void)_zoomToInitialScaleWithOrigin:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)canBecomeFirstResponder;
- (void)increaseSizeForWebView:(id)a0;
- (void)_updateChangedSelection:(BOOL)a0;
- (void)_windowDidMoveToScreenNotification:(id)a0;
- (void)_alignRightForWebView:(id)a0;
- (void)willStartZoomOrScroll;
- (void)_setTextColorForWebView:(id)a0 sender:(id)a1;
- (BOOL)_waitForDrawToPDFCallback;
- (void)moveBackward:(unsigned int)a0;
- (BOOL)canPerformActionForWebView:(SEL)a0 withSender:(id)a1;
- (void)updateFixedClippingView:(struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; })a0;
- (id)inputView;
- (id)_moveToStartOfParagraph:(BOOL)a0 withHistory:(id)a1;
- (void)_updateForScreen:(id)a0;
- (BOOL)_disableAutomaticKeyboardUI;
- (void)indirectScribbleInteraction:(id)a0 focusElementIfNeeded:(id)a1 referencePoint:(struct CGPoint { double x0; double x1; })a2 completion:(id /* block */)a3;
- (void)_createAndConfigureDoubleTapGestureRecognizer;
- (BOOL)_hasFocusedElement;
- (void)_simulateElementAction:(long long)a0 atLocation:(struct CGPoint { double x0; double x1; })a1;
- (void)_nextAccessoryTabForWebView:(id)a0;
- (void)_setupVisibilityPropagationView;
- (void)_updateSelectionAssistantSuppressionState;
- (void)_previewItemController:(id)a0 commitPreview:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })textLastRect;
- (void)_deleteToEndOfParagraph;
- (void)_didChangeDragInteractionPolicy;
- (void)makeTextWritingDirectionLeftToRight:(id)a0;
- (void)_removeContextMenuViewIfPossible;
- (void)makeTextWritingDirectionNatural:(id)a0;
- (void)_cancelPreviousResetInputViewDeferralRequest;
- (void)pasteAndMatchStyleForWebView:(id)a0;
- (id)_contextMenuInteraction:(id)a0 styleForMenuWithConfiguration:(id)a1;
- (BOOL)_zoomToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withOrigin:(struct CGPoint { double x0; double x1; })a1 fitEntireRect:(BOOL)a2 minimumScale:(double)a3 maximumScale:(double)a4 minimumScrollDistance:(double)a5;
- (void)_didExitStableState;
- (BOOL)_handleDOMPasteRequestWithResult:(unsigned char)a0;
- (void)_twoFingerDoubleTapRecognized:(id)a0;
- (void)requestAsynchronousPositionInformationUpdate:(struct InteractionInformationRequest { struct IntPoint { int x0; int x1; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; })a0;
- (void)scrollViewWillStartPanOrPinchGesture;
- (void)_doubleTapDidFail:(id)a0;
- (void)setUpAdditionalInteractions;
- (void)_updateInputContextAfterBlurringAndRefocusingElement;
- (void)_setDoubleTapGesturesEnabled:(BOOL)a0;
- (id).cxx_construct;
- (BOOL)becomeFirstResponderForWebView;
- (void)_accessibilityRetrieveRectsAtSelectionOffset:(long long)a0 withText:(id)a1;
- (void)_didHandleAdditionalDragItemsRequest:(BOOL)a0;
- (void)accessibilityRetrieveSpeakSelectionContent;
- (void)_didPerformAction:(SEL)a0 sender:(id)a1;
- (void)_contextMenuInteraction:(id)a0 configurationForMenuAtLocation:(struct CGPoint { double x0; double x1; })a1 completion:(id /* block */)a2;
- (void)replaceText:(id)a0 withText:(id)a1;
- (void)contextMenuInteraction:(id)a0 willDisplayMenuForConfiguration:(id)a1 animator:(id)a2;
- (id)wordRangeContainingCaretSelection;
- (void)_restoreCalloutBarIfNeeded;
- (void)_hideTargetedPreviewContainerViews;
- (void)_showTapHighlight;
- (BOOL)deferringGestureRecognizer:(id)a0 shouldDeferOtherGestureRecognizer:(id)a1;
- (BOOL)gestureRecognizer:(id)a0 canPreventGestureRecognizer:(id)a1;
- (void)updateSelectionWithExtentPoint:(struct CGPoint { double x0; double x1; })a0 completionHandler:(id /* block */)a1;
- (void)_disableDoubleTapGesturesDuringTapIfNecessary:(unsigned long long)a0;
- (double)_targetContentZoomScaleForRect:(const struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } *)a0 currentScale:(double)a1 fitEntireRect:(BOOL)a2 minimumScale:(double)a3 maximumScale:(double)a4;
- (void)actionSheetAssistant:(id)a0 openElementAtLocation:(struct CGPoint { double x0; double x1; })a1;
- (id)_dataForPreviewItemController:(id)a0 atPosition:(struct CGPoint { double x0; double x1; })a1 type:(long long *)a2;
- (void)continueContextMenuInteraction:(id /* block */)a0;
- (void)indirectScribbleInteraction:(id)a0 requestElementsInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 completion:(id /* block */)a2;
- (void)_promptForReplaceForWebView:(id)a0;
- (struct RetainPtr<UIView> { void *x0; })_createPreviewContainerWithLayerName:(id)a0;
- (void)_doubleTapRecognized:(id)a0;
- (void)_alignJustifiedForWebView:(id)a0;
- (void)_lookupForWebView:(id)a0;
- (void)_unregisterPreview;
- (void)cleanUpDragSourceSessionState;
- (void)contextMenuInteraction:(id)a0 willEndForConfiguration:(id)a1 animator:(id)a2;
- (void)beginSelectionInDirection:(long long)a0 completionHandler:(id /* block */)a1;
- (void)insertText:(id)a0 alternatives:(id)a1 style:(long long)a2;
- (void)selectPositionAtPoint:(struct CGPoint { double x0; double x1; })a0 withContextRequest:(id)a1 completionHandler:(id /* block */)a2;
- (id)_createTargetedContextMenuHintPreviewIfPossible;
- (void)_showImageSheet;
- (void)requestDocumentContext:(id)a0 completionHandler:(id /* block */)a1;
- (void)dragInteraction:(id)a0 session:(id)a1 didEndWithOperation:(unsigned long long)a2;
- (id)selectedText;
- (void)_gpuProcessCrashed;
- (void)_requestDOMPasteAccessWithElementRect:(const struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } *)a0 originIdentifier:(const struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } *)a1 completionHandler:(struct CompletionHandler<void (WebCore::DOMPasteAccessResponse)> { struct Function<void (WebCore::DOMPasteAccessResponse)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, WebCore::DOMPasteAccessResponse>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WebCore::DOMPasteAccessResponse> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, WebCore::DOMPasteAccessResponse> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WebCore::DOMPasteAccessResponse> > > { struct CallableWrapperBase<void, WebCore::DOMPasteAccessResponse> *x0; } x0; } x0; } x0; } *)a2;
- (void)_showDataDetectorsUIForPositionInformation:(const struct InteractionInformationAtPosition { struct InteractionInformationRequest { struct IntPoint { int x0; int x1; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; } x0; BOOL x1; struct Optional<bool> { BOOL x0; union constexpr_storage_t<bool> { unsigned char x0; BOOL x1; } x1; } x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; unsigned long long x12; BOOL x13; BOOL x14; BOOL x15; struct FloatPoint { float x0; float x1; } x16; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x17; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x18; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x19; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x20; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x21; struct RefPtr<WebKit::ShareableBitmap, WTF::DumbPtrTraits<WebKit::ShareableBitmap> > { struct ShareableBitmap *x0; } x22; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x23; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x24; float x25; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x26; struct Optional<WebCore::Cursor> { BOOL x0; union storage_t<WebCore::Cursor> { unsigned char x0; struct Cursor { int x0; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x1; struct IntPoint { int x0; int x1; } x2; void *x3; } x1; } x1; } x27; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x2; struct Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct FloatRect *x0; unsigned int x1; unsigned int x2; } x3; float x4; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x5; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x6; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x7; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x8; unsigned char x9; struct OptionSet<WebCore::TextIndicatorOption> { unsigned short x0; } x10; } x28; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x29; struct RetainPtr<NSArray> { void *x0; } x30; struct Optional<WebCore::ElementContext> { BOOL x0; union constexpr_storage_t<WebCore::ElementContext> { unsigned char x0; struct ElementContext { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct ObjectIdentifier<WebCore::PageIdentifierType> { unsigned long long x0; } x1; struct ObjectIdentifier<WebCore::DocumentIdentifierType> { unsigned long long x0; } x2; struct ObjectIdentifier<WebCore::ElementIdentifierType> { unsigned long long x0; } x3; } x1; } x1; } x31; } *)a0;
- (void)_doneDeferringNativeGestures:(BOOL)a0;
- (id)containerForDropPreviews;
- (double)keyboardScrollViewAnimator:(id)a0 distanceForIncrement:(unsigned char)a1 inDirection:(unsigned char)a2;
- (void)replaceForWebView:(id)a0;
- (void)accessoryOpen;
- (BOOL)_currentPositionInformationIsApproximatelyValidForRequest:(const struct InteractionInformationRequest { struct IntPoint { int x0; int x1; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; } *)a0 radiusForApproximation:(int)a1;
- (void)_didCommitLoadForMainFrame;
- (id)_presentationSnapshotForPreviewItemController:(id)a0;
- (void)_willBeginTextInteractionInTextInputContext:(id)a0;
- (id)inputLabelText;
- (void)_removeVisibilityPropagationView;
- (void)indirectScribbleInteraction:(id)a0 didFinishWritingInElement:(id)a1;
- (id)createTargetedContextMenuHintForActionSheetAssistant:(id)a0;
- (void)_singleTapDidReset:(id)a0;
- (id)containerForContextMenuHintPreviews;
- (void)_setAccessibilityWebProcessToken:(id)a0;
- (void)changeSelectionWithGestureAt:(struct CGPoint { double x0; double x1; })a0 withGesture:(long long)a1 withState:(long long)a2 withFlags:(long long)a3;
- (void)requestRectsToEvadeForSelectionCommandsWithCompletionHandler:(id /* block */)a0;
- (id)_presentationRectsForPreviewItemController:(id)a0;
- (void)_previousAccessoryTabForWebView:(id)a0;
- (void)replaceRangeWithTextWithoutClosingTyping:(id)a0 replacementText:(id)a1;
- (void)mouseGestureRecognizerChanged:(id)a0;
- (void)_gpuProcessDidCreateContextForVisibilityPropagation;
- (BOOL)_restoreFocusWithToken:(id)a0;
- (BOOL)actionSheetAssistant:(id)a0 showCustomSheetForElement:(id)a1;
- (void)_addDefaultGestureRecognizers;
- (void)_insertNestedOrderedListForWebView:(id)a0;
- (void)_invokeAndRemovePendingHandlersValidForCurrentPositionInformation;
- (void)cutForWebView:(id)a0;
- (void)decreaseSizeForWebView:(id)a0;
- (BOOL)ensurePositionInformationIsUpToDate:(struct InteractionInformationRequest { struct IntPoint { int x0; int x1; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; })a0;
- (void)_dragInteraction:(id)a0 prepareForSession:(id)a1 completion:(id /* block */)a2;
- (void)_scheduleResetInputViewDeferralAfterBecomingFirstResponder;
- (void)endEditingAndUpdateFocusAppearanceWithReason:(long long)a0;
- (id)targetForAction:(SEL)a0 withSender:(id)a1;
- (BOOL)_mayDisableDoubleTapGesturesDuringSingleTap;
- (void)_previewItemControllerDidCancelPreview:(id)a0;
- (void)makeTextWritingDirectionNaturalForWebView:(id)a0;
- (void)insertTextPlaceholderWithSize:(struct CGSize { double x0; double x1; })a0 completionHandler:(id /* block */)a1;
- (void)_accessibilityStoreSelection;
- (double)_initialScaleFactor;
- (void)_setFontForWebView:(id)a0 sender:(id)a1;
- (long long)offsetFromPosition:(id)a0 toPosition:(id)a1;
- (void)moveSelectionAtBoundary:(long long)a0 inDirection:(long long)a1 completionHandler:(id /* block */)a2;
- (id)dragInteraction:(id)a0 previewForCancellingItem:(id)a1 withDefault:(id)a2;
- (long long)comparePosition:(id)a0 toPosition:(id)a1;
- (void)_positionInformationDidChange:(const struct InteractionInformationAtPosition { struct InteractionInformationRequest { struct IntPoint { int x0; int x1; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; } x0; BOOL x1; struct Optional<bool> { BOOL x0; union constexpr_storage_t<bool> { unsigned char x0; BOOL x1; } x1; } x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; unsigned long long x12; BOOL x13; BOOL x14; BOOL x15; struct FloatPoint { float x0; float x1; } x16; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x17; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x18; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x19; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x20; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x21; struct RefPtr<WebKit::ShareableBitmap, WTF::DumbPtrTraits<WebKit::ShareableBitmap> > { struct ShareableBitmap *x0; } x22; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x23; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x24; float x25; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x26; struct Optional<WebCore::Cursor> { BOOL x0; union storage_t<WebCore::Cursor> { unsigned char x0; struct Cursor { int x0; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x1; struct IntPoint { int x0; int x1; } x2; void *x3; } x1; } x1; } x27; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x2; struct Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct FloatRect *x0; unsigned int x1; unsigned int x2; } x3; float x4; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x5; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x6; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x7; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x8; unsigned char x9; struct OptionSet<WebCore::TextIndicatorOption> { unsigned short x0; } x10; } x28; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x29; struct RetainPtr<NSArray> { void *x0; } x30; struct Optional<WebCore::ElementContext> { BOOL x0; union constexpr_storage_t<WebCore::ElementContext> { unsigned char x0; struct ElementContext { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct ObjectIdentifier<WebCore::PageIdentifierType> { unsigned long long x0; } x1; struct ObjectIdentifier<WebCore::DocumentIdentifierType> { unsigned long long x0; } x2; struct ObjectIdentifier<WebCore::ElementIdentifierType> { unsigned long long x0; } x3; } x1; } x1; } x31; } *)a0;
- (void)_setMarkedText:(id)a0 highlights:(const struct Vector<WebCore::CompositionHighlight, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct CompositionHighlight *x0; unsigned int x1; unsigned int x2; } *)a1 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)alignRightForWebView:(id)a0;
- (void)_accessibilityClearSelection;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (BOOL)requiresKeyEvents;
- (unsigned long long)_dragDestinationActionForDropSession:(id)a0;
- (void)updateTextSuggestionsForInputDelegate;
- (void)_elementDidBlur;
- (void)decreaseSize:(id)a0;
- (void)fileUploadPanelDidDismiss:(id)a0;
- (void)removeTextPlaceholder:(id)a0 willInsertText:(BOOL)a1 completionHandler:(id /* block */)a2;
- (SEL)_actionForLongPress;
- (BOOL)_interpretKeyEvent:(id)a0 isCharEvent:(BOOL)a1;
- (void)_updateChangedSelection;
- (void)didUpdateVisibleRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 unobscuredRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 contentInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a2 unobscuredRectInScrollViewCoordinates:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3 obscuredInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a4 unobscuredSafeAreaInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a5 inputViewBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a6 scale:(double)a7 minimumScale:(double)a8 inStableState:(BOOL)a9 isChangingObscuredInsetsInteractively:(BOOL)a10 enclosedInScrollableAncestorView:(BOOL)a11 sendEvenIfUnchanged:(BOOL)a12;
- (void)_toggleStrikeThroughForWebView:(id)a0;
- (void)_webViewDestroyed;
- (BOOL)gestureRecognizerShouldBegin:(id)a0;
- (void)changeSelectionWithGestureAt:(struct CGPoint { double x0; double x1; })a0 withGesture:(long long)a1 withState:(long long)a2;
- (void)_didCommitLayerTree:(const struct RemoteLayerTreeTransaction { unsigned long long x0; struct Vector<WTF::RefPtr<WebKit::PlatformCALayerRemote, WTF::DumbPtrTraits<WebKit::PlatformCALayerRemote> >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct RefPtr<WebKit::PlatformCALayerRemote, WTF::DumbPtrTraits<WebKit::PlatformCALayerRemote> > *x0; unsigned int x1; unsigned int x2; } x1; struct HashMap<unsigned long long, std::__1::unique_ptr<WebKit::RemoteLayerTreeTransaction::LayerProperties, std::__1::default_delete<WebKit::RemoteLayerTreeTransaction::LayerProperties> >, WTF::DefaultHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<std::__1::unique_ptr<WebKit::RemoteLayerTreeTransaction::LayerProperties, std::__1::default_delete<WebKit::RemoteLayerTreeTransaction::LayerProperties> > > > { struct HashTable<unsigned long long, WTF::KeyValuePair<unsigned long long, std::__1::unique_ptr<WebKit::RemoteLayerTreeTransaction::LayerProperties, std::__1::default_delete<WebKit::RemoteLayerTreeTransaction::LayerProperties> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long long, std::__1::unique_ptr<WebKit::RemoteLayerTreeTransaction::LayerProperties, std::__1::default_delete<WebKit::RemoteLayerTreeTransaction::LayerProperties> > > >, WTF::DefaultHash<unsigned long long>, WTF::HashMap<unsigned long long, std::__1::unique_ptr<WebKit::RemoteLayerTreeTransaction::LayerProperties, std::__1::default_delete<WebKit::RemoteLayerTreeTransaction::LayerProperties> >, WTF::DefaultHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<std::__1::unique_ptr<WebKit::RemoteLayerTreeTransaction::LayerProperties, std::__1::default_delete<WebKit::RemoteLayerTreeTransaction::LayerProperties> > > >::KeyValuePairTraits, WTF::HashTraits<unsigned long long> > { struct KeyValuePair<unsigned long long, std::__1::unique_ptr<WebKit::RemoteLayerTreeTransaction::LayerProperties, std::__1::default_delete<WebKit::RemoteLayerTreeTransaction::LayerProperties> > > *x0; } x0; } x2; struct Vector<WebKit::RemoteLayerTreeTransaction::LayerCreationProperties, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct LayerCreationProperties *x0; unsigned int x1; unsigned int x2; } x3; struct Vector<unsigned long long, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { unsigned long long *x0; unsigned int x1; unsigned int x2; } x4; struct Vector<unsigned long long, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { unsigned long long *x0; unsigned int x1; unsigned int x2; } x5; struct Vector<unsigned long long, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { unsigned long long *x0; unsigned int x1; unsigned int x2; } x6; struct Vector<WebKit::CallbackID, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct CallbackID *x0; unsigned int x1; unsigned int x2; } x7; struct IntSize { int x0; int x1; } x8; struct IntPoint { int x0; int x1; } x9; struct LayoutSize { struct LayoutUnit { int x0; } x0; struct LayoutUnit { int x0; } x1; } x10; struct LayoutPoint { struct LayoutUnit { int x0; } x0; struct LayoutUnit { int x0; } x1; } x11; struct LayoutPoint { struct LayoutUnit { int x0; } x0; struct LayoutUnit { int x0; } x1; } x12; struct IntPoint { int x0; int x1; } x13; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x14; double x15; double x16; double x17; double x18; double x19; unsigned long long x20; struct MonotonicObjectIdentifier<WebKit::TransactionIDType> { unsigned long long x0; } x21; unsigned long long x22; struct OptionSet<WebCore::LayoutMilestone> { unsigned int x0; } x23; BOOL x24; BOOL x25; BOOL x26; BOOL x27; BOOL x28; BOOL x29; struct Optional<WebKit::EditorState> { BOOL x0; union storage_t<WebKit::EditorState> { unsigned char x0; struct EditorState { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; struct PostLayoutData { unsigned int x0; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x1; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x2; unsigned long long x3; unsigned int x4; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x5; unsigned int x6; unsigned char x7; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x8; struct Vector<WebCore::SelectionRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct SelectionRect *x0; unsigned int x1; unsigned int x2; } x9; struct Vector<WebCore::SelectionRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct SelectionRect *x0; unsigned int x1; unsigned int x2; } x10; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x11; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x12; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x13; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x14; int x15; int x16; int x17; struct Vector<WTF::ObjectIdentifier<WebCore::DictationContextType>, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct ObjectIdentifier<WebCore::DictationContextType> *x0; unsigned int x1; unsigned int x2; } x18; BOOL x19; BOOL x20; BOOL x21; BOOL x22; BOOL x23; BOOL x24; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x25; BOOL x26; BOOL x27; BOOL x28; struct Optional<WebCore::FontAttributes> { BOOL x0; union storage_t<WebCore::FontAttributes> { unsigned char x0; struct FontAttributes { struct RetainPtr<UIFont> { void *x0; } x0; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x1; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x2; struct FontShadow { struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x0; struct FloatSize { float x0; float x1; } x1; double x2; } x3; unsigned char x4; unsigned char x5; struct Vector<WebCore::TextList, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct TextList *x0; unsigned int x1; unsigned int x2; } x6; BOOL x7; BOOL x8; } x1; } x1; } x29; BOOL x30; BOOL x31; BOOL x32; } x10; } x1; } x1; } x30; struct Optional<unsigned long long> { BOOL x0; union constexpr_storage_t<unsigned long long> { unsigned char x0; unsigned long long x1; } x1; } x31; } *)a0;
- (BOOL)_scrollToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withOrigin:(struct CGPoint { double x0; double x1; })a1 minimumScrollDistance:(double)a2;
- (void)_stopSuppressingSelectionAssistantForReason:(unsigned char)a0;
- (void)_doAfterResettingSingleTapGesture:(id /* block */)a0;
- (struct OptionSet<WebCore::DragSourceAction> { unsigned char x0; })_allowedDragSourceActions;
- (void)_pasteAndMatchStyleForWebView:(id)a0;
- (void)_prepareToDragPromisedAttachment:(const struct PromisedAttachmentInfo { struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x0; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x1; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x2; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x3; struct Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct String *x0; unsigned int x1; unsigned int x2; } x4; struct Vector<WTF::RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> > *x0; unsigned int x1; unsigned int x2; } x5; } *)a0;
- (void)actionSheetAssistant:(id)a0 performAction:(BOOL)a1;
- (void)_pasteAndMatchStyle:(id)a0;
- (void)_changeListTypeForWebView:(id)a0;
- (BOOL)actionSheetAssistant:(id)a0 shouldIncludeAppLinkActionsForElement:(id)a1;
- (struct Vector<WebKit::OptionItem, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct OptionItem *x0; unsigned int x1; unsigned int x2; } *)focusedSelectElementOptions;
- (void)_interactionStartedFromPreviewItemController:(id)a0;
- (void)actionSheetAssistant:(id)a0 getAlternateURLForImage:(id)a1 completion:(id /* block */)a2;
- (BOOL)canShowNonEmptySelectionView;
- (BOOL)gestureRecognizer:(id)a0 isInterruptingMomentumScrollingWithEvent:(id)a1;
- (void)_cancelPendingAutocorrectionContextHandler;
- (void)_endEditing;
- (void)_becomeFirstResponderWithSelectionMovingForward:(BOOL)a0 completionHandler:(id /* block */)a1;
- (unsigned long long)_wk_pageCountForPrintFormatter:(id)a0;
- (void)cleanUpInteraction;
- (void)contextMenuInteraction:(id)a0 willPerformPreviewActionForMenuWithConfiguration:(id)a1 animator:(id)a2;
- (struct Optional<WebKit::InteractionInformationAtPosition> { BOOL x0; union storage_t<WebKit::InteractionInformationAtPosition> { unsigned char x0; struct InteractionInformationAtPosition { struct InteractionInformationRequest { struct IntPoint { int x0; int x1; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; } x0; BOOL x1; struct Optional<bool> { BOOL x0; union constexpr_storage_t<bool> { unsigned char x0; BOOL x1; } x1; } x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; unsigned long long x12; BOOL x13; BOOL x14; BOOL x15; struct FloatPoint { float x0; float x1; } x16; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x17; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x18; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x19; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x20; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x21; struct RefPtr<WebKit::ShareableBitmap, WTF::DumbPtrTraits<WebKit::ShareableBitmap> > { struct ShareableBitmap *x0; } x22; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x23; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x24; float x25; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x26; struct Optional<WebCore::Cursor> { BOOL x0; union storage_t<WebCore::Cursor> { unsigned char x0; struct Cursor { int x0; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x1; struct IntPoint { int x0; int x1; } x2; void *x3; } x1; } x1; } x27; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x2; struct Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct FloatRect *x0; unsigned int x1; unsigned int x2; } x3; float x4; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x5; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x6; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x7; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x8; unsigned char x9; struct OptionSet<WebCore::TextIndicatorOption> { unsigned short x0; } x10; } x28; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x29; struct RetainPtr<NSArray> { void *x0; } x30; struct Optional<WebCore::ElementContext> { BOOL x0; union constexpr_storage_t<WebCore::ElementContext> { unsigned char x0; struct ElementContext { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct ObjectIdentifier<WebCore::PageIdentifierType> { unsigned long long x0; } x1; struct ObjectIdentifier<WebCore::DocumentIdentifierType> { unsigned long long x0; } x2; struct ObjectIdentifier<WebCore::ElementIdentifierType> { unsigned long long x0; } x3; } x1; } x1; } x31; } x1; } x1; })positionInformationForActionSheetAssistant:(id)a0;
- (void)replaceDictatedText:(id)a0 withText:(id)a1;
- (BOOL)selectFormAccessoryHasCheckedItemAtRow:(long long)a0;
- (void)dragInteraction:(id)a0 item:(id)a1 willAnimateCancelWithAnimator:(id)a2;
- (void)_setFontSizeForWebView:(double)a0 sender:(id)a1;
- (void)_willStartScrollingOrZooming;
- (void)_didChangeDragCaretRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 currentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (BOOL)isPosition:(id)a0 withinTextUnit:(long long)a1 inDirection:(long long)a2;
- (void)handleKeyWebEvent:(id)a0;
- (void)setSelectedDOMRange:(id)a0 affinityDownstream:(BOOL)a1;
- (void)setUpDragAndDropInteractions;
- (void)actionSheetAssistant:(id)a0 willStartInteractionWithElement:(id)a1;
- (BOOL)shouldSuppressUpdateCandidateView;
- (void)startRelinquishingFirstResponderToFocusedElement;
- (id)supportedPasteboardTypesForCurrentSelection;
- (BOOL)gestureRecognizerMayPanWebView:(id)a0;
- (void)modifierFlagsDidChangeFrom:(long long)a0 to:(long long)a1;
- (void)_simulateLongPressActionAtLocation:(struct CGPoint { double x0; double x1; })a0;
- (void)cleanupScribbleInteraction;
- (id)cursorRegionForPositionInformation:(struct InteractionInformationAtPosition { struct InteractionInformationRequest { struct IntPoint { int x0; int x1; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; } x0; BOOL x1; struct Optional<bool> { BOOL x0; union constexpr_storage_t<bool> { unsigned char x0; BOOL x1; } x1; } x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; unsigned long long x12; BOOL x13; BOOL x14; BOOL x15; struct FloatPoint { float x0; float x1; } x16; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x17; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x18; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x19; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x20; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x21; struct RefPtr<WebKit::ShareableBitmap, WTF::DumbPtrTraits<WebKit::ShareableBitmap> > { struct ShareableBitmap *x0; } x22; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x23; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x24; float x25; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x26; struct Optional<WebCore::Cursor> { BOOL x0; union storage_t<WebCore::Cursor> { unsigned char x0; struct Cursor { int x0; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x1; struct IntPoint { int x0; int x1; } x2; void *x3; } x1; } x1; } x27; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x2; struct Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct FloatRect *x0; unsigned int x1; unsigned int x2; } x3; float x4; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x5; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x6; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x7; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x8; unsigned char x9; struct OptionSet<WebCore::TextIndicatorOption> { unsigned short x0; } x10; } x28; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x29; struct RetainPtr<NSArray> { void *x0; } x30; struct Optional<WebCore::ElementContext> { BOOL x0; union constexpr_storage_t<WebCore::ElementContext> { unsigned char x0; struct ElementContext { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct ObjectIdentifier<WebCore::PageIdentifierType> { unsigned long long x0; } x1; struct ObjectIdentifier<WebCore::DocumentIdentifierType> { unsigned long long x0; } x2; struct ObjectIdentifier<WebCore::ElementIdentifierType> { unsigned long long x0; } x3; } x1; } x1; } x31; } *)a0 point:(struct CGPoint { double x0; double x1; })a1;
- (void)didInterruptScrolling;
- (void)selectWordBackward;
- (void)_webTouchEvent:(const struct NativeWebTouchEvent { unsigned int x0; struct OptionSet<WebKit::WebEvent::Modifier> { unsigned char x0; } x1; struct WallTime { double x0; } x2; struct Vector<WebKit::WebPlatformTouchPoint, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct WebPlatformTouchPoint *x0; unsigned int x1; unsigned int x2; } x3; struct IntPoint { int x0; int x1; } x4; BOOL x5; BOOL x6; BOOL x7; float x8; float x9; } *)a0 preventsNativeGestures:(BOOL)a1;
- (void)_didNotHandleTapAsClick:(const struct IntPoint { int x0; int x1; } *)a0;
- (BOOL)shouldSynthesizeKeyEvents;
- (void)_alignRight:(id)a0;
- (void)_removeDefaultGestureRecognizers;
- (void)_updateLongPressAndHighlightLongPressGestures;
- (void)alignCenterForWebView:(id)a0;
- (void)_cursorInteraction:(id)a0 regionForLocation:(struct CGPoint { double x0; double x1; })a1 defaultRegion:(id)a2 completion:(id /* block */)a3;
- (void)_doubleTapRecognizedForDoubleClick:(id)a0;
- (void)insertNestedUnorderedListForWebView:(id)a0;
- (void)toggleUnderline:(id)a0;
- (void)_scrollingNodeScrollingWillBegin;
- (void)_interactionStoppedFromPreviewItemController:(id)a0;
- (void)_scrollingNodeScrollingDidEnd;
- (double)dragLiftDelay;
- (id)_uiTextSelectionRects;
- (void)willFinishIgnoringCalloutBarFadeAfterPerformingAction;
- (void)_insertUnorderedList:(id)a0;
- (void)adjustSelectionWithDelta:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 completionHandler:(id /* block */)a1;
- (void)insertOrderedListForWebView:(id)a0;
- (BOOL)_allowAnimatedUpdateSelectionRectViews;
- (void)keyboardScrollViewAnimatorWillScroll:(id)a0;
- (id)selectedTextForActionSheetAssistant:(id)a0;
- (void)selectAllForWebView:(id)a0;
- (void)changeSelectionWithTouchAt:(struct CGPoint { double x0; double x1; })a0 withSelectionTouch:(long long)a1 baseIsStart:(BOOL)a2 withFlags:(long long)a3;
- (void)_changeListType:(id)a0;
- (BOOL)_dragInteraction:(id)a0 item:(id)a1 shouldDelaySetDownAnimationWithCompletion:(id /* block */)a2;
- (id)_deferringGestureRecognizers;
- (void)moveByOffset:(long long)a0;

@end
