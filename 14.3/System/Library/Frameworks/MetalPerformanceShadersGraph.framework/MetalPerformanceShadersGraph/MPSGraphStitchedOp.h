@class NSArray, MPSGraphTensor;

@interface MPSGraphStitchedOp : MPSGraphOperation {
    id /* block */ _stitchingBlock;
    MPSGraphTensor *_finalOutputTensorForStitchedRegion;
    NSArray *_opsAddedInStitchedRegion;
}

- (void).cxx_destruct;
- (struct Value { struct PointerIntPair<void *, 2, mlir::Value::Kind, mlir::Value::ImplTypeTraits, llvm::PointerIntPairInfo<void *, 2, mlir::Value::ImplTypeTraits> > { long long x0; } x0; })makeMLIROpWithBuilder:(struct OpBuilder { struct MLIRContext *x0; struct Block *x1; struct ilist_iterator<llvm::ilist_detail::node_options<mlir::Operation, false, false, void>, false, false> { struct ilist_node_impl<llvm::ilist_detail::node_options<mlir::Operation, false, false, void> > *x0; } x2; struct Listener *x3; } *)a0 symbolTable:(struct MPSSymbolTable { struct StringMap<std::__1::basic_string<char>, llvm::MallocAllocator> { struct StringMapEntryBase **x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; struct MallocAllocator { } x5; } x0; } *)a1 inputValues:(struct vector<mlir::Value, std::__1::allocator<mlir::Value> > { struct Value *x0; struct Value *x1; struct __compressed_pair<mlir::Value *, std::__1::allocator<mlir::Value> > { struct Value *x0; } x2; } *)a2 opInitialization:(BOOL)a3 name:(id)a4;
- (void)recurseOperation:(id)a0 builder:(struct OpBuilder { struct MLIRContext *x0; struct Block *x1; struct ilist_iterator<llvm::ilist_detail::node_options<mlir::Operation, false, false, void>, false, false> { struct ilist_node_impl<llvm::ilist_detail::node_options<mlir::Operation, false, false, void> > *x0; } x2; struct Listener *x3; } *)a1 symbolTable:(struct MPSSymbolTable { struct StringMap<std::__1::basic_string<char>, llvm::MallocAllocator> { struct StringMapEntryBase **x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; struct MallocAllocator { } x5; } x0; } *)a2 tensorToValueMap:(struct map<MPSGraphTensor *, mlir::Value, std::__1::less<MPSGraphTensor *>, std::__1::allocator<std::__1::pair<MPSGraphTensor *const, mlir::Value> > > { struct __tree<std::__1::__value_type<MPSGraphTensor *, mlir::Value>, std::__1::__map_value_compare<MPSGraphTensor *, std::__1::__value_type<MPSGraphTensor *, mlir::Value>, std::__1::less<MPSGraphTensor *>, true>, std::__1::allocator<std::__1::__value_type<MPSGraphTensor *, mlir::Value> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<MPSGraphTensor *, mlir::Value>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<MPSGraphTensor *, std::__1::__value_type<MPSGraphTensor *, mlir::Value>, std::__1::less<MPSGraphTensor *>, true> > { unsigned long long x0; } x2; } x0; } *)a3 operationsRecursed:(id)a4;
- (id)initWithGraph:(id)a0 withBlock:(id /* block */)a1 inputTensors:(id)a2 controlDependencies:(id)a3 name:(id)a4;

@end
