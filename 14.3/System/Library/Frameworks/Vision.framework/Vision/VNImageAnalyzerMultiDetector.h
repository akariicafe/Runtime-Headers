@class _VNImageAnalyzerMultiDetectorSceneOperationPointsCache, NSMutableDictionary;

@interface VNImageAnalyzerMultiDetector : VNDetector {
    unsigned long long _model;
    struct shared_ptr<vision::mod::ImageClassifier_HierarchicalModel> { struct ImageClassifier_HierarchicalModel *__ptr_; struct __shared_weak_count *__cntrl_; } _defaultSceneClassificationHierarchicalModel;
    struct unique_ptr<vision::mod::ImageAnalyzer, std::__1::default_delete<vision::mod::ImageAnalyzer> > { struct __compressed_pair<vision::mod::ImageAnalyzer *, std::__1::default_delete<vision::mod::ImageAnalyzer> > { struct ImageAnalyzer *__value_; } __ptr_; } _imageAnalyzer;
    struct unordered_map<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > >, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > > > > { struct __hash_table<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > >, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > >, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > >, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > > > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > >, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > >, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > >, void *> *> **__value_; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > >, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > >, void *> *> *> > { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > >, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > >, void *> *> *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > >, std::__1::hash<unsigned long>, true> > { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > >, std::__1::equal_to<unsigned long>, true> > { float __value_; } __p3_; } __table_; } _imageAnalyzerJunkCustomClassifiers;
    struct unique_ptr<vision::mod::ImageAnalyzer_PCA, std::__1::default_delete<vision::mod::ImageAnalyzer_PCA> > { struct __compressed_pair<vision::mod::ImageAnalyzer_PCA *, std::__1::default_delete<vision::mod::ImageAnalyzer_PCA> > { struct ImageAnalyzer_PCA *__value_; } __ptr_; } _imageAnalyzerPCA256;
    _VNImageAnalyzerMultiDetectorSceneOperationPointsCache *_operationPointsCache;
    struct unordered_map<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > { struct __hash_table<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> **__value_; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *> > { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::hash<unsigned long>, true> > { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::equal_to<unsigned long>, true> > { float __value_; } __p3_; } __table_; } _VNVYvzEtX1JlUdu8xx5qhDICustomClassifiers;
    struct unordered_map<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > { struct __hash_table<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> **__value_; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *> > { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::hash<unsigned long>, true> > { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::equal_to<unsigned long>, true> > { float __value_; } __p3_; } __table_; } _potentialLandmarkCustomClassifiers;
    struct unordered_map<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > { struct __hash_table<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> **__value_; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *> > { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::hash<unsigned long>, true> > { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::equal_to<unsigned long>, true> > { float __value_; } __p3_; } __table_; } _VN5kJNH3eYuyaLxNpZr5Z7ziCustomClassifiers;
    struct unordered_map<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > { struct __hash_table<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> **__value_; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *> > { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, void *> *> *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::hash<unsigned long>, true> > { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> >, std::__1::equal_to<unsigned long>, true> > { float __value_; } __p3_; } __table_; } _significantEventCustomClassifiers;
    struct vector<std::__1::tuple<std::__1::basic_string<char>, float, bool>, std::__1::allocator<std::__1::tuple<std::__1::basic_string<char>, float, bool> > > { struct tuple<std::__1::basic_string<char>, float, bool> *__begin_; struct tuple<std::__1::basic_string<char>, float, bool> *__end_; struct __compressed_pair<std::__1::tuple<std::__1::basic_string<char>, float, bool> *, std::__1::allocator<std::__1::tuple<std::__1::basic_string<char>, float, bool> > > { struct tuple<std::__1::basic_string<char>, float, bool> *__value_; } __end_cap_; } _cachedAllSceneClassificationsFromLastAnalysis;
    NSMutableDictionary *_cachedSaliencyHeatmapBoundingBoxGenerators;
}

@property (readonly) BOOL hasObjDetNet;

+ (struct shared_ptr<vision::mod::ImageClassifier_HierarchicalModel> { struct ImageClassifier_HierarchicalModel *x0; struct __shared_weak_count *x1; })createHierarchicalModelForMultiDetectorModel:(unsigned long long)a0 requestRevision:(unsigned long long)a1 error:(id *)a2;
+ (unsigned long long)modelForRequestClass:(Class)a0 revision:(unsigned long long)a1 detectionLevel:(unsigned long long)a2;
+ (void)recordDefaultConfigurationOptionsInDictionary:(id)a0;
+ (id)configurationOptionKeysForDetectorKey;
+ (id)blacklistForModel:(unsigned long long)a0;
+ (Class)detectorClassForConfigurationOptions:(id)a0 error:(id *)a1;

- (id)_observationsForScene:(BOOL)a0 junk:(BOOL)a1 VNVYvzEtX1JlUdu8xx5qhDI:(BOOL)a2 landmark:(BOOL)a3 sceneprint:(BOOL)a4 includingLabelsAndConfidences:(BOOL)a5 compressedSceneprint:(BOOL)a6 aesthetics:(BOOL)a7 saliencyAHeatMap:(BOOL)a8 saliencyOHeatMap:(BOOL)a9 recognizedObjects:(BOOL)a10 VN5kJNH3eYuyaLxNpZr5Z7zi:(BOOL)a11 VNdGg5skzXHSAENO6T3enHE:(BOOL)a12 of32BGRAImageInPixelBufferProvidedByBlock:(id /* block */)a13 withOptions:(id)a14 originalImageSize:(struct CGSize { double x0; double x1; })a15 regionOfInterest:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a16 warningRecorder:(id)a17 error:(id *)a18;
- (BOOL)_getLeafSceneObservations:(id *)a0 hierarchySceneObservations:(id *)a1 of32BGRAImageInPixelBufferProvidedByBlock:(id /* block */)a2 withOptions:(id)a3 error:(id *)a4;
- (struct __CVBuffer { } *)_createScaledImagePixelBufferFromCropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 ofImageBuffer:(id)a1 forNetworkInputImageSize:(struct _Geometry2D_size2D_ { float x0; float x1; })a2 imageCropAndScaleOption:(unsigned long long)a3 options:(id)a4 error:(id *)a5;
- (id)allRecognizedObjectsIdentifiersWithOptions:(id)a0 error:(id *)a1;
- (id)allVN5kJNH3eYuyaLxNpZr5Z7ziClassificationsWithOptions:(id)a0 error:(id *)a1;
- (id)allSignificantEventClassificationsWithOptions:(id)a0 error:(id *)a1;
- (void).cxx_destruct;
- (id)processWithOptions:(id)a0 regionOfInterest:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 warningRecorder:(id)a2 error:(id *)a3;
- (id).cxx_construct;
- (id)supportedImageSizeSetForProcessingOptions:(id)a0;
- (BOOL)completeInitializationForSession:(id)a0 error:(id *)a1;
- (id)sceneLabelOperationPointsForRequestRevision:(unsigned long long)a0 error:(id *)a1;
- (id)_sceneObservationsForLastAnalysisWithOptions:(id)a0 error:(id *)a1;
- (void)_getImageCropAndScaleOption:(unsigned long long *)a0 networkRequiredInputImageSize:(struct _Geometry2D_size2D_ { float x0; float x1; } *)a1 forOptions:(id)a2;
- (struct __CVBuffer { } *)_createScaledImagePixelBufferFromImageBuffer:(id)a0 forNetworkInputImageSize:(struct _Geometry2D_size2D_ { float x0; float x1; })a1 imageCropAndScaleOption:(unsigned long long)a2 options:(id)a3 error:(id *)a4;
- (void)_tileRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 horizontally:(BOOL)a1 vertically:(BOOL)a2 windowAspectRatio:(double)a3 overlapPercentage:(double)a4 usingBlock:(id /* block */)a5;
- (struct shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > { struct vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > *x0; struct __shared_weak_count *x1; })_loadJunkCustomClassifiersForRequestRevision:(unsigned long long)a0 options:(id)a1 error:(id *)a2;
- (unsigned int)_analysisTypeForScene:(BOOL)a0 junk:(BOOL)a1 VNVYvzEtX1JlUdu8xx5qhDI:(BOOL)a2 landmark:(BOOL)a3 sceneprint:(BOOL)a4 includingLabelsAndConfidences:(BOOL)a5 compressedSceneprint:(BOOL)a6 aesthetics:(BOOL)a7 saliencyAHeatMap:(BOOL)a8 saliencyOHeatMap:(BOOL)a9 recognizedObjects:(BOOL)a10 VN5kJNH3eYuyaLxNpZr5Z7zi:(BOOL)a11 VNdGg5skzXHSAENO6T3enHE:(BOOL)a12;
- (BOOL)_populateLeafSceneObservations:(id)a0 hierarchySceneObservations:(id)a1 forLastAnalysisWithOptions:(id)a2 error:(id *)a3;
- (struct shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> { struct ImageAnalyzer_CustomClassifier *x0; struct __shared_weak_count *x1; })_loadCustomClassifierWithModelName:(id)a0 labelsFileName:(id)a1 classifierName:(id)a2 inputBlobName:(id)a3 outputBlobName:(id)a4 espressoEngine:(int)a5 espressoPlanFlags:(int)a6 espressoStorageType:(int)a7 espressoDeviceID:(int)a8 error:(id *)a9;
- (struct shared_ptr<std::__1::vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > > { struct vector<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier>, std::__1::allocator<std::__1::shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> > > *x0; struct __shared_weak_count *x1; })_junkCustomClassifiersForRequestRevision:(unsigned long long)a0 options:(id)a1 error:(id *)a2;
- (id)_junkObservationsForLastAnalysisWithOptions:(id)a0 error:(id *)a1;
- (id)_VNVYvzEtX1JlUdu8xx5qhDIObservationsForLastAnalysisWithOptions:(id)a0 error:(id *)a1;
- (BOOL)supportsProcessingDevice:(id)a0;
- (struct shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> { struct ImageAnalyzer_CustomClassifier *x0; struct __shared_weak_count *x1; })_VNVYvzEtX1JlUdu8xx5qhDILoadCustomClassifierForRequestRevision:(unsigned long long)a0 options:(id)a1 error:(id *)a2;
- (struct shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> { struct ImageAnalyzer_CustomClassifier *x0; struct __shared_weak_count *x1; })_VNVYvzEtX1JlUdu8xx5qhDICustomClassifiersForRequestRevision:(unsigned long long)a0 options:(id)a1 error:(id *)a2;
- (struct shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> { struct ImageAnalyzer_CustomClassifier *x0; struct __shared_weak_count *x1; })_loadPotentialLandmarksCustomClassifierForRequestRevision:(unsigned long long)a0 options:(id)a1 error:(id *)a2;
- (struct shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> { struct ImageAnalyzer_CustomClassifier *x0; struct __shared_weak_count *x1; })_potentialLandmarksCustomClassifierForRequestRevision:(unsigned long long)a0 options:(id)a1 error:(id *)a2;
- (struct ImageAnalyzer_PCA { struct vector<float, std::__1::allocator<float> > { float *x0; float *x1; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x0; } x2; } x0; unsigned long long x1; unsigned long long x2; } *)_sceneprintCompressorForCompression:(unsigned long long)a0 error:(id *)a1;
- (id)_potentialLandmarkObservationsForLastAnalysisWithOptions:(id)a0 error:(id *)a1;
- (struct shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> { struct ImageAnalyzer_CustomClassifier *x0; struct __shared_weak_count *x1; })_VN5kJNH3eYuyaLxNpZr5Z7ziLoadCustomClassifierForRequestRevision:(unsigned long long)a0 options:(id)a1 error:(id *)a2;
- (struct shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> { struct ImageAnalyzer_CustomClassifier *x0; struct __shared_weak_count *x1; })_VN5kJNH3eYuyaLxNpZr5Z7ziCustomClassifiersForRequestRevision:(unsigned long long)a0 options:(id)a1 error:(id *)a2;
- (id)_VN5kJNH3eYuyaLxNpZr5Z7ziObservationsForLastAnalysisWithOptions:(id)a0 error:(id *)a1;
- (id)_aestheticsObservationsForLastAnalysisWithOptions:(id)a0 error:(id *)a1;
- (struct shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> { struct ImageAnalyzer_CustomClassifier *x0; struct __shared_weak_count *x1; })_VNdGg5skzXHSAENO6T3enHELoadCustomClassifierForRequestRevision:(unsigned long long)a0 options:(id)a1 error:(id *)a2;
- (struct shared_ptr<vision::mod::ImageAnalyzer_CustomClassifier> { struct ImageAnalyzer_CustomClassifier *x0; struct __shared_weak_count *x1; })_VNdGg5skzXHSAENO6T3enHECustomClassifierForRequestRevision:(unsigned long long)a0 options:(id)a1 error:(id *)a2;
- (id)_VNdGg5skzXHSAENO6T3enHEObservationsForLastAnalysisWithOptions:(id)a0 error:(id *)a1;
- (id)_sceneprintObservationsForLastAnalysisOfSceneprint:(BOOL)a0 includingLabelsAndConfidencesInSceneprint:(BOOL)a1 compressedSceneprint:(BOOL)a2 options:(id)a3 error:(id *)a4;
- (id)_saliencyGeneratorOfType:(id)a0 forSession:(id)a1 error:(id *)a2;
- (id)_saliencyObservationsForTensor:(const struct ImageAnalyzer_Tensor2D { struct { void *x0; void *x1; unsigned long long x2[4]; unsigned long long x3[4]; unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; unsigned long long x12; unsigned long long x13; int x14; } x0; void *x1; unsigned long long x2; struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } x3; } *)a0 regionOfInterest:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 originalImageSize:(struct CGSize { double x0; double x1; })a2 options:(id)a3 saliencyRequestRevisionKey:(id)a4 saliencyGeneratorType:(id)a5 startCode:(unsigned int)a6 finishCode:(unsigned int)a7 warningRecorder:(id)a8 error:(id *)a9;
- (id)_saliencyAObservationsForLastAnalysisWithRegionOfInterest:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 originalImageSize:(struct CGSize { double x0; double x1; })a1 options:(id)a2 warningRecorder:(id)a3 error:(id *)a4;
- (struct vector<std::__1::tuple<std::__1::basic_string<char>, float, bool>, std::__1::allocator<std::__1::tuple<std::__1::basic_string<char>, float, bool> > > { struct tuple<std::__1::basic_string<char>, float, bool> *x0; struct tuple<std::__1::basic_string<char>, float, bool> *x1; struct __compressed_pair<std::__1::tuple<std::__1::basic_string<char>, float, bool> *, std::__1::allocator<std::__1::tuple<std::__1::basic_string<char>, float, bool> > > { struct tuple<std::__1::basic_string<char>, float, bool> *x0; } x2; } *)_lastAnalysisSceneClassifications;
- (id)_saliencyOObservationsForLastAnalysisWithRegionOfInterest:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 originalImageSize:(struct CGSize { double x0; double x1; })a1 options:(id)a2 warningRecorder:(id)a3 error:(id *)a4;
- (id)_observationsForObjectsRecognizedInLastAnalysisWithOptions:(id)a0 warningRecorder:(id)a1 error:(id *)a2;
- (BOOL)_performAnalysis:(unsigned int)a0 on32BGRAImageInPixelBufferProvidedByBlock:(id /* block */)a1 error:(id *)a2;
- (id)allJunkClassificationObservationsForOptions:(id)a0 error:(id *)a1;
- (id)_observationsForTopN:(const unsigned long long *)a0 lastAnalysisSceneLabelsWithMinimumConfidence:(float)a1 excludeObfuscatedLabels:(BOOL)a2 labelBlackList:(id)a3 sceneRequestRevisionNumber:(unsigned long long)a4 operationPointsProvider:(id)a5;
- (id)_observationsForTopN:(const unsigned long long *)a0 sceneClassificationsInMap:(const struct unordered_map<std::__1::basic_string<char>, float, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > > { struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, float>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, float>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, float>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, float> > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, float>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, float>, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, float>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, float>, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, float>, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, float>, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, float>, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, float>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, float>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, float>, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, float>, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, float>, std::__1::hash<std::__1::basic_string<char> >, true> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, float>, std::__1::equal_to<std::__1::basic_string<char> >, true> > { float x0; } x3; } x0; } *)a1 withMinimumConfidence:(float)a2 labelBlackList:(id)a3 sceneRequestRevisionNumber:(unsigned long long)a4 operationPointsProvider:(id)a5;
- (id)allKnownSceneClassificationsWithOptions:(id)a0 error:(id *)a1;
- (BOOL)canBehaveAsDetectorOfClass:(Class)a0 withConfiguration:(id)a1;
- (BOOL)shouldBeReplacedByDetectorOfClass:(Class)a0 withConfiguration:(id)a1;
- (BOOL)warmUpSession:(id)a0 withOptions:(id)a1 error:(id *)a2;

@end
