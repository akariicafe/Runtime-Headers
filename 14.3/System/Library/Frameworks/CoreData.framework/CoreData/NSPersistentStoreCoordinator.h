@class NSError, NSArray, NSDictionary, NSManagedObjectModel, _PFModelMap, NSString, NSMutableArray;

@interface NSPersistentStoreCoordinator : NSObject <NSLocking> {
    id _queueOwner;
    void *_dispatchQueue;
    struct _persistentStoreCoordinatorFlags { unsigned char _isRegistered : 1; unsigned char _canUseDirectDispatch : 1; unsigned char _queueUsage : 1; unsigned char _qosClass : 8; unsigned int _reservedFlags : 21; } _flags;
    int _cd_rc;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _miniLock;
    NSManagedObjectModel *_managedObjectModel;
    NSArray *_persistentStores;
    NSString *_queueLabel;
    NSMutableArray *_extendedStoreURLs;
    NSError *_lastOpenError;
    id _xpcBundleID;
    NSString *_xpcProcessName;
    _PFModelMap *_modelMap;
}

@property (class, readonly) NSDictionary *registeredStoreTypes;

@property (readonly, nonatomic) _PFModelMap *modelMap;
@property (readonly) NSManagedObjectModel *managedObjectModel;
@property (readonly) NSArray *persistentStores;
@property (copy) NSString *name;

+ (id)allocWithZone:(struct _NSZone { } *)a0;
+ (void)initialize;
+ (id)alloc;
+ (id)ubiquityStoreURLForStoreURL:(id)a0 ubiquityIdentityToken:(id)a1 ubiquityName:(id)a2;
+ (void)__Multithreading_Violation_AllThatIsLeftToUsIsHonor__;
+ (id)metadataForPersistentStoreOfType:(id)a0 URL:(id)a1 options:(id)a2 error:(id *)a3;
+ (void)_endPowerAssertionWithAssert:(unsigned long long)a0 andApp:(id)a1;
+ (void)registerStoreClass:(Class)a0 forStoreType:(id)a1;
+ (unsigned long long)__platformOptions;
+ (id)_metadataForPersistentStoreOfType:(id)a0 URL:(id)a1 options:(id)a2 error:(id *)a3;
+ (Class)_storeClassForStoreType:(id)a0;
+ (id)_beginPowerAssertionNamed:(id)a0 withAssert:(unsigned long long *)a1;
+ (void)_registerDefaultStoreClassesAndTypes;
+ (BOOL)_setMetadata:(id)a0 forPersistentStoreOfType:(id)a1 URL:(id)a2 options:(id)a3 error:(id *)a4;
+ (BOOL)accessInstanceVariablesDirectly;
+ (id)ubiquityStoreURLForStoreURL:(id)a0 ubiquityIdentityToken:(id)a1 localPeerID:(id)a2 ubiquityName:(id)a3;
+ (BOOL)removePersistentHistoryFromPersistentStoreAtURL:(id)a0 options:(id)a1 error:(id *)a2;
+ (void)_registerCoreDataStoreClass:(Class)a0 forStoreType:(id)a1;
+ (id)_storeTypeForStore:(id)a0;
+ (BOOL)setMetadata:(id)a0 forPersistentStoreOfType:(id)a1 URL:(id)a2 error:(id *)a3;
+ (BOOL)setMetadata:(id)a0 forPersistentStoreOfType:(id)a1 URL:(id)a2 options:(id)a3 error:(id *)a4;
+ (Class)_classForPersistentStoreAtURL:(id)a0;
+ (BOOL)removeUbiquitousContentAndPersistentStoreAtURL:(id)a0 options:(id)a1 error:(id *)a2;
+ (id)metadataForPersistentStoreOfType:(id)a0 URL:(id)a1 error:(id *)a2;

- (id)newValueForRelationship:(id)a0 forObjectWithID:(id)a1 withContext:(id)a2 error:(id *)a3;
- (id)_newOrderedRelationshipInformationForRelationship:(id)a0 forObjectWithID:(id)a1 withContext:(id)a2 error:(id *)a3;
- (BOOL)obtainPermanentIDsForObjects:(id)a0 error:(id *)a1;
- (void)managedObjectContextDidUnregisterObjectsWithIDs:(id)a0 generation:(id)a1;
- (id)executeRequest:(id)a0 withContext:(id)a1 error:(id *)a2;
- (id)_allOrderKeysForDestination:(id)a0 inRelationship:(id)a1 error:(id *)a2;
- (id)newValuesForObjectWithID:(id)a0 withContext:(id)a1 error:(id *)a2;
- (BOOL)replacePersistentStoreAtURL:(id)a0 destinationOptions:(id)a1 withPersistentStoreFromURL:(id)a2 sourceOptions:(id)a3 storeType:(id)a4 error:(id *)a5;
- (BOOL)tryLock;
- (void)unlock;
- (void)performBlock:(id /* block */)a0;
- (BOOL)_replacePersistentStoreAtURL:(id)a0 destinationOptions:(id)a1 withPersistentStoreFromURL:(id)a2 sourceOptions:(id)a3 storeType:(id)a4 error:(id *)a5;
- (id)persistentStoreCoordinator;
- (id)managedObjectIDFromUTF8String:(const char *)a0 length:(unsigned long long)a1;
- (void)lock;
- (id)init;
- (id)addPersistentStoreWithType:(id)a0 configuration:(id)a1 URL:(id)a2 options:(id)a3 error:(id *)a4;
- (void)_copyMetadataFromStore:(id)a0 toStore:(id)a1 migrationManager:(id)a2;
- (unsigned int)_qosClassOptions;
- (id)_retainedPersistentStores;
- (void)_routeLightweightBlock:(id /* block */)a0 toStore:(id)a1;
- (BOOL)_isRegisteredWithUbiquity;
- (BOOL)_hasHistoryTracking:(id)a0;
- (BOOL)_checkForPostLionWriter:(id)a0;
- (id)_realStoreTypeForStoreWithType:(id)a0 URL:(id)a1 options:(id)a2 error:(id *)a3;
- (BOOL)_attemptRecoveryFromAddPersistentStoreError:(id)a0 withDescription:(id)a1;
- (oneway void)release;
- (void)_doAddPersistentStoreWithDescription:(id)a0 privateCopy:(id)a1 completeOnMainThread:(BOOL)a2 withHandler:(id /* block */)a3;
- (BOOL)validateManagedObjectModel:(id)a0 forHistoryTrackingWithOptions:(id)a1 error:(id *)a2;
- (BOOL)_checkForSkewedEntityHashes:(id)a0 metadata:(id)a1;
- (BOOL)_checkForTombstoneSkew:(id)a0 metadata:(id)a1 configuration:(id)a2;
- (void)_addPersistentStore:(id)a0 identifier:(id)a1;
- (BOOL)_removePersistentStore:(id)a0;
- (void)_postStoresChangedNotificationsForStores:(id)a0 changeKey:(id)a1 options:(id)a2;
- (void)_repairIndiciesForStoreWithIdentifier:(id)a0 synchronous:(BOOL)a1;
- (BOOL)_removePersistentStore:(id)a0 error:(id *)a1;
- (id)_retainedAllMigratedObjectsInStore:(id)a0 toStore:(id)a1;
- (id)URLForPersistentStore:(id)a0;
- (BOOL)_destroyPersistentStoreAtURL:(id)a0 withType:(id)a1 options:(id)a2 error:(id *)a3;
- (id)_retainedChangeTokenFromStores:(id)a0;
- (id)_exceptionNoStoreSaveFailureForError:(id)a0 recommendedFrame:(int *)a1;
- (id)_routableStoresForContext:(id)a0 fromStores:(id)a1;
- (void)_coordinator_you_never_successfully_opened_the_database_corrupted:(id)a0;
- (void)_introspectLastErrorAndThrow;
- (void)_coordinator_you_never_successfully_opened_the_database_schema_mismatch:(id)a0;
- (void)_routeHeavyweightBlock:(id /* block */)a0;
- (void)_coordinator_you_never_successfully_opened_the_database_device_locked:(id)a0;
- (void)_assignObjects:(id)a0 toStore:(id)a1;
- (void)_coordinator_you_never_successfully_opened_the_database_missing_directory:(id)a0;
- (void)_coordinator_you_never_successfully_opened_the_database_no_permission:(id)a0;
- (void)_coordinator_you_never_successfully_opened_the_database_cant_open:(id)a0;
- (void)_coordinator_you_never_successfully_opened_the_database_disk_full:(id)a0;
- (id)metadataForPersistentStore:(id)a0;
- (void)_coordinator_you_never_successfully_opened_the_database_io_error:(id)a0;
- (id)_retainedIdentifierFromStores:(id)a0;
- (void)_coordinator_you_never_successfully_opened_the_database_so_saving_back_to_it_is_kinda_hard:(id)a0;
- (void)_coordinator_no_idea_what_kind_of_request_that_was_supposed_to_be;
- (BOOL)_canRouteToStore:(id)a0 forContext:(id)a1;
- (id)_checkRequestForStore:(id)a0 withContext:(id)a1 originalRequest:(id)a2 andOptimisticLocking:(id)a3;
- (id)_xpcProcessName;
- (void)replaceResultTypeOfRequestIfNecessary:(id)a0 store:(id)a1 requestType:(unsigned long long)a2 originalResultType:(unsigned long long *)a3;
- (BOOL)shouldUpdateStoreSpotlightIndex:(id)a0 withResults:(id)a1 requestType:(unsigned long long)a2;
- (id)_processStoreResults:(id)a0 forRequest:(id)a1;
- (id)restoreOriginalRequestIfNecessary:(id)a0 store:(id)a1 swizzledResults:(id)a2 originalRequestType:(unsigned long long)a3 originalResultType:(unsigned long long)a4;
- (BOOL)_isDeallocating;
- (void)_doPreSaveAssignmentsForObjects:(id)a0 intoStores:(id)a1;
- (id)_saveRequestForStore:(id)a0 withContext:(id)a1 originalRequest:(id)a2 andOptimisticLocking:(id)a3;
- (void)_setQosClassOptions:(unsigned int)a0;
- (void)setMetadata:(id)a0 forPersistentStore:(id)a1;
- (void)_setIsRegisteredWithCloudKit:(BOOL)a0;
- (id)migratePersistentStore:(id)a0 toURL:(id)a1 options:(id)a2 withType:(id)a3 error:(id *)a4;
- (id)managedObjectIDFromUTF8String:(const char *)a0 length:(unsigned long long)a1 error:(id *)a2;
- (BOOL)_canSaveGraphRootedAtObject:(id)a0 intoStore:(id)a1 withPreviouslyChecked:(struct __CFSet { } *)a2 withAcceptableEntities:(struct __CFSet { } *)a3;
- (id)_newObjectGraphStyleRecordForRow:(id)a0 andObject:(id)a1 withContext:(id)a2;
- (Class)_storeClassForStoreWithType:(id)a0 URL:(id)a1 options:(id)a2;
- (id)_newConflictRecordForObject:(id)a0 andOriginalRow:(id)a1 withContext:(id)a2;
- (void)_setIsRegisteredWithUbiquity:(BOOL)a0;
- (id)_conflictsWithRowCacheForObject:(id)a0 withContext:(id)a1 andStore:(id)a2;
- (id)_xpcBundleIdentifier;
- (id)_fetchAllInstancesFromStore:(id)a0 intoContext:(id)a1 underlyingException:(id *)a2;
- (BOOL)_isRegisteredWithCloudKit;
- (void)_assignObject:(id)a0 toPersistentStore:(id)a1 forConfiguration:(id)a2;
- (BOOL)_destroyPersistentStoreAtURL:(id)a0 withType:(id)a1 error:(id *)a2;
- (id)currentQueryGenerationTokenFromStores:(id)a0;
- (BOOL)_rekeyPersistentStoreAtURL:(id)a0 type:(id)a1 options:(id)a2 withKey:(id)a3 error:(id *)a4;
- (BOOL)_refreshTriggerValuesInStore:(id)a0 error:(id *)a1;
- (id)_retainedCurrentChangeTrackingToken;
- (BOOL)_finishDeferredLightweightMigrationTasks:(BOOL)a0 withError:(id *)a1;
- (BOOL)finishDeferredLightweightMigrationTask:(id *)a0;
- (void)dealloc;
- (id)persistentStoreForURL:(id)a0;
- (BOOL)removePersistentStore:(id)a0 error:(id *)a1;
- (BOOL)_tryRetain;
- (unsigned long long)retainCount;
- (void)managedObjectContextDidRegisterObjectsWithIDs:(id)a0 generation:(id)a1;
- (void)addPersistentStoreWithDescription:(id)a0 completionHandler:(id /* block */)a1;
- (BOOL)destroyPersistentStoreAtURL:(id)a0 withType:(id)a1 options:(id)a2 error:(id *)a3;
- (id)retain;
- (id)managedObjectIDForURIRepresentation:(id)a0;
- (void)_setXPCBundleIdentifier:(id)a0;
- (void)_setXPCProcessName:(id)a0;
- (id)_reopenQueryGenerationWithIdentifier:(id)a0 inStoreWithIdentifier:(id)a1 error:(id *)a2;
- (id)_retainedCurrentQueryGeneration:(id)a0;
- (id)currentPersistentHistoryTokenFromStores:(id)a0;
- (BOOL)finishDeferredLightweightMigration:(id *)a0;
- (BOOL)setURL:(id)a0 forPersistentStore:(id)a1;
- (id)persistentStoreForIdentifier:(id)a0;
- (void)performBlockAndWait:(id /* block */)a0;
- (id)_lastOpenError;
- (BOOL)_removeAllPersistentStores:(id *)a0;
- (void)_postStoreRemoteChangeNotificationsForStore:(id)a0 andState:(unsigned long long)a1;
- (id)_persistentStoreForIdentifier:(id)a0;
- (id)managedObjectIDForURIRepresentation:(id)a0 error:(id *)a1;
- (id)initWithManagedObjectModel:(id)a0;
- (BOOL)_validateQueryGeneration:(id)a0 error:(id *)a1;

@end
