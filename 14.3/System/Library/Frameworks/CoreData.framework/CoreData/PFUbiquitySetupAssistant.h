@class NSURL, NSMutableDictionary, PFUbiquityKnowledgeVector, PFUbiquityPeerState, PFUbiquityMigrationAssistant, PFUbiquitySwitchboardEntry, NSObject, PFUbiquityBaseline, NSMutableArray, PFUbiquityMigrationManager, NSString, _PFUbiquityStack, PFUbiquityPeerReceipt, PFUbiquityLocation, NSMutableSet, PFUbiquityContainerIdentifier, PFUbiquityStoreMetadata, NSPersistentStoreCoordinator, NSError, NSPersistentStore;
@protocol OS_dispatch_semaphore, NSCoding, NSObject, NSCopying;

@interface PFUbiquitySetupAssistant : NSObject {
    NSPersistentStoreCoordinator *_psc;
    NSPersistentStore *_store;
    NSString *_storeType;
    NSURL *_storeURL;
    NSMutableDictionary *_storeMetadataDict;
    BOOL _needsMetadataWrite;
    id<NSObject, NSCopying, NSCoding> _ubiquityIdentityToken;
    NSString *_ubiquityRootSubpath;
    NSString *_ubiquityName;
    NSString *_ubiquityContainerIdentifier;
    NSString *_modelVersionHash;
    NSString *_previousModelVersionHash;
    _PFUbiquityStack *_stack;
    PFUbiquityStoreMetadata *_storeMetadata;
    PFUbiquityPeerState *_localPeerState;
    PFUbiquityKnowledgeVector *_metaKV;
    PFUbiquityBaseline *_baseline;
    BOOL _baselineFileExistsInCloud;
    BOOL _hasUploadingBaseline;
    BOOL _monitorUploadingBaselineAsync;
    BOOL _didBaselineCopy;
    PFUbiquityKnowledgeVector *_baselineKV;
    BOOL _votedOffIsland;
    BOOL _reapUbiquitousLogs;
    BOOL _respondToBaselineRoll;
    BOOL _storeFileExists;
    BOOL _storeFileIsReadOnly;
    BOOL _hasStoreMetadataFile;
    BOOL _hasStoreMetadataEntry;
    BOOL _hasContainerUUID;
    BOOL _hasContainerUUIDInStore;
    PFUbiquityPeerReceipt *_localPeerReceipt;
    PFUbiquityKnowledgeVector *_receiptKV;
    NSString *_preStoreContainerUUID;
    BOOL _usedExistingUUIDMapping;
    BOOL _hasLocalTransactionLogs;
    BOOL _hasMigrationOptions;
    BOOL _didMigrateBaseline;
    PFUbiquityMigrationAssistant *_migrationAssistant;
    PFUbiquityMigrationManager *_migrationManager;
    BOOL _replayLogsSynchronously;
    BOOL _seedStore;
    NSURL *_seedStoreURL;
    BOOL _haveExistingUUIDMappings;
    PFUbiquitySwitchboardEntry *_entry;
    BOOL _gotExportNotification;
    int _sideLoadLock;
    NSMutableSet *_logLocationsExportedDuringSideLoad;
    NSMutableDictionary *_gidToRid;
    NSMutableDictionary *_entityNameToGidSet;
    NSObject<OS_dispatch_semaphore> *_initialSyncSemaphore;
    int _initialSyncComplete;
    NSMutableArray *_queryLocations;
    BOOL _notifyAboutSetupProgress;
    long long _numSetupTries;
    BOOL _gotAccountChange;
}

@property (readonly, nonatomic) NSMutableDictionary *options;
@property (readonly, nonatomic) BOOL ubiquityEnabled;
@property (readonly, nonatomic) BOOL needsMetadataRecovery;
@property (readonly, nonatomic) NSString *localPeerID;
@property (readonly, nonatomic) NSURL *ubiquityRootURL;
@property (readonly, nonatomic) PFUbiquityLocation *ubiquityRootLocation;
@property (readonly, nonatomic) PFUbiquityLocation *localRootLocation;
@property (readonly, nonatomic) PFUbiquityContainerIdentifier *containerIdentifier;
@property (readonly, nonatomic) BOOL useLocalAccount;
@property (nonatomic) BOOL storeWasMigrated;
@property (readonly, nonatomic) NSURL *actualStoreFileURL;
@property (nonatomic) BOOL abortSetup;
@property (readonly, nonatomic) PFUbiquityKnowledgeVector *storeKV;
@property (nonatomic) unsigned long long retryDelaySec;
@property (nonatomic) BOOL cacheFilePresenterForUbiquityRoot;
@property (nonatomic) BOOL failSetup;
@property (retain, nonatomic) NSError *failSetupError;

+ (void)removeUbiquityMetadataFromStore:(id)a0;
+ (id)createDefaultLocalPeerID;
+ (id)findContainerIDForToken:(id)a0 storeName:(id)a1 haveExistingMappings:(BOOL *)a2;
+ (id)createActualStoreURLForStoreURL:(id)a0 localPeerID:(id)a1 containerIdentifier:(id)a2 andStoreName:(id)a3;
+ (void)setContainerIdentifierUUID:(id)a0 forIdentityToken:(id)a1 forStoreName:(id)a2;
+ (BOOL)doBasicSanityCheckForUbiquityRootURL:(id)a0 withError:(id *)a1;
+ (id)createBaselineFromMostRecentLocation:(id)a0 localPeerID:(id)a1 error:(id *)a2;
+ (id)generateMachineUUIDString;
+ (BOOL)ubiquityMetadataTablesPresentInStore:(id)a0;
+ (void)cleanUserDefaultsForStore:(id)a0;

- (BOOL)isInitialSyncComplete;
- (id)init;
- (id)longDescription;
- (BOOL)validateOptionsWithError:(id *)a0;
- (id)initWithPersistentStoreCoordinator:(id)a0 andStoreOptions:(id)a1 forPersistentStoreOfType:(id)a2 atURL:(id)a3;
- (BOOL)performCoordinatorPostStoreSetup:(id)a0 error:(id *)a1;
- (BOOL)canReadFromUbiquityRootLocation:(id *)a0;
- (void)dealloc;
- (void)coordinatorWillRemoveStore:(id)a0;
- (void)ubiquityIdentityTokenChanged:(id)a0;
- (void)exportedLog:(id)a0;
- (id)getCurrentUbiquityIdentityToken;
- (BOOL)doPostValidationInit:(id *)a0;
- (BOOL)initializeStoreKnowledgeVectorFromStore:(id)a0 error:(id *)a1;
- (void)finishSetupWithRetry:(id)a0;
- (BOOL)initializeStack:(id *)a0;
- (BOOL)finishSetupForStore:(id)a0 error:(id *)a1;
- (BOOL)cleanUpFromFailedSetup:(id *)a0;
- (BOOL)detectAndFixForkedContainer:(BOOL)a0 store:(id)a1 error:(id *)a2;
- (BOOL)initializeReceiptFile:(id *)a0;
- (BOOL)sideLoadStore:(id)a0 error:(id *)a1;
- (BOOL)initializeContainerIdentifierWithStore:(id)a0 error:(id *)a1;
- (BOOL)initializeBaselineForStore:(id)a0 error:(id *)a1;
- (BOOL)seedStore:(id)a0 error:(id *)a1;
- (BOOL)checkKnowledgeVectorsAndBaselineWithStore:(id)a0 error:(id *)a1;
- (BOOL)respondToBaselineRoll:(id *)a0;
- (BOOL)attemptMetadataRecoveryForStore:(id)a0 error:(id *)a1;
- (BOOL)moveLocalLogFilesToUbiquityLocation:(id *)a0;
- (BOOL)pruneStagingDirectoryForStore:(id)a0 error:(id *)a1;
- (void)initialSyncComplete;
- (id)migrationAssistant;
- (void)updateDictionary:(id)a0 withShortcutSnapshot:(id)a1;
- (void)updateDictionary:(id)a0 withPhraseLearningJPSnapshot:(id)a1;
- (void)updateDictionary:(id)a0 withPhraseLearningSnapshot:(id)a1;
- (void)updateDictionary:(id)a0 withBigramSnapshot:(id)a1;
- (void)removeEntriesFromDictionary:(id)a0 withPhraseLearningJPSnapshot:(id)a1;
- (void)fixdictionary:(id)a0 withDeletes:(id)a1;
- (void)removeEntriesFromDictionary:(id)a0 withPhraseLearningSnapshot:(id)a1;
- (id)createSetOfLocalLogLocations:(id *)a0;
- (void)removeEntriesFromDictionary:(id)a0 withBigramSnapshot:(id)a1;
- (void)insertEntriesInDicitonary:(id)a0 inUserDictionaryManagedObjectContext:(id)a1;
- (BOOL)migrateMetadataRoot:(id *)a0;
- (void)insertEntriesInDicitonary:(id)a0 inLearningDictionaryManagedObjectContext:(id)a1;
- (BOOL)tryToReplaceLocalStore:(id)a0 withStoreSideLoadedByImporter:(id)a1;
- (BOOL)rewriteTransactionLogs:(id)a0 toMatchStore:(id)a1 error:(id *)a2;
- (BOOL)checkAndPerformMigrationForStore:(id)a0 error:(id *)a1;
- (void)removeEntriesFromDictionary:(id)a0 withShortcutSnapshot:(id)a1;
- (void)insertEntriesInDicitonary:(id)a0 inLearningDictionaryJPManagedObjectContext:(id)a1;
- (void)insertEntriesInDicitonary:(id)a0 inBigramManagedObjectContext:(id)a1;
- (void)_setUbiquityRootLocation:(id)a0 storeName:(id)a1 localPeerID:(id)a2 andModelVersionHash:(id)a3;

@end
