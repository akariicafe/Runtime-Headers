@class PKPaletteTransition, UILongPressGestureRecognizer, UITapGestureRecognizer, NSString, PKPalettePencilInteractionFeedbackHostView, UIView, PKPaletteView, UIPanGestureRecognizer, PKColorPicker, NSLayoutConstraint;
@protocol PKPaletteHostViewDelegate;

@interface PKPaletteHostView : UIView <UIGestureRecognizerDelegate, PKPaletteViewInternalDelegate, UIPopoverPresentationControllerDelegate, PKPalettePencilInteractionFeedbackHostViewDelegate, PKPaletteTransitionDelegate, PKPaletteViewHosting>

@property (weak, nonatomic) id<PKPaletteHostViewDelegate> delegate;
@property (nonatomic, getter=isPaletteVisible) BOOL paletteVisible;
@property (nonatomic, getter=isEffectivePaletteVisible) BOOL effectivePaletteVisible;
@property (retain, nonatomic) NSLayoutConstraint *paletteWidthConstraint;
@property (retain, nonatomic) NSLayoutConstraint *paletteHeightConstraint;
@property (retain, nonatomic) NSLayoutConstraint *paletteTopConstraint;
@property (retain, nonatomic) NSLayoutConstraint *paletteBottomConstraint;
@property (retain, nonatomic) NSLayoutConstraint *paletteLeftConstraint;
@property (retain, nonatomic) NSLayoutConstraint *paletteRightConstraint;
@property (retain, nonatomic) NSLayoutConstraint *paletteCenterXConstraint;
@property (retain, nonatomic) NSLayoutConstraint *paletteCenterYConstraint;
@property (retain, nonatomic) UIPanGestureRecognizer *panGestureRecognizer;
@property (retain, nonatomic) UITapGestureRecognizer *tapToExpandPaletteFromMinimizedGestureRecognizer;
@property (retain, nonatomic) UILongPressGestureRecognizer *touchDownFeedbackGestureRecognizer;
@property (nonatomic) long long paletteDraggingBehavior;
@property (nonatomic, setter=_setPaletteVisualState:) long long paletteVisualState;
@property (nonatomic) long long palettePosition;
@property (nonatomic) long long lastNonCompactPalettePosition;
@property (nonatomic) long long draggingPendingPaletteVisualState;
@property (nonatomic) struct CGPoint { double x; double y; } draggingInitialPaletteCenterInSelf;
@property (retain, nonatomic) PKPaletteTransition *paletteTransition;
@property (retain, nonatomic) PKPalettePencilInteractionFeedbackHostView *pencilInteractionFeedbackHostView;
@property (retain, nonatomic) PKColorPicker *colorPickerPopover;
@property (retain, nonatomic) PKPaletteView *paletteView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) UIView *hostingView;
@property (readonly, nonatomic, getter=isPaletteDragging) BOOL paletteDragging;
@property (readonly, nonatomic, getter=isPaletteVisualStateMinimized) BOOL paletteVisualStateMinimized;

- (void)safeAreaInsetsDidChange;
- (void).cxx_destruct;
- (BOOL)pointInside:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (void)didMoveToWindow;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (void)layoutSubviews;
- (BOOL)gestureRecognizerShouldBegin:(id)a0;
- (void)traitCollectionDidChange:(id)a0;
- (void)paletteViewStateDidChange:(id)a0;
- (void)paletteViewStateDidChangeScaleFactor:(id)a0;
- (void)paletteViewStateDidChangeAnnotationSupport:(id)a0;
- (void)paletteViewStateDidChangeAutoHide:(id)a0;
- (void)paletteViewStateDidChangeShowsHandwritingTool:(id)a0;
- (void)paletteViewStateDidChangeSelectedTool:(id)a0;
- (void)paletteViewStateDidChangeInputAssistantItems:(id)a0;
- (void)paletteViewStateDidChangeIsVisible:(id)a0;
- (void)paletteViewStateDidChangeEnableKeyboardButtons:(id)a0;
- (void)_panGestureHandler:(id)a0;
- (void)_tapToExpandPaletteFromMinimizedGestureHandler:(id)a0;
- (void)_touchDownFeedbackGestureHandler:(id)a0;
- (void)_updatePaletteViewSizeConstraints;
- (BOOL)_shouldBeCompact;
- (void)_fixToBottomEdge;
- (void)_dockPaletteToPosition:(long long)a0 animated:(BOOL)a1;
- (void)setPaletteVisible:(BOOL)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (void)_cancelPanGestureIfNecessary;
- (void)updateKeyboardAvoidanceForPalette:(BOOL)a0;
- (void)_updateConstraintsToFixToBottomEdge;
- (void)_updateConstraintsToDockPaletteToPosition:(long long)a0;
- (void)_performAnimated:(BOOL)a0 tracking:(BOOL)a1 animations:(id /* block */)a2 completion:(id /* block */)a3;
- (void)_setPaletteVisualState:(long long)a0 usingTransition:(BOOL)a1;
- (void)_updatePaletteSizeAnimated:(BOOL)a0;
- (void)_updateToolPreviewRotationAnimated:(BOOL)a0;
- (void)_updateToolPreviewMinimizedStateAnimated:(BOOL)a0;
- (void)_updatePaletteContentAlpha;
- (void)_updatePaletteAppearance;
- (struct CGSize { double x0; double x1; })_paletteSizeForVisualState:(long long)a0;
- (void)_updatePaletteHeightConstraint;
- (void)_paletteWillDockToPosition:(long long)a0 prepareForExpansion:(BOOL)a1;
- (void)_deactivatePaletteCenterConstraints;
- (void)_deactivatePaletteEdgeConstraints;
- (void)_paletteDidDockToPosition:(long long)a0 fromUserReposition:(BOOL)a1;
- (void)_dockPaletteToPosition:(long long)a0 isFromUserReposition:(BOOL)a1 animated:(BOOL)a2;
- (void)_scheduleDraggingTransitionToVisualState:(long long)a0;
- (void)_activatePaletteCenterConstraints;
- (struct CGPoint { double x0; double x1; })_projectedLandingPointForGestureRecognizerEnd:(id)a0;
- (void)_processPendingDraggingTransition;
- (void)_installPencilInteractionFeedbackHostViewIfNeeded;
- (void)paletteViewShowFeedbackForToolChange:(id)a0;
- (void)paletteViewContentSizeDidChange:(id)a0;
- (void)paletteViewReturnKeyTypeDidChange:(id)a0;
- (double)paletteEdgeSpacing;
- (double)paletteEdgeSpacingForMinimized;
- (id)paletteShadowColor;
- (struct CGSize { double x0; double x1; })paletteShadowOffset;
- (double)paletteShadowOpacity;
- (double)paletteShadowRadius;
- (id)paletteBorderColor;
- (double)paletteBorderWidth;
- (double)paletteSpringAnimationDampingRatio;
- (double)paletteSpringAnimationResponse;
- (void)transitionIntermediateVisualStateDidChange:(id)a0;
- (void)transitionPointingDirectionDidChange:(id)a0;
- (void)transitionExpandedToCollapsedRatioDidChange:(id)a0;
- (id)initWithPaletteView:(id)a0;
- (BOOL)_isPaletteAnimating;

@end
