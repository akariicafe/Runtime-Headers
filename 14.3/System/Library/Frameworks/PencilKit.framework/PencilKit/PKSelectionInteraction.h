@class UIBezierPath, UITapGestureRecognizer, PKDrawing, NSMutableArray, UITapAndAHalfRecognizer, UIView, NSOrderedSet, UILongPressGestureRecognizer, PKSelectionController, NSString, PKSelectionGlowRenderer, NSMutableOrderedSet, PKDrawingAdjustmentKnob, NSArray, UIPanGestureRecognizer;
@protocol PKSelectionRendering, PKSelectionInteractionDelegate;

@interface PKSelectionInteraction : NSObject <UIInteraction, UIGestureRecognizerDelegate> {
    id<PKSelectionRendering> _lassoRenderer;
    PKSelectionGlowRenderer *_glowRenderer;
    UIBezierPath *_lassoPath;
    BOOL _editMenuVisible;
    struct CGPoint { double x; double y; } _lastTapLocation;
    double _lastTapTimestamp;
    long long _currentTapCount;
    struct CGPoint { double x; double y; } _lastDoubleTapAndDragLocation;
    double _lastDoubleTapAndDragTimestamp;
    NSMutableArray *_tapAndDragVelocityArray;
    long long _tapAndDragVelocityCount;
    long long _currentlyDraggedKnob;
    long long _knobDragMode;
    double _knobDragInitialTimestamp;
    struct CGPoint { double x; double y; } _knobDragInitialLocation;
    struct CGPoint { double x; double y; } _undraggedKnobLocationInStrokeSpace;
    struct CGPoint { double x; double y; } _currentScrollOffset;
    NSArray *_firstStrokesInInitialStrokes;
    NSArray *_lastStrokesInInitialStrokes;
    long long _modificationType;
    NSMutableArray *_selectionViewGestures;
    PKDrawingAdjustmentKnob *_insertSpaceAffordance;
    UIPanGestureRecognizer *_insertSpaceAffordanceGesture;
}

@property (weak, nonatomic) UIView *view;
@property (retain, nonatomic) UIPanGestureRecognizer *lassoGestureRecognizer;
@property (retain, nonatomic) UITapGestureRecognizer *noOpTapGestureRecognizer;
@property (retain, nonatomic) UITapGestureRecognizer *progressiveTapGestureRecognizer;
@property (retain, nonatomic) UILongPressGestureRecognizer *tapAndHoldToSelectLongPressGestureRecognizer;
@property (retain, nonatomic) UITapAndAHalfRecognizer *modifySelectionRecognizer;
@property (retain, nonatomic) UILongPressGestureRecognizer *knobBrushGestureRecognizer;
@property (retain, nonatomic) UIPanGestureRecognizer *knobDragGestureRecognizer;
@property (weak, nonatomic) PKSelectionController *selectionController;
@property (nonatomic) struct CGPoint { double x; double y; } _drawingBeganLocation;
@property (nonatomic) BOOL _didCancelSelection;
@property (retain, nonatomic) PKDrawing *currentDrawing;
@property (retain, nonatomic) NSMutableOrderedSet *smartSelectedStrokes;
@property (retain, nonatomic) NSOrderedSet *initialStrokeSelectionBeforeModification;
@property (nonatomic) BOOL insertSpaceEnabled;
@property (weak, nonatomic) id<PKSelectionInteractionDelegate> delegate;
@property (nonatomic, getter=isEnabled) BOOL enabled;
@property (readonly, nonatomic) BOOL hasCurrentSelection;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)willMoveToView:(id)a0;
- (void)didMoveToView:(id)a0;
- (BOOL)isLTR;
- (void).cxx_destruct;
- (BOOL)gestureRecognizer:(id)a0 shouldRequireFailureOfGestureRecognizer:(id)a1;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (id)_gestures;
- (BOOL)gestureRecognizerShouldBegin:(id)a0;
- (void)_willRemoveSelectionView:(id)a0;
- (void)_didEndDraggingSelection:(id)a0;
- (BOOL)knobsContainPoint:(struct CGPoint { double x0; double x1; })a0 forInputType:(long long)a1;
- (BOOL)_dragShouldBeginForSession:(id)a0;
- (void)_updateAllowedTouchTypesForSelectedInk:(id)a0;
- (BOOL)_selectionShouldReceiveTouchForPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)_firstStrokesInStrokes:(id)a0;
- (id)_lastStrokesInStrokes:(id)a0;
- (id)_adornmentLayers;
- (void)_setupGestures;
- (void)_toolPickerDidShowHide:(id)a0;
- (void)_didBeginSelection:(id)a0;
- (void)_didBrushWithKnob:(id)a0;
- (void)_didDragKnob:(id)a0;
- (void)_eatGesture:(id)a0;
- (void)_didSmartSelectTap:(id)a0;
- (void)_pressAndHoldLinearExpand:(id)a0;
- (void)_didTapAndDrag:(id)a0;
- (BOOL)_insertSpaceAffordanceEnabled;
- (void)_addInsertSpaceAffordanceGestureIfNecessary;
- (id)_gesturesForLiveSelection;
- (void)_didGrabInsertSpaceAffordance:(id)a0;
- (void)_cleanupInsertSpaceAffordance;
- (void)_addInsertSpaceAffordance;
- (void)_updateAllowedTouchTypesForSelectedInk:(id)a0 hasCurrentSelection:(BOOL)a1;
- (void)_updateInsertSpaceAffordancePosition;
- (double)_timestampForTouch:(id)a0;
- (id)_drawingForLocation:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)_isRepeatedTap:(id)a0;
- (void)_dismissEditMenuIfNecessary;
- (long long)_selectionTypeForTapCount:(long long)a0;
- (void)_updateProgressiveTapSelectionWithSelectionInput:(id)a0 existingSelection:(id)a1;
- (void)_cancelDeferredPasteFromTappingAction;
- (void)_selectViaContinuousTapWithInput:(id)a0;
- (void)_handleSingleTap:(id)a0;
- (void)_updateTapGestureHistoryWithLocation:(struct CGPoint { double x0; double x1; })a0 gesture:(id)a1;
- (double)_timestampForGestureRecognizer:(id)a0;
- (BOOL)_isWithinRepeatedTapTimeForGesture:(id)a0;
- (void)dismissEditMenuIfNecessary;
- (void)_updateLiveLassoPath:(struct CGPath { } *)a0;
- (struct CGPoint { double x0; double x1; })clampInputPointForSelection:(struct CGPoint { double x0; double x1; })a0 forDrawing:(id)a1;
- (BOOL)_isLassoAddingSpace:(struct CGPoint { double x0; double x1; })a0;
- (void)_didEndLassoSelectionWithPath:(id)a0;
- (void)_didEndLassoAddingSpaceAtLocation:(struct CGPoint { double x0; double x1; })a0;
- (void)_clearLiveSelectionPath;
- (void)_intersectedStrokesInDrawing:(id)a0 forSelectionInput:(id)a1 existingSelection:(id)a2 completion:(id /* block */)a3;
- (void)_resetVelocityWindow;
- (long long)_updateSmartSelectionWithInput:(id)a0 modificationType:(long long)a1;
- (double)_updateVelocityWindowWithTouch:(id)a0 location:(struct CGPoint { double x0; double x1; })a1;
- (long long)_selectionTypeForVelocity:(double)a0;
- (long long)_updateSmartSelectionWithInput:(id)a0 modificationType:(long long)a1 completion:(id /* block */)a2;
- (double)_updateVelocityWindowWithTimestamp:(double)a0 location:(struct CGPoint { double x0; double x1; })a1;
- (long long)_updateSmartSelectionWithInput:(id)a0 modificationType:(long long)a1 liveScrollOffset:(struct CGPoint { double x0; double x1; })a2 completion:(id /* block */)a3;
- (struct CGPoint { double x0; double x1; })_pointFromViewToStrokeSpace:(struct CGPoint { double x0; double x1; })a0 inDrawing:(id)a1;
- (id)_visibleOnscreenStrokesForDrawing:(id)a0;
- (BOOL)_liveSelectionGestureStillActive;
- (void)_calculateFirstAndLastStrokeForKnobPlacement;
- (struct CGPoint { double x0; double x1; })_undraggedKnobLocation:(long long)a0 forInitialStrokeBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (BOOL)_locationShouldFlipOverLeftKnob:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)_locationShouldFlipOverRightKnob:(struct CGPoint { double x0; double x1; })a0;
- (void)_updateSmartSelectionWithDragToLocation:(struct CGPoint { double x0; double x1; })a0 liveScrollOffset:(struct CGPoint { double x0; double x1; })a1 initialSelectedWord:(id)a2 completion:(id /* block */)a3;
- (id)_closestStrokesToCorner:(unsigned long long)a0 fromStrokes:(id)a1;
- (void)_updateUndraggedKnobLocationForKnobDrag;
- (void)_updateSmartSelectionWithDragToLocation:(struct CGPoint { double x0; double x1; })a0 liveScrollOffset:(struct CGPoint { double x0; double x1; })a1 completion:(id /* block */)a2;
- (BOOL)_locationShouldFlipOverLeftKnob_LTR:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)_locationShouldFlipOverLeftKnob_RTL:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)_locationShouldFlipOverRightKnob_LTR:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)_locationShouldFlipOverRightKnob_RTL:(struct CGPoint { double x0; double x1; })a0;
- (void)_updateStateIfNecessaryWithOldModificationType:(long long)a0 newModificationType:(long long)a1;
- (id)_knobForLocation:(struct CGPoint { double x0; double x1; })a0 forInputType:(long long)a1;
- (id)_selectionModifierGestures;
- (void)_updateAllowedTouchTypesForLassoGR;
- (id)_knobForLocation:(struct CGPoint { double x0; double x1; })a0;
- (id)initWithSelectionController:(id)a0;
- (void)_didAddSelectionView:(id)a0;
- (void)_didBeginDraggingSelection:(id)a0;

@end
