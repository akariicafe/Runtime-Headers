@class PKTextInputPaletteController, PKTextInputCanvasController, PKTextInputTouchDetectionGestureRecognizer, PKTextInputHandwritingController, PKTextInputDebugStateIntrospector, UIView, PKTextInputElementsController, NSString, PKTextInputReserveSpaceController, PKTextInputCursorController, PKTextInputFeedbackController, PKTextInputKeyboardSuppressionPolicyDelegate, PKTContainerView, PKTextInputDebugLogController, PKTextInputDebugViewController, PKTextInputSingleElementFinder, PKTextInputDrawingGestureRecognizer;

@interface PKTextInputInteraction : NSObject <PKTextInputDebugStateReporting, UIEditingOverlayInteractionWithView, PKTextInputCanvasControllerDelegate, PKTextInputCanvasControllerChangeObserver, PKTextInputHandwritingControllerDelegate, PKTextInputElementsControllerDelegate, PKTextInputPaletteControllerDelegate, PKTextInputContainerViewDelegate, PKTextInputDrawingGestureRecognizerDelegate, PKTextInputFeedbackControllerDelegate, PKTextInputCursorControllerDelegate, PKTextInputReserveSpaceControllerDelegate, PKTextInputDebugViewControllerDelegate, PKTextInputTouchDetectionGestureRecognizerDelegate, UIInteraction> {
    BOOL _shouldBeActive;
    BOOL _replayCancelled;
}

@property (readonly, nonatomic) PKTextInputDrawingGestureRecognizer *drawingGestureRecognizer;
@property (readonly, nonatomic) PKTextInputCanvasController *canvasController;
@property (readonly, nonatomic) PKTextInputElementsController *elementsController;
@property (readonly, nonatomic) PKTextInputHandwritingController *handwritingController;
@property (readonly, nonatomic) PKTextInputReserveSpaceController *reserveSpaceController;
@property (readonly, nonatomic) PKTextInputDebugLogController *debugLogController;
@property (readonly, nonatomic) PKTextInputCursorController *cursorController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) UIView *view;
@property (retain, nonatomic) PKTContainerView *_containerView;
@property (readonly, nonatomic) PKTextInputCanvasController *_canvasController;
@property (retain, nonatomic) PKTextInputFeedbackController *_feedbackController;
@property (retain, nonatomic) PKTextInputPaletteController *_paletteController;
@property (retain, nonatomic) PKTextInputTouchDetectionGestureRecognizer *_touchDetectionGestureRecognizer;
@property (retain, nonatomic) PKTextInputElementsController *_elementsController;
@property (retain, nonatomic) PKTextInputHandwritingController *_handwritingController;
@property (nonatomic, setter=_setHandwritingInteractionEnabled:) BOOL _handwritingInteractionEnabled;
@property (nonatomic, setter=_setLastHandwritingEventTimestamp:) double _lastHandwritingEventTimestamp;
@property (retain, nonatomic) PKTextInputDrawingGestureRecognizer *drawingGestureRecognizer;
@property (retain, nonatomic) PKTextInputSingleElementFinder *_drawingGestureElementFinder;
@property (retain, nonatomic) PKTextInputKeyboardSuppressionPolicyDelegate *_keyboardSuppressionPolicyDelegate;
@property (retain, nonatomic) PKTextInputDebugLogController *_debugLogController;
@property (nonatomic, setter=_setDebugControllerAnchorCorner:) unsigned long long _debugControllerAnchorCorner;
@property (retain, nonatomic) PKTextInputDebugViewController *_debugViewController;
@property (retain, nonatomic) PKTextInputDebugStateIntrospector *_debugStateIntrospector;
@property (retain, nonatomic) PKTextInputCursorController *_cursorController;
@property (retain, nonatomic) PKTextInputReserveSpaceController *_reserveSpaceController;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } editingOverlayContainerSceneBounds;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)interactionForScene:(id)a0;

- (void)willMoveToView:(id)a0;
- (void)didMoveToView:(id)a0;
- (id)init;
- (void).cxx_destruct;
- (void)dealloc;
- (void)_updateContainerView;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (void)editingOverlayContainerDidChangeToSceneBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_updateGestureRecognizers;
- (void)elementsControllerLastDiscoveredElementsDidChange:(id)a0;
- (void)reportDebugStateDescription:(id /* block */)a0;
- (BOOL)drawingGestureRecognizer:(id)a0 shouldBeginDrawingWithTouches:(id)a1 event:(id)a2;
- (void)simulateReserveSpaceForTextInputView:(id)a0 location:(struct CGPoint { double x0; double x1; })a1 completion:(id /* block */)a2;
- (void)cancelReplay;
- (void)saveInteractionForScene:(id)a0;
- (void)_updateInteractionEnabled;
- (void)_updateElementsController;
- (void)_updatePaletteController;
- (void)_updateCanvasController;
- (void)_updateHandwritingController;
- (void)_updateDebugController;
- (void)canvasControllerDidEndDrawing:(id)a0;
- (void)canvasControllerInProgressStrokeDidChange:(id)a0;
- (void)canvasControllerDidCancelStroke:(id)a0 strokeAcceptanceState:(long long)a1;
- (void)canvasControllerEndedStroke:(id)a0;
- (void)canvasController:(id)a0 drawingDidChange:(id)a1;
- (void)_updateCanvasStrokeColor;
- (void)_handlePotentialDebugOverlayGestureAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)_topLevelHitViewForContainerViewPosition:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)_shouldAvoidStartingDrawingOnView:(id)a0 location:(struct CGPoint { double x0; double x1; })a1;
- (void)_notifyTargetElementOfTouches:(id)a0 event:(id)a1;
- (void)_drawingGestureElementFinderDidFinish;
- (BOOL)_isTapAwayFromCurrentStrokesAtCanvasViewLocation:(struct CGPoint { double x0; double x1; })a0;
- (void)canvasControllerDidBeginDrawing:(id)a0;
- (BOOL)_handleDrawingGestureTapInElement:(id)a0 gesture:(id)a1 touch:(id)a2;
- (BOOL)_beginGestureIfPossible:(id)a0;
- (id)canvasControllerContainerView:(id)a0;
- (id)canvasControllerDrawingGestureRecognizer:(id)a0;
- (void)canvasControllerCanvasDidFinishAnimatingStrokes:(id)a0;
- (void)canvasControllerHasVisibleStrokesChanged:(id)a0;
- (id)canvasControllerPreferredStrokeColor:(id)a0 animated:(BOOL *)a1;
- (void)handwritingControllerWritingStateDidChange:(id)a0;
- (void)handwritingControllerDidFinishActiveCommands:(id)a0;
- (id)supportedElementDelegateForHandwritingController:(id)a0;
- (void)handwritingControllerStrokeAlphaOverrideDidChange:(id)a0;
- (id)paletteControllerContainerView:(id)a0;
- (id)paletteControllerDebugSharpenerLog:(id)a0;
- (void)textInputPaletteControllerFloatingKeyboardWillShow:(id)a0;
- (void)textInputPaletteControllerFloatingKeyboardWillHide:(id)a0;
- (id)containerView:(id)a0 hitTest:(struct CGPoint { double x0; double x1; })a1 withEvent:(id)a2;
- (BOOL)drawingGestureRecognizerRequiresTargetElementToBegin:(id)a0;
- (BOOL)drawingGestureRecognizerRequiresPastTapToBegin:(id)a0;
- (void)drawingGestureStrokeAcceptanceStateDidChange:(id)a0;
- (BOOL)drawingGestureRecognizerLongPressShouldBegin:(id)a0;
- (void)drawingGestureRecognizerLongPressStateDidChange:(id)a0;
- (void)drawingGestureRecognizerDrawingTargetIsDrawingDidChange:(id)a0;
- (BOOL)drawingGestureRecognizer:(id)a0 shouldFinishGestureWithTouch:(id)a1;
- (id)feedbackControllerContainerView:(id)a0;
- (void)feedbackControllerShowingCustomFeedbackDidChange:(id)a0;
- (BOOL)cursorControllerCustomHighlightFeedbackIsVisible:(id)a0;
- (long long)cursorControllerWritingState:(id)a0;
- (id)windowSceneForController:(id)a0;
- (void)reserveSpaceControllerIsActiveChanged:(id)a0;
- (void)reserveSpaceControllerIsPlaceholderVisibleChanged:(id)a0;
- (void)reserveSpaceController:(id)a0 willFocusElement:(id)a1;
- (void)debugViewControllerNeedsDismiss:(id)a0;
- (void)touchesDetected;
- (void)_updateKeyboardSuppressionPolicy;

@end
