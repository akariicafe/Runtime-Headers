@class PKStrokeRenderMask, NSUUID, PKStrokePath, PKInk, NSArray, UIBezierPath, _PKStrokeClipPlane;

@interface PKStroke : NSObject <NSCopying> {
    struct shared_ptr<PKProtobufUnknownFields> { struct PKProtobufUnknownFields *__ptr_; struct __shared_weak_count *__cntrl_; } _unknownFields;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cachedBounds;
    double _cachedMaxWidthForStroke;
}

@property (copy, nonatomic) _PKStrokeClipPlane *_clipPlane;
@property (copy, nonatomic) PKStrokeRenderMask *_renderMask;
@property (copy, nonatomic) NSUUID *_groupID;
@property (nonatomic) struct { union { struct { unsigned char isHidden : 1; unsigned char hiddenInherited : 1; unsigned char inkInherited : 1; unsigned char transformInherited : 1; unsigned char isNewCopy : 1; } ; unsigned long long allFlags; } ; } _flags;
@property (nonatomic) long long _shapeType;
@property (nonatomic, getter=_isHidden, setter=_setHidden:) BOOL _hidden;
@property (readonly, nonatomic) BOOL _isFullyHidden;
@property (nonatomic, getter=_isNewCopy, setter=_setIsNewCopy:) BOOL _isNewCopy;
@property (retain, nonatomic) PKStrokePath *_strokeData;
@property (readonly, nonatomic) NSUUID *_strokeDataUUID;
@property (nonatomic, setter=_setBounds:) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _bounds;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _untransformedBounds;
@property (readonly, nonatomic) unsigned int _randomSeed;
@property (retain, nonatomic) PKInk *ink;
@property (retain, nonatomic, setter=_setStrokeUUID:) NSUUID *_strokeUUID;
@property (readonly, nonatomic) BOOL _isInternal;
@property (nonatomic) struct _PKStrokeID { unsigned int clock; unsigned char replicaUUID[16]; unsigned int subclock; } _sortID;
@property (nonatomic) struct _PKStrokeID { unsigned int clock; unsigned char replicaUUID[16]; unsigned int subclock; } _version;
@property (nonatomic, setter=_setTransform:) struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _transform;
@property (nonatomic) struct _PKStrokeID { unsigned int clock; unsigned char replicaUUID[16]; unsigned int subclock; } _substrokesVersion;
@property (retain, nonatomic) NSArray *_substrokes;
@property (readonly, nonatomic) struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } transform;
@property (readonly, nonatomic) PKStrokePath *path;
@property (readonly, nonatomic) UIBezierPath *mask;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } renderBounds;
@property (readonly, nonatomic) NSArray *maskedPathRanges;

+ (id)copyStrokes:(id)a0 hidden:(BOOL)a1;
+ (long long)_asciiDimensionForBoundsDimension:(double)a0;
+ (long long)_asciiBitfieldIndexForX:(long long)a0 y:(long long)a1 width:(long long)a2;
+ (id)_testStrokeFromPoints:(struct PKCompressedStrokePoint { struct _PKPoint { float x0; float x1; } x0; float x1; float x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; } *)a0 length:(long long)a1 ink:(id)a2;
+ (struct PKCompressedStrokePoint { struct _PKPoint { float x0; float x1; } x0; float x1; float x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; })_compressStrokePoint:(struct _PKStrokePoint { double x0; struct CGPoint { double x0; double x1; } x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; })a0 withTimestamp:(double)a1;
+ (struct _PKStrokePoint { double x0; struct CGPoint { double x0; double x1; } x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; })_decompressStrokePoint:(struct PKCompressedStrokePoint { struct _PKPoint { float x0; float x1; } x0; float x1; float x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; })a0 withTimestamp:(double)a1;

- (double)_timestamp;
- (id)debugQuickLookObject;
- (double)timestamp;
- (id)_ink;
- (id)init;
- (void).cxx_destruct;
- (struct CGPoint { double x0; double x1; })locationAtIndex:(unsigned long long)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (id)_ascii;
- (id)initWithArchive:(const struct StrokeDelta { void /* function */ **x0; struct unique_ptr<drawing::Ink, std::__1::default_delete<drawing::Ink> > { struct __compressed_pair<drawing::Ink *, std::__1::default_delete<drawing::Ink> > { struct Ink *x0; } x0; } x1; struct vector<PB::Data, std::__1::allocator<PB::Data> > { struct Data *x0; struct Data *x1; struct __compressed_pair<PB::Data *, std::__1::allocator<PB::Data> > { struct Data *x0; } x2; } x2; struct unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > { struct __compressed_pair<drawing::Stroke *, std::__1::default_delete<drawing::Stroke> > { struct Stroke *x0; } x0; } x3; struct unique_ptr<drawing::StrokeData, std::__1::default_delete<drawing::StrokeData> > { struct __compressed_pair<drawing::StrokeData *, std::__1::default_delete<drawing::StrokeData> > { struct StrokeData *x0; } x0; } x4; } *)a0 error:(id *)a1;
- (double)startTimestamp;
- (unsigned long long)hash;
- (double)timestampAtIndex:(unsigned long long)a0;
- (id)mutableCopyWithZone:(struct _NSZone { } *)a0;
- (id)description;
- (unsigned long long)_pointsCount;
- (long long)_inputType;
- (id).cxx_construct;
- (BOOL)isEqual:(id)a0;
- (id)initWithData:(id)a0 error:(id *)a1;
- (double)endTimestamp;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_calculateBounds;
- (id)dataRepresentation;
- (void)_setInk:(id)a0;
- (id)deltaTo:(id)a0;
- (void)saveToArchive:(struct StrokeDelta { void /* function */ **x0; struct unique_ptr<drawing::Ink, std::__1::default_delete<drawing::Ink> > { struct __compressed_pair<drawing::Ink *, std::__1::default_delete<drawing::Ink> > { struct Ink *x0; } x0; } x1; struct vector<PB::Data, std::__1::allocator<PB::Data> > { struct Data *x0; struct Data *x1; struct __compressed_pair<PB::Data *, std::__1::allocator<PB::Data> > { struct Data *x0; } x2; } x2; struct unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > { struct __compressed_pair<drawing::Stroke *, std::__1::default_delete<drawing::Stroke> > { struct Stroke *x0; } x0; } x3; struct unique_ptr<drawing::StrokeData, std::__1::default_delete<drawing::StrokeData> > { struct __compressed_pair<drawing::StrokeData *, std::__1::default_delete<drawing::StrokeData> > { struct StrokeData *x0; } x0; } x4; } *)a0;
- (void)generateClipPaths:(struct vector<std::__1::vector<ClipperLib::IntPoint, std::__1::allocator<ClipperLib::IntPoint> >, std::__1::allocator<std::__1::vector<ClipperLib::IntPoint, std::__1::allocator<ClipperLib::IntPoint> > > > { struct vector<ClipperLib::IntPoint, std::__1::allocator<ClipperLib::IntPoint> > *x0; struct vector<ClipperLib::IntPoint, std::__1::allocator<ClipperLib::IntPoint> > *x1; struct __compressed_pair<std::__1::vector<ClipperLib::IntPoint, std::__1::allocator<ClipperLib::IntPoint> > *, std::__1::allocator<std::__1::vector<ClipperLib::IntPoint, std::__1::allocator<ClipperLib::IntPoint> > > > { struct vector<ClipperLib::IntPoint, std::__1::allocator<ClipperLib::IntPoint> > *x0; } x2; } *)a0 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a1;
- (BOOL)_shouldBeClippedAgainstLegacyCanvas;
- (id)copyForMutation;
- (id)initWithStroke:(id)a0;
- (id)_sliceWithSlicingBlock:(id /* block */)a0 replica:(id)a1;
- (id)copyForMutationWithSubstrokes:(id)a0;
- (BOOL)intersectsPoint:(struct CGPoint { double x0; double x1; })a0 boundsOutset:(double)a1 minimumStrokeThreshold:(double)a2;
- (double)_maxWidthForStroke;
- (struct CGPath { } *)selectionPathRepresentationWithPointsCount:(int *)a0;
- (void)enumeratePointsWithDistanceStep:(double)a0 usingBlock:(id /* block */)a1;
- (long long)compareToStroke:(id)a0;
- (void)enumeratePointsWithTimestep:(double)a0 usingBlock:(id /* block */)a1;
- (id)initWithArchive:(const struct Stroke { void /* function */ **x0; struct vector<float, std::__1::allocator<float> > { float *x0; float *x1; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x0; } x2; } x1; struct unique_ptr<drawing::Rectangle, std::__1::default_delete<drawing::Rectangle> > { struct __compressed_pair<drawing::Rectangle *, std::__1::default_delete<drawing::Rectangle> > { struct Rectangle *x0; } x0; } x2; struct unique_ptr<PB::Data, std::__1::default_delete<PB::Data> > { struct __compressed_pair<PB::Data *, std::__1::default_delete<PB::Data> > { struct Data *x0; } x0; } x3; unsigned long long x4; struct vector<PB::Data, std::__1::allocator<PB::Data> > { struct Data *x0; struct Data *x1; struct __compressed_pair<PB::Data *, std::__1::allocator<PB::Data> > { struct Data *x0; } x2; } x5; unsigned long long x6; struct unique_ptr<drawing::StrokeID, std::__1::default_delete<drawing::StrokeID> > { struct __compressed_pair<drawing::StrokeID *, std::__1::default_delete<drawing::StrokeID> > { struct StrokeID *x0; } x0; } x7; struct unique_ptr<drawing::StrokeData, std::__1::default_delete<drawing::StrokeData> > { struct __compressed_pair<drawing::StrokeData *, std::__1::default_delete<drawing::StrokeData> > { struct StrokeData *x0; } x0; } x8; struct unique_ptr<PB::Data, std::__1::default_delete<PB::Data> > { struct __compressed_pair<PB::Data *, std::__1::default_delete<PB::Data> > { struct Data *x0; } x0; } x9; unsigned long long x10; struct PtrVector<drawing::Stroke> { struct vector<std::__1::unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> >, std::__1::allocator<std::__1::unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > > > { struct unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > *x0; struct unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > *x1; struct __compressed_pair<std::__1::unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > *, std::__1::allocator<std::__1::unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > > > { struct unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > *x0; } x2; } x0; } x11; struct unique_ptr<drawing::StrokeID, std::__1::default_delete<drawing::StrokeID> > { struct __compressed_pair<drawing::StrokeID *, std::__1::default_delete<drawing::StrokeID> > { struct StrokeID *x0; } x0; } x12; struct unique_ptr<drawing::Transform, std::__1::default_delete<drawing::Transform> > { struct __compressed_pair<drawing::Transform *, std::__1::default_delete<drawing::Transform> > { struct Transform *x0; } x0; } x13; struct unique_ptr<drawing::StrokeID, std::__1::default_delete<drawing::StrokeID> > { struct __compressed_pair<drawing::StrokeID *, std::__1::default_delete<drawing::StrokeID> > { struct StrokeID *x0; } x0; } x14; struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; } x15; struct shared_ptr<PKProtobufUnknownFields> { struct PKProtobufUnknownFields *x0; struct __shared_weak_count *x1; } x16; } *)a0 sortedUUIDs:(id)a1 inks:(id)a2 transientArchiveDictionary:(id)a3;
- (unsigned int)saveToArchive:(struct Stroke { void /* function */ **x0; struct vector<float, std::__1::allocator<float> > { float *x0; float *x1; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x0; } x2; } x1; struct unique_ptr<drawing::Rectangle, std::__1::default_delete<drawing::Rectangle> > { struct __compressed_pair<drawing::Rectangle *, std::__1::default_delete<drawing::Rectangle> > { struct Rectangle *x0; } x0; } x2; struct unique_ptr<PB::Data, std::__1::default_delete<PB::Data> > { struct __compressed_pair<PB::Data *, std::__1::default_delete<PB::Data> > { struct Data *x0; } x0; } x3; unsigned long long x4; struct vector<PB::Data, std::__1::allocator<PB::Data> > { struct Data *x0; struct Data *x1; struct __compressed_pair<PB::Data *, std::__1::allocator<PB::Data> > { struct Data *x0; } x2; } x5; unsigned long long x6; struct unique_ptr<drawing::StrokeID, std::__1::default_delete<drawing::StrokeID> > { struct __compressed_pair<drawing::StrokeID *, std::__1::default_delete<drawing::StrokeID> > { struct StrokeID *x0; } x0; } x7; struct unique_ptr<drawing::StrokeData, std::__1::default_delete<drawing::StrokeData> > { struct __compressed_pair<drawing::StrokeData *, std::__1::default_delete<drawing::StrokeData> > { struct StrokeData *x0; } x0; } x8; struct unique_ptr<PB::Data, std::__1::default_delete<PB::Data> > { struct __compressed_pair<PB::Data *, std::__1::default_delete<PB::Data> > { struct Data *x0; } x0; } x9; unsigned long long x10; struct PtrVector<drawing::Stroke> { struct vector<std::__1::unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> >, std::__1::allocator<std::__1::unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > > > { struct unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > *x0; struct unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > *x1; struct __compressed_pair<std::__1::unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > *, std::__1::allocator<std::__1::unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > > > { struct unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > *x0; } x2; } x0; } x11; struct unique_ptr<drawing::StrokeID, std::__1::default_delete<drawing::StrokeID> > { struct __compressed_pair<drawing::StrokeID *, std::__1::default_delete<drawing::StrokeID> > { struct StrokeID *x0; } x0; } x12; struct unique_ptr<drawing::Transform, std::__1::default_delete<drawing::Transform> > { struct __compressed_pair<drawing::Transform *, std::__1::default_delete<drawing::Transform> > { struct Transform *x0; } x0; } x13; struct unique_ptr<drawing::StrokeID, std::__1::default_delete<drawing::StrokeID> > { struct __compressed_pair<drawing::StrokeID *, std::__1::default_delete<drawing::StrokeID> > { struct StrokeID *x0; } x0; } x14; struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; } x15; struct shared_ptr<PKProtobufUnknownFields> { struct PKProtobufUnknownFields *x0; struct __shared_weak_count *x1; } x16; } *)a0 sortedUUIDs:(id)a1 inks:(id)a2 withPathData:(BOOL)a3 transient:(BOOL)a4;
- (id)strokeApplying:(id)a0;
- (struct CGPath { } *)_newPathRepresentation;
- (struct CGPoint { double x0; double x1; })_locationAtIndex:(unsigned long long)a0;
- (long long)_visibleSubstrokeCount;
- (void)_addVisibleSubstrokesTo:(id)a0;
- (id)initWithStroke:(id)a0 hidden:(BOOL)a1 version:(struct _PKStrokeID { unsigned int x0; unsigned char x1[16]; unsigned int x2; })a2 ink:(id)a3 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a4;
- (id)initWithData:(id)a0 id:(id)a1 sortID:(struct _PKStrokeID { unsigned int x0; unsigned char x1[16]; unsigned int x2; })a2 timestamp:(double)a3 flags:(struct { union { struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; } x0; unsigned long long x1; } x0; })a4 version:(struct _PKStrokeID { unsigned int x0; unsigned char x1[16]; unsigned int x2; })a5 ink:(id)a6 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a7 substrokes:(id)a8 substrokesVersion:(struct _PKStrokeID { unsigned int x0; unsigned char x1[16]; unsigned int x2; })a9;
- (id)_updateStroke:(id /* block */)a0;
- (id)_mergeWithStroke:(id)a0;
- (BOOL *)_newAsciiBitfield;
- (void)_addTestDataToUnknownFields;
- (id)_dataInUnknownFields;
- (id)_initWithPath:(struct CGPath { } *)a0 ink:(id)a1 maxSegmentLength:(double)a2 inputScale:(double)a3 velocityForDistanceFunction:(id /* block */)a4;
- (id)initWithStroke:(id)a0 hidden:(BOOL)a1 version:(struct _PKStrokeID { unsigned int x0; unsigned char x1[16]; unsigned int x2; })a2;
- (id)initWithInk:(id)a0 strokePath:(id)a1 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a2 mask:(id)a3;
- (id)initWithInk:(id)a0 strokePath:(id)a1 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a2;
- (void)_consumeRenderVertexes:(id /* block */)a0;
- (void)interpolatePointDataWithStep:(double)a0 usingBlock:(id /* block */)a1;
- (id)descriptionAtDepth:(long long)a0;
- (BOOL *)_newAsciiBitfieldWithWidth:(long long)a0 height:(long long)a1;
- (id)_substrokeWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)_initWithStroke:(id)a0 strokeData:(id)a1;
- (struct CGPoint { double x0; double x1; })_locationAtIndex:(unsigned long long)a0 applyStrokeTransform:(BOOL)a1;
- (id)_initWithPath:(struct CGPath { } *)a0 ink:(id)a1 inputScale:(double)a2;
- (id)initWithStroke:(id)a0 hidden:(BOOL)a1 version:(struct _PKStrokeID { unsigned int x0; unsigned char x1[16]; unsigned int x2; })a2 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a3;
- (id)initWithData:(id)a0 id:(id)a1 sortID:(struct _PKStrokeID { unsigned int x0; unsigned char x1[16]; unsigned int x2; })a2 timestamp:(double)a3 hidden:(BOOL)a4 version:(struct _PKStrokeID { unsigned int x0; unsigned char x1[16]; unsigned int x2; })a5 ink:(id)a6 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a7 substrokes:(id)a8 substrokesVersion:(struct _PKStrokeID { unsigned int x0; unsigned char x1[16]; unsigned int x2; })a9;
- (struct CGPath { } *)newPathRepresentation;
- (void)_invalidateBounds;
- (void)_appendPointsOfInterestForSelection:(struct vector<CGPoint, std::__1::allocator<CGPoint> > { struct CGPoint *x0; struct CGPoint *x1; struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint> > { struct CGPoint *x0; } x2; } *)a0;
- (id)substrokeWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (double)_timestampAtIndex:(unsigned long long)a0;
- (BOOL)_containsSamePointsAsStroke:(id)a0;
- (struct CGPoint { double x0; double x1; })intersectionFromPoint:(struct CGPoint { double x0; double x1; })a0 toPoint:(struct CGPoint { double x0; double x1; })a1;
- (struct unique_ptr<std::__1::vector<PKCompressedStrokePoint, std::__1::allocator<PKCompressedStrokePoint> >, std::__1::default_delete<std::__1::vector<PKCompressedStrokePoint, std::__1::allocator<PKCompressedStrokePoint> > > > { struct __compressed_pair<std::__1::vector<PKCompressedStrokePoint, std::__1::allocator<PKCompressedStrokePoint> > *, std::__1::default_delete<std::__1::vector<PKCompressedStrokePoint, std::__1::allocator<PKCompressedStrokePoint> > > > { struct vector<PKCompressedStrokePoint, std::__1::allocator<PKCompressedStrokePoint> > *x0; } x0; })_compressedStrokePoints;
- (BOOL)_visitVisibleSubstrokes:(id /* block */)a0;
- (void)interpolatePointDataWithStep:(double)a0 from:(double)a1 to:(double)a2 usingBlock:(id /* block */)a3;
- (double)_thresholdForPoint:(struct _PKStrokePoint { double x0; struct CGPoint { double x0; double x1; } x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; })a0;
- (id)_mergeUnparentedWithStroke:(id)a0;
- (id)_updateWithParent:(id)a0;
- (id)mergeArrayOfStrokes:(id)a0 with:(id)a1;
- (void)debugRender:(struct CGContext { } *)a0;
- (struct vector<std::__1::vector<ClipperLib::IntPoint, std::__1::allocator<ClipperLib::IntPoint> >, std::__1::allocator<std::__1::vector<ClipperLib::IntPoint, std::__1::allocator<ClipperLib::IntPoint> > > > { struct vector<ClipperLib::IntPoint, std::__1::allocator<ClipperLib::IntPoint> > *x0; struct vector<ClipperLib::IntPoint, std::__1::allocator<ClipperLib::IntPoint> > *x1; struct __compressed_pair<std::__1::vector<ClipperLib::IntPoint, std::__1::allocator<ClipperLib::IntPoint> > *, std::__1::allocator<std::__1::vector<ClipperLib::IntPoint, std::__1::allocator<ClipperLib::IntPoint> > > > { struct vector<ClipperLib::IntPoint, std::__1::allocator<ClipperLib::IntPoint> > *x0; } x2; } *)newOutlinePaths;
- (BOOL)intersectsPoint:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)intersectsLineFrom:(struct CGPoint { double x0; double x1; })a0 to:(struct CGPoint { double x0; double x1; })a1 minThreshold:(double)a2;
- (BOOL)intersectsClosedStroke:(id)a0;
- (id)initWithV1Archive:(const struct Stroke { void /* function */ **x0; struct unique_ptr<drawingV1::Rectangle, std::__1::default_delete<drawingV1::Rectangle> > { struct __compressed_pair<drawingV1::Rectangle *, std::__1::default_delete<drawingV1::Rectangle> > { struct Rectangle *x0; } x0; } x1; unsigned long long x2; struct unique_ptr<PB::Data, std::__1::default_delete<PB::Data> > { struct __compressed_pair<PB::Data *, std::__1::default_delete<PB::Data> > { struct Data *x0; } x0; } x3; unsigned long long x4; struct unique_ptr<PB::Data, std::__1::default_delete<PB::Data> > { struct __compressed_pair<PB::Data *, std::__1::default_delete<PB::Data> > { struct Data *x0; } x0; } x5; struct unique_ptr<drawingV1::StrokeID, std::__1::default_delete<drawingV1::StrokeID> > { struct __compressed_pair<drawingV1::StrokeID *, std::__1::default_delete<drawingV1::StrokeID> > { struct StrokeID *x0; } x0; } x6; struct unique_ptr<PB::Data, std::__1::default_delete<PB::Data> > { struct __compressed_pair<PB::Data *, std::__1::default_delete<PB::Data> > { struct Data *x0; } x0; } x7; double x8; struct unique_ptr<drawingV1::Transform, std::__1::default_delete<drawingV1::Transform> > { struct __compressed_pair<drawingV1::Transform *, std::__1::default_delete<drawingV1::Transform> > { struct Transform *x0; } x0; } x9; struct unique_ptr<drawingV1::StrokeID, std::__1::default_delete<drawingV1::StrokeID> > { struct __compressed_pair<drawingV1::StrokeID *, std::__1::default_delete<drawingV1::StrokeID> > { struct StrokeID *x0; } x0; } x10; BOOL x11; BOOL x12; struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; } x13; } *)a0 sortedUUIDs:(id)a1 inks:(id)a2;
- (id)initWithLegacyArchive:(const struct Command { void /* function */ **x0; struct unique_ptr<legacy_drawing::Point, std::__1::default_delete<legacy_drawing::Point> > { struct __compressed_pair<legacy_drawing::Point *, std::__1::default_delete<legacy_drawing::Point> > { struct Point *x0; } x0; } x1; struct unique_ptr<legacy_drawing::Rectangle, std::__1::default_delete<legacy_drawing::Rectangle> > { struct __compressed_pair<legacy_drawing::Rectangle *, std::__1::default_delete<legacy_drawing::Rectangle> > { struct Rectangle *x0; } x0; } x2; struct unique_ptr<legacy_drawing::Point, std::__1::default_delete<legacy_drawing::Point> > { struct __compressed_pair<legacy_drawing::Point *, std::__1::default_delete<legacy_drawing::Point> > { struct Point *x0; } x0; } x3; struct unique_ptr<legacy_drawing::Point, std::__1::default_delete<legacy_drawing::Point> > { struct __compressed_pair<legacy_drawing::Point *, std::__1::default_delete<legacy_drawing::Point> > { struct Point *x0; } x0; } x4; struct unique_ptr<legacy_drawing::Color, std::__1::default_delete<legacy_drawing::Color> > { struct __compressed_pair<legacy_drawing::Color *, std::__1::default_delete<legacy_drawing::Color> > { struct Color *x0; } x0; } x5; struct unique_ptr<legacy_drawing::CommandID, std::__1::default_delete<legacy_drawing::CommandID> > { struct __compressed_pair<legacy_drawing::CommandID *, std::__1::default_delete<legacy_drawing::CommandID> > { struct CommandID *x0; } x0; } x6; struct unique_ptr<legacy_drawing::Parameters, std::__1::default_delete<legacy_drawing::Parameters> > { struct __compressed_pair<legacy_drawing::Parameters *, std::__1::default_delete<legacy_drawing::Parameters> > { struct Parameters *x0; } x0; } x7; struct PtrVector<legacy_drawing::Point> { struct vector<std::__1::unique_ptr<legacy_drawing::Point, std::__1::default_delete<legacy_drawing::Point> >, std::__1::allocator<std::__1::unique_ptr<legacy_drawing::Point, std::__1::default_delete<legacy_drawing::Point> > > > { struct unique_ptr<legacy_drawing::Point, std::__1::default_delete<legacy_drawing::Point> > *x0; struct unique_ptr<legacy_drawing::Point, std::__1::default_delete<legacy_drawing::Point> > *x1; struct __compressed_pair<std::__1::unique_ptr<legacy_drawing::Point, std::__1::default_delete<legacy_drawing::Point> > *, std::__1::allocator<std::__1::unique_ptr<legacy_drawing::Point, std::__1::default_delete<legacy_drawing::Point> > > > { struct unique_ptr<legacy_drawing::Point, std::__1::default_delete<legacy_drawing::Point> > *x0; } x2; } x0; } x8; struct unique_ptr<legacy_drawing::CommandID, std::__1::default_delete<legacy_drawing::CommandID> > { struct __compressed_pair<legacy_drawing::CommandID *, std::__1::default_delete<legacy_drawing::CommandID> > { struct CommandID *x0; } x0; } x9; unsigned int x10; struct { unsigned char x0 : 1; } x11; } *)a0 sortedUUIDs:(id)a1;
- (void)saveUUIDsTo:(id)a0;
- (void)saveInksTo:(id)a0;
- (unsigned int)saveToV1Archive:(struct Stroke { void /* function */ **x0; struct unique_ptr<drawingV1::Rectangle, std::__1::default_delete<drawingV1::Rectangle> > { struct __compressed_pair<drawingV1::Rectangle *, std::__1::default_delete<drawingV1::Rectangle> > { struct Rectangle *x0; } x0; } x1; unsigned long long x2; struct unique_ptr<PB::Data, std::__1::default_delete<PB::Data> > { struct __compressed_pair<PB::Data *, std::__1::default_delete<PB::Data> > { struct Data *x0; } x0; } x3; unsigned long long x4; struct unique_ptr<PB::Data, std::__1::default_delete<PB::Data> > { struct __compressed_pair<PB::Data *, std::__1::default_delete<PB::Data> > { struct Data *x0; } x0; } x5; struct unique_ptr<drawingV1::StrokeID, std::__1::default_delete<drawingV1::StrokeID> > { struct __compressed_pair<drawingV1::StrokeID *, std::__1::default_delete<drawingV1::StrokeID> > { struct StrokeID *x0; } x0; } x6; struct unique_ptr<PB::Data, std::__1::default_delete<PB::Data> > { struct __compressed_pair<PB::Data *, std::__1::default_delete<PB::Data> > { struct Data *x0; } x0; } x7; double x8; struct unique_ptr<drawingV1::Transform, std::__1::default_delete<drawingV1::Transform> > { struct __compressed_pair<drawingV1::Transform *, std::__1::default_delete<drawingV1::Transform> > { struct Transform *x0; } x0; } x9; struct unique_ptr<drawingV1::StrokeID, std::__1::default_delete<drawingV1::StrokeID> > { struct __compressed_pair<drawingV1::StrokeID *, std::__1::default_delete<drawingV1::StrokeID> > { struct StrokeID *x0; } x0; } x10; BOOL x11; BOOL x12; struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; } x13; } *)a0 sortedUUIDs:(id)a1 inks:(id)a2 withPathData:(BOOL)a3 transient:(BOOL)a4;
- (id)initWithArchive:(const struct Stroke { void /* function */ **x0; struct vector<float, std::__1::allocator<float> > { float *x0; float *x1; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x0; } x2; } x1; struct unique_ptr<drawing::Rectangle, std::__1::default_delete<drawing::Rectangle> > { struct __compressed_pair<drawing::Rectangle *, std::__1::default_delete<drawing::Rectangle> > { struct Rectangle *x0; } x0; } x2; struct unique_ptr<PB::Data, std::__1::default_delete<PB::Data> > { struct __compressed_pair<PB::Data *, std::__1::default_delete<PB::Data> > { struct Data *x0; } x0; } x3; unsigned long long x4; struct vector<PB::Data, std::__1::allocator<PB::Data> > { struct Data *x0; struct Data *x1; struct __compressed_pair<PB::Data *, std::__1::allocator<PB::Data> > { struct Data *x0; } x2; } x5; unsigned long long x6; struct unique_ptr<drawing::StrokeID, std::__1::default_delete<drawing::StrokeID> > { struct __compressed_pair<drawing::StrokeID *, std::__1::default_delete<drawing::StrokeID> > { struct StrokeID *x0; } x0; } x7; struct unique_ptr<drawing::StrokeData, std::__1::default_delete<drawing::StrokeData> > { struct __compressed_pair<drawing::StrokeData *, std::__1::default_delete<drawing::StrokeData> > { struct StrokeData *x0; } x0; } x8; struct unique_ptr<PB::Data, std::__1::default_delete<PB::Data> > { struct __compressed_pair<PB::Data *, std::__1::default_delete<PB::Data> > { struct Data *x0; } x0; } x9; unsigned long long x10; struct PtrVector<drawing::Stroke> { struct vector<std::__1::unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> >, std::__1::allocator<std::__1::unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > > > { struct unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > *x0; struct unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > *x1; struct __compressed_pair<std::__1::unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > *, std::__1::allocator<std::__1::unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > > > { struct unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > *x0; } x2; } x0; } x11; struct unique_ptr<drawing::StrokeID, std::__1::default_delete<drawing::StrokeID> > { struct __compressed_pair<drawing::StrokeID *, std::__1::default_delete<drawing::StrokeID> > { struct StrokeID *x0; } x0; } x12; struct unique_ptr<drawing::Transform, std::__1::default_delete<drawing::Transform> > { struct __compressed_pair<drawing::Transform *, std::__1::default_delete<drawing::Transform> > { struct Transform *x0; } x0; } x13; struct unique_ptr<drawing::StrokeID, std::__1::default_delete<drawing::StrokeID> > { struct __compressed_pair<drawing::StrokeID *, std::__1::default_delete<drawing::StrokeID> > { struct StrokeID *x0; } x0; } x14; struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; } x15; struct shared_ptr<PKProtobufUnknownFields> { struct PKProtobufUnknownFields *x0; struct __shared_weak_count *x1; } x16; } *)a0 sortedUUIDs:(id)a1 inks:(id)a2 parent:(id)a3 isHidden:(BOOL)a4 transientArchiveDictionary:(id)a5;
- (struct _PKStrokeID { unsigned int x0; unsigned char x1[16]; unsigned int x2; })readStrokeIDFromArchive:(const struct StrokeID { void /* function */ **x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; } x4; } *)a0 withSortedUUIDs:(id)a1;
- (unsigned int)saveToArchive:(struct Stroke { void /* function */ **x0; struct vector<float, std::__1::allocator<float> > { float *x0; float *x1; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x0; } x2; } x1; struct unique_ptr<drawing::Rectangle, std::__1::default_delete<drawing::Rectangle> > { struct __compressed_pair<drawing::Rectangle *, std::__1::default_delete<drawing::Rectangle> > { struct Rectangle *x0; } x0; } x2; struct unique_ptr<PB::Data, std::__1::default_delete<PB::Data> > { struct __compressed_pair<PB::Data *, std::__1::default_delete<PB::Data> > { struct Data *x0; } x0; } x3; unsigned long long x4; struct vector<PB::Data, std::__1::allocator<PB::Data> > { struct Data *x0; struct Data *x1; struct __compressed_pair<PB::Data *, std::__1::allocator<PB::Data> > { struct Data *x0; } x2; } x5; unsigned long long x6; struct unique_ptr<drawing::StrokeID, std::__1::default_delete<drawing::StrokeID> > { struct __compressed_pair<drawing::StrokeID *, std::__1::default_delete<drawing::StrokeID> > { struct StrokeID *x0; } x0; } x7; struct unique_ptr<drawing::StrokeData, std::__1::default_delete<drawing::StrokeData> > { struct __compressed_pair<drawing::StrokeData *, std::__1::default_delete<drawing::StrokeData> > { struct StrokeData *x0; } x0; } x8; struct unique_ptr<PB::Data, std::__1::default_delete<PB::Data> > { struct __compressed_pair<PB::Data *, std::__1::default_delete<PB::Data> > { struct Data *x0; } x0; } x9; unsigned long long x10; struct PtrVector<drawing::Stroke> { struct vector<std::__1::unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> >, std::__1::allocator<std::__1::unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > > > { struct unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > *x0; struct unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > *x1; struct __compressed_pair<std::__1::unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > *, std::__1::allocator<std::__1::unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > > > { struct unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > *x0; } x2; } x0; } x11; struct unique_ptr<drawing::StrokeID, std::__1::default_delete<drawing::StrokeID> > { struct __compressed_pair<drawing::StrokeID *, std::__1::default_delete<drawing::StrokeID> > { struct StrokeID *x0; } x0; } x12; struct unique_ptr<drawing::Transform, std::__1::default_delete<drawing::Transform> > { struct __compressed_pair<drawing::Transform *, std::__1::default_delete<drawing::Transform> > { struct Transform *x0; } x0; } x13; struct unique_ptr<drawing::StrokeID, std::__1::default_delete<drawing::StrokeID> > { struct __compressed_pair<drawing::StrokeID *, std::__1::default_delete<drawing::StrokeID> > { struct StrokeID *x0; } x0; } x14; struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; } x15; struct shared_ptr<PKProtobufUnknownFields> { struct PKProtobufUnknownFields *x0; struct __shared_weak_count *x1; } x16; } *)a0 sortedUUIDs:(id)a1 inks:(id)a2 withPathData:(BOOL)a3 parent:(id)a4 transient:(BOOL)a5;
- (void)saveStrokeID:(const struct _PKStrokeID { unsigned int x0; unsigned char x1[16]; unsigned int x2; } *)a0 toArchive:(struct StrokeID { void /* function */ **x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; } x4; } *)a1 withSortedUUIDs:(id)a2;
- (struct _PKStrokeID { unsigned int x0; unsigned char x1[16]; unsigned int x2; })readV1StrokeIDFromArchive:(const struct StrokeID { void /* function */ **x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; } x4; } *)a0 withSortedUUIDs:(id)a1;
- (struct _PKStrokePoint { double x0; struct CGPoint { double x0; double x1; } x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; })readPointFromLegacyArchive:(const struct Point { void /* function */ **x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; } x8; } *)a0 deltaFrom:(const struct _PKStrokePoint { double x0; struct CGPoint { double x0; double x1; } x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; } *)a1;
- (void)saveV1StrokeID:(const struct _PKStrokeID { unsigned int x0; unsigned char x1[16]; unsigned int x2; } *)a0 toArchive:(struct StrokeID { void /* function */ **x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; } x4; } *)a1 withSortedUUIDs:(id)a2;
- (struct CGPoint { double x0; double x1; })readPointFromArchive:(const struct Point { void /* function */ **x0; float x1; float x2; struct { unsigned char x0 : 1; unsigned char x1 : 1; } x3; } *)a0;

@end
