@class NSString, LAClient, NSData, NSNumber;
@protocol LAUIDelegate, LAPrearmContextXPC;

@interface LAContext : NSObject <NSSecureCoding> {
    LAClient *_client;
    id<LAPrearmContextXPC> _prearmContext;
}

@property (class, readonly) unsigned int newCommandId;
@property (class, readonly) unsigned int newInstanceId;
@property (class, readonly) BOOL supportsSecureCoding;

@property (retain, nonatomic) NSData *externalizedContext;
@property (retain, nonatomic) NSData *evaluatedPolicyDomainState;
@property (nonatomic) long long biometryType;
@property (retain, nonatomic) NSNumber *touchIDAuthenticationRetryLimit;
@property (weak, nonatomic) id<LAUIDelegate> uiDelegate;
@property (readonly, nonatomic) unsigned int instanceId;
@property (copy, nonatomic) NSString *localizedFallbackTitle;
@property (retain, nonatomic) NSNumber *maxBiometryFailures;
@property (copy, nonatomic) NSString *localizedCancelTitle;
@property (nonatomic) double touchIDAuthenticationAllowableReuseDuration;
@property (copy, nonatomic) NSString *localizedReason;
@property (nonatomic) BOOL interactionNotAllowed;

+ (void)notifyEvent:(long long)a0;
+ (id)_optionsForEvent:(long long)a0;
+ (void)notifyEvent:(long long)a0 completionHandler:(id /* block */)a1;

- (void)setOptionPasscodeScreenStyle:(id)a0;
- (id)_hashWithBundleIdentifier:(id)a0;
- (id)optionCallerAuditToken;
- (id)optionTransitionStyle;
- (void)evaluatePolicy:(long long)a0 options:(id)a1 reply:(id /* block */)a2;
- (void)setOptionAuthenticationReason:(id)a0;
- (void)setOptionCallerAuditToken:(id)a0;
- (id)init;
- (id)optionUserFallback;
- (void)setOptionAuthenticationTitle:(id)a0;
- (void)setOptionFaceDetectLength:(id)a0;
- (void)evaluateAccessControl:(struct __SecAccessControl { } *)a0 operation:(long long)a1 options:(id)a2 reply:(id /* block */)a3;
- (void)setOptionCallerName:(id)a0;
- (id)evaluateAccessControl:(struct __SecAccessControl { } *)a0 aksOperation:(void *)a1 options:(id)a2 error:(id *)a3;
- (id)optionAuthenticationReason;
- (void).cxx_destruct;
- (void)_evaluateAccessControl:(struct __SecAccessControl { } *)a0 operation:(id)a1 options:(id)a2 log:(long long)a3 cid:(unsigned int)a4 reply:(id /* block */)a5;
- (id)_evaluationMechanismsFromReturnedError:(id)a0 error:(id *)a1;
- (id)_serverPropertyValueForOption:(long long)a0 log:(long long)a1;
- (BOOL)setCredential:(id)a0 type:(long long)a1 error:(id *)a2;
- (id)evaluationMechanismsForPolicy:(long long)a0 error:(id *)a1;
- (id)_serverPropertyValueForOption:(long long)a0;
- (void)failProcessedEvent:(long long)a0 failureError:(id)a1 reply:(id /* block */)a2;
- (id)initWithExternalizedContext:(id)a0;
- (void)dealloc;
- (void)setCredential:(id)a0 forProcessedEvent:(long long)a1 credentialType:(long long)a2 reply:(id /* block */)a3;
- (void)setOptionCallerPID:(id)a0;
- (id)optionPINCharset;
- (void)prearmTouchIDWithReply:(id /* block */)a0;
- (void)optionsForInternalOperation:(long long)a0 reply:(id /* block */)a1;
- (id)evaluationMechanismsForAccessControl:(struct __SecAccessControl { } *)a0 operation:(long long)a1 error:(id *)a2;
- (void)setOptionMatchForUnlock:(id)a0;
- (void)setOptionReturnBiometryDatabaseHash:(id)a0;
- (BOOL)setCredential:(id)a0 type:(long long)a1;
- (void)_setServerPropertyForOption:(long long)a0 value:(id)a1;
- (void)bootstrapServiceType:(id)a0 completionHandler:(id /* block */)a1;
- (id)optionPasscodeTitle;
- (void)setOptionPINCharset:(id)a0;
- (BOOL)checkContextValidWithError:(id *)a0;
- (void)setOptionUserFallback:(id)a0;
- (id)optionCallerIconBundlePath;
- (id)optionSharedValidity;
- (id)optionPINLength;
- (void)setOptionPINMinLength:(id)a0;
- (void)_setServerPropertyForOption:(long long)a0 value:(id)a1 log:(long long)a2;
- (void)evaluateAccessControl:(struct __SecAccessControl { } *)a0 aksOperation:(void *)a1 options:(id)a2 reply:(id /* block */)a3;
- (void)setOptionPasscodeTitle:(id)a0;
- (id)_publicErrorFromInternalError:(id)a0 options:(id)a1;
- (void)setOptionFingerMustBeOff:(id)a0;
- (void)setOptionCallerIconBundlePath:(id)a0;
- (unsigned long long)hash;
- (id)optionPINMinLength;
- (id)_evaluatePolicy:(long long)a0 options:(id)a1 log:(long long)a2 cid:(unsigned int)a3 error:(id *)a4;
- (id)initWithCoder:(id)a0;
- (id)initWithUIDelegate:(id)a0;
- (void)setOptionPresentationStyle:(id)a0;
- (id)optionFaceDetectLength;
- (id)optionSoftwareUpdateManifest;
- (void)setOptionFallbackVisible:(id)a0;
- (id)optionPINTitle;
- (BOOL)_setCredential:(id)a0 type:(long long)a1 log:(long long)a2 cid:(unsigned int)a3 error:(id *)a4;
- (id)uuid;
- (id)description;
- (void)evaluateAccessControl:(struct __SecAccessControl { } *)a0 operation:(long long)a1 localizedReason:(id)a2 reply:(id /* block */)a3;
- (void)setOptionCancelVisible:(id)a0;
- (void)setOptionNoFailureUI:(id)a0;
- (void)setOptionTintColor:(id)a0;
- (id)optionPasscodeScreenStyle;
- (id)optionNotInteractive;
- (void)setOptionPINMaxLength:(id)a0;
- (void)resetProcessedEvent:(long long)a0 reply:(id /* block */)a1;
- (void)setOptionBiometryLockoutRecovery:(id)a0;
- (void)setOptionSharedValidity:(id)a0;
- (id)optionPINMaxLength;
- (void)setOptionNotInteractive:(id)a0;
- (id)optionNoFailureUI;
- (void)authMethodWithReply:(id /* block */)a0;
- (void)setOptionPINTitle:(id)a0;
- (id)initWithExternalizedContext:(id)a0 uiDelegate:(id)a1;
- (id)evaluatePolicy:(long long)a0 options:(id)a1 error:(id *)a2;
- (BOOL)isEqual:(id)a0;
- (id)optionCancelVisible;
- (id)optionMatchForUnlock;
- (void)setCredential:(id)a0 type:(long long)a1 reply:(id /* block */)a2;
- (id)optionFingerMustBeOff;
- (void)retryProcessedEvent:(long long)a0 reply:(id /* block */)a1;
- (void)setOptionSoftwareUpdateManifest:(id)a0;
- (id)credentialOfType:(long long)a0 error:(id *)a1;
- (void)_setCredential:(id)a0 type:(long long)a1 log:(long long)a2 cid:(unsigned int)a3 reply:(id /* block */)a4;
- (void)setOptionTransitionStyle:(id)a0;
- (void)setOptions:(id)a0 forInternalOperation:(long long)a1 reply:(id /* block */)a2;
- (void)evaluatePolicy:(long long)a0 localizedReason:(id)a1 reply:(id /* block */)a2;
- (void)setOptionMaxBiometryFailures:(id)a0;
- (void)setOptionPasscodeScreenBlur:(id)a0;
- (void)setOptionSecurePassphrase:(id)a0;
- (id)optionFallbackVisible;
- (id)optionPresentationStyle;
- (id)optionPhysicalButtonTitle;
- (void)resetWithReply:(id /* block */)a0;
- (void)setShowingCoachingHint:(BOOL)a0 event:(long long)a1 reply:(id /* block */)a2;
- (void)credentialOfType:(long long)a0 reply:(id /* block */)a1;
- (id)optionAuthenticationTitle;
- (void)setOptionPhysicalButtonTitle:(id)a0;
- (id)optionBiometryLockoutRecovery;
- (id)optionPINFirst;
- (BOOL)canEvaluatePolicy:(long long)a0 error:(id *)a1;
- (id)evaluateAccessControl:(struct __SecAccessControl { } *)a0 operation:(long long)a1 options:(id)a2 error:(id *)a3;
- (void)setOptionPINLength:(id)a0;
- (void)setOptionUserCancel:(id)a0;
- (id)initWithExternalizedContext:(id)a0 userSession:(unsigned int *)a1;
- (id)optionUserCancel;
- (void)setOptionPINFirst:(id)a0;
- (id)optionCallerName;
- (BOOL)isCredentialSet:(long long)a0;
- (id)optionPasscodeScreenBlur;
- (void)setOptionTimeout:(id)a0;
- (id)optionSoftwareUpdateStashMode;
- (id)optionTintColor;
- (void)setOptionSoftwareUpdateStashMode:(id)a0;
- (void)_evaluatePolicy:(long long)a0 options:(id)a1 log:(long long)a2 cid:(unsigned int)a3 reply:(id /* block */)a4;
- (void)setOptionPasswordAuthenticationReason:(id)a0;
- (id)optionMaxBiometryFailures;
- (id)optionReturnBiometryDatabaseHash;
- (id)optionSecurePassphrase;
- (id)optionCallerPID;
- (id)optionPasswordAuthenticationReason;
- (void)invalidate;
- (void)encodeWithCoder:(id)a0;
- (id)optionTimeout;

@end
