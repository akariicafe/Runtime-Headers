@class ENUserStoreClient, NSDate, EDAMUser, ENAuthCache, NSArray, ENNoteStoreClient, ENPreferencesStore, NSObject, NSString, ENBusinessNoteStoreClient;
@protocol OS_dispatch_queue, ENSDKLogging, ENAuthenticator;

@interface ENSession : NSObject <ENLinkedNoteStoreClientDelegate, ENBusinessNoteStoreClientDelegate, ENAuthenticatorDelegate>

@property (class, readonly, nonatomic) ENSession *sharedSession;

@property (nonatomic) BOOL supportsLinkedAppNotebook;
@property (retain, nonatomic) EDAMUser *businessUser;
@property (retain, nonatomic) ENPreferencesStore *preferences;
@property (retain, nonatomic) ENUserStoreClient *userStore;
@property (retain, nonatomic) ENNoteStoreClient *primaryNoteStore;
@property (retain, nonatomic) ENBusinessNoteStoreClient *businessNoteStore;
@property (retain, nonatomic) ENAuthCache *authCache;
@property (retain, nonatomic) NSArray *notebooksCache;
@property (retain, nonatomic) NSDate *notebooksCacheDate;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *thumbnailQueue;
@property (retain, nonatomic) ENUserStoreClient *userStorePendingRevocation;
@property (nonatomic) long long personalUploadUsage;
@property (nonatomic) long long personalUploadLimit;
@property (nonatomic) long long businessUploadUsage;
@property (nonatomic) long long businessUploadLimit;
@property (retain, nonatomic) id<ENSDKLogging> logger;
@property (copy, nonatomic) NSString *sourceApplication;
@property (nonatomic) BOOL isAuthenticated;
@property (readonly, nonatomic) BOOL isAuthenticationInProgress;
@property (readonly, nonatomic) BOOL isPremiumUser;
@property (readonly, nonatomic) BOOL isBusinessUser;
@property (readonly, nonatomic) NSString *userDisplayName;
@property (readonly, nonatomic) NSString *businessDisplayName;
@property (retain, nonatomic) id<ENAuthenticator> authenticator;
@property (copy, nonatomic) id /* block */ authenticationCompletion;
@property (copy, nonatomic) NSString *sessionHost;
@property (retain, nonatomic) EDAMUser *user;
@property (copy, nonatomic) NSString *primaryAuthenticationToken;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)keychainAccessGroup;
+ (id)consumerKey;
+ (id)consumerSecret;
+ (BOOL)checkSharedSessionSettings;
+ (void)setSharedSessionConsumerKey:(id)a0 consumerSecret:(id)a1 optionalHost:(id)a2;
+ (void)setSharedSessionDeveloperToken:(id)a0 noteStoreUrl:(id)a1;
+ (void)setDisableRefreshingNotebooksCacheOnLaunch:(BOOL)a0;
+ (void)setSecurityApplicationGroupIdentifier:(id)a0;
+ (void)setKeychainGroup:(id)a0;
+ (id)sessionHostOverride;
+ (id)developerToken;
+ (id)bundleSeedID;

- (int)userID;
- (id)init;
- (void).cxx_destruct;
- (void)dealloc;
- (void)startup;
- (id)credentialStore;
- (BOOL)handleOpenURL:(id)a0;
- (void)addCredentials:(id)a0;
- (id)credentialsForHost:(id)a0;
- (id)userStoreUrl;
- (id)userStoreClientForBootstrapping;
- (void)authenticatorDidAuthenticateWithCredentials:(id)a0 authInfo:(id)a1;
- (void)authenticatorDidFailWithError:(id)a0;
- (id)noteStoreUrlForBusinessStoreClient:(id)a0;
- (id)authenticationTokenForBusinessStoreClient:(id)a0;
- (id)authenticationTokenForLinkedNotebookRef:(id)a0;
- (void)selectInitialSessionHost;
- (void)performPostAuthentication;
- (void)refreshUploadUsage;
- (void)completeAuthenticationWithError:(id)a0;
- (BOOL)appNotebookIsLinked;
- (void)unauthenticate;
- (void)unauthenticateWithoutRevokingAccessToken;
- (void)unauthenticateAndRevokeAccessToken:(BOOL)a0;
- (void)listNotebooksWithCompletion:(id /* block */)a0;
- (void)listWritableNotebooksWithCompletion:(id /* block */)a0;
- (void)listNotebooks_listNotebooksWithContext:(id)a0;
- (void)listNotebooks_listSharedNotebooksWithContext:(id)a0;
- (void)listNotebooks_listLinkedNotebooksWithContext:(id)a0;
- (void)listNotebooks_fetchSharedBusinessNotebooksWithContext:(id)a0;
- (void)listNotebooks_fetchBusinessNotebooksWithContext:(id)a0;
- (void)listNotebooks_processBusinessNotebooksWithContext:(id)a0;
- (void)listNotebooks_fetchSharedNotebooksWithContext:(id)a0;
- (void)listNotebooks_completePendingSharedNotebookWithContext:(id)a0;
- (void)listNotebooks_processSharedNotebooksWithContext:(id)a0;
- (void)listNotebooks_prepareResultsWithContext:(id)a0;
- (void)listNotebooks_completeWithContext:(id)a0 error:(id)a1;
- (void)listNotebooks_cleanCache;
- (void)uploadNote:(id)a0 notebook:(id)a1 completion:(id /* block */)a2;
- (void)uploadNote:(id)a0 policy:(long long)a1 toNotebook:(id)a2 orReplaceNote:(id)a3 progress:(id /* block */)a4 completion:(id /* block */)a5;
- (void)uploadNote_determineDestinationWithContext:(id)a0;
- (void)uploadNote_updateWithContext:(id)a0;
- (void)uploadNote_findLinkedAppNotebookWithContext:(id)a0;
- (void)uploadNote_findSharedAppNotebookWithContext:(id)a0;
- (void)uploadNote_createWithContext:(id)a0;
- (void)uploadNote_completeWithContext:(id)a0 error:(id)a1;
- (void)shareNote:(id)a0 completion:(id /* block */)a1;
- (void)deleteNote:(id)a0 completion:(id /* block */)a1;
- (void)findNotesWithSearch:(id)a0 inNotebook:(id)a1 orScope:(unsigned long long)a2 sortOrder:(unsigned long long)a3 maxResults:(unsigned long long)a4 completion:(id /* block */)a5;
- (void)findNotes_listNotebooksWithContext:(id)a0;
- (void)findNotes_findInPersonalScopeWithContext:(id)a0;
- (void)findNotes_findInBusinessScopeWithContext:(id)a0;
- (void)findNotes_findInLinkedScopeWithContext:(id)a0;
- (void)findNotes_nextFindInLinkedScopeWithContext:(id)a0;
- (void)findNotes_processResultsWithContext:(id)a0;
- (void)findNotes_completeWithContext:(id)a0 error:(id)a1;
- (void)downloadNote:(id)a0 progress:(id /* block */)a1 completion:(id /* block */)a2;
- (void)downloadThumbnailForNote:(id)a0 maxDimension:(unsigned long long)a1 completion:(id /* block */)a2;
- (BOOL)isErrorDueToRestrictedAuth:(id)a0;
- (void)saveCredentialStore:(id)a0;
- (id)primaryCredentials;
- (id)validBusinessAuthenticationResult;
- (void)notifyAuthenticationChanged;
- (id)noteStoreForLinkedNotebook:(id)a0;
- (id)noteStoreForNoteRef:(id)a0;
- (id)noteStoreForNotebook:(id)a0;
- (id)shardIdForNoteRef:(id)a0;
- (id)authenticationTokenForNoteRef:(id)a0;
- (id)currentProfileName;
- (void)setCurrentProfileNameFromHost:(id)a0;
- (void)storeClientFailedAuthentication:(id)a0;

@end
