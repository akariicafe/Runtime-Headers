@class HDProfile, NSDate, NSObject, HDFitnessMachineDataProducer, NSMutableArray, HDFitnessMachineDataCollector, NSString, HDFitnessMachineAnalyticsCollector, HDFitnessMachinePairingManager, HKSynchronousObserverSet, HDHealthServiceManager, HDFitnessMachineStateTimers, HDFitnessMachineSession;
@protocol HDFitnessMachineConnectionInitiatorProtocol, OS_dispatch_queue, HDMetricsCollector;

@interface HDFitnessMachineManager : NSObject <HDFitnessMachinePairingManagerDelegate, HDFitnessMachineStateTimersDelegate> {
    HDProfile *_profile;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableArray *_connections;
    HDFitnessMachineDataCollector *_collector;
    HDFitnessMachinePairingManager *_pairingManager;
    HDFitnessMachineSession *_fitnessMachineSession;
    BOOL _shouldReconnect;
    BOOL _resetInProgress;
    NSMutableArray *_characteristicDataBuffer;
    HKSynchronousObserverSet *_fitnessMachineSessionObservers;
}

@property (weak, nonatomic) HDHealthServiceManager *serviceManager;
@property (retain, nonatomic) HDFitnessMachineStateTimers *fitnessMachineStateTimers;
@property (retain, nonatomic) HDFitnessMachineAnalyticsCollector *analyticsCollector;
@property (readonly, nonatomic) HDFitnessMachineDataProducer *fitnessMachineDataProducer;
@property (readonly, nonatomic) NSDate *machinePreferredUntilDate;
@property (readonly, nonatomic) id<HDFitnessMachineConnectionInitiatorProtocol> connectionInitiatorServer;
@property (readonly, nonatomic) id<HDMetricsCollector> metricsCollector;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)fitnessMachineServerId;

- (id)initWithProfile:(id)a0;
- (void)unitTest_receiveFakeCharacteristicUpdate:(id)a0;
- (void)_queue_setDeviceInformation:(id)a0;
- (void)endFitnessMachineSessionWithUUID:(id)a0;
- (void)pairingManagerUpdatedMachineInformation:(id)a0;
- (void)_queue_tearDownAfterStopEvent;
- (void)_queue_handleInitialStateIfNecessary;
- (void)_queue_deliverNFCDetected:(id)a0;
- (void)_queue_handleConnectionSuccessIfPossible;
- (id)currentSessionRecoveryConfiguration;
- (void).cxx_destruct;
- (unsigned long long)connectionOptionsForSession:(id)a0 isReconnect:(BOOL)a1;
- (void)_queue_performBlockOnConnections:(id /* block */)a0;
- (void)simulateDisconnect;
- (void)_queue_removeConnectionWithUUID:(id)a0;
- (void)unitTest_fakeSession:(id)a0;
- (void)_setQueue:(id)a0;
- (void)_queue_setConnectionState:(unsigned long long)a0 error:(id)a1;
- (void)dealloc;
- (void)_queue_resetConnectionForcing:(BOOL)a0;
- (void)stateTimersRetryConnectionTimeout:(id)a0;
- (void)_queue_handleConnectionStatus:(long long)a0 finished:(BOOL)a1 error:(id)a2;
- (id)unitTest_currentFitnessMachineSession;
- (void)pairingManager:(id)a0 updatedConnectionStateFromState:(unsigned long long)a1 toState:(unsigned long long)a2;
- (void)pairingManager:(id)a0 didChangeNFCEnabledState:(BOOL)a1;
- (void)stateTimersDisconnectTimeout:(id)a0;
- (void)clientInvalidatedWithConnectionUUID:(id)a0;
- (void)unitTest_fakeMachineDiscoveryForType:(unsigned long long)a0;
- (void)_queue_addConnection:(id)a0;
- (void)stateTimersWaitForMachineStartTimeout:(id)a0;
- (BOOL)_queue_connectionIsRegistered:(id)a0;
- (void)_queue_deliverErrorToAllClients:(id)a0;
- (void)_queue_handleReceivedMachineStatus:(id)a0;
- (void)_queue_handleDataTransferRequirementsUpdated;
- (void)markClientReadyWithConnectionUUID:(id)a0;
- (void)_queue_deliverConnectionStateChangedFromState:(unsigned long long)a0 toState:(unsigned long long)a1 error:(id)a2 notifyingPairingManager:(BOOL)a3;
- (void)_queue_simulateDisconnect;
- (void)endFitnessMachineConnectionForFitnessMachineSessionUUID:(id)a0 withConnectionUUID:(id)a1;
- (void)_queue_registerClient:(id)a0 withConnectionUUID:(id)a1;
- (void)_queue_handleReceivedEnhancedFTMSCharacteristic:(id)a0;
- (void)_queue_endFitnessMachineConnectionForFitnessMachineSessionUUID:(id)a0 withConnectionUUID:(id)a1 forcingReset:(BOOL)a2;
- (void)_queue_setMachinePreferredUntilDate:(id)a0;
- (void)pairingManagerReadyToConnect:(id)a0;
- (id)_queue_connectionWithUUID:(id)a0;
- (void)endFitnessMachineConnectionWithUUID:(id)a0;
- (void)_queue_handleReceivedCharacteristic:(id)a0 device:(id)a1 error:(id)a2;
- (void)pairingManager:(id)a0 discoveredHealthService:(id)a1 machineType:(unsigned long long)a2;
- (void)_queue_deliverFailedWithError:(id)a0 toConnectionUUID:(id)a1;
- (unsigned long long)fitnessMachineTypeForSessionUUID:(id)a0;
- (BOOL)_queue_handleInitialMachineDataIfNecessary:(id)a0;
- (void)_queue_handleOrBufferReceivedCharacteristic:(id)a0 sessionIdentifier:(unsigned long long)a1 device:(id)a2 error:(id)a3;
- (void)removeFitnessMachineSessionObserver:(id)a0;
- (void)_queue_recoverSessionWithConfiguration:(id)a0;
- (void)_queue_flushCharacteristicDataBuffer;
- (void)_queue_connectFitnessMachineIsReconnect:(BOOL)a0;
- (BOOL)_queue_handleInitialMachineStatusIfNecessary:(id)a0;
- (id)pairingManagerRequestsOOBData:(id)a0 error:(id *)a1;
- (void)_queue_setMachineState:(unsigned long long)a0 date:(id)a1;
- (void)finishSessionWithConfiguration:(id)a0;
- (void)_queue_reconnectFitnessMachineWithError:(id)a0;
- (void)addFitnessMachineSessionObserver:(id)a0;
- (void)recoverSessionWithConfiguration:(id)a0;
- (void)pairingManagerReceivedActivityTypeAndPermission:(id)a0;
- (void)_queue_handleReceivedDataCharacteristic:(id)a0;
- (BOOL)_queue_waitingOnInitialStatusAndData;
- (void)stateTimersMfaTimeout:(id)a0;
- (void)_queue_handleBluetoothStatusUpdate:(long long)a0 error:(id)a1;
- (void)_queue_disconnectFitnessMachineFromBluetooth;
- (void)pairingManagerDidBeginPairing:(id)a0;
- (void)_queue_deliverMachineInformationUpdatedNotifyingPairingManager:(BOOL)a0;
- (void)pairingManager:(id)a0 failedPairingWithError:(id)a1;
- (void)hktest_setMachinePreferredUntilDate:(id)a0;
- (void)_queue_handleBeginPairing:(id)a0;
- (void)_queue_deliverMachineStateChangedFromState:(unsigned long long)a0 date:(id)a1;
- (void)stateTimersPauseTimeout:(id)a0;
- (void)registerClient:(id)a0 withConnectionUUID:(id)a1;
- (void)pairingManagerWillBeginPairing:(id)a0 fitnessMachineToken:(id)a1;
- (void)_queue_handleMFASuccess;
- (void)_queue_handleBluetoothDisconnection;

@end
