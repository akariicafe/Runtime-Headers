@class HDBackgroundObservationServerExtensionManager, HDSourceOrderManager, NSDictionary, HDAssertionManager, HDSourceManager, HDDaemon, HDSharingEntryManager, HDDatabase, HDDataProvenanceManager, HDActivityCacheManager, HKProfileIdentifier, HDUnitPreferencesManager, HDAuthorizationManager, HDFitnessMachineManager, HDMedicalIDDataManager, HDCloudSyncManager, HDServiceConnectionManager, NSURL, HDTinkerPrivacyAlertCoordinator, HDDataManager, HDContributorManager, HDNanoSyncManager, HDDataCollectionManager, HDRestorableAlarmScheduler, HDMigrationManager, HDHealthServiceManager, HDCurrentActivitySummaryHelper, HDWorkoutManager, HDCloudSharingInviteRequestManager, HDOntologyLifecycleManager, HDWorkoutCondenser, HDNotificationManager, NSString, HDMetadataManager, HDAppSubscriptionManager, HDDeviceManager, HDDatabasePruningManager, HDUserCharacteristicsManager, HDAWDSubmissionManager, HDDaemonSyncEngine, HDOnboardingCompletionManager;
@protocol HDHealthDaemon, HDSyncEngine;

@interface HDProfile : NSObject <HDHealthDaemonReadyObserver> {
    HDDatabase *_database;
    HDAuthorizationManager *_authorizationManager;
    HDOntologyLifecycleManager *_ontologyLifecycleManager;
    HDBackgroundObservationServerExtensionManager *_extensionManager;
    NSString *_directoryPath;
    HDDaemonSyncEngine *_syncEngine;
    NSDictionary *_profileExtensionsByIdentifier;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _profileLock;
}

@property (readonly, nonatomic) BOOL hasHealthRecordsAccounts;
@property (nonatomic) BOOL testModeEnabled;
@property (readonly, nonatomic) HDRestorableAlarmScheduler *alarmScheduler;
@property (readonly, nonatomic) HDAppSubscriptionManager *appSubscriptionManager;
@property (readonly, nonatomic) HDAWDSubmissionManager *awdSubmissionManager;
@property (readonly, nonatomic) HDDatabasePruningManager *databasePruningManager;
@property (readonly, nonatomic) HDBackgroundObservationServerExtensionManager *extensionManager;
@property (readonly, nonatomic) HDMedicalIDDataManager *medicalIDDataManager;
@property (readonly, nonatomic) HDMigrationManager *migrationManager;
@property (readonly, nonatomic) HDServiceConnectionManager *serviceConnectionManager;
@property (readonly, weak, nonatomic) HDDaemon *daemon;
@property (readonly, weak, nonatomic) id<HDHealthDaemon> healthDaemon;
@property (readonly, nonatomic) HDActivityCacheManager *activityCacheManager;
@property (readonly, nonatomic) HDAuthorizationManager *authorizationManager;
@property (readonly, nonatomic) HDCloudSyncManager *cloudSyncManager;
@property (readonly, nonatomic) HDContributorManager *contributorManager;
@property (readonly, nonatomic) HDCurrentActivitySummaryHelper *currentActivitySummaryHelper;
@property (readonly, nonatomic) HDDataManager *dataManager;
@property (readonly, nonatomic) HDDataCollectionManager *dataCollectionManager;
@property (readonly, nonatomic) HDDataProvenanceManager *dataProvenanceManager;
@property (readonly, nonatomic) HDDeviceManager *deviceManager;
@property (readonly, nonatomic) HDFitnessMachineManager *fitnessMachineManager;
@property (readonly, nonatomic) HDMetadataManager *metadataManager;
@property (readonly, nonatomic) HDNanoSyncManager *nanoSyncManager;
@property (readonly, nonatomic) HDNotificationManager *notificationManager;
@property (readonly, nonatomic) HDOnboardingCompletionManager *onboardingCompletionManager;
@property (readonly, nonatomic) HDHealthServiceManager *serviceManager;
@property (readonly, nonatomic) HDAssertionManager *sessionAssertionManager;
@property (readonly, nonatomic) HDSharingEntryManager *sharingEntryManager;
@property (readonly, nonatomic) HDSourceManager *sourceManager;
@property (readonly, nonatomic) HDSourceOrderManager *sourceOrderManager;
@property (readonly, nonatomic) id<HDSyncEngine> syncEngine;
@property (readonly, nonatomic) HDUserCharacteristicsManager *userCharacteristicsManager;
@property (readonly, nonatomic) HDWorkoutCondenser *workoutCondenser;
@property (readonly, nonatomic) HDWorkoutManager *workoutManager;
@property (readonly, nonatomic) HDOntologyLifecycleManager *ontologyLifecycleManager;
@property (readonly, nonatomic) HDCloudSharingInviteRequestManager *cloudSharingInviteRequestManager;
@property (readonly, nonatomic) HDTinkerPrivacyAlertCoordinator *tinkerPrivacyAlertCoordinator;
@property (readonly, nonatomic) HDDatabase *database;
@property (readonly, nonatomic) long long profileType;
@property (readonly, copy, nonatomic) HKProfileIdentifier *profileIdentifier;
@property (readonly, copy, nonatomic) NSString *directoryPath;
@property (readonly, copy, nonatomic) NSURL *directoryURL;
@property (readonly, copy, nonatomic) NSString *medicalIDDirectoryPath;
@property (readonly, nonatomic) HDUnitPreferencesManager *unitPreferencesManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)invalidateAndWait;
- (id)_newAWDSubmissionManager;
- (void).cxx_destruct;
- (void)daemonReady:(id)a0;
- (void)obliterateAndTerminateWithOptions:(unsigned long long)a0 reason:(id)a1 completion:(id /* block */)a2;
- (void)obliterateWithOptions:(unsigned long long)a0 reason:(id)a1;
- (void)terminationCleanup;
- (id)profileExtensionWithIdentifier:(id)a0;
- (id)healthSourceManager;
- (id)healthDeviceManager;
- (id)initWithDirectoryPath:(id)a0 medicalIDDirectoryPath:(id)a1 daemon:(id)a2 profileIdentifier:(id)a3;
- (id)profileExtensionsConformingToProtocol:(id)a0;
- (void)awakeFromDisk;
- (BOOL)setDisplayFirstName:(id)a0 lastName:(id)a1 error:(id *)a2;
- (BOOL)setPairedGuardianUserInfo:(id)a0 error:(id *)a1;
- (BOOL)setPairedGuardianParticipant:(id)a0 error:(id *)a1;
- (id)pairedGuardianParticipantWithError:(id *)a0;
- (id)pairedGuardianUserInfoWithError:(id *)a0;
- (id)_newDatabase;
- (id)_newContributorManager;
- (id)_newUserCharacteristicsManager;
- (id)_newCloudSyncManager;
- (void)_createExtensionsIfNeeded;
- (id)_displayNameWithError:(id *)a0;
- (id)_lastNameWithError:(id *)a0;
- (id)allProfileExtensions;
- (id)_testModeIndicatorURL;
- (BOOL)fetchDisplayFirstName:(id *)a0 lastName:(id *)a1 error:(id *)a2;
- (id)fetchDisplayImageDataWithError:(id *)a0;
- (BOOL)setDisplayImageData:(id)a0 error:(id *)a1;

@end
