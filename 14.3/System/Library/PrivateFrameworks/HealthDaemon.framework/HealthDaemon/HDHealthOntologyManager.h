@class NSUUID, NSURL, HKObserverSet, NSDictionary, HDSimpleGraphDatabase, HDProfile, NSObject, NSCache;
@protocol OS_dispatch_queue;

@interface HDHealthOntologyManager : NSObject {
    NSDictionary *_codingSystemPriorityInfo;
    NSUUID *_assetAvailabilityRegistrationToken;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _ivarLock;
    _Atomic BOOL _invalidated;
    NSCache *_nebulousConceptCache;
    HKObserverSet *_observers;
    BOOL _useCache;
    NSCache *_conceptsByIdentifierCache;
    _Atomic BOOL _enabled;
}

@property (readonly, weak, nonatomic) HDProfile *profile;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) HDSimpleGraphDatabase *graphDatabase;
@property (readonly, copy, nonatomic) NSURL *ontologyURL;
@property (readonly, nonatomic) BOOL ignoresVersionCheckDuringReferenceOntologyImport;
@property (readonly, nonatomic) BOOL ignoresOntologyAssetAvailabilityChanges;
@property (readonly, nonatomic) BOOL unitTest_useEmbeddedOntology;
@property (readonly, nonatomic) BOOL unitTest_useEmbeddedOntologyAsset;
@property (nonatomic, getter=isEnabled) BOOL enabled;

+ (id)_ontologyURLForProfile:(id)a0;
+ (BOOL)graphDatabase:(id)a0 setVersion:(id)a1 error:(id *)a2;
+ (void)obliterateWithProfile:(id)a0 reason:(id)a1;

- (void)invalidateAndWait;
- (id)initWithProfile:(id)a0;
- (void)registerObserver:(id)a0;
- (id)init;
- (void).cxx_destruct;
- (void)obliterateWithReason:(id)a0;
- (void)unregisterObserver:(id)a0;
- (void)_queue_clearCache;
- (id)versionWithError:(id *)a0;
- (id)conceptForIdentifier:(id)a0 loadRelationships:(BOOL)a1 error:(id *)a2;
- (id)relationshipsForConceptWithIdentifier:(id)a0 error:(id *)a1;
- (BOOL)makeAssociationFromSampleUUID:(id)a0 toConcept:(id)a1 error:(id *)a2;
- (BOOL)breakAssociationFromSampleUUID:(id)a0 toConcept:(id)a1 error:(id *)a2;
- (long long)countOfConceptsAssociatedWithUserRecords:(id *)a0;
- (void)hd_unitTesting_closeDatabase;
- (void)importUsingAssetAtLocation:(id)a0 rememberLocation:(BOOL)a1 completion:(id /* block */)a2;
- (id)_ontologyAssetManager;
- (void)_queue_closeDatabase;
- (void)_queue_createAndInitializeIfNeeded;
- (long long)_graphDatabaseVersionImplementation:(id)a0 error:(id *)a1;
- (void)_notifyObserversReferenceOntologyCreated;
- (void)_notifyObserversReferenceOntologyWillUpdate;
- (BOOL)_queue_insertTwoItemRawOntologyValueIntoDatabase:(id)a0 table:(id)a1 valueString:(id)a2;
- (BOOL)_queue_insertRawAttributeIntoDatabase:(id)a0 valueString:(id)a1;
- (BOOL)_queue_insertRawRelationshipIntoDatabase:(id)a0 valueString:(id)a1;
- (void)_notifyObserversReferenceOntologyDidUpdateWithSuccess:(BOOL)a0 error:(id)a1;
- (id)_queue_graphDatabase;
- (long long)_queue_graphDatabaseVersionWithError:(id *)a0;
- (id)_graphDatabaseUserVersionImplementation:(id)a0 error:(id *)a1;
- (id)_queue_graphDatabaseUserVersionWithError:(id *)a0;
- (BOOL)useEmbeddedOntology;
- (void)_handleOntologyAssetAvailabilityUpdate:(long long)a0;
- (BOOL)_createOntologyDirectoryIfNecessaryWithError:(id *)a0;
- (BOOL)_queue_copyEmbeddedReferenceOntology;
- (id)_work_graphDatabase:(id)a0 findConceptsForCodings:(id)a1 error:(id *)a2;
- (id)_ontologyConfigurationForCountryCode:(id)a0;
- (id)_work_graphDatabase:(id)a0 resolveMercuryConceptForCodings:(id)a1 country:(id)a2 error:(id *)a3;
- (id)_work_graphDatabase:(id)a0 findConceptForCoding:(id)a1 error:(id *)a2;
- (id)_work_graphDatabase:(id)a0 newConceptIdentifierWithName:(id)a1 error:(id *)a2;
- (BOOL)_work_graphDatabase:(id)a0 insertConcept:(id)a1 error:(id *)a2;
- (id)_work_conceptFromGraphNode:(id)a0 preloadRelationships:(BOOL)a1 error:(id *)a2;
- (id)work_relationshipsForConceptWithIdentifier:(id)a0 error:(id *)a1;
- (BOOL)performGraphDatabaseWork:(id /* block */)a0 error:(id *)a1;
- (id)conceptsForIdentifiers:(id)a0 expectedOntologyVersion:(id)a1 loadRelationships:(BOOL)a2 error:(id *)a3;
- (id)_queue_conceptsWithGraphDatabaseCall:(id /* block */)a0 loadRelationships:(BOOL)a1 error:(id *)a2;
- (id)_conceptWithGraphDatabaseCall:(id /* block */)a0 error:(id *)a1;
- (id)_conceptsWithGraphDatabaseCall:(id /* block */)a0 loadRelationships:(BOOL)a1 error:(id *)a2;
- (id)_conceptsWithRelationship:(id)a0 toNodeWithID:(id)a1 reversed:(BOOL)a2 error:(id *)a3;
- (id)conceptsAssociatedWithSampleUUID:(id)a0 error:(id *)a1;
- (void)_queue_clearCachedConceptWithIdentifier:(id)a0;
- (id)conceptsWithRelationship:(id)a0 toNodeWithID:(id)a1 error:(id *)a2;
- (id)conceptsWithRelationship:(id)a0 fromNodeWithID:(id)a1 error:(id *)a2;
- (BOOL)_queue_importReferenceOntology;
- (void)importWithCompletion:(id /* block */)a0;
- (id)_referenceOntologyFileURL;
- (BOOL)useEmbeddedOntologyAsset;
- (BOOL)hd_unitTesting_setVersion:(id)a0 error:(id *)a1;
- (id)userVersionWithError:(id *)a0;
- (id)conceptForCodingCollection:(id)a0 country:(id)a1;
- (id)conceptForName:(id)a0 error:(id *)a1;
- (BOOL)insertAssociations:(id)a0 error:(id *)a1;
- (BOOL)makeAssociationFromSampleUUID:(id)a0 toConceptIdentifier:(id)a1 error:(id *)a2;
- (BOOL)removeAllAssociationsToSampleUUID:(id)a0 error:(id *)a1;
- (id)sampleUUIDsAssociatedWithConcept:(id)a0 error:(id *)a1;
- (id)conceptsAssociatedWithSample:(id)a0 error:(id *)a1;
- (id)allAssociatedConceptsWithError:(id *)a0;
- (void)hd_unitTesting_setupDatabase;
- (void)hd_unitTesting_disableCache;
- (void)hd_unitTesting_clearCache;

@end
