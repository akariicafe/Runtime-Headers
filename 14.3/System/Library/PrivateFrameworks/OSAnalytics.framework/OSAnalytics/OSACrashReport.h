@class NSString, NSArray, NSMutableDictionary, NSMutableString, NSMutableArray, NSDictionary;

@interface OSACrashReport : OSAReport <OSAConcreteReport> {
    unsigned int _task;
    struct timeval { long long tv_sec; int tv_usec; } _proc_starttime;
    NSString *_procPath;
    int _cpuType;
    BOOL _is64Bit;
    NSMutableArray *_taskImages;
    NSArray *_usedImages;
    NSMutableArray *_threadInfos;
    NSMutableArray *_applicationSpecificInfo;
    NSMutableArray *_dyldMessages;
    int _maxBinaryIdentifierLength;
    NSMutableDictionary *_extraInfo;
    unsigned int _cs_status;
    unsigned long long _uniqId;
    long long *_exceptionCode;
    unsigned int _exceptionCodeCount;
    int _signal;
    unsigned int _threadPort;
    unsigned int _threadState[1296];
    int _threadStateFlavor;
    unsigned int _threadStateCount;
    unsigned int _pageinState[1296];
    unsigned int _pageinStateCount;
    unsigned int _exceptionState[1296];
    unsigned int _exceptionStateCount;
    unsigned long long _threadId;
    int _crashedThreadNumber;
    NSString *_parentProcessName;
    int _ppid;
    unsigned int _uid;
    int _highlightedThreadNumber;
    NSString *_lastExceptionBacktrace;
    char _slice_uuid[37];
    BOOL _is_first_party;
    int _task_role;
    unsigned long long _coalition_id;
    NSString *_coalition_name;
    unsigned long long _workloop_id;
    unsigned long long _queue_serial_no;
    NSString *_memgraph_filename;
    NSMutableDictionary *_spewage_diag;
    unsigned long long _spewage_diag_total_length;
    unsigned long long _abort_cause;
    unsigned int _exit_snapshot_length;
    struct exit_reason_snapshot { unsigned int x0; unsigned long long x1; unsigned long long x2; } *_exit_snapshot;
    unsigned int _exit_payload_length;
    void *_exit_payload;
    NSString *_terminator_reason;
    NSString *_terminator_proc;
    int _terminator_pid;
    NSString *_caller_name;
    NSString *_vmregion_info;
    NSArray *_diagToolExtras;
    NSMutableString *_sig_frames;
    BOOL _is_corpse;
    unsigned long long _awakeSystemUptime;
    int _responsible_pid;
    NSDictionary *_workQueueLimits;
    NSDictionary *_bundle_info;
    NSDictionary *_build_info;
    NSDictionary *_store_info;
    NSString *_adam_id;
    NSString *_lsAppType;
    NSString *_lsDisplayName;
    NSString *_suspected3rdPartyPlugin;
    BOOL _bundleVisibility;
    BOOL _fatalDyldErrorOnLaunch;
    unsigned int _platform;
    NSString *_sandboxContainer;
    NSString *_sleepWakeUUID;
    NSArray *_usedImagesLegacyInfo;
    NSString *_mxTerminationReason;
    BOOL _fullIntegration;
}

@property (readonly, nonatomic) int proc_id;
@property (readonly, nonatomic) NSString *procName;
@property (readonly, nonatomic) NSString *bundle_id;
@property (readonly, nonatomic) NSString *short_vers;
@property (readonly, nonatomic) NSString *responsibleProc;
@property (readonly, nonatomic) BOOL is_beta;
@property (readonly, nonatomic) BOOL is_simulated;
@property (readonly, nonatomic) int exceptionType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)isMetricKitClient:(id)a0;
+ (id)loadBundInfoAtURL:(id)a0 withKeys:(id)a1;
+ (id)loadStoreInfo:(id)a0 atURL:(id)a1;
+ (id)loadBuildInfo:(id)a0;

- (id)slice_uuid;
- (void)generateLogAtLevel:(BOOL)a0 withBlock:(id /* block */)a1;
- (id)_readStringAtTaskAddress:(unsigned long long)a0 immutableOnly:(BOOL)a1 maxLength:(unsigned long long)a2;
- (id)problemType;
- (BOOL)isActionable;
- (void)finishExtractionUsingCorpse:(BOOL)a0;
- (void)noteCaller:(const char *)a0 onThreadID:(unsigned long long)a1;
- (BOOL)isExceptionNonFatal;
- (void)setApplicationSpecificInformation:(const char *)a0;
- (void).cxx_destruct;
- (id)_readDataFromMemory:(struct mapped_memory_t { } *)a0 atAddress:(unsigned long long)a1 size:(unsigned long long)a2;
- (void)dealloc;
- (void)captureDiagInfo:(id)a0;
- (void)_extractCrashReporterAnnotationsFromSymbolOwner:(struct _CSTypeRef { unsigned long long x0; unsigned long long x1; })a0 withMemory:(struct mapped_memory_t { } *)a1 internal:(BOOL)a2;
- (void)autopsyCorpse;
- (id)decode_esr;
- (id)terminationReasonExceptionCode;
- (void)unpackExceptionCodes;
- (id)appleCareDetails;
- (id)_descriptionForException:(id)a0;
- (id)additionalIPSMetadata;
- (void)inspectLivePid:(int)a0 exceptionCodes:(long long *)a1 count:(unsigned int)a2;
- (struct _VMURange { unsigned long long x0; unsigned long long x1; })_regionAtAddress:(unsigned long long)a0 immutableOnly:(BOOL)a1;
- (void)loadBundleInfo;
- (void)_extractLastExceptionBacktraceUsingSymbolicator:(struct _CSTypeRef { unsigned long long x0; unsigned long long x1; })a0;
- (id)initSimulated:(unsigned int)a0 withReason:(const char *)a1;
- (unsigned long long)_readAddressFromMemory:(struct mapped_memory_t { } *)a0 atSymbol:(struct _CSTypeRef { unsigned long long x0; unsigned long long x1; })a1;
- (void)stashStatus:(id)a0 note:(id)a1;
- (id)nameFromPid:(int)a0;
- (id)pathFromPid:(int)a0;
- (void)_extractWorkQueueLimitsFromData:(struct proc_workqueueinfo { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } *)a0;
- (struct _CSTypeRef { unsigned long long x0; unsigned long long x1; })_getSymbolicator:(BOOL)a0 forAutopsy:(BOOL)a1;
- (void)_extractBinaryImageInfoUsingSymbolicator:(struct _CSTypeRef { unsigned long long x0; unsigned long long x1; })a0 usingCatalog:(id)a1;
- (void)extractLiveThreadStateInfo;
- (void)_parseCorpse:(unsigned long long)a0 size:(unsigned long long)a1;
- (void)captureLSInfo;
- (void)_extractBacktraceInfoUsingSymbolicator:(struct _CSTypeRef { unsigned long long x0; unsigned long long x1; })a0 usingCorpse:(BOOL)a1 usingCatalog:(id)a2;
- (id)decode_exceptionCodes;
- (unsigned long long)_objcSelectorAddressForMessenger:(id)a0 memory:(struct mapped_memory_t { } *)a1;
- (id)_objcSelectorNameForMessenger:(id)a0;
- (id)decode_exceptionType;
- (id)decode_signal;
- (id)decode_reasonNamespace;
- (id)decode_reasonDyld;
- (id)decode_reasonTcc;
- (id)decode_reasonCoreAnimation;
- (id)decode_reasonLibSystem;
- (id)decode_reasonCarousel;
- (id)decode_reasonMetal;
- (id)decode_reasonWatchdog;
- (id)decode_cpuType;
- (id)reduceToTwoSigFigures:(unsigned long long)a0;
- (id)decode_reason;
- (id)decode_threadState;
- (void)sendToMetricKit;
- (id)reportNamePrefix;
- (BOOL)secondChanceToSylog;
- (void)enableSystemIntegration;
- (void)autopsyCorpse:(unsigned long long)a0 size:(unsigned long long)a1;
- (char *)_copyStringFromTask:(unsigned int)a0 atAddress:(unsigned long long)a1 immutableOnly:(BOOL)a2 maxLength:(unsigned long long)a3;
- (id)initWithTask:(unsigned int)a0 exceptionType:(int)a1 thread:(unsigned int)a2 threadStateFlavor:(int)a3 threadState:(unsigned int[1296])a4 threadStateCount:(unsigned int)a5;
- (unsigned long long)_readAddressFromMemory:(struct mapped_memory_t { } *)a0 atAddress:(unsigned long long)a1;
- (BOOL)saveWithOptions:(id)a0;

@end
