@interface ActivationMapTools : NSObject

+ (id)textFromActivationMap:(struct vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > > { struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *x0; struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *x1; struct __compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > > { struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *x0; } x2; } *)a0 codeMap:(const int *)a1 invert:(BOOL)a2;
+ (id)fitSpacingModel:(id)a0 toActivationMap:(const struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > { struct vector<float, std::__1::allocator<float> > *x0; struct vector<float, std::__1::allocator<float> > *x1; struct __compressed_pair<std::__1::vector<float, std::__1::allocator<float> > *, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > { struct vector<float, std::__1::allocator<float> > *x0; } x2; } *)a1 codeMap:(const int *)a2 minWordLengthFractionForCorrelationPeak:(float)a3 cost:(float *)a4;
+ (BOOL)matchLabel:(int)a0 toModelCharacter:(unsigned short)a1;
+ (id)characterCentroidsFromActivationMap:(struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > { struct vector<float, std::__1::allocator<float> > *x0; struct vector<float, std::__1::allocator<float> > *x1; struct __compressed_pair<std::__1::vector<float, std::__1::allocator<float> > *, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > { struct vector<float, std::__1::allocator<float> > *x0; } x2; } *)a0 codeMap:(const int *)a1 potentialPatterns:(id)a2 minWordLengthFractionForCorrelationPeak:(float)a3 bestModelIndex:(long long *)a4;
+ (id)decodeStringWithCentroids:(id)a0 activationMap:(const struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > { struct vector<float, std::__1::allocator<float> > *x0; struct vector<float, std::__1::allocator<float> > *x1; struct __compressed_pair<std::__1::vector<float, std::__1::allocator<float> > *, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > { struct vector<float, std::__1::allocator<float> > *x0; } x2; } *)a1 codeMap:(const int *)a2 model:(id)a3;
+ (id)characterCentroidsFromActivationMap:(const struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > { struct vector<float, std::__1::allocator<float> > *x0; struct vector<float, std::__1::allocator<float> > *x1; struct __compressed_pair<std::__1::vector<float, std::__1::allocator<float> > *, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > { struct vector<float, std::__1::allocator<float> > *x0; } x2; } *)a0 codeMap:(const int *)a1 decodedSymbolIndexes:(id *)a2;
+ (void)extractActivationSignals:(struct map<int, std::__1::vector<float, std::__1::allocator<float> >, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::vector<float, std::__1::allocator<float> > > > > { struct __tree<std::__1::__value_type<int, std::__1::vector<float, std::__1::allocator<float> > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::vector<float, std::__1::allocator<float> > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::vector<float, std::__1::allocator<float> > > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::vector<float, std::__1::allocator<float> > >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::vector<float, std::__1::allocator<float> > >, std::__1::less<int>, true> > { unsigned long long x0; } x2; } x0; } *)a0 fromActivationMap:(const struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > { struct vector<float, std::__1::allocator<float> > *x0; struct vector<float, std::__1::allocator<float> > *x1; struct __compressed_pair<std::__1::vector<float, std::__1::allocator<float> > *, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > { struct vector<float, std::__1::allocator<float> > *x0; } x2; } *)a1 forModel:(id)a2 codeMap:(const int *)a3;
+ (int)colInImage:(struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })a0 forPoint:(int)a1 inActivationMapWithSize:(int)a2;

@end
