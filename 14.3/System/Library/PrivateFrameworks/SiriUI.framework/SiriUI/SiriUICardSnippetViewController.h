@class _SiriUICardLoader, NSString, NSTimer, SiriUIModalContainerViewController, NSMutableDictionary, NSObject, SiriUICardSnippetView, UIViewController, CRKCardPresentation, SACardSnippet;
@protocol CRKCardViewControllerDelegate, OS_dispatch_group, CRKCardViewControlling;

@interface SiriUICardSnippetViewController : SiriUISnippetViewController <_SiriUICardLoaderDelegate, SiriUICardLoadingObserver, SiriUIModalContainerViewControllerDelegate, CRKCardPresentationDelegate, SiriUICardSnippetViewDataSource, SiriUICardSnippetViewDelegate, CRKCardViewControllerDelegate, SiriUISizeClassConfiguring> {
    SACardSnippet *_snippet;
    struct CGSize { double width; double height; } _contentSize;
    NSMutableDictionary *_referenceableCommandsByIdentifierMap;
    NSMutableDictionary *_referenceableSnippetsByIdentifierMap;
    NSObject<OS_dispatch_group> *_cardLoadingGroup;
    SACardSnippet *_newlyLoadedCardSnippet;
    _SiriUICardLoader *_cardLoader;
    id /* block */ _cardLoadingCompletionhandler;
    NSTimer *_cardLoadingTimer;
    BOOL _isCardLoading;
    long long _sizeClass;
    NSString *_feedbackEngagementInstrumentationIdentifier;
    SiriUIModalContainerViewController *_presentedModalContainerViewController;
}

@property (retain, nonatomic, getter=_cardViewController, setter=_setCardViewController:) UIViewController<CRKCardViewControlling> *cardViewController;
@property (retain, nonatomic, getter=_cardPresentation, setter=_setCardPresentation:) CRKCardPresentation *cardPresentation;
@property (retain, nonatomic) SiriUICardSnippetView *view;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) id<CRKCardViewControllerDelegate> cardViewControllerDelegate;

+ (void)initialize;

- (id)requestContext;
- (void).cxx_destruct;
- (id)snippet;
- (void)loadView;
- (double)desiredHeight;
- (void)setSnippet:(id)a0;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (void)viewDidAppear:(BOOL)a0;
- (id)initWithNibName:(id)a0 bundle:(id)a1;
- (BOOL)isNavigating;
- (void)viewDidLoad;
- (void)setNavigating:(BOOL)a0;
- (void)cardLoadingMonitor:(id)a0 didReceiveCardSnippet:(id)a1;
- (BOOL)usePlatterStyle;
- (void)siriDidDeactivate;
- (void)wasAddedToTranscript;
- (void)siriWillBeginScrolling;
- (void)siriDidScrollVisible:(BOOL)a0;
- (void)siriDidStartSpeakingWithIdentifier:(id)a0;
- (void)siriDidStopSpeakingWithIdentifier:(id)a0 speechQueueIsEmpty:(BOOL)a1;
- (void)siriDidReceiveViewsWithDialogPhase:(id)a0;
- (void)_addCardViewControllerAsChildViewController:(id)a0;
- (void)_navigationButtonTapped:(id)a0;
- (void)_updateContentSizeAndNotifyDelegateIfNecessary:(BOOL)a0;
- (void)_logCardRelationshipIdentifiedForCompactCard:(id)a0 fullCard:(id)a1 snippet:(id)a2;
- (BOOL)logContentsIfApplicable;
- (id)_instrumentationManager;
- (void)_addNextCardTo:(id)a0 fullCard:(id)a1;
- (void)_removeBottomKeylineFromCard:(id)a0;
- (void)_forwardProgressEvent:(unsigned long long)a0 toCardViewController:(id)a1 animated:(BOOL)a2;
- (void)willCancel;
- (void)_forwardProgressEventToCardViewController:(unsigned long long)a0;
- (void)_removeCardViewControllerFromParentViewController:(id)a0;
- (void)willConfirm;
- (void)_insertCardViewController:(id)a0;
- (void)_populateCommand:(id)a0 withInstrumentationTurn:(id)a1;
- (void)_instrumentCardSectionInteractionForCardSection:(id)a0 previousTurn:(id)a1;
- (void)_validateCardSectionForParsecFeedbackDelivery:(id)a0 validHandler:(id /* block */)a1;
- (id)_analytics;
- (id)_metricsContextOfEventsForCardSection:(id)a0 inCard:(id)a1;
- (id)_metricsContextOfEventsForCard:(id)a0;
- (void)_validateCardForParsecFeedbackDelivery:(id)a0 validHandler:(id /* block */)a1;
- (void)_beginMonitoringForNextCardWithBlock:(id /* block */)a0;
- (Class)transparentHeaderViewClass;
- (BOOL)cardLoader:(id)a0 shouldLoadCard:(id)a1;
- (BOOL)cardLoader:(id)a0 loadCard:(id)a1 withCompletionHandler:(id /* block */)a2;
- (void)modalContainerViewControllerViewWillDisappear:(id)a0;
- (void)modalContainerViewControllerViewDidDisappear:(id)a0;
- (double)boundingWidthForPresentation:(id)a0;
- (id)sashItemForCardSnippetView:(id)a0;
- (id)localeForCardSnippetView:(id)a0;
- (double)preferredContentHeight;
- (void)cardSnippetViewSashWasTapped:(id)a0;
- (void)cardSectionView:(id)a0 willProcessEngagementFeedback:(id)a1;
- (void)userDidEngageCardSection:(id)a0 withEngagementFeedback:(id)a1;
- (void)userDidReportFeedback:(id)a0 fromCardSection:(id)a1;
- (void)cardViewWillAppearForCard:(id)a0 withAppearanceFeedback:(id)a1;
- (void)cardViewDidAppearForCard:(id)a0 withAppearanceFeedback:(id)a1;
- (void)cardViewDidDisappearForCard:(id)a0 withDisappearanceFeedback:(id)a1;
- (void)cardSectionViewWillAppearForCardSection:(id)a0 withAppearanceFeedback:(id)a1;
- (void)cardSectionViewDidAppearForCardSection:(id)a0 withAppearanceFeedback:(id)a1;
- (void)cardSectionViewDidDisappearForCardSection:(id)a0 withDisappearanceFeedback:(id)a1;
- (void)controllerForCard:(id)a0 didRequestAsyncCard:(id)a1 withAsyncCardRequestFeedback:(id)a2;
- (void)controllerForCard:(id)a0 didReceiveAsyncCard:(id)a1 withAsyncCardReceiptFeedback:(id)a2;
- (void)cardViewControllerDidLoad:(id)a0;
- (void)cardViewControllerBoundsDidChange:(id)a0;
- (void)cardViewController:(id)a0 requestsHandlingOfIntent:(id)a1;
- (struct CGSize { double x0; double x1; })cardViewController:(id)a0 boundingSizeForCardSectionViewController:(id)a1;
- (unsigned long long)navigationIndexOfCardViewController:(id)a0;
- (void)presentViewController:(id)a0 forCardViewController:(id)a1;
- (void)cardViewController:(id)a0 willDismissViewController:(id)a1;
- (BOOL)performReferentialCommand:(id)a0 forCardViewController:(id)a1;
- (BOOL)performNextCardCommand:(id)a0 forCardViewController:(id)a1;
- (BOOL)performPunchoutCommand:(id)a0 forCardViewController:(id)a1;
- (BOOL)performInvocationPayloadCommand:(id)a0 forCardViewController:(id)a1;
- (BOOL)performBeganEditingCommand:(id)a0 forCardViewController:(id)a1;
- (BOOL)performFinishedEditingCommand:(id)a0 forCardViewController:(id)a1;
- (void)configureContentWithSizeClass:(long long)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })defaultViewInsets;
- (BOOL)isIndicatingActivity;
- (void)configureReusableTransparentHeaderView:(id)a0;
- (double)desiredHeightForTransparentHeaderView;

@end
