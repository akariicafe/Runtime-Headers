@class NSHashTable, NSString, NSArray, SBFolderIcon, NSCountedSet, NSMutableSet, SBIconListModel, SBIconIndexMutableList;
@protocol SBTreeNode;

@interface SBFolder : NSObject <SBFolderObserver, SBTreeNode, SBIconIndexNode, SBIconIndexMutableListObserver, SBIconListModelObserver, SBIconListModelIconValidator, BSDescriptionProviding> {
    NSHashTable *_nodeObservers;
    NSHashTable *_folderObservers;
    SBIconIndexMutableList *_lists;
    BOOL _iconStateDirty;
    NSMutableSet *_addedIcons;
    NSMutableSet *_removedIcons;
    NSCountedSet *_coalesceChangesRequests;
    NSString *_nodeIdentifier;
    unsigned long long _visibleListCount;
}

@property (copy, nonatomic) NSString *badge;
@property (readonly, copy, nonatomic) NSString *uniqueIdentifier;
@property (copy, nonatomic) NSString *displayName;
@property (copy, nonatomic) NSString *defaultDisplayName;
@property (nonatomic, getter=isOpen) BOOL open;
@property (weak, nonatomic) SBFolderIcon *icon;
@property (nonatomic, getter=isCancelable) BOOL cancelable;
@property (readonly, nonatomic) SBFolder *parentFolder;
@property (readonly, weak, nonatomic) SBFolder *rootFolder;
@property (readonly, nonatomic) Class listModelClass;
@property (readonly, copy, nonatomic) NSArray *lists;
@property (readonly, nonatomic) unsigned long long listCount;
@property (readonly, copy, nonatomic) NSArray *visibleLists;
@property (readonly, nonatomic) unsigned long long visibleListCount;
@property (readonly, nonatomic) unsigned long long hiddenListCount;
@property (readonly, nonatomic) BOOL hasMultipleVisibleLists;
@property (readonly, nonatomic) BOOL hasMultipleVisibleNonTrailingEmptyLists;
@property (readonly, nonatomic) unsigned long long maxListCount;
@property (readonly, nonatomic) struct SBHIconGridSize { unsigned short columns; unsigned short rows; } listGridSize;
@property (readonly, nonatomic) struct SBHIconGridSizeClassSizes { struct SBHIconGridSize { unsigned short columns; unsigned short rows; } small; struct SBHIconGridSize { unsigned short columns; unsigned short rows; } medium; struct SBHIconGridSize { unsigned short columns; unsigned short rows; } large; struct SBHIconGridSize { unsigned short columns; unsigned short rows; } extraLarge; } iconGridSizeClassSizes;
@property (readonly, nonatomic) unsigned long long iconCount;
@property (readonly, nonatomic) unsigned long long visibleIconCount;
@property (readonly, nonatomic) unsigned long long visibleWidgetIconCount;
@property (readonly, nonatomic, getter=isEmpty) BOOL empty;
@property (readonly, nonatomic, getter=isFull) BOOL full;
@property (readonly, nonatomic) BOOL shouldRemoveWhenEmpty;
@property (readonly, nonatomic) BOOL canRemoveIcons;
@property (readonly, nonatomic) BOOL canEditDisplayName;
@property (readonly, nonatomic) BOOL hasHiddenLists;
@property (readonly, nonatomic) BOOL hasVisibleLists;
@property (readonly, nonatomic) unsigned long long firstVisibleListIndex;
@property (readonly, nonatomic) unsigned long long lastVisibleListIndex;
@property (readonly, nonatomic) SBIconListModel *firstList;
@property (readonly, nonatomic) SBIconListModel *lastList;
@property (readonly, nonatomic) SBIconListModel *mostRecentlyHiddenList;
@property (readonly, nonatomic) SBIconListModel *leastRecentlyHiddenList;
@property (nonatomic) unsigned long long requiredTrailingEmptyListCount;
@property (readonly, nonatomic) unsigned long long trailingEmptyListCount;
@property (readonly, copy, nonatomic) NSArray *trailingEmptyLists;
@property (readonly, copy, nonatomic) NSArray *icons;
@property (readonly, copy, nonatomic) NSArray *iconsInLists;
@property (readonly, copy, nonatomic) NSString *recursiveDescription;
@property (readonly, nonatomic) BOOL containsWidgetIcon;
@property (readonly, nonatomic) BOOL containsVisibleWidgetIcon;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSArray *children;
@property (weak, nonatomic) id<SBTreeNode> parent;

+ (BOOL)isFolderNodeIdentifier:(id)a0;
+ (BOOL)isRootFolderClass;

- (void)enumerateAllIconsWithBaseIndexPath:(id)a0 options:(unsigned long long)a1 usingBlock:(id /* block */)a2;
- (BOOL)isIconStateDirty;
- (id)folderIcons;
- (id)_handleBumpedIcons:(id)a0 afterInsertingIconIntoListAtIndex:(unsigned long long)a1 options:(unsigned long long)a2 didBump:(BOOL *)a3;
- (BOOL)canBounceIcon:(id)a0;
- (BOOL)isTrailingEmptyListIndex:(unsigned long long)a0;
- (BOOL)isAllowedToContainIcons:(id)a0;
- (id)iconAtIndexPath:(id)a0;
- (id)firstFolderWithUniqueIdentifier:(id)a0;
- (void)addNodeObserver:(id)a0;
- (void)stopCoalescingContentChangesForRequestID:(id)a0 forceReload:(BOOL)a1;
- (void)_didAddList:(id)a0 informObservers:(BOOL)a1;
- (id)indexPathForFolder:(id)a0;
- (void)folder:(id)a0 didAddIcons:(id)a1 removedIcons:(id)a2;
- (void)folder:(id)a0 willAddIcon:(id)a1;
- (id)_createNewListWithIcon:(id)a0;
- (void)iconList:(id)a0 didAddIcon:(id)a1;
- (void)removeNodeObserver:(id)a0;
- (id)init;
- (id)insertEmptyListAtIndex:(unsigned long long)a0;
- (id)insertEmptyListRemovingLeastRecentlyHiddenListIfNecessaryAtIndex:(unsigned long long)a0;
- (id)_createNewListWithIcons:(id)a0;
- (id)nodeDescriptionWithPrefix:(id)a0;
- (void)_removeLists:(id)a0;
- (void)removeListsAtIndexes:(id)a0;
- (void).cxx_destruct;
- (id)nextVisibleListAfterIndex:(unsigned long long)a0;
- (id)indexPathForLastFreeSlotStartingAtList:(id)a0 avoidingFirstList:(BOOL)a1;
- (id)resolvedComponentsForIndexPath:(id)a0;
- (id)indexPathForNodeIdentifier:(id)a0;
- (void)_compactContiguousOverflowListsStartingAtListIndex:(unsigned long long)a0 withoutMovingIconsPassingTest:(id /* block */)a1 removeEmptyLists:(BOOL)a2;
- (id)addIcons:(id)a0;
- (void)addIconsPassingTest:(id /* block */)a0 toSet:(id)a1;
- (id)listWithGreatestHiddenDateMatchingOrdering:(long long)a0;
- (BOOL)canAddIcon;
- (id)objectWithUniqueIdentifier:(id)a0;
- (id)descriptionBuilderWithMultilinePrefix:(id)a0;
- (id)initWithDisplayName:(id)a0 maxListCount:(unsigned long long)a1 maxIconCountInLists:(unsigned long long)a2;
- (BOOL)compactLists;
- (BOOL)isVisibleListIndex:(unsigned long long)a0;
- (void)didAddFolder:(id)a0;
- (BOOL)_compactLists;
- (id)indexPathForFirstFreeSlotAvoidingFirstList:(BOOL)a0;
- (id)nodesAlongIndexPath:(id)a0 consumedIndexes:(unsigned long long)a1;
- (id)listAtIndex:(unsigned long long)a0;
- (void)_informObserversOfMovedIcon:(id)a0;
- (void)_insertList:(id)a0 atIndex:(unsigned long long)a1;
- (void)removeFolderObserver:(id)a0;
- (id)listsContainingIcon:(id)a0;
- (id)firstFolderWithUniqueIdentifier:(id)a0 displayName:(id)a1 defaultDisplayName:(id)a2;
- (id)iconWithIdentifier:(id)a0;
- (unsigned long long)hiddenIndexOfList:(id)a0;
- (void)enumerateAllIconsUsingBlock:(id /* block */)a0;
- (id)leafIcons;
- (id)iconsOfClass:(Class)a0;
- (id)allIcons;
- (unsigned long long)trailingVisibleEmptyListCount;
- (void)list:(id)a0 didAddContainedNodeIdentifiers:(id)a1;
- (void)didRemoveFolder:(id)a0;
- (BOOL)isLibraryCategoryFolder;
- (BOOL)canAddIconCount:(unsigned long long)a0 startingAtList:(id)a1;
- (void)removeAllLists;
- (id)folderContainingIndexPath:(id)a0 relativeIndexPath:(id *)a1;
- (id)succinctDescription;
- (id)firstFolderWithDefaultDisplayName:(id)a0;
- (id)listContainingIndexPath:(id)a0 relativeIndex:(unsigned long long *)a1;
- (id)indexPathForIconPassingTest:(id /* block */)a0;
- (void)removeListAtIndex:(unsigned long long)a0;
- (void)compactOverflowListsWithoutMovingIconsPassingTest:(id /* block */)a0;
- (id)indexPathsForIcon:(id)a0;
- (id)descriptionWithMultilinePrefix:(id)a0;
- (id)uniqueIdentifiersForIndexPath:(id)a0;
- (BOOL)canAddIcon:(id)a0;
- (id)iconsPassingTest:(id /* block */)a0;
- (void)addIconsOfClass:(Class)a0 toSet:(id)a1;
- (id)indexPathForFirstFreeSlotStartingAtList:(id)a0 avoidingFirstList:(BOOL)a1 searchForwards:(BOOL)a2;
- (void)iconListIconStateDidDirty:(id)a0;
- (void)listDidMoveNodes:(id)a0;
- (void)markIconStateDirty;
- (void)_informObserversOfToBeAddedIcon:(id)a0;
- (void)pruneEmptyFolders;
- (unsigned long long)nextVisibleListIndexAfterIndex:(unsigned long long)a0;
- (id)layoutDescription;
- (id)firstFolderWithDisplayName:(id)a0;
- (void)_setLists:(id)a0;
- (id)resolvedComponentsForUniqueIdentifierPath:(id)a0;
- (void)folder:(id)a0 didReplaceIcon:(id)a1 withIcon:(id)a2;
- (void)iconListHiddenDidChange:(id)a0;
- (void)iconList:(id)a0 didReplaceIcon:(id)a1 withIcon:(id)a2;
- (void)iconList:(id)a0 didRemoveIcon:(id)a1;
- (void)removeHiddenLists;
- (id)indexPathForIcon:(id)a0 includingPlaceholders:(BOOL)a1;
- (unsigned long long)precedingVisibleListIndexBeforeIndex:(unsigned long long)a0;
- (void)markIconStateClean;
- (void)_addList:(id)a0;
- (void)enumerateListsUsingBlock:(id /* block */)a0;
- (id)succinctDescriptionBuilder;
- (BOOL)_isCoalescingContentChanges;
- (unsigned long long)visibleIndexForIndex:(unsigned long long)a0;
- (void)ancestryDidChange;
- (id)indexPathsForContainedNodeIdentifier:(id)a0 prefixPath:(id)a1;
- (BOOL)canAddIcons:(id)a0 startingAtList:(id)a1;
- (void)appendRecursiveDescriptionToString:(id)a0 prefixPath:(id)a1;
- (id)placeIcon:(id)a0 atIndexPath:(id)a1 options:(unsigned long long)a2;
- (id)indexPathForIconWithIdentifier:(id)a0 includingPlaceholders:(BOOL)a1;
- (void)list:(id)a0 didRemoveContainedNodeIdentifiers:(id)a1;
- (void)compactOverflowLists;
- (id)indexesOfListsPassingTest:(id /* block */)a0;
- (id)initWithDisplayName:(id)a0 maxListCount:(unsigned long long)a1 listGridSize:(struct SBHIconGridSize { unsigned short x0; unsigned short x1; })a2 iconGridSizeClassSizes:(struct SBHIconGridSizeClassSizes { struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x0; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x1; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x2; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x3; })a3;
- (id)validatedIndexPathForInsertionIndexPath:(id)a0 avoidingFirstList:(BOOL)a1;
- (void)startCoalescingContentChangesWithRequestID:(id)a0;
- (BOOL)containsNodeIdentifier:(id)a0;
- (id)addListWithIcons:(id)a0 removingHiddenListsIfNecessary:(BOOL)a1;
- (void)_didExplicitlyRemoveHiddenLists:(id)a0;
- (BOOL)extraListContainsNodeIdentifier:(id)a0;
- (void)_didRemoveList:(id)a0 atIndex:(unsigned long long)a1 informObservers:(BOOL)a2;
- (id)indexPathForList:(id)a0;
- (void)removeIcon:(id)a0 options:(unsigned long long)a1;
- (unsigned long long)visibleIndexOfList:(id)a0;
- (BOOL)isAllowedToContainIcon:(id)a0;
- (BOOL)isValidListIndex:(unsigned long long)a0;
- (id)listAtVisibleIndex:(unsigned long long)a0;
- (id)insertIcon:(id)a0 atIndexPath:(id *)a1 options:(unsigned long long)a2;
- (unsigned long long)indexOfList:(id)a0;
- (unsigned long long)lastVisibleNonEmptyListIndex;
- (id)addEmptyListRemovingLeastRecentlyHiddenListIfNecessary;
- (void)removeLeastRecentlyHiddenList;
- (unsigned long long)iconCountWithOptions:(unsigned long long)a0;
- (id)addEmptyList;
- (void)sort;
- (id)addListWithIcon:(id)a0;
- (void)enumerateAllIconsWithOptions:(unsigned long long)a0 usingBlock:(id /* block */)a1;
- (id)visibleListIndexes;
- (void)stopCoalescingContentChangesForRequestID:(id)a0;
- (id)containedNodeIdentifiers;
- (void)removeList:(id)a0;
- (void)ensureTrailingEmptyLists;
- (BOOL)canAddIconCount:(unsigned long long)a0;
- (id)indexPathsForIconsPassingTest:(id /* block */)a0;
- (void)folderIconStateDidDirty:(id)a0;
- (void)moveListAtIndex:(unsigned long long)a0 toIndex:(unsigned long long)a1;
- (unsigned long long)indexForVisibleIndex:(unsigned long long)a0;
- (BOOL)isRootFolder;
- (id)initWithDisplayName:(id)a0 maxListCount:(unsigned long long)a1 listGridSize:(struct SBHIconGridSize { unsigned short x0; unsigned short x1; })a2;
- (void)removeIconAtIndexPath:(id)a0 options:(unsigned long long)a1;
- (id)indexPathForFirstFreeSlotStartingAtList:(id)a0 avoidingFirstList:(BOOL)a1;
- (void)enumerateExtraListsUsingBlock:(id /* block */)a0;
- (id)addIcon:(id)a0;
- (BOOL)iconListModel:(id)a0 isAllowedToContainIcon:(id)a1;
- (void)enumerateListsWithOptions:(unsigned long long)a0 usingBlock:(id /* block */)a1;
- (id)initWithUniqueIdentifier:(id)a0 displayName:(id)a1 maxListCount:(unsigned long long)a2 listGridSize:(struct SBHIconGridSize { unsigned short x0; unsigned short x1; })a3 iconGridSizeClassSizes:(struct SBHIconGridSizeClassSizes { struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x0; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x1; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x2; struct SBHIconGridSize { unsigned short x0; unsigned short x1; } x3; })a4;
- (BOOL)containsIcon:(id)a0;
- (id)placeIcon:(id)a0 atIndexPath:(id)a1;
- (id)listWithIdentifier:(id)a0;
- (BOOL)canAddIcons:(id)a0;
- (void)_informObserversOfAddedIcons:(id)a0 removedIcons:(id)a1;
- (id)indexPathForLastFreeSlotAvoidingFirstList:(BOOL)a0;
- (id)indexPathForIcon:(id)a0;
- (void)replaceIcon:(id)a0 withIcon:(id)a1;
- (id)_createNewList;
- (void)iconList:(id)a0 didMoveIcon:(id)a1;
- (id)listsContainingLeafIconWithIdentifier:(id)a0;
- (id)changeGridSizeClassOfIconAtIndexPath:(id)a0 toGridSizeClass:(unsigned long long)a1 options:(unsigned long long)a2 listGridCellInfo:(id)a3;
- (id)changeGridSizeClassOfIconAtIndexPath:(id)a0 toGridSizeClass:(unsigned long long)a1 options:(unsigned long long)a2 listGridCellInfoOptions:(unsigned long long)a3;
- (void)addFolderObserver:(id)a0;
- (BOOL)_compactsFirstList;
- (id)addListWithIcons:(id)a0;
- (void)iconList:(id)a0 willAddIcon:(id)a1;
- (id)_indexPathToRevealForJiggleMode;
- (id)indexPathForIconWithOptions:(unsigned long long)a0 passingTest:(id /* block */)a1;
- (BOOL)isTrailingEmptyList:(id)a0;
- (BOOL)isExtraList:(id)a0;
- (id)nodeIdentifier;
- (id)indexPathForIconWithIdentifier:(id)a0;

@end
