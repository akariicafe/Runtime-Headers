@interface VKPolygonGroup : VKPolygonalItemGroup {
    struct optional<md::MeshSet<ggl::PolygonCommonStroke::MeshMesh, ggl::PolygonCommonStroke::DefaultVbo> > { BOOL _hasValue; union ValueUnion { unsigned char data[152]; struct MeshSet<ggl::PolygonCommonStroke::MeshMesh, ggl::PolygonCommonStroke::DefaultVbo> { struct vector<std::__1::pair<unsigned short, unsigned int>, std::__1::allocator<std::__1::pair<unsigned short, unsigned int> > > { struct pair<unsigned short, unsigned int> *__begin_; struct pair<unsigned short, unsigned int> *__end_; struct __compressed_pair<std::__1::pair<unsigned short, unsigned int> *, std::__1::allocator<std::__1::pair<unsigned short, unsigned int> > > { struct pair<unsigned short, unsigned int> *__value_; } __end_cap_; } _vertexAndIndexCounts; struct vector<std::__1::shared_ptr<ggl::PolygonCommonStroke::MeshMesh>, std::__1::allocator<std::__1::shared_ptr<ggl::PolygonCommonStroke::MeshMesh> > > { struct shared_ptr<ggl::PolygonCommonStroke::MeshMesh> *__begin_; struct shared_ptr<ggl::PolygonCommonStroke::MeshMesh> *__end_; struct __compressed_pair<std::__1::shared_ptr<ggl::PolygonCommonStroke::MeshMesh> *, std::__1::allocator<std::__1::shared_ptr<ggl::PolygonCommonStroke::MeshMesh> > > { struct shared_ptr<ggl::PolygonCommonStroke::MeshMesh> *__value_; } __end_cap_; } _meshes; struct DataWrite<ggl::PolygonCommonStroke::DefaultVbo> { struct BufferMemory { struct ResourceAccessor *_accessor; struct BufferData *_user; struct Range<unsigned long> { unsigned long long _min; unsigned long long _max; } _range; int _access; int _sync; char *_data; } _memory; } _vertexDataWrite; struct DataWrite<unsigned short> { struct BufferMemory { struct ResourceAccessor *_accessor; struct BufferData *_user; struct Range<unsigned long> { unsigned long long _min; unsigned long long _max; } _range; int _access; int _sync; char *_data; } _memory; } _indexDataWrite; unsigned char _meshIndex; unsigned short _meshVertexOffset; unsigned int _meshIndexOffset; } type; } _value; } _strokeMeshInfo;
    struct vector<std::__1::shared_ptr<ggl::PolygonCommonStroke::MeshMesh>, std::__1::allocator<std::__1::shared_ptr<ggl::PolygonCommonStroke::MeshMesh> > > { struct shared_ptr<ggl::PolygonCommonStroke::MeshMesh> *__begin_; struct shared_ptr<ggl::PolygonCommonStroke::MeshMesh> *__end_; struct __compressed_pair<std::__1::shared_ptr<ggl::PolygonCommonStroke::MeshMesh> *, std::__1::allocator<std::__1::shared_ptr<ggl::PolygonCommonStroke::MeshMesh> > > { struct shared_ptr<ggl::PolygonCommonStroke::MeshMesh> *__value_; } __end_cap_; } _strokeMeshes;
    struct shared_ptr<ggl::Texture2D> { struct Texture2D *__ptr_; struct __shared_weak_count *__cntrl_; } _sourceTexture;
    struct shared_ptr<ggl::Texture2D> { struct Texture2D *__ptr_; struct __shared_weak_count *__cntrl_; } _targetTexture;
    struct shared_ptr<ggl::Texture2D> { struct Texture2D *__ptr_; struct __shared_weak_count *__cntrl_; } _sourceRoofTexture;
    struct shared_ptr<ggl::Texture2D> { struct Texture2D *__ptr_; struct __shared_weak_count *__cntrl_; } _targetRoofTexture;
    unsigned char _lastResolvedZoom;
}

@property (readonly, nonatomic) struct FeatureAttributeSet { struct vector<gss::FeatureAttributePair, geo::StdAllocator<gss::FeatureAttributePair, gss::Allocator> > { struct FeatureAttributePair *x0; struct FeatureAttributePair *x1; struct __compressed_pair<gss::FeatureAttributePair *, geo::StdAllocator<gss::FeatureAttributePair, gss::Allocator> > { struct FeatureAttributePair *x0; struct StdAllocator<gss::FeatureAttributePair, gss::Allocator> { struct Allocator *x0; } x1; } x2; } x0; } styleAttributes;
@property (readonly, nonatomic) struct vector<std::__1::shared_ptr<ggl::PolygonCommonStroke::MeshMesh>, std::__1::allocator<std::__1::shared_ptr<ggl::PolygonCommonStroke::MeshMesh> > > { struct shared_ptr<ggl::PolygonCommonStroke::MeshMesh> *x0; struct shared_ptr<ggl::PolygonCommonStroke::MeshMesh> *x1; struct __compressed_pair<std::__1::shared_ptr<ggl::PolygonCommonStroke::MeshMesh> *, std::__1::allocator<std::__1::shared_ptr<ggl::PolygonCommonStroke::MeshMesh> > > { struct shared_ptr<ggl::PolygonCommonStroke::MeshMesh> *x0; } x2; } *strokeMeshes;
@property (readonly, nonatomic) struct Texture2D { void /* function */ **x0; struct ResourceManager *x1; struct RenderResource *x2; void /* function */ **x3; char *x4; int x5; int x6; int x7; int x8; unsigned int x9; int x10; unsigned int x11; unsigned int x12; struct shared_ptr<const ggl::Texture2DAbstract> { struct Texture2DAbstract *x0; struct __shared_weak_count *x1; } x13; unsigned int x14; struct shared_ptr<const ggl::TextureDataAbstract> { struct TextureDataAbstract *x0; struct __shared_weak_count *x1; } x15; BOOL x16; BOOL x17; BOOL x18; struct shared_ptr<ggl::SamplerState> { struct SamplerState *x0; struct __shared_weak_count *x1; } x19; } *sourceTexture;
@property (readonly, nonatomic) struct Texture2D { void /* function */ **x0; struct ResourceManager *x1; struct RenderResource *x2; void /* function */ **x3; char *x4; int x5; int x6; int x7; int x8; unsigned int x9; int x10; unsigned int x11; unsigned int x12; struct shared_ptr<const ggl::Texture2DAbstract> { struct Texture2DAbstract *x0; struct __shared_weak_count *x1; } x13; unsigned int x14; struct shared_ptr<const ggl::TextureDataAbstract> { struct TextureDataAbstract *x0; struct __shared_weak_count *x1; } x15; BOOL x16; BOOL x17; BOOL x18; struct shared_ptr<ggl::SamplerState> { struct SamplerState *x0; struct __shared_weak_count *x1; } x19; } *targetTexture;
@property (readonly, nonatomic) struct Texture2D { void /* function */ **x0; struct ResourceManager *x1; struct RenderResource *x2; void /* function */ **x3; char *x4; int x5; int x6; int x7; int x8; unsigned int x9; int x10; unsigned int x11; unsigned int x12; struct shared_ptr<const ggl::Texture2DAbstract> { struct Texture2DAbstract *x0; struct __shared_weak_count *x1; } x13; unsigned int x14; struct shared_ptr<const ggl::TextureDataAbstract> { struct TextureDataAbstract *x0; struct __shared_weak_count *x1; } x15; BOOL x16; BOOL x17; BOOL x18; struct shared_ptr<ggl::SamplerState> { struct SamplerState *x0; struct __shared_weak_count *x1; } x19; } *sourceRoofTexture;
@property (readonly, nonatomic) struct Texture2D { void /* function */ **x0; struct ResourceManager *x1; struct RenderResource *x2; void /* function */ **x3; char *x4; int x5; int x6; int x7; int x8; unsigned int x9; int x10; unsigned int x11; unsigned int x12; struct shared_ptr<const ggl::Texture2DAbstract> { struct Texture2DAbstract *x0; struct __shared_weak_count *x1; } x13; unsigned int x14; struct shared_ptr<const ggl::TextureDataAbstract> { struct TextureDataAbstract *x0; struct __shared_weak_count *x1; } x15; BOOL x16; BOOL x17; BOOL x18; struct shared_ptr<ggl::SamplerState> { struct SamplerState *x0; struct __shared_weak_count *x1; } x19; } *targetRoofTexture;

- (id)initWithStyleQuery:(struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > { struct StylesheetQuery<gss::PropertyID> *x0; struct __shared_weak_count *x1; } *)a0 tileZoom:(float)a1 fixedAroundCentroid:(const struct Matrix<float, 2, 1> { float x0[2]; } *)a2 contentScale:(float)a3;
- (unsigned char)styleIndexForAttributes:(id)a0 edgePair:(const struct { unsigned int x0; int x1; } *)a1;
- (void).cxx_destruct;
- (void)enclosePointsInBoundingBox:(struct Matrix<float, 2, 1> { float x0[2]; } *)a0 count:(unsigned long long)a1;
- (void)willAddDataWithAccessor:(struct ResourceAccessor { void /* function */ **x0; } *)a0;
- (void)dealloc;
- (void)didFinishAddingData;
- (void)setNeedsTextureUpdate;
- (void)prepareToFillSection:(const struct PolygonSection { struct Matrix<float, 2, 1> *x0; struct Matrix<float, 2, 1> *x1; struct Matrix<float, 2, 1> *x2; BOOL *x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; struct vector<unsigned int, std::__1::allocator<unsigned int> > { unsigned int *x0; unsigned int *x1; struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int> > { unsigned int *x0; } x2; } x7; float x8; } *)a0;
- (void)updateTextures:(unsigned char)a0 textureManager:(struct shared_ptr<md::TextureManager> { struct TextureManager *x0; struct __shared_weak_count *x1; } *)a1;
- (void)addStrokeForSection:(const struct PolygonSection { struct Matrix<float, 2, 1> *x0; struct Matrix<float, 2, 1> *x1; struct Matrix<float, 2, 1> *x2; BOOL *x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; struct vector<unsigned int, std::__1::allocator<unsigned int> > { unsigned int *x0; unsigned int *x1; struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int> > { unsigned int *x0; } x2; } x7; float x8; } *)a0 paddedCount:(unsigned int)a1 key:(struct pair<void *, unsigned long> { void *x0; unsigned long long x1; })a2 attributes:(id)a3 styles:(struct vector<std::__1::pair<bool, GEOFeatureStylePair>, std::__1::allocator<std::__1::pair<bool, GEOFeatureStylePair> > > { struct pair<bool, GEOFeatureStylePair> *x0; struct pair<bool, GEOFeatureStylePair> *x1; struct __compressed_pair<std::__1::pair<bool, GEOFeatureStylePair> *, std::__1::allocator<std::__1::pair<bool, GEOFeatureStylePair> > > { struct pair<bool, GEOFeatureStylePair> *x0; } x2; } *)a4 cullingMask:(unsigned int)a5 accessor:(struct ResourceAccessor { void /* function */ **x0; } *)a6;
- (unsigned int)createStrokePointStyleList:(struct { struct { struct { id x0; char *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned int x6; unsigned long long x7; BOOL x8; unsigned long long x9; float x10; unsigned long long x11; id x12; int x13; } x0; unsigned long long x1; unsigned long long x2; int x3; int x4; int x5; unsigned long long x6; unsigned long long x7; unsigned int x8; unsigned int x9; union { struct { struct { float x0; float x1; } x0; struct { float x0; float x1; } x1; } x0; struct { float x0; float x1; float x2; float x3; } x1; } x10; struct *x11; struct { unsigned short x0[2]; unsigned short x1[2]; } x12; unsigned char x13; BOOL x14; unsigned char x15; BOOL x16; BOOL x17; unsigned char x18; BOOL x19; unsigned short x20; struct _NSRange { unsigned long long x0; unsigned long long x1; } x21; BOOL x22; unsigned int x23; } x0; struct { float x0; float x1; } x1; BOOL x2; BOOL x3; unsigned char x4; unsigned long long x5; unsigned long long x6; struct { float x0; float x1; } x7; unsigned long long x8; } *)a0 section:(unsigned long long)a1 outPointStyles:(struct vector<std::__1::pair<bool, GEOFeatureStylePair>, std::__1::allocator<std::__1::pair<bool, GEOFeatureStylePair> > > { struct pair<bool, GEOFeatureStylePair> *x0; struct pair<bool, GEOFeatureStylePair> *x1; struct __compressed_pair<std::__1::pair<bool, GEOFeatureStylePair> *, std::__1::allocator<std::__1::pair<bool, GEOFeatureStylePair> > > { struct pair<bool, GEOFeatureStylePair> *x0; } x2; } *)a2;
- (id).cxx_construct;
- (void)prepareForPolygon:(struct { struct { struct { id x0; char *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned int x6; unsigned long long x7; BOOL x8; unsigned long long x9; float x10; unsigned long long x11; id x12; int x13; } x0; unsigned long long x1; unsigned long long x2; int x3; int x4; int x5; unsigned long long x6; unsigned long long x7; unsigned int x8; unsigned int x9; union { struct { struct { float x0; float x1; } x0; struct { float x0; float x1; } x1; } x0; struct { float x0; float x1; float x2; float x3; } x1; } x10; struct *x11; struct { unsigned short x0[2]; unsigned short x1[2]; } x12; unsigned char x13; BOOL x14; unsigned char x15; BOOL x16; BOOL x17; unsigned char x18; BOOL x19; unsigned short x20; struct _NSRange { unsigned long long x0; unsigned long long x1; } x21; BOOL x22; unsigned int x23; } x0; struct { float x0; float x1; } x1; BOOL x2; BOOL x3; unsigned char x4; unsigned long long x5; unsigned long long x6; struct { float x0; float x1; } x7; unsigned long long x8; } *)a0 hasNonWaterStyle:(BOOL)a1;
- (void)prepareToStrokeSection:(const struct PolygonSection { struct Matrix<float, 2, 1> *x0; struct Matrix<float, 2, 1> *x1; struct Matrix<float, 2, 1> *x2; BOOL *x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; struct vector<unsigned int, std::__1::allocator<unsigned int> > { unsigned int *x0; unsigned int *x1; struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int> > { unsigned int *x0; } x2; } x7; float x8; } *)a0 key:(const struct pair<void *, unsigned long> { void *x0; unsigned long long x1; } *)a1 styles:(struct vector<std::__1::pair<bool, GEOFeatureStylePair>, std::__1::allocator<std::__1::pair<bool, GEOFeatureStylePair> > > { struct pair<bool, GEOFeatureStylePair> *x0; struct pair<bool, GEOFeatureStylePair> *x1; struct __compressed_pair<std::__1::pair<bool, GEOFeatureStylePair> *, std::__1::allocator<std::__1::pair<bool, GEOFeatureStylePair> > > { struct pair<bool, GEOFeatureStylePair> *x0; } x2; } *)a2 paddedCount:(unsigned int)a3;
- (unsigned char)initialStyleIndexForSection:(const struct PolygonSection { struct Matrix<float, 2, 1> *x0; struct Matrix<float, 2, 1> *x1; struct Matrix<float, 2, 1> *x2; BOOL *x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; struct vector<unsigned int, std::__1::allocator<unsigned int> > { unsigned int *x0; unsigned int *x1; struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int> > { unsigned int *x0; } x2; } x7; float x8; } *)a0 attributes:(id)a1 styles:(const struct vector<std::__1::pair<bool, GEOFeatureStylePair>, std::__1::allocator<std::__1::pair<bool, GEOFeatureStylePair> > > { struct pair<bool, GEOFeatureStylePair> *x0; struct pair<bool, GEOFeatureStylePair> *x1; struct __compressed_pair<std::__1::pair<bool, GEOFeatureStylePair> *, std::__1::allocator<std::__1::pair<bool, GEOFeatureStylePair> > > { struct pair<bool, GEOFeatureStylePair> *x0; } x2; } *)a2;
- (void)updateTexturesIfNecessary:(float)a0 textureManager:(struct shared_ptr<md::TextureManager> { struct TextureManager *x0; struct __shared_weak_count *x1; } *)a1;
- (void)addPolygon:(struct { struct { struct { id x0; char *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned int x6; unsigned long long x7; BOOL x8; unsigned long long x9; float x10; unsigned long long x11; id x12; int x13; } x0; unsigned long long x1; unsigned long long x2; int x3; int x4; int x5; unsigned long long x6; unsigned long long x7; unsigned int x8; unsigned int x9; union { struct { struct { float x0; float x1; } x0; struct { float x0; float x1; } x1; } x0; struct { float x0; float x1; float x2; float x3; } x1; } x10; struct *x11; struct { unsigned short x0[2]; unsigned short x1[2]; } x12; unsigned char x13; BOOL x14; unsigned char x15; BOOL x16; BOOL x17; unsigned char x18; BOOL x19; unsigned short x20; struct _NSRange { unsigned long long x0; unsigned long long x1; } x21; BOOL x22; unsigned int x23; } x0; struct { float x0; float x1; } x1; BOOL x2; BOOL x3; unsigned char x4; unsigned long long x5; unsigned long long x6; struct { float x0; float x1; } x7; unsigned long long x8; } *)a0 hasNonWaterStyle:(BOOL)a1 accessor:(struct ResourceAccessor { void /* function */ **x0; } *)a2 triangulator:(struct Triangulator<float> { struct Triangulator<float, unsigned short> { struct NodePool { struct stack<geo::Triangulator<float, unsigned short>::Node *, std::__1::vector<geo::Triangulator<float, unsigned short>::Node *, std::__1::allocator<geo::Triangulator<float, unsigned short>::Node *> > > { struct vector<geo::Triangulator<float, unsigned short>::Node *, std::__1::allocator<geo::Triangulator<float, unsigned short>::Node *> > { struct Node **x0; struct Node **x1; struct __compressed_pair<geo::Triangulator<float, unsigned short>::Node **, std::__1::allocator<geo::Triangulator<float, unsigned short>::Node *> > { struct Node **x0; } x2; } x0; } x0; } x0; struct GeometricHasher { struct AABB { float x0[2]; float x1[2]; } x0; float x1; } x1; unsigned long long x2; int x3; } x0; struct vector<unsigned short, std::__1::allocator<unsigned short> > { unsigned short *x0; unsigned short *x1; struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short> > { unsigned short *x0; } x2; } x1; } *)a3;
- (BOOL)addFillForSection:(const struct PolygonSection { struct Matrix<float, 2, 1> *x0; struct Matrix<float, 2, 1> *x1; struct Matrix<float, 2, 1> *x2; BOOL *x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; struct vector<unsigned int, std::__1::allocator<unsigned int> > { unsigned int *x0; unsigned int *x1; struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int> > { unsigned int *x0; } x2; } x7; float x8; } *)a0 precision:(unsigned char)a1 styleIndex:(unsigned int)a2 cullingMask:(unsigned int)a3 accessor:(struct ResourceAccessor { void /* function */ **x0; } *)a4 triangulator:(struct Triangulator<float> { struct Triangulator<float, unsigned short> { struct NodePool { struct stack<geo::Triangulator<float, unsigned short>::Node *, std::__1::vector<geo::Triangulator<float, unsigned short>::Node *, std::__1::allocator<geo::Triangulator<float, unsigned short>::Node *> > > { struct vector<geo::Triangulator<float, unsigned short>::Node *, std::__1::allocator<geo::Triangulator<float, unsigned short>::Node *> > { struct Node **x0; struct Node **x1; struct __compressed_pair<geo::Triangulator<float, unsigned short>::Node **, std::__1::allocator<geo::Triangulator<float, unsigned short>::Node *> > { struct Node **x0; } x2; } x0; } x0; } x0; struct GeometricHasher { struct AABB { float x0[2]; float x1[2]; } x0; float x1; } x1; unsigned long long x2; int x3; } x0; struct vector<unsigned short, std::__1::allocator<unsigned short> > { unsigned short *x0; unsigned short *x1; struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short> > { unsigned short *x0; } x2; } x1; } *)a5;
- (struct shared_ptr<ggl::Texture2D> { struct Texture2D *x0; struct __shared_weak_count *x1; })_textureForName:(const struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } *)a0 textureManager:(struct shared_ptr<md::TextureManager> { struct TextureManager *x0; struct __shared_weak_count *x1; } *)a1;

@end
