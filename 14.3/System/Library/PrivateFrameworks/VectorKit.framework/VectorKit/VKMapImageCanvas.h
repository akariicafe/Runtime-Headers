@class NSString, VKMapModel;

@interface VKMapImageCanvas : VKImageCanvas <VKMapModelDelegate, MDSnapshotMap> {
    VKMapModel *_mapModel;
    struct MapEngine { void /* function */ **x0; struct shared_ptr<md::TaskContext> { struct TaskContext *x0; struct __shared_weak_count *x1; } x1; struct Device *x2; struct RealisticCommandBufferSelector *x3; struct _retain_ptr<_MapEngineRenderQueueSource *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { void /* function */ **x0; id x1; struct _retain_objc { } x2; struct _release_objc { } x3; } x4; struct unique_ptr<ggl::DisplayLink, std::__1::default_delete<ggl::DisplayLink> > { struct __compressed_pair<ggl::DisplayLink *, std::__1::default_delete<ggl::DisplayLink> > { struct DisplayLink *x0; } x0; } x5; struct unique_ptr<ggl::SnapshotRunLoop, std::__1::default_delete<ggl::SnapshotRunLoop> > { struct __compressed_pair<ggl::SnapshotRunLoop *, std::__1::default_delete<ggl::SnapshotRunLoop> > { struct SnapshotRunLoop *x0; } x0; } x6; struct RunLoop *x7; struct unique_ptr<md::AnimationManager, std::__1::default_delete<md::AnimationManager> > { struct __compressed_pair<md::AnimationManager *, std::__1::default_delete<md::AnimationManager> > { struct AnimationManager *x0; } x0; } x8; struct unique_ptr<md::AnimationRunner, std::__1::default_delete<md::AnimationRunner> > { struct __compressed_pair<md::AnimationRunner *, std::__1::default_delete<md::AnimationRunner> > { struct AnimationRunner *x0; } x0; } x9; struct shared_ptr<md::RunLoopController> { struct RunLoopController *x0; struct __shared_weak_count *x1; } x10; id x11; id x12; id x13; id x14; struct unique_ptr<md::CartographicRenderer, std::__1::default_delete<md::CartographicRenderer> > { struct __compressed_pair<md::CartographicRenderer *, std::__1::default_delete<md::CartographicRenderer> > { struct CartographicRenderer *x0; } x0; } x15; struct unique_ptr<md::realistic::RealisticRenderer, std::__1::default_delete<md::realistic::RealisticRenderer> > { struct __compressed_pair<md::realistic::RealisticRenderer *, std::__1::default_delete<md::realistic::RealisticRenderer> > { struct RealisticRenderer *x0; } x0; } x16; struct Renderer *x17; struct unique_ptr<md::World, std::__1::default_delete<md::World> > { struct __compressed_pair<md::World *, std::__1::default_delete<md::World> > { struct World *x0; } x0; } x18; struct unique_ptr<md::MapDataAccess, std::__1::default_delete<md::MapDataAccess> > { struct __compressed_pair<md::MapDataAccess *, std::__1::default_delete<md::MapDataAccess> > { struct MapDataAccess *x0; } x0; } x19; struct unique_ptr<md::LayoutContext, std::__1::default_delete<md::LayoutContext> > { struct __compressed_pair<md::LayoutContext *, std::__1::default_delete<md::LayoutContext> > { struct LayoutContext *x0; } x0; } x20; struct shared_ptr<gdc::Camera> { struct Camera *x0; struct __shared_weak_count *x1; } x21; struct _retain_ptr<VKCameraDelegateMediator *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { void /* function */ **x0; id x1; struct _retain_objc { } x2; struct _release_objc { } x3; } x22; struct unique_ptr<md::LogicManager, std::__1::default_delete<md::LogicManager> > { struct __compressed_pair<md::LogicManager *, std::__1::default_delete<md::LogicManager> > { struct LogicManager *x0; } x0; } x23; struct unique_ptr<md::MapEngineSettings, std::__1::default_delete<md::MapEngineSettings> > { struct __compressed_pair<md::MapEngineSettings *, std::__1::default_delete<md::MapEngineSettings> > { struct MapEngineSettings *x0; } x0; } x24; struct unique_ptr<gdc::LoadingStatusTracker, std::__1::default_delete<gdc::LoadingStatusTracker> > { struct __compressed_pair<gdc::LoadingStatusTracker *, std::__1::default_delete<gdc::LoadingStatusTracker> > { struct LoadingStatusTracker *x0; } x0; } x25; struct shared_ptr<gdc::Statistics> { struct Statistics *x0; struct __shared_weak_count *x1; } x26; BOOL x27; BOOL x28; BOOL x29; struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool> > { _Atomic BOOL x0; } x0; } x30; struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool> > { _Atomic BOOL x0; } x0; } x31; struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool> > { _Atomic BOOL x0; } x0; } x32; BOOL x33; struct unique_ptr<md::MapEngineConfiguration, std::__1::default_delete<md::MapEngineConfiguration> > { struct __compressed_pair<md::MapEngineConfiguration *, std::__1::default_delete<md::MapEngineConfiguration> > { struct MapEngineConfiguration *x0; } x0; } x34; struct unique_ptr<md::MapEngineMode, std::__1::default_delete<md::MapEngineMode> > { struct __compressed_pair<md::MapEngineMode *, std::__1::default_delete<md::MapEngineMode> > { struct MapEngineMode *x0; } x0; } x35; struct _retain_ptr<VKManifestTileGroupObserverProxy *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { void /* function */ **x0; id x1; struct _retain_objc { } x2; struct _release_objc { } x3; } x36; unsigned long long x37; unsigned long long x38; struct shared_ptr<std::__1::atomic<unsigned long> > { struct atomic<unsigned long> *x0; struct __shared_weak_count *x1; } x39; } *_mapEngine;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (void)mapModel:(id)a0 labelMarkerDidChangeState:(const struct shared_ptr<md::LabelMarker> { struct LabelMarker *x0; struct __shared_weak_count *x1; } *)a1;
- (void)setMapType:(int)a0;
- (id)initWithMapEngine:(struct MapEngine { void /* function */ **x0; struct shared_ptr<md::TaskContext> { struct TaskContext *x0; struct __shared_weak_count *x1; } x1; struct Device *x2; struct RealisticCommandBufferSelector *x3; struct _retain_ptr<_MapEngineRenderQueueSource *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { void /* function */ **x0; id x1; struct _retain_objc { } x2; struct _release_objc { } x3; } x4; struct unique_ptr<ggl::DisplayLink, std::__1::default_delete<ggl::DisplayLink> > { struct __compressed_pair<ggl::DisplayLink *, std::__1::default_delete<ggl::DisplayLink> > { struct DisplayLink *x0; } x0; } x5; struct unique_ptr<ggl::SnapshotRunLoop, std::__1::default_delete<ggl::SnapshotRunLoop> > { struct __compressed_pair<ggl::SnapshotRunLoop *, std::__1::default_delete<ggl::SnapshotRunLoop> > { struct SnapshotRunLoop *x0; } x0; } x6; struct RunLoop *x7; struct unique_ptr<md::AnimationManager, std::__1::default_delete<md::AnimationManager> > { struct __compressed_pair<md::AnimationManager *, std::__1::default_delete<md::AnimationManager> > { struct AnimationManager *x0; } x0; } x8; struct unique_ptr<md::AnimationRunner, std::__1::default_delete<md::AnimationRunner> > { struct __compressed_pair<md::AnimationRunner *, std::__1::default_delete<md::AnimationRunner> > { struct AnimationRunner *x0; } x0; } x9; struct shared_ptr<md::RunLoopController> { struct RunLoopController *x0; struct __shared_weak_count *x1; } x10; id x11; id x12; id x13; id x14; struct unique_ptr<md::CartographicRenderer, std::__1::default_delete<md::CartographicRenderer> > { struct __compressed_pair<md::CartographicRenderer *, std::__1::default_delete<md::CartographicRenderer> > { struct CartographicRenderer *x0; } x0; } x15; struct unique_ptr<md::realistic::RealisticRenderer, std::__1::default_delete<md::realistic::RealisticRenderer> > { struct __compressed_pair<md::realistic::RealisticRenderer *, std::__1::default_delete<md::realistic::RealisticRenderer> > { struct RealisticRenderer *x0; } x0; } x16; struct Renderer *x17; struct unique_ptr<md::World, std::__1::default_delete<md::World> > { struct __compressed_pair<md::World *, std::__1::default_delete<md::World> > { struct World *x0; } x0; } x18; struct unique_ptr<md::MapDataAccess, std::__1::default_delete<md::MapDataAccess> > { struct __compressed_pair<md::MapDataAccess *, std::__1::default_delete<md::MapDataAccess> > { struct MapDataAccess *x0; } x0; } x19; struct unique_ptr<md::LayoutContext, std::__1::default_delete<md::LayoutContext> > { struct __compressed_pair<md::LayoutContext *, std::__1::default_delete<md::LayoutContext> > { struct LayoutContext *x0; } x0; } x20; struct shared_ptr<gdc::Camera> { struct Camera *x0; struct __shared_weak_count *x1; } x21; struct _retain_ptr<VKCameraDelegateMediator *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { void /* function */ **x0; id x1; struct _retain_objc { } x2; struct _release_objc { } x3; } x22; struct unique_ptr<md::LogicManager, std::__1::default_delete<md::LogicManager> > { struct __compressed_pair<md::LogicManager *, std::__1::default_delete<md::LogicManager> > { struct LogicManager *x0; } x0; } x23; struct unique_ptr<md::MapEngineSettings, std::__1::default_delete<md::MapEngineSettings> > { struct __compressed_pair<md::MapEngineSettings *, std::__1::default_delete<md::MapEngineSettings> > { struct MapEngineSettings *x0; } x0; } x24; struct unique_ptr<gdc::LoadingStatusTracker, std::__1::default_delete<gdc::LoadingStatusTracker> > { struct __compressed_pair<gdc::LoadingStatusTracker *, std::__1::default_delete<gdc::LoadingStatusTracker> > { struct LoadingStatusTracker *x0; } x0; } x25; struct shared_ptr<gdc::Statistics> { struct Statistics *x0; struct __shared_weak_count *x1; } x26; BOOL x27; BOOL x28; BOOL x29; struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool> > { _Atomic BOOL x0; } x0; } x30; struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool> > { _Atomic BOOL x0; } x0; } x31; struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool> > { _Atomic BOOL x0; } x0; } x32; BOOL x33; struct unique_ptr<md::MapEngineConfiguration, std::__1::default_delete<md::MapEngineConfiguration> > { struct __compressed_pair<md::MapEngineConfiguration *, std::__1::default_delete<md::MapEngineConfiguration> > { struct MapEngineConfiguration *x0; } x0; } x34; struct unique_ptr<md::MapEngineMode, std::__1::default_delete<md::MapEngineMode> > { struct __compressed_pair<md::MapEngineMode *, std::__1::default_delete<md::MapEngineMode> > { struct MapEngineMode *x0; } x0; } x35; struct _retain_ptr<VKManifestTileGroupObserverProxy *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { void /* function */ **x0; id x1; struct _retain_objc { } x2; struct _release_objc { } x3; } x36; unsigned long long x37; unsigned long long x38; struct shared_ptr<std::__1::atomic<unsigned long> > { struct atomic<unsigned long> *x0; struct __shared_weak_count *x1; } x39; } *)a0;
- (void)mapModel:(id)a0 selectedLabelMarkerWillDisappear:(const struct shared_ptr<md::LabelMarker> { struct LabelMarker *x0; struct __shared_weak_count *x1; } *)a1;
- (void)cancelTileRequests;
- (void)resetCameraController;
- (void)mapModelDidUpdateMinMaxZoomLevel:(id)a0;
- (void)clearScene;
- (void)updateWithTimestamp:(double)a0 withContext:(struct LayoutContext { id x0; struct shared_ptr<gdc::Camera> { struct Camera *x0; struct __shared_weak_count *x1; } x1; unsigned char x2; struct VKEdgeInsets { float x0; float x1; float x2; float x3; } x3; struct VKEdgeInsets { float x0; float x1; float x2; float x3; } x4; struct shared_ptr<ggl::PolygonBase::MeshMesh> { struct MeshMesh *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<ggl::PolygonBase::MeshMesh> { struct MeshMesh *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<ggl::CommonMesh::Pos2UVMesh> { struct Pos2UVMesh *x0; struct __shared_weak_count *x1; } x7; struct StencilManager { unsigned char x0; unsigned char x1; unsigned char x2; struct ClearItem { unsigned char x0; struct Matrix<float, 4, 1> { float x0[4]; } x1; BOOL x2; float x3; unsigned char x4; unsigned int x5; } x3; } x8; struct shared_ptr<ggl::Device> { struct Device *x0; struct __shared_weak_count *x1; } x9; struct Loader { struct unique_ptr<ggl::LoaderImpl, std::__1::default_delete<ggl::LoaderImpl> > { struct __compressed_pair<ggl::LoaderImpl *, std::__1::default_delete<ggl::LoaderImpl> > { struct LoaderImpl *x0; } x0; } x0; } x10; struct Loader *x11; double x12; BOOL x13; BOOL x14; BOOL x15; BOOL x16; struct Coordinate3D<Radians, double> { struct Unit<RadianUnitDescription, double> { double x0; } x0; struct Unit<RadianUnitDescription, double> { double x0; } x1; struct Unit<MeterUnitDescription, double> { double x0; } x2; } x17; float x18; struct View *x19; struct View *x20; struct Viewport *x21; struct ARContext *x22; unsigned long long x23; unsigned long long x24; struct unordered_map<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > > > > { struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > > > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::hash<unsigned long long>, true> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::equal_to<unsigned long long>, true> > { float x0; } x3; } x0; } x25; } *)a1;
- (void)mapModelLabelsDidLayout:(id)a0;

@end
