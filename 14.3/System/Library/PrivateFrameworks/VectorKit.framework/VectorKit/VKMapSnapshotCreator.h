@class VKRouteContext, NSString, VKNotificationObserver, GEOPOICategoryFilter, VKMapImageCanvas, VKGlobeImageCanvas;
@protocol VKRouteOverlay;

@interface VKMapSnapshotCreator : NSObject <MapEngineDelegate, VKNotificationObserverDelegate> {
    VKMapImageCanvas *_mapCanvas;
    VKGlobeImageCanvas *_globeCanvas;
    int _mapType;
    BOOL _didBecomeFullyDrawn;
    BOOL _hasFailedTiles;
    id /* block */ _completion;
    struct unique_ptr<md::MapEngine, std::__1::default_delete<md::MapEngine> > { struct __compressed_pair<md::MapEngine *, std::__1::default_delete<md::MapEngine> > { struct MapEngine *__value_; } __ptr_; } _mapEngine;
    struct shared_ptr<md::TaskContext> { struct TaskContext *__ptr_; struct __shared_weak_count *__cntrl_; } _taskContext;
    BOOL _didSoftDealloc;
    VKNotificationObserver *_notificationObserver;
    unsigned long long _signpostId;
}

@property (readonly) struct CGSize { double x0; double x1; } size;
@property (nonatomic) int mapType;
@property (nonatomic) struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; BOOL x4; } mapDisplayStyle;
@property (nonatomic) unsigned char emphasis;
@property (nonatomic) struct VKEdgeInsets { float top; float left; float bottom; float right; } edgeInsets;
@property (nonatomic) BOOL localizeLabels;
@property (nonatomic) long long labelScaleFactor;
@property (nonatomic) BOOL showsPointsOfInterest;
@property (retain, nonatomic) GEOPOICategoryFilter *pointsOfInterestFilter;
@property (nonatomic) BOOL showsPointLabels;
@property (nonatomic) BOOL showsBuildings;
@property (nonatomic) BOOL showsVenues;
@property (retain, nonatomic) id<VKRouteOverlay> routeOverlay;
@property (retain, nonatomic) VKRouteContext *routeContext;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)supportsSharingThumbnails;

- (void)cancel;
- (void)didPresent;
- (BOOL)wantsTimerTick;
- (void).cxx_destruct;
- (void)setMapRegion:(id)a0 pitch:(double)a1 yaw:(double)a2;
- (id)initWithSize:(struct CGSize { double x0; double x1; })a0 scale:(double)a1 homeQueue:(id)a2 signpostId:(unsigned long long)a3 mapType:(int)a4 auditToken:(id)a5;
- (void)renderSnapshot:(id /* block */)a0;
- (void)dealloc;
- (void)didReceiveMemoryWarning;
- (id).cxx_construct;
- (void)softDealloc;
- (id)activeCanvas;
- (void)_transferSettingsFrom:(id)a0 to:(id)a1;
- (BOOL)canChangeVenueFocus;
- (void)setClearFontCache:(BOOL)a0;
- (void)lookAtX:(unsigned long long)a0 y:(unsigned long long)a1 z:(unsigned long long)a2;
- (void)setCenterCoordinate:(struct { double x0; double x1; })a0 altitude:(double)a1 yaw:(double)a2 pitch:(double)a3;
- (void)addCustomFeatureDataSource:(id)a0;
- (void)removeCustomFeatureDataSource:(id)a0;
- (void)cancelFlushingTileDecodes:(BOOL)a0;
- (struct LabelSettings { struct LabelSettings_Presentation { struct LabelSettings *x0; } x0; struct LabelSettings_Navigation { struct LabelSettings *x0; } x1; struct LabelSettings_Markers { struct LabelSettings *x0; } x2; struct shared_ptr<md::LabelManager> { struct LabelManager *x0; struct __shared_weak_count *x1; } x3; struct unique_ptr<md::LabelSettingsData, std::__1::default_delete<md::LabelSettingsData> > { struct __compressed_pair<md::LabelSettingsData *, std::__1::default_delete<md::LabelSettingsData> > { struct LabelSettingsData *x0; } x0; } x4; } *)_labelSettings;
- (void)nearestVenueDidChange:(const struct Venue { unsigned long long x0; unsigned long long x1; struct vector<md::VenueBuilding, std::__1::allocator<md::VenueBuilding> > { struct VenueBuilding *x0; struct VenueBuilding *x1; struct __compressed_pair<md::VenueBuilding *, std::__1::allocator<md::VenueBuilding> > { struct VenueBuilding *x0; } x2; } x2; struct Polygon2<double> { struct vector<gm::Matrix<double, 2, 1>, std::__1::allocator<gm::Matrix<double, 2, 1> > > { struct Matrix<double, 2, 1> *x0; struct Matrix<double, 2, 1> *x1; struct __compressed_pair<gm::Matrix<double, 2, 1> *, std::__1::allocator<gm::Matrix<double, 2, 1> > > { struct Matrix<double, 2, 1> *x0; } x2; } x0; } x3; struct ConvexHull2<double> { struct vector<gm::Matrix<double, 2, 1>, std::__1::allocator<gm::Matrix<double, 2, 1> > > { struct Matrix<double, 2, 1> *x0; struct Matrix<double, 2, 1> *x1; struct __compressed_pair<gm::Matrix<double, 2, 1> *, std::__1::allocator<gm::Matrix<double, 2, 1> > > { struct Matrix<double, 2, 1> *x0; } x2; } x0; } x4; struct Mercator2<double> { double x0[2]; } x5; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x6; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x7; struct optional<std::__1::basic_string<char> > { BOOL x0; union ValueUnion { unsigned char x0[24]; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; } x1; } x8; struct optional<std::__1::basic_string<char> > { BOOL x0; union ValueUnion { unsigned char x0[24]; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; } x1; } x9; } *)a0 building:(const struct VenueBuilding { struct vector<md::VenueLevel, std::__1::allocator<md::VenueLevel> > { struct VenueLevel *x0; struct VenueLevel *x1; struct __compressed_pair<md::VenueLevel *, std::__1::allocator<md::VenueLevel> > { struct VenueLevel *x0; } x2; } x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; short x5; struct Matrix<double, 2, 1> { double x0[2]; } x6; struct ConvexHull2<double> { struct vector<gm::Matrix<double, 2, 1>, std::__1::allocator<gm::Matrix<double, 2, 1> > > { struct Matrix<double, 2, 1> *x0; struct Matrix<double, 2, 1> *x1; struct __compressed_pair<gm::Matrix<double, 2, 1> *, std::__1::allocator<gm::Matrix<double, 2, 1> > > { struct Matrix<double, 2, 1> *x0; } x2; } x0; } x7; } *)a1;
- (void)venueCreated:(const struct Venue { unsigned long long x0; unsigned long long x1; struct vector<md::VenueBuilding, std::__1::allocator<md::VenueBuilding> > { struct VenueBuilding *x0; struct VenueBuilding *x1; struct __compressed_pair<md::VenueBuilding *, std::__1::allocator<md::VenueBuilding> > { struct VenueBuilding *x0; } x2; } x2; struct Polygon2<double> { struct vector<gm::Matrix<double, 2, 1>, std::__1::allocator<gm::Matrix<double, 2, 1> > > { struct Matrix<double, 2, 1> *x0; struct Matrix<double, 2, 1> *x1; struct __compressed_pair<gm::Matrix<double, 2, 1> *, std::__1::allocator<gm::Matrix<double, 2, 1> > > { struct Matrix<double, 2, 1> *x0; } x2; } x0; } x3; struct ConvexHull2<double> { struct vector<gm::Matrix<double, 2, 1>, std::__1::allocator<gm::Matrix<double, 2, 1> > > { struct Matrix<double, 2, 1> *x0; struct Matrix<double, 2, 1> *x1; struct __compressed_pair<gm::Matrix<double, 2, 1> *, std::__1::allocator<gm::Matrix<double, 2, 1> > > { struct Matrix<double, 2, 1> *x0; } x2; } x0; } x4; struct Mercator2<double> { double x0[2]; } x5; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x6; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x7; struct optional<std::__1::basic_string<char> > { BOOL x0; union ValueUnion { unsigned char x0[24]; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; } x1; } x8; struct optional<std::__1::basic_string<char> > { BOOL x0; union ValueUnion { unsigned char x0[24]; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; } x1; } x9; } *)a0 building:(const struct VenueBuilding { struct vector<md::VenueLevel, std::__1::allocator<md::VenueLevel> > { struct VenueLevel *x0; struct VenueLevel *x1; struct __compressed_pair<md::VenueLevel *, std::__1::allocator<md::VenueLevel> > { struct VenueLevel *x0; } x2; } x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; short x5; struct Matrix<double, 2, 1> { double x0[2]; } x6; struct ConvexHull2<double> { struct vector<gm::Matrix<double, 2, 1>, std::__1::allocator<gm::Matrix<double, 2, 1> > > { struct Matrix<double, 2, 1> *x0; struct Matrix<double, 2, 1> *x1; struct __compressed_pair<gm::Matrix<double, 2, 1> *, std::__1::allocator<gm::Matrix<double, 2, 1> > > { struct Matrix<double, 2, 1> *x0; } x2; } x0; } x7; } *)a1;
- (void)setLabelExclusionRegions:(id)a0;
- (void)didStartLoadingData;
- (void)didFinishLoadingData;
- (void)didFinishLoadingDataWithError:(id)a0;
- (void)willBecomeFullyDrawn;
- (void)didUpdateSceneStatus:(unsigned char)a0;
- (void)labelManagerDidLayout;
- (void)selectedLabelMarkerWillDisappear:(const struct shared_ptr<md::LabelMarker> { } *)a0;
- (void)labelMarkerDidChangeState:(const struct shared_ptr<md::LabelMarker> { } *)a0;
- (void)willLayoutWithTimestamp:(double)a0 withContext:(struct LayoutContext { id x0; struct shared_ptr<gdc::Camera> { struct Camera *x0; struct __shared_weak_count *x1; } x1; unsigned char x2; struct VKEdgeInsets { float x0; float x1; float x2; float x3; } x3; struct VKEdgeInsets { float x0; float x1; float x2; float x3; } x4; struct shared_ptr<ggl::PolygonBase::MeshMesh> { struct MeshMesh *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<ggl::PolygonBase::MeshMesh> { struct MeshMesh *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<ggl::CommonMesh::Pos2UVMesh> { struct Pos2UVMesh *x0; struct __shared_weak_count *x1; } x7; struct StencilManager { unsigned char x0; unsigned char x1; unsigned char x2; struct ClearItem { unsigned char x0; struct Matrix<float, 4, 1> { float x0[4]; } x1; BOOL x2; float x3; unsigned char x4; unsigned int x5; } x3; } x8; struct shared_ptr<ggl::Device> { struct Device *x0; struct __shared_weak_count *x1; } x9; struct Loader { struct unique_ptr<ggl::LoaderImpl, std::__1::default_delete<ggl::LoaderImpl> > { struct __compressed_pair<ggl::LoaderImpl *, std::__1::default_delete<ggl::LoaderImpl> > { struct LoaderImpl *x0; } x0; } x0; } x10; struct Loader *x11; double x12; BOOL x13; BOOL x14; BOOL x15; BOOL x16; struct Coordinate3D<Radians, double> { struct Unit<RadianUnitDescription, double> { double x0; } x0; struct Unit<RadianUnitDescription, double> { double x0; } x1; struct Unit<MeterUnitDescription, double> { double x0; } x2; } x17; float x18; struct View *x19; struct View *x20; struct Viewport *x21; struct ARContext *x22; unsigned long long x23; unsigned long long x24; struct unordered_map<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > > > > { struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > > > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::hash<unsigned long long>, true> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::equal_to<unsigned long long>, true> > { float x0; } x3; } x0; } x25; } *)a1;

@end
