@interface VKIconModifiers : NSObject {
    struct IconModifiers { BOOL _isGlyphHidden; BOOL _isGlyphOnly; BOOL _isInfoOnly; BOOL _isMirrored; float _opacity; float _scale; struct optional<geo::Color<unsigned char, 4, geo::ColorSpace::sRGB> > { BOOL _hasValue; union ValueUnion { unsigned char data[4]; struct Color<unsigned char, 4, geo::ColorSpace::sRGB> { struct Matrix<unsigned char, 4, 1> { unsigned char _e[4]; } _backing; } type; } _value; } _textColor; struct optional<geo::Color<unsigned char, 4, geo::ColorSpace::sRGB> > { BOOL _hasValue; union ValueUnion { unsigned char data[4]; struct Color<unsigned char, 4, geo::ColorSpace::sRGB> { struct Matrix<unsigned char, 4, 1> { unsigned char _e[4]; } _backing; } type; } _value; } _customColor; struct optional<float> { BOOL _hasValue; union ValueUnion { unsigned char data[4]; float type; } _value; } _fontSize; struct optional<float> { BOOL _hasValue; union ValueUnion { unsigned char data[4]; float type; } _value; } _tailDirection; struct optional<float> { BOOL _hasValue; union ValueUnion { unsigned char data[4]; float type; } _value; } _textBaseline; struct optional<gm::Matrix<float, 2, 1> > { BOOL _hasValue; union ValueUnion { unsigned char data[8]; struct Matrix<float, 2, 1> { float _e[2]; } type; } _value; } _fillSize; struct optional<std::__1::basic_string<char> > { BOOL _hasValue; union ValueUnion { unsigned char data[24]; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *__data_; unsigned long long __size_; unsigned long long __cap_; } __l; struct __short { char __data_[23]; struct { unsigned char __size_; } ; } __s; struct __raw { unsigned long long __words[3]; } __r; } ; } __value_; } __r_; } type; } _value; } _fontName; struct optional<std::__1::basic_string<char> > { BOOL _hasValue; union ValueUnion { unsigned char data[24]; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *__data_; unsigned long long __size_; unsigned long long __cap_; } __l; struct __short { char __data_[23]; struct { unsigned char __size_; } ; } __s; struct __raw { unsigned long long __words[3]; } __r; } ; } __value_; } __r_; } type; } _value; } _textLocale; struct map<unsigned short, std::__1::basic_string<char>, std::__1::less<unsigned short>, geo::StdAllocator<std::__1::pair<const unsigned short, std::__1::basic_string<char> >, grl::Allocator> > { struct __tree<std::__1::__value_type<unsigned short, std::__1::basic_string<char> >, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, std::__1::basic_string<char> >, std::__1::less<unsigned short>, true>, geo::StdAllocator<std::__1::__value_type<unsigned short, std::__1::basic_string<char> >, grl::Allocator> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *__begin_node_; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, geo::StdAllocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, std::__1::basic_string<char> >, void *>, grl::Allocator> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *__left_; } __value_; struct StdAllocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, std::__1::basic_string<char> >, void *>, grl::Allocator> { struct Allocator *_allocator; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, std::__1::basic_string<char> >, std::__1::less<unsigned short>, true> > { unsigned long long __value_; } __pair3_; } __tree_; } _text; } _iconModifiers;
}

@property (nonatomic) BOOL nightMode;
@property (nonatomic) BOOL transitMode;
@property (nonatomic) BOOL navMode;
@property (nonatomic) BOOL interactive;
@property (nonatomic, getter=isSearchResult) BOOL searchResult;
@property (nonatomic) long long zoom;
@property (nonatomic) unsigned long long variant;
@property (nonatomic) unsigned long long secondaryVariant;
@property (nonatomic) unsigned long long countryCode;

- (id)init;
- (void).cxx_destruct;
- (struct IconModifiers { BOOL x0; BOOL x1; BOOL x2; BOOL x3; float x4; float x5; struct optional<geo::Color<unsigned char, 4, geo::ColorSpace::sRGB> > { BOOL x0; union ValueUnion { unsigned char x0[4]; struct Color<unsigned char, 4, geo::ColorSpace::sRGB> { struct Matrix<unsigned char, 4, 1> { unsigned char x0[4]; } x0; } x1; } x1; } x6; struct optional<geo::Color<unsigned char, 4, geo::ColorSpace::sRGB> > { BOOL x0; union ValueUnion { unsigned char x0[4]; struct Color<unsigned char, 4, geo::ColorSpace::sRGB> { struct Matrix<unsigned char, 4, 1> { unsigned char x0[4]; } x0; } x1; } x1; } x7; struct optional<float> { BOOL x0; union ValueUnion { unsigned char x0[4]; float x1; } x1; } x8; struct optional<float> { BOOL x0; union ValueUnion { unsigned char x0[4]; float x1; } x1; } x9; struct optional<float> { BOOL x0; union ValueUnion { unsigned char x0[4]; float x1; } x1; } x10; struct optional<gm::Matrix<float, 2, 1> > { BOOL x0; union ValueUnion { unsigned char x0[8]; struct Matrix<float, 2, 1> { float x0[2]; } x1; } x1; } x11; struct optional<std::__1::basic_string<char> > { BOOL x0; union ValueUnion { unsigned char x0[24]; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; } x1; } x12; struct optional<std::__1::basic_string<char> > { BOOL x0; union ValueUnion { unsigned char x0[24]; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; } x1; } x13; struct map<unsigned short, std::__1::basic_string<char>, std::__1::less<unsigned short>, geo::StdAllocator<std::__1::pair<const unsigned short, std::__1::basic_string<char> >, grl::Allocator> > { struct __tree<std::__1::__value_type<unsigned short, std::__1::basic_string<char> >, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, std::__1::basic_string<char> >, std::__1::less<unsigned short>, true>, geo::StdAllocator<std::__1::__value_type<unsigned short, std::__1::basic_string<char> >, grl::Allocator> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, geo::StdAllocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, std::__1::basic_string<char> >, void *>, grl::Allocator> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; struct StdAllocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, std::__1::basic_string<char> >, void *>, grl::Allocator> { struct Allocator *x0; } x1; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, std::__1::basic_string<char> >, std::__1::less<unsigned short>, true> > { unsigned long long x0; } x2; } x0; } x14; } *)cppModifiers;
- (id)initWithModifiers:(const struct IconModifiers { BOOL x0; BOOL x1; BOOL x2; BOOL x3; float x4; float x5; struct optional<geo::Color<unsigned char, 4, geo::ColorSpace::sRGB> > { BOOL x0; union ValueUnion { unsigned char x0[4]; struct Color<unsigned char, 4, geo::ColorSpace::sRGB> { struct Matrix<unsigned char, 4, 1> { unsigned char x0[4]; } x0; } x1; } x1; } x6; struct optional<geo::Color<unsigned char, 4, geo::ColorSpace::sRGB> > { BOOL x0; union ValueUnion { unsigned char x0[4]; struct Color<unsigned char, 4, geo::ColorSpace::sRGB> { struct Matrix<unsigned char, 4, 1> { unsigned char x0[4]; } x0; } x1; } x1; } x7; struct optional<float> { BOOL x0; union ValueUnion { unsigned char x0[4]; float x1; } x1; } x8; struct optional<float> { BOOL x0; union ValueUnion { unsigned char x0[4]; float x1; } x1; } x9; struct optional<float> { BOOL x0; union ValueUnion { unsigned char x0[4]; float x1; } x1; } x10; struct optional<gm::Matrix<float, 2, 1> > { BOOL x0; union ValueUnion { unsigned char x0[8]; struct Matrix<float, 2, 1> { float x0[2]; } x1; } x1; } x11; struct optional<std::__1::basic_string<char> > { BOOL x0; union ValueUnion { unsigned char x0[24]; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; } x1; } x12; struct optional<std::__1::basic_string<char> > { BOOL x0; union ValueUnion { unsigned char x0[24]; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; } x1; } x13; struct map<unsigned short, std::__1::basic_string<char>, std::__1::less<unsigned short>, geo::StdAllocator<std::__1::pair<const unsigned short, std::__1::basic_string<char> >, grl::Allocator> > { struct __tree<std::__1::__value_type<unsigned short, std::__1::basic_string<char> >, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, std::__1::basic_string<char> >, std::__1::less<unsigned short>, true>, geo::StdAllocator<std::__1::__value_type<unsigned short, std::__1::basic_string<char> >, grl::Allocator> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, geo::StdAllocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, std::__1::basic_string<char> >, void *>, grl::Allocator> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; struct StdAllocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, std::__1::basic_string<char> >, void *>, grl::Allocator> { struct Allocator *x0; } x1; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, std::__1::basic_string<char> >, std::__1::less<unsigned short>, true> > { unsigned long long x0; } x2; } x0; } x14; } *)a0;
- (id).cxx_construct;
- (void)setTransitLineColor:(struct { float x0; float x1; float x2; float x3; })a0;
- (void)setText:(id)a0;
- (void)setGlyphOnly:(BOOL)a0;

@end
