@class NSArray, VKNavigationPuck, VKTimedAnimation;
@protocol VKMapModelDelegate;

@interface VKMapModel : NSObject {
    long long _tileSize;
    const struct MapEngineSettings { struct linear_map<md::MapEngineSetting, long long, std::__1::equal_to<md::MapEngineSetting>, std::__1::allocator<std::__1::pair<md::MapEngineSetting, long long> >, std::__1::vector<std::__1::pair<md::MapEngineSetting, long long>, std::__1::allocator<std::__1::pair<md::MapEngineSetting, long long> > > > { struct vector<std::__1::pair<md::MapEngineSetting, long long>, std::__1::allocator<std::__1::pair<md::MapEngineSetting, long long> > > { struct pair<md::MapEngineSetting, long long> *x0; struct pair<md::MapEngineSetting, long long> *x1; struct __compressed_pair<std::__1::pair<md::MapEngineSetting, long long> *, std::__1::allocator<std::__1::pair<md::MapEngineSetting, long long> > > { struct pair<md::MapEngineSetting, long long> *x0; } x2; } x0; } x0; struct set<md::MapEngineSetting, std::__1::less<md::MapEngineSetting>, std::__1::allocator<md::MapEngineSetting> > { struct __tree<md::MapEngineSetting, std::__1::less<md::MapEngineSetting>, std::__1::allocator<md::MapEngineSetting> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<md::MapEngineSetting, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<md::MapEngineSetting> > { unsigned long long x0; } x2; } x0; } x1; struct RunLoopController *x2; } *_mapEngineSettings;
    struct AnimationRunner { struct MapEngine *x0; } *_animationRunner;
    struct CartographicRenderer { void /* function */ **x0; struct shared_ptr<md::TaskContext> { struct TaskContext *x0; struct __shared_weak_count *x1; } x1; struct unique_ptr<md::PassList, std::__1::default_delete<md::PassList> > { struct __compressed_pair<md::PassList *, std::__1::default_delete<md::PassList> > { struct PassList *x0; } x0; } x2; struct unique_ptr<md::FrameGraphResourceRegistry, std::__1::default_delete<md::FrameGraphResourceRegistry> > { struct __compressed_pair<md::FrameGraphResourceRegistry *, std::__1::default_delete<md::FrameGraphResourceRegistry> > { struct FrameGraphResourceRegistry *x0; } x0; } x3; struct vector<std::__1::unique_ptr<md::RenderLayer, std::__1::default_delete<md::RenderLayer> >, std::__1::allocator<std::__1::unique_ptr<md::RenderLayer, std::__1::default_delete<md::RenderLayer> > > > { struct unique_ptr<md::RenderLayer, std::__1::default_delete<md::RenderLayer> > *x0; struct unique_ptr<md::RenderLayer, std::__1::default_delete<md::RenderLayer> > *x1; struct __compressed_pair<std::__1::unique_ptr<md::RenderLayer, std::__1::default_delete<md::RenderLayer> > *, std::__1::allocator<std::__1::unique_ptr<md::RenderLayer, std::__1::default_delete<md::RenderLayer> > > > { struct unique_ptr<md::RenderLayer, std::__1::default_delete<md::RenderLayer> > *x0; } x2; } x4; struct linear_map<md::CommandBufferLocation, md::RenderLayer *, std::__1::equal_to<md::CommandBufferLocation>, std::__1::allocator<std::__1::pair<md::CommandBufferLocation, md::RenderLayer *> >, std::__1::vector<std::__1::pair<md::CommandBufferLocation, md::RenderLayer *>, std::__1::allocator<std::__1::pair<md::CommandBufferLocation, md::RenderLayer *> > > > { struct vector<std::__1::pair<md::CommandBufferLocation, md::RenderLayer *>, std::__1::allocator<std::__1::pair<md::CommandBufferLocation, md::RenderLayer *> > > { struct pair<md::CommandBufferLocation, md::RenderLayer *> *x0; struct pair<md::CommandBufferLocation, md::RenderLayer *> *x1; struct __compressed_pair<std::__1::pair<md::CommandBufferLocation, md::RenderLayer *> *, std::__1::allocator<std::__1::pair<md::CommandBufferLocation, md::RenderLayer *> > > { struct pair<md::CommandBufferLocation, md::RenderLayer *> *x0; } x2; } x0; } x5; struct RunLoopController *x6; struct MapEngine *x7; id x8; } *_renderer;
    struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } _rendererMutex;
    struct LogicManager { void /* function */ **x0; struct unordered_map<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > > > > { struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > > > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, std::__1::hash<unsigned long long>, true> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, std::__1::equal_to<unsigned long long>, true> > { float x0; } x3; } x0; } x1; struct vector<md::LogicBase *, std::__1::allocator<md::LogicBase *> > { struct LogicBase **x0; struct LogicBase **x1; struct __compressed_pair<md::LogicBase **, std::__1::allocator<md::LogicBase *> > { struct LogicBase **x0; } x2; } x2[3]; } *_logicManager;
    struct FeatureAttributeSet { struct vector<gss::FeatureAttributePair, geo::StdAllocator<gss::FeatureAttributePair, gss::Allocator> > { struct FeatureAttributePair *__begin_; struct FeatureAttributePair *__end_; struct __compressed_pair<gss::FeatureAttributePair *, geo::StdAllocator<gss::FeatureAttributePair, gss::Allocator> > { struct FeatureAttributePair *__value_; struct StdAllocator<gss::FeatureAttributePair, gss::Allocator> { struct Allocator *_allocator; } __value_; } __end_cap_; } _attributes; } _mapFeatureStyleAttributes;
    struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > { struct StylesheetQuery<gss::PropertyID> *__ptr_; struct __shared_weak_count *__cntrl_; } _styleQuery;
    int _metroArea;
    BOOL _forceMapDrawStyleUpdate;
    VKTimedAnimation *_highZoomTransitionAnimation;
    VKNavigationPuck *_navigationPuck;
    float _navMapZoomLevelTransitionZ;
    struct shared_ptr<md::TaskContext> { struct TaskContext *__ptr_; struct __shared_weak_count *__cntrl_; } _taskContext;
}

@property (nonatomic) int mapType;
@property (nonatomic) float standardMapZoomLevelTransitionZ;
@property (nonatomic) BOOL localizeLabels;
@property (nonatomic) unsigned char labelScaleFactor;
@property (nonatomic) id<VKMapModelDelegate> delegate;
@property (readonly, nonatomic) NSArray *visibleTileSets;
@property (nonatomic) float navigationPuckSize;
@property (nonatomic) BOOL disableTransitLines;

- (struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> *x0; struct __shared_weak_count *x1; })_styleManager;
- (long long)tileSize;
- (void)setMapType:(int)a0 animated:(BOOL)a1;
- (void)destroyRenderer;
- (void)setNavMapZoomLevelTransitionZFromLowerBound:(float)a0;
- (void).cxx_destruct;
- (void)debugHighlightObjectAtPoint:(struct CGPoint { double x0; double x1; })a0 highlightTarget:(unsigned char)a1;
- (void)performStylesheetDidReload;
- (void)forceMapType:(int)a0 animated:(BOOL)a1;
- (void)dealloc;
- (void)updateMapDrawStyleWithContext:(const struct LayoutContext { id x0; struct shared_ptr<gdc::Camera> { struct Camera *x0; struct __shared_weak_count *x1; } x1; unsigned char x2; struct VKEdgeInsets { float x0; float x1; float x2; float x3; } x3; struct VKEdgeInsets { float x0; float x1; float x2; float x3; } x4; struct shared_ptr<ggl::PolygonBase::MeshMesh> { struct MeshMesh *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<ggl::PolygonBase::MeshMesh> { struct MeshMesh *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<ggl::CommonMesh::Pos2UVMesh> { struct Pos2UVMesh *x0; struct __shared_weak_count *x1; } x7; struct StencilManager { unsigned char x0; unsigned char x1; unsigned char x2; struct ClearItem { unsigned char x0; struct Matrix<float, 4, 1> { float x0[4]; } x1; BOOL x2; float x3; unsigned char x4; unsigned int x5; } x3; } x8; struct shared_ptr<ggl::Device> { struct Device *x0; struct __shared_weak_count *x1; } x9; struct Loader { struct unique_ptr<ggl::LoaderImpl, std::__1::default_delete<ggl::LoaderImpl> > { struct __compressed_pair<ggl::LoaderImpl *, std::__1::default_delete<ggl::LoaderImpl> > { struct LoaderImpl *x0; } x0; } x0; } x10; struct Loader *x11; double x12; BOOL x13; BOOL x14; BOOL x15; BOOL x16; struct Coordinate3D<Radians, double> { struct Unit<RadianUnitDescription, double> { double x0; } x0; struct Unit<RadianUnitDescription, double> { double x0; } x1; struct Unit<MeterUnitDescription, double> { double x0; } x2; } x17; float x18; struct View *x19; struct View *x20; struct Viewport *x21; struct ARContext *x22; unsigned long long x23; unsigned long long x24; struct unordered_map<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > > > > { struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > > > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::hash<unsigned long long>, true> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::equal_to<unsigned long long>, true> > { float x0; } x3; } x0; } x25; } *)a0;
- (void)_updateZoomLevel:(const struct LayoutContext { id x0; struct shared_ptr<gdc::Camera> { struct Camera *x0; struct __shared_weak_count *x1; } x1; unsigned char x2; struct VKEdgeInsets { float x0; float x1; float x2; float x3; } x3; struct VKEdgeInsets { float x0; float x1; float x2; float x3; } x4; struct shared_ptr<ggl::PolygonBase::MeshMesh> { struct MeshMesh *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<ggl::PolygonBase::MeshMesh> { struct MeshMesh *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<ggl::CommonMesh::Pos2UVMesh> { struct Pos2UVMesh *x0; struct __shared_weak_count *x1; } x7; struct StencilManager { unsigned char x0; unsigned char x1; unsigned char x2; struct ClearItem { unsigned char x0; struct Matrix<float, 4, 1> { float x0[4]; } x1; BOOL x2; float x3; unsigned char x4; unsigned int x5; } x3; } x8; struct shared_ptr<ggl::Device> { struct Device *x0; struct __shared_weak_count *x1; } x9; struct Loader { struct unique_ptr<ggl::LoaderImpl, std::__1::default_delete<ggl::LoaderImpl> > { struct __compressed_pair<ggl::LoaderImpl *, std::__1::default_delete<ggl::LoaderImpl> > { struct LoaderImpl *x0; } x0; } x0; } x10; struct Loader *x11; double x12; BOOL x13; BOOL x14; BOOL x15; BOOL x16; struct Coordinate3D<Radians, double> { struct Unit<RadianUnitDescription, double> { double x0; } x0; struct Unit<RadianUnitDescription, double> { double x0; } x1; struct Unit<MeterUnitDescription, double> { double x0; } x2; } x17; float x18; struct View *x19; struct View *x20; struct Viewport *x21; struct ARContext *x22; unsigned long long x23; unsigned long long x24; struct unordered_map<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > > > > { struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > > > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::hash<unsigned long long>, true> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::equal_to<unsigned long long>, true> > { float x0; } x3; } x0; } x25; } *)a0;
- (void)layoutWithContext:(const struct LayoutContext { id x0; struct shared_ptr<gdc::Camera> { struct Camera *x0; struct __shared_weak_count *x1; } x1; unsigned char x2; struct VKEdgeInsets { float x0; float x1; float x2; float x3; } x3; struct VKEdgeInsets { float x0; float x1; float x2; float x3; } x4; struct shared_ptr<ggl::PolygonBase::MeshMesh> { struct MeshMesh *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<ggl::PolygonBase::MeshMesh> { struct MeshMesh *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<ggl::CommonMesh::Pos2UVMesh> { struct Pos2UVMesh *x0; struct __shared_weak_count *x1; } x7; struct StencilManager { unsigned char x0; unsigned char x1; unsigned char x2; struct ClearItem { unsigned char x0; struct Matrix<float, 4, 1> { float x0[4]; } x1; BOOL x2; float x3; unsigned char x4; unsigned int x5; } x3; } x8; struct shared_ptr<ggl::Device> { struct Device *x0; struct __shared_weak_count *x1; } x9; struct Loader { struct unique_ptr<ggl::LoaderImpl, std::__1::default_delete<ggl::LoaderImpl> > { struct __compressed_pair<ggl::LoaderImpl *, std::__1::default_delete<ggl::LoaderImpl> > { struct LoaderImpl *x0; } x0; } x0; } x10; struct Loader *x11; double x12; BOOL x13; BOOL x14; BOOL x15; BOOL x16; struct Coordinate3D<Radians, double> { struct Unit<RadianUnitDescription, double> { double x0; } x0; struct Unit<RadianUnitDescription, double> { double x0; } x1; struct Unit<MeterUnitDescription, double> { double x0; } x2; } x17; float x18; struct View *x19; struct View *x20; struct Viewport *x21; struct ARContext *x22; unsigned long long x23; unsigned long long x24; struct unordered_map<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > > > > { struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > > > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::hash<unsigned long long>, true> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::BaseObjectHolder, std::__1::default_delete<md::BaseObjectHolder> > >, std::__1::equal_to<unsigned long long>, true> > { float x0; } x3; } x0; } x25; } *)a0;
- (void)_beginMapZoomLevelTransition:(unsigned char)a0;
- (id)initWithTarget:(id)a0 renderer:(struct CartographicRenderer { void /* function */ **x0; struct shared_ptr<md::TaskContext> { struct TaskContext *x0; struct __shared_weak_count *x1; } x1; struct unique_ptr<md::PassList, std::__1::default_delete<md::PassList> > { struct __compressed_pair<md::PassList *, std::__1::default_delete<md::PassList> > { struct PassList *x0; } x0; } x2; struct unique_ptr<md::FrameGraphResourceRegistry, std::__1::default_delete<md::FrameGraphResourceRegistry> > { struct __compressed_pair<md::FrameGraphResourceRegistry *, std::__1::default_delete<md::FrameGraphResourceRegistry> > { struct FrameGraphResourceRegistry *x0; } x0; } x3; struct vector<std::__1::unique_ptr<md::RenderLayer, std::__1::default_delete<md::RenderLayer> >, std::__1::allocator<std::__1::unique_ptr<md::RenderLayer, std::__1::default_delete<md::RenderLayer> > > > { struct unique_ptr<md::RenderLayer, std::__1::default_delete<md::RenderLayer> > *x0; struct unique_ptr<md::RenderLayer, std::__1::default_delete<md::RenderLayer> > *x1; struct __compressed_pair<std::__1::unique_ptr<md::RenderLayer, std::__1::default_delete<md::RenderLayer> > *, std::__1::allocator<std::__1::unique_ptr<md::RenderLayer, std::__1::default_delete<md::RenderLayer> > > > { struct unique_ptr<md::RenderLayer, std::__1::default_delete<md::RenderLayer> > *x0; } x2; } x4; struct linear_map<md::CommandBufferLocation, md::RenderLayer *, std::__1::equal_to<md::CommandBufferLocation>, std::__1::allocator<std::__1::pair<md::CommandBufferLocation, md::RenderLayer *> >, std::__1::vector<std::__1::pair<md::CommandBufferLocation, md::RenderLayer *>, std::__1::allocator<std::__1::pair<md::CommandBufferLocation, md::RenderLayer *> > > > { struct vector<std::__1::pair<md::CommandBufferLocation, md::RenderLayer *>, std::__1::allocator<std::__1::pair<md::CommandBufferLocation, md::RenderLayer *> > > { struct pair<md::CommandBufferLocation, md::RenderLayer *> *x0; struct pair<md::CommandBufferLocation, md::RenderLayer *> *x1; struct __compressed_pair<std::__1::pair<md::CommandBufferLocation, md::RenderLayer *> *, std::__1::allocator<std::__1::pair<md::CommandBufferLocation, md::RenderLayer *> > > { struct pair<md::CommandBufferLocation, md::RenderLayer *> *x0; } x2; } x0; } x5; struct RunLoopController *x6; struct MapEngine *x7; id x8; } *)a1 taskContext:(struct shared_ptr<md::TaskContext> { struct TaskContext *x0; struct __shared_weak_count *x1; })a2 logicManager:(struct LogicManager { void /* function */ **x0; struct unordered_map<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > > > > { struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > > > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, std::__1::hash<unsigned long long>, true> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<md::LogicBase, std::__1::default_delete<md::LogicBase> > >, std::__1::equal_to<unsigned long long>, true> > { float x0; } x3; } x0; } x1; struct vector<md::LogicBase *, std::__1::allocator<md::LogicBase *> > { struct LogicBase **x0; struct LogicBase **x1; struct __compressed_pair<md::LogicBase **, std::__1::allocator<md::LogicBase *> > { struct LogicBase **x0; } x2; } x2[3]; } *)a3 mapEngineSettings:(const struct MapEngineSettings { struct linear_map<md::MapEngineSetting, long long, std::__1::equal_to<md::MapEngineSetting>, std::__1::allocator<std::__1::pair<md::MapEngineSetting, long long> >, std::__1::vector<std::__1::pair<md::MapEngineSetting, long long>, std::__1::allocator<std::__1::pair<md::MapEngineSetting, long long> > > > { struct vector<std::__1::pair<md::MapEngineSetting, long long>, std::__1::allocator<std::__1::pair<md::MapEngineSetting, long long> > > { struct pair<md::MapEngineSetting, long long> *x0; struct pair<md::MapEngineSetting, long long> *x1; struct __compressed_pair<std::__1::pair<md::MapEngineSetting, long long> *, std::__1::allocator<std::__1::pair<md::MapEngineSetting, long long> > > { struct pair<md::MapEngineSetting, long long> *x0; } x2; } x0; } x0; struct set<md::MapEngineSetting, std::__1::less<md::MapEngineSetting>, std::__1::allocator<md::MapEngineSetting> > { struct __tree<md::MapEngineSetting, std::__1::less<md::MapEngineSetting>, std::__1::allocator<md::MapEngineSetting> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<md::MapEngineSetting, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<md::MapEngineSetting> > { unsigned long long x0; } x2; } x0; } x1; struct RunLoopController *x2; } *)a4 animationRunner:(struct AnimationRunner { struct MapEngine *x0; } *)a5;
- (id).cxx_construct;
- (void)setShowingOuterHaloOnLabelsDidChange:(BOOL)a0;
- (void)setStyleManager:(struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> *x0; struct __shared_weak_count *x1; })a0 forRealistic:(BOOL)a1;
- (void)_setStyleManagerFromMapType:(int)a0;
- (void)_mapZoomLevelDidChange:(unsigned char)a0;
- (double)northYaw;
- (void)reloadStylesheet;
- (id)navigationPuck;

@end
