@class NSString, PLEntryNotificationOperatorComposition, NSDate, PLCFNotificationOperatorComposition;

@interface PLWifiAgent : PLAgent

@property (readonly) PLCFNotificationOperatorComposition *notificationWiFiChanged;
@property (nonatomic) struct __WiFiManagerClient { } *wifiManager;
@property (nonatomic) struct __WiFiDeviceClient { } *wifiDevice;
@property (nonatomic) struct __WiFiDeviceClient { } *wifiAwdlDevice;
@property (nonatomic) struct __WiFiDeviceClient { } *wifiHotspotDevice;
@property (retain) PLEntryNotificationOperatorComposition *batteryLevelChanged;
@property (retain) PLEntryNotificationOperatorComposition *sbcLevelChanged;
@property (retain) PLEntryNotificationOperatorComposition *deviceWake;
@property unsigned long long lastLoggedTimestamp;
@property unsigned long long locationScanDuration;
@property unsigned long long pipelineScanDuration;
@property unsigned long long autoJoinScanDuration;
@property unsigned long long setupScanDuration;
@property unsigned long long unknownScanDuration;
@property (readonly) NSString *wifiChipset;
@property (readonly) NSString *wifiManufacturer;
@property unsigned long long remainingAllowedRSSIEntryCount;
@property double wifi_segment_power_data;
@property double wifi_segment_power_idle;
@property double wifi_segment_power_location;
@property double wifi_segment_power_pipeline;
@property (retain) NSDate *wifi_segment_lastWrittenDate;
@property double wifi_segment_lastWrittenTimestamp;
@property (retain) NSDate *wifi_segment_date;
@property double wifi_segment_timestamp;

+ (id)entryEventForwardDefinitionPowerState;
+ (void)load;
+ (BOOL)isBeaconLoggingEnabled;
+ (id)entryEventForwardDefinitionHotspotState;
+ (id)entryEventBackwardDefinitionDiffBasic;
+ (id)entryEventForwardDefinitionAWDLState;
+ (id)entryEventBackwardDefinitionCumulativeBasicMac;
+ (id)entryEventBackwardDefinitionHotspotPowerStats;
+ (id)entryEventBackwardDefinitionCumulativeBasic;
+ (id)entryEventForwardDefinitionModuleInfo;
+ (id)entryEventPointDefinitionWake;
+ (id)entryEventPointDefinitions;
+ (id)entryEventBackwardDefinitions;
+ (id)entryEventPointDefinitionJoin;
+ (id)entryEventBackwardDefinitionBeaconProfile;
+ (id)entryEventBackwardDefinitionUserScan;
+ (id)entryEventForwardDefinitionWifiAssist;
+ (id)entryEventForwardDefinitionRSSI;
+ (BOOL)isNonUDMMac;
+ (id)entryEventBackwardDefinitionCumulativeMultiCore;
+ (id)entryEventForwardDefinitions;
+ (id)entryEventNoneDefinitions;

- (id)wifiChipsetQuery;
- (id)init;
- (void)writeModeledPower;
- (void)logFromLinkChangeCallback:(id)a0 withStats:(id)a1;
- (BOOL)isWowEnabled;
- (void)logEventBackwardWifiPropertiesMac:(id)a0 withNetworkProperties:(id)a1;
- (void)logFromAJCallback:(id)a0 withFlag:(unsigned char)a1 withStats:(id)a2;
- (void)logEventPointWakeLink:(id)a0 withParams:(id)a1 toEntry:(id)a2;
- (void).cxx_destruct;
- (void)logEventPointWakePNO:(id)a0 withParams:(id)a1 toEntry:(id)a2;
- (void)logEventPointWake;
- (void)findWifiDevice;
- (void)logEventForwardAWDLState:(id)a0;
- (void)logEventBackwardCumulativeProperties;
- (void)log;
- (void)logEventForwardRSSI:(id)a0;
- (BOOL)isWiFiPowered;
- (id)decodeWifiEventLinkReason:(unsigned int)a0;
- (void)logEventPointJoin:(unsigned char)a0 withStats:(id)a1;
- (void)logEventBackwardWifiProperties:(id)a0 withNetworkProperties:(id)a1 shallModelPower:(BOOL)a2;
- (void)logEventPointWakeDataFrame:(id)a0 withParams:(id)a1 toEntry:(id)a2;
- (void)logFromWiFiNoAvailableCallback:(id)a0 withAvailability:(BOOL)a1;
- (void)setWiFiAWDLDevice:(struct __WiFiDeviceClient { } *)a0;
- (BOOL)isWowSupported;
- (id)wifiManufacturerQuery;
- (void)logEventBackwardUserScanDuration;
- (void)updateEventBackwardUserScanDuration:(id)a0;
- (void)logEventForwardWifiAssist:(BOOL)a0;
- (void)modelWiFiSegmentPower:(id)a0 withDataPower:(double)a1 withIdlePower:(double)a2 withLocationPower:(double)a3 withPipelinePower:(double)a4 withTotalDuration:(double)a5;
- (void)logEventBackwardDiffProperties;
- (unsigned long long)getCurrentChannelWidth:(struct __WiFiNetwork { } *)a0;
- (void)logEventForwardHotspotState:(id)a0;
- (void)modelWiFiPower:(id)a0;
- (void)logEventForwardModuleInfo;
- (void)logEventForwardPowerState:(BOOL)a0;
- (void)logEventBackwardWifiProperties:(BOOL)a0;
- (void)setWiFiHotspotDevice:(struct __WiFiDeviceClient { } *)a0;
- (void)initOperatorDependancies;
- (BOOL)hasWiFi;
- (void)logEventBackwardWifiPropertiesMac:(BOOL)a0;

@end
