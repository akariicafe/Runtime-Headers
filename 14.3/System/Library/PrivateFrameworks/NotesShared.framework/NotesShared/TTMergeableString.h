@class NSHashTable, NSString, TTVectorMultiTimestamp, NSUUID, CRTTCompatibleDocument, NSMutableAttributedString, NSObject;
@protocol TTMergeableStringDelegate;

@interface TTMergeableString : NSObject <CRDataType> {
    struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **__begin_; struct TopoSubstring **__end_; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **__value_; } __end_cap_; } _startNodes;
    struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **__begin_; struct TopoSubstring **__end_; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **__value_; } __end_cap_; } _endNodes;
    struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **__begin_; struct TopoSubstring **__end_; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **__value_; } __end_cap_; } _orderedSubstrings;
    unsigned int _unserializedClock;
    unsigned long long _editCount;
    BOOL _cacheInvalid;
    id /* block */ _updateRangeBlock;
}

@property (retain, nonatomic) CRTTCompatibleDocument *document;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) TTVectorMultiTimestamp *timestamp;
@property (nonatomic) BOOL hasLocalChanges;
@property (retain, nonatomic) NSUUID *replicaUUID;
@property (retain, nonatomic) NSMutableAttributedString *attributedString;
@property (readonly, nonatomic) unsigned long long replicaTextClock;
@property (readonly, nonatomic) unsigned long long replicaStyleClock;
@property (weak, nonatomic) NSObject<TTMergeableStringDelegate> *delegate;
@property (readonly, nonatomic) NSHashTable *objectsNeedingUpdatedRanges;

+ (id)unserialisedReplicaID;

- (void)invalidateCache;
- (void)replaceCharactersInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 withAttributedString:(id)a1;
- (unsigned long long)length;
- (id)serialize;
- (void)insertAttributedString:(id)a0 atIndex:(unsigned long long)a1;
- (id)initWithReplicaID:(id)a0 asFragment:(BOOL)a1;
- (id)initWithArchive:(const struct String { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; unsigned int x2[1]; int x3; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x4; struct RepeatedPtrField<topotext::Substring> { void **x0; int x1; int x2; int x3; } x5; struct VectorTimestamp *x6; struct RepeatedPtrField<topotext::AttributeRun> { void **x0; int x1; int x2; int x3; } x7; struct RepeatedPtrField<topotext::Attachment> { void **x0; int x1; int x2; int x3; } x8; } *)a0 andReplicaID:(id)a1;
- (void)getSubstrings:(struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } *)a0 forCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)deleteSubstrings:(struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } *)a0 withCharacterRanges:(struct vector<_NSRange, std::__1::allocator<_NSRange> > { struct _NSRange *x0; struct _NSRange *x1; struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange> > { struct _NSRange *x0; } x2; } *)a1;
- (struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } *)orderedSubstrings;
- (struct TopoSubstring { struct TopoIDRange { struct TopoID { id x0; unsigned int x1; } x0; unsigned int x1; } x0; struct TopoID { id x0; unsigned int x1; } x1; unsigned int x2; BOOL x3; struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } x4; unsigned int x5; } *)splitTopoSubstring:(struct TopoSubstring { struct TopoIDRange { struct TopoID { id x0; unsigned int x1; } x0; unsigned int x1; } x0; struct TopoID { id x0; unsigned int x1; } x1; unsigned int x2; BOOL x3; struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } x4; unsigned int x5; } *)a0 atIndex:(unsigned int)a1;
- (struct TopoIDRange { struct TopoID { id x0; unsigned int x1; } x0; unsigned int x1; })insertAttributedString:(id)a0 after:(struct TopoSubstring { struct TopoIDRange { struct TopoID { id x0; unsigned int x1; } x0; unsigned int x1; } x0; struct TopoID { id x0; unsigned int x1; } x1; unsigned int x2; BOOL x3; struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } x4; unsigned int x5; } *)a1 before:(struct TopoSubstring { struct TopoIDRange { struct TopoID { id x0; unsigned int x1; } x0; unsigned int x1; } x0; struct TopoID { id x0; unsigned int x1; } x1; unsigned int x2; BOOL x3; struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } x4; unsigned int x5; } *)a2;
- (void)updateClock;
- (id)selectionForCharacterRanges:(id)a0 selectionAffinity:(unsigned long long)a1;
- (id)characterRangesForSelection:(id)a0 selectedSubstringsBlock:(id /* block */)a1;
- (void)updateSubstringIndexes;
- (void)getSubstrings:(struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } *)a0 inOrderedSubstrings:(struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } *)a1 forCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (long long)substring:(struct TopoSubstring { struct TopoIDRange { struct TopoID { id x0; unsigned int x1; } x0; unsigned int x1; } x0; struct TopoID { id x0; unsigned int x1; } x1; unsigned int x2; BOOL x3; struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } x4; unsigned int x5; } *)a0 modifiedAfter:(id)a1;
- (BOOL)textEitherSideOfSelectionAnchor:(struct TopoID { id x0; unsigned int x1; })a0 wasModifiedAfter:(id)a1;
- (BOOL)isFragment;
- (void)updateTopoIDRange:(struct TopoIDRange { struct TopoID { id x0; unsigned int x1; } x0; unsigned int x1; })a0 toNewRangeID:(struct TopoIDRange { struct TopoID { id x0; unsigned int x1; } x0; unsigned int x1; })a1;
- (void)traverseUnordered:(id /* block */)a0;
- (struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } *)startNodes;
- (BOOL)check:(id *)a0;
- (void)generateIdsForLocalChangesSafeForSharedTimestamp:(BOOL)a0;
- (void)cleanupObjectsNeedingUpdatedRanges;
- (void)dumpMergeData:(id)a0;
- (void)checkTimestampLogStyleErrors:(BOOL)a0;
- (BOOL)canMergeString:(id)a0;
- (void)sortSplitNodes;
- (BOOL)graphIsEqual:(id)a0;
- (void)updateAttributedStringAfterMerge;
- (id)replicaUUIDForCharacterAtIndex:(unsigned long long)a0;
- (id)selectionForCharacterRanges:(id)a0;
- (id)characterRangesForSelection:(id)a0;
- (void)resetLocalReplicaClocksToTimestampValues;
- (void)_testSetTextTimestamp:(unsigned long long)a0;
- (void)updateTimestampsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)dotDescription:(unsigned long long)a0;
- (void)moveRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 toIndex:(unsigned long long)a1;
- (struct TopoSubstring { struct TopoIDRange { struct TopoID { id x0; unsigned int x1; } x0; unsigned int x1; } x0; struct TopoID { id x0; unsigned int x1; } x1; unsigned int x2; BOOL x3; struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } x4; unsigned int x5; } *)getSubstringBeforeTopoID:(struct TopoID { id x0; unsigned int x1; })a0;
- (void)getSubstrings:(struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } *)a0 forTopoIDRange:(struct TopoIDRange { struct TopoID { id x0; unsigned int x1; } x0; unsigned int x1; })a1;
- (void)getCharacterRanges:(struct vector<_NSRange, std::__1::allocator<_NSRange> > { struct _NSRange *x0; struct _NSRange *x1; struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange> > { struct _NSRange *x0; } x2; } *)a0 forSubstrings:(struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } *)a1;
- (unsigned long long)getCharacterIndexForCharID:(struct TopoID { id x0; unsigned int x1; })a0;
- (void)enumerateSubstrings:(id /* block */)a0;
- (BOOL)selection:(id)a0 wasModifiedAfter:(id)a1;
- (unsigned long long)mergeWithString:(id)a0;
- (id)init;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (long long)substring:(struct TopoSubstring { struct TopoIDRange { struct TopoID { id x0; unsigned int x1; } x0; unsigned int x1; } x0; struct TopoID { id x0; unsigned int x1; } x1; unsigned int x2; BOOL x3; struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } x4; unsigned int x5; } *)a0 modifiedAfter:(id)a1 includeAttributes:(BOOL)a2;
- (void)enumerateHighlightableRangesModifiedAfter:(id)a0 includingAttributes:(BOOL)a1 usingBlock:(id /* block */)a2;
- (id)initWithArchive:(const struct String { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; unsigned int x2[1]; int x3; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x4; struct RepeatedPtrField<topotext::Substring> { void **x0; int x1; int x2; int x3; } x5; struct VectorTimestamp *x6; struct RepeatedPtrField<topotext::AttributeRun> { void **x0; int x1; int x2; int x3; } x7; struct RepeatedPtrField<topotext::Attachment> { void **x0; int x1; int x2; int x3; } x8; } *)a0 andReplicaID:(id)a1 withOrderedSubstrings:(struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } *)a2 timestamp:(id)a3;
- (id)i_saveDeltasSinceTimestamp:(id)a0 toArchive:(struct String { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; unsigned int x2[1]; int x3; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x4; struct RepeatedPtrField<topotext::Substring> { void **x0; int x1; int x2; int x3; } x5; struct VectorTimestamp *x6; struct RepeatedPtrField<topotext::AttributeRun> { void **x0; int x1; int x2; int x3; } x7; struct RepeatedPtrField<topotext::Attachment> { void **x0; int x1; int x2; int x3; } x8; } *)a1;
- (void)saveDeltaSinceTimestamp:(id)a0 toArchive:(struct String { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; unsigned int x2[1]; int x3; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x4; struct RepeatedPtrField<topotext::Substring> { void **x0; int x1; int x2; int x3; } x5; struct VectorTimestamp *x6; struct RepeatedPtrField<topotext::AttributeRun> { void **x0; int x1; int x2; int x3; } x7; struct RepeatedPtrField<topotext::Attachment> { void **x0; int x1; int x2; int x3; } x8; } *)a1;
- (void)dealloc;
- (id)tombstone;
- (void)insertString:(id)a0 atIndex:(unsigned long long)a1;
- (void)deleteCharactersInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)replaceCharactersInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 withString:(id)a1;
- (id)string;
- (id)deltaSince:(id)a0 in:(id)a1;
- (void)updateCache;
- (void)mergeWith:(id)a0;
- (id)initWithArchive:(const struct String { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; unsigned int x2[1]; int x3; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x4; struct RepeatedPtrField<topotext::Substring> { void **x0; int x1; int x2; int x3; } x5; struct VectorTimestamp *x6; struct RepeatedPtrField<topotext::AttributeRun> { void **x0; int x1; int x2; int x3; } x7; struct RepeatedPtrField<topotext::Attachment> { void **x0; int x1; int x2; int x3; } x8; } *)a0 andReplicaID:(id)a1 withOrderedSubstrings:(struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } *)a2;
- (void)saveSubstrings:(struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } *)a0 archiveSet:(struct unordered_set<TopoSubstring *, std::__1::hash<TopoSubstring *>, std::__1::equal_to<TopoSubstring *>, std::__1::allocator<TopoSubstring *> > { struct __hash_table<TopoSubstring *, std::__1::hash<TopoSubstring *>, std::__1::equal_to<TopoSubstring *>, std::__1::allocator<TopoSubstring *> > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *>, std::__1::allocator<std::__1::__hash_node<TopoSubstring *, void *> > > { struct __hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> { struct __hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::hash<TopoSubstring *> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::equal_to<TopoSubstring *> > { float x0; } x3; } x0; } *)a1 linkSet:(struct unordered_set<TopoSubstring *, std::__1::hash<TopoSubstring *>, std::__1::equal_to<TopoSubstring *>, std::__1::allocator<TopoSubstring *> > { struct __hash_table<TopoSubstring *, std::__1::hash<TopoSubstring *>, std::__1::equal_to<TopoSubstring *>, std::__1::allocator<TopoSubstring *> > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *>, std::__1::allocator<std::__1::__hash_node<TopoSubstring *, void *> > > { struct __hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> { struct __hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::hash<TopoSubstring *> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::equal_to<TopoSubstring *> > { float x0; } x3; } x0; } *)a2 archivedString:(id *)a3 toArchive:(struct String { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; unsigned int x2[1]; int x3; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x4; struct RepeatedPtrField<topotext::Substring> { void **x0; int x1; int x2; int x3; } x5; struct VectorTimestamp *x6; struct RepeatedPtrField<topotext::AttributeRun> { void **x0; int x1; int x2; int x3; } x7; struct RepeatedPtrField<topotext::Attachment> { void **x0; int x1; int x2; int x3; } x8; } *)a4;
- (id)serializeDeltaSinceTimestamp:(id)a0;
- (void)coalesce;
- (id).cxx_construct;
- (BOOL)isEqual:(id)a0;
- (void)realizeLocalChangesIn:(id)a0;
- (void)endEditing;
- (id)initWithReplicaID:(id)a0;
- (id)initWithData:(id)a0 andReplicaID:(id)a1;
- (struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; struct TopoSubstring **x1; struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> > { struct TopoSubstring **x0; } x2; } *)endNodes;
- (void)dumpData;
- (void)generateIdsForLocalChanges;
- (void)walkGraph:(id /* block */)a0;
- (unsigned long long)mergeWithString:(id)a0 mergeTimestamps:(BOOL)a1;
- (void)beginEditing;
- (id)initWithArchive:(const struct String { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; unsigned int x2[1]; int x3; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x4; struct RepeatedPtrField<topotext::Substring> { void **x0; int x1; int x2; int x3; } x5; struct VectorTimestamp *x6; struct RepeatedPtrField<topotext::AttributeRun> { void **x0; int x1; int x2; int x3; } x7; struct RepeatedPtrField<topotext::Attachment> { void **x0; int x1; int x2; int x3; } x8; } *)a0 andReplicaID:(id)a1 andSharedTimestamp:(id)a2;
- (void)saveToArchive:(struct String { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; unsigned int x2[1]; int x3; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x4; struct RepeatedPtrField<topotext::Substring> { void **x0; int x1; int x2; int x3; } x5; struct VectorTimestamp *x6; struct RepeatedPtrField<topotext::AttributeRun> { void **x0; int x1; int x2; int x3; } x7; struct RepeatedPtrField<topotext::Attachment> { void **x0; int x1; int x2; int x3; } x8; } *)a0;

@end
