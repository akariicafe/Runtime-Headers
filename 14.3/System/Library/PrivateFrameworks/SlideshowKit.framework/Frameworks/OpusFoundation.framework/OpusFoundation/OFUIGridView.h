@class OFUIGridViewController, NSString, UIPinchGestureRecognizer, OFUIGridViewCell, NSMutableArray;
@protocol OFUIGridViewDataSource, OFUIGridViewDragging, OFUIWindowDraggingSource, OFUIGridViewDelegate;

@interface OFUIGridView : OFUIScrollView <OFUIWindowDraggingDestination, OFUIWindowDraggingSource, OFUIWindowDraggingAutoscroll, UIGestureRecognizerDelegate> {
    unsigned long long _numberOfCellsPerRow;
    double _cellSpacePadding;
    unsigned long long _visibleIndexBegin;
    unsigned long long _visibleIndexEnd;
    NSMutableArray *_displayedCells;
    NSMutableArray *_recycledCells;
    BOOL _dirtyLayout;
    UIPinchGestureRecognizer *_liveResizingPinchGestureRecognizer;
    struct CGSize { double width; double height; } _cellSizeBeforeLiveResizing;
    struct CGPoint { double x; double y; } _fastPanningLastTranslation;
    OFUIGridViewCell *_lastCellUpdatedForMerge;
}

@property (nonatomic) BOOL isLiveResizing;
@property (nonatomic) long long draggingDestinationIndex;
@property (nonatomic) BOOL isFastPanning;
@property (nonatomic) OFUIGridViewController *gridViewController;
@property (readonly, nonatomic) unsigned long long numberOfCells;
@property (nonatomic) double percentageScrolledToRestore;
@property (nonatomic) BOOL canUpdateCells;
@property (nonatomic) unsigned long long orientation;
@property (nonatomic) struct CGSize { double width; double height; } cellSize;
@property (nonatomic) struct CGSize { double width; double height; } minCellSize;
@property (nonatomic) struct CGSize { double width; double height; } maxCellSize;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } borderInset;
@property (nonatomic) double minimumCellSpacePadding;
@property (nonatomic) unsigned long long numberOfCachedPages;
@property (nonatomic) id<OFUIGridViewDataSource> dataSource;
@property (nonatomic) id<OFUIGridViewDelegate> gridViewDelegate;
@property (nonatomic, getter=isEditing) BOOL editing;
@property (nonatomic) id<OFUIWindowDraggingSource, OFUIGridViewDragging> draggingSource;
@property (nonatomic) long long draggingDestinationCount;
@property (readonly, nonatomic) BOOL isDraggingIn;
@property (nonatomic) BOOL allowLiveResizing;
@property (nonatomic) BOOL allowAutoscroll;
@property (nonatomic) BOOL allowFastPanning;
@property (nonatomic) BOOL allowSelectAll;
@property (nonatomic) BOOL allowContinuousSelection;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)reloadData;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_layoutSubviews;
- (void)setEditing:(BOOL)a0 animated:(BOOL)a1;
- (void)commonInit;
- (void)dealloc;
- (void)_updateContentSize;
- (id)initWithCoder:(id)a0;
- (void)forceLayout;
- (id)visibleCells;
- (void)handlePan:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)gestureRecognizerShouldBegin:(id)a0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)dequeueReusableCellWithIdentifier:(id)a0;
- (void)_updateCells;
- (id)cellAtIndex:(unsigned long long)a0;
- (struct CGPoint { double x0; double x1; })draggingSource:(id)a0 badgeCenterForItem:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })draggingSource:(id)a0 originalFrameForItem:(id)a1;
- (void)draggingSource:(id)a0 prepareItem:(id)a1;
- (void)draggingSource:(id)a0 cleanupItem:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })draggingDestination:(id)a0 originalFrameForItem:(id)a1;
- (unsigned long long)draggingDestinationEntered:(id)a0;
- (unsigned long long)draggingDestinationUpdated:(id)a0;
- (void)draggingDestinationExited:(id)a0;
- (BOOL)prepareForDragOperation:(id)a0;
- (BOOL)performDragOperation:(id)a0;
- (void)concludeDragOperation:(id)a0;
- (void)draggingDestinationEnded:(id)a0 cancelled:(BOOL)a1;
- (float)autoscrollDistance:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)autoscroll:(float)a0;
- (BOOL)canAutoscroll;
- (void)prepareForUnloading;
- (void)updateLayout:(BOOL)a0;
- (id)displayedCells;
- (BOOL)isCellVisible:(id)a0;
- (void)handleLiveResizingPinchGesture:(id)a0;
- (void)cleanupDisplayedCells;
- (struct CGPoint { double x0; double x1; })_cellPositionAtIndex:(long long)a0;
- (struct CGSize { double x0; double x1; })_cellSizeAtIndex:(long long)a0;
- (struct CGSize { double x0; double x1; })_bestContentSize;
- (long long)_indexAtPosition:(struct CGPoint { double x0; double x1; })a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_displayedCellsRange;
- (id)indexesForDisplayedCells;
- (BOOL)isFrameVisible:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)displayedCellWithItem:(id)a0;
- (void)deleteCellsAtIndexes:(id)a0 animated:(BOOL)a1;
- (BOOL)isFrameEntirelyVisible:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)insertCellsAtIndexes:(id)a0 animated:(BOOL)a1;
- (float)_autoscrollDistanceForProximityToEdge:(float)a0;
- (id)indexesForVisibleCells;
- (void)moveCellsAtIndexes:(id)a0 toIndexes:(id)a1 animated:(BOOL)a2;

@end
