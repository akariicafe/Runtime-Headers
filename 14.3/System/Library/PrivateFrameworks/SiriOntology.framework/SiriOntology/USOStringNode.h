@interface USOStringNode : USOEntityNode {
    struct UsoStringNode { void /* function */ **x0; struct UsoGraph *x1; unsigned long long x2; struct OntologyNodeName *x3; struct vector<std::__1::unique_ptr<siri::ontology::UsoIdentifier, std::__1::default_delete<siri::ontology::UsoIdentifier> >, std::__1::allocator<std::__1::unique_ptr<siri::ontology::UsoIdentifier, std::__1::default_delete<siri::ontology::UsoIdentifier> > > > { struct unique_ptr<siri::ontology::UsoIdentifier, std::__1::default_delete<siri::ontology::UsoIdentifier> > *x0; struct unique_ptr<siri::ontology::UsoIdentifier, std::__1::default_delete<siri::ontology::UsoIdentifier> > *x1; struct __compressed_pair<std::__1::unique_ptr<siri::ontology::UsoIdentifier, std::__1::default_delete<siri::ontology::UsoIdentifier> > *, std::__1::allocator<std::__1::unique_ptr<siri::ontology::UsoIdentifier, std::__1::default_delete<siri::ontology::UsoIdentifier> > > > { struct unique_ptr<siri::ontology::UsoIdentifier, std::__1::default_delete<siri::ontology::UsoIdentifier> > *x0; } x2; } x4; struct unique_ptr<siri::ontology::UsoUtteranceAlignment, std::__1::default_delete<siri::ontology::UsoUtteranceAlignment> > { struct __compressed_pair<siri::ontology::UsoUtteranceAlignment *, std::__1::default_delete<siri::ontology::UsoUtteranceAlignment> > { struct UsoUtteranceAlignment *x0; } x0; } x5; struct optional<std::__1::basic_string<char> > { union { char x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; } x0; BOOL x1; } x6; } *_usoStringNode;
}

- (id)initWithCppStringNode:(struct UsoStringNode { void /* function */ **x0; struct UsoGraph *x1; unsigned long long x2; struct OntologyNodeName *x3; struct vector<std::__1::unique_ptr<siri::ontology::UsoIdentifier, std::__1::default_delete<siri::ontology::UsoIdentifier> >, std::__1::allocator<std::__1::unique_ptr<siri::ontology::UsoIdentifier, std::__1::default_delete<siri::ontology::UsoIdentifier> > > > { struct unique_ptr<siri::ontology::UsoIdentifier, std::__1::default_delete<siri::ontology::UsoIdentifier> > *x0; struct unique_ptr<siri::ontology::UsoIdentifier, std::__1::default_delete<siri::ontology::UsoIdentifier> > *x1; struct __compressed_pair<std::__1::unique_ptr<siri::ontology::UsoIdentifier, std::__1::default_delete<siri::ontology::UsoIdentifier> > *, std::__1::allocator<std::__1::unique_ptr<siri::ontology::UsoIdentifier, std::__1::default_delete<siri::ontology::UsoIdentifier> > > > { struct unique_ptr<siri::ontology::UsoIdentifier, std::__1::default_delete<siri::ontology::UsoIdentifier> > *x0; } x2; } x4; struct unique_ptr<siri::ontology::UsoUtteranceAlignment, std::__1::default_delete<siri::ontology::UsoUtteranceAlignment> > { struct __compressed_pair<siri::ontology::UsoUtteranceAlignment *, std::__1::default_delete<siri::ontology::UsoUtteranceAlignment> > { struct UsoUtteranceAlignment *x0; } x0; } x5; struct optional<std::__1::basic_string<char> > { union { char x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; } x0; BOOL x1; } x6; } *)a0;

@end
