@class IDSService, NSString, NSMutableDictionary, NSArray, NACEventThrottler, NSObject, NACRunAssertion;
@protocol OS_dispatch_queue;

@interface NACIDSServer : NSObject <NACVolumeControllerDelegate, IDSServiceDelegate, MPVolumeControllerDelegate, MPAVRoutingControllerDelegate> {
    NACRunAssertion *_systemVolumeRunAssertion;
    NACRunAssertion *_proxyVolumeRunAssertion;
    NSMutableDictionary *_systemVolumeObservers;
    NSMutableDictionary *_proxyVolumeObservers;
    NSMutableDictionary *_routesObservers;
    NSMutableDictionary *_messageRecords;
    NSArray *_volumeAudioCategories;
    IDSService *_idsService;
    NSObject<OS_dispatch_queue> *_serialQueue;
    BOOL _shouldPickRouteAfterFetching;
    BOOL _shouldObserveSystemMutedState;
    BOOL _isSystemMuted;
    int _systemMuteToken;
    BOOL _shouldObserveHapticState;
    BOOL _prominentHapticEnabled;
    float _hapticIntensity;
    long long _hapticState;
    NACEventThrottler *_hapticThrottler;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)routingControllerAvailableRoutesDidChange:(id)a0;
- (void)service:(id)a0 account:(id)a1 identifier:(id)a2 didSendWithSuccess:(BOOL)a3 error:(id)a4;
- (void).cxx_destruct;
- (void)dealloc;
- (void)volumeController:(id)a0 mutedStateDidChange:(BOOL)a1;
- (void)volumeController:(id)a0 volumeValueDidChange:(float)a1;
- (void)volumeController:(id)a0 volumeWarningStateDidChange:(long long)a1;
- (void)volumeController:(id)a0 volumeControlAvailableDidChange:(BOOL)a1;
- (void)volumeController:(id)a0 EUVolumeLimitDidChange:(float)a1;
- (id)initWithVolumeAudioCategories:(id)a0;
- (void)beginObservingHapticState;
- (void)beginObservingSystemMutedState;
- (void)_handleSetVolume:(id)a0;
- (void)_handleSetMuted:(id)a0;
- (void)_handleBeginObservingVolume:(id)a0;
- (void)_handleEndObservingVolume:(id)a0;
- (void)_handleBeginObservingAudioRoutes:(id)a0;
- (void)_handleEndObservingAudioRoutes:(id)a0;
- (void)_handlePickAudioRoute:(id)a0;
- (void)_handleSetSystemMuted:(id)a0;
- (void)_handleSetHapticState:(id)a0;
- (void)_handleSetCurrentListeningMode:(id)a0;
- (void)_handleBeginObservingListeningModes:(id)a0;
- (void)_handleEndObservingListeningModes:(id)a0;
- (void)_handleSetHapticIntensity:(id)a0;
- (void)_handleSetProminentHapticEnabled:(id)a0;
- (void)_beginObservingSystemVolume;
- (void)_beginObservingHapticState;
- (void)_beginObservingSystemMutedState;
- (void)_handleBeginObservingSystemVolume;
- (void)_handleBeginObservingProxyVolumeForTarget:(id)a0;
- (void)_updateProminentHapticState;
- (id)_nacVolumeControllerForTarget:(id)a0 createIfNeeded:(BOOL)a1;
- (void)_sendAvailableListeningModes:(id)a0 currentListeningMode:(id)a1 error:(id)a2 forTarget:(id)a3;
- (void)_updateHapticState;
- (void)_cancelRouteObservationForCategory:(id)a0;
- (BOOL)_hasRequestedVolumeAtLeastOnce;
- (void)_setRequestedVolumeAtLeastOnce;
- (void)_sendCurrentObservingSystemVolumeValues;
- (void)_cancelSystemVolumeObservation;
- (void)_sendVolumeValue:(float)a0 forTarget:(id)a1;
- (void)_sendVolumeControlAvailability:(BOOL)a0 forTarget:(id)a1;
- (void)_sendVolumeWarningEnabled:(BOOL)a0 volumeWarningState:(long long)a1 forTarget:(id)a2;
- (void)_sendEUVolumeLimit:(float)a0 forTarget:(id)a1;
- (void)_hapticIntensityDidChangeNotification:(id)a0;
- (void)updateProminentHapticState;
- (void)_updateHapticIntensityValue;
- (void)_updateSystemMutedState;
- (void)_sendSystemMutedState:(BOOL)a0;
- (void)_sendHapticState:(long long)a0;
- (void)_beginObservingProxyVolumeForTarget:(id)a0 withEndpointRoute:(id)a1;
- (void)_cancelProxyVolumeObservationForTarget:(id)a0;
- (void)_sendMessage:(id)a0 type:(long long)a1 timeout:(double)a2 queueOne:(id)a3 retry:(BOOL)a4;
- (id)_targetForVolumeController:(id)a0;
- (void)_sendMutedState:(BOOL)a0 forTarget:(id)a1;
- (id)_targetForNACVolumeController:(id)a0;
- (BOOL)_shouldForceVolumeWarning;
- (void)volumeControllerDidUpdateAvailableListeningModes:(id)a0;
- (void)volumeControllerDidUpdateCurrentListeningMode:(id)a0;
- (void)volumeController:(id)a0 didFailToSetCurrentListeningModeWithError:(id)a1;

@end
