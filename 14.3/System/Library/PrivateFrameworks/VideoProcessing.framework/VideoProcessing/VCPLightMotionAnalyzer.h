@class NSObject;
@protocol OS_dispatch_queue;

@interface VCPLightMotionAnalyzer : VCPVideoAnalyzer {
    struct EncodeAnalysis { int x0; int x1; char *x2; struct __CVBuffer *x3; struct Translation { float x0; float x1; float x2; } x4; long long *x5; long long *x6; int *x7; int *x8; int *x9; struct Translation *x10; struct FrameBuffer *x11; struct EncodeStats *x12; float x13; float x14; struct MotionFieldAnalysis { struct EncodeStats *x0; float *x1; float *x2; char *x3; int x4; int x5; int x6; int x7; float x8; float x9; float x10; BOOL x11; BOOL x12; int *x13[2]; char *x14[2]; float *x15[2]; short *x16[2]; float *x17[2]; int x18[2]; int *x19[2]; float *x20[2]; float *x21[2]; struct map<int, CGRect, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CGRect> > > { struct __tree<std::__1::__value_type<int, CGRect>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CGRect>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CGRect> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CGRect>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CGRect>, std::__1::less<int>, true> > { unsigned long long x0; } x2; } x0; } x22; struct ObjectDetection { struct Vector<ma::Object *> { struct __CFArray *x0; } x0; struct MotionVector *x1; float *x2; int *x3; int *x4; int *x5; int x6; int x7; BOOL x8; } x23; struct ObjectTracking { struct Object { int x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; BOOL x4; float x5; float x6; float x7; float x8; BOOL x9; } x0; struct Object { int x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; BOOL x4; float x5; float x6; float x7; float x8; BOOL x9; } x1; BOOL x2; int x3; int x4; float *x5; float *x6; float *x7; float *x8; float *x9; float *x10; float *x11; long long x12; long long x13; float *x14; int x15; int x16; long long x17; int x18; struct Vector<ma::ObjectTracking::Expert *> { struct __CFArray *x0; } x19; BOOL x20; } x24; } x15; float x16[10]; struct { int x0; int x1; int x2; } x17; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x18; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x19; struct { long long x0; int x1; unsigned int x2; long long x3; } x20; float x21; int x22; float *x23; float *x24; BOOL x25; BOOL x26; long long x27; float x28; float x29; float x30; } *_encodeAnalysis;
    NSObject<OS_dispatch_queue> *_queue;
    struct Frame { int frame_idx_; struct { long long value; int timescale; unsigned int flags; long long epoch; } timestamp_; struct { long long value; int timescale; unsigned int flags; long long epoch; } duration_; struct Translation { float x_; float y_; float z_; } ave_motion_; struct Translation { float x_; float y_; float z_; } org_motion_; float quality_score_; unsigned long long distortion_; float distortion_norm_; struct Translation { float x_; float y_; float z_; } motion_change_; unsigned int compressed_bytes_; BOOL blur_; struct Translation { float x_; float y_; float z_; } acc_var_; float texture_; struct MotionResult { float significant_values_[6]; float confidence_[6]; float fine_action_score_; float action_score_; float track_score_; float rotation_angle_; float subtle_motion_score_; BOOL is_stable_; int action_blocks_; float action_motion_; BOOL valid_mb_; BOOL valid_submb_; int support_size_; float residual_var_; float gmv_[2]; struct { long long value; int timescale; unsigned int flags; long long epoch; } duration_; float scene_delta_; float scene_delta_ratio_; struct Vector<ma::Object *> { struct __CFArray *vector_; } objects_; struct Vector<ma::Object *> { struct __CFArray *vector_; } detect_objects_; struct Vector<ma::Object *> { struct __CFArray *vector_; } imported_objects_; } motion_result_; float interestingness_; float obstruction_; float colorfulness_score_; struct Histogram { float extremities_; float overexposes_; int *histogram_[3]; int *moments_hist_[2]; } histogram_; } _frame;
    struct EncodeStatsHW { void /* function */ **x0; BOOL *x1; BOOL *x2; struct MotionVector *x3; struct MotionVector *x4; unsigned short *x5; unsigned short *x6; unsigned int *x7; unsigned short *x8; unsigned short *x9; unsigned short *x10; unsigned short *x11; unsigned short *x12; unsigned short *x13; unsigned short *x14; unsigned short *x15; unsigned short *x16; unsigned short *x17; unsigned short *x18; unsigned int x19; BOOL x20; BOOL x21; BOOL x22; int x23; int x24; int x25; struct OpaqueVTCompressionSession *x26; struct __CFData *x27; struct { long long x0; int x1; unsigned int x2; long long x3; } x28; int x29; int x30; BOOL x31; } *_stats;
    float _cameraMotionParams[6][5];
    float _cameraMotionConfidences[6][5];
    unsigned long long _flags;
    BOOL _turbo;
}

@property (readonly) float actionScore;

+ (float)autoLiveMotionScore:(id)a0;

- (id)init;
- (void).cxx_destruct;
- (void)dealloc;
- (int)cameraMotionDetection:(struct MotionResult { float x0[6]; float x1[6]; float x2; float x3; float x4; float x5; float x6; BOOL x7; int x8; float x9; BOOL x10; BOOL x11; int x12; float x13; float x14[2]; struct { long long x0; int x1; unsigned int x2; long long x3; } x15; float x16; float x17; struct Vector<ma::Object *> { struct __CFArray *x0; } x18; struct Vector<ma::Object *> { struct __CFArray *x0; } x19; struct Vector<ma::Object *> { struct __CFArray *x0; } x20; } *)a0;
- (int)generateThresholds:(float[6])a0 withConfidences:(float[6])a1;
- (id)initWithQueue:(id)a0 turbo:(BOOL)a1;
- (int)prewarmWithWidth:(int)a0 height:(int)a1;
- (void)analyzeFrame:(struct __CVBuffer { } *)a0 withTimestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 andDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })a2 completion:(id /* block */)a3;
- (int)analyzeFrame:(struct __CVBuffer { } *)a0 withTimestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 andDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })a2 flags:(unsigned long long *)a3;
- (id).cxx_construct;

@end
