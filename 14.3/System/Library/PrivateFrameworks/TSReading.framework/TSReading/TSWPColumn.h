@class NSString, TSWPStorage;
@protocol TSWPStyleProvider;

@interface TSWPColumn : NSObject <TSWPOffscreenColumn> {
    struct shared_ptr<TSWPLineFragmentArray> { struct TSWPLineFragmentArray *__ptr_; struct __shared_weak_count *__cntrl_; } _lineFragmentArray;
    void *_paragraphAdornments;
}

@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } wpBounds;
@property (nonatomic) struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } transformFromWP;
@property (readonly, nonatomic) struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } transformToWP;
@property (nonatomic) unsigned long long startCharIndex;
@property (nonatomic) unsigned long long characterCount;
@property (nonatomic) unsigned long long startAnchoredCharIndex;
@property (nonatomic) unsigned long long anchoredCharCount;
@property (nonatomic) unsigned long long nextWidowPullsDownFromCharIndex;
@property (nonatomic) double contentBottom;
@property (nonatomic) double erasableContentBottom;
@property (nonatomic) int layoutResultFlags;
@property (nonatomic) unsigned long long columnIndex;
@property (nonatomic) unsigned long long pageNumber;
@property (nonatomic) unsigned long long scaleTextPercent;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } anchoredRange;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } range;
@property (retain, nonatomic) id<TSWPStyleProvider> styleProvider;
@property (nonatomic) BOOL textIsVertical;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } frameBounds;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } typographicBounds;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } typographicBoundsForCell;
@property (readonly, nonatomic) TSWPStorage *storage;
@property (readonly, nonatomic) unsigned long long countLines;
@property (readonly, nonatomic) double textBottom;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForSelection:(id)a0 withColumns:(id)a1;
+ (id)closestColumnInColumnsArray:(id)a0 forPoint:(struct CGPoint { double x0; double x1; })a1 ignoreEmptyColumns:(BOOL)a2 ignoreDrawableOnlyColumns:(BOOL)a3;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })caretRectForInsertionPoint:(id)a0 withColumns:(id)a1;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForSelection:(id)a0 withColumns:(id)a1 useParagraphModeRects:(BOOL)a2;
+ (id)columnForCharIndex:(unsigned long long)a0 eol:(BOOL)a1 withColumns:(id)a2;
+ (unsigned long long)charIndexForPoint:(struct CGPoint { double x0; double x1; })a0 inColumnsArray:(id)a1 allowPastBreak:(BOOL)a2 allowNotFound:(BOOL)a3 pastCenterGoesToNextChar:(BOOL)a4 isAtEndOfLine:(BOOL *)a5 leadingEdge:(BOOL *)a6;
+ (unsigned long long)charIndexForPoint:(struct CGPoint { double x0; double x1; })a0 inColumnsArray:(id)a1 allowPastBreak:(BOOL)a2 allowNotFound:(BOOL)a3 isAtEndOfLine:(BOOL *)a4 leadingEdge:(BOOL *)a5;
+ (unsigned long long)charIndexForTopicDragAtPoint:(struct CGPoint { double x0; double x1; })a0 inColumnsArray:(id)a1;
+ (id)smartFieldWithAttributeKind:(unsigned int)a0 inColumnArray:(id)a1 atPoint:(struct CGPoint { double x0; double x1; })a2;
+ (id)footnoteMarkAttachmentInColumnArray:(id)a0 atPoint:(struct CGPoint { double x0; double x1; })a1;
+ (id)footnoteReferenceAttachmentInColumnArray:(id)a0 atPoint:(struct CGPoint { double x0; double x1; })a1;
+ (id)pathForHighlightWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 columnArray:(id)a1 pathStyle:(int)a2;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundsRectForSelection:(id)a0 columnArray:(id)a1 includeRuby:(BOOL)a2;
+ (struct CGColor { } *)computeSingleColorWithColumns:(id)a0;

- (void).cxx_destruct;
- (struct CGSize { double x0; double x1; })maxSize;
- (double)textHeight;
- (void)dealloc;
- (id).cxx_construct;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundsOfLineFragmentAtIndex:(unsigned long long)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeOfLineFragmentAtIndex:(unsigned long long)a0;
- (id)rectsForSelection:(id)a0;
- (unsigned long long)lineIndexForCharIndex:(unsigned long long)a0 eol:(BOOL)a1;
- (id)rectsForSelectionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 selectionType:(int)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })glyphRectForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 includingLabel:(BOOL)a1;
- (double)topOfLineAtCharIndex:(unsigned long long)a0;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; double x1; double x2; double x3; double x4; })lineMetricsAtCharIndex:(unsigned long long)a0 allowEndOfLine:(BOOL)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })columnRectForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)setStorage:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (unsigned long long)charIndexForSelectionFromPoint:(struct CGPoint { double x0; double x1; })a0 isTail:(BOOL)a1;
- (const struct TSWPLineFragment { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned int x3; double x4; double x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; struct { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; } x8; struct TSWPListLabel *x9; id x10; struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; struct TSWPLineRef *x1; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; } x2; } x11; double x12; struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; struct TSWPLineRef *x1; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; } x2; } x13; struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; struct TSWPLineRef *x1; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; } x2; } x14; struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; struct TSWPAdornmentLine *x1; struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; } x2; } x15; struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; struct TSWPAdornmentLine *x1; struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; } x2; } x16; struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; struct TSWPAdornmentLine *x1; struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; } x2; } x17; struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; struct TSWPAdornmentLine *x1; struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; } x2; } x18; struct vector<TSWPUIAttachmentData, std::__1::allocator<TSWPUIAttachmentData> > { struct TSWPUIAttachmentData *x0; struct TSWPUIAttachmentData *x1; struct __compressed_pair<TSWPUIAttachmentData *, std::__1::allocator<TSWPUIAttachmentData> > { struct TSWPUIAttachmentData *x0; } x2; } x19; struct TSWPTypesettingState *x20; double x21; double x22; double x23; id x24; id x25; struct vector<TSWPAdornments, std::__1::allocator<TSWPAdornments> > { struct TSWPAdornments *x0; struct TSWPAdornments *x1; struct __compressed_pair<TSWPAdornments *, std::__1::allocator<TSWPAdornments> > { struct TSWPAdornments *x0; } x2; } x26; struct TSWPAdornmentLine *x27; id x28; unsigned int x29; struct vector<TSWPLFCharIndexData, std::__1::allocator<TSWPLFCharIndexData> > { struct *x0; struct *x1; struct __compressed_pair<TSWPLFCharIndexData *, std::__1::allocator<TSWPLFCharIndexData> > { struct *x0; } x2; } x30; id x31; double x32; id x33; struct CGColor *x34; double x35; unsigned short x36; } *)lineFragmentForCharIndex:(unsigned long long)a0 knobTag:(unsigned long long)a1 selectionType:(int)a2;
- (const struct TSWPLineFragment { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned int x3; double x4; double x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; struct { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; } x8; struct TSWPListLabel *x9; id x10; struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; struct TSWPLineRef *x1; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; } x2; } x11; double x12; struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; struct TSWPLineRef *x1; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; } x2; } x13; struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; struct TSWPLineRef *x1; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; } x2; } x14; struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; struct TSWPAdornmentLine *x1; struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; } x2; } x15; struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; struct TSWPAdornmentLine *x1; struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; } x2; } x16; struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; struct TSWPAdornmentLine *x1; struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; } x2; } x17; struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; struct TSWPAdornmentLine *x1; struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; } x2; } x18; struct vector<TSWPUIAttachmentData, std::__1::allocator<TSWPUIAttachmentData> > { struct TSWPUIAttachmentData *x0; struct TSWPUIAttachmentData *x1; struct __compressed_pair<TSWPUIAttachmentData *, std::__1::allocator<TSWPUIAttachmentData> > { struct TSWPUIAttachmentData *x0; } x2; } x19; struct TSWPTypesettingState *x20; double x21; double x22; double x23; id x24; id x25; struct vector<TSWPAdornments, std::__1::allocator<TSWPAdornments> > { struct TSWPAdornments *x0; struct TSWPAdornments *x1; struct __compressed_pair<TSWPAdornments *, std::__1::allocator<TSWPAdornments> > { struct TSWPAdornments *x0; } x2; } x26; struct TSWPAdornmentLine *x27; id x28; unsigned int x29; struct vector<TSWPLFCharIndexData, std::__1::allocator<TSWPLFCharIndexData> > { struct *x0; struct *x1; struct __compressed_pair<TSWPLFCharIndexData *, std::__1::allocator<TSWPLFCharIndexData> > { struct *x0; } x2; } x30; id x31; double x32; id x33; struct CGColor *x34; double x35; unsigned short x36; } *)lineFragmentClosestToPoint:(struct CGPoint { double x0; double x1; })a0 knobTag:(unsigned long long)a1;
- (double)baselineOfLineFragmentAtCharIndex:(unsigned long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })erasableBounds:(unsigned int)a0;
- (void)trimFromCharIndex:(unsigned long long)a0 inTarget:(id)a1 layoutChore:(struct TSWPLayoutChore { void /* function */ **x0; id x1; id x2; id x3; int x4; unsigned long long x5; unsigned long long x6; int x7; unsigned long long x8; unsigned long long x9; struct TSWPLayoutState { unsigned long long x0; unsigned long long x1; unsigned long long x2; struct TSWPParagraphEnumerator { id x0; id x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; BOOL x6; } x3; struct _NSRange { unsigned long long x0; unsigned long long x1; } x4; id x5; id x6; id x7; struct _NSRange { unsigned long long x0; unsigned long long x1; } x8; double x9; struct _NSRange { unsigned long long x0; unsigned long long x1; } x10; unsigned long long x11; BOOL x12; BOOL x13; double x14; id x15; unsigned long long x16; id x17; double x18; double x19; double x20; double x21; double x22; double x23; int x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; double x32; BOOL x33; BOOL x34; BOOL x35; BOOL x36; BOOL x37; BOOL x38; BOOL x39; double x40; BOOL x41; BOOL x42; BOOL x43; int x44; id x45; double x46; BOOL x47; double x48; BOOL x49; unsigned int x50; id x51; double x52; id x53; double x54; struct __CFLocale *x55; id x56; id x57; unsigned long long x58; id x59; BOOL x60; BOOL x61; unsigned long long x62; unsigned long long x63; BOOL x64; BOOL x65; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x66; double x67; BOOL x68; BOOL x69; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x70; id x71; id x72; unsigned int x73; BOOL x74; BOOL x75; double x76; id x77; id x78; id x79; unsigned long long x80; double x81; double x82; id x83; } x10; struct TSWPTopicNumberHints { struct map<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry> >, std::__1::less<const TSWPListStyle *>, std::__1::allocator<std::__1::pair<const TSWPListStyle *const, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry> > > > > { struct __tree<std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry> > >, std::__1::__map_value_compare<const TSWPListStyle *, std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry> > >, std::__1::less<const TSWPListStyle *>, true>, std::__1::allocator<std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry> > > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry> > >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const TSWPListStyle *, std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry> > >, std::__1::less<const TSWPListStyle *>, true> > { unsigned long long x0; } x2; } x0; } x0; unsigned long long x1; unsigned long long x2; id x3; } x11; struct TSWPTopicNumberHints { struct map<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry> >, std::__1::less<const TSWPListStyle *>, std::__1::allocator<std::__1::pair<const TSWPListStyle *const, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry> > > > > { struct __tree<std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry> > >, std::__1::__map_value_compare<const TSWPListStyle *, std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry> > >, std::__1::less<const TSWPListStyle *>, true>, std::__1::allocator<std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry> > > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry> > >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const TSWPListStyle *, std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry> > >, std::__1::less<const TSWPListStyle *>, true> > { unsigned long long x0; } x2; } x0; } x0; unsigned long long x1; unsigned long long x2; id x3; } x12; struct TSWPDropCapLayoutState { id x0; struct TSWPDropCapCTState { id x0; struct { unsigned char x0 : 1; double x1; struct _NSRange { unsigned long long x0; unsigned long long x1; } x2; } x1; } x1; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; BOOL x4; double x5; unsigned long long x6; int x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; double x17; double x18; double x19; double x20; unsigned long long x21; unsigned long long x22; unsigned long long x23; unsigned char x24 : 1; unsigned char x25 : 1; unsigned char x26 : 1; unsigned char x27 : 1; unsigned char x28 : 1; } x2; struct shared_ptr<TSWPLineFragment> { struct TSWPLineFragment *x0; struct __shared_weak_count *x1; } x3; } x13; struct TSWPLineBalancingLayoutState { struct TSWPLineBalancingRestoreLayoutInfo { struct TSWPLayoutState { unsigned long long x0; unsigned long long x1; unsigned long long x2; struct TSWPParagraphEnumerator { id x0; id x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; BOOL x6; } x3; struct _NSRange { unsigned long long x0; unsigned long long x1; } x4; id x5; id x6; id x7; struct _NSRange { unsigned long long x0; unsigned long long x1; } x8; double x9; struct _NSRange { unsigned long long x0; unsigned long long x1; } x10; unsigned long long x11; BOOL x12; BOOL x13; double x14; id x15; unsigned long long x16; id x17; double x18; double x19; double x20; double x21; double x22; double x23; int x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; double x32; BOOL x33; BOOL x34; BOOL x35; BOOL x36; BOOL x37; BOOL x38; BOOL x39; double x40; BOOL x41; BOOL x42; BOOL x43; int x44; id x45; double x46; BOOL x47; double x48; BOOL x49; unsigned int x50; id x51; double x52; id x53; double x54; struct __CFLocale *x55; id x56; id x57; unsigned long long x58; id x59; BOOL x60; BOOL x61; unsigned long long x62; unsigned long long x63; BOOL x64; BOOL x65; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x66; double x67; BOOL x68; BOOL x69; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x70; id x71; id x72; unsigned int x73; BOOL x74; BOOL x75; double x76; id x77; id x78; id x79; unsigned long long x80; double x81; double x82; id x83; } x0; unsigned int x1; unsigned int x2; double x3; } x0; double x1; unsigned long long x2; unsigned long long x3; int x4; unsigned int x5; struct vector<double, std::__1::allocator<double> > { double *x0; double *x1; struct __compressed_pair<double *, std::__1::allocator<double> > { double *x0; } x2; } x6; double x7; double x8; double x9; double x10; BOOL x11; } x14; struct TSWPLineStylingLayoutState { id x0; struct TSWPLineStylingCTState { id x0; struct { unsigned char x0 : 1; struct _NSRange { unsigned long long x0; unsigned long long x1; } x1; unsigned long long x2; } x1; } x1; struct { unsigned long long x0; unsigned long long x1; unsigned char x2 : 1; } x2; } x15; struct vector<TSWPLayoutState, std::__1::allocator<TSWPLayoutState> > { struct TSWPLayoutState *x0; struct TSWPLayoutState *x1; struct __compressed_pair<TSWPLayoutState *, std::__1::allocator<TSWPLayoutState> > { struct TSWPLayoutState *x0; } x2; } x16; struct TSWPCoreTextTypesetter *x17; struct _NSRange { unsigned long long x0; unsigned long long x1; } x18; long long x19; id x20; struct __CFLocale *x21; } *)a2;
- (double)trimToCharIndex:(unsigned long long)a0 inTarget:(id)a1;
- (const struct shared_ptr<TSWPLineFragmentArray> { struct TSWPLineFragmentArray *x0; struct __shared_weak_count *x1; } *)lineFragmentArray;
- (id)initWithStorage:(id)a0 frameBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (const struct TSWPLineFragment { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned int x3; double x4; double x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; struct { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; } x8; struct TSWPListLabel *x9; id x10; struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; struct TSWPLineRef *x1; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; } x2; } x11; double x12; struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; struct TSWPLineRef *x1; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; } x2; } x13; struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; struct TSWPLineRef *x1; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; } x2; } x14; struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; struct TSWPAdornmentLine *x1; struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; } x2; } x15; struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; struct TSWPAdornmentLine *x1; struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; } x2; } x16; struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; struct TSWPAdornmentLine *x1; struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; } x2; } x17; struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; struct TSWPAdornmentLine *x1; struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; } x2; } x18; struct vector<TSWPUIAttachmentData, std::__1::allocator<TSWPUIAttachmentData> > { struct TSWPUIAttachmentData *x0; struct TSWPUIAttachmentData *x1; struct __compressed_pair<TSWPUIAttachmentData *, std::__1::allocator<TSWPUIAttachmentData> > { struct TSWPUIAttachmentData *x0; } x2; } x19; struct TSWPTypesettingState *x20; double x21; double x22; double x23; id x24; id x25; struct vector<TSWPAdornments, std::__1::allocator<TSWPAdornments> > { struct TSWPAdornments *x0; struct TSWPAdornments *x1; struct __compressed_pair<TSWPAdornments *, std::__1::allocator<TSWPAdornments> > { struct TSWPAdornments *x0; } x2; } x26; struct TSWPAdornmentLine *x27; id x28; unsigned int x29; struct vector<TSWPLFCharIndexData, std::__1::allocator<TSWPLFCharIndexData> > { struct *x0; struct *x1; struct __compressed_pair<TSWPLFCharIndexData *, std::__1::allocator<TSWPLFCharIndexData> > { struct *x0; } x2; } x30; id x31; double x32; id x33; struct CGColor *x34; double x35; unsigned short x36; } *)lineFragmentAtIndex:(unsigned long long)a0;
- (void)trimToCharIndex:(unsigned long long)a0 inTarget:(id)a1 removeAutoNumberFootnoteCount:(unsigned long long)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })caretRectForSelection:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })firstRectForSelection:(id)a0 includeSpaceAfter:(BOOL)a1 includeSpaceBefore:(BOOL)a2 includeLeading:(BOOL)a3;
- (id)rectsForSelection:(id)a0 ranges:(id *)a1;
- (void)renderWithRenderer:(id)a0 currentSelection:(id)a1 limitSelection:(id)a2 listRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 rubyGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a4 isCanvasInteractive:(BOOL)a5 spellChecker:(id)a6 suppressedMisspellingRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a7 blackAndWhite:(BOOL)a8 dictationInterpretations:(const struct TSWPRangeVector { struct _NSRange *x0; struct _NSRange *x1; struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange> > { struct _NSRange *x0; } x2; } *)a9 autocorrections:(const struct TSWPRangeVector { struct _NSRange *x0; struct _NSRange *x1; struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange> > { struct _NSRange *x0; } x2; } *)a10 markedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a11 markedText:(id)a12 renderMode:(int)a13 pageCount:(unsigned long long)a14 suppressInvisibles:(BOOL)a15 currentCanvasSelection:(id)a16;
- (unsigned long long)charIndexFromPoint:(struct CGPoint { double x0; double x1; })a0 allowPastBreak:(BOOL)a1 pastCenterGoesToNextChar:(BOOL)a2 allowNotFound:(BOOL)a3 isAtEndOfLine:(BOOL *)a4 leadingEdge:(BOOL *)a5;
- (unsigned long long)charIndexFromPoint:(struct CGPoint { double x0; double x1; })a0 allowPastBreak:(BOOL)a1 pastCenterGoesToNextChar:(BOOL)a2 allowNotFound:(BOOL)a3 isAtEndOfLine:(BOOL *)a4 outFragment:(const struct TSWPLineFragment **)a5 leadingEdge:(BOOL *)a6;
- (id)smartFieldAtCharIndex:(unsigned long long)a0 attributeKind:(unsigned int)a1;
- (id)rectsForSelectionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 selectionType:(int)a1 forParagraphMode:(BOOL)a2 includeRuby:(BOOL)a3;
- (void)clearAdornments;
- (double)logicalBoundsTop;
- (void)offsetLineFragmentsByPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)pMutableRectsForSelectionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 selectionType:(int)a1 includeSpaceAfter:(BOOL)a2 includeSpaceBefore:(BOOL)a3 includeLeading:(BOOL)a4 forParagraphMode:(BOOL)a5 includeRuby:(BOOL)a6 inranges:(id)a7 outranges:(id *)a8;
- (const struct TSWPLineFragment { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned int x3; double x4; double x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x7; struct { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; } x8; struct TSWPListLabel *x9; id x10; struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; struct TSWPLineRef *x1; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; } x2; } x11; double x12; struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; struct TSWPLineRef *x1; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; } x2; } x13; struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; struct TSWPLineRef *x1; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef *x0; } x2; } x14; struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; struct TSWPAdornmentLine *x1; struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; } x2; } x15; struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; struct TSWPAdornmentLine *x1; struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; } x2; } x16; struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; struct TSWPAdornmentLine *x1; struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; } x2; } x17; struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; struct TSWPAdornmentLine *x1; struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine> > { struct TSWPAdornmentLine *x0; } x2; } x18; struct vector<TSWPUIAttachmentData, std::__1::allocator<TSWPUIAttachmentData> > { struct TSWPUIAttachmentData *x0; struct TSWPUIAttachmentData *x1; struct __compressed_pair<TSWPUIAttachmentData *, std::__1::allocator<TSWPUIAttachmentData> > { struct TSWPUIAttachmentData *x0; } x2; } x19; struct TSWPTypesettingState *x20; double x21; double x22; double x23; id x24; id x25; struct vector<TSWPAdornments, std::__1::allocator<TSWPAdornments> > { struct TSWPAdornments *x0; struct TSWPAdornments *x1; struct __compressed_pair<TSWPAdornments *, std::__1::allocator<TSWPAdornments> > { struct TSWPAdornments *x0; } x2; } x26; struct TSWPAdornmentLine *x27; id x28; unsigned int x29; struct vector<TSWPLFCharIndexData, std::__1::allocator<TSWPLFCharIndexData> > { struct *x0; struct *x1; struct __compressed_pair<TSWPLFCharIndexData *, std::__1::allocator<TSWPLFCharIndexData> > { struct *x0; } x2; } x30; id x31; double x32; id x33; struct CGColor *x34; double x35; unsigned short x36; } *)pColumnEndingPartitionedLineFragmentInSelectionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)rectsForSelectionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 selectionType:(int)a1 forParagraphMode:(BOOL)a2;
- (unsigned long long)charIndexFromWPPoint:(struct CGPoint { double x0; double x1; })a0 pastCenterGoesToNextChar:(BOOL)a1 allowNotFound:(BOOL)a2 outFragment:(const struct TSWPLineFragment **)a3 leadingEdge:(BOOL *)a4;
- (double)logicalBoundsBottom;
- (void)incrementRanges:(long long)a0;
- (double)minimumHeightForLayoutOnPage;
- (BOOL)requiresGlyphVectorsForHeightMeasurement;
- (void)addAdornmentRect:(const struct TSWPAdornmentRect { int x0; id x1; id x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; } *)a0;
- (unsigned long long)logicalLineCount;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })lineFragmentRangeForLogicalLineIndex:(unsigned long long)a0;
- (double)topOfCapForLogicalLineIndex:(unsigned long long)a0;
- (void)setLineFragmentArray:(const struct shared_ptr<TSWPLineFragmentArray> { struct TSWPLineFragmentArray *x0; struct __shared_weak_count *x1; } *)a0;
- (void)normalizeLineFragmentOrigins:(struct CGPoint { double x0; double x1; })a0;
- (unsigned long long)lineFragmentCountForBaseline:(double)a0;
- (void)makeEmpty:(unsigned long long)a0 layoutResultFlags:(int)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })typographicBoundsOfLineFragmentAtIndex:(unsigned long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })labelBoundsOfLineFragmentAtIndex:(unsigned long long)a0;
- (double)typographicGlyphExtentOfLineFragmentAtIndex:(unsigned long long)a0;
- (BOOL)isTruncatedLineFragmentAtIndex:(unsigned long long)a0;
- (BOOL)isEmptyLineFragmentAtIndex:(unsigned long long)a0;
- (BOOL)isDropCapFragmentAtIndex:(unsigned long long)a0;
- (unsigned long long)truncatedCharIndexForLineFragmentAtIndex:(unsigned long long)a0;
- (struct { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; })heightInfoOfLineFragmentAtIndex:(unsigned long long)a0;
- (double)baselineOfLineFragmentAtIndex:(unsigned long long)a0;
- (double)horizontalOffsetForCharIndex:(unsigned long long)a0 lineFragmentIndex:(unsigned long long)a1 bumpPastHyphen:(BOOL)a2 allowPastLineBounds:(BOOL)a3;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })glyphRectForRubyFieldAtCharIndex:(unsigned long long)a0 glyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (unsigned long long)glyphCountForRubyFieldAtCharIndex:(unsigned long long)a0;
- (id)lineSelectionsForSelection:(id)a0;
- (id)rectsForSelectionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)rectsForSelectionRanges:(id)a0 selectionType:(int)a1;
- (id)rectsForSelectionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 selectionType:(int)a1 includeSpaceAfter:(BOOL)a2 includeSpaceBefore:(BOOL)a3 includeLeading:(BOOL)a4 forParagraphMode:(BOOL)a5 includeRuby:(BOOL)a6;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })erasableRectForSelectionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)drawableIntersectionRectsForSelection:(id)a0 inTarget:(id)a1;
- (struct _TSWPCharIndexAndPosition { unsigned long long x0; int x1; double x2; int x3; double x4; })calcAttachmentPositionForDrawable:(id)a0 atPoint:(struct CGPoint { double x0; double x1; })a1 inTextLayoutTarget:(id)a2 tlBoundsInfluencingWrap:(struct CGPoint { double x0; double x1; })a3 wrapOutset:(struct CGSize { double x0; double x1; })a4 wrapMargin:(double)a5 makeInline:(BOOL)a6;
- (void)renderWithRenderer:(id)a0 pageCount:(unsigned long long)a1;
- (id)partitionedLayoutForInfo:(id)a0;
- (id)singleLinePartitionedInfoAtStart:(BOOL)a0;
- (BOOL)onlyHasAnchoredDrawable;

@end
