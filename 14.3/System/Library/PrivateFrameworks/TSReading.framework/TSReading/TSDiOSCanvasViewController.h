@class UIViewController, TSDPreventScrollGestureRecognizer, TSDMultiSelectGestureRecognizer, TSDNudgeGestureRecognizer, TSDCanvasLayer, NSString, NSMutableArray, TSDRepDragGestureRecognizer, TSDCanvasZoomPinchGestureRecognizer, NSArray, TSDAllTouchesDoneGestureRecognizer, TSDGuidedPanController, NSSet, UIView, UIPanGestureRecognizer, TSDInteractiveCanvasController, TSDEditMenuTapGestureRecognizer, TSDRepRotateGestureRecognizer, TSDCanvasSubviewsController, TSDKnobDragGestureRecognizer, CALayer, TSDCanvasView, UITapGestureRecognizer, TSDCanvasZoomTracker;
@protocol TSDiOSCanvasViewControllerDelegate;

@interface TSDiOSCanvasViewController : UIViewController <TSDCanvasLayerHosting, TSDCanvasZoomTrackerDelegate, UIGestureRecognizerDelegate> {
    TSDGuidedPanController *mGuidedPanController;
    BOOL mHasBeenTornDown;
    BOOL mInspectorModeEnabled;
    NSMutableArray *mInspectorGestureRecognizersToReenable;
    id /* block */ mInspectorSingleTapBlock;
    BOOL mCurrentlyScrolling;
    BOOL mRotating;
    TSDCanvasZoomTracker *mCanvasZoomTracker;
    struct CGPoint { double x; double y; } mLastZoomHUDLocation;
}

@property (readonly, nonatomic) struct { struct CGPoint { double x0; double x1; } x0; } touchContentPlacement;
@property (readonly, nonatomic) struct { struct CGPoint { double x0; double x1; } x0; } centerPlusMovementContentPlacement;
@property (retain, nonatomic) UITapGestureRecognizer *singleTapGestureRecognizer;
@property (retain, nonatomic) UITapGestureRecognizer *doubleTapGestureRecognizer;
@property (retain, nonatomic) TSDEditMenuTapGestureRecognizer *editMenuTapGestureRecognizer;
@property (retain, nonatomic) TSDKnobDragGestureRecognizer *knobDragGestureRecognizer;
@property (retain, nonatomic) TSDMultiSelectGestureRecognizer *multiSelectGestureRecognizer;
@property (retain, nonatomic) TSDRepDragGestureRecognizer *repDragGestureRecognizer;
@property (retain, nonatomic) TSDRepRotateGestureRecognizer *repRotateGestureRecognizer;
@property (retain, nonatomic) TSDCanvasZoomPinchGestureRecognizer *zoomGestureRecognizer;
@property (retain, nonatomic) TSDNudgeGestureRecognizer *nudgeGestureRecognizer;
@property (retain, nonatomic) TSDAllTouchesDoneGestureRecognizer *allTouchesDoneGestureRecognizer;
@property (nonatomic) TSDInteractiveCanvasController *interactiveCanvasController;
@property (nonatomic) id<TSDiOSCanvasViewControllerDelegate> delegate;
@property (readonly, nonatomic) NSArray *commonGestureRecognizers;
@property (readonly, nonatomic) NSSet *panGestureRecognizers;
@property (readonly, retain, nonatomic) TSDPreventScrollGestureRecognizer *preventScrollGestureRecognizer;
@property (readonly, retain, nonatomic) UIPanGestureRecognizer *guidedPanGestureRecognizer;
@property (readonly, nonatomic) BOOL isPopoverGestureInFlight;
@property (nonatomic) BOOL contextMenuMightBeDisplayed;
@property (readonly, nonatomic) BOOL isRotating;
@property (readonly, nonatomic) BOOL isDraggingViaGuidedPan;
@property (readonly, nonatomic) TSDCanvasView *canvasView;
@property (readonly, nonatomic) CALayer *layer;
@property (readonly, nonatomic) TSDCanvasLayer *canvasLayer;
@property (readonly, nonatomic) CALayer *clippingLayer;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, retain, nonatomic) CALayer *topLevelTilingLayer;
@property (readonly, retain, nonatomic) CALayer *containerLayer;
@property (readonly, retain, nonatomic) UIView *containerView;
@property (readonly, retain, nonatomic) UIViewController *containerViewController;
@property (readonly, retain, nonatomic) TSDCanvasSubviewsController *subviewsController;

- (void)cut:(id)a0;
- (BOOL)canPerformAction:(SEL)a0 withSender:(id)a1;
- (BOOL)becomeFirstResponder;
- (void)handleDoubleTap:(id)a0;
- (void)forwardInvocation:(id)a0;
- (BOOL)gestureRecognizer:(id)a0 shouldReceiveTouch:(id)a1;
- (void)teardown;
- (id)methodSignatureForSelector:(SEL)a0;
- (void)dealloc;
- (void)stopScrolling;
- (void)viewWillDisappear:(BOOL)a0;
- (BOOL)respondsToSelector:(SEL)a0;
- (void)loadView;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (id)viewController;
- (BOOL)canBecomeFirstResponder;
- (void)viewWillAppear:(BOOL)a0;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (BOOL)gestureRecognizerShouldBegin:(id)a0;
- (id)asiOSCVC;
- (void)unlock:(id)a0;
- (void)viewDidLoad;
- (id)topLevelReps;
- (id)viewForGestureRecognizer:(id)a0;
- (BOOL)allowTouchOutsideCanvasView:(id)a0 forGesture:(id)a1;
- (BOOL)shouldIgnoreTextGestures;
- (void)canvasDidUpdateRepsFromLayouts;
- (void)presentError:(id)a0 completionHandler:(id /* block */)a1;
- (void)presentErrors:(id)a0 withLocalizedDescription:(id)a1 completionHandler:(id /* block */)a2;
- (id)extraMenuItems;
- (void)resetGesturesForContextSwitch;
- (void)hideEditMenu;
- (void)showEditMenu:(id)a0;
- (void)forceStopScrolling;
- (void)showEditMenuForSelection:(id)a0;
- (id)hitRepWithTouch:(id)a0;
- (void)toggleEditMenuForCurrentSelection;
- (BOOL)shouldSelectAndShowEditMenuOnFirstTapForRep:(id)a0;
- (void)i_updateZoomGestureRecognizer;
- (BOOL)p_shouldUseWideGamut;
- (void)setUpGestureRecognizers;
- (void)p_updateWideGamut;
- (void)p_handleSingleTapGesture:(id)a0;
- (void)p_handleTapForEditMenu:(id)a0;
- (void)p_allTouchesDone:(id)a0;
- (void)p_zoomWithGesture:(id)a0;
- (void)p_guidedPanWithGesture:(id)a0;
- (BOOL)handleDoubleTapAtPoint:(struct CGPoint { double x0; double x1; })a0 withRecognizer:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })targetRectForEditMenu:(id)a0;
- (void)p_buildMenuItems:(id)a0 forSelection:(id)a1;
- (id)itemsToAddToEditMenuForRep:(id)a0;
- (void)addInspectorPanZoomModeGRsToArray:(id)a0;
- (BOOL)handleSingleTapAtPoint:(struct CGPoint { double x0; double x1; })a0 withRecognizer:(id)a1;
- (id)p_willPresentError:(id)a0;
- (void)p_didPresentErrorWithRecovery:(BOOL)a0 completionHandler:(void *)a1;
- (void)presentMovieCompatibilityAlertForUnplayableMovieURLs:(id)a0 completionHandler:(id /* block */)a1;
- (void)presentMovieCompatibilityAlertForUnplayableMoviePasteboardDrawableProviders:(id)a0 completionHandler:(id /* block */)a1;
- (BOOL)isInFocusedContainer;
- (void)canvasZoomTracker:(id)a0 willBeginViewScaleFeedbackWithFastPinch:(BOOL)a1;
- (void)canvasZoomTracker:(id)a0 willUpdateViewScaleFeedbackWithScale:(double)a1;
- (void)canvasZoomTrackerDidEndViewScaleFeedback:(id)a0;
- (void)canvasZoomTrackerWillBeginFinalZoomAnimation:(id)a0;
- (void)canvasZoomTrackerDidEndFinalZoomAnimation:(id)a0;
- (void)canvasZoomTrackerDidFinish:(id)a0;
- (id)hitKnobWithTouch:(id)a0 returningRep:(id *)a1;
- (BOOL)repDragGestureRecognizer:(id)a0 shouldBeginTapHoldTrackingAtScaledPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)beginInspectorPanZoomModeWithSingleTapBlock:(id /* block */)a0;
- (void)endInspectorPanZoomMode;
- (void)p_editMenuDidHide:(id)a0;
- (void)beginModalOperationWithLocalizedMessage:(id)a0 progress:(id)a1 cancelHandler:(id /* block */)a2;
- (void)endModalOperation;
- (id)newMoviePlaybackHUDWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 playerController:(id)a1 movieRep:(id)a2;
- (void)showMoviePlaybackHUD:(id)a0 withFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)hideMoviePlaybackHUD;
- (id)newAudioPlaybackHUDWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 audioRep:(id)a1 delegate:(id)a2;
- (Class)movieInspectorPaneClass;
- (Class)audioInspectorPaneClass;

@end
