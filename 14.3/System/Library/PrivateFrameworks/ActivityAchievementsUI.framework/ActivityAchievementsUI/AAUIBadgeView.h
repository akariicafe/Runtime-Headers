@class NSAttributedString, NSString, UIImage, AAUIBadgeModelConfiguration, UITapGestureRecognizer, GLKTextureInfo, AAUIBadge, NSObject, NSDictionary, UIPanGestureRecognizer, UILongPressGestureRecognizer;
@protocol OS_dispatch_queue, AAUIBadgeViewDelegate;

@interface AAUIBadgeView : HKGLView <UIGestureRecognizerDelegate> {
    AAUIBadge *_badge;
    union _GLKMatrix4 { struct { float m00; float m01; float m02; float m03; float m10; float m11; float m12; float m13; float m20; float m21; float m22; float m23; float m30; float m31; float m32; float m33; } ; float m[16]; } _viewProjectionMatrix;
    GLKTextureInfo *_colorTexture;
    GLKTextureInfo *_envTexture;
    GLKTextureInfo *_backTexture;
    GLKTextureInfo *_fleckNormalTexture;
    unsigned long long _shape;
    UIImage *_backAppleLogo;
    NSAttributedString *_backsideAttributedString;
    BOOL _backTextureNeedsRegeneration;
    unsigned int _program;
    unsigned int _faceProgram;
    unsigned int _inlayFaceProgram;
    unsigned int _triColorFaceProgram;
    unsigned int _vertexBuffer;
    unsigned int _indexBuffer;
    int _numGroups;
    int *_groupTriangleCounts;
    int *_materialIndices;
    struct __UniformBindings { struct __UniformBinding { int location; char *name; } viewProjectionMatrix; struct __UniformBinding { int location; char *name; } modelMatrix; struct __UniformBinding { int location; char *name; } environmentMatrix; struct __UniformBinding { int location; char *name; } cameraPosition; struct __UniformBinding { int location; char *name; } useTexture; struct __UniformBinding { int location; char *name; } useTextureShine; struct __UniformBinding { int location; char *name; } useFullColorEnamel; struct __UniformBinding { int location; char *name; } color; struct __UniformBinding { int location; char *name; } enamelColor; struct __UniformBinding { int location; char *name; } colorSampler; struct __UniformBinding { int location; char *name; } environmentSampler; struct __UniformBinding { int location; char *name; } fleckNormalSampler; struct __UniformBinding { int location; char *name; } triColor1; struct __UniformBinding { int location; char *name; } triColor2; struct __UniformBinding { int location; char *name; } triColor3; } _uniformBindings;
    struct __UniformBindings { struct __UniformBinding { int location; char *name; } viewProjectionMatrix; struct __UniformBinding { int location; char *name; } modelMatrix; struct __UniformBinding { int location; char *name; } environmentMatrix; struct __UniformBinding { int location; char *name; } cameraPosition; struct __UniformBinding { int location; char *name; } useTexture; struct __UniformBinding { int location; char *name; } useTextureShine; struct __UniformBinding { int location; char *name; } useFullColorEnamel; struct __UniformBinding { int location; char *name; } color; struct __UniformBinding { int location; char *name; } enamelColor; struct __UniformBinding { int location; char *name; } colorSampler; struct __UniformBinding { int location; char *name; } environmentSampler; struct __UniformBinding { int location; char *name; } fleckNormalSampler; struct __UniformBinding { int location; char *name; } triColor1; struct __UniformBinding { int location; char *name; } triColor2; struct __UniformBinding { int location; char *name; } triColor3; } _faceUniformBindings;
    struct __UniformBindings { struct __UniformBinding { int location; char *name; } viewProjectionMatrix; struct __UniformBinding { int location; char *name; } modelMatrix; struct __UniformBinding { int location; char *name; } environmentMatrix; struct __UniformBinding { int location; char *name; } cameraPosition; struct __UniformBinding { int location; char *name; } useTexture; struct __UniformBinding { int location; char *name; } useTextureShine; struct __UniformBinding { int location; char *name; } useFullColorEnamel; struct __UniformBinding { int location; char *name; } color; struct __UniformBinding { int location; char *name; } enamelColor; struct __UniformBinding { int location; char *name; } colorSampler; struct __UniformBinding { int location; char *name; } environmentSampler; struct __UniformBinding { int location; char *name; } fleckNormalSampler; struct __UniformBinding { int location; char *name; } triColor1; struct __UniformBinding { int location; char *name; } triColor2; struct __UniformBinding { int location; char *name; } triColor3; } _inlayFaceUniformBindings;
    struct __UniformBindings { struct __UniformBinding { int location; char *name; } viewProjectionMatrix; struct __UniformBinding { int location; char *name; } modelMatrix; struct __UniformBinding { int location; char *name; } environmentMatrix; struct __UniformBinding { int location; char *name; } cameraPosition; struct __UniformBinding { int location; char *name; } useTexture; struct __UniformBinding { int location; char *name; } useTextureShine; struct __UniformBinding { int location; char *name; } useFullColorEnamel; struct __UniformBinding { int location; char *name; } color; struct __UniformBinding { int location; char *name; } enamelColor; struct __UniformBinding { int location; char *name; } colorSampler; struct __UniformBinding { int location; char *name; } environmentSampler; struct __UniformBinding { int location; char *name; } fleckNormalSampler; struct __UniformBinding { int location; char *name; } triColor1; struct __UniformBinding { int location; char *name; } triColor2; struct __UniformBinding { int location; char *name; } triColor3; } _triColorFaceUniformBindings;
    NSDictionary *_tweakableUniforms;
    union _GLKMatrix4 { struct { float m00; float m01; float m02; float m03; float m10; float m11; float m12; float m13; float m20; float m21; float m22; float m23; float m30; float m31; float m32; float m33; } ; float m[16]; } _modelTransform;
    double _spinRate;
    UIPanGestureRecognizer *_spinRecognizer;
    UITapGestureRecognizer *_tapRecognizer;
    UILongPressGestureRecognizer *_longPressRecognizer;
    BOOL _magnetsEngaged;
    union _GLKVector3 { struct { float x; float y; float z; } ; struct { float r; float g; float b; } ; struct { float s; float t; float p; } ; float v[3]; } _modelBaseColor;
    union _GLKVector3 { struct { float x; float y; float z; } ; struct { float r; float g; float b; } ; struct { float s; float t; float p; } ; float v[3]; } _modelEnamelColor;
    BOOL _modelUsesFullColorEnamel;
    BOOL _modelUsesEarnedShader;
    BOOL _modelFaceHasMetalInlay;
    BOOL _modelUsesTriColorEnamel;
    union _GLKVector3 { struct { float x; float y; float z; } ; struct { float r; float g; float b; } ; struct { float s; float t; float p; } ; float v[3]; } _triColors[3];
}

@property (nonatomic) BOOL verticalPanningDisabled;
@property (retain, nonatomic) AAUIBadgeModelConfiguration *configuration;
@property (copy, nonatomic) id /* block */ shortenedBadgeBacksideStringProvider;
@property (weak, nonatomic) id<AAUIBadgeViewDelegate> badgeDelegate;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *pauseByNotificationQueueOverride;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (double)screenScaleMultiple;
+ (double)screenScaleMaximum;
+ (double)badgeAspectRatio;

- (long long)preferredStatusBarStyle;
- (BOOL)shouldAutorotateToInterfaceOrientation:(long long)a0;
- (id)init;
- (void).cxx_destruct;
- (void)dealloc;
- (BOOL)shouldAutorotate;
- (void)update;
- (BOOL)gestureRecognizerShouldBegin:(id)a0;
- (unsigned long long)supportedInterfaceOrientations;
- (void)_pauseByNotification:(id)a0;
- (unsigned int)drawInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withContext:(id)a1;
- (id)initUsingEarnedShader:(BOOL)a0;
- (void)resizeBadgeForCurrentViewSize;
- (id)_defaultTweaks;
- (id)_unearnedShaderDefaultTweaks;
- (void)_panned:(id)a0;
- (void)_tapped:(id)a0;
- (void)_longPressInternalOnly:(id)a0;
- (void)_context_setup;
- (void)_context_loadBadgeModel;
- (double)_attenuatedSpinRate:(double)a0;
- (void)_disengageMagnets;
- (void)_engageMagnets;
- (double)_attenuatedVelocity:(double)a0;
- (void)_spin360Degrees;
- (void)_applyImpulse:(double)a0;
- (void)_context_createBuffers;
- (void)_context_setupScene;
- (void)_context_loadShaders;
- (void)_context_loadUniformsAndAttributes;
- (void)_context_loadBadgeModelWithConfiguration:(id)a0;
- (void)_forEachProgram:(id /* block */)a0;
- (void)_setBackTextureNeedsRegeneration;
- (float)_normalizeAngle:(float)a0;
- (id)_valueForTweak:(id)a0;
- (void)_generateBackTexture;
- (void)_context_drawInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_context_destroyBuffers;
- (void)setBadgeModelPath:(id)a0 texturePath:(id)a1 plistPath:(id)a2;
- (void)setBadgeBacksideAttributedString:(id)a0;
- (void)setBadgeBacksideIcon:(id)a0;
- (void)playRevealAnimationWithDuration:(double)a0;
- (double)playFlipInAnimation;
- (double)playFlipOutAnimation;
- (void)setFixedBadgeAngle:(double)a0;
- (void)render360RotationPNGSequenceWithNumberOfFrames:(unsigned long long)a0;

@end
