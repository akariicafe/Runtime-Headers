@class NSString, NSMapTable, NSConditionLock, NSMutableDictionary, VMUProcessDescription, NSMutableArray;

@interface VMUSampler : NSObject {
    unsigned long long _options;
    int _pid;
    unsigned int _task;
    BOOL _needTaskPortDealloc;
    BOOL _recordThreadStates;
    BOOL _sampling;
    unsigned int _numberOfCopiedBacktraces;
    NSString *_processName;
    VMUProcessDescription *_processDescription;
    struct _CSTypeRef { unsigned long long _opaque_1; unsigned long long _opaque_2; } _symbolicator;
    unsigned int _suspensionToken;
    struct sampling_context_t { } *_samplingContext;
    NSMapTable *_lastThreadBacktraceMap;
    unsigned int *_previousThreadList;
    unsigned int _mainThread;
    unsigned int _previousThreadCount;
    unsigned int _maxPreviousThreadCount;
    double _tbRate;
    double _tbInterval;
    NSConditionLock *_stateLock;
    double _interval;
    double _timeLimit;
    unsigned int _sampleLimit;
    unsigned int _numberOfSamples;
    NSMutableArray *_samples;
    BOOL _stacksFixed;
    id _delegate;
    double _timeSpentSampling;
    unsigned int _dispatchThreadSoftLimit;
    unsigned int _dispatchThreadSoftLimitCount;
    unsigned int _dispatchThreadHardLimit;
    unsigned int _dispatchThreadHardLimitCount;
    NSMutableDictionary *_threadPortToNameMap;
    NSMutableDictionary *_dispatchQueueSerialNumToNameMap;
}

+ (void)initialize;
+ (id)sampleAllThreadsOfPID:(int)a0;
+ (id)sampleAllThreadsOfTask:(unsigned int)a0;
+ (id)sampleAllThreadsOfTask:(unsigned int)a0 symbolicate:(BOOL)a1;

- (id)initWithPID:(int)a0;
- (id)samples;
- (id)initWithTask:(unsigned int)a0;
- (void)_fixupStacks:(id)a0;
- (double)samplingInterval;
- (id)sampleAllThreadsOnce;
- (void)_makeTimeshare;
- (id)stopSamplingAndReturnCallNode;
- (unsigned long long)recordSampleTo:(id)a0 beginTime:(double)a1 endTime:(double)a2 thread:(unsigned int)a3 recordFramePointers:(BOOL)a4 clearMemoryCache:(BOOL)a5;
- (void).cxx_destruct;
- (void)setRecordThreadStates:(BOOL)a0;
- (void)flushData;
- (void)writeOutput:(id)a0 append:(BOOL)a1;
- (void)setSampleLimit:(unsigned int)a0;
- (id)threadNameForThread:(unsigned int)a0 returnedThreadId:(unsigned long long *)a1 returnedDispatchQueueSerialNum:(unsigned long long *)a2;
- (int)pid;
- (void)dealloc;
- (id)sampleThread:(unsigned int)a0;
- (BOOL)stop;
- (void)_runSamplingThread;
- (struct _CSTypeRef { unsigned long long x0; unsigned long long x1; })symbolicator;
- (void)_makeHighPriority;
- (void)forceStop;
- (id)initWithPID:(int)a0 options:(unsigned long long)a1;
- (void)setSamplingInterval:(double)a0;
- (void)_checkDispatchThreadLimits;
- (unsigned int)mainThread;
- (void)setTimeLimit:(double)a0;
- (unsigned int)sampleCount;
- (id)dispatchQueueNameForSerialNumber:(unsigned long long)a0 returnedConcurrentFlag:(BOOL *)a1 returnedThreadId:(unsigned long long *)a2;
- (void)initializeSamplingContextWithOptions:(int)a0;
- (unsigned int)sampleLimit;
- (id)sampleAllThreadsOnceWithFramePointers:(BOOL)a0;
- (id)initWithTask:(unsigned int)a0 options:(unsigned long long)a1;
- (BOOL)start;
- (id)outputString;
- (id)dispatchQueueNameForSerialNumber:(unsigned long long)a0;
- (void)preloadSymbols;
- (id)initWithPID:(int)a0 task:(unsigned int)a1 processName:(id)a2 is64Bit:(BOOL)a3 options:(unsigned long long)a4;
- (void)setDelegate:(id)a0;
- (id)threadNameForThread:(unsigned int)a0;
- (BOOL)waitUntilDone;
- (id)threadDescriptionStringForBacktrace:(id)a0 returnedAddress:(unsigned long long *)a1;
- (void)stopSampling;
- (id)delegate;
- (void)sampleForDuration:(unsigned int)a0 interval:(unsigned int)a1;
- (double)timeLimit;
- (id)initWithPID:(int)a0 orTask:(unsigned int)a1 options:(unsigned long long)a2;

@end
