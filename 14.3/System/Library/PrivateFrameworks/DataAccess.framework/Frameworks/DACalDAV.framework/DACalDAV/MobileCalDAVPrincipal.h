@class NSString, NSURL, NSArray, NSSet, NSMutableDictionary, AKAppleIDSession, NSDictionary, CalDAVRefreshContext, NSMutableSet, MobileCalDAVAccount, NSNumber, NSDateComponents;
@protocol CoreDAVTaskManager, CalDAVAccount;

@interface MobileCalDAVPrincipal : NSObject <CoreDAVAccountInfoProvider, CoreDAVOAuthInfoProvider, CalDAVPrincipal> {
    NSMutableDictionary *_calendarUserAddressesPerCalendar;
}

@property (retain, nonatomic) NSString *uid;
@property (nonatomic) id<CalDAVAccount> account;
@property (readonly, nonatomic) MobileCalDAVAccount *daAccount;
@property (retain, nonatomic) NSURL *preferredCalendarUserAddress;
@property (retain, nonatomic) NSString *preferredCalendarEmailAddress;
@property (retain, nonatomic) NSString *preferredCalendarPhoneNumber;
@property (retain, nonatomic) NSMutableSet *deletedCalendarURLs;
@property (retain, nonatomic) NSSet *addedCalendars;
@property (retain, nonatomic) NSSet *modifiedCalendars;
@property (retain, nonatomic) NSArray *calendarChangesToClear;
@property (retain, nonatomic) CalDAVRefreshContext *refreshContext;
@property (retain, nonatomic) NSURL *legacy_principalURL;
@property (retain, nonatomic) AKAppleIDSession *appleIDSession;
@property (retain, nonatomic) NSSet *preferredCalendarUserAddresses;
@property (readonly, nonatomic) NSDictionary *calendarUserAddressesPerCalendar;
@property (retain, nonatomic) NSString *fullName;
@property (retain, nonatomic) NSURL *calendarHomeURL;
@property (retain, nonatomic) NSString *calendarHomeSyncToken;
@property (readonly, nonatomic) NSDictionary *subCalPropertiesByURL;
@property (retain, nonatomic) NSString *principalPath;
@property (retain, nonatomic) NSURL *principalURL;
@property (retain, nonatomic) NSURL *defaultCalendarURL;
@property (retain, nonatomic) NSURL *notificationCollectionURL;
@property (retain, nonatomic) NSString *notificationCollectionCTag;
@property (retain, nonatomic) NSURL *inboxURL;
@property (retain, nonatomic) NSString *inboxCTag;
@property (retain, nonatomic) NSURL *outboxURL;
@property (retain, nonatomic) NSURL *dropBoxURL;
@property (retain, nonatomic) NSString *notificationURLString;
@property (retain, nonatomic) NSDictionary *pushTransports;
@property (retain, nonatomic) NSString *calendarHomePushKey;
@property (retain, nonatomic) NSNumber *quotaFreeBytes;
@property (retain, nonatomic) NSString *supportedCalendarComponentSets;
@property (nonatomic) BOOL isDelegate;
@property (nonatomic) BOOL isWritable;
@property (nonatomic) BOOL isEnabled;
@property (nonatomic) BOOL canCreateCalendars;
@property (nonatomic) BOOL isExpandPropertyReportSupported;
@property (nonatomic) BOOL supportsCalendarUserSearch;
@property (nonatomic) BOOL supportsFreebusy;
@property (nonatomic) BOOL supportsSyncToken;
@property (readonly, nonatomic) BOOL supportsExtendedCalendarQuery;
@property (readonly, nonatomic) NSSet *calendars;
@property (readonly, nonatomic) NSString *APSTopic;
@property (readonly, nonatomic) NSURL *APSSubscriptionURL;
@property (readonly, nonatomic) NSString *APSEnv;
@property (nonatomic) BOOL supportsPush;
@property (nonatomic) BOOL shouldRefreshPrincipalSearchProperties;
@property (nonatomic) BOOL shouldUpdatePushDelegate;
@property (nonatomic) BOOL isDirty;
@property (nonatomic) BOOL calendarsAreDirty;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) id<CoreDAVTaskManager> taskManager;
@property (readonly, nonatomic) BOOL isMergeSync;
@property (readonly, nonatomic) BOOL isEnabledForEvents;
@property (readonly, nonatomic) BOOL isEnabledForTodos;
@property (readonly, nonatomic) NSDateComponents *eventFilterStartDate;
@property (readonly, nonatomic) NSDateComponents *eventFilterEndDate;

+ (BOOL)compareAddressURL:(id)a0 localString:(id)a1;

- (BOOL)useSSL;
- (long long)port;
- (id)host;
- (id)user;
- (id)getAppleIDSession;
- (id)scheme;
- (id)accountID;
- (id)init;
- (BOOL)_userAddressSet:(id)a0 isEqualToSet:(id)a1;
- (id)_startDateFromDaysToSync:(int)a0;
- (id)_eventSyncEndDate;
- (BOOL)shouldSendClientInfoHeaderForURL:(id)a0;
- (void)noteSuccessfulRequestWithNumDownloadedElements:(long long)a0 numUploadedElements:(long long)a1;
- (void).cxx_destruct;
- (id)oauth2Token;
- (id)clientToken;
- (void)noteFailedNetworkRequest;
- (void)noteFailedProtocolRequest;
- (void)noteTimeSpentInNetworking:(double)a0;
- (void)promptUserForNewCoreDAVPasswordWithCompletionBlock:(id /* block */)a0;
- (BOOL)shouldHandleHTTPCookiesForURL:(id)a0;
- (BOOL)shouldCompressRequests;
- (unsigned long long)oauthVariant;
- (id)calendarOfType:(int)a0 atURL:(id)a1 withOptions:(id)a2;
- (void)removecalendarWithURL:(id)a0;
- (id)configuration;
- (void)prepareCalendarsForSyncWithCompletionBlock:(id /* block */)a0;
- (id)defaultEventCalendarTitle;
- (void)removeCalendar:(id)a0;
- (id)identityPersist;
- (struct __CFURLStorageSession { } *)copyStorageSession;
- (id)initWithConfiguration:(id)a0 account:(id)a1;
- (id)defaultTodoCalendarTitle;
- (BOOL)clearCalendarChanges;
- (id)preferredCalendarUserAddressesForCalendar:(id)a0;
- (void)removePreferredCalendarUserAddressesForCalendarWithIdentifier:(id)a0;
- (void)setPreferredCalendarUserAddresses:(id)a0 forCalendar:(id)a1;
- (BOOL)hasCalendarUserAddress:(id)a0;
- (id)calendarUserAddresses;
- (void)clientTokenRequestedByServer;
- (id)serverRoot;
- (id)serverComplianceClasses;
- (BOOL)handleCertificateError:(id)a0;
- (id)additionalHeaderValues;
- (id)customConnectionProperties;
- (id)oauthInfoProvider;
- (BOOL)shouldFailAllTasks;
- (BOOL)shouldUseOpportunisticSockets;
- (BOOL)handleTrustChallenge:(id)a0;
- (void)webLoginRequestedAtURL:(id)a0 reasonString:(id)a1 inQueue:(id)a2 completionBlock:(id /* block */)a3;
- (id)userAgentHeader;
- (BOOL)calendarUserAddressIsEquivalentToURL:(id)a0;
- (void)noteHomeSetOnDifferentHost:(id)a0;
- (id)password;

@end
