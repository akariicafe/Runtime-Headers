@class NSString, AVQueuePlayer, TLAlert, AVAsset, NSObject, TLAttentionAwarenessEffectCoordinator;
@protocol OS_dispatch_queue, TLAlertPlaybackObserver, NSCopying;

@interface TLAlertQueuePlayerController : NSObject <TLAlertPlaybackBackEndController> {
    NSObject<OS_dispatch_queue> *_audioEventQueue;
    NSString *_audioEventQueueLabel;
    BOOL _isObservingQueuePlayer;
    AVQueuePlayer *_queuePlayer;
    TLAlert *_playingAlert;
    NSString *_playingToneIdentifier;
    id /* block */ _playingAlertCompletionHandler;
    id<TLAlertPlaybackObserver> _playbackObserver;
    AVAsset *_toneAssetForPendingPlayingAlert;
    BOOL _hasToneAssetForPendingPlayingAlert;
    BOOL _isAudioEnvironmentSetup;
    BOOL _isAlertActivationAssertionAcquired;
    TLAlert *_alertForAudioEnvironmentSetup;
    NSString *_previousAudioCategory;
    unsigned long long _previousAudioCategoryOptions;
    NSString *_previousAudioMode;
    BOOL _isBypassingRingerSwitchPolicy;
    BOOL _isAudioSessionActive;
    unsigned long long _audioSessionDeactivationPreventionRequestsCount;
    BOOL _isObservingAudioSessionInterruptionNotification;
    id<NSCopying> _attentionPollingToken;
    TLAttentionAwarenessEffectCoordinator *_effectCoordinator;
    BOOL _isAttentionAwarenessSubsystemFullyInitialized;
    long long _lastAttentionPollingEventType;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)_propertyKeysOfInterestForToneAssets;
+ (BOOL)_shouldVibrateForAlert:(id)a0;
+ (id)_audioCategoryForAlert:(id)a0;
+ (unsigned long long)_audioCategoryOptionsForAlert:(id)a0;
+ (id)_audioModeForAlert:(id)a0 audioCategory:(id)a1;
+ (BOOL)_shouldBypassRingerSwitchPolicyForAlert:(id)a0;
+ (long long)_audioVolumeApplicationPolicyForAlert:(id)a0;
+ (BOOL)_shouldApplyAttentionAwarenessEffectsForAlert:(id)a0;
+ (id)_celestialAudioCategoryForAudioSessionCategory:(id)a0;
+ (id)_clientNameForAlert:(id)a0;
+ (long long)_clientPriorityForAlert:(id)a0;
+ (BOOL)_shouldEnsureActiveAudioSessionWhenStartingPlaybackForAlert:(id)a0;
+ (BOOL)_shouldHandleAudioSessionActivationForAlert:(id)a0;

- (id)init;
- (void).cxx_destruct;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)_stopPlayingAlerts:(id)a0 withOptions:(id)a1 playbackCompletionType:(long long)a2 willStopAlertsHandler:(id /* block */)a3 completionHandler:(id /* block */)a4;
- (void)_playAlert:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)playAlert:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)stopPlayingAlerts:(id)a0 withOptions:(id)a1 playbackCompletionType:(long long)a2 willStopAlertsHandler:(id /* block */)a3 completionHandler:(id /* block */)a4;
- (void)handleActivationAssertionStatusChangeForAlert:(id)a0 updatedStatus:(BOOL)a1;
- (void)updateAudioVolumeDynamicallyForAlert:(id)a0 toValue:(float)a1;
- (void)_destroyQueuePlayer;
- (void)_performBlockOnAudioEventQueue:(id /* block */)a0;
- (void)_updateAudioVolumeDynamicallyForAlert:(id)a0 toValue:(float)a1;
- (void)_handleActivationAssertionStatusChangeForAlert:(id)a0 updatedStatus:(BOOL)a1;
- (void)_assertRunningOnAudioEventQueue;
- (void)_beginPreventingAudioSessionDeactivation;
- (void)_stopPlayback;
- (void)_didCompletePlaybackWithCompletionType:(long long)a0 error:(id)a1;
- (void)_reloadPlaybackForPlayingAlertWithToneIdentifier:(id)a0;
- (void)_endPreventingAudioSessionDeactivation;
- (void)_stopPlaybackWithOptions:(id)a0 playerWasAlreadyPausedExternally:(BOOL)a1;
- (void)_applyAudioVolume:(float)a0 forAlert:(id)a1;
- (void)_restoreAudioEnvironment;
- (void)_prepareAudioEnvironment;
- (void)_createQueuePlayerIfNecessary;
- (void)_startPlaybackForAssetWithLoadedProperties:(id)a0 alert:(id)a1;
- (id)_fallbackToneIdentifierForPlayingAlert;
- (BOOL)_canPlayToneAsset:(id)a0;
- (void)_startPlaybackForPlayingAlertUsingConfirmedPlayableAsset:(id)a0;
- (void)_stopObservingQueuePlayer;
- (void)_willBeginPlayingAlert;
- (void)_startPlaybackForPlayingAlertUsingConfirmedPlayableAsset:(id)a0 hasAlreadyDetectedUserAttention:(BOOL)a1;
- (id)_audioMixForVolumeRampingWithDuration:(double)a0 toneAsset:(id)a1 toneAssetDuration:(double)a2 itemIndex:(unsigned long long)a3;
- (void)_startObservingQueuePlayer;
- (void)_performDelayedAudioPlaybackInitiationForAlert:(id)a0;
- (void)_didEndPlayingAlert;
- (float)_audioVolumeForAlert:(id)a0 audioCategory:(id)a1;
- (void)_activateAudioSessionIfNeeded;
- (void)_didReceiveAttentionPollingEventOfType:(long long)a0 alertForAudioEnvironmentSetup:(id)a1;
- (void)_deactivateAudioSessionIfNeeded;
- (void)_resetClientPriority;
- (void)_queuePlayer:(id)a0 currentItemWasUpdatedFromValue:(id)a1;
- (void)_queuePlayer:(id)a0 currentItemStatusWasUpdatedToValue:(long long)a1;
- (void)_startObservingAudioSessionInterruptionNotifications;
- (void)_stopObservingAudioSessionInterruptionNotifications;
- (void)_handleAudioSessionInterruptionNotification:(id)a0;
- (void)_handleAudioSessionInterruptionOfType:(unsigned long long)a0 withOptions:(unsigned long long)a1;
- (float)_adjustAudioVolumeForOptimalRampingPerception:(float)a0;

@end
