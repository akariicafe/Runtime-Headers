@class NSData, NSString, CIContext, FigCaptureMachPortSendRight, BWRamp, BWPixelBufferPool, BWSpringSimulation, NSMutableDictionary, NSObject;
@protocol BWPreviewStitcherDelegate, OS_dispatch_queue, OS_dispatch_group;

@interface BWPreviewStitcherNode : BWNode {
    struct { int width; int height; } _outputDimensions;
    int _rotationDegrees;
    BOOL _flipHorizontal;
    BOOL _flipVertical;
    double _primaryCaptureRectYInset;
    int _primaryCaptureRectPixelInset;
    double _primaryCaptureRectCenterX;
    int _primaryCaptureRectCenterXPixelOffset;
    int _primaryCaptureRectCenterXPixelOffsetFudge;
    BOOL _previewsWideBeforeSlaveStreamStarts;
    BOOL _generatesHistogram;
    NSData *_superWideCameraViewMatrix;
    NSData *_telephotoCameraViewMatrix;
    struct CGPoint { double x; double y; } _superWideOpticalCenterOffset;
    struct CGPoint { double x; double y; } _wideOpticalCenterOffset;
    struct CGPoint { double x; double y; } _teleOpticalCenterOffset;
    float _superWidePixelsPerMicron;
    float _widePixelsPerMicron;
    float _telePixelsPerMicron;
    float _superWideBaseZoomFactor;
    float _wideBaseZoomFactor;
    float _teleBaseZoomFactor;
    float _superWideCorrectedBaseZoomFactor;
    float _wideBaseZoomFactorOverride;
    BOOL _wideBaseZoomFactorDynamicOverrideEnabled;
    float _wideBaseZoomFactorDynamicOverride;
    float _wideBaseZoomFactorDynamicOverrideScaled;
    float _wideBaseZoomFactorOverrideMacro;
    float _widePinholeFocalLengthInfinity;
    float _widePinholeFocalLengthMacro;
    float _dynamicWideBaseZoomFactorSmoothingFactor;
    BOOL _inputBuffersHaveHorizontalOverscanOnly;
    float _teleBaseZoomFactorOverride;
    struct { int width; int height; } _sensorBinningFactor;
    unsigned int _bravoShiftCorrectionFlags;
    struct { struct { float x; float y; } lastWideSpherePos; struct { float x; float y; } lastTeleSpherePos; struct { float x; float y; } currentTeleSpherePos; struct { float x; float y; } previousTeleSpherePos; BOOL supportAverageSpherePositionKey; } _superWideToWideShiftState;
    struct { struct { float x; float y; } lastWideSpherePos; struct { float x; float y; } lastTeleSpherePos; struct { float x; float y; } currentTeleSpherePos; struct { float x; float y; } previousTeleSpherePos; BOOL supportAverageSpherePositionKey; } _wideToTeleShiftState;
    float _shiftSmoothingFactor;
    BOOL _applyShift;
    struct CGPoint { double x; double y; } _superWideToWideBravoShift;
    struct CGPoint { double x; double y; } _wideToTeleBravoShift;
    struct OpaqueVTImageRotationSession { } *_intermediateRotationSession;
    struct OpaqueVTImageRotationSession { } *_outputRotationSession;
    struct opaqueCMFormatDescription { } *_outputFormatDescription;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _outputTransform;
    id<BWPreviewStitcherDelegate> _delegate;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _configurationLock;
    BOOL _deviceIsStationary;
    BOOL _pendingRegistrationAfterDeviceBecomesStationary;
    BOOL _registrationEnabled;
    int _lastRegisteredFrameCaptureID;
    BOOL _lastRegistrationEnabled;
    NSObject<OS_dispatch_queue> *_registrationQueue;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _shiftCorrectionsUpdateLock;
    struct BWPreviewStitcherShiftCorrection { struct CGPoint { double x; double y; } currentValue; struct CGPoint { double x; double y; } updatedValue; BOOL valueIsUpdated; BOOL lastRegistrationWasValid; int registeredFrameCaptureID; BWRamp *rampX; BWRamp *rampY; } _wideToTeleShiftCorrections[3];
    struct BWPreviewStitcherShiftCorrection { struct CGPoint { double x; double y; } currentValue; struct CGPoint { double x; double y; } updatedValue; BOOL valueIsUpdated; BOOL lastRegistrationWasValid; int registeredFrameCaptureID; BWRamp *rampX; BWRamp *rampY; } _superWideToWideShiftCorrections[3];
    BWPixelBufferPool *_registrationPool;
    struct OpaqueVTImageRotationSession { } *_registrationRotationSession;
    int _registrationFrameSkipCount;
    int _registrationUpdateRampFrameCount;
    BOOL _registerFirstFrame;
    double _primaryCameraAspectRatio;
    float _lastPrimaryCameraAspectRatio;
    FigCaptureMachPortSendRight *_fencePortSendRight;
    long long _fencePortGenerationCount;
    BOOL _displaysWidestCameraOnly;
    BOOL _displaysPrimaryCameraOnly;
    BOOL _drawWiderCameraOnly;
    BOOL _currentZoomRequiresWiderCamera;
    BOOL _lastZoomingOrSwitchingCameras;
    float _rampZoomFactorOfInterest;
    float _rampStartZoomFactor;
    NSString *_lastRecommendedMasterPortType;
    NSString *_lastNarrowerPortType;
    BOOL _lastNarrowerCameraIsTele;
    BWRamp *_teleOpacityRamp;
    BWPixelBufferPool *_teleOpacityPool;
    struct { int width; int height; } _teleOpacityPoolDimensions;
    CIContext *_teleOpacityCIContext;
    int _screenScale;
    BOOL _frameRateBasedRampsEnabled;
    NSObject<OS_dispatch_queue> *_ciPreheatingQueue;
    NSObject<OS_dispatch_group> *_ciPreheatingGroup;
    BOOL _havePreheatedCI;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _firstFramePTS;
    BOOL _edgeFeatheringEnabled;
    BOOL _showFeatherGradient;
    float _edgeFeatheringAspectCompensation;
    float _zoomInFeatheringInnerRadiusStart;
    float _zoomInFeatheringInnerRadiusEnd;
    float _zoomInFeatheringOuterRadiusStart;
    float _zoomInFeatheringOuterRadiusEnd;
    float _zoomOutFeatheringInnerRadiusStart;
    float _zoomOutFeatheringInnerRadiusEnd;
    float _zoomOutFeatheringOuterRadiusStart;
    float _zoomOutFeatheringOuterRadiusEnd;
    BOOL _featherEdgesForOpacityRamp;
    struct opaqueCMSampleBuffer { } *_lastSampleBuffer;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastRenderedPTS;
    BOOL _multiCameraStitchingEnabled;
    BOOL _aspectRatioChanging;
    long long _lastRenderTime;
    float _additionalZoomFactor;
    float _additionalZoomFactorSpringStartFactor;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _additionalZoomFactorSpringStartPTS;
    BWSpringSimulation *_additionalZoomFactorSpring;
    NSMutableDictionary *_blackFilledBorderRectsBySurfaceID;
    int _overCaptureStatus;
    struct BWSmartCameraScene { BOOL enabled; BOOL confident; float confidenceFilterRatio; float filteredConfidence; float confidenceThreshold; float confidenceHysteresisValueLag; char confidenceHysteresisTemporalLagBeforeConfident; char confidenceHysteresisTemporalLagBeforeNotConfident; char currentTemporalHysteresis; char *name; } _wideFocusDistanceFarEnoughForStitching;
    BOOL _hideSuperWideOverCaptureWhenTooClose;
    BOOL _superWideOccludedByWide;
    BOOL _superWideDrawingSuspendedUntilFocusImproves;
    BOOL _hideSuperWideStitchingWhenTooClose;
    BOOL _hidePartialOverCapture;
    BOOL _deviceTooHotDimmingEnabled;
    int _wideFallbackMode;
    struct BWSmartCameraScene { BOOL enabled; BOOL confident; float confidenceFilterRatio; float filteredConfidence; float confidenceThreshold; float confidenceHysteresisValueLag; char confidenceHysteresisTemporalLagBeforeConfident; char confidenceHysteresisTemporalLagBeforeNotConfident; char currentTemporalHysteresis; char *name; } _wideFocusDistanceFarEnoughToUseTele;
    BOOL _wideFocusingOneShot;
    BOOL _teleFocusingOneShot;
    BWRamp *_wideFallbackShiftRamp;
    struct CGPoint { double x; double y; } _wideFallbackRecenteringShiftOffset;
    BOOL _wantWideFallbackDueToTeleAEAF;
    BOOL _wideFallbackShiftRampTargetValueIsWide;
    BOOL _deviceModelIsD54p;
}

@property (nonatomic) id<BWPreviewStitcherDelegate> delegate;
@property BOOL displaysWidestCameraOnly;
@property (nonatomic) BOOL stoppingForModeSwitch;

+ (void)initialize;

- (void)prepareForCurrentConfigurationToBecomeLive;
- (void)didSelectFormat:(id)a0 forInput:(id)a1;
- (void)configurationWithID:(long long)a0 updatedFormat:(id)a1 didBecomeLiveForInput:(id)a2;
- (id)nodeType;
- (id)nodeSubType;
- (void)didReachEndOfDataForInput:(id)a0;
- (void)renderSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0 forInput:(id)a1;
- (float)wideFocusDistance;
- (id)initWithCameraInfoByPortType:(id)a0 sensorBinningFactor:(struct { int x0; int x1; })a1 inputBuffersHaveHorizontalOverscanOnly:(BOOL)a2;
- (void)_restitchAndEmitLastInputForAspectAndCenterChange;
- (BOOL)flipVertical;
- (BOOL)_displaysPrimaryCameraOnly;
- (float)_wideBaseZoomFactorWithOverrideLocked;
- (id)_primaryCameraPortType;
- (float)_wideFallbackRecenteringStrength;
- (void)_preheatCIRenderingAsync;
- (BOOL)_updateZoomStatusFromWideSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0 teleSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1;
- (struct CGPoint { double x0; double x1; })_computeBravoWideToTeleShiftFromWideSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0 teleSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1;
- (void)_setOverCaptureStatus:(int)a0;
- (BOOL)_currentlyZoomingOrSwitchingCameras;
- (void)_updateShiftCorrectionsAsyncFromComputedShift:(struct CGPoint { double x0; double x1; })a0 byRegisteringWide:(struct opaqueCMSampleBuffer { } *)a1 tele:(struct opaqueCMSampleBuffer { } *)a2 centerBias:(BOOL)a3;
- (void)_updateAndGetWideRegionShifts:(struct CGPoint { double x0; double x1; } *)a0 teleShift:(struct CGPoint { double x0; double x1; } *)a1 wideIsSuperWide:(BOOL)a2 forComputedShift:(struct CGPoint { double x0; double x1; })a3 registrationEnabled:(BOOL)a4 currentFrameRate:(float)a5;
- (void)_updateOverCaptureStatusWithWiderSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0 narrowerSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1;
- (void)_waitForCIPreheatingToFinish;
- (float)_wideBaseZoomFactorWithOverride;
- (void)dealloc;
- (struct opaqueCMSampleBuffer { } *)_newStitchedSampleBufferFromWide:(struct opaqueCMSampleBuffer { } *)a0 tele:(struct opaqueCMSampleBuffer { } *)a1 wideRegionsShifts:(struct CGPoint { double x0; double x1; } *)a2 teleShift:(struct CGPoint { double x0; double x1; })a3 primaryCaptureRectOut:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a4 primaryCaptureRectBeforeCroppingOut:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a5;
- (BOOL)_currentlyRampingZoom;
- (BOOL)_currentlySwitchingCameras;
- (float)_teleBaseZoomFactorWithOverride;
- (BOOL)_haveSuperWideCamera;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_transferPixelBuffer:(struct __CVBuffer { } *)a0 rect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 intoPixelBuffer:(struct __CVBuffer { } *)a2 rect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3 isFinalOutput:(BOOL)a4 withInputShift:(struct CGPoint { double x0; double x1; })a5 scale:(float)a6 inputSourceRectOut:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a7;
- (void)_getInputRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0 outputRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1 inputShiftAppliedInOutputRect:(struct CGPoint { double x0; double x1; } *)a2 toTransferPixelBuffer:(struct __CVBuffer { } *)a3 rect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a4 intoPixelBufferDimensions:(struct { int x0; int x1; })a5 rect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a6 withInputShift:(struct CGPoint { double x0; double x1; })a7 shiftOutsideBoundingRectAllowed:(BOOL)a8 scale:(float)a9;
- (id)_teleOpacityPool;
- (void)_renderOpacityRampToPixelBuffer:(struct __CVBuffer { } *)a0 bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 withWidePixelBuffer:(struct __CVBuffer { } *)a2 telePixelBuffer:(struct __CVBuffer { } *)a3 zoomingIn:(BOOL)a4 progress:(float)a5;
- (BOOL)_currentlyRunningShortZoomRampOrNotRampingZoom;
- (float)_scaleFactorAppliedForPixelBuffer:(struct __CVBuffer { } *)a0 usedSourceRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 primaryCaptureRectAspectRatio:(double)a2 metadata:(id)a3;
- (void)_callDelegateWithAppliedWiderShift:(struct CGPoint { double x0; double x1; })a0 narrowerShift:(struct CGPoint { double x0; double x1; })a1 widerScaleFactor:(float)a2 narrowerScaleFactor:(float)a3 widerPixelBuffer:(struct __CVBuffer { } *)a4 narrowerPixelBuffer:(struct __CVBuffer { } *)a5 widerPortType:(id)a6 narrowerPortType:(id)a7;
- (void)_updateCameraIntrinsicsMatrixOnSampleBufferIfNeeded:(struct opaqueCMSampleBuffer { } *)a0 inputCropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 outputCropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (BOOL)_haveTeleCamera;
- (BOOL)_haveSuperBravo;
- (id)_featheredImageWithTeleImage:(id)a0 wideImage:(id)a1 clipRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 zoomingIn:(BOOL)a3 progress:(float)a4;
- (id)overCaptureStatusString;
- (int)_cameraDisplayTransitionFrameCountForCameraFallbackChange:(BOOL)a0 currentFrameRate:(float)a1;
- (int)_wideFallbackShiftRampFrameCount;
- (int)_scale30FPSFrameCount:(int)a0 toFrameRate:(float)a1;
- (int)_zoomOutOpacityRampFrameCount;
- (int)_zoomInOpacityRampFrameCount;
- (int)_wideFallbackOpacityRampFrameCount;
- (struct CGPoint { double x0; double x1; })_shiftCorrectionForComputedShift:(struct CGPoint { double x0; double x1; })a0 forLeftStrip:(BOOL)a1 byRegisteringWide:(struct opaqueCMSampleBuffer { } *)a2 tele:(struct opaqueCMSampleBuffer { } *)a3 centerBias:(BOOL)a4 err:(int *)a5;
- (id)initWithStitchingDisabled;
- (void)setPrimaryCaptureRectAspectRatio:(double)a0 center:(struct CGPoint { double x0; double x1; })a1 fencePortSendRight:(id)a2;
- (void)rampToAdditionalZoomFactor:(double)a0;
- (void)setPrimaryCameraAspectRatio:(double)a0;
- (double)primaryCameraAspectRatio;
- (void)setPrimaryCaptureRectYInset:(double)a0;
- (float)wideBaseZoomFactor;
- (double)primaryCaptureRectYInset;
- (void)setPrimaryCaptureRectCenterX:(double)a0;
- (double)primaryCaptureRectCenterX;
- (void)setPreviewsWideBeforeSlaveStreamStarts:(BOOL)a0;
- (BOOL)previewsWideBeforeSlaveStreamStarts;
- (id)focusingDescription;
- (id)primaryCameraShortDisplayName;
- (BOOL)tooCloseFor1xStitching;
- (BOOL)centerRegistrationValid;
- (id)wideFallbackDescription;
- (struct { int x0; int x1; })outputDimensions;
- (void)setGeneratesHistogram:(BOOL)a0;
- (void)_updateUprightExifOrientationOnSampleBufferIfNeeded:(struct opaqueCMSampleBuffer { } *)a0;
- (void)setOutputDimensions:(struct { int x0; int x1; })a0;
- (void)setFlipHorizontal:(BOOL)a0;
- (BOOL)flipHorizontal;
- (void)setFlipVertical:(BOOL)a0;
- (BOOL)generatesHistogram;
- (void)setRotationDegrees:(int)a0;
- (int)rotationDegrees;

@end
