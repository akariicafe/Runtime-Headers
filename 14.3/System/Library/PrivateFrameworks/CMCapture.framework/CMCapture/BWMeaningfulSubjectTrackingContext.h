@interface BWMeaningfulSubjectTrackingContext : NSObject {
    struct { struct { unsigned char numModels; char codeVersion[20]; char name[3][20]; char version[3][20]; unsigned char rsvd[32]; } modelInfo; unsigned int frameId; unsigned int numObjects; struct { unsigned int objectId; int category; struct { float x; float y; float width; float height; } bbox; unsigned int confidence; unsigned int yaw; unsigned int roll; int smile; int blinkLeft; int blinkRight; struct { float x; float y; float width; float height; } eyeRectLeft; struct { float x; float y; float width; float height; } eyeRectRight; unsigned char hasPoseData; unsigned char hasEyeData; unsigned char hasBlinkData; unsigned char hasSmileData; int modality; } objects[4]; } result;
    struct TtTrkRpnContext { } *handle;
    struct { unsigned int originalImageWidth; unsigned int originalImageHeight; unsigned char restart; } control;
    struct { unsigned char doDaOnly; } config;
    struct { unsigned char data[1864]; } state;
    struct { unsigned int maxResultCount; unsigned int maxTrackCount; unsigned int scaleCount; unsigned int instanceCropWidth; unsigned int instanceCropHeight; unsigned int instanceCropChannels; unsigned int instanceCropBatchBytes; unsigned int exemplarCropWidth; unsigned int exemplarCropHeight; unsigned int exemplarCropChannels; unsigned int exemplarCropBatchBytes; unsigned int xcorrNetOutWidths[2]; unsigned int xcorrNetOutHeights[2]; unsigned int xcorrNetOutChannels[2]; unsigned int xcorrNetOutBatchBytes[2]; int xcorrNetOutPixelFormat; unsigned int templateNetOutWidths[2]; unsigned int templateNetOutHeights[2]; unsigned int templateNetOutChannels[2]; unsigned int templateNetOutBatchBytes[2]; int templateNetOutPixelFormat; char xcorrNetInputNames[3][32]; } params;
    struct { void *instanceCrop; unsigned int instanceCropBytes; void *exemplarCrop; unsigned int exemplarCropBytes; void *templateKernels[2]; unsigned int templateKernelsBytes[2]; void *xcorrOutputs[2]; unsigned int xcorrOutputsBytes[2]; } networkBufferPointers;
    struct { struct { unsigned char isValid; unsigned char pyrIndex; unsigned int inputWidth; unsigned int inputHeight; unsigned int inputStartOffsetY; unsigned int inputStartOffsetC; unsigned short outWidth; unsigned short outHeight; unsigned short xInitY; unsigned short xInitC; unsigned short yInitY; unsigned short yInitC; unsigned short xStepY; unsigned short xStepC; unsigned short yStepY; unsigned short yStepC; } instanceNetControl; struct { unsigned char isValid; unsigned char pyrIndex; unsigned int inputWidth; unsigned int inputHeight; unsigned int inputStartOffsetY; unsigned int inputStartOffsetC; unsigned short outWidth; unsigned short outHeight; unsigned short xInitY; unsigned short xInitC; unsigned short yInitY; unsigned short yInitC; unsigned short xStepY; unsigned short xStepC; unsigned short yStepY; unsigned short yStepC; } exemplarNetControl; unsigned char newInstanceNetControl; unsigned char newExemplarNetControl; } networkInputCropControls;
    struct { struct { void *data; unsigned int height; unsigned int width; unsigned int rowBytes; unsigned int pixelFormat; } instanceCrop; struct { void *data; unsigned int height; unsigned int width; unsigned int rowBytes; unsigned int pixelFormat; } exemplarCrop; struct { void *data; unsigned int height; unsigned int width; unsigned int rowBytes; unsigned int pixelFormat; } templateKernels[2]; struct { void *data; unsigned int height; unsigned int width; unsigned int rowBytes; unsigned int pixelFormat; } xcorrOutputs[2]; } networkBuffers;
    struct { char *x0; unsigned int x1; } *networkCropBuffer;
    void *examplePlan;
    struct { void *plan; int network_index; } exampleNetwork;
    struct { void *data; void *reserved; unsigned long long dim[4]; unsigned long long stride[4]; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } exampleRegressionOutputTensor;
    struct { void *data; void *reserved; unsigned long long dim[4]; unsigned long long stride[4]; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } exampleClassificationOutputTensor;
    void *trackingPlan;
    struct { void *plan; int network_index; } trackingNetwork;
    struct { void *data; void *reserved; unsigned long long dim[4]; unsigned long long stride[4]; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } trackingRegressionInputTensor;
    struct { void *data; void *reserved; unsigned long long dim[4]; unsigned long long stride[4]; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } trackingClassificationInputTensor;
    struct { void *data; void *reserved; unsigned long long dim[4]; unsigned long long stride[4]; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } trackingRegressionOutputTensor;
    struct { void *data; void *reserved; unsigned long long dim[4]; unsigned long long stride[4]; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } trackingClassificationOutputTensor;
}

+ (void)initialize;

- (void)dealloc;
- (id)initWithExampleNetworkURL:(id)a0 trackingNetworkURL:(id)a1 context:(void **)a2 priority:(int)a3 sharedIntermediateBufferPlan:(void *)a4 cropBuffer:(struct { char *x0; unsigned int x1; } *)a5;

@end
