@class MFMailMessageLibrary, MFMessageCriterion, NSDate;

@interface MFLibraryStore : MFMailMessageStore {
    MFMailMessageLibrary *_library;
    MFMessageCriterion *_criterion;
    unsigned long long _fetchWindow;
}

@property (retain, nonatomic) NSDate *earliestReceivedDate;

+ (id)sharedInstance;
+ (unsigned int)defaultLoadOptions;
+ (id)storeWithMailbox:(id)a0;
+ (BOOL)createEmptyStoreForPath:(id)a0;
+ (BOOL)storeAtPathIsWritable:(id)a0;
+ (id)sharedInstanceIfExists;

- (BOOL)shouldCancel;
- (void).cxx_destruct;
- (unsigned long long)totalCount;
- (void)dealloc;
- (id)URLString;
- (void)updateMetadata;
- (id)criterion;
- (id)mailbox;
- (id)dataPathForMessage:(id)a0 part:(id)a1;
- (id)setFlagsFromDictionary:(id)a0 forMessages:(id)a1;
- (id)initWithCriterion:(id)a0 mailbox:(id)a1 readOnly:(BOOL)a2;
- (id)initWithMailboxUid:(id)a0 readOnly:(BOOL)a1;
- (void)_queueMessagesAdded:(id)a0;
- (void)_queueMessageFlagsChanged:(id)a0;
- (void)_queueMessagesWillBeCompacted:(id)a0;
- (void)_queueMessagesWereCompacted:(id)a0;
- (void)invalidateFetchWindow;
- (unsigned long long)fetchWindowCap;
- (id)copyOfMessagesInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 options:(unsigned int)a1 generation:(unsigned long long *)a2;
- (id)copyOfMessagesInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 options:(unsigned int)a1;
- (void)addCountsForMessages:(id)a0 shouldUpdateUnreadCount:(BOOL)a1;
- (id)copyOfAllMessagesWithOptions:(unsigned int)a0;
- (id)copyOfAllMessages;
- (id)copyMessagesWithRemoteIDs:(id)a0 options:(unsigned int)a1 inMailbox:(id)a2;
- (unsigned long long)_fetchWindowMultiple;
- (unsigned long long)_fetchWindowMinimum;
- (unsigned long long)allNonDeletedCountIncludingServerSearch:(BOOL)a0 andThreadSearch:(BOOL)a1;
- (BOOL)shouldGrowFetchWindow;
- (unsigned long long)_calculateFetchWindowWithAdditionalMultiple:(BOOL)a0;
- (void)messagesWereAdded:(id)a0 earliestReceivedDate:(id)a1;
- (id)filterMessagesByMembership:(id)a0;
- (void)_handleFlagsChangedForMessages:(id)a0 flags:(id)a1 oldFlagsByMessage:(id)a2;
- (id)_memberMessagesWithCompactionNotification:(id)a0;
- (BOOL)dataForMimePart:(id)a0 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 isComplete:(BOOL *)a2 withConsumer:(id)a3 downloadIfNecessary:(BOOL)a4 didDownload:(BOOL *)a5;
- (id)_cachedBodyDataContainerForMessage:(id)a0 valueIfNotPresent:(id)a1;
- (id)fullBodyDataForMessage:(id)a0 andHeaderDataIfReadilyAvailable:(id *)a1 isComplete:(BOOL *)a2 downloadIfNecessary:(BOOL)a3 usePartDatas:(BOOL)a4 didDownload:(BOOL *)a5;
- (BOOL)_fetchDataForMimePart:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 isComplete:(BOOL *)a2 consumer:(id)a3;
- (id)dataForMimePart:(id)a0 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 isComplete:(BOOL *)a2 downloadIfNecessary:(BOOL)a3 didDownload:(BOOL *)a4;
- (id)_copyDataFromMimePart:(id)a0 threshold:(unsigned int)a1 downloadIfNecessary:(BOOL)a2;
- (id)_cachedHeaderDataForMessage:(id)a0 valueIfNotPresent:(id)a1;
- (id)_fetchFullBodyDataForMessage:(id)a0 andHeaderDataIfReadilyAvailable:(id *)a1 downloadIfNecessary:(BOOL)a2 didDownload:(BOOL *)a3;
- (void)compactMessages:(id)a0;
- (id)_fetchBodyDataForMessage:(id)a0 andHeaderDataIfReadilyAvailable:(id *)a1 downloadIfNecessary:(BOOL)a2 partial:(BOOL *)a3;
- (id)setFlagsLocallyFromDictionary:(id)a0 forMessages:(id)a1;
- (void)setNumberOfAttachments:(unsigned int)a0 isSigned:(BOOL)a1 isEncrypted:(BOOL)a2 forMessage:(id)a3;
- (BOOL)canCompact;
- (unsigned long long)serverUnreadOnlyOnServerCount;
- (unsigned long long)unreadCountMatchingCriterion:(id)a0;
- (id)_cachedHeadersForMessage:(id)a0 valueIfNotPresent:(id)a1;
- (void)purgeMessages:(id)a0;
- (BOOL)hasMessageForAccount:(id)a0;
- (void)handleMessagesAdded:(id)a0 earliestReceivedDate:(id)a1;
- (void)_addInvocationToQueue:(id)a0;
- (void)handleMessageFlagsChanged:(id)a0;
- (void)handleMessagesCompacted:(id)a0;
- (void)handleMessagesWillBeCompacted:(id)a0;
- (BOOL)hasCompleteDataForMimePart:(id)a0;
- (void)openSynchronously;
- (unsigned long long)nonDeletedCountIncludingServerSearch:(BOOL)a0 andThreadSearch:(BOOL)a1;
- (id)copyOfMessageInfos;
- (id)copyOfAllMessagesForBodyLoadingFromRowID:(long long)a0 limit:(unsigned int)a1;
- (id)mutableCopyOfAllMessages;
- (id)copyMessagesMatchingText:(id)a0 options:(unsigned int)a1;
- (id)copyMessagesMatchingCriterion:(id)a0 options:(unsigned int)a1;
- (id)copyMessagesWithRemoteIDs:(id)a0 options:(unsigned int)a1;
- (id)serverSearchResults;
- (id)dateOfOldestNonIndexedNonSearchResultMessage;
- (void)willFetchMessages;
- (unsigned long long)growFetchWindow;
- (id)messageForMessageID:(id)a0 options:(unsigned int)a1;
- (BOOL)bodyFetchRequiresNetworkActivity;
- (id)_fetchHeaderDataForMessage:(id)a0 downloadIfNecessary:(BOOL)a1;
- (id)storeData:(id)a0 forMimePart:(id)a1 isComplete:(BOOL)a2;
- (id)fullBodyDataForMessage:(id)a0 andHeaderDataIfReadilyAvailable:(id *)a1 isComplete:(BOOL *)a2 downloadIfNecessary:(BOOL)a3 didDownload:(BOOL *)a4;
- (id)bodyDataForMessage:(id)a0 isComplete:(BOOL *)a1 isPartial:(BOOL *)a2 downloadIfNecessary:(BOOL)a3;
- (unsigned long long)indexOfMessage:(id)a0;
- (void)deleteMessages:(id)a0 moveToTrash:(BOOL)a1;
- (BOOL)allowsAppend;
- (void)doCompact;
- (void)deleteMessagesOlderThanNumberOfDays:(int)a0 compact:(BOOL)a1;
- (void)setFlagsForAllMessagesFromDictionary:(id)a0;
- (void)writeUpdatedMessageDataToDisk;
- (void)_setNeedsAutosave;
- (id)newObjectCache;
- (id)_cachedBodyForMessage:(id)a0 valueIfNotPresent:(id)a1;
- (void)purgeMessagesBeyondLimit:(unsigned long long)a0 keepingMessage:(id)a1;
- (void)setLibrary:(id)a0;
- (id)initWithMailbox:(id)a0;
- (id)library;
- (unsigned long long)fetchWindow;
- (unsigned long long)unreadCount;

@end
