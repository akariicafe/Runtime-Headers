@class TSWPSelection, NSString, NSArray, TSDLayout, CALayer, CAShapeLayer, TSWPStorage, TSUColor, TSWPSearchReference;
@protocol TSWPLayoutTarget;

@interface TSWPRep : TSDContainerRep <CAAnimationDelegate> {
    CALayer *_textLayers[2];
    CAShapeLayer *_caretLayer;
    CAShapeLayer *_selectionLineLayers[2];
    CAShapeLayer *_selectionHighlightLayer;
    CAShapeLayer *_selectionParagraphBorderLayer;
    CAShapeLayer *_markHighlightLayer;
    CAShapeLayer *_smartFieldHighlightLayer;
    CAShapeLayer *_secondaryHighlightLayer;
    struct _NSRange { unsigned long long location; unsigned long long length; } _secondaryHighlightRange;
    int _secondaryHighlightPathStyle;
    BOOL _caretAnimationDisabled;
    BOOL _suppressCaret;
    struct _NSRange { unsigned long long location; unsigned long long length; } _suppressedMisspellingRange;
    BOOL _updatingHighlights;
    BOOL _selectionChanged;
    BOOL _markChanged;
    unsigned long long _newSelectionFlags;
    BOOL _repFieldsAreActive;
    BOOL _hudStateDirty;
    BOOL _invalidateHUDState;
    double _listLevelIndents[9];
    TSWPSelection *_dropSelection;
    BOOL _isShowingCommentKnobs;
    BOOL _tornDown;
    BOOL _searchHitsAreInvalid;
}

@property (readonly, nonatomic) struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } transformToConvertNaturalToScaledRoot;
@property (retain, nonatomic) NSArray *searchReferences;
@property (retain, nonatomic) CAShapeLayer *floatingCaretLayer;
@property (nonatomic) BOOL dragAndDropCaretLayerIsForCaret;
@property (copy, nonatomic) TSWPSelection *lastSelection;
@property (retain, nonatomic) TSUColor *overrideCaretColor;
@property (retain, nonatomic) TSWPSearchReference *primaryFindResultSearchReference;
@property (nonatomic) BOOL findIsShowing;
@property (readonly, weak, nonatomic) TSDLayout<TSWPLayoutTarget> *layout;
@property (readonly, nonatomic) BOOL textIsVertical;
@property (readonly, nonatomic) TSWPStorage *storage;
@property (readonly, nonatomic) NSArray *columns;
@property (readonly, nonatomic) TSWPSelection *selection;
@property (nonatomic, getter=isSelectionHighlightSuppressed) BOOL suppressSelectionHighlight;
@property (nonatomic) BOOL suppressSelectionControls;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } dragRange;
@property (readonly, nonatomic) BOOL isBeingEdited;
@property (nonatomic) BOOL useKeyboardWhenEditing;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;

- (struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)viewDidAppear;
- (void).cxx_destruct;
- (Class)layerClass;
- (void)dealloc;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })selectionRect;
- (void)willBeRemoved;
- (void)drawInContext:(struct CGContext { } *)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })caretRect;
- (BOOL)directlyManagesLayerContent;
- (id)smartFieldAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })glyphRectForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 includingLabel:(BOOL)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })columnRectForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)textLayer;
- (id)repForCharIndex:(unsigned long long)a0 isStart:(BOOL)a1;
- (void)drawInLayerContext:(struct CGContext { } *)a0;
- (void)gesturesDidEnd;
- (id)initWithLayout:(id)a0 canvas:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })naturalBoundsRectForHyperlinkField:(id)a0;
- (id)columnForCharIndex:(unsigned long long)a0;
- (BOOL)isOverflowing;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })caretRectForCharIndex:(unsigned long long)a0 caretAffinity:(int)a1;
- (id)footnoteReferenceAttachmentAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })caretRectForSelection:(id)a0;
- (BOOL)isPointInSelectedArea:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })pinToNaturalBounds:(struct CGPoint { double x0; double x1; })a0 andLastLineFragment:(BOOL)a1;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; double x1; struct TSWPFontHeightInfo { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; } x2; double x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; double x5; struct TSWPFontHeightInfo { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; } x6; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x7; })lineMetricsAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })labelRectForCharIndex:(unsigned long long)a0;
- (struct CGPoint { double x0; double x1; })pinToClosestColumn:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })caretRectForCharIndex:(unsigned long long)a0 leadingEdge:(BOOL)a1 caretAffinity:(int)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })glyphRectForRubyFieldAtCharIndex:(unsigned long long)a0 glyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (unsigned long long)glyphCountForRubyFieldAtCharIndex:(unsigned long long)a0;
- (void)p_teardown;
- (struct CGPoint { double x0; double x1; })p_pinPoint:(struct CGPoint { double x0; double x1; })a0 toRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (id)closestColumnForPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })p_caretRectForSelection:(id)a0;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; double x1; struct TSWPFontHeightInfo { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; } x2; double x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; double x5; struct TSWPFontHeightInfo { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; } x6; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x7; })lineMetricsAtCharIndex:(unsigned long long)a0;
- (void)performBlockOnTextLayers:(id /* block */)a0;
- (void)p_drawTextInLayer:(id)a0 context:(struct CGContext { } *)a1 limitSelection:(id)a2 rubyGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 renderMode:(unsigned long long)a4 suppressInvisibles:(BOOL)a5;
- (id)p_hyperlinkAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })p_paragraphModeRectangleForColumn:(id)a0 selection:(id)a1;
- (void)p_updateLayersForInsertionPointSelection:(id)a0;
- (id)textBackgroundLayer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })p_convertNaturalRectToRotated:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 repAngle:(double)a1;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; double x1; double x2; double x3; double x4; BOOL x5; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x6; })wordMetricsAtCharIndex:(unsigned long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })p_topicDragRectForSelection:(id)a0;
- (void)drawRubyInContext:(struct CGContext { } *)a0 rubyFieldStart:(unsigned long long)a1 rubyGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (id)rubyFieldAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)footnoteMarkAttachmentAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (unsigned long long)charCountOfGlyphStartingAtCharIndex:(unsigned long long)a0;
- (unsigned int)fontTraitsForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 includingLabel:(BOOL)a1;
- (void)recursivelyDrawInContext:(struct CGContext { } *)a0 limitSelection:(id)a1 suppressInvisibles:(BOOL)a2;
- (void)p_registerNotifications;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForSelection:(id)a0 includeRuby:(BOOL)a1 includePaginatedAttachments:(BOOL)a2;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; double x1; struct TSWPFontHeightInfo { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; } x2; double x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; double x5; struct TSWPFontHeightInfo { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; } x6; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x7; })p_lineMetricsAtPoint:(struct CGPoint { double x0; double x1; })a0 allowNotFound:(BOOL)a1;
- (BOOL)p_hasRenderableTextCommentsLookingForHighlights:(BOOL)a0;
- (void)p_drawInContext:(struct CGContext { } *)a0 limitSelection:(id)a1 suppressInvisibles:(BOOL)a2;
- (BOOL)p_hasRenderableTextComments;
- (BOOL)p_hasRenderableTextHighlights;
- (void)p_unregisterNotifications;
- (const struct CGPath { } *)newPathForSelection:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })p_closestCaretRectForCharacterAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })p_closestCaretRectForPoint:(struct CGPoint { double x0; double x1; })a0 inSelection:(BOOL)a1 allowPastBreak:(BOOL)a2;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeOfDropCapAdornmentAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)containsStartOfSelection:(id)a0;
- (BOOL)p_allowCaretForSelection:(id)a0;

@end
