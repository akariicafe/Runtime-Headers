@class TSKPencilAnnotationUIState, NSMutableDictionary, TSADrawableFactory, TSADocumentInfo, NSDictionary, NSMapTable, TSTCustomFormatList, TSKViewState, NSObject, SFUCryptoKey, TSAFunctionBrowserState, NSString, NSSet, TSCECalculationEngine, NSMutableSet, NSArray, TSDFreehandDrawingToolkitUIState, TSPLazyReference, TSKCustomFormatList, TSAShortcutController;
@protocol OS_dispatch_queue, TSAUIState;

@interface TSADocumentRoot : TSWPDocumentRoot <TSKPencilAnnotationSupportedDocument, TSDImportExportDelegate, TSDScrollingAwareChangeSource> {
    _Atomic int _needsToCaptureViewState;
    NSMutableDictionary *_upgradeState;
    TSPLazyReference *_viewStateReference;
    NSMutableSet *_warnings;
    NSString *_documentLanguage;
    unsigned long long _documentLanguageWritingDirection;
    TSCECalculationEngine *_calculationEngine;
    TSAFunctionBrowserState *_functionBrowserState;
    TSTCustomFormatList *_deprecatedTablesCustomFormatList;
    TSKCustomFormatList *_tablesCustomFormatList;
    TSAShortcutController *_shortcutController;
    BOOL _needsMediaCompatibilityUpgrade;
    BOOL _collaborativeMediaCompatibilityUpgradeDidFail;
    BOOL _canUseHEVC;
    BOOL _didPauseRecalculationForBackgroundDocument;
    BOOL _preparedForCollaborationSessionAfterConnecting;
    NSString *_templateIdentifier;
    NSObject<OS_dispatch_queue> *_accessQueue;
    SFUCryptoKey *_accessQueue_documentCacheDecryptionKey;
    NSObject<OS_dispatch_queue> *_fetchLatestRevisionQueue;
}

@property (class, readonly, nonatomic) BOOL doesTopMostContainerSupportRTLOrigin;
@property (class, readonly, nonatomic) BOOL shouldShowImportedDataNotificationsOnOpen;

@property (nonatomic) BOOL hasPreUFFVersion;
@property (nonatomic) BOOL didLoadDocumentFromTemplate;
@property (retain, nonatomic) id<TSAUIState> uiState;
@property (readonly, nonatomic) BOOL isMultiPageForQuickLook;
@property (nonatomic) BOOL didLoadDocumentFromRevert;
@property (readonly, nonatomic) NSDictionary *packageDataForWrite;
@property (readonly, nonatomic) BOOL isClosed;
@property (readonly, nonatomic) BOOL isLoaded;
@property (readonly, nonatomic) BOOL documentLocaleWasUpdated;
@property (readonly, nonatomic) BOOL hasFloatingLocale;
@property (retain, nonatomic) TSCECalculationEngine *calculationEngine;
@property (readonly, nonatomic) TSKViewState *viewState;
@property (readonly, nonatomic) NSSet *missingFontWarningMessages;
@property (readonly, nonatomic) NSDictionary *missingFontNamesAndWarningMessages;
@property (nonatomic) BOOL needsMediaCompatibilityUpgrade;
@property (nonatomic) BOOL collaborativeMediaCompatibilityUpgradeDidFail;
@property (readonly, nonatomic) NSString *name;
@property (readonly, nonatomic) NSString *defaultDraftName;
@property (readonly, nonatomic) TSADocumentInfo *documentInfo;
@property (copy, nonatomic) NSArray *buildVersionHistory;
@property (copy, nonatomic) NSString *templateIdentifier;
@property (readonly, nonatomic) TSADrawableFactory *drawableFactory;
@property (readonly, nonatomic) TSDFreehandDrawingToolkitUIState *freehandDrawingToolkitUIState;
@property (readonly, nonatomic) TSKPencilAnnotationUIState *pencilAnnotationUIState;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSMapTable *incompatibleMediaContainersWithDataUnsupportedOnThisDevice;
@property (readonly, nonatomic) NSMapTable *incompatibleMediaContainersWithDataUnsupportedOnAllDevices;
@property (readonly, nonatomic) BOOL isBrowsingVersions;

+ (void)localizeModelObject:(id)a0 withTemplateBundle:(id)a1 andLocale:(id)a2;
+ (id)localizedTemplateStringForKey:(id)a0 value:(id)a1 table:(id)a2 templateBundle:(id)a3 locale:(id)a4;
+ (struct CGSize { double x0; double x1; })previewImageSizeForType:(unsigned long long)a0;
+ (struct CGSize { double x0; double x1; })previewImageMaxSizeForType:(unsigned long long)a0;
+ (void)localizeDropCapsInStorage:(id)a0 withLocale:(id)a1;
+ (void)localizeTextStorage:(id)a0 withTemplateBundle:(id)a1 andLocale:(id)a2;
+ (id)buildVersionHistoryPath;
+ (BOOL)writePreviewImagesToPath:(id)a0 scalableImage:(id)a1 group:(id)a2 queue:(id)a3;
+ (BOOL)writePreviewImagesToPackageDataWriter:(id)a0 scalableImage:(id)a1 group:(id)a2 queue:(id)a3;
+ (id)supportedPreviewImageExtensions;
+ (void)removeExistingPreviewsForDocumentAtPath:(id)a0;
+ (void)writePreviewImage:(id)a0 group:(id)a1 queue:(id)a2 dataConsumerProvider:(id /* block */)a3 completion:(id /* block */)a4;
+ (id)scaledPreviewImageForType:(unsigned long long)a0 scalableImage:(id)a1;
+ (id)buildVersionHistoryPathPreUFF;
+ (id)supportedScalablePreviewNames;
+ (BOOL)writePreviewImagesToPath:(id)a0 scalableImage:(id)a1;
+ (BOOL)writePreviewImagesToPackageDataWriter:(id)a0 scalableImage:(id)a1;
+ (void)writePreviewImage:(id)a0 toPath:(id)a1 withIntermediateDirectories:(BOOL)a2 name:(id)a3 group:(id)a4 queue:(id)a5 completion:(id /* block */)a6;
+ (unsigned long long)previewTypeForCurrentDevice;
+ (id)persistenceWarningsForData:(id)a0 flags:(unsigned long long)a1;
+ (id)_localeForUnlocalizedValues;
+ (void)localizePropertiesOfStylesInStylesheet:(id)a0 withMap:(id)a1;
+ (id)localizedFontNameForFontName:(id)a0 withLocale:(id)a1;
+ (void)localizeChartInfo:(id)a0 withTemplateBundle:(id)a1 andLocale:(id)a2;
+ (void)localizeTableInfo:(id)a0 templateBundle:(id)a1 andLocale:(id)a2;
+ (void)localizePropertiesOfStyle:(id)a0 withMap:(id)a1;
+ (void)localizePropertiesOfIdentifiedStyle:(id)a0 withMap:(id)a1;
+ (void)localizePropertiesOfNamedStyle:(id)a0 withMap:(id)a1;
+ (void)replacePropertiesOfStyle:(id)a0 withMap:(id)a1;
+ (id)_localizedStringKeyForValue:(double)a0 templateName:(id)a1 tableInfo:(id)a2 unlocalizedTableName:(id)a3 cellAddress:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a4 defaultValue:(out id *)a5;

- (void)didEnterBackground;
- (id)initWithContext:(id)a0;
- (void).cxx_destruct;
- (void)commonInit;
- (void)dealloc;
- (void)willEnterForeground;
- (void)resetViewState;
- (unsigned long long)writingDirection;
- (id)previewImage;
- (id)warnings;
- (id)upgradeState;
- (void)documentDidLoad;
- (void)addWarning:(id)a0;
- (id)additionalDocumentPropertiesForWrite;
- (id)dataFromDocumentCachePath:(id)a0;
- (BOOL)writeData:(id)a0 atDocumentCachePath:(id)a1;
- (struct CGImageSource { } *)newImageSourceForDocumentCachePath:(id)a0;
- (id)uniqueDocumentCachePathForProposedPath:(id)a0;
- (void)didSaveWithEncryptionChange;
- (id)commandForPropagatingPresetChangeCommand:(id)a0 alwaysPreserveAppearance:(BOOL)a1;
- (BOOL)hasICloudConflict;
- (id)referencedStylesOfClass:(Class)a0;
- (id)customFormatList;
- (void)fulfillPasteboardPromises;
- (void)p_registerAllFormulasAfterImport;
- (BOOL)exportToPath:(id)a0 exporter:(id)a1 delegate:(id)a2 error:(id *)a3;
- (id)p_parseNumberOutOfBasename:(id)a0 hasNumber:(BOOL *)a1 number:(unsigned long long *)a2;
- (id)protected_defaultTextPresetOrdering;
- (void)pUpgradeHyperlinksInStorage:(id)a0;
- (void)performHyperlinkUpgradesIfNecessaryForVersion:(unsigned long long)a0;
- (void)p_removeStyles:(id)a0;
- (void)p_replaceStyles:(id)a0 andChildrenWithVariationOfStyle:(id)a1;
- (id)documentCachePath;
- (void)removeWarning:(id)a0;
- (void)updateWritingDirection:(unsigned long long)a0;
- (void)willClose;
- (void)initializeForImport;
- (void)suspendBackgroundActivities;
- (void)resumeBackgroundActivities;
- (void)suspendThumbnailing;
- (void)resumeThumbnailing;
- (void)importerDidFinish:(id)a0;
- (id)newExporterForType:(id)a0 options:(id)a1 preferredType:(id *)a2;
- (BOOL)exportToPath:(id)a0 exporter:(id)a1 error:(id *)a2;
- (void)prepareForSavingAsTemplate;
- (void)insertTextPresetDisplayItemsPreservingGrouping:(id)a0 insertAtBeginningOfGroup:(BOOL)a1;
- (void)pUpgradeHyperlinks;
- (void)performStylesheetUpdatesIfNecessaryForVersion:(unsigned long long)a0;
- (void)p_replaceStyle:(id)a0 andChildrenWithVariationOfStyle:(id)a1;
- (void)loadFromArchive:(const struct DocumentArchive { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedPtrField<TSWP::TextPresetDisplayItemArchive> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x4; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; } x5; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; } x6; struct DocumentArchive *x7; struct Reference *x8; struct Reference *x9; struct Reference *x10; struct Reference *x11; struct Reference *x12; struct Reference *x13; struct Reference *x14; struct Reference *x15; BOOL x16; BOOL x17; BOOL x18; BOOL x19; } *)a0 unarchiver:(id)a1;
- (void)saveToArchive:(struct DocumentArchive { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedPtrField<TSWP::TextPresetDisplayItemArchive> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x4; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; } x5; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; } x6; struct DocumentArchive *x7; struct Reference *x8; struct Reference *x9; struct Reference *x10; struct Reference *x11; struct Reference *x12; struct Reference *x13; struct Reference *x14; struct Reference *x15; BOOL x16; BOOL x17; BOOL x18; BOOL x19; } *)a0 archiver:(id)a1;
- (void)upgradeTextStylesForUnityAfterSingleStylesheetUpgrade;
- (void)invalidateViewState;
- (id)createViewStateRootForContinuation:(BOOL)a0;
- (id)warningLocationDescriptionForAffectedObjects:(id)a0 sortingInfo:(id *)a1;
- (long long)compareLocationSortingInfo:(id)a0 toSortingInfo:(id)a1;
- (void)setCustomFormatListToUpgrade:(id)a0;
- (id)makeStyleMapper;
- (void)pauseRecalculation;
- (void)resumeRecalculation;
- (void)prepareNewDocumentWithTemplateIdentifier:(id)a0 bundle:(id)a1 documentLocale:(id)a2;
- (void)resumeRecalculationForBlock:(id /* block */)a0;
- (BOOL)shouldAllowDrawableInGroups:(id)a0;
- (id)previewImageForSize:(struct CGSize { double x0; double x1; })a0;
- (void)enumeratePencilAnnotationsUsingBlock:(id /* block */)a0;
- (BOOL)hasPencilAnnotations;
- (double)currentDesiredPencilAnnotationDrawingScale;
- (BOOL)p_updateDocumentLanguageToCurrentIfNeeded;
- (id)readBuildVersionHistoryFromDiskHasPreUFFVersion:(BOOL)a0;
- (void)p_updateBuildVersionHistoryWithVersionOfTemplateIdentifier:(id)a0;
- (void)setDocumentCreationLocale:(id)a0;
- (void)setDocumentLanguage:(id)a0;
- (void)removeRedundantStyleOverridesAndEnsureReferencedStylesAreInStylesheet;
- (id)buildVersionHistoryTemplateNameForIdentifier:(id)a0;
- (id)documentLanguage;
- (id)tsa_delegate;
- (void)backgroundDocumentDidLoad;
- (void)stashUpgradeState:(const struct DocumentArchive { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedPtrField<TSWP::TextPresetDisplayItemArchive> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x4; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; } x5; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; } x6; struct DocumentArchive *x7; struct Reference *x8; struct Reference *x9; struct Reference *x10; struct Reference *x11; struct Reference *x12; struct Reference *x13; struct Reference *x14; struct Reference *x15; BOOL x16; BOOL x17; BOOL x18; BOOL x19; } *)a0 unarchiver:(id)a1;
- (void)p_upgradeDocumentCreationLocale;
- (void)setShortcutController:(id)a0;
- (void)setFunctionBrowserState:(id)a0;
- (void)p_upgradeCustomFormatList;
- (void)upgradeTextStylesForUnityBeforeSingleStylesheetUpgrade;
- (void)upgradeToSingleStylesheet;
- (void)upgradeTextStylesForUnityPlusFromFileFormatVersion:(unsigned long long)a0;
- (void)upgradeCellStyles;
- (void)upgradeTextboxPresets;
- (void)p_addCaptionShapeStyles;
- (void)p_upgradeRemainingOutlinedTextStylesWithFileFormatVersion:(unsigned long long)a0;
- (void)upgradeToFixNonVariationChildStylesWithFileFormatVersion:(unsigned long long)a0;
- (BOOL)validatedLoadFromUnarchiver:(id)a0;
- (void)willUnload;
- (void)pauseRecalculationSometimeSoon;
- (id)captureViewState;
- (id)p_captureViewStateForImport:(BOOL)a0;
- (void)p_updateViewStateWithRoot:(id)a0;
- (void)blockForRecalcWithTimeout:(double)a0;
- (id)warningsByCombiningSortedWarnings:(id)a0 withWarnings:(id)a1;
- (void)enumerateStylesheetsUsingBlock:(id /* block */)a0;
- (void)p_cleanupColumnStyles;
- (void)documentCacheWasInvalidated;
- (BOOL)canBeAnnotatedWithPencil;
- (BOOL)childrenCanBeAnnotatedWithPencil;
- (void)removePencilAnnotations;
- (void)enumeratePencilAnnotationsFromRootObject:(id)a0 usingBlock:(id /* block */)a1;
- (id)pencilAnnotationEnumeratorFromRootObject:(id)a0;
- (id)allPencilAnnotations;
- (void)removePencilAnnotationsFromDrawables:(id)a0;
- (BOOL)shouldCancelScrollingToSelectionPath:(id)a0 forChanges:(id)a1;
- (void)prepareNewDocumentWithUserTemplateIdentifier:(id)a0;
- (id)makeIsolatedStyleMapper;
- (BOOL)objectsNeedToBeMigrated:(id)a0;
- (void)sendDocumentOpenedAnalyticsEventWithEventPayload:(id)a0;
- (id)additionalResourceRequestsForObjectContext:(id)a0;
- (void)cleanupForImportFailure;
- (id)shortcutController;
- (id)functionBrowserState;
- (void)captureViewStateIfNeeded;
- (id)captureViewStateForImport;
- (void)applyViewState:(id)a0;
- (void)updateViewStateWithRoot:(id)a0;
- (void)prepareUIStateForInitialViewing:(id)a0;
- (void)prepareToGeneratePreview;
- (id)consolidatedDocumentWarningsFromWarnings:(id)a0;
- (BOOL)shouldShowFontWarningNotificationForWarnings:(id)a0;
- (id)tableToShowImportedDataNotificationOnOpenFor;
- (void)fontUpdatedForStyleClient:(id)a0;
- (void)didDownloadDocumentResources:(id)a0;
- (void)didDownloadRemoteData:(id)a0;
- (void)finalizeFromSageImport;
- (BOOL)hasExpandedTables;
- (void)p_verifyEntireDocument;
- (void)sendDocumentExportedAnalyticsWithExportFormat:(id)a0 error:(id)a1 success:(BOOL)a2;
- (void)sendDocumentEditedAnalyticsWithWasEdited:(BOOL)a0;
- (id)namedTextStyles;

@end
