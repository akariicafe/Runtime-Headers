@class NSString, TSTHiddenStatesOwner, TSTHiddenStateExtent, TSTTableFilterSet;

@interface TSTHiddenStates : NSObject <TSTTableHiddenRowColumnProviding, TSTAdditionalHiddenRowColumnProviding>

@property (weak, nonatomic) TSTHiddenStatesOwner *hiddenStatesOwner;
@property (readonly, retain, nonatomic) TSTHiddenStateExtent *rowHiddenStateExtent;
@property (readonly, retain, nonatomic) TSTHiddenStateExtent *columnHiddenStateExtent;
@property (nonatomic) struct UUIDData<TSP::UUIDData> { union { unsigned char _uuid[16]; struct { unsigned char byte0; unsigned char byte1; unsigned char byte2; unsigned char byte3; unsigned char byte4; unsigned char byte5; unsigned char byte6; unsigned char byte7; unsigned char byte8; unsigned char byte9; unsigned char byte10; unsigned char byte11; unsigned char byte12; unsigned char byte13; unsigned char byte14; unsigned char byte15; } _cfuuid; struct { unsigned long long _lower; unsigned long long _upper; } ; } ; } hiddenStatesUid;
@property (readonly, nonatomic) BOOL hasHiddenRows;
@property (readonly, nonatomic) BOOL hasHiddenColumns;
@property (readonly, nonatomic) BOOL hasUserHiddenRows;
@property (readonly, nonatomic) BOOL hasUserHiddenColumns;
@property (readonly, nonatomic) BOOL hasCollapsedRows;
@property (readonly, nonatomic) unsigned int numberOfHiddenRows;
@property (readonly, nonatomic) unsigned int numberOfHiddenColumns;
@property (readonly, nonatomic) unsigned int numberOfUserHiddenRows;
@property (readonly, nonatomic) unsigned int numberOfUserHiddenColumns;
@property (nonatomic) struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; } hiddenStateOwnerForRowsUID;
@property (nonatomic) struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; } hiddenStateOwnerForColumnsUID;
@property (retain, nonatomic) TSTTableFilterSet *filterSet;
@property (nonatomic) BOOL needsFilterFormulaRewriteForImport;
@property (nonatomic) BOOL needsToUpdateFilterSetForImport;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })filterFormulaCoordinateForRow:(unsigned int)a0;
+ (struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })filterFormulaThresholdCoordinateForRow:(unsigned int)a0;
+ (struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })filterFormulaCoordinate;
+ (id)mutableIndexSetByIntersecting:(id)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;

- (void).cxx_destruct;
- (id).cxx_construct;
- (void)setTableInfo:(id)a0;
- (void)encodeToArchive:(struct HiddenStatesArchive { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct UUID *x4; struct HiddenStateExtentArchive *x5; struct HiddenStateExtentArchive *x6; } *)a0 archiver:(id)a1;
- (id)indexesOfVisibleRowsInRowRange:(id)a0;
- (struct TSCERangeRef { struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } x0; struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; } x1; })referenceToHiddenStateFromRow:(unsigned int)a0 toRow:(unsigned int)a1;
- (struct TSCERangeRef { struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } x0; struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; } x1; })referenceToHiddenStateFromColumn:(unsigned short)a0 toColumn:(unsigned short)a1;
- (void)unregisterFromCalcEngine;
- (unsigned int)indexOfVisibleRowAfterAndIncludingRowAtIndex:(unsigned int)a0;
- (unsigned int)indexOfVisibleRowBeforeAndIncludingRowAtIndex:(unsigned int)a0;
- (id)indexesOfVisibleColumnsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; })a0;
- (unsigned short)indexOfVisibleColumnAfterAndIncludingColumnAtIndex:(unsigned short)a0;
- (unsigned short)indexOfVisibleColumnBeforeAndIncludingColumnAtIndex:(unsigned short)a0;
- (id)indexesOfUserHiddenRowsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; })a0;
- (BOOL)showRowAtIndex:(unsigned int)a0 forAction:(unsigned char)a1;
- (id)indexesOfHiddenColumnsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; })a0;
- (BOOL)showColumnAtIndex:(unsigned short)a0 forAction:(unsigned char)a1;
- (id)mutableFilteredRowIndexes;
- (void)insertNewRowsInBaseRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (BOOL)showBaseRowAtIndex:(struct TSUModelRowIndex { unsigned int x0; })a0 forAction:(unsigned char)a1;
- (BOOL)hideBaseRowAtIndex:(struct TSUModelRowIndex { unsigned int x0; })a0 forAction:(unsigned char)a1;
- (void)insertNewColumnsInBaseRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (BOOL)hideBaseColumnAtIndex:(struct TSUModelColumnIndex { unsigned short x0; })a0 forAction:(unsigned char)a1;
- (void)deleteRowsFromBaseRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 rowUids:(const struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> *x0; struct UUIDData<TSP::UUIDData> *x1; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> *x0; } x2; } *)a1;
- (void)deleteColumnsFromBaseRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 columnUids:(const struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> *x0; struct UUIDData<TSP::UUIDData> *x1; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> *x0; } x2; } *)a1;
- (void)moveBaseRowRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 toRowIndex:(struct TSUModelRowIndex { unsigned int x0; })a1;
- (void)moveBaseColumnRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 toColumnIndex:(struct TSUModelColumnIndex { unsigned short x0; })a1;
- (void)swapBaseRowAtIndex:(struct TSUModelRowIndex { unsigned int x0; })a0 withRowAtIndex:(struct TSUModelRowIndex { unsigned int x0; })a1;
- (BOOL)hideRowAtIndex:(unsigned int)a0 forAction:(unsigned char)a1;
- (BOOL)hideColumnAtIndex:(unsigned short)a0 forAction:(unsigned char)a1;
- (void)setFormulaOwnerUIDsWithMap:(id)a0;
- (void)remapTableUIDsInFormulasWithMap:(const struct UUIDMap<TSP::UUIDMap> { struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData> >, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData> >, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData> >, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData> > > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData> >, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData> >, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData> >, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData> >, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData> >, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData> >, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData> >, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData> >, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData> >, std::__1::hash<TSUUUID>, true> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData> >, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, true> > { float x0; } x3; } x0; } *)a0 calcEngine:(id)a1;
- (id)initWithHiddenStatesOwner:(id)a0;
- (void)copyFromHiddenStates:(id)a0 forRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; })a1 withContext:(id)a2 isWholeTableCopy:(BOOL)a3;
- (BOOL)hasActiveFilters;
- (int)registerWithCalcEngine:(id)a0 baseOwnerUID:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; } *)a1;
- (void)filterSetUpdated;
- (id)duplicateFilterSetInUidFormWithTable:(id)a0;
- (void)setFilterSetType:(int)a0;
- (void)dirtyFilterState;
- (BOOL)hasFilterRulesWithTable:(id)a0 inBaseColumns:(id)a1;
- (unsigned short)indexOfVisibleColumnBeforeColumnAtIndex:(unsigned short)a0;
- (unsigned short)indexOfVisibleColumnAfterColumnAtIndex:(unsigned short)a0;
- (unsigned int)indexOfVisibleRowBeforeRowAtIndex:(unsigned int)a0;
- (unsigned int)indexOfVisibleRowAfterRowAtIndex:(unsigned int)a0;
- (unsigned int)numberOfHiddenRowsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; })a0;
- (unsigned int)numberOfUserHiddenRowsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; })a0;
- (unsigned int)numberOfHiddenColumnsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; })a0;
- (BOOL)hasHiddenRowAtIndex:(unsigned int)a0 forAction:(unsigned char)a1;
- (BOOL)hasHiddenColumnAtIndex:(unsigned short)a0 forAction:(unsigned char)a1;
- (id)indexesOfUserHiddenColumnsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; })a0;
- (id)indexesOfVisibleColumnsInCellRegion:(id)a0;
- (id)indexesOfVisibleColumnsInColumnRange:(id)a0;
- (id)indexesOfHiddenRowsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; })a0;
- (id)indexesOfFilteredRowsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; })a0;
- (id)indexesOfVisibleRowsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; })a0;
- (id)indexesOfVisibleRowsInCellRegion:(id)a0;
- (id)indexesOfUserVisibleRowsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; })a0;
- (id)indexesOfCollapsedRowsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; })a0;
- (unsigned char)hidingActionForRowAtIndex:(unsigned int)a0;
- (unsigned char)hidingActionForColumnAtIndex:(unsigned short)a0;
- (BOOL)anyHiddenRowsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; })a0 forAction:(unsigned char)a1;
- (BOOL)hasHiddenRowAtIndex:(unsigned int)a0;
- (BOOL)hasHiddenColumnAtIndex:(unsigned short)a0;
- (BOOL)anyHiddenRowsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; })a0;
- (BOOL)anyHiddenColumnsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; })a0;
- (id)applyCollapseExpandState:(id)a0 outUndoState:(id *)a1;
- (void)willChangeGroupByTo:(id)a0;
- (id)collapseSummaryGroupUIDs:(id)a0;
- (id)expandSummaryGroupUIDs:(id)a0;
- (BOOL)isCategoryGroupOrParentsCollapsed:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; } *)a0;
- (id)duplicateFilterSet;
- (void)enableFilterSet:(BOOL)a0;
- (id)mutableAnyHiddenColumnIndexes;
- (id)mutableAnyHiddenRowIndexes;
- (void)loadIndexesFromTable:(id)a0;
- (id)initWithArchive:(const struct HiddenStatesArchive { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct UUID *x4; struct HiddenStateExtentArchive *x5; struct HiddenStateExtentArchive *x6; } *)a0 unarchiver:(id)a1 forHiddenStatesOwner:(id)a2;
- (id)initWithHiddenStatesOwner:(id)a0 hiddenStatesUid:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; } *)a1;
- (void)syncUpHiddenStateFormulaOwnerUIDs;
- (BOOL)isCategoryGroupUIDCollapsed:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; } *)a0;
- (void)setCategoryGroupUID:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; } *)a0 asCollapsed:(BOOL)a1;
- (id)collapsedGroupUids;
- (id)copyCollapsedStateToUpdatedGroupUids:(id)a0;
- (id)runChange:(id)a0 withCollapsedState:(id)a1 outUndoState:(id *)a2;
- (void)mutateFormulaFiltersWithTable:(id)a0 usingBlock:(id /* block */)a1;
- (void)dirtyFilterStateForHeaders;
- (void)dirtyFilterStateForFooters;
- (BOOL)showBaseColumnAtIndex:(struct TSUModelColumnIndex { unsigned short x0; })a0 forAction:(unsigned char)a1;
- (unsigned char)hidingActionForBaseRowAtIndex:(struct TSUModelRowIndex { unsigned int x0; })a0;
- (unsigned char)hidingActionForBaseColumnAtIndex:(struct TSUModelColumnIndex { unsigned short x0; })a0;
- (struct TSUModelColumnIndex { unsigned short x0; })numberOfHiddenColumnsInBaseCellRange:(struct TSUModelCellRect { struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; } x0; })a0;
- (id)indexesOfHiddenColumnsInBaseCellRange:(struct TSUModelCellRect { struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; } x0; })a0;
- (struct TSUModelRowIndex { unsigned int x0; })numberOfHiddenRowsInBaseCellRange:(struct TSUModelCellRect { struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; } x0; })a0;
- (struct TSUModelRowIndex { unsigned int x0; })numberOfUserHiddenRowsInBaseCellRange:(struct TSUModelCellRect { struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; } x0; })a0;
- (id)indexesOfHiddenRowsInBaseCellRange:(struct TSUModelCellRect { struct TSUCellRect { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct { unsigned int x0; unsigned int x1; } x1; } x0; })a0;
- (void)moveViewColumnRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 toColumnIndex:(struct TSUViewColumnIndex { unsigned short x0; })a1;
- (id)mutableUserHiddenRowIndexes;
- (id)mutableUserHiddenColumnIndexes;

@end
