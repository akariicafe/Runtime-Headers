@class NSString, TSPObject, NSDictionary, NSHashTable, NSMutableDictionary, TSPReferenceOrderedSet;

@interface TSPArchiverBase : NSObject <TSPArchivableContent> {
    struct unique_ptr<google::protobuf::Message, std::__1::default_delete<google::protobuf::Message> > { struct __compressed_pair<google::protobuf::Message *, std::__1::default_delete<google::protobuf::Message> > { struct Message *__value_; } __ptr_; } _message;
    struct unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes> > > { struct __hash_table<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, std::__1::__unordered_map_hasher<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, TSP::FieldPathHash, true>, std::__1::__unordered_map_equal<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, TSP::FieldPathEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes> > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, TSP::FieldPathHash, true> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::__unordered_map_equal<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, TSP::FieldPathEqualTo, true> > { float x0; } x3; } x0; } *_fieldRules;
    struct FieldPath { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedField<unsigned int> { int x0; int x1; union Pointer { struct Arena *x0; struct Rep *x1; } x2; } x4; int x5; } *_currentFieldPath;
    NSMutableDictionary *_alternates;
}

@property (readonly, nonatomic) BOOL isContentUnknown;
@property (readonly, nonatomic) BOOL isDiff;
@property (readonly, nonatomic) unsigned long long messageVersion;
@property (readonly, nonatomic) const struct FieldPath { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedField<unsigned int> { int x0; int x1; union Pointer { struct Arena *x0; struct Rep *x1; } x2; } x4; int x5; } *fieldPath;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) TSPObject *object;
@property (nonatomic) unsigned long long messageVersion;
@property (readonly, nonatomic) unsigned long long minimumSupportedVersion;
@property (readonly, nonatomic) const struct FieldPath { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedField<unsigned int> { int x0; int x1; union Pointer { struct Arena *x0; struct Rep *x1; } x2; } x4; int x5; } *currentFieldPath;
@property (readonly, nonatomic) NSDictionary *alternates;
@property (readonly, nonatomic) TSPReferenceOrderedSet *strongReferences;
@property (readonly, nonatomic) TSPReferenceOrderedSet *weakReferences;
@property (readonly, nonatomic) NSHashTable *lazyReferences;
@property (readonly, nonatomic) NSHashTable *dataReferences;
@property (readonly, nonatomic) unsigned int messageType;
@property (readonly, nonatomic) long long targetType;
@property (readonly, nonatomic) BOOL isForCopy;
@property (readonly, nonatomic) BOOL isSavingDocumentAs;
@property (readonly, nonatomic) BOOL isSavingCollaborativeDocument;

- (id)init;
- (void).cxx_destruct;
- (void)cleanup;
- (id)initWithObject:(id)a0;
- (void)dealloc;
- (id).cxx_construct;
- (struct Message { void /* function */ **x0; } *)message;
- (void)validateMessage:(const struct Message { void /* function */ **x0; } *)a0;
- (void)setStrongReference:(id)a0 message:(struct Reference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; int x5; BOOL x6; } *)a1;
- (void)setStrongReferenceArray:(id)a0 message:(struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a1;
- (void)setWeakReferenceOrderedSet:(id)a0 message:(struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a1;
- (void)setWeakReference:(id)a0 message:(struct Reference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; int x5; BOOL x6; } *)a1;
- (void)setIgnoreAndPreserveRuleForField:(int)a0 message:(const struct Message { void /* function */ **x0; } *)a1;
- (id)alternateDiffToMergeBeforeVersion:(unsigned long long)a0 fileFormatVersion:(unsigned long long)a1 message:(const struct Message { void /* function */ **x0; } *)a2;
- (struct Message { void /* function */ **x0; } *)messageWithNewFunction:(void /* function */ *)a0 descriptor:(const struct Descriptor { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x1; struct FileDescriptor *x2; struct Descriptor *x3; struct MessageOptions *x4; struct FieldDescriptor *x5; struct OneofDescriptor *x6; struct Descriptor *x7; struct EnumDescriptor *x8; struct ExtensionRange *x9; struct FieldDescriptor *x10; struct ReservedRange *x11; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > **x12; int x13; int x14; int x15; int x16; int x17; int x18; int x19; int x20; BOOL x21; BOOL x22; } *)a1;
- (void)pushScopeForField:(int)a0 message:(const struct Message { void /* function */ **x0; } *)a1 usingBlock:(id /* block */)a2;
- (void)setWeakReferenceToObjectUUID:(id)a0 message:(struct UUID { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; unsigned long long x5; } *)a1;
- (void)setWeakReferenceToObjectUUIDArray:(id)a0 message:(struct RepeatedPtrField<TSP::UUID> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a1;
- (void)setIgnoreAndPreserveUntilModifiedRuleForField:(int)a0 message:(const struct Message { void /* function */ **x0; } *)a1;
- (void)setStrongLazyReference:(id)a0 message:(struct Reference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; int x5; BOOL x6; } *)a1;
- (void)setDataReferenceArray:(id)a0 message:(struct RepeatedPtrField<TSP::DataReference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a1;
- (void)setStrongReferenceSet:(id)a0 message:(struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a1;
- (void)setDataReference:(id)a0 message:(struct DataReference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; } *)a1;
- (void)setWeakReferenceArray:(id)a0 message:(struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a1;
- (void)setWeakLazyReference:(id)a0 message:(struct Reference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; int x5; BOOL x6; } *)a1;
- (void)setWeakReferenceSet:(id)a0 message:(struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a1;
- (void)setWeakReferenceToObjectUUIDPath:(id)a0 message:(struct UUIDPath { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedPtrField<TSP::UUID> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x4; } *)a1;
- (void)setSparseReferenceArray:(id)a0 message:(struct SparseReferenceArray { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedPtrField<TSP::SparseReferenceArray_Entry> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x4; unsigned int x5; } *)a1;
- (void)setIgnoreAndPreserveUntilModifiedRuleForFieldPath:(int *)a0 message:(const struct Message { void /* function */ **x0; } *)a1;
- (id)alternateDiffToMergeBeforeVersion:(unsigned long long)a0 fileFormatVersion:(unsigned long long)a1 fieldPath:(int *)a2 message:(const struct Message { void /* function */ **x0; } *)a3;
- (void)setMustUnderstandRuleForFieldPath:(int *)a0 message:(const struct Message { void /* function */ **x0; } *)a1;
- (void)setRule:(int)a0 forFieldPath:(int *)a1 fileFormatVersion:(unsigned long long)a2 featureIdentifier:(id)a3 message:(const struct Message { void /* function */ **x0; } *)a4;
- (void)setIgnoreAndPreserveRuleForFieldPath:(int *)a0 message:(const struct Message { void /* function */ **x0; } *)a1;
- (const struct FieldPath { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedField<unsigned int> { int x0; int x1; union Pointer { struct Arena *x0; struct Rep *x1; } x2; } x4; int x5; } *)baseFieldPathAndReturnShouldDeleteReturnedValue:(BOOL *)a0;
- (id)addAlternateArchiverForVersion:(unsigned long long)a0 fieldPath:(const struct FieldPath { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedField<unsigned int> { int x0; int x1; union Pointer { struct Arena *x0; struct Rep *x1; } x2; } x4; int x5; } *)a1 isDiffArchiver:(BOOL)a2 diffReadVersion:(unsigned long long)a3 message:(const struct Message { void /* function */ **x0; } *)a4;
- (id)alternateDiffToMergeBeforeVersion:(unsigned long long)a0 fileFormatVersion:(unsigned long long)a1 fieldPath:(int *)a2 baseFieldPath:(const struct FieldPath { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedField<unsigned int> { int x0; int x1; union Pointer { struct Arena *x0; struct Rep *x1; } x2; } x4; int x5; } *)a3 message:(const struct Message { void /* function */ **x0; } *)a4;
- (void)addWeakReferenceToObjectUUID:(id)a0;
- (void)releaseMessage;
- (void)setStrongReferenceOrderedSet:(id)a0 message:(struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a1;
- (void)setStrongLazyReferenceArray:(id)a0 message:(struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a1;
- (void)setDataReferenceSet:(id)a0 message:(struct RepeatedPtrField<TSP::DataReference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a1;
- (void)setDataReferenceOrderedSet:(id)a0 message:(struct RepeatedPtrField<TSP::DataReference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a1;
- (void)setMustUnderstandRuleForField:(int)a0 message:(const struct Message { void /* function */ **x0; } *)a1;
- (void)enumerateFieldRulesUsingBlock:(id /* block */)a0;
- (id)alternateDiffToMergeBeforeVersion:(unsigned long long)a0 fileFormatVersion:(unsigned long long)a1 field:(int)a2 message:(const struct Message { void /* function */ **x0; } *)a3;
- (void)setWeakReferenceToObjectUUIDData:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; } *)a0 message:(struct UUID { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; unsigned long long x5; } *)a1;
- (void)setWeakReferenceToObjectUUIDPathArray:(id)a0 message:(struct RepeatedPtrField<TSP::UUIDPath> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a1;
- (void)setSparseReferenceArray:(id)a0 isWeak:(BOOL)a1 message:(struct SparseReferenceArray { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedPtrField<TSP::SparseReferenceArray_Entry> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x4; unsigned int x5; } *)a2;
- (void)setSparseWeakReferenceArray:(id)a0 message:(struct SparseReferenceArray { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedPtrField<TSP::SparseReferenceArray_Entry> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x4; unsigned int x5; } *)a1;
- (void)setSparseWeakObjectUUIDReferenceArray:(id)a0 message:(struct SparseUUIDArray { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedPtrField<TSP::SparseUUIDArray_Entry> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x4; unsigned int x5; } *)a1;
- (void)setSparseWeakObjectUUIDPathReferenceArray:(id)a0 message:(struct SparseUUIDPathArray { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedPtrField<TSP::SparseUUIDPathArray_Entry> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x4; unsigned int x5; } *)a1;

@end
