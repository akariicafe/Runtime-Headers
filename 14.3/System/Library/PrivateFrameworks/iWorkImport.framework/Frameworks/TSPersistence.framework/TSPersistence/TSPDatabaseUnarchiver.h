@interface TSPDatabaseUnarchiver : TSPUnarchiver

@property (readonly, nonatomic) unsigned long long preUFFVersion;

- (BOOL)canValidateReferences;
- (id)initWithMessageType:(unsigned int)a0 message:(struct unique_ptr<google::protobuf::Message, std::__1::default_delete<google::protobuf::Message> > { struct __compressed_pair<google::protobuf::Message *, std::__1::default_delete<google::protobuf::Message> > { struct Message *x0; } x0; })a1 identifier:(long long)a2 strongReferences:(struct unique_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > >, std::__1::default_delete<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > > > { struct __compressed_pair<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > *, std::__1::default_delete<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > > > { struct unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > *x0; } x0; })a3 messageVersion:(unsigned long long)a4 unknownContent:(id)a5 objectDelegate:(id)a6 lazyReferenceDelegate:(id)a7 delegate:(id)a8;
- (id)initWithMessageType:(unsigned int)a0 message:(struct unique_ptr<google::protobuf::Message, std::__1::default_delete<google::protobuf::Message> > { struct __compressed_pair<google::protobuf::Message *, std::__1::default_delete<google::protobuf::Message> > { struct Message *x0; } x0; })a1 identifier:(long long)a2 strongReferences:(struct unique_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > >, std::__1::default_delete<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > > > { struct __compressed_pair<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > *, std::__1::default_delete<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > > > { struct unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > *x0; } x0; })a3 databaseVersion:(unsigned long long)a4 objectDelegate:(id)a5 lazyReferenceDelegate:(id)a6 delegate:(id)a7;
- (struct set<long long, std::__1::less<long long>, std::__1::allocator<long long> > { } *)filterIdentifiers:(const struct set<long long, std::__1::less<long long>, std::__1::allocator<long long> > { } *)a0;

@end
