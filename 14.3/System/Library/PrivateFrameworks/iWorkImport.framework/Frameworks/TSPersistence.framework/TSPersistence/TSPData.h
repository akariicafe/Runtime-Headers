@class NSDate, NSString, TSPObjectContext, TSPDataAttributes, TSPDigest, TSPDataMetadata, TSPDataManager, TSPDataUniqueIdentifier, NSObject;
@protocol OS_dispatch_queue, TSPDataStorage;

@interface TSPData : NSObject <TSPSplitableData, TSPRemoteDataStorageDelegate> {
    _Atomic BOOL _didCull;
    NSObject<OS_dispatch_queue> *_accessQueue;
    id<TSPDataStorage> _storage;
    NSString *_filename;
    NSString *_type;
    NSString *_normalizedExtension;
}

@property (nonatomic, getter=isAcknowledgedByServer) BOOL acknowledgedByServer;
@property (readonly, nonatomic) unsigned long long tsp_length;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL gilligan_isRemote;
@property (readonly, weak, nonatomic) TSPDataManager *manager;
@property (readonly, nonatomic) long long identifier;
@property (readonly, nonatomic) NSString *normalizedExtension;
@property (readonly, nonatomic) NSDate *lastModificationDate;
@property (retain, nonatomic) id<TSPDataStorage> storage;
@property (readonly, nonatomic) unsigned long long lengthIfLocal;
@property (readonly, nonatomic) unsigned long long encodedLengthIfLocal;
@property (retain, nonatomic) TSPDataMetadata *metadata;
@property (copy, nonatomic) TSPDataAttributes *unsafeAttributes;
@property (readonly, nonatomic) BOOL needsDownload;
@property (copy) TSPDataAttributes *attributes;
@property (readonly, nonatomic) NSString *filename;
@property (readonly, nonatomic) NSString *type;
@property (readonly, nonatomic) BOOL isReadable;
@property (readonly, nonatomic) BOOL isApplicationData;
@property (readonly, nonatomic) BOOL isExternalData;
@property (readonly, nonatomic) BOOL isEncrypted;
@property (readonly, nonatomic) NSString *documentResourceLocator;
@property (readonly, nonatomic) NSString *packageLocator;
@property (readonly, nonatomic) unsigned char packageIdentifier;
@property (readonly, weak, nonatomic) TSPObjectContext *context;
@property (readonly, nonatomic) TSPDigest *digest;
@property (readonly, nonatomic) NSString *digestString;
@property (readonly, nonatomic) TSPDataUniqueIdentifier *uniqueIdentifier;
@property (readonly, nonatomic) unsigned long long length;
@property (readonly, nonatomic) unsigned long long encodedLength;

+ (id)null;
+ (id)dataFromReadChannel:(id)a0 filename:(id)a1 context:(id)a2;
+ (id)dataFromURL:(id)a0 useExternalReferenceIfAllowed:(BOOL)a1 context:(id)a2;
+ (id)dataFromURL:(id)a0 useExternalReferenceIfAllowed:(BOOL)a1 useFileCoordination:(BOOL)a2 context:(id)a3;
+ (id)requiredAVAssetOptions;
+ (id)dataFromURL:(id)a0 context:(id)a1;
+ (id)dataFromNSData:(id)a0 filename:(id)a1 context:(id)a2;
+ (id)dataFromDataRep:(id)a0 filename:(id)a1 context:(id)a2;
+ (void)addCullingListener:(id)a0;
+ (void)removeCullingListener:(id)a0;
+ (id)readOnlyDataFromURL:(id)a0;
+ (id)readOnlyDataFromNSData:(id)a0 filename:(id)a1;
+ (BOOL)isSupportedURL:(id)a0;
+ (id)dataFromURL:(id)a0 useExternalReferenceIfAllowed:(BOOL)a1 useFileCoordination:(BOOL)a2 filename:(id)a3 context:(id)a4;
+ (void)performDataCullingOperationSynchronously:(BOOL)a0 usingBlock:(id /* block */)a1;
+ (id)typeForFilename:(id)a0;
+ (id)normalizedExtensionForFilename:(id)a0;
+ (BOOL)writeStorage:(id)a0 toURL:(id)a1 error:(id *)a2;
+ (id)pasteboardTypeForIdentifier:(long long)a0;
+ (id)resourceNameForFilename:(id)a0 identifier:(long long)a1;
+ (id)remoteDataWithURL:(id)a0 digest:(id)a1 filename:(id)a2 canDownload:(BOOL)a3 downloadPriority:(long long)a4 context:(id)a5;

- (struct CGSize { double x0; double x1; })pixelSize;
- (BOOL)writeToURL:(id)a0 error:(id *)a1;
- (id)init;
- (id)UIImage;
- (void).cxx_destruct;
- (void)dealloc;
- (id)copyWithContext:(id)a0;
- (id)NSData;
- (BOOL)isEqual:(id)a0;
- (id)preferredFilename;
- (id)fallbackColor;
- (void)setFallbackColor:(id)a0;
- (id)AVAsset;
- (struct CGImage { } *)newCGImage;
- (void)willCull;
- (void)performIOChannelReadWithAccessor:(id /* block */)a0;
- (void)setFilename:(id)a0 storage:(id)a1;
- (struct CGDataProvider { } *)newCGDataProvider;
- (struct CGImageSource { } *)newCGImageSource;
- (id)AVAssetWithOptions:(id)a0;
- (BOOL)isLengthLikelyToBeGreaterThan:(unsigned long long)a0;
- (void)performInputStreamReadWithAccessor:(id /* block */)a0;
- (BOOL)isStorageInPackage:(id)a0;
- (void)setToCopyOfMetadataIfNil:(id)a0;
- (id)initWithIdentifier:(long long)a0 digest:(id)a1 filename:(id)a2 lastModificationDate:(id)a3 storage:(id)a4 manager:(id)a5;
- (void)upgradeFallbackColorIfNeeded;
- (void)setFilename:(id)a0 storage:(id)a1 ifStorageIs:(id)a2;
- (void)didReceiveRemoteDataAtURL:(id)a0 canMove:(BOOL)a1 decryptionInfo:(id)a2 completionQueue:(id)a3 completion:(id /* block */)a4;
- (void)didReplaceDataContents;
- (BOOL)archiveInfoMessage:(struct DataInfo { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; } x4; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; } x5; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; } x6; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; } x7; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; } x8; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; } x9; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; } x10; struct DataAttributes *x11; struct EncryptionInfo *x12; unsigned long long x13; BOOL x14; int x15; } *)a0 archiver:(id)a1 packageWriter:(id)a2;
- (id)temporaryDataStorageURLForRemoteDataStorage:(id)a0;
- (void)didReceiveRemoteData:(id)a0 decryptionInfo:(id)a1 completionQueue:(id)a2 completion:(id /* block */)a3;
- (void)didReceiveRemoteDataWithReadChannel:(id)a0 completionQueue:(id)a1 completion:(id /* block */)a2;
- (void)willCullWithFlags:(unsigned long long)a0;
- (id)createMetadataIfNeeded;
- (id)makeBookmarkDataWithContext:(id)a0 filename:(id)a1 error:(out id *)a2;
- (BOOL)bookmarkDataNeedsWriteWithContext:(id)a0;
- (void)addDownloadObserver:(id)a0 options:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (void)tsp_splitDataWithMaxSize:(unsigned long long)a0 subdataHandlerBlock:(id /* block */)a1;
- (id)pasteboardType;
- (void)didReceiveRemoteDataWithHandler:(id /* block */)a0 completionQueue:(id)a1 completion:(id /* block */)a2;

@end
