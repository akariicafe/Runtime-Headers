@class NSUUID, TSPUnknownContent, TSPObjectContext;
@protocol TSPUnarchiverDelegate, TSPLazyReferenceDelegate, TSPObjectDelegate;

@interface TSPUnarchiver : NSObject {
    struct unique_ptr<google::protobuf::Message, std::__1::default_delete<google::protobuf::Message> > { struct __compressed_pair<google::protobuf::Message *, std::__1::default_delete<google::protobuf::Message> > { struct Message *__value_; } __ptr_; } _message;
    struct unique_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > >, std::__1::default_delete<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > > > { struct __compressed_pair<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > *, std::__1::default_delete<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > > > { struct unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > *__value_; } __ptr_; } _strongReferences;
    id<TSPLazyReferenceDelegate> _lazyReferenceDelegate;
    struct vector<TSP::UnarchiverReference, std::__1::allocator<TSP::UnarchiverReference> > { struct UnarchiverReference *__begin_; struct UnarchiverReference *__end_; struct __compressed_pair<TSP::UnarchiverReference *, std::__1::allocator<TSP::UnarchiverReference> > { struct UnarchiverReference *__value_; } __end_cap_; } _references;
    struct vector<TSP::UnarchiverRepeatedReference, std::__1::allocator<TSP::UnarchiverRepeatedReference> > { struct UnarchiverRepeatedReference *__begin_; struct UnarchiverRepeatedReference *__end_; struct __compressed_pair<TSP::UnarchiverRepeatedReference *, std::__1::allocator<TSP::UnarchiverRepeatedReference> > { struct UnarchiverRepeatedReference *__value_; } __end_cap_; } _repeatedReferences;
    struct vector<void (^)(), std::__1::allocator<void (^)()> > { id /* block */ *__begin_; id /* block */ *__end_; struct __compressed_pair<void (^__strong *)(), std::__1::allocator<void (^)()> > { id /* block */ *__value_; } __end_cap_; } _finalizeHandlers;
    struct FieldPath { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedField<unsigned int> { int x0; int x1; union Pointer { struct Arena *x0; struct Rep *x1; } x2; } x4; int x5; } *_currentFieldPath;
}

@property (readonly, nonatomic) BOOL hasPreUFFVersion;
@property (readonly, nonatomic) unsigned long long preUFFVersion;
@property (readonly, nonatomic) BOOL isFromCopy;
@property (readonly, nonatomic) BOOL isCrossDocumentPaste;
@property (readonly, nonatomic) BOOL isCrossAppPaste;
@property (readonly, nonatomic) long long objectIdentifier;
@property (readonly, nonatomic) NSUUID *objectUUID;
@property (readonly, nonatomic) TSPUnknownContent *unknownContent;
@property (readonly, weak, nonatomic) id<TSPObjectDelegate> objectDelegate;
@property (readonly, weak, nonatomic) id<TSPUnarchiverDelegate> delegate;
@property (readonly, nonatomic) BOOL canValidateReferences;
@property (readonly, nonatomic) BOOL hasDocumentVersionUUID;
@property (readonly, weak, nonatomic) TSPObjectContext *context;
@property (readonly, nonatomic) unsigned int messageType;
@property (readonly, nonatomic) unsigned long long messageVersion;
@property (readonly, nonatomic) unsigned long long fileFormatVersion;
@property (readonly, nonatomic) BOOL documentHasCurrentFileFormatVersion;
@property (readonly, nonatomic) unsigned long long readVersion;
@property (readonly, nonatomic) long long sourceType;

- (void).cxx_destruct;
- (void)dealloc;
- (struct vector<TSP::UnarchiverReference, std::__1::allocator<TSP::UnarchiverReference> > { struct UnarchiverReference *x0; struct UnarchiverReference *x1; struct __compressed_pair<TSP::UnarchiverReference *, std::__1::allocator<TSP::UnarchiverReference> > { struct UnarchiverReference *x0; } x2; } *)references;
- (id).cxx_construct;
- (const struct Message { void /* function */ **x0; } *)message;
- (void)readReferenceMessage:(const struct Reference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; int x5; BOOL x6; } *)a0 completion:(id /* block */)a1;
- (void)readRepeatedWeakReferenceMessage:(const struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a0 completion:(id /* block */)a1;
- (void)readRepeatedReferenceMessage:(const struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a0 completion:(id /* block */)a1;
- (void)readWeakReferenceMessage:(const struct Reference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; int x5; BOOL x6; } *)a0 completion:(id /* block */)a1;
- (void)addFinalizeHandler:(id /* block */)a0;
- (const struct Message { void /* function */ **x0; } *)messageWithDescriptor:(const struct Descriptor { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x1; struct FileDescriptor *x2; struct Descriptor *x3; struct MessageOptions *x4; struct FieldDescriptor *x5; struct OneofDescriptor *x6; struct Descriptor *x7; struct EnumDescriptor *x8; struct ExtensionRange *x9; struct FieldDescriptor *x10; struct ReservedRange *x11; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > **x12; int x13; int x14; int x15; int x16; int x17; int x18; int x19; int x20; BOOL x21; BOOL x22; } *)a0;
- (void)pushScopeForField:(int)a0 message:(const struct Message { void /* function */ **x0; } *)a1 usingBlock:(id /* block */)a2;
- (id)readWeakObjectUUIDReferenceMessage:(const struct UUID { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; unsigned long long x5; } *)a0 completion:(id /* block */)a1;
- (id)readRepeatedWeakObjectUUIDReferenceMessage:(const struct RepeatedPtrField<TSP::UUID> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a0 completion:(id /* block */)a1;
- (void)readLazyReferenceMessage:(const struct Reference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; int x5; BOOL x6; } *)a0 completion:(id /* block */)a1;
- (id)readDataReferenceMessage:(const struct DataReference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; } *)a0;
- (void)readWeakLazyReferenceMessage:(const struct Reference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; int x5; BOOL x6; } *)a0 completion:(id /* block */)a1;
- (id)readWeakObjectUUIDPathReferenceMessage:(const struct UUIDPath { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedPtrField<TSP::UUID> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x4; } *)a0 completion:(id /* block */)a1;
- (void)readSparseReferenceArrayMessage:(const struct SparseReferenceArray { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedPtrField<TSP::SparseReferenceArray_Entry> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x4; unsigned int x5; } *)a0 completion:(id /* block */)a1;
- (struct unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > { struct __hash_table<std::__1::__hash_value_type<const long long, bool>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, bool> > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true> > { float x0; } x3; } x0; } *)strongReferences;
- (const struct Message { void /* function */ **x0; } *)p_messageWithDescriptor:(const struct Descriptor { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x1; struct FileDescriptor *x2; struct Descriptor *x3; struct MessageOptions *x4; struct FieldDescriptor *x5; struct OneofDescriptor *x6; struct Descriptor *x7; struct EnumDescriptor *x8; struct ExtensionRange *x9; struct FieldDescriptor *x10; struct ReservedRange *x11; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > **x12; int x13; int x14; int x15; int x16; int x17; int x18; int x19; int x20; BOOL x21; BOOL x22; } *)a0;
- (void)readReferenceMessage:(const struct Reference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; int x5; BOOL x6; } *)a0 isWeak:(BOOL)a1 validateStrongReferences:(BOOL)a2 allowUnknownObject:(BOOL)a3 selector:(SEL)a4 weakSelector:(SEL)a5 completion:(id /* block */)a6;
- (void)validateReferenceToObjectIdentifier:(long long)a0 isWeak:(BOOL *)a1 validateStrongReferences:(BOOL)a2 selector:(SEL)a3 weakSelector:(SEL)a4;
- (void)readRepeatedReferenceMessage:(const struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a0 isWeak:(BOOL)a1 validateStrongReferences:(BOOL)a2 allowUnknownObject:(BOOL)a3 selector:(SEL)a4 completion:(id /* block */)a5;
- (void)readLazyReferenceMessage:(const struct Reference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; int x5; BOOL x6; } *)a0 ownershipMode:(long long)a1 validateStrongReferences:(BOOL)a2 allowUnknownObject:(BOOL)a3 selector:(SEL)a4 delegate:(id)a5 completion:(id /* block */)a6;
- (void)readWeakLazyReferenceMessage:(const struct Reference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; int x5; BOOL x6; } *)a0 retainObjectUntilArchived:(BOOL)a1 completion:(id /* block */)a2;
- (void)readRepeatedLazyReferenceMessage:(const struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a0 ownershipMode:(long long)a1 validateStrongReferences:(BOOL)a2 allowUnknownObject:(BOOL)a3 selector:(SEL)a4 delegate:(id)a5 completion:(id /* block */)a6;
- (void)readRepeatedWeakLazyReferenceMessage:(const struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a0 retainObjectUntilArchived:(BOOL)a1 completion:(id /* block */)a2;
- (void)readRepeatedWeakLazyReferenceMessage:(const struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a0 completion:(id /* block */)a1;
- (void)readWeakReferenceToObjectUUID:(id)a0 delegate:(id)a1 completion:(id /* block */)a2;
- (void)readUnownedReferenceMessage:(const struct Reference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; int x5; BOOL x6; } *)a0 completion:(id /* block */)a1;
- (void)readRepeatedUnownedReferenceMessage:(const struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a0 completion:(id /* block */)a1;
- (void)readRepeatedLazyReferenceMessage:(const struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a0 completion:(id /* block */)a1;
- (id)readRepeatedWeakObjectUUIDPathReferenceMessage:(const struct RepeatedPtrField<TSP::UUIDPath> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a0 completion:(id /* block */)a1;
- (id)initWithMessageType:(unsigned int)a0 message:(struct unique_ptr<google::protobuf::Message, std::__1::default_delete<google::protobuf::Message> > { struct __compressed_pair<google::protobuf::Message *, std::__1::default_delete<google::protobuf::Message> > { struct Message *x0; } x0; })a1 identifier:(long long)a2 strongReferences:(struct unique_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > >, std::__1::default_delete<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > > > { struct __compressed_pair<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > *, std::__1::default_delete<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > > > { struct unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > *x0; } x0; })a3 messageVersion:(unsigned long long)a4 unknownContent:(id)a5 objectDelegate:(id)a6 lazyReferenceDelegate:(id)a7 delegate:(id)a8;
- (struct vector<TSP::UnarchiverRepeatedReference, std::__1::allocator<TSP::UnarchiverRepeatedReference> > { struct UnarchiverRepeatedReference *x0; struct UnarchiverRepeatedReference *x1; struct __compressed_pair<TSP::UnarchiverRepeatedReference *, std::__1::allocator<TSP::UnarchiverRepeatedReference> > { struct UnarchiverRepeatedReference *x0; } x2; } *)repeatedReferences;
- (struct vector<void (^)(), std::__1::allocator<void (^)()> > { id /* block */ *x0; id /* block */ *x1; struct __compressed_pair<void (^__strong *)(), std::__1::allocator<void (^)()> > { id /* block */ *x0; } x2; } *)finalizeHandlers;
- (void)readRepeatedLazyReferenceMessage:(const struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a0 ownershipMode:(long long)a1 validateStrongReferences:(BOOL)a2 allowUnknownObject:(BOOL)a3 selector:(SEL)a4 completion:(id /* block */)a5;
- (void)readReferenceMessage1:(const struct Reference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; int x5; BOOL x6; } *)a0 message2:(const struct Reference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; int x5; BOOL x6; } *)a1 completion:(id /* block */)a2;
- (void)readWeakReferenceMessage1:(const struct Reference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; int x5; BOOL x6; } *)a0 message2:(const struct Reference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; int x5; BOOL x6; } *)a1 completion:(id /* block */)a2;
- (void)readReferenceMessage:(const struct Reference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; int x5; BOOL x6; } *)a0 repeatedMessage:(const struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a1 completion:(id /* block */)a2;
- (void)readWeakReferenceMessage:(const struct Reference { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; unsigned long long x4; int x5; BOOL x6; } *)a0 repeatedMessage:(const struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } *)a1 completion:(id /* block */)a2;
- (struct set<long long, std::__1::less<long long>, std::__1::allocator<long long> > { } *)filterIdentifiers:(const struct set<long long, std::__1::less<long long>, std::__1::allocator<long long> > { } *)a0;
- (void)readSparseReferenceArrayMessage:(const struct SparseReferenceArray { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedPtrField<TSP::SparseReferenceArray_Entry> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x4; unsigned int x5; } *)a0 isWeak:(BOOL)a1 completion:(id /* block */)a2;
- (void)readSparseWeakReferenceArrayMessage:(const struct SparseReferenceArray { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedPtrField<TSP::SparseReferenceArray_Entry> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x4; unsigned int x5; } *)a0 completion:(id /* block */)a1;
- (id)readSparseWeakObjectUUIDReferenceArrayMessage:(const struct SparseUUIDArray { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedPtrField<TSP::SparseUUIDArray_Entry> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x4; unsigned int x5; } *)a0;
- (id)readSparseWeakObjectUUIDPathReferenceArrayMessage:(const struct SparseUUIDPathArray { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedPtrField<TSP::SparseUUIDPathArray_Entry> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x4; unsigned int x5; } *)a0;

@end
