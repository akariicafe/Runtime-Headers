@class TSCECalculationEngine, NSString, TNChartFormulaStorage, NSCondition, TSUIntToIntDictionary, NSDictionary, TNMutableChartFormulaStorage;

@interface TNChartMediator : TSCHChartMediator <TSCECalculationEngineRegistration, TSCEFormulaOwning> {
    TNChartFormulaStorage *mCleanFormulaStorage;
    struct unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord> > { struct __hash_table<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord> > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *> *> **__value_; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *> *> *> > { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *> *>, std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *> > > { struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *> *> { struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *> *> *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__1::hash<TSUCellCoord> > { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__1::equal_to<TSUCellCoord> > { float __value_; } __p3_; } __table_; } _formulasToRecalculate;
    int mScatterFormat;
    BOOL mIsRegisteredWithCalcEngine;
    BOOL mEditingHasIsPhantomOverride;
    BOOL mEditingIsPhantomOverride;
    TNChartFormulaStorage *mEditingStorageOverride;
    TNMutableChartFormulaStorage *mEditingAccumulatedFormulas;
    TNMutableChartFormulaStorage *mEditingActiveFormulas;
    NSCondition *mImportUpgradeCondition;
    BOOL mShouldFixAreaFormula;
    TSUIntToIntDictionary *mFormulaIndexToGridIndex;
    NSDictionary *mTableUidToHeaderRowRangesInPrecedents;
    BOOL mShouldResetFormulas;
}

@property (readonly, nonatomic) TNChartFormulaStorage *formulaStorage;
@property (retain) TNChartFormulaStorage *rawFormulaStorage;
@property (readonly, nonatomic) struct UUIDData<TSP::UUIDData> { union { unsigned char _uuid[16]; struct { unsigned char byte0; unsigned char byte1; unsigned char byte2; unsigned char byte3; unsigned char byte4; unsigned char byte5; unsigned char byte6; unsigned char byte7; unsigned char byte8; unsigned char byte9; unsigned char byte10; unsigned char byte11; unsigned char byte12; unsigned char byte13; unsigned char byte14; unsigned char byte15; } _cfuuid; struct { unsigned long long _lower; unsigned long long _upper; } ; } ; } entityUID;
@property (readonly, nonatomic) int scatterFormat;
@property (readonly, nonatomic) TSCECalculationEngine *calculationEngine;
@property (readonly, nonatomic) int direction;
@property (readonly, nonatomic) BOOL labelFormulasAreAllStatic;
@property (readonly, nonatomic) BOOL seriesLabelFormulasAreAllStatic;
@property (readonly, nonatomic) BOOL categoryLabelFormulasAreAllStatic;
@property (nonatomic) BOOL isEditing;
@property (readonly, nonatomic) BOOL hasBlittedSinceConditionVarSet;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)propertiesThatInvalidateMediator;
+ (id)defaultErrorBarFormulaWrapper;

- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id).cxx_construct;
- (BOOL)isPhantom;
- (long long)evaluationMode;
- (void)willBeRemovedFromDocumentRoot:(id)a0;
- (void)willBeAddedToDocumentRoot:(id)a0 dolcContext:(id)a1;
- (void)wasAddedToDocumentRoot:(id)a0 dolcContext:(id)a1;
- (void)saveToArchive:(struct ChartMediatorArchive { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; } x4; struct ChartMediatorArchive *x5; struct ChartMediatorFormulaStorage *x6; BOOL x7; BOOL x8; } *)a0 archiver:(id)a1;
- (id)initFromArchive:(const struct ChartMediatorArchive { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; } x4; struct ChartMediatorArchive *x5; struct ChartMediatorFormulaStorage *x6; BOOL x7; BOOL x8; } *)a0 unarchiver:(id)a1;
- (void)registerWithCalcEngineForDocumentLoad:(id)a0;
- (void)unregisterFromCalcEngine:(id)a0;
- (id)formulaOwner;
- (struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; })formulaOwnerUID;
- (id)objectToArchiveInDependencyTracker;
- (BOOL)registerLast;
- (id)initWithChartInfo:(id)a0;
- (id)formulaStorageFromTable:(id)a0 selection:(id)a1 direction:(int)a2;
- (id)initWithChartInfo:(id)a0 withTable:(id)a1 selection:(id)a2 direction:(int)a3;
- (BOOL)labelFormulasAreAllStaticInFormulaStorage:(id)a0;
- (id)formulaStorageFromCatTable:(id)a0 selection:(id)a1 direction:(int)a2;
- (id)p_untitledLabelWithIndex:(unsigned long long)a0;
- (void)p_copyValuesIntoToChartModel:(id)a0 formulaMap:(id)a1;
- (void)synchronizeModelFromFormulaStorage;
- (id)labelFormulasForType:(unsigned long long)a0;
- (id)commandToChangeLabelFormulas:(id)a0 forType:(unsigned long long)a1 modelUpdateDataType:(int)a2;
- (unsigned long long)formulaTypeFromDataType:(int)a0;
- (id)p_tstFormulaFromForumulaWrapper:(id)a0;
- (unsigned long long)formulaIndexForSeriesDimension:(id)a0;
- (void)p_removeDeletedFormulas:(id)a0;
- (void)repairMissingSeriesLabelsInMap:(id)a0;
- (void)repairMissingCategoryLabelsInMap:(id)a0;
- (void)p_unregisterAllFormulaeFromCalcEngine:(id)a0;
- (void)p_registerFormulaeWithCalcEngine:(id)a0;
- (void)setFormulaStorage:(id)a0 doRegistration:(BOOL)a1;
- (void)synchronizeModelFromFormulaStorage:(id)a0;
- (unsigned long long)p_formulaComponentsInMap:(id)a0 ofType:(unsigned long long)a1;
- (void)resetFormulasForCellRefs:(const struct TSCECellRefSet { struct map<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet, std::__1::less<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet> > > { struct __tree<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::less<TSU::UUIDData<TSP::UUIDData> >, true>, std::__1::allocator<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::less<TSU::UUIDData<TSP::UUIDData> >, true> > { unsigned long long x0; } x2; } x0; } x0; } *)a0 calcEngine:(id)a1;
- (id)referencedEntities;
- (struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; })ownerUID;
- (struct TSCERangeRef { struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } x0; struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; } x1; })p_headerRowRangeRefForTableInfo:(id)a0;
- (BOOL)p_didHeaderRowRangesChangeForCalcEngine:(id)a0;
- (void)p_signalImportUpgradeCondition;
- (void)clearFormulasToRecalculate;
- (id)hubFormulaPrecedentsWithCalcEngine:(id)a0 hostOwnerUID:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; } *)a1;
- (void)p_registerAreaFormulaForMap:(id)a0 withCalcEngine:(id)a1;
- (void)p_registerHubFormulaWithCalcEngine:(id)a0;
- (BOOL)p_tabularCategoryLabelsAppearRegularInMap:(id)a0;
- (BOOL)interestedInRewrite:(id)a0;
- (void)updateForTableIDHistoryWithCalcEngine:(id)a0;
- (void)p_reregister:(BOOL)a0 withCalculationEngine:(id)a1;
- (id)p_commandToSetSeriesNameFormulaWrapper:(id)a0 seriesIndex:(unsigned long long)a1;
- (BOOL)p_isScatterOrBubble;
- (unsigned long long)labelIndexForSeriesNameSeriesIndex:(unsigned long long)a0;
- (id)p_formulaWrapperFromTSTFormula:(id)a0;
- (unsigned long long)p_formulaComponents:(id)a0;
- (struct vector<TSCERangeRef, std::__1::allocator<TSCERangeRef> > { struct TSCERangeRef *x0; struct TSCERangeRef *x1; struct __compressed_pair<TSCERangeRef *, std::__1::allocator<TSCERangeRef> > { struct TSCERangeRef *x0; } x2; })expandSingleRangeForLabels:(const struct TSCERangeRef { struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } x0; struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; } x1; } *)a0 formulaType:(unsigned long long)a1;
- (id)p_newStaticNameForCategoryAvoidingExistingNames:(id)a0 runningCount:(unsigned long long *)a1;
- (BOOL)p_labelsAreStaticInMap:(id)a0 ofType:(unsigned long long)a1;
- (BOOL)p_tableHasBaseRange:(struct TSCERangeRef { struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } x0; struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; } x1; })a0 withCalcEngine:(id)a1;
- (void)p_disconnectLabelsInMap:(id)a0 ofType:(unsigned long long)a1;
- (unsigned long long)p_numberOfLabelsFromExpandedGeometricRangeRefsWithFormulas:(id)a0 formulaType:(unsigned long long)a1;
- (void)p_repairMissingTabularCategoryLabelsIrregularInMap:(id)a0;
- (void)p_repairMissingStaticCategoryLabelsInMap:(id)a0;
- (void)p_repairCategorizedCategoryLabelsInMap:(id)a0;
- (void)p_promoteSpanningCategorizedCategoryLabelsInMap:(id)a0;
- (void)p_repairMissingTabularCategoryLabelsRegularInMap:(id)a0;
- (void)p_repairMissingCategoryLabelsInMap:(id)a0;
- (void)repairMissingCategoryLabelsInMap:(id)a0 ignoringNonVisibleLabels:(BOOL)a1;
- (struct vector<TSCERangeRef, std::__1::allocator<TSCERangeRef> > { struct TSCERangeRef *x0; struct TSCERangeRef *x1; struct __compressed_pair<TSCERangeRef *, std::__1::allocator<TSCERangeRef> > { struct TSCERangeRef *x0; } x2; })p_expandSingleRangeForLabels:(const struct TSCERangeRef { struct TSCERangeCoordinate { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x1; } x0; struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; } x1; } *)a0 iterateOverRowsNotColumns:(BOOL)a1;
- (void)setFormulaStorage:(id)a0;
- (unsigned short)ownerKind;
- (id)linkedResolver;
- (void)writeResultsForCalcEngine:(id)a0;
- (void)invalidateForCalcEngine:(id)a0;
- (struct TSCERecalculationState { unsigned char x0; })evaluateFormulaAt:(struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; })a0 withCalcEngine:(id)a1 recalcOptions:(struct TSCERecalculationState { unsigned char x0; })a2;
- (struct TSCERecalculationState { unsigned char x0; })multiEvaluateFormulasAt:(const struct TSCECellCoordSet { struct map<unsigned short, TSUIndexSet, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSUIndexSet> > > { struct __tree<std::__1::__value_type<unsigned short, TSUIndexSet>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, TSUIndexSet>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, TSUIndexSet> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, TSUIndexSet>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, TSUIndexSet>, std::__1::less<unsigned short>, true> > { unsigned long long x0; } x2; } x0; } x0; } *)a0 withCalcEngine:(id)a1 recalcOptions:(struct TSCERecalculationState { unsigned char x0; })a2;
- (void)setFormulaOwnerUID:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; } *)a0;
- (id)ownerUIDMapper;
- (id)initWithChartInfo:(id)a0 withTable:(id)a1 direction:(int)a2;
- (void)pauseCalculationEngine;
- (void)resumeCalculationEngine;
- (void)setEditingIsPhantomOverride:(BOOL)a0;
- (void)clearEditingIsPhantomOverride;
- (void)setEditingStorageOverride:(id)a0;
- (void)invalidateAndSynchronizeMediator;
- (id)commandToSetChartGridDirection:(int)a0 documentRoot:(id)a1;
- (id)p_chartFormulaStorageForEditingOverride;
- (id)seriesDimensionForFormulaIndex:(unsigned long long)a0;
- (id)categoryLabelFormulas;
- (id)commandToChangeCategoryLabelFormulas:(id)a0;
- (id)errorBarCustomFormulaForSeriesIndex:(unsigned long long)a0 dataType:(int)a1;
- (id)commandToSetErrorBarCustomFormula:(id)a0 seriesIndex:(unsigned long long)a1 dataType:(int)a2;
- (id)commandToSetSeriesDataFormula:(id)a0 seriesDimension:(id)a1;
- (id)seriesDataFormulaForSeriesDimension:(id)a0;
- (void)p_hackSetCalcEngineLegacyGlobalID;
- (BOOL)hasCategoryReferences;
- (BOOL)hasTractReference;
- (id)untitledLabelOfType:(unsigned long long)a0 formulaMap:(id)a1 existingLabels:(id)a2 runningIndex:(unsigned long long *)a3;
- (void)p_detectAndRepairInsertedCategoryConditionFromPreviousState:(id)a0 andEditingState:(id)a1 rewriteSpec:(id)a2;
- (void)p_detectAndRepairInsertedSeriesConditionFromPreviousState:(id)a0 andEditingState:(id)a1 rewriteSpec:(id)a2;
- (BOOL)repairBadRefsInFormulas:(id)a0;
- (void)prepareRewriteSpec:(id)a0 withPreCellRefs:(const struct TSCECellRefSet { struct map<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet, std::__1::less<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet> > > { struct __tree<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::less<TSU::UUIDData<TSP::UUIDData> >, true>, std::__1::allocator<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::less<TSU::UUIDData<TSP::UUIDData> >, true> > { unsigned long long x0; } x2; } x0; } x0; } *)a1 calcEngine:(id)a2;
- (void)amendRewriteSpec:(id)a0 withPostCellRefs:(const struct TSCECellRefSet { struct map<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet, std::__1::less<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet> > > { struct __tree<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::less<TSU::UUIDData<TSP::UUIDData> >, true>, std::__1::allocator<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::less<TSU::UUIDData<TSP::UUIDData> >, true> > { unsigned long long x0; } x2; } x0; } x0; } *)a1 calcEngine:(id)a2;
- (void)copyValuesIntoChartModelOutOfBandUsingCalcEngine:(id)a0 formulaMap:(id)a1;
- (void)setImportUpgradeCondition:(id)a0;
- (id)commandSetSeriesName:(id)a0 forSeriesIndex:(unsigned long long)a1;
- (id)seriesNameFormulaForSeriesIndex:(unsigned long long)a0;
- (id)commandToSetSeriesNameFormula:(id)a0 seriesIndex:(unsigned long long)a1;
- (id)commandSetCategoryName:(id)a0 forCategoryIndex:(unsigned long long)a1;
- (id)commandToSetNewSeriesIndex:(unsigned long long)a0 forSeriesIndex:(unsigned long long)a1;
- (void)p_transposeSeriesAndCategoryLabelsInMap:(id)a0;
- (struct vector<TSCERangeRef, std::__1::allocator<TSCERangeRef> > { struct TSCERangeRef *x0; struct TSCERangeRef *x1; struct __compressed_pair<TSCERangeRef *, std::__1::allocator<TSCERangeRef> > { struct TSCERangeRef *x0; } x2; })expandSingleTractForProposedCategoryLabels:(id)a0 byRow:(BOOL)a1;
- (BOOL)p_tableHasBaseCell:(struct TSCECellRef { struct TSUCellCoord { unsigned int x0; unsigned short x1; BOOL x2; BOOL x3; } x0; struct UUIDData<TSP::UUIDData> { union { unsigned char x0[16]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; } x1; struct { unsigned long long x0; unsigned long long x1; } x2; } x0; } x1; })a0 withCalcEngine:(id)a1;
- (id)dataFormulas;
- (int)formulasDirection;
- (id)rowFormulas;
- (id)columnFormulas;
- (id)customPosFormulas;
- (id)customNegFormulas;
- (id)customPosScatterXFormulas;
- (id)customNegScatterXFormulas;
- (void)localizeFormulaLiteralsWithTemplateBundle:(id)a0 locale:(id)a1;
- (id)nonDefaultDataFormatterForSeries:(id)a0 index:(unsigned long long)a1 axisType:(int)a2 documentRoot:(id)a3;
- (id)dataFormatterFromFormatStruct:(struct { unsigned int x0; union { struct { unsigned short x0 : 16; unsigned char x1 : 8; unsigned char x2 : 3; unsigned char x3 : 1; unsigned char x4 : 1; } x0; struct { unsigned char x0 : 8; } x1; struct { unsigned char x0 : 8; unsigned char x1 : 8; unsigned char x2 : 1; } x2; struct { unsigned char x0 : 1; unsigned char x1 : 1; id x2; } x3; struct { unsigned char x0 : 1; int x1; int x2; int x3; } x4; struct { id x0; id x1; unsigned int x2; unsigned char x3; } x5; } x1; })a0 in:(id)a1;
- (id)dataFormatterForAxis:(id)a0 documentRoot:(id)a1;
- (id)dataFormatterForSeries:(id)a0 index:(unsigned long long)a1 axisType:(int)a2 documentRoot:(id)a3;

@end
