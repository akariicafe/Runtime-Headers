@interface TSCH2DSageGeometryHelper : TSCHSageGeometryHelper {
    double mVerticalAxisOverhang;
    double mHorizontalAxisOverhang;
    double mRightAxisWidthChange;
    double mBottomAxisHeightChange;
    double mTopAxisHeightChange;
    struct CGSize { double width; double height; } mBottomLeftChartTitleOverhang;
    struct CGSize { double width; double height; } mTopRightChartTitleOverhang;
    struct CGSize { double width; double height; } mBottomLeftValueAxisTitleOverhang;
    struct CGSize { double width; double height; } mTopRightValueAxisTitleOverhang;
    struct CGSize { double width; double height; } mBottomLeftCategoryAxisTitleOverhang;
    struct CGSize { double width; double height; } mTopRightCategoryAxisTitleOverhang;
    struct CGSize { double width; double height; } mBottomLeftValueAxisY2TitleOverhang;
    struct CGSize { double width; double height; } mTopRightValueAxisY2TitleOverhang;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mChartBodyBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mExplodedBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mChartTitleBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mValueAxisTitleBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mCategoryAxisTitleBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mValueAxisY2TitleBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mTopLegendBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mLeftLegendBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mBottomLegendBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mRightLegendBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mTopAxisLabelsBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mLeftAxisLabelsBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mBottomAxisLabelsBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mRightAxisLabelsBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mTopAxisBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mLeftAxisBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mBottomAxisBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mRightAxisBounds;
    struct CGPoint { double x; double y; } mExplodedBodyShift;
    struct CGPoint { double x; double y; } mOutsideLabelsChartTitleShift;
    BOOL mChartLayoutValid;
    BOOL mChartExplodedSizeValid;
    BOOL mChartAxisSizeValid;
    BOOL mChartAxisLabelsSizeValid;
    BOOL mChartTitleSizeValid;
    BOOL mValueAxisTitleSizeValid;
    BOOL mCategoryAxisTitleSizeValid;
    BOOL mValueAxisY2TitleSizeValid;
    BOOL mChartLegendSizeValid;
    BOOL mChartValueElementsGeometryValid;
}

+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })computeSageChartAreaBoundsForChartInfo:(id)a0 geometryRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 returningContainingViewportSize:(id *)a2;

- (BOOL)isVertical;
- (BOOL)isArea;
- (BOOL)isLine;
- (BOOL)aspectRatioLocked;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })computeSageLayoutCBBForSpiceDoc:(BOOL)a0;
- (void)calculateChartAxisLabelsSize;
- (void)calculateChartAxisSize;
- (void)calculateChartTitleSize;
- (void)calculateValueAxisTitleSize;
- (void)calculateCategoryAxisTitleSize;
- (void)calculateValueAxisY2TitleSize;
- (BOOL)calculateChartExplodedSize;
- (void)calculateChartBodySize;
- (double)_topAxisOuterWidth;
- (BOOL)leftAxisLabelsVisible;
- (double)_verticalAxisLabelsWidth:(BOOL)a0;
- (BOOL)bottomAxisLabelsVisible;
- (double)_horizontalAxisLabelsHeight;
- (BOOL)rightAxisLabelsVisible;
- (BOOL)topAxisLabelsVisible;
- (id)p_model;
- (BOOL)p_labelsVisible:(id)a0;
- (double)_rightAxisOuterWidth;
- (double)_bottomAxisOuterWidth;
- (double)_leftAxisOuterWidth;
- (struct CGSize { double x0; double x1; })measureText:(id)a0 withParagraphStyle:(id)a1;
- (double)chartTitlePadding;
- (BOOL)isScatter;
- (double)yAxisTitlePadding:(BOOL)a0;
- (double)xAxisTitlePadding;
- (double)p_widthFromTicksAndStrokeForAxis:(id)a0;
- (double)_seriesSymbolWidth;
- (double)distanceFromYAxisUsingParagraphStyle:(id)a0;
- (double)seriesCategoryLabelsHorizontalGutter;
- (double)distanceFromXAxisUsingParagraphStyle:(id)a0;
- (double)seriesCategoryLabelsVerticalGutter;
- (double)fontHeight:(id)a0;
- (double)xAxisLabelHeight;
- (double)yAxisLabelHeight:(BOOL)a0;

@end
