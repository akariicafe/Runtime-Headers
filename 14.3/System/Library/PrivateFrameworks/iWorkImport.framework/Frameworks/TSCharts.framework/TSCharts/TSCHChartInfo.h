@class NSMutableDictionary, TSKCustomFormatList, TSKDocumentRoot, TSCHChartStylePreset, TSCHChartMediator, TSCHLegendModel, TSCHChartDrawableInfo, NSMutableArray, TSCHChartLayoutCache, NSString, TSDInfoGeometry, TSCHChartModel, NSArray, TSSStylesheet, TSPLazyReference, NSNumber, TSCHChartType;
@protocol TSCHStyleActAlike;

@interface TSCHChartInfo : NSObject <TSCHPropertyMapsGeneratedProtocol, TSCHStyleOwnerCollaborationSupport, TSCHStyleOwning, TSCHUnretainedParent, TSDMixing, NSCopying> {
    id<TSCHStyleActAlike> mStyle;
    id<TSCHStyleActAlike> mNonStyle;
    TSPLazyReference *mLazyPreset;
    TSPLazyReference *mOwnedPreset;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mInnerChartFrame;
    id<TSCHStyleActAlike> mLegendStyle;
    id<TSCHStyleActAlike> mLegendNonStyle;
    NSMutableArray *mValueAxisStyles;
    NSMutableArray *mCategoryAxisStyles;
    NSMutableArray *mValueAxisNonStyles;
    NSMutableArray *mCategoryAxisNonStyles;
    NSMutableArray *mThemeSeriesStyles;
    NSMutableArray *mPrivateSeriesStyles;
    NSMutableArray *mSeriesNonStyles;
    NSMutableArray *mParagraphStyles;
    NSMutableDictionary *mRefLineNonStylesMap;
    NSMutableDictionary *mRefLineStylesMap;
    id<TSCHStyleActAlike> mThemePresetRefLineStyle;
    TSDInfoGeometry *mNonInfoGeometry;
    BOOL mNeedsCalcEngineDependentUpgrade;
    BOOL mNeedsCalcEngineDependentImport;
    BOOL mIsOlderThanSage;
    NSNumber *mHorizontalMin;
    NSNumber *mHorizontalMax;
    NSNumber *mValueMin;
    NSNumber *mValueMax;
    NSString *mValuePrefix;
    NSString *mValueSuffix;
    BOOL mValueUseSeparator;
    NSString *mHorizontalPrefix;
    NSString *mHorizontalSuffix;
    BOOL mHorizontalUseSeparator;
    NSMutableDictionary *mStyleViewProxyMap;
    NSArray *mStyleViewProxyParagraphStyleArray;
    unsigned long long mLastSeriesIndex;
    TSKCustomFormatList *mPasteboardCustomFormatList;
    BOOL mAppearancePreservedForPreset;
}

@property (readonly, nonatomic) BOOL hasSetDefaultLayoutSettings;
@property (nonatomic) struct { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; long long x7; unsigned long long x8; } defaultLayoutSettings;
@property (readonly, nonatomic) TSCHChartLayoutCache *sceneAreaLayoutItemCache;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, weak, nonatomic) TSCHChartDrawableInfo *drawableInfo;
@property (readonly, nonatomic) TSCHChartType *chartType;
@property (retain, nonatomic) TSCHChartModel *model;
@property (retain, nonatomic) TSCHLegendModel *legend;
@property (retain, nonatomic) TSCHChartMediator *mediator;
@property (copy, nonatomic) TSDInfoGeometry *geometry;
@property (nonatomic) struct CGPoint { double x; double y; } previewOrigin;
@property (readonly, nonatomic) TSKDocumentRoot *documentRoot;
@property (readonly, nonatomic) TSSStylesheet *documentStylesheet;
@property (readonly, nonatomic) NSArray *themeChartPresets;
@property (readonly, nonatomic) TSCHChartStylePreset *preset;
@property (readonly, nonatomic) TSCHChartStylePreset *firstPresetFromTheme;
@property (readonly, nonatomic) TSCHChartStylePreset *presetFromThemeIfNecessary;
@property (readonly, nonatomic) BOOL isPhantom;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } minimumChartBodySize;
@property (readonly, nonatomic) struct CGSize { double width; double height; } minimumChartBodySizeForTransformingGeometry;
@property (readonly, nonatomic) int gridDirection;
@property (readonly, nonatomic) unsigned long long multiDataSetIndex;
@property (nonatomic) BOOL displayMessageOnRepCreation;
@property (retain, nonatomic) NSString *informationalMessageString;
@property (nonatomic) double informationalMessageDuration;
@property (readonly, nonatomic) BOOL wantsDeferredUpgradeOrImport;
@property (copy, nonatomic) NSString *lastAppliedFillSetLookupString;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (double)beginValueForStackedBarSeries:(id)a0 groupIndex:(unsigned long long)a1 unitSpaceIntercept:(double)a2 relativelyPositive:(BOOL)a3 valueAxis:(id)a4;
+ (id)swapTuplesForParagraphStyleMutations:(id)a0 forReferencingProperty:(int)a1 forStyleOwner:(id)a2;
+ (id)p_currentThreadSceneAreaLayoutCache;
+ (void)setCurrentThreadSceneAreaLayoutCache:(id)a0;
+ (int)adjustNumberFormatType:(int)a0 forChartModel:(id)a1 gridValueType:(int)a2 hasCustomFormat:(BOOL)a3;
+ (BOOL)groupedShadowsForChartModel:(id)a0;
+ (BOOL)updateInitialLabelExplosionIfNeededForChartType:(id)a0 seriesNonStyles:(inout id *)a1 stylePreset:(id)a2 rowCount:(unsigned long long)a3 columnCount:(unsigned long long)a4;
+ (id)paragraphStyleIndexProperties;
+ (id)paragraphStylePropertiesChartsUse;
+ (id)specificPropertiesThatCanContainCustomDateFormats;
+ (id)specificPropertiesThatCanContainCustomNumberFormats;
+ (id)chartStyleIdentifierForRoleIndex:(unsigned long long)a0;
+ (id)legendStyleIdentifierForRoleIndex:(unsigned long long)a0;
+ (id)seriesStyleIdentifierForRoleIndex:(unsigned long long)a0 ordinal:(unsigned long long)a1;
+ (id)paragraphStyleIdentifierForRoleIndex:(unsigned long long)a0 ordinal:(unsigned long long)a1;
+ (id)referenceLineStyleIdentifierForRoleIndex:(unsigned long long)a0 ordinal:(unsigned long long)a1;
+ (id)p_chartTypeTo3DScalePropertyPairs;
+ (id)propertiesThatInvalidateModel;
+ (struct CGSize { double x0; double x1; })minimumChartBodySizeForTransformingGeometryForChart:(id)a0;
+ (id)adjustNumberFormatTypeValue:(id)a0 forChartModel:(id)a1 gridValueType:(int)a2 hasCustomFormat:(BOOL)a3;
+ (id)specificPropertiesThatCanContainCustomFormats;
+ (id)specificNumberFormatTypeProperties;
+ (Class)classForChartStyle;
+ (Class)classForChartNonstyle;
+ (Class)classForSeriesStyle;
+ (Class)classForSeriesNonstyle;
+ (Class)classForAxisStyle;
+ (Class)classForAxisNonstyle;
+ (Class)classForLegendStyle;
+ (Class)classForLegendNonstyle;
+ (id)valueAxisStyleIdentifierForRoleIndex:(unsigned long long)a0 ordinal:(unsigned long long)a1;
+ (id)categoryAxisStyleIdentifierForRoleIndex:(unsigned long long)a0 ordinal:(unsigned long long)a1;
+ (id)scale3DPropertyToConstantDepthInfoChartScaleMappingsWithBarShape:(int)a0 conversionBlock:(id /* block */)a1;
+ (id)paragraphStyleIndexPropertiesInUse;
+ (id)genericParagraphStyleIndexProperties;
+ (id)genericParagraphStyleIndexPropertiesInUse;
+ (unsigned char)styleOwnerPathType;
+ (id)p_stylesheetFromOrderedArrayOfSources:(id)a0;

- (id)valueForProperty:(int)a0;
- (BOOL)hasRoundedCorners;
- (id)context;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)dealloc;
- (id)style;
- (id)copyWithContext:(id)a0;
- (unsigned int)elementKind;
- (id)p_init;
- (id)defaultProperties;
- (Class)repClass;
- (Class)layoutClass;
- (void)setPreset:(id)a0;
- (id)childInfos;
- (void)willModify;
- (id)copyWithZone:(struct _NSZone { } *)a0 context:(id)a1;
- (void)adoptStylesheet:(id)a0 withMapper:(id)a1;
- (id)mixedObjectWithFraction:(double)a0 ofObject:(id)a1;
- (BOOL)isEquivalentForCrossDocumentPasteMasterComparison:(id)a0;
- (long long)mixingTypeWithObject:(id)a0 context:(id)a1;
- (id)legendStyle;
- (id)paragraphStyles;
- (void)hideAllTitles;
- (id)chartInfo;
- (int)intValueForProperty:(int)a0 defaultValue:(int)a1;
- (BOOL)hasCategoryReferences;
- (BOOL)hasTractReference;
- (id)pasteboardCustomFormatList;
- (void)preserveAppearanceForCurrentPresetAdoptingStylesheet:(BOOL)a0;
- (BOOL)appearancePreservedForCurrentPreset;
- (void)reassignPasteboardCustomFormatKeys;
- (id)objectValueForProperty:(int)a0;
- (id)create3DSceneWithLayoutSettings:(const struct { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; long long x7; unsigned long long x8; } *)a0;
- (void)clearParent;
- (float)floatValueForProperty:(int)a0 defaultValue:(float)a1;
- (BOOL)isSingleCircleSpecialCaseOutSeries:(id *)a0;
- (id)paragraphStyleAtIndex:(unsigned long long)a0;
- (id)clamped3DRotationPropertyObject;
- (unsigned long long)numberOfThemeSeriesStyles;
- (id)commandToApplyFillSet:(id)a0;
- (id)styleSwapCommandToApplyFillSetSeriesPropertyMaps:(id)a0;
- (id)g_genericToDefaultPropertyMap;
- (id)g_operationPropertyNameForGenericProperty:(int)a0;
- (int)defaultPropertyForGeneric:(int)a0;
- (id)p_genericToDefaultPropertyMap;
- (BOOL)referenceLineStyleIsPrivate:(id)a0;
- (int)specificPropertyForGeneric:(int)a0;
- (BOOL)hasIntValueForProperty:(int)a0 value:(int *)a1;
- (BOOL)hasFloatValueForProperty:(int)a0 value:(float *)a1;
- (BOOL)hasObjectValueForProperty:(int)a0 value:(id *)a1;
- (id)operationPropertyNameFromGenericProperty:(int)a0;
- (id)nonstyle;
- (id)swapTuplesForMutations:(id)a0 forImport:(BOOL)a1;
- (id)swapTuplesForParagraphStyleMutations:(id)a0 forReferencingProperty:(int)a1;
- (void)debugLayoutCache;
- (void)setGeometry:(id)a0 clearObjectPlaceholderFlag:(BOOL)a1;
- (void)setChartType:(id)a0 andSetLegendDefaults:(BOOL)a1 gridRowIds:(id)a2 gridColumnIds:(id)a3 forDocumentLocale:(id)a4;
- (void)setGeometry:(id)a0 omitLegendResize:(BOOL)a1;
- (void)addViewStyleProxyForMutationTuples:(id)a0 layouts:(id)a1;
- (unsigned long long)multiDataSetIndex;
- (id)categoryAxisStyleAtIndex:(unsigned long long)a0;
- (id)valueAxisStyleAtIndex:(unsigned long long)a0;
- (id)categoryAxisNonstyleAtIndex:(unsigned long long)a0;
- (id)valueAxisNonstyleAtIndex:(unsigned long long)a0;
- (id)seriesStyleForSeriesIndex:(unsigned long long)a0;
- (id)seriesNonstyleForSeriesIndex:(unsigned long long)a0;
- (id)referenceLineNonStyleItemsForAxisID:(id)a0;
- (id)referenceLineStyleForAxisID:(id)a0 atIndex:(unsigned long long)a1;
- (void)modelDidInvalidateWithDetails:(id)a0;
- (unsigned long long)defaultDataRowCountForChartType:(id)a0 forDocumentLocale:(id)a1;
- (unsigned long long)defaultDataColumnCountForChartType:(id)a0 forDocumentLocale:(id)a1;
- (BOOL)isSingleCircleSpecialCase;
- (BOOL)seriesStyleIsPrivate:(id)a0;
- (BOOL)supportsRoundedCorners;
- (BOOL)containsCalloutLines;
- (float)maximumExplosion;
- (float)radiusForFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withMaxExplosion:(float)a1;
- (BOOL)supportsAndHasRoundedCorners;
- (id)allStylesAndNonStylesThatCanHaveCustomNumberFormats;
- (id)allCustomFormatKeys;
- (id)p_swapTuplesForMutations:(id)a0;
- (id)applyStyleSwapTuples:(id)a0;
- (void)setDefaultLegendPositionIfNeededWithOptionalLayout:(id)a0;
- (double)p_titleAccommodationWithLegendSize:(struct CGSize { double x0; double x1; })a0 optionalLayout:(id)a1;
- (double)p_dataSetNameAccomodationWithOptionalLayout:(id)a0;
- (id)p_copyStyleAndNonStyleArray:(id)a0 withZone:(struct _NSZone { } *)a1 context:(id)a2;
- (id)p_copyStyleAndNonStyleMap:(id)a0 withZone:(struct _NSZone { } *)a1 context:(id)a2;
- (void)setGeometry:(id)a0 omitLegendResize:(BOOL)a1 clearObjectPlaceholderFlag:(BOOL)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })resizedLegendFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 oldChartSize:(struct CGSize { double x0; double x1; })a1 newChartSize:(struct CGSize { double x0; double x1; })a2;
- (id)p_infoGeometryForGeometry:(id)a0 isCircumscribing:(BOOL)a1 omitLabelPlacement:(BOOL)a2;
- (void)chartTypeDidChangeWithDetails:(id)a0;
- (id)p_getLocalizableDefaultDataDictionaryForChartType:(id)a0 forDocumentLocale:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })calculateDefaultLegendPositionIfNeededWithOptionalLayout:(id)a0;
- (id)chartStyleState;
- (id)newChartStylePresetByExampleWithPresetIndex:(unsigned long long)a0 withSeriesCount:(unsigned long long)a1 forTheme:(id)a2;
- (id)referenceLineStyleForAxisID:(id)a0 atIndex:(unsigned long long)a1 privateStyleOnly:(BOOL)a2;
- (unsigned long long)p_refLineIndexWithUUID:(id)a0 nonStyleItems:(id)a1;
- (void)setReferenceLineNonStyleItem:(id)a0 forAxisID:(id)a1 atIndex:(unsigned long long)a2;
- (void)setReferenceLineStyle:(id)a0 forAxisID:(id)a1 atIndex:(unsigned long long)a2;
- (id)swapTuplesForApplyingPreset:(id)a0 withBehavior:(unsigned long long)a1;
- (id)applyStyleSwapTuple:(id)a0;
- (id)styleForAxis:(id)a0;
- (id)nonStyleForAxis:(id)a0;
- (void)debugVerifyPreset;
- (void)setPreset:(id)a0 forceOwning:(BOOL)a1;
- (BOOL)shouldOwnPreset:(id)a0;
- (id)styleOwnerForSelectionPath:(id)a0;
- (int)paragraphStylePropertyForSelectionPath:(id)a0;
- (void)upgradeWithHorizontalMin:(id)a0 horizontalMax:(id)a1 valueMin:(id)a2 valueMax:(id)a3;
- (void)upgradeAxisLabelFormatWithValuePrefix:(id)a0 valueSuffix:(id)a1 valueUseSeparator:(BOOL)a2 horizontalPrefix:(id)a3 horizontalSuffix:(id)a4 horizontalUseSeparator:(BOOL)a5;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })chartBodyBoundsForSageImportWithSageChartType:(BOOL)a0 isSpiceDoc:(BOOL)a1;
- (void)updateAfterPaste;
- (id)initWithChartType:(id)a0 legendShowing:(id)a1 chartBodyFrame:(id)a2 chartAreaFrame:(id)a3 circumscribingFrame:(id)a4 legendFrame:(id)a5 stylePreset:(id)a6 privateSeriesStyles:(id)a7 chartNonStyle:(id)a8 legendNonStyle:(id)a9 valueAxisNonStyles:(id)a10 categoryAxisNonStyles:(id)a11 seriesNonStyles:(id)a12 refLineNonStylesMap:(id)a13 refLineStylesMap:(id)a14 forDocumentLocale:(id)a15;
- (id)modelForDataSetIndex:(unsigned long long)a0;
- (void)setLastAppliedFillSetIdentifier:(id)a0;
- (void)chartMoveToPosition:(struct CGPoint { double x0; double x1; })a0 size:(struct CGSize { double x0; double x1; })a1;
- (id)infoGeometryForVisuallyCenteringOnUnscaledCanvasPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)infoGeometryForVisiblePositioningInfoGeometry:(id)a0;
- (id)infoGeometryForDesiredPureLayoutGeometry:(id)a0;
- (id)infoGeometryForDesiredCircumscribingGeometry:(id)a0;
- (id)infoGeometryForDesiredCircumscribingGeometry:(id)a0 omitLabelPlacement:(BOOL)a1;
- (void)setInfoGeometryByUpdatingLegendGeometryAccommodatedForInitialLayoutGeometry:(id)a0;
- (BOOL)gridEqualToDefaultGrid;
- (unsigned long long)addParagraphStyle:(id)a0;
- (id)masterFontNameForInspectors;
- (id)newChartStylePresetByExampleWithPresetIndex:(unsigned long long)a0 forTheme:(id)a1;
- (id)legendNonStyle;
- (id)seriesStyleForSeries:(id)a0;
- (id)nonStyleForSeries:(id)a0;
- (unsigned long long)valueAxisStyleCount;
- (unsigned long long)categoryAxisStyleCount;
- (void)setValueAxisNonstyle:(id)a0 atIndex:(unsigned long long)a1;
- (void)setCategoryAxisNonstyle:(id)a0 atIndex:(unsigned long long)a1;
- (void)setSeriesNonstyle:(id)a0 atIndex:(unsigned long long)a1;
- (void)setChartNonstyle:(id)a0;
- (id)referenceLineNonStyleForAxisID:(id)a0 atIndex:(unsigned long long)a1;
- (id)referenceLineNonStyleForAxisID:(id)a0 uuid:(id)a1 outIndex:(unsigned long long *)a2;
- (void)addReferenceLineForAxisID:(id)a0 nonStyle:(id)a1 style:(id)a2 uuid:(id)a3;
- (void)deleteReferenceLineForAxisID:(id)a0 uuid:(id)a1;
- (void)chartDidInvalidateWithProperties:(id)a0;
- (BOOL)appearancePreservedForPreset;
- (void)updateTitlesForExportingModel:(id)a0;
- (double)sageDepthFactorForExport;
- (BOOL)p_refLineNonStyleMapIsValid;
- (id)p_uuidForRefLineOnAxis:(id)a0 havingNonStyle:(id)a1;
- (id)styleOwnerFromSwapType:(int)a0 andIndex:(unsigned long long)a1;
- (BOOL)hasTwoYValueAxes;
- (id)themeChartPresetForUUID:(id)a0;
- (id)stringForSelectionPath:(id)a0;
- (int)stringPropertyForSelectionPath:(id)a0;
- (id)paragraphStyleForSelectionPath:(id)a0;
- (id)scaleAllStrokesInStyle:(id)a0 byRatio:(double)a1;
- (id)fillsForSeriesAndTheme;
- (void)upgradeChartRoundedCornerRadiusWithValue:(double)a0;
- (void)performDeferredUpgradeAndImportOperations;
- (float)maximumExplosionOfAllSeriesExcept:(id)a0;
- (BOOL)p_containsCalloutLinesWithModelSync:(BOOL)a0;
- (float)minFrameDimensionForRadius:(float)a0 withMaxExplosion:(float)a1;
- (BOOL)p_supportsRoundedCornersWithModelSync:(BOOL)a0;
- (BOOL)containsCalloutLinesWithoutModelSync;
- (BOOL)supportsRoundedCornersWithoutModelSync;
- (id)allStyleOwners;
- (void)loadFromPreUFFArchive:(const struct ChartInfoArchive { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x4; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x5; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x6; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x7; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x8; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x9; struct DrawableArchive *x10; struct ChartModelArchive *x11; struct Reference *x12; struct LegendModelArchive *x13; struct RectArchive *x14; struct SparseReferenceArray *x15; struct SparseReferenceArray *x16; struct Reference *x17; struct Reference *x18; struct Point *x19; struct Reference *x20; int x21; int x22; int x23; int x24; BOOL x25; } *)a0 unarchiver:(id)a1 persistentChartInfo:(id)a2;
- (id)styleOwnerPathForStyleOwner:(id)a0;
- (id)viewOverrideMapForStyleOwner:(id)a0;
- (id)styleOwnerForRef:(id)a0;
- (id)styleOwnerRefForStyleOwner:(id)a0;
- (unsigned long long)nonStyleIndexForStyleOwnerRef:(id)a0;
- (id)styleOwnerRefForSemanticTag:(id)a0;
- (id)styleOwnerForPath:(id)a0;
- (id)styleOwnerPathForRef:(id)a0;
- (id)styleOwnerPathForSemanticTag:(id)a0;
- (id)styleOwnerRefForStyleOwnerPath:(id)a0;
- (id)tuplesToApplyState:(id)a0;
- (void)applyChartStyleState:(id)a0;
- (id)p_presetByAdoptingStylesheet:(id)a0 forPreset:(id)a1 withMapper:(id)a2 paragraphStyles:(id)a3;
- (void)p_setDrawableInfo:(id)a0;
- (void)p_duplicatePersistableMembersOfCopiedChartUsingContext:(id)a0;
- (id)p_copyStyleArray:(id)a0 inContext:(id)a1 withMapper:(id)a2;
- (id)p_copyNonStyleArray:(id)a0 inContext:(id)a1;
- (unsigned long long)p_paragraphStyleIndexOfFirstCategoryAxisParagraphStyle;
- (void)p_invalidateCachesInLayouts:(id)a0;
- (void)setViewStyleProxyParagraphStyleArray:(id)a0 layouts:(id)a1;
- (void)clearViewStyleProxyForLayouts:(id)a0;
- (void)p_applySeriesTuplesWithThemeSeriesStyles:(id)a0 privateSeriesStyles:(id)a1 propertyDictionary:(id)a2;
- (void)p_upgradeLineChartsFor10;
- (void)p_saveToUnityArchive:(struct ChartArchive { void /* function */ **x0; struct ExtensionSet { struct Arena *x0; unsigned short x1; unsigned short x2; union AllocatedData { struct KeyValue *x0; struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension> > > *x1; } x3; } x1; struct InternalMetadataWithArena { void *x0; } x2; struct HasBits<1> { unsigned int x0[1]; } x3; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x4; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x5; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x6; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x7; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x8; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x9; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x10; struct RectArchive *x11; struct Reference *x12; struct ChartGridArchive *x13; struct Reference *x14; struct Reference *x15; struct Reference *x16; struct Reference *x17; struct Reference *x18; struct SparseReferenceArray *x19; struct SparseReferenceArray *x20; struct Reference *x21; int x22; int x23; int x24; BOOL x25; BOOL x26; BOOL x27; unsigned int x28; } *)a0 persistentChartInfo:(id)a1 archiver:(id)a2;
- (void)loadFromUnityArchive:(const struct ChartArchive { void /* function */ **x0; struct ExtensionSet { struct Arena *x0; unsigned short x1; unsigned short x2; union AllocatedData { struct KeyValue *x0; struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension> > > *x1; } x3; } x1; struct InternalMetadataWithArena { void *x0; } x2; struct HasBits<1> { unsigned int x0[1]; } x3; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x4; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x5; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x6; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x7; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x8; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x9; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x10; struct RectArchive *x11; struct Reference *x12; struct ChartGridArchive *x13; struct Reference *x14; struct Reference *x15; struct Reference *x16; struct Reference *x17; struct Reference *x18; struct SparseReferenceArray *x19; struct SparseReferenceArray *x20; struct Reference *x21; int x22; int x23; int x24; BOOL x25; BOOL x26; BOOL x27; unsigned int x28; } *)a0 unarchiver:(id)a1 persistentChartInfo:(id)a2;
- (void)saveToUnityArchive:(struct ChartArchive { void /* function */ **x0; struct ExtensionSet { struct Arena *x0; unsigned short x1; unsigned short x2; union AllocatedData { struct KeyValue *x0; struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension> > > *x1; } x3; } x1; struct InternalMetadataWithArena { void *x0; } x2; struct HasBits<1> { unsigned int x0[1]; } x3; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x4; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x5; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x6; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x7; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x8; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x9; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x10; struct RectArchive *x11; struct Reference *x12; struct ChartGridArchive *x13; struct Reference *x14; struct Reference *x15; struct Reference *x16; struct Reference *x17; struct Reference *x18; struct SparseReferenceArray *x19; struct SparseReferenceArray *x20; struct Reference *x21; int x22; int x23; int x24; BOOL x25; BOOL x26; BOOL x27; unsigned int x28; } *)a0 persistentChartInfo:(id)a1 archiver:(id)a2;
- (id)p_swapTuplesForApplyingPresetRemovingOverrides:(id)a0;
- (id)p_swapTuplesForApplyingPreset:(id)a0 preservingAppearance:(BOOL)a1;

@end
