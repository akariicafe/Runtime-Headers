@class NSArray, NSDictionary, TSCHChartInfo, NSMutableDictionary, NSMutableArray, TSCHChartGrid;

@interface TSCHChartModel : NSObject <TSCHNotifyOnModify, TSCHUnretainedParent, TSDMixing, NSCopying> {
    unsigned long long mMultiDataSetIndex;
    NSMutableArray *mSeriesList;
    NSMutableArray *mAxisList;
    NSMutableDictionary *mRefLinesMap;
    unsigned long long mNumberOfSeriesForCalculatingBarWidth;
    BOOL mModelInvalid;
    NSMutableDictionary *mSeriesDimensionsByGridIndex;
    NSMutableDictionary *mGridIndexesBySeriesDimension;
    NSDictionary *mAxisIDToDataFormatterPersistableStyleObjectsMap;
    NSDictionary *mSeriesIndexToDataFormatterPersistableStyleObjectsMap;
    BOOL mDisableCachingMediatorData;
    int mCachedChartMediatorGridDirection;
    NSMutableDictionary *mModelManagedCaches;
}

@property (weak, nonatomic) TSCHChartInfo *chartInfo;
@property (retain, nonatomic) TSCHChartGrid *grid;
@property (nonatomic) int scatterFormat;
@property (readonly, nonatomic) BOOL isTransient;
@property (readonly, nonatomic) BOOL isMultiData;
@property (nonatomic) unsigned long long multiDataSetIndex;
@property (readonly, nonatomic) unsigned long long numberOfMultiDataSets;
@property (readonly, nonatomic) unsigned long long numberOfMultiDataSetCategories;
@property (readonly, nonatomic) unsigned long long numberOfChunkableMultiDataSets;
@property (readonly, nonatomic) unsigned long long numberOfSeries;
@property (readonly, nonatomic) unsigned long long numberOfSeriesForCalculatingBarWidth;
@property (readonly, nonatomic) unsigned long long numberOfValues;
@property (readonly, nonatomic) unsigned long long maxNumberOfReferenceLines;
@property (readonly, nonatomic) unsigned long long analyticsDataSize;
@property (readonly, copy, nonatomic) NSArray *seriesList;
@property (readonly, copy, nonatomic) NSArray *axisList;
@property (readonly, copy, nonatomic) NSArray *valueAxisList;
@property (readonly, copy, nonatomic) NSArray *categoryAxisList;
@property (readonly, copy, nonatomic) NSDictionary *referenceLinesMap;
@property (readonly, nonatomic) id syncRoot;

- (id)init;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)dealloc;
- (void)invalidateCaches;
- (void)setCacheObject:(id)a0 forKey:(id)a1;
- (void)validateIfNeeded;
- (id)cachedObjectForKey:(id)a0;
- (id)nameForCategory:(unsigned long long)a0;
- (void)willModify;
- (id)mixedObjectWithFraction:(double)a0 ofObject:(id)a1;
- (BOOL)isEquivalentForCrossDocumentPasteMasterComparison:(id)a0;
- (long long)mixingTypeWithObject:(id)a0 context:(id)a1;
- (id)initWithChartInfo:(id)a0;
- (void)forceLoadDefaultData;
- (id)seriesDimensionForGridIndex:(unsigned long long)a0;
- (unsigned long long)gridIndexForSeriesDimension:(id)a0;
- (void)invalidateModel;
- (void)clearParent;
- (id)lineAreaModelCacheForSeries:(unsigned long long)a0;
- (id)barModelCacheForSeries:(unsigned long long)a0;
- (id)pieSeriesModelCacheForSeries:(unsigned long long)a0;
- (id)axisForID:(id)a0;
- (id)seriesAtIndex:(unsigned long long)a0;
- (id)nameForSeries:(unsigned long long)a0;
- (unsigned long long)maxNumberOfReferenceLines;
- (void)enumerateMultiDataModelsUsingBlock:(id /* block */)a0;
- (id)referenceLineForStyleSwapIndex:(unsigned long long)a0;
- (unsigned long long)numberOfGroupsInAllSeries;
- (void)resetSeriesStorage;
- (void)disableCachingMediatorDataDuringBlock:(id /* block */)a0;
- (unsigned long long)numberOfGroupsInSeries:(id)a0;
- (unsigned long long)multiDataSetCategoryIndexForCategory:(unsigned long long)a0;
- (unsigned long long)categoryForMultiDataSetCategoryIndex:(unsigned long long)a0;
- (id)initWithChartInfo:(id)a0 dataSetIndex:(unsigned long long)a1;
- (unsigned long long)p_lastMultiDataSetIndex;
- (id)p_axisForID:(id)a0;
- (void)p_synchronizeAxis:(id)a0 class:(Class)a1 axisID:(id)a2 axisIndex:(unsigned long long)a3 styleIndex:(unsigned long long)a4 usedAxes:(id)a5 unusedAxes:(id)a6;
- (void)p_synchronizeSeriesListWithSeriesNonStyleMigration:(BOOL)a0;
- (unsigned long long)defaultOrdinalForAxisType:(int)a0 seriesIndex:(unsigned long long)a1;
- (void)p_setBimapEntryForSeriesDimension:(id)a0 andGridIndex:(unsigned long long)a1;
- (BOOL)p_disableCachingMediatorData;
- (void)p_synchronizeModelWithSeriesNonStyleMigration:(BOOL)a0;
- (void)p_synchronizeAxisList;
- (void)p_postSynchronizeAxisList;
- (void)p_synchronizeReferenceLines;
- (void)p_cacheAxisDataFormatters;
- (void)p_cacheSeriesDataFormatters;
- (void)p_cacheMediatorChartGridDirection;
- (void)p_synchronizeModel;
- (unsigned long long)numberOfGridValues;
- (unsigned long long)p_numberOfGroupsInSeries:(id)a0;
- (unsigned long long)p_multiDataSetCategoryIndexForCategory:(unsigned long long)a0;
- (id)nameForMultiDataSetCategory:(unsigned long long)a0;
- (void)setNameForMultiDataSetCategory:(unsigned long long)a0 toName:(id)a1;
- (BOOL)p_shouldLoadDefaultData;
- (void)p_loadDefaultDataWithGridRowIds:(id)a0 gridColumnIds:(id)a1 forDocumentLocale:(id)a2;
- (void)p_loadDefaultData;
- (unsigned long long)p_archivedMultiDataSetIndex;
- (void)updateTransientModelFromInfoModel;
- (void)p_synchronizeSeriesList;
- (void)validateIfNeededWithSeriesNonStyleMigration:(BOOL)a0;
- (id)noSyncAxisList;
- (void)setShouldCacheMediatorData:(BOOL)a0;
- (id)cachedDataFormatterPersistableStyleObjectForID:(id)a0;
- (id)cachedDataFormatterPersistableStyleObjectAtSeriesIndex:(unsigned long long)a0;
- (int)cachedChartMediatorGridDirection;
- (id)noSyncSeriesList;
- (id)allGroupsIndexSetForSeries:(id)a0;
- (unsigned long long)numberOfGroupsInSeriesAtIndex:(unsigned long long)a0;
- (id)dataSetNameForMultiDataModel;
- (void)setNameForCategory:(unsigned long long)a0 toName:(id)a1;
- (void)loadDefaultDataIfNotDirtyWithGridRowIds:(id)a0 gridColumnIds:(id)a1 forDocumentLocale:(id)a2;
- (void)loadDefaultDataIfNotDirty;
- (BOOL)hasReferenceLines;
- (unsigned long long)styleSwapIndexForReferenceLine:(id)a0;
- (id)legendModelCache;
- (void)loadFromPreUFFArchive:(const struct ChartModelArchive { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedField<unsigned int> { int x0; int x1; union Pointer { struct Arena *x0; struct Rep *x1; } x2; } x4; struct Reference *x5; struct Reference *x6; struct ChartGridArchive *x7; unsigned int x8; unsigned int x9; } *)a0 unarchiver:(id)a1 contextForUpgradeOnly:(id)a2;
- (void)setTextEditingSelectionPath:(id)a0 string:(id)a1;
- (void)clearTextEditingSelectionPath;
- (void)loadFromUnityArchive:(const struct ChartArchive { void /* function */ **x0; struct ExtensionSet { struct Arena *x0; unsigned short x1; unsigned short x2; union AllocatedData { struct KeyValue *x0; struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension> > > *x1; } x3; } x1; struct InternalMetadataWithArena { void *x0; } x2; struct HasBits<1> { unsigned int x0[1]; } x3; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x4; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x5; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x6; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x7; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x8; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x9; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x10; struct RectArchive *x11; struct Reference *x12; struct ChartGridArchive *x13; struct Reference *x14; struct Reference *x15; struct Reference *x16; struct Reference *x17; struct Reference *x18; struct SparseReferenceArray *x19; struct SparseReferenceArray *x20; struct Reference *x21; int x22; int x23; int x24; BOOL x25; BOOL x26; BOOL x27; unsigned int x28; } *)a0 unarchiver:(id)a1 contextForUpgradeOnly:(id)a2 chartInfo:(id)a3;
- (void)saveToUnityArchive:(struct ChartArchive { void /* function */ **x0; struct ExtensionSet { struct Arena *x0; unsigned short x1; unsigned short x2; union AllocatedData { struct KeyValue *x0; struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension> > > *x1; } x3; } x1; struct InternalMetadataWithArena { void *x0; } x2; struct HasBits<1> { unsigned int x0[1]; } x3; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x4; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x5; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x6; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x7; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x8; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x9; struct RepeatedPtrField<TSP::Reference> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x10; struct RectArchive *x11; struct Reference *x12; struct ChartGridArchive *x13; struct Reference *x14; struct Reference *x15; struct Reference *x16; struct Reference *x17; struct Reference *x18; struct SparseReferenceArray *x19; struct SparseReferenceArray *x20; struct Reference *x21; int x22; int x23; int x24; BOOL x25; BOOL x26; BOOL x27; unsigned int x28; } *)a0 forCopy:(BOOL)a1;

@end
