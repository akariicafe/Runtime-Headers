@protocol MTLCommandQueue, MTLDevice, MTLRenderPipelineState;

@interface ARGPUWarper : NSObject {
    id<MTLDevice> _device;
    id<MTLCommandQueue> _commandQueue;
    id<MTLRenderPipelineState> _homographyPipelineState;
}

- (id)init;
- (void).cxx_destruct;
- (id)description;
- (void)warpCameraImage:(struct __CVBuffer { } *)a0 withExposureOffset:(float)a1 withCameraIntrinsics:(struct { void /* unknown type, empty encoding */ x0[3]; })a2 withCameraTransform:(struct { void /* unknown type, empty encoding */ x0[4]; })a3 toPlane:(struct ARTexturedPlane { struct array<unsigned char, 16> { unsigned char x0[16]; } x0; unsigned long long x1; struct { void /* unknown type, empty encoding */ x0[4]; } x2; struct array<float __attribute__((ext_vector_type(3))), 4> { void /* unknown type, empty encoding */ x0[4]; } x3; struct set<std::__1::array<unsigned char, 16>, std::__1::less<std::__1::array<unsigned char, 16> >, std::__1::allocator<std::__1::array<unsigned char, 16> > > { struct __tree<std::__1::array<unsigned char, 16>, std::__1::less<std::__1::array<unsigned char, 16> >, std::__1::allocator<std::__1::array<unsigned char, 16> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::array<unsigned char, 16>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<std::__1::array<unsigned char, 16> > > { unsigned long long x0; } x2; } x0; } x4; id x5; })a4 withLoadAction:(unsigned long long)a5 synchronous:(BOOL)a6;
- (void)warpPlane:(struct ARTexturedPlane { struct array<unsigned char, 16> { unsigned char x0[16]; } x0; unsigned long long x1; struct { void /* unknown type, empty encoding */ x0[4]; } x2; struct array<float __attribute__((ext_vector_type(3))), 4> { void /* unknown type, empty encoding */ x0[4]; } x3; struct set<std::__1::array<unsigned char, 16>, std::__1::less<std::__1::array<unsigned char, 16> >, std::__1::allocator<std::__1::array<unsigned char, 16> > > { struct __tree<std::__1::array<unsigned char, 16>, std::__1::less<std::__1::array<unsigned char, 16> >, std::__1::allocator<std::__1::array<unsigned char, 16> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::array<unsigned char, 16>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<std::__1::array<unsigned char, 16> > > { unsigned long long x0; } x2; } x0; } x4; id x5; })a0 toPlane:(struct ARTexturedPlane { struct array<unsigned char, 16> { unsigned char x0[16]; } x0; unsigned long long x1; struct { void /* unknown type, empty encoding */ x0[4]; } x2; struct array<float __attribute__((ext_vector_type(3))), 4> { void /* unknown type, empty encoding */ x0[4]; } x3; struct set<std::__1::array<unsigned char, 16>, std::__1::less<std::__1::array<unsigned char, 16> >, std::__1::allocator<std::__1::array<unsigned char, 16> > > { struct __tree<std::__1::array<unsigned char, 16>, std::__1::less<std::__1::array<unsigned char, 16> >, std::__1::allocator<std::__1::array<unsigned char, 16> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::array<unsigned char, 16>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<std::__1::array<unsigned char, 16> > > { unsigned long long x0; } x2; } x0; } x4; id x5; })a1 withLoadAction:(unsigned long long)a2 synchronous:(BOOL)a3;

@end
