@interface CMDPResult : NSObject {
    struct unique_ptr<fst::VectorFst<fst::ArcTpl<fst::TropicalWeightTpl<float> >, fst::VectorState<fst::ArcTpl<fst::TropicalWeightTpl<float> >, std::__1::allocator<fst::ArcTpl<fst::TropicalWeightTpl<float> > > > >, std::__1::default_delete<fst::VectorFst<fst::ArcTpl<fst::TropicalWeightTpl<float> >, fst::VectorState<fst::ArcTpl<fst::TropicalWeightTpl<float> >, std::__1::allocator<fst::ArcTpl<fst::TropicalWeightTpl<float> > > > > > > { struct __compressed_pair<fst::VectorFst<fst::ArcTpl<fst::TropicalWeightTpl<float> >, fst::VectorState<fst::ArcTpl<fst::TropicalWeightTpl<float> >, std::__1::allocator<fst::ArcTpl<fst::TropicalWeightTpl<float> > > > > *, std::__1::default_delete<fst::VectorFst<fst::ArcTpl<fst::TropicalWeightTpl<float> >, fst::VectorState<fst::ArcTpl<fst::TropicalWeightTpl<float> >, std::__1::allocator<fst::ArcTpl<fst::TropicalWeightTpl<float> > > > > > > { struct VectorFst<fst::ArcTpl<fst::TropicalWeightTpl<float> >, fst::VectorState<fst::ArcTpl<fst::TropicalWeightTpl<float> >, std::__1::allocator<fst::ArcTpl<fst::TropicalWeightTpl<float> > > > > *__value_; } __ptr_; } _resultFst;
    struct unique_ptr<CMDPNormalizer, std::__1::default_delete<CMDPNormalizer> > { struct __compressed_pair<CMDPNormalizer *, std::__1::default_delete<CMDPNormalizer> > { struct CMDPNormalizer *__value_; } __ptr_; } _normalizer;
    struct vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > { struct unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > *__begin_; struct unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > *__end_; struct __compressed_pair<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > *, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > { struct unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > *__value_; } __end_cap_; } _resultNodes;
    struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > > { struct __tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *__begin_node_; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char> > > { unsigned long long __value_; } __pair3_; } __tree_; } _symbol_set;
}

+ (struct vector<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > > > { struct vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > *x0; struct vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > *x1; struct __compressed_pair<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > > > { struct vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > *x0; } x2; })CMDPTokenSausageFromCFTokenSausage:(struct __CFArray { } *)a0;
+ (struct vector<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > > > { struct vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > *x0; struct vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > *x1; struct __compressed_pair<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > > > { struct vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > *x0; } x2; })CMDPTokenSausageFromAFSpeechPhraseArray:(id)a0;

- (void).cxx_destruct;
- (id).cxx_construct;
- (id)initWithTokenSausageVec:(struct vector<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > > > { struct vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > *x0; struct vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > *x1; struct __compressed_pair<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > > > { struct vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > *x0; } x2; } *)a0 forLocaleIdentifier:(id)a1;
- (id)createArrayFromNBestResults:(const struct vector<std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> > > >, std::__1::allocator<std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> > > > > > { struct vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> > > > *x0; struct vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> > > > *x1; struct __compressed_pair<std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> > > > *, std::__1::allocator<std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> > > > > > { struct vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> > > > *x0; } x2; } *)a0 withGrammarData:(id)a1;
- (id)initWithTokenSausage:(struct __CFArray { } *)a0 forLocaleIdentifier:(id)a1;
- (id)initWithAFSpeechPhraseArray:(id)a0 forLocaleIdentifier:(id)a1;
- (id)matchWithGrammars:(id)a0 winningIndex:(int *)a1 winningDistance:(float *)a2;

@end
