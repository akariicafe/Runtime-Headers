@class RBDisplayList;
@protocol MTLDevice;

@interface RBSurface : NSObject {
    struct objc_ptr<RBDisplayList *> { RBDisplayList *_p; } _displayList;
    struct unique_ptr<RB::Drawable, std::__1::default_delete<RB::Drawable> > { struct __compressed_pair<RB::Drawable *, std::__1::default_delete<RB::Drawable> > { struct Drawable *__value_; } __ptr_; } _drawable;
    struct objc_ptr<id<MTLDevice> > { id<MTLDevice> _p; } _device;
    struct refcounted_ptr<RB::Texture> { struct Texture *_p; } _texture;
    void *_lastItem;
    struct Bounds { int x; int y; int w; int h; } _dirty;
}

@property (nonatomic) struct CGSize { double width; double height; } size;
@property (nonatomic) double scale;
@property (nonatomic) int colorMode;
@property (nonatomic) BOOL clearsBackground;
@property (nonatomic) struct { float red; float green; float blue; float alpha; } clearColor;
@property (nonatomic, getter=isOpaque) BOOL opaque;
@property (retain, nonatomic) RBDisplayList *displayList;

- (id)init;
- (void).cxx_destruct;
- (id).cxx_construct;
- (void)invalidate;
- (void)invalidateInRect:(struct Rect { float x0; float x1; float x2; float x3; })a0;
- (BOOL)_updateWithDevice:(struct Device { void /* function */ **x0; unsigned int x1; struct objc_ptr<id<MTLDevice> > { id x0; } x2; struct objc_ptr<id<MTLLibrary> > { id x0; } x3; struct objc_ptr<id<MTLPipelineLibrary> > { id x0; } x4; struct objc_ptr<id<MTLCommandQueue> > { id x0; } x5; struct objc_ptr<id<MTLCaptureScope> > { id x0; } x6; struct BufferRegion { struct Buffer *x0; unsigned long long x1; unsigned long long x2; } x7; struct BufferRegion { struct Buffer *x0; unsigned long long x1; unsigned long long x2; } x8; struct BufferRegion { struct Buffer *x0; unsigned long long x1; unsigned long long x2; } x9; struct objc_ptr<id<MTLTexture> > { id x0; } x10; struct spin_lock { struct os_unfair_lock_s { unsigned int x0; } x0; } x11; unsigned int x12; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x13; struct vector<RB::Device::FrameContinuation, 2, unsigned long> { unsigned char x0[48]; struct FrameContinuation *x1; unsigned long long x2; unsigned long long x3; } x14; unsigned long long x15; unsigned long long x16; BOOL x17; BOOL x18; BOOL x19; BOOL x20; struct Heap { unsigned long long x0; struct Page *x1; char *x2; char *x3; } x21; struct list<RB::refcounted_ptr<RB::Buffer>, std::__1::allocator<RB::refcounted_ptr<RB::Buffer> > > { struct __list_node_base<RB::refcounted_ptr<RB::Buffer>, void *> { struct __list_node_base<RB::refcounted_ptr<RB::Buffer>, void *> *x0; struct __list_node_base<RB::refcounted_ptr<RB::Buffer>, void *> *x1; } x0; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<RB::refcounted_ptr<RB::Buffer>, void *> > > { unsigned long long x0; } x1; } x22; unsigned long long x23; struct list<RB::refcounted_ptr<RB::Texture>, std::__1::allocator<RB::refcounted_ptr<RB::Texture> > > { struct __list_node_base<RB::refcounted_ptr<RB::Texture>, void *> { struct __list_node_base<RB::refcounted_ptr<RB::Texture>, void *> *x0; struct __list_node_base<RB::refcounted_ptr<RB::Texture>, void *> *x1; } x0; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<RB::refcounted_ptr<RB::Texture>, void *> > > { unsigned long long x0; } x1; } x24; struct list<RB::refcounted_ptr<RB::Texture>, std::__1::allocator<RB::refcounted_ptr<RB::Texture> > > { struct __list_node_base<RB::refcounted_ptr<RB::Texture>, void *> { struct __list_node_base<RB::refcounted_ptr<RB::Texture>, void *> *x0; struct __list_node_base<RB::refcounted_ptr<RB::Texture>, void *> *x1; } x0; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<RB::refcounted_ptr<RB::Texture>, void *> > > { unsigned long long x0; } x1; } x25; unsigned long long x26; struct Table<const RB::FormattedRenderState *, RB::Device::RenderPipelineEntry *> { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; struct Heap *x4; struct Pool<RB::UntypedTable::Node> { struct Item *x0; } x5; struct Node **x6; unsigned long long x7; unsigned long long x8; unsigned int x9; BOOL x10; BOOL x11; } x27; struct unordered_set<RB::FormattedRenderState, std::__1::hash<RB::FormattedRenderState>, std::__1::equal_to<RB::FormattedRenderState>, std::__1::allocator<RB::FormattedRenderState> > { struct __hash_table<RB::FormattedRenderState, std::__1::hash<RB::FormattedRenderState>, std::__1::equal_to<RB::FormattedRenderState>, std::__1::allocator<RB::FormattedRenderState> > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<RB::FormattedRenderState, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<RB::FormattedRenderState, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<RB::FormattedRenderState, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<RB::FormattedRenderState, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<RB::FormattedRenderState, void *> *> **x0; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<RB::FormattedRenderState, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<RB::FormattedRenderState, void *> *> *> > { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<RB::FormattedRenderState, void *> *>, std::__1::allocator<std::__1::__hash_node<RB::FormattedRenderState, void *> > > { struct __hash_node_base<std::__1::__hash_node<RB::FormattedRenderState, void *> *> { struct __hash_node_base<std::__1::__hash_node<RB::FormattedRenderState, void *> *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::hash<RB::FormattedRenderState> > { unsigned long long x0; } x2; struct __compressed_pair<float, std::__1::equal_to<RB::FormattedRenderState> > { float x0; } x3; } x0; } x28; BOOL x29; BOOL x30; struct objc_ptr<id<MTLSamplerState> > { id x0; } x31[6]; struct objc_ptr<id<MTLDepthStencilState> > { id x0; } x32[3][6]; struct Table<unsigned long, RB::Texture *> { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; struct Heap *x4; struct Pool<RB::UntypedTable::Node> { struct Item *x0; } x5; struct Node **x6; unsigned long long x7; unsigned long long x8; unsigned int x9; BOOL x10; BOOL x11; } x33; struct unique_ptr<RB::GlyphPathCache, std::__1::default_delete<RB::GlyphPathCache> > { struct __compressed_pair<RB::GlyphPathCache *, std::__1::default_delete<RB::GlyphPathCache> > { struct GlyphPathCache *x0; } x0; } x34; struct CGGlyphLock *x35; } *)a0 frame:(struct RenderFrame { struct Device *x0; struct Drawable *x1; struct objc_ptr<id<MTLCommandBuffer> > { id x0; } x2; struct unique_ptr<RB::RenderQueue, std::__1::default_delete<RB::RenderQueue> > { struct __compressed_pair<RB::RenderQueue *, std::__1::default_delete<RB::RenderQueue> > { struct RenderQueue *x0; } x0; } x3; unsigned long long x4[5]; double x5; unsigned int x6; unsigned int x7; unsigned int x8; struct vector<RB::refcounted_ptr<RB::Buffer>, std::__1::allocator<RB::refcounted_ptr<RB::Buffer> > > { struct refcounted_ptr<RB::Buffer> *x0; struct refcounted_ptr<RB::Buffer> *x1; struct __compressed_pair<RB::refcounted_ptr<RB::Buffer> *, std::__1::allocator<RB::refcounted_ptr<RB::Buffer> > > { struct refcounted_ptr<RB::Buffer> *x0; } x2; } x9; struct vector<unsigned long, std::__1::allocator<unsigned long> > { unsigned long long *x0; unsigned long long *x1; struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long> > { unsigned long long *x0; } x2; } x10; struct forward_list<RB::refcounted_ptr<RB::Texture>, std::__1::allocator<RB::refcounted_ptr<RB::Texture> > > { struct __compressed_pair<std::__1::__forward_begin_node<std::__1::__forward_list_node<RB::refcounted_ptr<RB::Texture>, void *> *>, std::__1::allocator<std::__1::__forward_list_node<RB::refcounted_ptr<RB::Texture>, void *> > > { struct __forward_begin_node<std::__1::__forward_list_node<RB::refcounted_ptr<RB::Texture>, void *> *> { struct __forward_list_node<RB::refcounted_ptr<RB::Texture>, void *> *x0; } x0; } x0; } x11; struct Buffer *x12; unsigned long long x13; BOOL x14; struct Table<const RB::RenderFrame::RegionKey *, const RB::RenderFrame::RegionEntry *> { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; struct Heap *x4; struct Pool<RB::UntypedTable::Node> { struct Item *x0; } x5; struct Node **x6; unsigned long long x7; unsigned long long x8; unsigned int x9; BOOL x10; BOOL x11; } x15; } *)a1 synchronized:(BOOL)a2;
- (void)setDisplayList:(id)a0 dirtyRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (struct CGImage { } *)copyCGImageUsingDevice:(id)a0;
- (void)updateUsingDevice:(id)a0;

@end
