@interface RBXMLRecorder_Fill : RBFill {
    struct vector<std::__1::pair<const char *, RB::refcounted_ptr<RB::XMLRecorder::AttrValue> >, std::__1::allocator<std::__1::pair<const char *, RB::refcounted_ptr<RB::XMLRecorder::AttrValue> > > > { struct pair<const char *, RB::refcounted_ptr<RB::XMLRecorder::AttrValue> > *__begin_; struct pair<const char *, RB::refcounted_ptr<RB::XMLRecorder::AttrValue> > *__end_; struct __compressed_pair<std::__1::pair<const char *, RB::refcounted_ptr<RB::XMLRecorder::AttrValue> > *, std::__1::allocator<std::__1::pair<const char *, RB::refcounted_ptr<RB::XMLRecorder::AttrValue> > > > { struct pair<const char *, RB::refcounted_ptr<RB::XMLRecorder::AttrValue> > *__value_; } __end_cap_; } _attributes;
    unsigned int _seed;
}

- (void)set9PartRBImage:(struct { int x0; void *x1; })a0 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a1 destinationRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 capInsets:(struct { double x0; double x1; double x2; double x3; })a3 repeat:(BOOL)a4 interpolation:(int)a5 tintColor:(struct { float x0; float x1; float x2; float x3; })a6 flags:(unsigned int)a7;
- (void)setTiledRBImage:(struct { int x0; void *x1; })a0 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a1 sourceRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 interpolation:(int)a3 tintColor:(struct { float x0; float x1; float x2; float x3; })a4 flags:(unsigned int)a5;
- (void)setRBImage:(struct { int x0; void *x1; })a0 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a1 interpolation:(int)a2 tintColor:(struct { float x0; float x1; float x2; float x3; })a3 flags:(unsigned int)a4;
- (void)setConicGradientCenter:(struct CGPoint { double x0; double x1; })a0 angle:(double)a1 stopCount:(long long)a2 colors:(const struct { float x0; float x1; float x2; float x3; } *)a3 locations:(const double *)a4 flags:(unsigned int)a5;
- (void)setRadialGradientCenter:(struct CGPoint { double x0; double x1; })a0 startRadius:(double)a1 endRadius:(double)a2 stopCount:(long long)a3 colors:(const struct { float x0; float x1; float x2; float x3; } *)a4 locations:(const double *)a5 flags:(unsigned int)a6;
- (void)setAxialGradientStartPoint:(struct CGPoint { double x0; double x1; })a0 endPoint:(struct CGPoint { double x0; double x1; })a1 stopCount:(long long)a2 colors:(const struct { float x0; float x1; float x2; float x3; } *)a3 locations:(const double *)a4 flags:(unsigned int)a5;
- (void).cxx_destruct;
- (void)setColor:(struct { float x0; float x1; float x2; float x3; })a0;
- (id).cxx_construct;
- (void)encodeTo:(struct Tree { struct refcounted_ptr<RB::XMLRecorder::Element> { struct Element *x0; } x0; struct stack<RB::XMLRecorder::Element *, std::__1::deque<RB::XMLRecorder::Element *, std::__1::allocator<RB::XMLRecorder::Element *> > > { struct deque<RB::XMLRecorder::Element *, std::__1::allocator<RB::XMLRecorder::Element *> > { struct __split_buffer<RB::XMLRecorder::Element **, std::__1::allocator<RB::XMLRecorder::Element **> > { struct Element ***x0; struct Element ***x1; struct Element ***x2; struct __compressed_pair<RB::XMLRecorder::Element ***, std::__1::allocator<RB::XMLRecorder::Element **> > { struct Element ***x0; } x3; } x0; unsigned long long x1; struct __compressed_pair<unsigned long, std::__1::allocator<RB::XMLRecorder::Element *> > { unsigned long long x0; } x2; } x0; } x1; } *)a0;

@end
