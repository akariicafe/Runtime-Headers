@interface OABShapeGeometry : NSObject

+ (void)readFromShape:(struct EshShape { void /* function */ **x0; unsigned short x1; struct EshContentData { struct EshOpt { void /* function */ **x0; unsigned short x1; struct EshHeader { int x0; unsigned int x1; short x2; unsigned short x3; unsigned char x4; } x2; struct ChMap<unsigned int, EshOpt::Value, CsLess<unsigned int> > { struct map<unsigned int, EshOpt::Value, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, EshOpt::Value> > > { struct __tree<std::__1::__value_type<unsigned int, EshOpt::Value>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, EshOpt::Value> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, EshOpt::Value>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true> > { unsigned long long x0; } x2; } x0; } x0; } x3; struct EshColor { struct Data { int x0; union Value { struct RGB { unsigned char x0; unsigned char x1; unsigned char x2; } x0; unsigned short x1; unsigned short x2; struct AdjustedColor { unsigned char x0; unsigned char x1; unsigned char x2 : 4; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; } x3; } x1; } x0; } x4; } x0; struct EshOpt { void /* function */ **x0; unsigned short x1; struct EshHeader { int x0; unsigned int x1; short x2; unsigned short x3; unsigned char x4; } x2; struct ChMap<unsigned int, EshOpt::Value, CsLess<unsigned int> > { struct map<unsigned int, EshOpt::Value, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, EshOpt::Value> > > { struct __tree<std::__1::__value_type<unsigned int, EshOpt::Value>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, EshOpt::Value> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, EshOpt::Value>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true> > { unsigned long long x0; } x2; } x0; } x0; } x3; struct EshColor { struct Data { int x0; union Value { struct RGB { unsigned char x0; unsigned char x1; unsigned char x2; } x0; unsigned short x1; unsigned short x2; struct AdjustedColor { unsigned char x0; unsigned char x1; unsigned char x2 : 4; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; } x3; } x1; } x0; } x4; } x1; struct EshOpt { void /* function */ **x0; unsigned short x1; struct EshHeader { int x0; unsigned int x1; short x2; unsigned short x3; unsigned char x4; } x2; struct ChMap<unsigned int, EshOpt::Value, CsLess<unsigned int> > { struct map<unsigned int, EshOpt::Value, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, EshOpt::Value> > > { struct __tree<std::__1::__value_type<unsigned int, EshOpt::Value>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, EshOpt::Value> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, EshOpt::Value>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true> > { unsigned long long x0; } x2; } x0; } x0; } x3; struct EshColor { struct Data { int x0; union Value { struct RGB { unsigned char x0; unsigned char x1; unsigned char x2; } x0; unsigned short x1; unsigned short x2; struct AdjustedColor { unsigned char x0; unsigned char x1; unsigned char x2 : 4; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; } x3; } x1; } x0; } x4; } x2; struct EshSp { void /* function */ **x0; unsigned short x1; struct EshHeader { int x0; unsigned int x1; short x2; unsigned short x3; unsigned char x4; } x2; unsigned int x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; } x3; struct CsRect<int> { int x0[4]; } x4; } x2; struct EshTextBox { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x3; struct EshFill { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x4; struct EshStroke { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x5; struct EshShadow { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x6; struct EshExtrusion { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x7; struct EshCallout { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x8; void /* function */ **x9; struct EshShapeProperties { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; void /* function */ **x3; } x10; struct EshShapeLocks { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x11; struct EshShapeImageData { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x12; struct EshTextPath { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x13; struct EshPath { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x14; struct EshSkew { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x15; } *)a0 toShape:(id)a1;
+ (void)readAdjustValuesFromShapeProperties:(const struct EshShapeProperties { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; void /* function */ **x3; } *)a0 toGeometry:(id)a1;
+ (void)readGeometryCoordSpaceFromShapeProperties:(const struct EshShapeProperties { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; void /* function */ **x3; } *)a0 toGeometry:(id)a1;
+ (void)readLimoFromPath:(const struct EshPath { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } *)a0 toGeometry:(id)a1;
+ (void)readFromFormulas:(const struct EshTablePropVal<EshFormula> { void /* function */ **x0; struct ChVector<EshFormula> { struct EshFormula *x0; struct EshFormula *x1; struct __compressed_pair<EshFormula *, ChAllocator<EshFormula> > { struct EshFormula *x0; } x2; } x1; } *)a0 toGeometry:(id)a1;
+ (void)readFromTextBoxRects:(const struct EshTablePropVal<EshComputedRect> { void /* function */ **x0; struct ChVector<EshComputedRect> { struct EshComputedRect *x0; struct EshComputedRect *x1; struct __compressed_pair<EshComputedRect *, ChAllocator<EshComputedRect> > { struct EshComputedRect *x0; } x2; } x1; } *)a0 toGeometry:(id)a1;
+ (void)readPathCommandsAndParamsFromPath:(const struct EshPath { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } *)a0 toGeometry:(id)a1;
+ (struct OADAdjustCoord { BOOL x0; int x1; })adjustCoordWithComputedValue:(struct EshComputedValue { BOOL x0; int x1; })a0;
+ (int)actualPathCommandForPathCommand:(int)a0 index:(unsigned short)a1;
+ (struct EshComputedValue { BOOL x0; int x1; })computedValueWithAdjustCoord:(struct OADAdjustCoord { BOOL x0; int x1; })a0;
+ (void)appendAdjustPoint:(struct OADAdjustPoint { struct OADAdjustCoord { BOOL x0; int x1; } x0; struct OADAdjustCoord { BOOL x0; int x1; } x1; })a0 toPathParams:(struct EshPathParamTable { void /* function */ **x0; struct ChVector<EshComputedValue> { struct EshComputedValue *x0; struct EshComputedValue *x1; struct __compressed_pair<EshComputedValue *, ChAllocator<EshComputedValue> > { struct EshComputedValue *x0; } x2; } x1; } *)a1;
+ (void)writeAdjustValuesFromGeometry:(id)a0 toShapeProperties:(struct EshShapeProperties { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; void /* function */ **x3; } *)a1;
+ (void)writeCoordSpaceFromGeometry:(id)a0 toShape:(struct EshShape { void /* function */ **x0; unsigned short x1; struct EshContentData { struct EshOpt { void /* function */ **x0; unsigned short x1; struct EshHeader { int x0; unsigned int x1; short x2; unsigned short x3; unsigned char x4; } x2; struct ChMap<unsigned int, EshOpt::Value, CsLess<unsigned int> > { struct map<unsigned int, EshOpt::Value, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, EshOpt::Value> > > { struct __tree<std::__1::__value_type<unsigned int, EshOpt::Value>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, EshOpt::Value> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, EshOpt::Value>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true> > { unsigned long long x0; } x2; } x0; } x0; } x3; struct EshColor { struct Data { int x0; union Value { struct RGB { unsigned char x0; unsigned char x1; unsigned char x2; } x0; unsigned short x1; unsigned short x2; struct AdjustedColor { unsigned char x0; unsigned char x1; unsigned char x2 : 4; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; } x3; } x1; } x0; } x4; } x0; struct EshOpt { void /* function */ **x0; unsigned short x1; struct EshHeader { int x0; unsigned int x1; short x2; unsigned short x3; unsigned char x4; } x2; struct ChMap<unsigned int, EshOpt::Value, CsLess<unsigned int> > { struct map<unsigned int, EshOpt::Value, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, EshOpt::Value> > > { struct __tree<std::__1::__value_type<unsigned int, EshOpt::Value>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, EshOpt::Value> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, EshOpt::Value>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true> > { unsigned long long x0; } x2; } x0; } x0; } x3; struct EshColor { struct Data { int x0; union Value { struct RGB { unsigned char x0; unsigned char x1; unsigned char x2; } x0; unsigned short x1; unsigned short x2; struct AdjustedColor { unsigned char x0; unsigned char x1; unsigned char x2 : 4; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; } x3; } x1; } x0; } x4; } x1; struct EshOpt { void /* function */ **x0; unsigned short x1; struct EshHeader { int x0; unsigned int x1; short x2; unsigned short x3; unsigned char x4; } x2; struct ChMap<unsigned int, EshOpt::Value, CsLess<unsigned int> > { struct map<unsigned int, EshOpt::Value, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, EshOpt::Value> > > { struct __tree<std::__1::__value_type<unsigned int, EshOpt::Value>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, EshOpt::Value> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, EshOpt::Value>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true> > { unsigned long long x0; } x2; } x0; } x0; } x3; struct EshColor { struct Data { int x0; union Value { struct RGB { unsigned char x0; unsigned char x1; unsigned char x2; } x0; unsigned short x1; unsigned short x2; struct AdjustedColor { unsigned char x0; unsigned char x1; unsigned char x2 : 4; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; } x3; } x1; } x0; } x4; } x2; struct EshSp { void /* function */ **x0; unsigned short x1; struct EshHeader { int x0; unsigned int x1; short x2; unsigned short x3; unsigned char x4; } x2; unsigned int x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; } x3; struct CsRect<int> { int x0[4]; } x4; } x2; struct EshTextBox { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x3; struct EshFill { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x4; struct EshStroke { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x5; struct EshShadow { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x6; struct EshExtrusion { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x7; struct EshCallout { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x8; void /* function */ **x9; struct EshShapeProperties { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; void /* function */ **x3; } x10; struct EshShapeLocks { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x11; struct EshShapeImageData { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x12; struct EshTextPath { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x13; struct EshPath { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x14; struct EshSkew { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x15; } *)a1;
+ (void)writeLimoFromGeometry:(id)a0 toPath:(struct EshPath { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } *)a1;
+ (void)writePathCommandsAndParamsFromGeometry:(id)a0 toPath:(struct EshPath { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } *)a1;
+ (void)writeFormulasFromGeometry:(id)a0 toPath:(struct EshPath { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } *)a1;
+ (void)writeTextBodyRectsFromGeometry:(id)a0 toPath:(struct EshPath { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } *)a1;
+ (void)readFromPathCommands:(const struct EshTablePropVal<EshPathCommand> { void /* function */ **x0; struct ChVector<EshPathCommand> { struct EshPathCommand *x0; struct EshPathCommand *x1; struct __compressed_pair<EshPathCommand *, ChAllocator<EshPathCommand> > { struct EshPathCommand *x0; } x2; } x1; } *)a0 pathParams:(const struct EshPathParamTable { void /* function */ **x0; struct ChVector<EshComputedValue> { struct EshComputedValue *x0; struct EshComputedValue *x1; struct __compressed_pair<EshComputedValue *, ChAllocator<EshComputedValue> > { struct EshComputedValue *x0; } x2; } x1; } *)a1 toGeometry:(id)a2;
+ (void)readFromLimo:(struct CsPoint<int> { int x0[2]; })a0 toGeometry:(id)a1;
+ (void)writeFromShape:(id)a0 toShape:(struct EshShape { void /* function */ **x0; unsigned short x1; struct EshContentData { struct EshOpt { void /* function */ **x0; unsigned short x1; struct EshHeader { int x0; unsigned int x1; short x2; unsigned short x3; unsigned char x4; } x2; struct ChMap<unsigned int, EshOpt::Value, CsLess<unsigned int> > { struct map<unsigned int, EshOpt::Value, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, EshOpt::Value> > > { struct __tree<std::__1::__value_type<unsigned int, EshOpt::Value>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, EshOpt::Value> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, EshOpt::Value>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true> > { unsigned long long x0; } x2; } x0; } x0; } x3; struct EshColor { struct Data { int x0; union Value { struct RGB { unsigned char x0; unsigned char x1; unsigned char x2; } x0; unsigned short x1; unsigned short x2; struct AdjustedColor { unsigned char x0; unsigned char x1; unsigned char x2 : 4; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; } x3; } x1; } x0; } x4; } x0; struct EshOpt { void /* function */ **x0; unsigned short x1; struct EshHeader { int x0; unsigned int x1; short x2; unsigned short x3; unsigned char x4; } x2; struct ChMap<unsigned int, EshOpt::Value, CsLess<unsigned int> > { struct map<unsigned int, EshOpt::Value, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, EshOpt::Value> > > { struct __tree<std::__1::__value_type<unsigned int, EshOpt::Value>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, EshOpt::Value> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, EshOpt::Value>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true> > { unsigned long long x0; } x2; } x0; } x0; } x3; struct EshColor { struct Data { int x0; union Value { struct RGB { unsigned char x0; unsigned char x1; unsigned char x2; } x0; unsigned short x1; unsigned short x2; struct AdjustedColor { unsigned char x0; unsigned char x1; unsigned char x2 : 4; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; } x3; } x1; } x0; } x4; } x1; struct EshOpt { void /* function */ **x0; unsigned short x1; struct EshHeader { int x0; unsigned int x1; short x2; unsigned short x3; unsigned char x4; } x2; struct ChMap<unsigned int, EshOpt::Value, CsLess<unsigned int> > { struct map<unsigned int, EshOpt::Value, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, EshOpt::Value> > > { struct __tree<std::__1::__value_type<unsigned int, EshOpt::Value>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, EshOpt::Value> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, EshOpt::Value>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true> > { unsigned long long x0; } x2; } x0; } x0; } x3; struct EshColor { struct Data { int x0; union Value { struct RGB { unsigned char x0; unsigned char x1; unsigned char x2; } x0; unsigned short x1; unsigned short x2; struct AdjustedColor { unsigned char x0; unsigned char x1; unsigned char x2 : 4; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; } x3; } x1; } x0; } x4; } x2; struct EshSp { void /* function */ **x0; unsigned short x1; struct EshHeader { int x0; unsigned int x1; short x2; unsigned short x3; unsigned char x4; } x2; unsigned int x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; } x3; struct CsRect<int> { int x0[4]; } x4; } x2; struct EshTextBox { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x3; struct EshFill { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x4; struct EshStroke { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x5; struct EshShadow { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x6; struct EshExtrusion { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x7; struct EshCallout { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x8; void /* function */ **x9; struct EshShapeProperties { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; void /* function */ **x3; } x10; struct EshShapeLocks { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x11; struct EshShapeImageData { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x12; struct EshTextPath { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x13; struct EshPath { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x14; struct EshSkew { void /* function */ **x0; unsigned short x1; struct EshContentData *x2; } x15; } *)a1;

@end
