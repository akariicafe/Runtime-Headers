@class NSString;

@interface EBReader : OCBReader {
    struct XlObjectFactory { void /* function */ **x0; struct XlEshObjectFactory *x1; } *mXlObjectFactory;
    const void *mBuffer;
}

@property (retain, nonatomic) NSString *temporaryDirectory;
@property (readonly, nonatomic) struct XlBinaryReader { void /* function */ **x0; void /* function */ **x1; void /* function */ **x2; struct SsrwOORootStorage *x3; struct SsrwOOStorage *x4; struct XlEshBinaryReader { void /* function */ **x0; struct SsrwOOStream *x1; struct EshParserVisitor *x2; struct EshObjectFactory *x3; unsigned int x4; unsigned int x5; struct ChStack<EshHeader> { struct EshHeader *x0; struct EshHeader *x1; unsigned int x2; unsigned int x3; unsigned int x4; } x6; unsigned int x7; struct EshHeader { int x0; unsigned int x1; short x2; unsigned short x3; unsigned char x4; } x8; BOOL x9; BOOL x10; unsigned int x11; struct XlReadStgStream *x12; } x5; struct XlStringExtractor *x6; struct XlSheetInfoTable *x7; int x8; int x9; int x10; int x11; int x12; int x13; int x14; int x15; int x16; int x17; int x18; int x19; int x20; int x21; int x22; int x23; int x24; int x25; int x26; int x27; int x28; int x29; int x30; int x31; int x32; int x33; int x34; int x35; int x36; int x37; BOOL x38; BOOL x39; BOOL x40; struct ChVector<int> { int *x0; int *x1; struct __compressed_pair<int *, ChAllocator<int> > { int *x0; } x2; } x41; struct ChVector<int> { int *x0; int *x1; struct __compressed_pair<int *, ChAllocator<int> > { int *x0; } x2; } x42; struct ChVector<int> { int *x0; int *x1; struct __compressed_pair<int *, ChAllocator<int> > { int *x0; } x2; } x43; struct XlIndex *x44; struct XlRow *x45; struct XlRecord *x46; int x47; int x48; short x49; int x50; int x51; struct ChVector<XlCell *> { struct XlCell **x0; struct XlCell **x1; struct __compressed_pair<XlCell **, ChAllocator<XlCell *> > { struct XlCell **x0; } x2; } x52; int x53; unsigned char x54; int x55; struct XlWorksheetProperties { void /* function */ **x0; unsigned short x1; int x2; unsigned short x3; BOOL x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; BOOL x16; BOOL x17; BOOL x18; BOOL x19; BOOL x20; BOOL x21; BOOL x22; BOOL x23; BOOL x24; short x25; struct ChVector<XlBrk *> { struct XlBrk **x0; struct XlBrk **x1; struct __compressed_pair<XlBrk **, ChAllocator<XlBrk *> > { struct XlBrk **x0; } x2; } x26; struct ChVector<XlBrk *> { struct XlBrk **x0; struct XlBrk **x1; struct __compressed_pair<XlBrk **, ChAllocator<XlBrk *> > { struct XlBrk **x0; } x2; } x27; struct OcText { void /* function */ **x0; int x1; unsigned int x2; unsigned int x3; unsigned int x4; char *x5; char *x6; BOOL x7; } x28; } x56; struct XlWorksheetProtection { void /* function */ **x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; BOOL x16; BOOL x17; BOOL x18; short x19; } x57; struct XlCalculationProperties { void /* function */ **x0; double x1; int x2; short x3; BOOL x4; int x5; BOOL x6; } x58; struct XlSortInfo { void /* function */ **x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; unsigned char x7; struct OcText { void /* function */ **x0; int x1; unsigned int x2; unsigned int x3; unsigned int x4; char *x5; char *x6; BOOL x7; } x8; struct OcText { void /* function */ **x0; int x1; unsigned int x2; unsigned int x3; unsigned int x4; char *x5; char *x6; BOOL x7; } x9; struct OcText { void /* function */ **x0; int x1; unsigned int x2; unsigned int x3; unsigned int x4; char *x5; char *x6; BOOL x7; } x10; } x59; struct XlDocumentInfo { void /* function */ **x0; unsigned short x1; unsigned short x2; int x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; } x60; struct XlDocumentProtection { void /* function */ **x0; BOOL x1; BOOL x2; BOOL x3; short x4; short x5; } x61; struct XlFileProtection { void /* function */ **x0; BOOL x1; BOOL x2; short x3; struct OcText { void /* function */ **x0; int x1; unsigned int x2; unsigned int x3; unsigned int x4; char *x5; char *x6; BOOL x7; } x4; struct OcText { void /* function */ **x0; int x1; unsigned int x2; unsigned int x3; unsigned int x4; char *x5; char *x6; BOOL x7; } x5; unsigned short x6; char *x7; unsigned int x8; char *x9; } x62; int x63; int x64; struct XlDocumentProperties { void /* function */ **x0; unsigned short x1; short x2; int x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; int x12; short x13; short *x14; struct OcText { void /* function */ **x0; int x1; unsigned int x2; unsigned int x3; unsigned int x4; char *x5; char *x6; BOOL x7; } x15; int x16; struct XlRef { unsigned short x0; unsigned short x1; short x2; short x3; BOOL x4; } x17; BOOL x18; char *x19; unsigned int x20; } x65; struct XlSubstreamProperties { void /* function */ **x0; struct XlSheetInfo { void /* function */ **x0; int x1; int x2; } x1; struct XlPageProperties { void /* function */ **x0; double x1; double x2; double x3; double x4; struct OcText *x5; struct OcText *x6; BOOL x7; BOOL x8; short x9; short x10; short x11; short x12; short x13; BOOL x14; int x15; BOOL x16; BOOL x17; BOOL x18; BOOL x19; BOOL x20; BOOL x21; short x22; short x23; short x24; double x25; double x26; short x27; } x2; struct XlCellTableInfo { void /* function */ **x0; int x1; int x2; unsigned short x3; unsigned short x4; } x3; int x4; int x5; } x66; struct XlRecord *x67; struct SsrwOOStream *x68; unsigned char x69; struct XlObjectFactory *x70; struct XlParserVisitor *x71; BOOL x72; void /* function */ **x73; struct EshObjectFactory *x74; } *xlReader;
@property (nonatomic) BOOL useStringOptimization;
@property (nonatomic) BOOL isFileStructuredStorage;

- (void).cxx_destruct;
- (id)read;
- (void)dealloc;
- (BOOL)start;
- (id)initWithCancelDelegate:(id)a0;
- (struct OCCBinaryStreamer { void /* function */ **x0; struct OCCCryptoKey *x1; char *x2; } *)allocBinaryStreamerWithCryptoKey:(struct OCCCryptoKey { } *)a0 baseOutputFilenameInUTF8:(const char *)a1;
- (struct OCCEncryptionInfoReader { void /* function */ **x0; } *)encryptionInfoReader;

@end
