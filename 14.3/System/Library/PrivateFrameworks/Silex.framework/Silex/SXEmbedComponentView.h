@class WKWebView, NSString, UIActivityIndicatorView, WKNavigation, WKWebsiteDataStore, NFMultiDelegate, SXRelatedWebViewCache, SWCrashRetryThrottler, NSMutableSet, UILabel, SXEmbedResource;
@protocol SXEmbedType, SXProxyAuthenticationHandler, SXSceneStateMonitor, SWReachabilityProvider, SXLayoutInvalidator, SXComponentActionHandler, SXEmbedDataProvider;

@interface SXEmbedComponentView : SXComponentView <WKNavigationDelegate, WKUIDelegate, WKScriptMessageHandler, UIGestureRecognizerDelegate, UIScrollViewDelegate, SXViewportChangeListener, _WKFullscreenDelegate>

@property (readonly, nonatomic) id<SWReachabilityProvider> reachabilityProvider;
@property (readonly, nonatomic) id<SXEmbedDataProvider> embedDataProvider;
@property (readonly, nonatomic) id<SXComponentActionHandler> actionHandler;
@property (readonly, nonatomic) id<SXLayoutInvalidator> layoutInvalidator;
@property (retain, nonatomic) id<SXEmbedType> embedConfiguration;
@property (retain, nonatomic) SXEmbedResource *embedResource;
@property (retain, nonatomic) WKWebView *webView;
@property (retain, nonatomic) SWCrashRetryThrottler *webCrashRetryThrottler;
@property (retain, nonatomic) WKWebView *webViewPresentingInFullscreen;
@property (retain, nonatomic) UILabel *errorLabel;
@property (retain, nonatomic) NSString *HTML;
@property (retain, nonatomic) NSString *userScript;
@property (retain, nonatomic) NSMutableSet *expectedMessages;
@property (nonatomic) BOOL failedLoading;
@property (retain, nonatomic) UIActivityIndicatorView *activityIndicator;
@property (nonatomic) struct CGSize { double width; double height; } currentlyLayoutingForSize;
@property (nonatomic) struct CGSize { double width; double height; } currentLayoutSize;
@property (nonatomic) struct CGSize { double width; double height; } currentViewportSize;
@property (retain, nonatomic) WKNavigation *initialNavigation;
@property (nonatomic) BOOL hasRegisteredScriptMessageHandlers;
@property (readonly, nonatomic) NFMultiDelegate *scriptMessageHandler;
@property (readonly, nonatomic) WKWebsiteDataStore *dataStore;
@property (readonly, nonatomic) SXRelatedWebViewCache *relatedWebViewCache;
@property (readonly, nonatomic) id<SXProxyAuthenticationHandler> proxyAuthenticationHandler;
@property (readonly, nonatomic) id<SXSceneStateMonitor> sceneStateMonitor;
@property (nonatomic) BOOL usingElementFullscreen;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)viewport:(id)a0 appearStateChangedFromState:(unsigned long long)a1;
- (void)webView:(id)a0 didFinishNavigation:(id)a1;
- (void)webView:(id)a0 didReceiveAuthenticationChallenge:(id)a1 completionHandler:(id /* block */)a2;
- (void).cxx_destruct;
- (void)_webViewDidEnterElementFullscreen:(id)a0;
- (void)dealloc;
- (void)_webViewDidExitElementFullscreen:(id)a0;
- (void)showActivityIndicator:(BOOL)a0;
- (void)_webViewWebProcessDidCrash:(id)a0;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (void)webView:(id)a0 didFailNavigation:(id)a1 withError:(id)a2;
- (id)webView:(id)a0 createWebViewWithConfiguration:(id)a1 forNavigationAction:(id)a2 windowFeatures:(id)a3;
- (void)_webViewDidEnterFullscreen:(id)a0;
- (void)_webViewDidExitFullscreen:(id)a0;
- (void)handleError:(id)a0;
- (double)initialScale;
- (void)userContentController:(id)a0 didReceiveScriptMessage:(id)a1;
- (void)webView:(id)a0 decidePolicyForNavigationAction:(id)a1 decisionHandler:(id /* block */)a2;
- (void)discardContents;
- (void)webView:(id)a0 didFailProvisionalNavigation:(id)a1 withError:(id)a2;
- (void)scrollViewWillBeginZooming:(id)a0 withView:(id)a1;
- (void)renderContents;
- (void)presentComponentWithChanges:(struct { BOOL x0; BOOL x1; BOOL x2; })a0;
- (void)loadComponent:(id)a0;
- (BOOL)allowHierarchyRemoval;
- (void)willPresentComponentWithChanges:(struct { BOOL x0; BOOL x1; BOOL x2; })a0;
- (id)initWithDOMObjectProvider:(id)a0 viewport:(id)a1 presentationDelegate:(id)a2 componentStyleRendererFactory:(id)a3 reachabilityProvider:(id)a4 embedDataProvider:(id)a5 actionHandler:(id)a6 layoutInvalidator:(id)a7 websiteDataStore:(id)a8 relatedWebViewCache:(id)a9 proxyAuthenticationHandler:(id)a10 sceneStateMonitor:(id)a11;
- (void)removeScriptMessageHandlers;
- (void)prewarmWebView;
- (void)loadEmbedIfNeeded;
- (BOOL)shouldLayoutWebView;
- (BOOL)hasLoadedEmbedData;
- (void)loadEmbedData;
- (void)displayEmbedIfNeeded;
- (void)loadWebViewIfNeeded;
- (void)layoutWebViewForSize:(struct CGSize { double x0; double x1; })a0;
- (void)reloadEmbed;
- (BOOL)shouldShowWebView;
- (void)loadWebView;
- (unsigned long long)userActionMediaTypes;
- (void)addScriptMessageHandlers;
- (id)enclosingHTML;
- (id)HTMLByEnclosingHTML:(id)a0 withHTML:(id)a1;
- (void)finalizeLayoutForSize:(struct CGSize { double x0; double x1; })a0;
- (id)unableToLoadMessage;
- (void)webViewEnteredFullscreen:(id)a0;
- (void)webViewExitedFullscreen:(id)a0;
- (BOOL)shouldAllowRequestToURL:(id)a0;

@end
