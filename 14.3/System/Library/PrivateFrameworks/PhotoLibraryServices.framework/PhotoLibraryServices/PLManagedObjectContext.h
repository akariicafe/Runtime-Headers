@class NSError, PLPhotoLibraryPathManager, NSMutableDictionary, PLMergePolicy, NSMutableSet, PLDelayedFiledSystemDeletions, PLChangeHandlingContainer, PLPhotoLibrary, PLDelayedSaveActions;
@protocol PLManagedObjectContextPTPNotificationDelegate;

@interface PLManagedObjectContext : NSManagedObjectContext {
    BOOL _isConnectedToChangeHandling;
    BOOL _isObservingChangesForPTPNotificationDelegate;
    BOOL _needsBackgroundJobProcessing;
    PLMergePolicy *_mergePolicy;
    NSMutableSet *_avalancheUUIDsForUpdate;
    NSMutableDictionary *_uuidsForCloudDeletion;
    BOOL _syncChangeMarker;
    NSMutableDictionary *_updatedObjectsAttributes;
    NSMutableDictionary *_updatedObjectsRelationships;
    PLPhotoLibrary *_photoLibrary;
    PLPhotoLibraryPathManager *_pathManager;
    PLDelayedSaveActions *_delayedSaveActions;
    PLChangeHandlingContainer *_changeHandlingContainer;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _invalidationStateLock;
    NSError *_invalidationReason;
}

@property (readonly, nonatomic) BOOL mergingChanges;
@property (readonly, nonatomic) BOOL savingDuringMerge;
@property (nonatomic) BOOL isInitializingSingletons;
@property (retain, nonatomic) PLDelayedFiledSystemDeletions *delayedDeletions;
@property (weak, nonatomic) id<PLManagedObjectContextPTPNotificationDelegate> ptpNotificationDelegate;
@property (nonatomic) BOOL isBackingALAssetsLibrary;
@property (readonly, nonatomic) PLDelayedSaveActions *delayedSaveActions;
@property (weak, nonatomic) PLPhotoLibrary *photoLibrary;
@property (readonly, nonatomic) BOOL isUserInterfaceContext;
@property (nonatomic) BOOL regenerateVideoThumbnails;
@property (nonatomic) BOOL hasMetadataChanges;
@property (nonatomic) int changeSource;

+ (id)managedObjectModel;
+ (id)_indexesByAttributeNamesByEntityNames;
+ (id)_propertyNamesForIndexValues:(unsigned long long)a0 entity:(id)a1 propertyNamesByIndexByEntityNames:(id)a2;
+ (BOOL)assetsLibraryLoggingEnabled;
+ (id)_attributeNamesByIndexByEntityNames;
+ (unsigned long long)_indexValueForPropertyNames:(id)a0 entityName:(id)a1 indexesByPropertyNamesByEntityNames:(id)a2;
+ (id)_indexesByRelationshipNamesByEntityNames;
+ (id)contextForPhotoLibrary:(id)a0 automaticallyMerges:(BOOL)a1 name:(const char *)a2;
+ (id)__processEntityByName:(id)a0 obj:(id)a1;
+ (void)recordChangedKeys:(id)a0 forObjectID:(id)a1 inAttributesByOID:(id)a2 relationshipsByOID:(id)a3;
+ (id)__processSubEntityByName:(id)a0 entity:(id)a1 withEntityData:(id)a2;
+ (void)__prepareEntityPropertyLookups;
+ (BOOL)_isAssetLibraryFetchingAlbum:(id)a0;
+ (id)relationshipNamesForIndexValues:(unsigned long long)a0 entity:(id)a1;
+ (BOOL)hasConfiguredPhotoLibrary;
+ (unsigned long long)indexValueForAttributeNames:(id)a0 entity:(id)a1;
+ (id)changeNotificationObjectIDMutationKeys;
+ (id)_relationshipNamesByIndexByEntityNames;
+ (void)removePhotosDatabaseWithPathManager:(id)a0;
+ (id)managedObjectModelURL;
+ (BOOL)shouldHavePhotoLibrary;
+ (BOOL)canMergeRemoteChanges;
+ (void)getPersistentStoreURL:(id *)a0 options:(id *)a1 forDatabasePath:(id)a2;
+ (id)changeNotificationObjectIDKeys;
+ (void)recordChangedProperties:(id)a0 forObjectID:(id)a1 inAttributesByOID:(id)a2 relationshipsByOID:(id)a3;
+ (unsigned long long)indexValueForRelationshipNames:(id)a0 entity:(id)a1;
+ (id)contextForRepairingSingletonObjects:(const char *)a0 libraryURL:(id)a1 error:(id *)a2;
+ (id)contextForManagedObjectLookupItemCache:(id)a0 coordinator:(id)a1;
+ (id)changeNotificationObjectMutationKeys;
+ (id)changeNotificationObjectKeys;
+ (id)attributeNamesForIndexValues:(unsigned long long)a0 entity:(id)a1;
+ (id)sanitizedErrorFromError:(id)a0;

- (BOOL)save:(id *)a0;
- (BOOL)obtainPermanentIDsForObjects:(id)a0 error:(id *)a1;
- (id)pl_fetchObjectsWithIDs:(id)a0 rootEntity:(id)a1;
- (BOOL)_tooManyAssetChangesToHandle:(unsigned long long)a0;
- (void)withDispatchGroup:(id)a0 performBlock:(id /* block */)a1;
- (void)tearDownLocalChangeNotifications;
- (void)recordSyncChangeMarker;
- (id)initWithConcurrencyType:(unsigned long long)a0 pathManager:(id)a1 changeHandlingContainer:(id)a2 coordinator:(id)a3;
- (BOOL)isReadOnly;
- (void)_notifyALAssetsLibraryWithChanges:(id)a0 usingObjectIDs:(BOOL)a1;
- (void)setName:(id)a0;
- (BOOL)shouldMergeFromRemoteContextWithChanges:(id)a0;
- (id)libraryBundle;
- (void)disconnectFromChangeHandling;
- (void)registerFilesystemDeletionInfo:(id)a0;
- (id)executeFetchRequest:(id)a0 error:(id *)a1;
- (void).cxx_destruct;
- (id)storeUUID;
- (void)breakRetainCycles;
- (BOOL)getAndClearSyncChangeMarker;
- (void)recordNeedsBackgroundJobProcessing;
- (void)invalidateWithReason:(id)a0;
- (void)dealloc;
- (void)_recordChangedKeys:(id)a0 forObjectID:(id)a1;
- (void)_informPTPDelegateAboutChangesFromRemoteContextSaveNotification:(id)a0;
- (void)_simulateCrashIfNotAssetsd;
- (unsigned long long)countForFetchRequest:(id)a0 error:(id *)a1;
- (void)_mergeChangesFromDidSaveDictionary:(id)a0 usingObjectIDs:(BOOL)a1;
- (void)_createDelayedSaveActionsWithTransaction:(id)a0;
- (id)getAndClearRecordedObjectsForCloudDeletion;
- (id)getAndClearRecordedAvalancheUUIDsForUpdate;
- (BOOL)hasPreviouslyMergedDeleteForObject:(id)a0;
- (void)recordCloudDeletionForObject:(id)a0;
- (id)pathManager;
- (void)resetAllFetchingAlbums;
- (id)executeRequest:(id)a0 error:(id *)a1;
- (BOOL)pl_performWithOptions:(unsigned long long)a0 andBlock:(id /* block */)a1;
- (BOOL)_adjustmentTimestampChangedChangedAttribute:(id)a0 from:(id)a1;
- (void)updateTransactionAuthor;
- (BOOL)isDatabaseCreationContext;
- (void)setupLocalChangeNotifications;
- (void)_getInsertedIDs:(id)a0 deletedIDs:(id)a1 changedIDs:(id)a2 adjustedIDs:(id)a3 ofEntityKind:(id)a4 fromRemoteContextDidSaveObjectIDsNotification:(id)a5;
- (void)connectToChangeHandling;
- (void)recordAvalancheUUIDForUpdate:(id)a0;
- (id)existingObjectWithID:(id)a0 error:(id *)a1;
- (void)recordChangesFromTriggerModifiedObjectIDs:(id)a0;
- (void)_destroyDelayedSaveActions;
- (void)getAndClearUpdatedObjectsAttributes:(id *)a0 relationships:(id *)a1;
- (id)pl_fetchObjectsWithIDs:(id)a0;
- (void)recordManagedObjectWillSave:(id)a0;
- (BOOL)isValidForSelector:(SEL)a0 error:(id *)a1;
- (void)_addCloudUUID:(id)a0 forDeletionType:(long long)a1;
- (id)pl_executeFetchRequest:(id)a0 error:(id *)a1;
- (id)initWithConcurrencyType:(unsigned long long)a0 libraryBundle:(id)a1;
- (void)appendDelayedDeletionsToXPCMessage:(id)a0;

@end
