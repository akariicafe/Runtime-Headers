@class NSString, HMFTimer, HAPCharacteristic, NSOperationQueue, NSMutableArray, HAPService, HAPSecuritySession, NSNumber, HMFExponentialBackoffTimer;
@protocol HAPKeyStore, HMFLocking;

@interface HAPTunneledAccessoryBTLE : HAPAccessory <HAPBTLEControlOutputStreamDelegate, HAPSecuritySessionDelegate, HMFTimerDelegate, HAPAccessoryServerInternalDelegate> {
    id<HMFLocking> _lock;
}

@property (copy, nonatomic) NSNumber *stateNumber;
@property (weak, nonatomic) id<HAPKeyStore> keyStore;
@property (weak, nonatomic) HAPService *tunneledBTLEAccessoryService;
@property (weak, nonatomic) HAPService *pairingService;
@property (weak, nonatomic) HAPCharacteristic *pairVerifyCharacteristic;
@property (weak, nonatomic) HAPCharacteristic *pairingsCharacteristic;
@property (weak, nonatomic) HAPCharacteristic *advertisingCharacteristic;
@property (retain, nonatomic) HAPSecuritySession *securitySession;
@property (nonatomic, getter=isSecuritySessionOpen) BOOL securitySessionOpen;
@property (nonatomic, getter=isSecuritySessionOpening) BOOL securitySessionOpening;
@property (readonly, nonatomic) NSOperationQueue *pairVerifyOperationQueue;
@property (retain, nonatomic) NSNumber *sessionLifetimeTimeout;
@property (retain, nonatomic) HMFTimer *connectionIdleTimer;
@property (readonly, nonatomic) NSOperationQueue *clientOperationQueue;
@property (readonly, nonatomic) NSMutableArray *pendingRequests;
@property (readonly, nonatomic) NSOperationQueue *requestOperationQueue;
@property (readonly, nonatomic) NSMutableArray *pendingResponses;
@property (nonatomic, getter=isVerifying) BOOL verifying;
@property (retain, nonatomic) HMFExponentialBackoffTimer *verificationBackoffTimer;
@property (nonatomic, getter=isVerified) BOOL verified;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)shouldVerifyCharacteristic:(id)a0;

- (BOOL)isPaired;
- (void)setReachable:(BOOL)a0;
- (void).cxx_destruct;
- (id)shortDescription;
- (void)verify;
- (void)timerDidFire:(id)a0;
- (void)_enqueueRequest:(id)a0;
- (id)uniqueIdentifier;
- (BOOL)mergeObject:(id)a0;
- (unsigned long long)_outstandingRequests;
- (void)invalidate;
- (void)readValueForCharacteristic:(id)a0 timeout:(double)a1 completionQueue:(id)a2 completionHandler:(id /* block */)a3;
- (void)listPairingsWithCompletionQueue:(id)a0 completionHandler:(id /* block */)a1;
- (void)writeCharacteristicValues:(id)a0 timeout:(double)a1 completionQueue:(id)a2 completionHandler:(id /* block */)a3;
- (void)readCharacteristicValues:(id)a0 timeout:(double)a1 completionQueue:(id)a2 completionHandler:(id /* block */)a3;
- (void)writeCharacteristicValue:(id)a0 timeout:(double)a1 completionQueue:(id)a2 completionHandler:(id /* block */)a3;
- (void)addPairing:(id)a0 completionQueue:(id)a1 completionHandler:(id /* block */)a2;
- (void)removePairing:(id)a0 completionQueue:(id)a1 completionHandler:(id /* block */)a2;
- (void)removePairingForCurrentControllerWithCompletionQueue:(id)a0 completionHandler:(id /* block */)a1;
- (void)accessoryServer:(id)a0 didUpdateValueForCharacteristic:(id)a1;
- (id)initWithServer:(id)a0 instanceID:(id)a1 parsedServices:(id)a2;
- (id)initWithServer:(id)a0 instanceID:(id)a1 parsedServices:(id)a2 keyStore:(id)a3;
- (BOOL)_parseServices;
- (void)_sanitizeAllTunneledCharacteristics;
- (void)_registerForTunnelCharacteristicNotifications;
- (BOOL)__isAdvertising;
- (void)_tearDownSessionWithError:(id)a0;
- (void)_suspendConnectionIdleTimer;
- (void)_verifyServiceSignature:(id)a0 completionHandler:(id /* block */)a1;
- (void)_verifyCharacteristicSignature:(id)a0 completionHandler:(id /* block */)a1;
- (void)_sendRequest:(id)a0 completionHandler:(id /* block */)a1;
- (void)_readValueForCharacteristic:(id)a0 options:(long long)a1 completionHandler:(id /* block */)a2;
- (void)_writeValue:(id)a0 toCharacteristic:(id)a1 authorizationData:(id)a2 options:(long long)a3 completionHandler:(id /* block */)a4;
- (void)_performTimedWriteValue:(id)a0 toCharacteristic:(id)a1 authorizationData:(id)a2 options:(long long)a3 completionHandler:(id /* block */)a4;
- (void)_performWriteValue:(id)a0 toCharacteristic:(id)a1 authorizationData:(id)a2 options:(long long)a3 completionHandler:(id /* block */)a4;
- (void)_markNotifyingCharacteristicUpdatedForCharacteristic:(id)a0;
- (void)_performTimedWriteExecuteForCharacteristic:(id)a0 value:(id)a1 options:(long long)a2 completionHandler:(id /* block */)a3;
- (void)_performTimedWritePrepareWithValue:(id)a0 toCharacteristic:(id)a1 authorizationData:(id)a2 options:(long long)a3 completionHandler:(id /* block */)a4;
- (void)_sendPairingRequestData:(id)a0 completionHandler:(id /* block */)a1;
- (void)_cancelAllQueuedOperationsWithError:(id)a0;
- (void)_resumeAllOperations;
- (void)_requestResponseForRequest:(id)a0;
- (void)_reallySendRequest:(id)a0 completionHandler:(id /* block */)a1;
- (id)_pendingResponseForRequest:(id)a0;
- (void)_resumeConnectionIdleTimer;
- (id)_encryptDataAndGenerateAuthTag:(id)a0 error:(id *)a1;
- (void)_kickConnectionIdleTimer;
- (id)_decryptData:(id)a0 error:(id *)a1;
- (void)_suspendAllOperations;
- (BOOL)_establishSecureSessionWithError:(id *)a0;
- (BOOL)_parseTunneledBTLEAccessoryService:(id)a0;
- (BOOL)_parsePairingService:(id)a0;
- (void)_updateOnStateNumberChange;
- (void)_readUpdatedCharacteristics:(id)a0 queue:(id)a1;
- (void)_sendControlPacket:(id)a0 forRequest:(id)a1 completionHandler:(id /* block */)a2;
- (id)getLocalPairingIdentityAndAllowCreation:(BOOL)a0 error:(id *)a1;
- (void)_handleSecuritySession:(id)a0 setupExchangeData:(id)a1;
- (void)_handleConnectionIdleTimeout;
- (void)controlOutputStream:(id)a0 didReceiveRequestToSendControlPacket:(id)a1 completionHandler:(id /* block */)a2;
- (void)controlOutputStreamDidOpen:(id)a0;
- (void)controlOutputStream:(id)a0 didCloseWithError:(id)a1;
- (void)controlOutputStreamDidComplete:(id)a0;
- (id)securitySession:(id)a0 didReceiveLocalPairingIdentityRequestWithError:(id *)a1;
- (id)securitySession:(id)a0 didReceiveRequestForPeerPairingIdentityWithIdentifier:(id)a1 error:(id *)a2;
- (void)securitySession:(id)a0 didReceiveSetupExchangeData:(id)a1;
- (void)securitySessionIsOpening:(id)a0;
- (void)securitySessionDidOpen:(id)a0;
- (void)securitySession:(id)a0 didCloseWithError:(id)a1;
- (id)_pendingRequestForCharacteristic:(id)a0;

@end
