@class NSMutableArray;

@interface ETModelDef : NSObject {
    struct map<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *__begin_node_; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long long __value_; } __pair3_; } __tree_; } layer_variable_names;
}

@property struct shared_ptr<Espresso::net> { struct net *__ptr_; struct __shared_weak_count *__cntrl_; } network;
@property (retain) NSMutableArray *all_variables;
@property struct shared_ptr<Espresso::gradient_builder> { struct gradient_builder *__ptr_; struct __shared_weak_count *__cntrl_; } gb;

- (id)variables;
- (void)setupVariablesDef;
- (void)transformForTraining:(struct shared_ptr<Espresso::net> { struct net *x0; struct __shared_weak_count *x1; })a0;
- (struct layer { void /* function */ **x0; int x1; int x2; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x3; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x4; struct shared_ptr<Espresso::base_kernel> { struct base_kernel *x0; struct __shared_weak_count *x1; } x5; struct layer_data { struct vector<std::__1::shared_ptr<Espresso::abstract_blob_container>, std::__1::allocator<std::__1::shared_ptr<Espresso::abstract_blob_container> > > { struct shared_ptr<Espresso::abstract_blob_container> *x0; struct shared_ptr<Espresso::abstract_blob_container> *x1; struct __compressed_pair<std::__1::shared_ptr<Espresso::abstract_blob_container> *, std::__1::allocator<std::__1::shared_ptr<Espresso::abstract_blob_container> > > { struct shared_ptr<Espresso::abstract_blob_container> *x0; } x2; } x0; } x6; struct layer_data { struct vector<std::__1::shared_ptr<Espresso::abstract_blob_container>, std::__1::allocator<std::__1::shared_ptr<Espresso::abstract_blob_container> > > { struct shared_ptr<Espresso::abstract_blob_container> *x0; struct shared_ptr<Espresso::abstract_blob_container> *x1; struct __compressed_pair<std::__1::shared_ptr<Espresso::abstract_blob_container> *, std::__1::allocator<std::__1::shared_ptr<Espresso::abstract_blob_container> > > { struct shared_ptr<Espresso::abstract_blob_container> *x0; } x2; } x0; } x7; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x8; BOOL x9; struct function<void (const std::__1::shared_ptr<Espresso::abstract_batch> &, const Espresso::layer &)> { struct __value_func<void (const std::__1::shared_ptr<Espresso::abstract_batch> &, const Espresso::layer &)> { struct type { unsigned char x0[24]; } x0; struct __base<void (const std::__1::shared_ptr<Espresso::abstract_batch> &, const Espresso::layer &)> *x1; } x0; } x10; unsigned long long x11; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x12; } *)layerForName:(id)a0;
- (id)variableForLayer:(id)a0 kind:(unsigned long long)a1;
- (struct shared_ptr<std::__1::basic_string<char> > { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; struct __shared_weak_count *x1; })topNamesForLayerIndex:(int)a0;
- (struct shared_ptr<Espresso::blob<float, 2> > { struct blob<float, 2> *x0; struct __shared_weak_count *x1; })weightsForLayer:(id)a0;
- (struct shared_ptr<Espresso::blob<float, 1> > { struct blob<float, 1> *x0; struct __shared_weak_count *x1; })biasesForLayer:(id)a0;
- (void)updateLayer:(id)a0 withWeights:(struct shared_ptr<float> { float *x0; struct __shared_weak_count *x1; })a1 length:(unsigned long long)a2;
- (void)updateLayer:(id)a0 withBiases:(struct shared_ptr<float> { float *x0; struct __shared_weak_count *x1; })a1 length:(unsigned long long)a2;
- (void)randomizeWeightsForLayer:(id)a0 withSeed:(float)a1;
- (id)variableNameForLayer:(id)a0 kind:(unsigned long long)a1;
- (int)configureLayersToTrain:(id)a0 reinitializeVariables:(BOOL)a1;
- (void).cxx_destruct;
- (id).cxx_construct;
- (id)layerNames;
- (id)initWithNetwork:(id)a0;

@end
