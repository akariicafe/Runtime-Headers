@interface ADEspressoRunner : NSObject {
    void *_ctx;
    void *_plan;
    struct { void *plan; int network_index; } _net;
    int _engineType;
    struct unordered_map<std::__1::basic_string<char>, PixelBufferSharedPtr, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, PixelBufferSharedPtr> > > { struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr> > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> **__value_; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> *> > { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, std::__1::hash<std::__1::basic_string<char> >, true> > { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, std::__1::equal_to<std::__1::basic_string<char> >, true> > { float __value_; } __p3_; } __table_; } _pixelBuffersToBindAsVImage;
    struct unordered_map<std::__1::basic_string<char>, PixelBufferSharedPtr, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, PixelBufferSharedPtr> > > { struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr> > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> **__value_; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> *> > { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, std::__1::hash<std::__1::basic_string<char> >, true> > { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, std::__1::equal_to<std::__1::basic_string<char> >, true> > { float __value_; } __p3_; } __table_; } _pixelBuffersToBindDirect;
    struct unordered_map<std::__1::basic_string<char>, PixelBufferSharedPtr, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, PixelBufferSharedPtr> > > { struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr> > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> **__value_; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> *> > { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, void *> *> *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, std::__1::hash<std::__1::basic_string<char> >, true> > { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, PixelBufferSharedPtr>, std::__1::equal_to<std::__1::basic_string<char> >, true> > { float __value_; } __p3_; } __table_; } _pixelBuffersToBindIndirect;
    BOOL _CPUBindWA;
}

- (void).cxx_destruct;
- (void)dealloc;
- (long long)execute;
- (id).cxx_construct;
- (id)networkVersionString;
- (struct __CVBuffer { } *)registerNewPixelBufferForDescriptor:(id)a0;
- (BOOL)is32XYZAFormat:(unsigned int)a0;
- (BOOL)isCVPixelBufferBindingSupportedForFormat:(unsigned int)a0;
- (struct __CVBuffer { } *)registerPixelBufferForDescriptor:(id)a0 withPixelBuffer:(struct __CVBuffer { } *)a1;
- (BOOL)isDirectBindingSupportedForFormat:(unsigned int)a0;
- (int)bindPixelBufferAsVImage:(struct __CVBuffer { } *)a0 toBlob:(const char *)a1;
- (void)unlockAllVImageBindBuffers;
- (id)initWithUrl:(id)a0 forEngine:(unsigned long long)a1 configurationName:(id)a2;
- (id)registerEspressoBufferForDescriptor:(id)a0;
- (long long)registerPixelBuffer:(struct __CVBuffer { } *)a0 forDescriptor:(id)a1;

@end
