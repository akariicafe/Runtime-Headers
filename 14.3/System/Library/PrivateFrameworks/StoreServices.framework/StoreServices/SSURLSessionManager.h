@class NSString, NSMutableDictionary, NSMapTable, NSArray, SSCircularBuffer, SSMetricsController, NSObject;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface SSURLSessionManager : NSObject <NSCacheDelegate, NSURLSessionDataDelegate> {
    NSObject<OS_dispatch_source> *_memoryPressureSource;
    unsigned int _memoryPressureStatus;
    unsigned long long _memoryPressureCachedMaxSize;
}

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *eventQueue;
@property (retain, nonatomic) SSCircularBuffer *httpArchiveBuffer;
@property (retain, nonatomic) SSMetricsController *metricsController;
@property (retain, nonatomic) NSMutableDictionary *requestData;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *requestDataQueue;
@property (retain, nonatomic) NSMutableDictionary *taskMetrics;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *taskMetricsQueue;
@property (retain, nonatomic) NSMutableDictionary *responseData;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *responseDataQueue;
@property (retain, nonatomic) NSMutableDictionary *recordResponseMap;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *recordResponseQueue;
@property (retain, nonatomic) NSMutableDictionary *sendTimingDataMap;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *sendTimingDataQueue;
@property (retain, nonatomic) NSMutableDictionary *sessions;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *sessionsQueue;
@property (retain, nonatomic) NSMapTable *taskDelegates;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *taskDelegatesQueue;
@property (nonatomic) unsigned long long httpArchiveBufferSize;
@property (copy, nonatomic) NSArray *customURLProtocols;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (double)_timingDataMetricToServerTimeInterval:(id)a0;
+ (unsigned long long)_messageSizeFromTask:(id)a0 isRequest:(BOOL)a1 delegate:(id)a2;
+ (double)_randomDouble;
+ (id)eventFromTimingData:(id)a0 task:(id)a1;
+ (BOOL)_shouldCollectNetworkLogs;
+ (id)eventFromTimingData:(id)a0 delegate:(id)a1 task:(id)a2 error:(id)a3;
+ (id)_resolvedIPAddressFromTask:(id)a0;
+ (id)_fetchNetworkQualityReports;
+ (id)bagValueForKey:(id)a0 delegate:(id)a1 type:(unsigned long long)a2;
+ (id)sharedManager;
+ (id)eventFromTimingData:(id)a0 delegate:(id)a1 session:(id)a2 task:(id)a3 error:(id)a4;
+ (id)_legacyBagValueForKey:(id)a0;
+ (BOOL)_fetchedFromCache:(id)a0;
+ (id)_tidStateForTask:(id)a0 delegate:(id)a1;
+ (double)_localTimeIntervalToServerTimeInterval:(double)a0;
+ (BOOL)_shouldCreateLocalCache;
+ (id)eventFromTimingData:(id)a0 task:(id)a1 error:(id)a2;
+ (id)_responseDateFromTask:(id)a0 delegate:(id)a1;
+ (id)_DNSServerIPAddresses;
+ (id)eventFromTimingData:(id)a0 requestProperties:(id)a1 task:(id)a2 error:(id)a3;
+ (id)_metricsDictionaryWithDelegate:(id)a0;
+ (id)_bagPerformanceValuesWithDelegate:(id)a0;

- (void)URLSession:(id)a0 task:(id)a1 didSendBodyData:(long long)a2 totalBytesSent:(long long)a3 totalBytesExpectedToSend:(long long)a4;
- (void)URLSession:(id)a0 task:(id)a1 needNewBodyStream:(id /* block */)a2;
- (void)URLSession:(id)a0 task:(id)a1 didReceiveChallenge:(id)a2 completionHandler:(id /* block */)a3;
- (void)URLSession:(id)a0 dataTask:(id)a1 didReceiveResponse:(id)a2 completionHandler:(id /* block */)a3;
- (void)URLSession:(id)a0 task:(id)a1 didFinishCollectingMetrics:(id)a2;
- (id)_saveHTTPArchiveBufferToDiskDecompressed:(BOOL)a0;
- (id)init;
- (void)_setSendTimingData:(id)a0 forSessionTask:(id)a1;
- (void).cxx_destruct;
- (void)URLSession:(id)a0 task:(id)a1 willPerformHTTPRedirection:(id)a2 newRequest:(id)a3 completionHandler:(id /* block */)a4;
- (BOOL)_shouldEnableAPSRWithTask:(id)a0;
- (void)_insertEventIntoDatabase:(id)a0 delegate:(id)a1;
- (void)dealloc;
- (void)_listenForLowMemoryWarning;
- (void)_logAPSResultsWithTask:(id)a0;
- (void)_removeDelegateForTask:(id)a0;
- (id)_taskMetricsForSessionTask:(id)a0;
- (id)_sessionIDWithDelegate:(id)a0 collectTimingData:(BOOL)a1 allowsTLSSessionTickets:(BOOL)a2;
- (BOOL)_shouldDisableCellularForDelegate:(id)a0;
- (void)_setAPSTopicWithTask:(id)a0;
- (id)_URLCacheIDForDelegate:(id)a0;
- (id)dataTaskWithRequest:(id)a0 delegate:(id)a1;
- (void)URLSession:(id)a0 dataTask:(id)a1 didReceiveData:(id)a2;
- (void)_removeResponseDataForSessionTask:(id)a0;
- (BOOL)_shouldEnableTLSSessionForDelegate:(id)a0;
- (void)flushHTTPArchiveBuffer;
- (id)_responseDataForSessionTask:(id)a0;
- (void)_removeRecordResponseDataForSessionTask:(id)a0;
- (void)URLSession:(id)a0 task:(id)a1 didCompleteWithError:(id)a2;
- (BOOL)_shouldRecordResponseBodyForDataTask:(id)a0;
- (void)_setDelegate:(id)a0 forTask:(id)a1;
- (id)_sessionConfigurationWithDelegate:(id)a0 collectTimingData:(BOOL)a1 allowsTLSSessionTickets:(BOOL)a2;
- (id)_delegateForTask:(id)a0;
- (void)_logCacheHitForTask:(id)a0 metrics:(id)a1;
- (id)_sessionWithDelegate:(id)a0 collectTimingData:(BOOL *)a1;
- (BOOL)_shouldRequireCelluarForDelegate:(id)a0;
- (void)_appendResponseData:(id)a0 forSessionTask:(id)a1;
- (BOOL)_shouldSetCookiesForDelegate:(id)a0;
- (void)_setRequestData:(id)a0 forSessionTask:(id)a1;
- (BOOL)_sendTimingDataForSessionTask:(id)a0;
- (id)_requestDataForSessionTask:(id)a0;
- (int)_PIDFromAuditTokenData:(id)a0;
- (id)_URLCacheForDelegate:(id)a0;
- (void)_setTaskMetrics:(id)a0 forSessionTask:(id)a1;

@end
