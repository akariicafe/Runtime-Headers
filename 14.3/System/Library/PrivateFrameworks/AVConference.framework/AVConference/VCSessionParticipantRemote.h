@class NSString, NSArray, VCVideoQualityInfo, VCSessionBandwidthAllocationTable, VCAudioPowerSpectrumSource, TimingCollection, VCSessionParticipantMediaStreamInfo, NSNumber;

@interface VCSessionParticipantRemote : VCSessionParticipant <VCSessionDownlinkBandwidthAllocatorClient> {
    NSNumber *_previousOptedInVideoStreamID;
    BOOL _receivedFirstFrame;
    VCSessionBandwidthAllocationTable *_mediaTable;
    VCSessionBandwidthAllocationTable *_repairMediaTable;
    VCVideoQualityInfo *_videoQualityInfo;
    double _lastVideoQualityNotificationUpdate;
    unsigned char _lastVideoPriority;
    BOOL _isProcessingVideoOptIn;
    BOOL _isVideoDegraded;
    BOOL _videoSuspended;
    BOOL _isRedundancyRequested;
    BOOL _isRemoteMediaStalled;
    struct _VCSessionParticipantMediaPriorityInfo { BOOL isAudioActive; unsigned int audioActiveProbabilityThreshold; unsigned int audioInactiveProbabilityThreshold; unsigned int audioActiveAccumulationThreshold; unsigned int audioInactiveAccumulationThreshold; unsigned int audioActiveCount; unsigned int lastAudioPriority; unsigned int refreshCounter; } _mediaPriorityInfo;
    TimingCollection *_perfTimers;
    BOOL _haveReportedPerfTimers;
    struct _VCSessionParticipantSourceIO { struct opaqueVCAudioBufferList *sourceBuffer; struct _VCSessionParticipantMediaPriorityInfo { BOOL isAudioActive; unsigned int audioActiveProbabilityThreshold; unsigned int audioInactiveProbabilityThreshold; unsigned int audioActiveAccumulationThreshold; unsigned int audioInactiveAccumulationThreshold; unsigned int audioActiveCount; unsigned int lastAudioPriority; unsigned int refreshCounter; } mediaPriorityInfo; unsigned int processedAudioFramesCount; BOOL sharedIsAudioSpectrumActive; VCAudioPowerSpectrumSource *audioPowerSpectrumSource; VCSessionParticipantRemote *self; unsigned long long idsParticipantId; BOOL audioStreamsPaused; struct _VCSessionParticipantSourceIOStream *audioStreams; } _sourceIO;
}

@property (readonly, nonatomic) VCSessionParticipantMediaStreamInfo *audioStreamInfo;
@property (readonly, nonatomic) VCSessionParticipantMediaStreamInfo *videoStreamInfo;
@property (retain, nonatomic) NSNumber *optedInAudioStreamID;
@property (retain, nonatomic) NSNumber *optedInVideoStreamID;
@property (nonatomic, getter=isRemoteVideoEnabled) BOOL remoteVideoEnabled;
@property (nonatomic, getter=isRemoteVideoPaused) BOOL remoteVideoPaused;
@property (readonly, nonatomic) BOOL isVideoExpected;
@property (nonatomic) unsigned char videoQuality;
@property (nonatomic) unsigned int visibilityIndex;
@property (nonatomic) unsigned int prominenceIndex;
@property (readonly, nonatomic) unsigned int lastDisplayedFrameRTPTimestamp;
@property (readonly, nonatomic) BOOL isParticipantVersionPeace;
@property (readonly) NSString *uuid;
@property (readonly) NSArray *mediaEntries;
@property (readonly) unsigned int actualNetworkBitrateVideo;
@property (readonly) unsigned int actualNetworkBitrateAudio;
@property (readonly) unsigned int optedInNetworkBitrateVideo;
@property (readonly) unsigned int optedInNetworkBitrateAudio;
@property (readonly) unsigned short activeDownlinkVideoStreamID;
@property (readonly) unsigned short activeDownlinkAudioStreamID;
@property (readonly) BOOL isVisible;
@property (nonatomic, getter=isVideoSuspended) BOOL videoSuspended;

+ (BOOL)isDeviceLargeScreen;
+ (unsigned int)maxAudioNetworkBitrateForLocalInterfaceOnWiFi:(BOOL)a0;
+ (unsigned int)maxVideoNetworkBitrateForVideoQuality:(unsigned char)a0 isLocalOnWiFi:(BOOL)a1 isRedundancyRequested:(BOOL)a2;

- (void)setMuted:(BOOL)a0;
- (void)vcMediaStreamDidRTPTimeOut:(id)a0;
- (void)dealloc;
- (void)vcMediaStreamDidRTCPTimeOut:(id)a0;
- (void)setVideoDegraded:(BOOL)a0;
- (void)setVideoPaused:(BOOL)a0;
- (void)redundancyController:(id)a0 redundancyPercentageDidChange:(unsigned int)a1;
- (void)vcMediaStream:(id)a0 remoteMediaStalled:(BOOL)a1;
- (void)vcMediaStream:(id)a0 didSwitchToAudioStreamWithID:(unsigned short)a1;
- (void)vcMediaStreamDidDecryptionTimeOut:(id)a0;
- (void)vcMediaStreamDidDecryptionTimeOutForMKMRecovery:(id)a0;
- (void)vcMediaStream:(id)a0 priorityDidChange:(unsigned char)a1;
- (void)vcMediaStream:(id)a0 didReceiveFirstVideoFrameWithTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
- (void)vcMediaStream:(id)a0 didSwitchFromStreamID:(unsigned short)a1 toStreamID:(unsigned short)a2;
- (void)setAudioPaused:(BOOL)a0;
- (id)entryForStreamID:(id)a0;
- (BOOL)processParticipantInfo;
- (BOOL)setupAudioStreamFromMediaBlobWithIDSDestination:(id)a0;
- (BOOL)setupVideoStreamFromMediaBlobWithIDSDestination:(id)a0;
- (void)updateDownlinkBandwithAllocatorClientConfigurations:(id)a0;
- (void)updateAudioSpectrumState;
- (void)updateShouldEnableFaceZoom;
- (BOOL)isParticipantPeace:(id)a0;
- (id)checkSubstreams:(id)a0 forLowerQualityIndex:(unsigned int)a1;
- (id)newAudioStreamConfigurationWithMultiwayAudioNegotiationResult:(id)a0 maxIDSStreamIDCount:(unsigned int)a1;
- (BOOL)setupAudioStreamMultiwayConfigurations:(id)a0;
- (BOOL)setupAudioStreamOneToOneConfigurations:(id)a0;
- (BOOL)setupBandwidthAllocationTableForMediaStreamConfigs:(id)a0 entryType:(unsigned char)a1;
- (id)setupStreamRTP:(id)a0;
- (BOOL)isAudioActive;
- (BOOL)isVideoActive;
- (id)newVideoStreamConfigurationWithNegotiationVideoResult:(id)a0;
- (BOOL)setupVideoStreamMultiwayConfigurations:(id)a0;
- (BOOL)setupVideoStreamOneToOneConfigurations:(id)a0;
- (void)notifyChangeInActiveMediaBitrate:(BOOL)a0;
- (void)setShouldEnableFaceZoom:(BOOL)a0;
- (void)updateVideoPriority:(unsigned char)a0;
- (void)reportParticipantsPerfTimingsOnce;
- (void)setActualBitrateForOptedInStreamID:(id)a0 withActiveStreamID:(id)a1 isVideo:(BOOL)a2;
- (id)initWithIDSDestination:(id)a0 idsParticipantID:(unsigned long long)a1 mediaNegotiator:(id)a2 opaqueData:(id)a3 delegate:(id)a4 processId:(int)a5 transportSessionID:(unsigned int)a6 sessionUUID:(id)a7 config:(id)a8 isGKVoiceChat:(BOOL)a9;
- (void)stopAudioIOCompletion;
- (void)onStartAudioIO;
- (void)onDidResumeAudioStream:(id)a0;
- (void)onPauseAudioStreams;
- (BOOL)configureAudioIOWithDeviceRole:(int)a0;
- (id)getAudioDumpName;
- (void)setActiveStreamIDs:(id)a0;
- (id)recommendedStreamIDsForSelectedMediaEntries:(id)a0 forceSeamlessTransition:(BOOL)a1;
- (void)negotiateAudioRules:(id)a0;
- (void)receivedMediaPacketAtTime:(double)a0 isDecryptable:(BOOL)a1;
- (BOOL)configureWithOneToOneParticipantConfig:(id)a0;
- (void)redundancyController:(id)a0 redundancyIntervalDidChange:(double)a1;
- (void)collectVideoChannelMetrics:(struct { unsigned int x0; unsigned int x1; double x2; double x3; } *)a0;
- (void)collectAudioChannelMetrics:(struct { unsigned int x0; unsigned int x1; double x2; double x3; } *)a0;
- (void)updateVideoQualityNotification;
- (void)updateSourcePlayoutTimestampWithSamples:(struct opaqueVCAudioBufferList { } *)a0;
- (void)debounceAudioPriority:(unsigned char)a0;

@end
