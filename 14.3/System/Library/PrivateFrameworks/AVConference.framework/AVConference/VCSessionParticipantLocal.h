@class NSMutableDictionary, VCSessionParticipantMediaStreamInfo, VCRedundancyControllerAudio, VCSwitchManager, NSMutableArray, NSString, VCAudioPowerSpectrumSource, VCVideoRule, VCSessionUplinkBandwidthAllocator, VCRedundancyControllerVideo, NSMutableSet, VCMoments, VCSessionUplinkVideoStreamController;

@interface VCSessionParticipantLocal : VCSessionParticipant <VCVideoSink, VCVideoCaptureClient, VCSessionUplinkVideoStreamControllerDelegate, VCMomentTransportDelegate> {
    VCSessionUplinkBandwidthAllocator *_uplinkBandwidthAllocator;
    NSMutableDictionary *_activeUplinkAudioStreams;
    NSMutableDictionary *_pendingActiveUplinkVideoStreams;
    int _shouldUpdateActiveVideoStream;
    unsigned int _currentUplinkTargetBitrate;
    struct opaqueCMSimpleQueue { } *_audioStreamUpdateEventQueue;
    struct opaqueCMSimpleQueue { } *_audioRedundancyChangeEventQueue;
    struct opaqueCMSimpleQueue { } *_videoRedundancyChangeEventQueue;
    unsigned int _lastSentAudioSampleTime;
    double _lastSentAudioHostTime;
    struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } _audioTimestampRWLock;
    unsigned char _lastAudioPriority;
    unsigned char _lastVideoPriority;
    VCSessionUplinkVideoStreamController *_uplinkVideoStreamController;
    struct tagVCMemoryPool { struct { void *x0; long long x1; } x0; unsigned long long x1; } *_audioStreamUpdatePool;
    struct tagVCMemoryPool { struct { void *x0; long long x1; } x0; unsigned long long x1; } *_audioRedundancyEventPool;
    struct tagVCMemoryPool { struct { void *x0; long long x1; } x0; unsigned long long x1; } *_videoRedundancyPool;
    _Atomic unsigned char _videoPriority;
    BOOL _videoPriorityEnabled;
    BOOL _shouldResize;
    BOOL _enableRedundancy;
    NSMutableSet *_localPublishedStreams;
    float _averageSilenceAudioPower;
    unsigned char _audioPriorityRampUp;
    unsigned char _audioPriorityDecaySlow;
    unsigned char _audioPriorityDecayFast;
    float _audioVoiceDetectionSensitivity;
    float _audioSilencePowerAverageMultiplier;
    unsigned char _forcedAudioPriorityValue;
    double _forcedAudioPriorityLastUpdateTime;
    BOOL _forcedAudioPriorityEnabled;
    VCVideoRule *_videoRule;
    BOOL _speechDetected;
    struct opaqueVCVoiceDetector { } *_voiceDetector;
    double _fecRatio;
    VCAudioPowerSpectrumSource *_powerSpectrumSource;
    int _currentVideoCaptureFrameRate;
    int _maxSupportedMultiwayCameraFrameRate;
    long long _maxSupportedMultiwayVideoResolution;
    BOOL _oneToOneModeEnabled;
    struct _VCSessionParticipantLocalOneToOneSettings { struct tagHANDLE *mediaQueue; VCRedundancyControllerAudio *audioRedundancyController; VCRedundancyControllerVideo *videoRedundancyController; VCSessionParticipantMediaStreamInfo *audioStreamInfo; VCSessionParticipantMediaStreamInfo *videoStreamInfo; VCSwitchManager *switchManager; unsigned int targetBitrate; unsigned int rateChangeCounter; } _oneToOneSettings;
}

@property (nonatomic) BOOL encryptionInfoReceived;
@property (readonly, nonatomic) unsigned short connectionStatsStreamID;
@property (nonatomic) unsigned int uplinkBitrateCapWifi;
@property (nonatomic) unsigned int uplinkBitrateCapCell;
@property (nonatomic) BOOL enableVADFiltering;
@property (copy, nonatomic) NSMutableArray *peerSubscribedStreams;
@property (readonly, nonatomic) NSMutableSet *audioPayloadTypes;
@property (readonly, nonatomic) NSMutableSet *videoPayloadTypes;
@property (readonly, nonatomic) unsigned int currentUplinkTotalBitrateVideo;
@property (readonly, nonatomic) unsigned int currentUplinkTotalBitrateAudio;
@property (readonly, nonatomic) VCMoments *moments;
@property (nonatomic, getter=isOneToOneModeEnabled) BOOL oneToOneModeEnabled;
@property (nonatomic) int currentVideoCaptureFrameRate;
@property (readonly, nonatomic) struct __CFString { } *activeStreamKeys;
@property (nonatomic) BOOL isRemoteOnPeace;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setMuted:(BOOL)a0;
- (void)dealloc;
- (void)stop;
- (BOOL)onVideoFrame:(struct opaqueCMSampleBuffer { } *)a0 frameTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 attribute:(struct { BOOL x0; BOOL x1; int x2; BOOL x3; BOOL x4; int x5; unsigned char x6; })a2;
- (void)sourceFrameRateDidChange:(unsigned int)a0;
- (void)start;
- (BOOL)setState:(unsigned int)a0;
- (void)pushAudioSamples:(struct opaqueVCAudioBufferList { } *)a0;
- (void)redundancyController:(id)a0 redundancyPercentageDidChange:(unsigned int)a1;
- (void)redundancyController:(id)a0 redundancyVectorDidChange:(struct { unsigned short x0; struct { unsigned char x0; unsigned char x1; } x1[16]; })a1;
- (void)setMediaSuggestion:(struct VCRateControlMediaSuggestion { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; } *)a0;
- (void)handleActiveConnectionChange:(id)a0;
- (void)controller:(id)a0 didChangeActiveVideoStreams:(id)a1;
- (void)generateKeyFrameWithStreamID:(unsigned short)a0;
- (void)moments:(id)a0 shouldProcessRequest:(id)a1 recipientID:(id)a2;
- (void)updateMediaSettingsWithConfig:(id)a0;
- (id)setupStreamRTP:(id)a0;
- (void)stopAudioIOCompletion;
- (BOOL)configureAudioIOWithDeviceRole:(int)a0;
- (id)getAudioDumpName;
- (BOOL)configureWithOneToOneParticipantConfig:(id)a0;
- (void)redundancyController:(id)a0 redundancyIntervalDidChange:(double)a1;
- (void)collectVideoChannelMetrics:(struct { unsigned int x0; unsigned int x1; double x2; double x3; } *)a0;
- (void)collectAudioChannelMetrics:(struct { unsigned int x0; unsigned int x1; double x2; double x3; } *)a0;
- (void)thermalLevelDidChange:(int)a0;
- (id)clientCaptureRule;
- (void)avConferencePreviewError:(id)a0;
- (void)cameraAvailabilityDidChange:(BOOL)a0;
- (void)frameRateIsBeingThrottled:(int)a0 thermalLevelDidChange:(BOOL)a1 powerLevelDidChange:(BOOL)a2;
- (id)initWithIDSDestination:(id)a0 negotiationData:(id)a1 delegate:(id)a2 processId:(int)a3 sessionUUID:(id)a4 oneToOneModeEnabled:(BOOL)a5 isGKVoiceChat:(BOOL)a6;
- (void)updateUplinkTargetBitrate:(unsigned int)a0;
- (void)updateTargetBitrateOneToOne:(unsigned int)a0 rateChangeCounter:(unsigned int)a1;
- (id)supportedAudioRules;
- (void)updateSupportedAudioRules:(id)a0;
- (void)updateMomentsCapabillities:(unsigned int)a0 imageType:(int)a1 videoCodec:(int)a2;
- (void)didReceiveReportPacket:(struct tagRTCPPACKET { struct tagRTCPCOMMON { unsigned char x0 : 5; unsigned char x1 : 1; unsigned char x2 : 2; unsigned char x3 : 8; unsigned short x4; } x0; union { struct tagSR_RTCP { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; struct tagRTCP_RRB { unsigned int x0; unsigned char x1 : 8; unsigned int x2 : 24; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; } x6[1]; } x0; struct tagRR_RTCP { unsigned int x0; struct tagRTCP_RRB { unsigned int x0; unsigned char x1 : 8; unsigned int x2 : 24; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; } x1[1]; } x1; struct tagSDES_RTCP { unsigned int x0; struct tagRTCPSDES { unsigned char x0; unsigned char x1; char x2[258]; } x1; } x2; struct tagBYE_RTCP { unsigned int x0; } x3; struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x4; struct tagRTCP_APP_LTRP { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x5; struct tagFIR_RTCP { unsigned int x0; unsigned short x1[10]; } x6; struct tagNACK_RTCP { unsigned int x0; unsigned short x1; unsigned short x2; } x7; struct tagRTCP_PSFB_PLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; } x8; struct tagRTCP_PSFB_SLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x9; struct tagRTCP_PSFB_FIR { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned char x2; unsigned char x3[3]; } x10; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x11; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x12; struct tagRTCP_RTPFB_GNACK { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned short x1; unsigned short x2; } x13; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x14; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x15; struct tagRTCP_CUSTOM_SR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_SENDER_INFO { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned char x4 : 4; unsigned char x5 : 4; } x2; struct tagRTCP_CUSTOM_RECEPTION_REPORT { unsigned int x0; unsigned char x1 : 4; unsigned short x2 : 12; unsigned short x3; unsigned short x4; unsigned char x5; unsigned char x6; } x3[1]; } x16; struct tagRTCP_CUSTOM_RR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_RECEIVER_INFO { unsigned char x0 : 4; unsigned char x1 : 4; } x2; struct tagRTCP_CUSTOM_RECEPTION_REPORT { unsigned int x0; unsigned char x1 : 4; unsigned short x2 : 12; unsigned short x3; unsigned short x4; unsigned char x5; unsigned char x6; } x3[1]; } x17; struct tagRTCP_CUSTOM_RCTL { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; struct tagRTCP_CUSTOM_RATE_CONTROL_INFO { unsigned char x0[20]; } x1; } x18; } x1; } *)a0 arrivalNTPTime:(union tagNTP { unsigned long long x0; struct { unsigned int x0; unsigned int x1; } x1; })a1;
- (void)didReceiveCustomReportPacket:(struct tagRTCPPACKET { struct tagRTCPCOMMON { unsigned char x0 : 5; unsigned char x1 : 1; unsigned char x2 : 2; unsigned char x3 : 8; unsigned short x4; } x0; union { struct tagSR_RTCP { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; struct tagRTCP_RRB { unsigned int x0; unsigned char x1 : 8; unsigned int x2 : 24; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; } x6[1]; } x0; struct tagRR_RTCP { unsigned int x0; struct tagRTCP_RRB { unsigned int x0; unsigned char x1 : 8; unsigned int x2 : 24; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; } x1[1]; } x1; struct tagSDES_RTCP { unsigned int x0; struct tagRTCPSDES { unsigned char x0; unsigned char x1; char x2[258]; } x1; } x2; struct tagBYE_RTCP { unsigned int x0; } x3; struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x4; struct tagRTCP_APP_LTRP { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x5; struct tagFIR_RTCP { unsigned int x0; unsigned short x1[10]; } x6; struct tagNACK_RTCP { unsigned int x0; unsigned short x1; unsigned short x2; } x7; struct tagRTCP_PSFB_PLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; } x8; struct tagRTCP_PSFB_SLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x9; struct tagRTCP_PSFB_FIR { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned char x2; unsigned char x3[3]; } x10; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x11; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x12; struct tagRTCP_RTPFB_GNACK { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned short x1; unsigned short x2; } x13; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x14; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x15; struct tagRTCP_CUSTOM_SR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_SENDER_INFO { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned char x4 : 4; unsigned char x5 : 4; } x2; struct tagRTCP_CUSTOM_RECEPTION_REPORT { unsigned int x0; unsigned char x1 : 4; unsigned short x2 : 12; unsigned short x3; unsigned short x4; unsigned char x5; unsigned char x6; } x3[1]; } x16; struct tagRTCP_CUSTOM_RR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_RECEIVER_INFO { unsigned char x0 : 4; unsigned char x1 : 4; } x2; struct tagRTCP_CUSTOM_RECEPTION_REPORT { unsigned int x0; unsigned char x1 : 4; unsigned short x2 : 12; unsigned short x3; unsigned short x4; unsigned char x5; unsigned char x6; } x3[1]; } x17; struct tagRTCP_CUSTOM_RCTL { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; struct tagRTCP_CUSTOM_RATE_CONTROL_INFO { unsigned char x0[20]; } x1; } x18; } x1; } *)a0 arrivalNTPTime:(union tagNTP { unsigned long long x0; struct { unsigned int x0; unsigned int x1; } x1; })a1;
- (int)negotiateOneToOne:(id)a0;
- (long long)setupMaxCaptureResolution;
- (int)setupMaxCaptureCameraFrameRate;
- (unsigned short)generateStreamID;
- (BOOL)setupAudioStreamsWithConfigProvider:(id)a0 mediaNegotiatorConfig:(id)a1;
- (BOOL)setupVideoStreamsWithConfigProvider:(id)a0 mediaNegotiatorConfig:(id)a1;
- (void)updatePayloadTypesWithConfigProvider:(id)a0;
- (void)initializeUplinkVideoStreamController;
- (BOOL)initializeMediaNegotiator;
- (BOOL)createParticipantInfo;
- (void)createOpaqueData;
- (void)flushAudioEventQueue;
- (void)flushAudioRedundancyEventQueue;
- (void)flushVideoRedundancyEventQueue;
- (BOOL)enableRedundancy:(BOOL)a0;
- (void)startVoiceActivityDetection;
- (void)updateActiveVoiceOnly;
- (void)registerForVideoCapture:(int)a0;
- (void)deregisterForVideoCapture;
- (struct CGSize { double x0; double x1; })getCaptureEncodingSize;
- (void)dispatchedUpdateUplinkMediaStreamsWithTargetBitrate:(unsigned int)a0;
- (void)stopVoiceActivityDetection;
- (BOOL)applyCachedMediaStreams:(id)a0 toMultiwayConfig:(id)a1;
- (BOOL)setupAudioStreamsWithConfigProvider:(id)a0;
- (BOOL)setupAudioStreamWithConfiguration:(id)a0;
- (BOOL)setupAudioStreamWithConfiguration:(id)a0 idsDestination:(id)a1;
- (BOOL)setupVideoStreamsWithConfigProvider:(id)a0;
- (BOOL)setupVideoStreamWithConfiguration:(id)a0;
- (BOOL)setupVideoStreamWithConfiguration:(id)a0 idsDestination:(id)a1;
- (id)newMediaNegotiatorAudioConfiguration;
- (id)multiwayAudioStreamNegotiatorConfigForStreamConfig:(id)a0;
- (id)multiwayVideoStreamNegotiatorConfigForStreamConfig:(id)a0 isSubstream:(BOOL)a1;
- (void)setupOneToOneAudioRedundancyController;
- (void)setupOneToOneVideoRedundancyController;
- (void)setupOneToOneSwitchManager;
- (BOOL)setupOneToOneRedundancyControllers;
- (id)newAudioStreamOneToOneConfiguration;
- (id)newVideoStreamOneToOneConfiguration;
- (BOOL)containsStreamWithSSRC:(unsigned int)a0;
- (BOOL)containsStreamWithIDSStreamID:(unsigned short)a0;
- (id)audioRuleCollectionWithAudioStreamConfig:(id)a0;
- (void)addCallInfoBlobToParticipantInfo:(id)a0;
- (void)updateActiveAudioStreams:(id)a0 allStreamIds:(id)a1;
- (void)processAudioStreamUpdateEvent;
- (void)processAudioRedundancyChangeEvent;
- (void)setupEncodingModeWithVideoStreamConfig:(id)a0;
- (BOOL)checkSubscribedStreamsConsistency:(id)a0;
- (id)checkStreamsForAudioOptIn:(id)a0;
- (BOOL)updateUplinkStreamsForPeerSubscribedStreams:(id)a0;
- (void)applyOneToOneVideoRedundancyPercentage:(unsigned int)a0;
- (void)updateActiveAudioStreamWithTargetBitrate:(unsigned int)a0;
- (void)updateActiveVideoStreamWithTargetBitrate:(unsigned int)a0;
- (void)updateActiveVideoStreamWithTargetBitrateForMultiway:(unsigned int)a0;
- (void)updateStreamIDCompoundingWithActiveStreamIds:(id)a0 streamIds:(id)a1 block:(id /* block */)a2;
- (unsigned int)calculateUplinkTotalBitrateForMediaStreams:(id)a0;
- (void)dispatchedUpdateUplinkMediaStreamsWithTargetBitrate:(unsigned int)a0 rateChangeCounter:(unsigned int)a1;
- (void)updateVideoOneToOneBitrate;
- (void)processVideoEventQueue;
- (void)updateVideoStreamAndProcessFrame:(id)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 lastSentAudioHostTime:(double)a2 lastSentAudioSampleTime:(unsigned int)a3 frameTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a4 attribute:(struct { BOOL x0; BOOL x1; int x2; BOOL x3; BOOL x4; int x5; unsigned char x6; })a5;
- (void)processVideoPriority;
- (void)processEventQueues;
- (void)updateAudioPriorityWithSampleBuffer:(struct opaqueVCAudioBufferList { } *)a0;
- (id)initWithIDSDestination:(id)a0 negotiationData:(id)a1 delegate:(id)a2 processId:(int)a3 sessionUUID:(id)a4;
- (void)applyVideoEnabledSetting:(BOOL)a0;
- (void)updateVideoPaused:(BOOL)a0;
- (id)multiwayVideoStreamConfigs;
- (unsigned int)generateSSRC;
- (BOOL)isHighPriorityAudioWithPower:(float)a0 voiceActive:(BOOL)a1;

@end
