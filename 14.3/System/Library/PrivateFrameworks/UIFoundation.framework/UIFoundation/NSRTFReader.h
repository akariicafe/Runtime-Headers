@class NSMutableDictionary, NSMutableData, NSMapTable, NSMutableParagraphStyle, NSTextTable, NSMutableArray, NSMutableAttributedString, NSFont, NSCalendar, NSArray, NSFileWrapper, NSData, NSColor;

@interface NSRTFReader : NSObject {
    NSMutableAttributedString *_topAttributedString;
    NSMutableAttributedString *_curAttributedString;
    NSMutableArray *_attributesStack;
    NSMutableDictionary *_curAttributes;
    unsigned int _level;
    NSData *_rtfData;
    NSMutableDictionary *_fontTable;
    NSFileWrapper *_document;
    union { unsigned char thin[128]; unsigned short fat[128]; } _textBuffer;
    unsigned long long _textBufferIndex;
    int _rtfVersion;
    int _cocoaVersion;
    int _cocoaSubVersion;
    int _readOnly;
    int _usesScreenFonts;
    int _colorTblColorSpace;
    unsigned int _defaultToUniCharEncoding;
    struct _NSAttributeInfo { unsigned int toUniCharEncoding; unsigned int codePageEncoding; NSFont *font; double fontSize; double kern; NSMutableParagraphStyle *paraStyle; unsigned char bold : 1; unsigned char italic : 1; unsigned char fontIsValid : 1; unsigned char paraStyleIsValid : 1; unsigned char kernIsValid : 1; unsigned char attributesSameAsBefore : 1; unsigned char multiByteEncoding : 1; unsigned char unicodeAlternativeLength : 3; unsigned char tabStopType : 4; unsigned char curAttributesNeedsCopying : 1; unsigned char paraStyleNeedsCopying : 1; unsigned char hasWritingDirectionAttribute : 1; unsigned short  : 15; } _attributeInfo;
    NSMutableData *_attributeInfoStack;
    struct CGSize { double width; double height; } _paperSize;
    double _lMargin;
    double _rMargin;
    double _bMargin;
    double _tMargin;
    NSMutableDictionary *_documentInfoDictionary;
    struct CGSize { double width; double height; } _viewSize;
    int _viewScale;
    int _viewKind;
    NSMapTable *_cachedRTFFontTable;
    double _hyphenationFactor;
    double _defaultTabInterval;
    NSColor *_documentBackgroundColor;
    struct _NSRTFPriv { void *reader; char *rtfInput; unsigned long long rtfInputLength; unsigned long long rtfInputLocation; unsigned long long rtfHeaderEndLocation; int pushedChar; int pushedClass; int pushedMajor; int pushedMinor; int pushedParam; char pushedTextBuf[1024]; int prevChar; int bumpLine; struct RTFFont *fontList; struct RTFColor *colorList; struct RTFStyle *styleList; char *inputName; char *outputName; void /* function */ *ccb[5]; void /* function */ *readHook; void /* function */ *msgProc; void /* function */ *panicProc; char textBuf[1024]; int textLen; int class; int major; int minor; int param; long long lineNum; long long linePos; int groupState; } _private;
    BOOL _textBufferContentsIsFat;
    BOOL _explicitCharSetEncountered;
    BOOL _isRTLDocument;
    long long _readLimit;
    long long _thumbnailLimit;
    BOOL _limitReached;
    unsigned char _textFlow;
    NSMutableArray *_layoutOrientationSections;
    unsigned long long _verticalOrientationLocation;
    NSArray *_textBlocks;
    NSMutableArray *_nestedTables;
    NSTextTable *_currentTable;
    NSTextTable *_previousTable;
    NSMutableArray *_currentRowArray;
    NSMutableArray *_previousRowArray;
    int _currentRow;
    int _currentColumn;
    int _currentDefinitionColumn;
    BOOL _currentRowIsLast;
    BOOL _setTableCells;
    unsigned long long _currentBorderEdge;
    BOOL _currentBorderIsTable;
    NSMutableDictionary *_listDefinitions;
    int _currentListNumber;
    int _currentListLevel;
    NSCalendar *_gregorianCalendar;
    NSMutableDictionary *_fontAttributesTable;
    long long _cocoaTextScaling;
    long long _cocoaPlatform;
    long long _targetTextScaling;
    long long _sourceTextScaling;
    long long _finalTextScaling;
}

- (void)setHyphenationFactor:(float)a0;
- (id)initWithPath:(id)a0;
- (id)initWithRTFD:(id)a0;
- (void)setReadLimit:(long long)a0;
- (id)initWithRTF:(id)a0;
- (void)setMutableAttributedString:(id)a0;
- (id)documentAttributes;
- (id)initWithRTFDFileWrapper:(id)a0;
- (void)setThumbnailLimit:(long long)a0;
- (void)_setTargetTextScaling:(long long)a0;
- (void)_setSourceTextScaling:(long long)a0;
- (id)attributedString;
- (double)defaultTabInterval;
- (void)setDefaultTabInterval:(double)a0;
- (void)_updateAttributes;
- (void)dealloc;
- (void)setViewSize:(struct CGSize { double x0; double x1; })a0;
- (void)_pushState;
- (id)_currentTable;
- (void)_setRTFDFileWrapper:(id)a0;
- (id)_mutableParagraphStyle;
- (void)setPaperSize:(struct CGSize { double x0; double x1; })a0;
- (void)_addListDefinition:(id)a0 forKey:(long long)a1;
- (id)_RTFDFileWrapper;
- (void)setViewKind:(long long)a0;
- (void)setViewScale:(long long)a0;
- (void)setLeftMargin:(double)a0;
- (void)setTopMargin:(double)a0;
- (void)setBottomMargin:(double)a0;
- (void)setTextFlow:(unsigned long long)a0;
- (long long)cocoaPlatform;
- (long long)cocoaTextScaling;
- (id)_currentTableCell;
- (unsigned long long)_currentBorderEdge;
- (BOOL)_currentBorderIsTable;
- (BOOL)_currentTableCellIsPlaceholder;
- (void)_setCurrentBorderEdge:(unsigned long long)a0 isTable:(BOOL)a1;
- (void)_setTableNestingLevel:(long long)a0;
- (void)_startTableRowDefinition;
- (void)_endTableCellDefinition;
- (void)_paragraphInTable;
- (void)_endTableCell;
- (void)_lastTableRow;
- (void)_endTableRow;
- (void)_mergeTableCellsHorizontally;
- (void)_mergeTableCellsVertically;
- (id)attributedStringToEndOfGroup;
- (id)attributesAtEndOfGroup;
- (long long)_currentListNumber;
- (void)_setCurrentListNumber:(long long)a0;
- (long long)_currentListLevel;
- (void)_setCurrentListLevel:(long long)a0;
- (id)_listDefinitions;
- (void)_addOverride:(long long)a0 forKey:(long long)a1;
- (void)processString:(id)a0;
- (struct CGSize { double x0; double x1; })viewSize;
- (void)setBackgroundColor:(id)a0;
- (id)mutableAttributes;
- (id)mutableAttributedString;
- (struct CGSize { double x0; double x1; })paperSize;
- (id)defaultParagraphStyle;
- (unsigned long long)textFlow;
- (void)finalize;
- (long long)baseWritingDirection;
- (void)setBaseWritingDirection:(long long)a0;
- (void)_popState;
- (void)setRightMargin:(double)a0;

@end
