@class SBLockScreenPluginManager, NSString, NSHashTable, SBAppStatusBarSettingsAssertion, SBLockScreenBatteryChargingViewController, SBLoginAppContainerPluginWrapperViewController, NSMutableSet, SBLockScreenTemperatureWarningViewController, SBWallpaperController;
@protocol SBLoginAppSceneHoster, BSInvalidatable;

@interface SBLoginAppContainerViewController : SBLockScreenViewControllerBase <SBLockScreenBatteryChargingViewControllerDelegate, SBLoginAppSceneHosterDelegate, SBWallpaperObserver, SBLockScreenPluginManagerDelegate> {
    id<SBLoginAppSceneHoster> _sceneHoster;
    SBLockScreenBatteryChargingViewController *_batteryChargingViewController;
    SBLockScreenTemperatureWarningViewController *_thermalWarningViewController;
    SBLoginAppContainerPluginWrapperViewController *_pluginWrapperViewController;
    SBAppStatusBarSettingsAssertion *_statusBarAssertion;
    NSMutableSet *_showStatusBarReasons;
    id<BSInvalidatable> _deferOrientationUpdatesAssertion;
    long long _idleTimerMode;
    SBLockScreenPluginManager *_pluginManager;
    SBWallpaperController *_wallpaperController;
    NSHashTable *_observers;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (BOOL)handleHomeButtonDoublePress;
- (void)wallpaperLegibilitySettingsDidChange:(id)a0 forVariant:(long long)a1;
- (void)wallpaperDidChangeForVariant:(long long)a0;
- (BOOL)suppressesControlCenter;
- (void)startLockScreenFadeInAnimationForSource:(int)a0;
- (void)_updateLegibility;
- (BOOL)handleVolumeDownButtonPress;
- (void)prepareForUILock;
- (BOOL)canBeDeactivatedForUIUnlockFromSource:(int)a0;
- (BOOL)handleVolumeUpButtonPress;
- (void)noteDeviceBlockedStatusUpdated;
- (BOOL)willUIUnlockFromSource:(int)a0;
- (void)pluginManager:(id)a0 activePluginDidChange:(id)a1;
- (void).cxx_destruct;
- (void)pluginManager:(id)a0 displayedPluginDidChangeFromPlugin:(id)a1 toPlugin:(id)a2;
- (void)dealloc;
- (void)viewWillDisappear:(BOOL)a0;
- (void)loadView;
- (void)prepareForUIUnlock;
- (void)pluginManager:(id)a0 willUnloadPlugin:(id)a1;
- (BOOL)pluginManager:(id)a0 plugin:(id)a1 handleAction:(id)a2;
- (BOOL)shouldDisableALS;
- (void)pluginManager:(id)a0 displayedPluginDidUpdateAppearance:(id)a1;
- (void)viewWillAppear:(BOOL)a0;
- (void)pluginManager:(id)a0 didLoadPlugin:(id)a1;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (id)coordinatorRequestedIdleTimerBehavior:(id)a0;
- (id)initWithNibName:(id)a0 bundle:(id)a1;
- (BOOL)shouldAutoUnlockForSource:(int)a0;
- (void)enableLockScreenPluginWithContext:(id)a0;
- (BOOL)shouldShowLockStatusBarTime;
- (BOOL)suppressesScreenshots;
- (void)disableLockScreenPluginWithContext:(id)a0;
- (BOOL)_canShowWhileLocked;
- (void)sceneUpdatedIdleTimerMode:(long long)a0;
- (void)sceneUpdatedStatusBarUserName:(id)a0;
- (void)sceneUpdatedRotationMode:(long long)a0;
- (void)sceneUpdatedWallpaperMode:(unsigned long long)a0;
- (void)sceneInvalidated;
- (id)_statusBarSettingsAssertion;
- (void)chargingViewControllerFadedOutContent:(id)a0;
- (id)initWithNibName:(id)a0 bundle:(id)a1 sceneHoster:(id)a2 wallpaperController:(id)a3;
- (void)_handleBacklightFadeEnded;
- (void)_reallyRelinquishStatusBarAssertion;
- (void)_showOrHideThermalTrapUIAnimated:(BOOL)a0;
- (void)_updateBatteryChargingViewAnimated:(BOOL)a0;
- (id)loginContainerView;
- (void)_setupLoginScene;
- (void)_cleanupBatteryChargingViewWithAnimationDuration:(double)a0;
- (void)_addBatteryChargingView;
- (void)_fadeViewsForChargingViewVisible:(BOOL)a0;
- (void)_removeBatteryChargingView;
- (id)_initWithSceneHoster:(id)a0 wallpaperController:(id)a1;
- (void)addLoginObserver:(id)a0;
- (void)removeLoginObserver:(id)a0;
- (BOOL)requiresPasscodeInputForUIUnlockFromSource:(int)a0 withOptions:(id)a1;
- (id)_displayLayoutElementIdentifier;
- (void)_setupLoginAppHosting;
- (void)_killLoginApp;
- (id)_hostedAppBundleID;
- (id)_hostedAppView;
- (id)_hostedSceneIdentifier;
- (void)_reallyAcquireStatusBarAssertionIfNecessaryInitiallyVisible:(BOOL)a0;

@end
