@class NSMapTable, UIScreen, FBServiceClientAuthenticator, SBWallpaperViewController, UIView, NSString, UIGestureRecognizer, SBFWallpaperConfigurationManager, UITraitCollection, PTSingleTestRecipe, NSMutableSet, SBWallpaperAggdLogger, UIWindow;
@protocol SBWallpaperPresenting, SBUIWallpaperOverlay, BSInvalidatable, SBWallpaperPresentingDelegate, SBFIrisWallpaperView, SBWallpaperLegibilityProviding;

@interface SBWallpaperController : NSObject <SBFLegibilitySettingsProviderDelegate, SBFWallpaperViewInternalObserver, SBUIActiveOrientationObserver, _UISettingsKeyObserver, SBWallpaperPresentingDelegate, SBWallpaperReachabilityCoordinating, BSDescriptionProviding, SBWallpaperServerDelegate, SBFWallpaperViewDelegate, UIWindowDelegate, CSWallpaperOverlayHosting, SBWallpaperPresenting, SBWallpaperLegibilityProviding> {
    UIWindow *_wallpaperWindow;
    UIView *_wallpaperContainerView;
    UIView *_wallpaperOverlayContainerView;
    long long _displayedVariant;
    UIView<SBUIWallpaperOverlay> *_wallpaperOverlay;
    NSMutableSet *_activeOrientationSources;
    NSMapTable *_orientationProviders;
    PTSingleTestRecipe *_migrationTestRecipe;
    PTSingleTestRecipe *_reloadTestRecipe;
    SBWallpaperViewController *_wallpaperViewController;
}

@property (class, readonly, nonatomic) SBWallpaperController *sharedInstance;
@property (class, readonly, nonatomic) FBServiceClientAuthenticator *accessAuthenticator;

@property (retain, nonatomic) SBWallpaperAggdLogger *wallpaperAggdLogger;
@property (readonly, nonatomic, getter=_WallpaperOrientationNotForYou) long long _orientation;
@property (retain, nonatomic) UITraitCollection *fakeBlurViewOverrideTraitCollection;
@property (retain, nonatomic) id<BSInvalidatable> batterySaverAnimationAssertion;
@property (retain, nonatomic) id<BSInvalidatable> wallpaperStyleAnimationAssertion;
@property (readonly, nonatomic) UIScreen *screen;
@property (readonly, copy, nonatomic) NSString *cachingIdentifier;
@property (readonly, nonatomic) id<SBWallpaperPresenting> presenter;
@property (readonly, nonatomic) id<SBWallpaperLegibilityProviding> legibilityProvider;
@property (nonatomic) double windowLevel;
@property (readonly, nonatomic) UIGestureRecognizer *wallpaperGestureRecognizer;
@property (readonly, nonatomic) long long activeOrientationSource;
@property (readonly, nonatomic) SBFWallpaperConfigurationManager *wallpaperConfigurationManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) double effectiveReachabilityYOffset;
@property (weak, nonatomic) id<SBWallpaperPresentingDelegate> wallpaperPresentingDelegate;
@property (nonatomic) long long variant;
@property (readonly, nonatomic) double homescreenWallpaperScale;
@property (readonly, nonatomic) double minimumHomescreenWallpaperScale;
@property (nonatomic) double lockscreenWallpaperScale;
@property (readonly, nonatomic) double minimumLockscreenWallpaperScale;
@property (readonly, nonatomic) id<SBFIrisWallpaperView> irisWallpaperView;
@property (readonly, nonatomic) struct { long long x0; long long x1; double x2; } currentHomescreenStyleTransitionState;

- (void)cancelInProcessAnimations;
- (void)addObserver:(id)a0 forVariant:(long long)a1;
- (id)suspendWallpaperAnimationForReason:(id)a0;
- (void)providerLegibilitySettingsChanged:(id)a0;
- (void)removeObserver:(id)a0 forVariant:(long long)a1;
- (void)setWallpaperHidden:(BOOL)a0 variant:(long long)a1 reason:(id)a2;
- (id)_window;
- (void)wallpaperViewDidChangeWantsRasterization:(id)a0;
- (void)setLockscreenWallpaperContentsRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setVariant:(long long)a0 withOutAnimationFactory:(id)a1 inAnimationFactory:(id)a2 completion:(id /* block */)a3;
- (id)averageColorForVariant:(long long)a0;
- (void)wallpaperServer:(id)a0 fetchOriginalImageDataForVariant:(long long)a1 completionHandler:(id /* block */)a2;
- (BOOL)updateIrisWallpaperForStaticMode;
- (id)_wallpaperViewForVariant:(long long)a0;
- (void)updateWallpaperForLocations:(long long)a0 withCompletion:(id /* block */)a1;
- (id)wallpaperView:(id)a0 wallpaperConfigurationIncludingValueTypes:(unsigned long long)a1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)a0 duration:(double)a1;
- (id)legibilitySettingsForVariant:(long long)a0;
- (id)suspendColorSamplingForReason:(id)a0;
- (void)startHostingWallpaperOverlay:(id)a0;
- (void)addReachabilityObserver:(id)a0;
- (void)setAlpha:(double)a0 forWallpaperVariant:(long long)a1;
- (void)wallpaperViewDidInvalidateBlurs:(id)a0;
- (void)removeReachabilityObserver:(id)a0;
- (id)setHomescreenWallpaperScale:(double)a0 withAnimationFactory:(id)a1;
- (void)_updateWallpaperForLocations:(long long)a0 options:(unsigned long long)a1 wallpaperMode:(long long)a2 withCompletion:(id /* block */)a3;
- (id)averageColorInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forVariant:(long long)a1 withSmudgeRadius:(double)a2;
- (double)contrastForVariant:(long long)a0;
- (void)setDisallowsRasterization:(BOOL)a0 forVariant:(long long)a1 withReason:(id)a2;
- (void)preheatWallpaperForVariant:(long long)a0;
- (void)updateOrientationAfterSourceChange;
- (void)activeInterfaceOrientationWillChangeToOrientation:(long long)a0;
- (void)beginDelayingHomescreenStyleChangesForReason:(id)a0;
- (id)newFakeBlurViewForVariant:(long long)a0 style:(long long)a1 transformOptions:(unsigned long long)a2;
- (void)wallpaperServer:(id)a0 setWallpaperGradient:(id)a1 forVariants:(long long)a2 completionHandler:(id /* block */)a3;
- (id)beginRequiringWithReason:(id)a0;
- (BOOL)removeWallpaperStyleForPriority:(long long)a0 forVariant:(long long)a1 withAnimationFactory:(id)a2;
- (void)updateWallpaperForLocations:(long long)a0 wallpaperMode:(long long)a1 withCompletion:(id /* block */)a2;
- (void)setLockscreenWallpaperScale:(double)a0 withAnimationFactory:(id)a1;
- (id)relinquishHostingOfWallpaperOverlay;
- (void)_batterySaverModeChanged:(id)a0;
- (void)_updateScreenBlanked;
- (void)wallpaperServer:(id)a0 setWallpaperColor:(id)a1 darkColor:(id)a2 forVariants:(long long)a3 completionHandler:(id /* block */)a4;
- (id)init;
- (void)_forceUpdateToSpringBoardInterfaceOrientationWithAnimationDuration:(double)a0;
- (void).cxx_destruct;
- (void)_motionEffectsChanged;
- (id)descriptionBuilderWithMultilinePrefix:(id)a0;
- (void)wallpaperPresenter:(id)a0 didChangeWallpaperForLocations:(long long)a1 withConfiguration:(id)a2;
- (void)dealloc;
- (void)wallpaperServer:(id)a0 setWallpaperVideoWithWallpaperMode:(id)a1 cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 wallpaperMode:(long long)a3 completionHandler:(id /* block */)a4;
- (id)succinctDescription;
- (id)descriptionWithMultilinePrefix:(id)a0;
- (id)initWithScreen:(id)a0 orientation:(long long)a1 variant:(long long)a2 wallpaperConfigurationManager:(id)a3 cachingIdentifier:(id)a4;
- (void)wallpaperServer:(id)a0 setWallpaperColorName:(id)a1 forVariants:(long long)a2 completionHandler:(id /* block */)a3;
- (void)orientationSource:(long long)a0 willAnimateRotationToInterfaceOrientation:(long long)a1 duration:(double)a2;
- (void)updateIrisWallpaperForInteractiveMode;
- (void)wallpaperView:(id)a0 didChangeZoomFactor:(double)a1;
- (id)averageColorInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forVariant:(long long)a1;
- (double)contrastInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forVariant:(long long)a1;
- (id)initWithWallpaperConfigurationManager:(id)a0 cachingIdentifier:(id)a1;
- (id)succinctDescriptionBuilder;
- (void)_noteSignificantTimeChanged:(id)a0;
- (void)wallpaperServer:(id)a0 restoreDefaultWallpaperWithCompletionHandler:(id /* block */)a1;
- (void)_reloadWallpaperAndFlushCaches:(BOOL)a0 completionHandler:(id /* block */)a1;
- (void)_saveWallpaperAggdKeysForLocations:(long long)a0 withConfiguration:(id)a1;
- (void)wallpaperServer:(id)a0 fetchContentCutoutBoundsForVariant:(long long)a1 orientation:(long long)a2 completionHandler:(id /* block */)a3;
- (void)orientationSource:(long long)a0 didRotateFromInterfaceOrientation:(long long)a1;
- (void)setOrientationProvider:(id)a0 forSource:(long long)a1;
- (void)setLockscreenOnlyWallpaperAlpha:(double)a0;
- (BOOL)setWallpaperStyle:(long long)a0 forPriority:(long long)a1 forVariant:(long long)a2 withAnimationFactory:(id)a3;
- (id)activeInterfaceOrientationSourcesDescriptions;
- (BOOL)isWindowIgnoredForReachability:(id)a0;
- (void)deactivateOrientationSource:(long long)a0;
- (void)activeInterfaceOrientationDidChangeToOrientation:(long long)a0 willAnimateWithDuration:(double)a1 fromOrientation:(long long)a2;
- (void)activateOrientationSource:(long long)a0;
- (long long)wallpaperPresenter:(id)a0 requestsOrientationWithRefresh:(BOOL)a1;
- (void)_updateWallpaperForLocations:(long long)a0 options:(unsigned long long)a1 withCompletion:(id /* block */)a2;
- (id)initWithWallpaperConfigurationManager:(id)a0;
- (void)settings:(id)a0 changedValueForKey:(id)a1;
- (void)orientationSource:(long long)a0 willRotateToInterfaceOrientation:(long long)a1 duration:(double)a2;
- (long long)defaultInterfaceOrientationForSource:(long long)a0;
- (void)wallpaperServer:(id)a0 fetchThumbnailDataForVariant:(long long)a1 completionHandler:(id /* block */)a2;
- (BOOL)setWallpaperStyleTransitionState:(struct { long long x0; long long x1; double x2; })a0 forPriority:(long long)a1 forVariant:(long long)a2 withAnimationFactory:(id)a3;
- (void)endDelayingHomescreenStyleChangesForReason:(id)a0 animationFactory:(id)a1;
- (BOOL)_isAcceptingOrientationChangesFromSource:(long long)a0;
- (void)wallpaperServer:(id)a0 fetchOriginalVideoURLDataForVariant:(long long)a1 completionHandler:(id /* block */)a2;

@end
