@class PKBillPaymentCircularView, PKCurvedTextLabel, UILabel, NSDictionary, NSDecimalNumber, UITapGestureRecognizer, PKRingGradientView, UISelectionFeedbackGenerator, UIColor, NSString, PKBillPaymentSuggestedAmount, UILongPressGestureRecognizer, PKBillPaymentRingGradientState, PKEnterCurrencyAmountView, PKBillPaymentSuggestedAmountList, NSArray, PKRenderLoop, UIPanGestureRecognizer;
@protocol PKBillPaymentRingViewDelegate, PKBillPaymentRingViewDataSource;

@interface PKBillPaymentRingView : UIView <UIGestureRecognizerDelegate, PKRenderLoopDelegate> {
    PKBillPaymentSuggestedAmountList *_suggestedAmountList;
    NSArray *_suggestedAmountViews;
    double _amountRoundingUnit;
    double _minimumPaymentAmount;
    double _maximumPaymentAmount;
    NSDictionary *_suggestedAmoutImages;
    NSArray *_suggestedAmountAngles;
    NSDictionary *_suggestedAmountsForAngle;
    NSDictionary *_standardRingStates;
    NSDictionary *_colorStops;
    NSDecimalNumber *_displayAmount;
    NSDecimalNumber *_overrideDisplayAmount;
    NSDecimalNumber *_effectiveDisplayAmount;
    BOOL _selectedSuggestedAmountIsTarget;
    PKBillPaymentSuggestedAmount *_selectedSuggestedAmount;
    PKBillPaymentSuggestedAmount *_highlightedSuggestedAmount;
    NSDecimalNumber *_pinnedAmount;
    double _pinnedAmountAngle;
    unsigned long long _pinnedAmountAngleIndex;
    PKRenderLoop *_renderLoop;
    UISelectionFeedbackGenerator *_feedbackGenerator;
    UITapGestureRecognizer *_tapRecognizer;
    UILongPressGestureRecognizer *_pressRecognizer;
    UIPanGestureRecognizer *_dragRecognizer;
    double _lastDrawTime;
    struct { double mass; double stiffness; double damping; double beta; double omega0; double scratch; BOOL dirty; } _spring;
    struct { double target; double position; double velocity; double positionThreshold; double velocityThreshold; BOOL running; } _angleState;
    struct { double mass; double stiffness; double damping; double beta; double omega0; double scratch; BOOL dirty; } _responseSpring;
    struct { double target; double position; double velocity; double positionThreshold; double velocityThreshold; BOOL running; } _responseState;
    double _responseSpringElapsedDuration;
    struct { double mass; double stiffness; double damping; double beta; double omega0; double scratch; BOOL dirty; } _scaleSpring;
    struct { double target; double position; double velocity; double positionThreshold; double velocityThreshold; BOOL running; } _scaleState;
    BOOL _dragging;
    BOOL _pressed;
    long long _dragCapture;
    BOOL _ignoreTouches;
    BOOL _dotsVisible;
    double _interestLabelAlpha;
    BOOL _needsInitialDisplay;
    NSDecimalNumber *_initialDisplayAmount;
    double _overrideGradientStartAngle;
    PKBillPaymentRingGradientState *_overrideGradientState;
    PKRingGradientView *_ringView;
    PKBillPaymentCircularView *_handleView;
    PKEnterCurrencyAmountView *_enterCurrencyAmountView;
    UILabel *_interestLabel;
    PKCurvedTextLabel *_topCurvedTextLabel;
    PKCurvedTextLabel *_bottomCurvedTextLabel;
    BOOL _userSelectedAngleChange;
}

@property (nonatomic, getter=isEnabled) BOOL enabled;
@property (readonly, copy, nonatomic) NSDecimalNumber *amount;
@property (weak, nonatomic) id<PKBillPaymentRingViewDelegate> delegate;
@property (weak, nonatomic) id<PKBillPaymentRingViewDataSource> dataSource;
@property (nonatomic) BOOL isSmall;
@property (readonly, nonatomic) double ringWidth;
@property (readonly, nonatomic) double targetAngle;
@property (readonly, copy, nonatomic) UIColor *currentStartColor;
@property (readonly, copy, nonatomic) UIColor *currentEndColor;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (struct CGPoint { double x0; double x1; })_center;
- (BOOL)gestureRecognizer:(id)a0 shouldReceiveTouch:(id)a1;
- (id)init;
- (void).cxx_destruct;
- (void)dealloc;
- (void)_createSuggestedAmountsImageDictionary;
- (void)_createSuggestedAmountAngles;
- (void)_createStandardColors;
- (void)_createSuggestedAmountRingColorStops;
- (id)_roundedAmountForAngle:(double)a0;
- (void)_pressRecognized:(id)a0;
- (void)_dragRecognizerChanged:(id)a0;
- (void)didUpdateAngleSpringTarget;
- (void)didUpdateAngleSpringPosition;
- (void)didUpdateScaleSpringPosition;
- (void)setAngle:(double)a0 animated:(BOOL)a1 forExplicitAmount:(id)a2 userInitiated:(BOOL)a3;
- (void)_updateForEnabledState;
- (double)_ringWidth;
- (double)_amountLabelMaximumFontSize;
- (double)_offsetCurrentAngle;
- (struct CGPoint { double x0; double x1; })_centerPointAtAngle:(double)a0;
- (double)_angleForAmount:(id)a0;
- (double)_offsetAngle:(double)a0;
- (BOOL)_preferredPausedState;
- (void)_pauseRenderLoop;
- (double)_angleForPosition:(struct CGPoint { double x0; double x1; })a0;
- (double)_angleForRecognizer:(id)a0;
- (void)_updateScaleTarget;
- (void)_dragStarted:(id)a0;
- (void)_dragMoved:(id)a0;
- (void)_dragMovedToAngle:(double)a0 normalizedRadius:(double)a1;
- (void)setHandleScale:(double)a0 animated:(BOOL)a1;
- (void)_updateCurvedText;
- (BOOL)_updateEffectiveDisplayAmount;
- (id)_targetGradientStateForAngle:(double)a0;
- (void)_setDotsVisible:(BOOL)a0 animated:(BOOL)a1;
- (unsigned long long)_unnormalizedAngleIndexForAngle:(double)a0;
- (id)_suggestedAmountForAngleIndex:(unsigned long long)a0;
- (void)_updateHandleImage;
- (void)_setSelectedSuggestedAmount:(id)a0;
- (BOOL)_isAmount:(id)a0 withinRoundingUnitOfAmount:(id)a1;
- (id)_blendFromGradientState:(id)a0 toState:(id)a1 withProgress:(double)a2;
- (void)_setHighlightedSuggestedAmount:(id)a0;
- (BOOL)_setDisplayAmount:(id)a0;
- (void)_updateInterestText;
- (void)_setResponse:(double)a0;
- (id)_blendFromLinearColor:(id)a0 toLinearColor:(id)a1 withProgress:(double)a2;
- (id)_suggestedAmountImageForSuggestedAmount:(id)a0;
- (double)_angleForAngleIndex:(unsigned long long)a0;
- (unsigned long long)_segmentEndAngleIndexForAngle:(double)a0;
- (id)_gradientStateForSuggestedAmount:(id)a0;
- (void)renderLoop:(id)a0 drawAtTime:(double)a1;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (void)didMoveToWindow;
- (void)layoutSubviews;
- (void)_tapRecognized:(id)a0;
- (id)initWithSuggestedAmountList:(id)a0 delegate:(id)a1 dataSource:(id)a2;
- (void)prepareForInitialDisplayWithAmount:(id)a0;
- (void)completeInitialDisplayAnimated:(BOOL)a0;
- (void)setAmount:(id)a0 animated:(BOOL)a1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)gestureRecognizerShouldBegin:(id)a0;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (void)_dragEnded:(id)a0;
- (void)_updatePausedState;

@end
