@class NSMutableDictionary, PKSpendingSummaryFetcher, PKTransactionSource, NSObject, UIScrollView, NSCalendar, NSString, PKAccount, PKPaymentPass, NSIndexSet, NSMutableSet, NSArray, PKSpendingSummaryFooterContainer;
@protocol OS_dispatch_source, PKSpendingSummaryViewControllerDelegate;

@interface PKSpendingSummaryViewController : UIViewController <PKSpendingSummaryFetcherObserver, UIScrollViewDelegate, PKSpendingSingleSummaryViewControllerDelegate> {
    PKTransactionSource *_transactionSource;
    PKAccount *_account;
    PKPaymentPass *_pass;
    PKSpendingSummaryFetcher *_summaryFetcher;
    NSCalendar *_currentCalendar;
    NSArray *_weeks;
    NSArray *_months;
    NSArray *_years;
    NSString *_navTitle;
    NSArray *_currentDataSet;
    unsigned long long _currentSummaryType;
    unsigned long long _numberOfItems;
    double _currentWidth;
    double _currentHeight;
    BOOL _transitioningMode;
    BOOL _isScrolling;
    BOOL _isDragging;
    BOOL _hasPrefetchedLeft;
    BOOL _hasPrefetchedRight;
    UIScrollView *_scrollView;
    double _collectionViewVerticalOffset;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _previousBounds;
    NSArray *_currentMonthTransactions;
    NSMutableSet *_unusedVCs;
    NSArray *_summaryVCs;
    NSMutableDictionary *_indicesToVCMapping;
    NSMutableDictionary *_nonVisibleIndicesToVCMapping;
    NSIndexSet *_visibleIndices;
    unsigned long long _primaryIndex;
    PKSpendingSummaryFooterContainer *_footerView;
    NSMutableDictionary *_pendingCollectionViewUpdates;
    BOOL _isLowEndDevice;
    NSObject<OS_dispatch_source> *_scrollTimer;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lockUpdate;
    NSMutableDictionary *_pendingUpdates;
    unsigned long long _selectionType;
}

@property (weak, nonatomic) id<PKSpendingSummaryViewControllerDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)invalidatedSummariesAvailable;
- (void)invalidatedSpendingSummaryOfType:(unsigned long long)a0 startingWithDate:(id)a1;
- (void).cxx_destruct;
- (void)scrollViewDidScroll:(id)a0;
- (void)dealloc;
- (void)_changeModeTo:(unsigned long long)a0;
- (double)_startOfItemAtIndex:(unsigned long long)a0;
- (void)_loadSummariesForContentOffset:(struct CGPoint { double x0; double x1; })a0;
- (id)_dequeueVCForIndex:(unsigned long long)a0;
- (void)_layoutCollectionViews;
- (double)_yPositionForNonPrimaryVCs;
- (void)_reportTappedButtonWithTag:(id)a0;
- (unsigned long long)_newDataSetIndexAfterTransitionFromMode:(unsigned long long)a0 toMode:(unsigned long long)a1;
- (void)_reloadDataForVCAtIndex:(unsigned long long)a0 swap:(BOOL)a1;
- (void)_updatePrimaryViewScrolling;
- (void)_reloadPendingVCs;
- (BOOL)_canReloadVCs;
- (id)_dequeueNonVisibleVCForIndex:(unsigned long long)a0;
- (id)_visibileIndicesAtContentOffset:(struct CGPoint { double x0; double x1; })a0;
- (void)_retireVCForIndex:(unsigned long long)a0;
- (void)_updateAlphaAndFooterDuringTransition;
- (unsigned long long)_indexAtContentOffset:(struct CGPoint { double x0; double x1; })a0;
- (void)_switchPrimaryIndexToIndex:(unsigned long long)a0;
- (void)_scrollViewStoppedScrolling;
- (id)_recoverUnusedVC;
- (double)_endOfItemAtIndex:(unsigned long long)a0;
- (unsigned long long)_primaryIndexAtOffset:(struct CGPoint { double x0; double x1; })a0;
- (id)initWithTransactionSource:(id)a0 account:(id)a1 fetcher:(id)a2 weeks:(id)a3 months:(id)a4 years:(id)a5 type:(unsigned long long)a6 unit:(unsigned long long)a7 currentMonthTransactions:(id)a8 upcomingScheduledPayments:(id)a9;
- (double)_transitionProgress;
- (void)spendingSingleSummaryViewController:(id)a0 scrollViewDidScroll:(id)a1;
- (void)spendingSingleSummaryViewController:(id)a0 changedSelection:(unsigned long long)a1;
- (void)scrollViewDidEndDecelerating:(id)a0;
- (void)_updateScrollViewContentSize;
- (void)viewDidAppear:(BOOL)a0;
- (void)scrollViewWillEndDragging:(id)a0 withVelocity:(struct CGPoint { double x0; double x1; })a1 targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)a2;
- (void)viewDidDisappear:(BOOL)a0;
- (void)scrollViewDidEndDragging:(id)a0 willDecelerate:(BOOL)a1;
- (void)scrollViewWillBeginDragging:(id)a0;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;

@end
