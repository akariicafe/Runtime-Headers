@interface FxHeliumImage : FxImage {
    struct FxHeliumImagePriv { struct HGRef<HGNode> { struct HGNode *x0; } x0; } *_heliumImagePriv;
}

- (void)dealloc;
- (unsigned long long)imageType;
- (id)initWithInfo:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; BOOL x7; double x8; })a0;
- (struct HGRef<HGNode> { struct HGNode *x0; })heliumRef;
- (void)setHeliumRef:(const struct HGRef<HGNode> { struct HGNode *x0; } *)a0;
- (struct HGNode { void /* function */ **x0; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x1; int x2; int x3; void *x4; int x5; unsigned int x6; int x7; int x8; float *x9; int x10; struct HGShaderEntry *x11; struct HGNodeInput **x12; int x13; struct HGBitmap *x14; BOOL x15; BOOL x16; BOOL x17; BOOL x18; BOOL x19; struct set<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> > { struct __tree<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<HGNodeInput *, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<HGNodeInput *> > { unsigned long long x0; } x2; } x0; } x20; int x21; struct HGNode *x22; struct HGRect { int x0; int x1; int x2; int x3; } x23; struct HGRect { int x0; int x1; int x2; int x3; } x24; struct HGRenderer *x25; struct HGBitmap *x26; struct HGNode *x27; int x28; int x29; int x30; struct HGRect { int x0; int x1; int x2; int x3; } x31; int x32; int x33; struct HGBitmap *x34; struct HGShaderBinding { int x0[1]; int x1; int x2; int x3; int x4; int x5; unsigned int x6; unsigned int x7; } x35; struct HGNodeChain *x36; struct HGShaderEntry *x37; int x38; BOOL x39; struct HGBlendingInfo { unsigned long long x0; int x1; int x2; int x3; int x4; int x5; int x6; } x40; float x41; } *)heliumNode;
- (id)initWithInfo:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; BOOL x7; double x8; })a0 andHeliumRef:(const struct HGRef<HGNode> { struct HGNode *x0; } *)a1;
- (id)initWithInfo:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; BOOL x7; double x8; })a0 andHeliumNode:(struct HGNode { void /* function */ **x0; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x1; int x2; int x3; void *x4; int x5; unsigned int x6; int x7; int x8; float *x9; int x10; struct HGShaderEntry *x11; struct HGNodeInput **x12; int x13; struct HGBitmap *x14; BOOL x15; BOOL x16; BOOL x17; BOOL x18; BOOL x19; struct set<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> > { struct __tree<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<HGNodeInput *, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<HGNodeInput *> > { unsigned long long x0; } x2; } x0; } x20; int x21; struct HGNode *x22; struct HGRect { int x0; int x1; int x2; int x3; } x23; struct HGRect { int x0; int x1; int x2; int x3; } x24; struct HGRenderer *x25; struct HGBitmap *x26; struct HGNode *x27; int x28; int x29; int x30; struct HGRect { int x0; int x1; int x2; int x3; } x31; int x32; int x33; struct HGBitmap *x34; struct HGShaderBinding { int x0[1]; int x1; int x2; int x3; int x4; int x5; unsigned int x6; unsigned int x7; } x35; struct HGNodeChain *x36; struct HGShaderEntry *x37; int x38; BOOL x39; struct HGBlendingInfo { unsigned long long x0; int x1; int x2; int x3; int x4; int x5; int x6; } x40; float x41; } *)a1;
- (void)setHeliumNode:(struct HGNode { void /* function */ **x0; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x1; int x2; int x3; void *x4; int x5; unsigned int x6; int x7; int x8; float *x9; int x10; struct HGShaderEntry *x11; struct HGNodeInput **x12; int x13; struct HGBitmap *x14; BOOL x15; BOOL x16; BOOL x17; BOOL x18; BOOL x19; struct set<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> > { struct __tree<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<HGNodeInput *, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<HGNodeInput *> > { unsigned long long x0; } x2; } x0; } x20; int x21; struct HGNode *x22; struct HGRect { int x0; int x1; int x2; int x3; } x23; struct HGRect { int x0; int x1; int x2; int x3; } x24; struct HGRenderer *x25; struct HGBitmap *x26; struct HGNode *x27; int x28; int x29; int x30; struct HGRect { int x0; int x1; int x2; int x3; } x31; int x32; int x33; struct HGBitmap *x34; struct HGShaderBinding { int x0[1]; int x1; int x2; int x3; int x4; int x5; unsigned int x6; unsigned int x7; } x35; struct HGNodeChain *x36; struct HGShaderEntry *x37; int x38; BOOL x39; struct HGBlendingInfo { unsigned long long x0; int x1; int x2; int x3; int x4; int x5; int x6; } x40; float x41; } *)a0;

@end
