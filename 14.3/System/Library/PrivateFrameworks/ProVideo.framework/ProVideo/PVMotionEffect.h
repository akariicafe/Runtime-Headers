@class NSLock, NSString, NSURL, PVMotionEffectHitAreaComponent, NSMutableDictionary, PVMotionEffectTextComponent, PVMotionEffectTranscriptionComponent, PVMotionEffectTransformComponent, NSMutableSet, NSMutableArray;

@interface PVMotionEffect : PVEffect {
    NSString *effectURL;
    struct PVMotionDocumentInfo { void *x0; struct _OZXDocumentInfo { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; double x7; unsigned int x8; double x9; unsigned int x10; unsigned int x11; unsigned int x12; double x13; unsigned int x14; unsigned int x15[16]; } x1; unsigned int x2; int x3; struct map<unsigned int, unsigned int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int> > > *x4; struct { long long x0; int x1; unsigned int x2; long long x3; } x5; struct CGSize { double x0; double x1; } x6; } *_documentInfo;
    NSMutableArray *_motionComponents;
    double _effectOutputAspect;
    struct METimeRemap { struct FigTime { struct { long long value; int timescale; unsigned int flags; long long epoch; } _t; } _introDuration; struct FigTime { struct { long long value; int timescale; unsigned int flags; long long epoch; } _t; } _outroDuration; struct FigTime { struct { long long value; int timescale; unsigned int flags; long long epoch; } _t; } _scaleableDuration; BOOL _isIntroOptional; BOOL _isOutroOptional; BOOL _isStartTimeAligned; BOOL _isEndTimeAligned; BOOL _isLoop; BOOL _forceDisableLoop; BOOL _forceDisableBuildAnimation; struct OZChannelBool *_pBuildInEnableChan; struct OZChannelBool *_pBuildOutEnableChan; } _timeRemap;
    struct FigTime { struct { long long value; int timescale; unsigned int flags; long long epoch; } _t; } _loopTime;
    struct OZChannelBool { void /* function */ **x0; struct OZFactory *x1; void /* function */ **x2; unsigned int x3; struct PCString { struct __CFString *x0; } x4; struct PCString *x5; struct OZChannelFolder *x6; unsigned long long x7; unsigned long long x8; void *x9; struct __CFString *x10; struct __CFString *x11; struct __CFString *x12; struct OZChannelTimeConverter *x13; struct OZChannelImpl *x14; struct OZChannelImpl *x15; struct OZChannelInfo *x16; struct OZChannelInfo *x17; struct OZCurve *x18; } *_buildInEnableChan;
    struct OZChannelBool { void /* function */ **x0; struct OZFactory *x1; void /* function */ **x2; unsigned int x3; struct PCString { struct __CFString *x0; } x4; struct PCString *x5; struct OZChannelFolder *x6; unsigned long long x7; unsigned long long x8; void *x9; struct __CFString *x10; struct __CFString *x11; struct __CFString *x12; struct OZChannelTimeConverter *x13; struct OZChannelImpl *x14; struct OZChannelImpl *x15; struct OZChannelInfo *x16; struct OZChannelInfo *x17; struct OZCurve *x18; } *_buildOutEnableChan;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _renderStartOffset;
    BOOL _needsToUpdatePosterFrame;
    BOOL _needsToUpdateSceneDuration;
    NSURL *_projectURL;
    NSString *_projectPath;
    unsigned int _groupIDToCache;
    unsigned int _previousGroupIDToCache;
    BOOL _cachedRenderDirty;
    NSMutableSet *_parameterKeysThatInvalidateCache;
    NSMutableDictionary *_parametersThatInvalidateCache;
    NSMutableDictionary *_cachedPublishedParams;
    NSLock *_documentLock;
    struct atomic<PVDocumentLoadStatus> { struct __cxx_atomic_impl<PVDocumentLoadStatus, std::__1::__cxx_atomic_base_impl<PVDocumentLoadStatus> > { _Atomic int __a_value; } __a_; } _docLoadStatus;
    PVMotionEffectTransformComponent *_transformComponent;
    PVMotionEffectTextComponent *_textComponent;
    PVMotionEffectTranscriptionComponent *_transcriptionComponent;
    PVMotionEffectHitAreaComponent *_hitAreaComponent;
}

+ (void)registerEffects;
+ (id)parameterKeyToPublishedParameterNameMap;
+ (void)handleApplicationWillTerminate;
+ (void)initializeMotion;
+ (void)initializeMotionInternal;
+ (void)handleCleanupEffectsCache;
+ (void)handleApplicationDidReceiveMemoryWarning;
+ (id)effectMap;
+ (id)_effectPathFromID:(id)a0;
+ (void)registerTemplateInDirectory:(id)a0 relPath:(id)a1 effectID:(id)a2 doingRescan:(BOOL)a3 origCache:(id)a4 newCache:(id)a5;
+ (BOOL)replacedMappedEffectWithNewPath:(id)a0;
+ (id)_bundleLibPaths;
+ (void)mapTemplatesInDirectory:(id)a0 doingRescan:(BOOL)a1 origCache:(id)a2 newCache:(id)a3;
+ (id)_userLibPaths;
+ (void)scanTemplatesInDirectory:(id)a0 doingRescan:(BOOL)a1 replaceMappedEffectPath:(BOOL)a2 origCache:(id)a3 newCache:(id)a4;
+ (void)registerNoneEffectForType:(id)a0 effectID:(id)a1 origCache:(id)a2 newCache:(id)a3;
+ (struct HGRef<HGXForm> { struct HGXForm *x0; })newHGTransformNodeAroundPoint:(id)a0 scale:(SEL)a1 translation:(double)a2;
+ (id)publishedParameterNameToParameterKeyMap;
+ (id)motionComponentClasses;
+ (id)newEffectWithURL:(id)a0;
+ (id)newEffectWithData:(id)a0;
+ (void)extractMetadataFromContentsOfFile:(id)a0 toCacheEntry:(id)a1;
+ (void)clearPreviewStats;

- (BOOL)isReady;
- (void)setTransform:(id)a0;
- (struct CGSize { double x0; double x1; })documentSize;
- (void).cxx_destruct;
- (void)releaseResources;
- (int)origin;
- (id)effectParameters;
- (void)dealloc;
- (struct CGSize { double x0; double x1; })outputSize;
- (void)setRollRadians:(double)a0;
- (int)orientation;
- (void)setEffectParameters:(id)a0;
- (id).cxx_construct;
- (void)setTranscriptionText:(id)a0;
- (id)cameraTransform;
- (id)initWithEffectID:(id)a0;
- (BOOL)isTextFlipped;
- (BOOL)supportsFlippingText;
- (BOOL)supportsOrientation;
- (struct PVCGPointQuad { struct CGPoint { double x0; double x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })cornersAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 forcePosterFrame:(BOOL)a1 includeDropShadow:(BOOL)a2 scale:(struct CGPoint { double x0; double x1; })a3 viewSize:(struct CGSize { double x0; double x1; })a4 viewOrigin:(int)a5;
- (BOOL)bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0 atTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 forcePosterFrame:(BOOL)a2 includeDropShadow:(BOOL)a3 includeMasks:(BOOL)a4;
- (id)transformAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 forcePosterFrame:(BOOL)a1 includeTransformAnimation:(BOOL)a2 viewSize:(struct CGSize { double x0; double x1; })a3 viewOrigin:(int)a4;
- (id)hitAreaPointsAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 forcePosterFrame:(BOOL)a1 includeDropShadow:(BOOL)a2 scale:(struct CGPoint { double x0; double x1; })a3 viewSize:(struct CGSize { double x0; double x1; })a4 viewOrigin:(int)a5;
- (id)defaultAttributedString:(unsigned long long)a0;
- (struct PVCGPointQuad { struct CGPoint { double x0; double x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })textCornersAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 index:(unsigned long long)a1 forcePosterFrame:(BOOL)a2 includeDropShadow:(BOOL)a3 scale:(struct CGPoint { double x0; double x1; })a4 viewSize:(struct CGSize { double x0; double x1; })a5 viewOrigin:(int)a6;
- (id)textEditingBoundsAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 forcePosterFrame:(BOOL)a1 useParagraphBounds:(BOOL)a2 includeDropShadow:(BOOL)a3 includeMasks:(BOOL)a4;
- (void)beginTextEditing;
- (void)endTextEditing;
- (double)topLevelOpacity;
- (BOOL)resourcesAreReady;
- (BOOL)loadResources;
- (void)updateInspectableProperties:(id)a0;
- (void)setRenderStartOffset:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (id)cameraProjection;
- (id)transformAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 forcePosterFrame:(BOOL)a1 viewSize:(struct CGSize { double x0; double x1; })a2 viewOrigin:(int)a3;
- (id)textTransformsAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 forcePosterFrame:(BOOL)a1 viewSize:(struct CGSize { double x0; double x1; })a2 viewOrigin:(int)a3;
- (void)updateInspectableProperties;
- (struct HGRef<HGNode> { struct HGNode *x0; })previewHGNodeForTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 inputHGNode:(struct HGRef<HGNode> { struct HGNode *x0; })a1 outputSize:(struct CGSize { double x0; double x1; })a2 renderer:(struct HGRenderer { void /* function */ **x0; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x1; struct HGNode *x2; struct HGBitmap *x3; struct HGRendererTextureUnit { struct HGBitmap *x0; struct HGTransform *x1; int x2; } x4[8]; struct vector<DepthBufferManager *, std::__1::allocator<DepthBufferManager *> > { struct DepthBufferManager **x0; struct DepthBufferManager **x1; struct __compressed_pair<DepthBufferManager **, std::__1::allocator<DepthBufferManager *> > { struct DepthBufferManager **x0; } x2; } x5; struct vector<HGExecutionUnit *, std::__1::allocator<HGExecutionUnit *> > { struct HGExecutionUnit **x0; struct HGExecutionUnit **x1; struct __compressed_pair<HGExecutionUnit **, std::__1::allocator<HGExecutionUnit *> > { struct HGExecutionUnit **x0; } x2; } x6; struct HGExecutionData *x7; struct HGSyncData *x8; struct _opaque_pthread_rwlock_t { long long x0; char x1[192]; } x9; struct _opaque_pthread_mutex_t { long long x0; char x1[56]; } x10; struct HGLUTCacheManager *x11; struct GraphStats *x12; struct RendererStats *x13; int x14; int x15; int x16; int x17; int x18; int x19; int x20; int x21; int x22; int x23; int x24; int x25; int x26; int x27; int x28; int x29; int x30; int x31; int x32; int x33; int x34; int x35; int x36; int x37; int x38; int x39; int x40; int x41; int x42; int x43; int x44; int x45; struct HGCache { void /* function */ **x0; int x1; struct HGCacheEntry *x2; struct HGCacheEntry *x3; struct HGCacheEntry *x4; struct _opaque_pthread_mutex_t { long long x0; char x1[56]; } x5; } x46; BOOL x47; BOOL x48; BOOL x49; unsigned int x50; struct HGLimits *x51[2]; int x52; struct HGDotGraph { struct map<unsigned long, HGDotGraph::Node, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, HGDotGraph::Node> > > { struct __tree<std::__1::__value_type<unsigned long, HGDotGraph::Node>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, HGDotGraph::Node>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, HGDotGraph::Node> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, HGDotGraph::Node>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, HGDotGraph::Node>, std::__1::less<unsigned long>, true> > { unsigned long long x0; } x2; } x0; } x0; struct map<std::__1::tuple<unsigned long, unsigned long>, HGDotGraph::Edge, std::__1::less<std::__1::tuple<unsigned long, unsigned long> >, std::__1::allocator<std::__1::pair<const std::__1::tuple<unsigned long, unsigned long>, HGDotGraph::Edge> > > { struct __tree<std::__1::__value_type<std::__1::tuple<unsigned long, unsigned long>, HGDotGraph::Edge>, std::__1::__map_value_compare<std::__1::tuple<unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned long, unsigned long>, HGDotGraph::Edge>, std::__1::less<std::__1::tuple<unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned long, unsigned long>, HGDotGraph::Edge> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned long, unsigned long>, HGDotGraph::Edge>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::tuple<unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned long, unsigned long>, HGDotGraph::Edge>, std::__1::less<std::__1::tuple<unsigned long, unsigned long> >, true> > { unsigned long long x0; } x2; } x0; } x1; struct __sFILE *x2; BOOL x3; BOOL x4; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x5; } x53; struct HGBufferDumper { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x2; int x3; int x4; BOOL x5; } x54; unsigned int x55; int x56; unsigned long long x57; unsigned long long x58; int x59; struct HGLimitsCache *x60; struct HGRenderQueue *x61; void *x62; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x63; } *)a3;
- (struct HGRef<HGNode> { struct HGNode *x0; })hgNodeForTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 inputs:(const struct PVInputHGNodeMap<unsigned int> { struct map<unsigned int, HGRef<HGNode>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, HGRef<HGNode> > > > { struct __tree<std::__1::__value_type<unsigned int, HGRef<HGNode> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, HGRef<HGNode> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, HGRef<HGNode> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, HGRef<HGNode> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, HGRef<HGNode> >, std::__1::less<unsigned int>, true> > { unsigned long long x0; } x2; } x0; } x0; struct map<unsigned int, PCRect<double>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, PCRect<double> > > > { struct __tree<std::__1::__value_type<unsigned int, PCRect<double> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, PCRect<double> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, PCRect<double> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, PCRect<double> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, PCRect<double> >, std::__1::less<unsigned int>, true> > { unsigned long long x0; } x2; } x0; } x1; struct map<unsigned int, PCMatrix44Tmpl<double>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, PCMatrix44Tmpl<double> > > > { struct __tree<std::__1::__value_type<unsigned int, PCMatrix44Tmpl<double> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, PCMatrix44Tmpl<double> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, PCMatrix44Tmpl<double> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, PCMatrix44Tmpl<double> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, PCMatrix44Tmpl<double> >, std::__1::less<unsigned int>, true> > { unsigned long long x0; } x2; } x0; } x2; struct map<unsigned int, HGRef<HGCVBitmap>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, HGRef<HGCVBitmap> > > > { struct __tree<std::__1::__value_type<unsigned int, HGRef<HGCVBitmap> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, HGRef<HGCVBitmap> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, HGRef<HGCVBitmap> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, HGRef<HGCVBitmap> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, HGRef<HGCVBitmap> >, std::__1::less<unsigned int>, true> > { unsigned long long x0; } x2; } x0; } x3; struct map<unsigned int, int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > > { struct __tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true> > { unsigned long long x0; } x2; } x0; } x4; } *)a1 renderer:(const struct HGRef<HGRenderer> { struct HGRenderer *x0; } *)a2 igContext:(struct HGRef<PVInstructionGraphContext> { struct PVInstructionGraphContext *x0; })a3;
- (void)assertDocumentIsLocked;
- (void)assertDocumentIsUnlocked;
- (void)assertDocumentStatusIsNotStarted;
- (void)assertDocumentStatusIsInProgress;
- (void)assertDocumentStatusIsLoaded;
- (void)assertDocumentStatusIsReady;
- (void)assertDocumentStatusIsLoadedOrReady;
- (void)assertDocumentStatusIsReadyAfterLoad:(BOOL)a0;
- (void)assertDocumentStatusIsError;
- (id)textEditingBounds:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (id)textTransformsAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 forcePosterFrame:(BOOL)a1 includeTransformAnimation:(BOOL)a2 viewSize:(struct CGSize { double x0; double x1; })a3 viewOrigin:(int)a4;
- (BOOL)supportsExtendedRangeInputs;
- (BOOL)isTranscription;
- (void)clearTranscription;
- (void)resetToDefaultTranscriptionForLocaleID:(id)a0;
- (BOOL)transcriptionHitTest:(struct CGPoint { double x0; double x1; })a0 time:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
- (void)updateLiveTitlePickerLoopTime:(BOOL)a0;
- (void)setNodeIDToCache:(unsigned int)a0;
- (struct FigTime { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; })motionTimeFromEffectTime_NoLock:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 effectRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a1 forcePosterFrame:(BOOL)a2;
- (void)runEnsuringDocumentReadyAndLockingDocument:(id /* block */)a0;
- (void)didSetCacheInvalidatingParameter_NoLock:(id)a0 forKey:(id)a1;
- (void)setTopLevelGroupTransform:(id)a0;
- (void)enableCameraOverride:(id)a0 projection:(id)a1;
- (void)disableCameraOverride;
- (BOOL)isCameraOverrideEnabled;
- (void)runEnsuringDocumentReady:(id /* block */)a0;
- (id)publishedParams_NoLock:(const struct PVMotionDocumentInfo { void *x0; struct _OZXDocumentInfo { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; double x7; unsigned int x8; double x9; unsigned int x10; unsigned int x11; unsigned int x12; double x13; unsigned int x14; unsigned int x15[16]; } x1; unsigned int x2; int x3; struct map<unsigned int, unsigned int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int> > > *x4; struct { long long x0; int x1; unsigned int x2; long long x3; } x5; struct CGSize { double x0; double x1; } x6; } *)a0;
- (void)setNeedsToUpdateSceneDuration;
- (void)disableElementWithPublishedParam:(struct PCString { struct __CFString *x0; } *)a0 disable:(BOOL)a1;
- (BOOL)supportsParam:(id)a0;
- (void)runWithDocument_NoLock:(id /* block */)a0;
- (id)initWithContentID:(id)a0 andDictionary:(id)a1;
- (void)loadEffectInternal;
- (id)publishedParam_NoLock:(const struct PVMotionDocumentInfo { void *x0; struct _OZXDocumentInfo { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; double x7; unsigned int x8; double x9; unsigned int x10; unsigned int x11; unsigned int x12; double x13; unsigned int x14; unsigned int x15[16]; } x1; unsigned int x2; int x3; struct map<unsigned int, unsigned int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int> > > *x4; struct { long long x0; int x1; unsigned int x2; long long x3; } x5; struct CGSize { double x0; double x1; } x6; } *)a0 forKey:(id)a1 atTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a2 includeHidden:(BOOL)a3;
- (void)_configureComponents;
- (BOOL)shouldRenderPreviewAtPosterTime;
- (BOOL)hasBuiltInEnvironment;
- (void)applyInspectableProperties;
- (void)_documentDidUnload_NoLock;
- (id)projectURL;
- (id)projectPath;
- (void)loadDocument;
- (void)buildDropZoneIdMap;
- (void)applyInspectableProperties_NoLock;
- (void)updateSceneDuration_NoLock;
- (void)runLockingDocument:(id /* block */)a0;
- (BOOL)isForceRenderAtPosterFrameEnabled;
- (int)posterFrameTime_NoLock:(struct FigTime { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; } *)a0;
- (struct FigTime { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; })motionTimeFromEffectTime_NoLock:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 effectRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a1;
- (BOOL)isVisibleAtTime_NoLock:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 timedProperties:(id)a1 defaultProperties:(id)a2;
- (void)setTopLevelOpacity:(double)a0;
- (BOOL)isRenderCachingDisabled_NoLock:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (BOOL)isSketch;
- (void)adjustCutawayInputs:(struct map<unsigned int, HGRef<HGNode>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, HGRef<HGNode> > > > { struct __tree<std::__1::__value_type<unsigned int, HGRef<HGNode> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, HGRef<HGNode> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, HGRef<HGNode> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, HGRef<HGNode> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, HGRef<HGNode> >, std::__1::less<unsigned int>, true> > { unsigned long long x0; } x2; } x0; } *)a0 splitCropRectA:(id)a1 splitCropRectB:(id)a2 pipRect:(id)a3 pipScaleFactor:(id)a4 renderScale:(float)a5 pipNeedsCrop:(BOOL)a6;
- (void)adjustTransitionInputs:(struct map<unsigned int, HGRef<HGNode>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, HGRef<HGNode> > > > { struct __tree<std::__1::__value_type<unsigned int, HGRef<HGNode> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, HGRef<HGNode> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, HGRef<HGNode> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, HGRef<HGNode> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, HGRef<HGNode> >, std::__1::less<unsigned int>, true> > { unsigned long long x0; } x2; } x0; } *)a0 renderScale:(float)a1 renderer:(const struct HGRef<HGRenderer> { struct HGRenderer *x0; } *)a2 inputANeedsBackground:(BOOL)a3 inputBNeedsBackground:(BOOL)a4 slideCropRectA:(id)a5 slideCropRectB:(id)a6;
- (void)adjustPosition:(id)a0;
- (void)updateSketchAnimation:(id)a0 defaultProperties:(id)a1 time:(struct { long long x0; int x1; unsigned int x2; long long x3; })a2;
- (void)adjustCamera:(id)a0;
- (struct HGRect { int x0; int x1; int x2; int x3; })makeCropRectForDOD:(struct HGRect { int x0; int x1; int x2; int x3; })a0 renderRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 renderScale:(float)a2;
- (void)setIsFrontFacingCamera:(BOOL)a0;
- (void)setQuaternion:(double)a0 :(double)a1 :(double)a2 :(double)a3;
- (void)setEffectOutputAspectWithNumber:(id)a0;
- (void)adjustKenBurnsAnimation:(id)a0;
- (void)adjustCutawayBorder:(id)a0;
- (void)adjustCutawayFadeAnimation:(id)a0;
- (void)setMaskPoints:(id)a0;
- (void)setSketchStrokes:(id)a0;
- (void)setupPublishedParameters:(id)a0;
- (void)setBuildInEnabled:(BOOL)a0;
- (void)setBuildOutEnabled:(BOOL)a0;
- (void)setForceDisableLoop:(BOOL)a0;
- (void)setForceDisableBuildAnimation:(BOOL)a0;
- (void)disableBackgroundMovie:(BOOL)a0;
- (void)updateInspectableProperties_NoLock:(id)a0 effectTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
- (void)computeIntroOutroPoints;
- (BOOL)parameterInvalidatesCache_NoLock:(id)a0;
- (BOOL)didCacheInvalidatingParameterChange_NoLock:(id)a0 key:(id)a1;
- (BOOL)hasAllNecessaryResources;
- (void)setupTransitionParameters:(id)a0;

@end
