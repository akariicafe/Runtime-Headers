@class NSString, NSURL, PVInstructionGraphNode, PVImageBuffer, NSDictionary, NSObject, PVColorSpace, PVCompositeDelegateEffect;
@protocol PVCompositeDelegate, PVImageSeqDelegate;

@interface PVInstructionGraphSourceCompositeNode : PVInstructionGraphSourceNode {
    struct HGRef<PVRenderManager> { struct PVRenderManager *m_Obj; } _renderManager;
}

@property (nonatomic) int nodeType;
@property (nonatomic) int trackID;
@property (retain, nonatomic) NSURL *imageURL;
@property (retain, nonatomic) NSString *imageKey;
@property (retain, nonatomic) PVImageBuffer *imageBuffer;
@property (nonatomic) struct CGSize { double width; double height; } outputSize;
@property (nonatomic) unsigned int outputFormat;
@property (retain, nonatomic) PVInstructionGraphNode *graphNode;
@property (retain, nonatomic) NSDictionary *inputMap;
@property (retain, nonatomic) id<PVImageSeqDelegate> imageSeqDelegate;
@property (retain, nonatomic) id<PVCompositeDelegate> renderDelegate;
@property (retain, nonatomic) NSObject *metadata;
@property (retain, nonatomic) id userContext;
@property (nonatomic) BOOL canPreprocess;
@property (nonatomic) BOOL canRender;
@property (retain, nonatomic) PVCompositeDelegateEffect *delegateEffect;
@property (retain, nonatomic) PVColorSpace *colorSpace;

+ (id)newSourceCompositeNodeWithDelegate:(id)a0 inputs:(id)a1 userContext:(id)a2 outputSize:(struct CGSize { double x0; double x1; })a3 outputFormat:(unsigned int)a4;
+ (id)newSourceCompositeNodeWithURL:(id)a0 key:(id)a1 imageDelegate:(id)a2;
+ (id)newSourceCompositeNodeWithPVImageBuffer:(id)a0;
+ (id)newSourceCompositeNodeWithTrack:(int)a0 outputSize:(struct CGSize { double x0; double x1; })a1;
+ (id)newSourceCompositeNodeWithGraphNode:(id)a0 outputSize:(struct CGSize { double x0; double x1; })a1 outputFormat:(unsigned int)a2;
+ (id)newSourceCompositeNodeWithDelegate:(id)a0 inputs:(id)a1 metadata:(id)a2 outputSize:(struct CGSize { double x0; double x1; })a3 outputFormat:(unsigned int)a4;

- (id)init;
- (void).cxx_destruct;
- (id)requiredSourceTrackIDs;
- (id).cxx_construct;
- (id)getAllSourceNodes;
- (void)loadIGNode:(struct HGRef<PVInstructionGraphContext> { struct PVInstructionGraphContext *x0; })a0 returnLoadedEffects:(id)a1;
- (struct HGRef<HGNode> { struct HGNode *x0; })internalHGNodeForTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 trackInputs:(const struct PVInputHGNodeMap<PVInstructionGraphSourceNode *> { struct map<PVInstructionGraphSourceNode *, HGRef<HGNode>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, HGRef<HGNode> > > > { struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode> >, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode> >, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode> >, std::__1::less<PVInstructionGraphSourceNode *>, true> > { unsigned long long x0; } x2; } x0; } x0; struct map<PVInstructionGraphSourceNode *, PCRect<double>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, PCRect<double> > > > { struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double> >, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double> >, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double> >, std::__1::less<PVInstructionGraphSourceNode *>, true> > { unsigned long long x0; } x2; } x0; } x1; struct map<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, PCMatrix44Tmpl<double> > > > { struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double> >, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double> >, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double> >, std::__1::less<PVInstructionGraphSourceNode *>, true> > { unsigned long long x0; } x2; } x0; } x2; struct map<PVInstructionGraphSourceNode *, HGRef<HGCVBitmap>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, HGRef<HGCVBitmap> > > > { struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGCVBitmap> >, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGCVBitmap> >, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGCVBitmap> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGCVBitmap> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGCVBitmap> >, std::__1::less<PVInstructionGraphSourceNode *>, true> > { unsigned long long x0; } x2; } x0; } x3; struct map<PVInstructionGraphSourceNode *, int, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, int> > > { struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, int>, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, int>, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, int> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, int>, std::__1::less<PVInstructionGraphSourceNode *>, true> > { unsigned long long x0; } x2; } x0; } x4; } *)a1 renderer:(const struct HGRef<HGRenderer> { struct HGRenderer *x0; } *)a2 igContext:(struct HGRef<PVInstructionGraphContext> { struct PVInstructionGraphContext *x0; })a3;
- (id)dotTreeLabel:(struct HGRef<PVInstructionGraphContext> { struct PVInstructionGraphContext *x0; })a0;
- (id)instructionGraphNodeDescription;
- (void)unloadIGNode;
- (struct PCRect<double> { double x0; double x1; double x2; double x3; })inputSizeForPVEffect:(id)a0 igContext:(struct HGRef<PVInstructionGraphContext> { struct PVInstructionGraphContext *x0; })a1;
- (struct PCMatrix44Tmpl<double> { double x0[4][4]; })pixelTransformForPVEffect:(id)a0 igContext:(struct HGRef<PVInstructionGraphContext> { struct PVInstructionGraphContext *x0; })a1;
- (void)addDotTreeLinks:(struct HGRef<PVInstructionGraphContext> { struct PVInstructionGraphContext *x0; })a0;
- (struct HGRef<HGNode> { struct HGNode *x0; })conformInputImage:(id)a0 colorSpace:(id)a1 renderer:(const struct HGRef<HGRenderer> { struct HGRenderer *x0; } *)a2 currentTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a3 igContext:(struct HGRef<PVInstructionGraphContext> { struct PVInstructionGraphContext *x0; })a4;
- (struct HGRef<HGNode> { struct HGNode *x0; })conformNode:(struct HGRef<HGNode> { struct HGNode *x0; })a0 toSize:(struct HGRect { int x0; int x1; int x2; int x3; })a1;
- (struct HGRef<HGNode> { struct HGNode *x0; })nodeForCompositeTrackMap:(const struct map<int, __CVBuffer *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, __CVBuffer *> > > { struct __tree<std::__1::__value_type<int, __CVBuffer *>, std::__1::__map_value_compare<int, std::__1::__value_type<int, __CVBuffer *>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, __CVBuffer *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, __CVBuffer *>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, __CVBuffer *>, std::__1::less<int>, true> > { unsigned long long x0; } x2; } x0; } *)a0;

@end
