@class PAEKeyerMatteTools, PAEKeyerPreprocess;

@interface PAEChromaKeyeriOS : PAEFilterDefaultBase {
    PAEKeyerMatteTools *_matteTools;
    PAEKeyerPreprocess *_preprocessTools;
    struct HGBitmapLoader { void /* function */ **x0; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x1; int x2; int x3; void *x4; int x5; unsigned int x6; int x7; int x8; float *x9; int x10; struct HGShaderEntry *x11; struct HGNodeInput **x12; int x13; struct HGBitmap *x14; BOOL x15; BOOL x16; BOOL x17; BOOL x18; BOOL x19; struct set<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> > { struct __tree<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<HGNodeInput *, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<HGNodeInput *> > { unsigned long long x0; } x2; } x0; } x20; int x21; struct HGNode *x22; struct HGRect { int x0; int x1; int x2; int x3; } x23; struct HGRect { int x0; int x1; int x2; int x3; } x24; struct HGRenderer *x25; struct HGBitmap *x26; struct HGNode *x27; int x28; int x29; int x30; struct HGRect { int x0; int x1; int x2; int x3; } x31; int x32; int x33; struct HGBitmap *x34; struct HGShaderBinding { int x0[1]; int x1; int x2; int x3; int x4; int x5; unsigned int x6; unsigned int x7; } x35; struct HGNodeChain *x36; struct HGShaderEntry *x37; int x38; BOOL x39; struct HGBlendingInfo { unsigned long long x0; int x1; int x2; int x3; int x4; int x5; int x6; } x40; float x41; struct HGRef<HGBitmap> { struct HGBitmap *x0; } x42; struct HGRef<HGBitmap> { struct HGBitmap *x0; } x43; struct HGRef<HGBitmap> { struct HGBitmap *x0; } x44; BOOL x45; BOOL x46; BOOL x47; int x48; struct HGBitmapLoader *x49; struct HGNode *x50; struct HGNode *x51; struct HGNode *x52; struct HGNode *x53; struct HGNode *x54; } *_lutsBitmapLoaderCache;
}

- (id)properties;
- (void)dealloc;
- (id)initWithAPIManager:(id)a0;
- (BOOL)addParameters;
- (BOOL)canThrowRenderOutput:(id)a0 withInput:(id)a1 withInfo:(struct { union { double x0; struct *x1; } x0; unsigned long long x1; unsigned long long x2; double x3; double x4; unsigned long long x5; })a2;
- (BOOL)frameSetup:(struct { union { double x0; struct *x1; } x0; unsigned long long x1; unsigned long long x2; double x3; double x4; unsigned long long x5; })a0 inputInfo:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; BOOL x7; double x8; })a1 hardware:(BOOL *)a2 software:(BOOL *)a3;
- (void)createLutForNode:(struct HGNode { void /* function */ **x0; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x1; int x2; int x3; void *x4; int x5; unsigned int x6; int x7; int x8; float *x9; int x10; struct HGShaderEntry *x11; struct HGNodeInput **x12; int x13; struct HGBitmap *x14; BOOL x15; BOOL x16; BOOL x17; BOOL x18; BOOL x19; struct set<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> > { struct __tree<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<HGNodeInput *, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<HGNodeInput *> > { unsigned long long x0; } x2; } x0; } x20; int x21; struct HGNode *x22; struct HGRect { int x0; int x1; int x2; int x3; } x23; struct HGRect { int x0; int x1; int x2; int x3; } x24; struct HGRenderer *x25; struct HGBitmap *x26; struct HGNode *x27; int x28; int x29; int x30; struct HGRect { int x0; int x1; int x2; int x3; } x31; int x32; int x33; struct HGBitmap *x34; struct HGShaderBinding { int x0[1]; int x1; int x2; int x3; int x4; int x5; unsigned int x6; unsigned int x7; } x35; struct HGNodeChain *x36; struct HGShaderEntry *x37; int x38; BOOL x39; struct HGBlendingInfo { unsigned long long x0; int x1; int x2; int x3; int x4; int x5; int x6; } x40; float x41; } *)a0 input:(int)a1 rect:(const struct HGRect { int x0; int x1; int x2; int x3; } *)a2 omKeyer:(struct PAEKeyerOMKeyer2D { void /* function */ **x0; float x1; float x2; struct pair<Vec2f, Vec2f> { struct Vec2f { float x0[2]; } x0; struct Vec2f { float x0[2]; } x1; } x3; struct pair<Vec2f, Vec2f> { struct Vec2f { float x0[2]; } x0; struct Vec2f { float x0[2]; } x1; } x4; float x5; float x6; struct Vec2f { float x0[2]; } x7; float *x8; struct vector<float, std::__1::allocator<float> > { float *x0; float *x1; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x0; } x2; } x9; struct OMUtilErf { struct vector<float, std::__1::allocator<float> > { float *x0; float *x1; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x0; } x2; } x0; } x10; struct OMUtilErf { struct vector<float, std::__1::allocator<float> > { float *x0; float *x1; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x0; } x2; } x0; } x11; struct Mat4f { struct Vec4f { float x0[4]; } x0[4]; } x12; struct vector<Vec3f, std::__1::allocator<Vec3f> > { struct Vec3f *x0; struct Vec3f *x1; struct __compressed_pair<Vec3f *, std::__1::allocator<Vec3f> > { struct Vec3f *x0; } x2; } x13; int x14; id x15; id x16; float x17; float x18; float x19; float x20; } *)a3;

@end
