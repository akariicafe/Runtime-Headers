@class PVTaskToken, PVVideoCompositionInstruction, NSString, PVVideoCompositing, AVAsynchronousVideoCompositionRequest, PVVideoCompositingContext;

@interface PVAVFRenderJobDelegate : NSObject <PVRenderJobDelegate> {
    PVVideoCompositing *m_compositor;
    AVAsynchronousVideoCompositionRequest *m_request;
    PVVideoCompositionInstruction *m_instruction;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } m_compositionTime;
    BOOL m_thumbnailCompositing;
    struct __CVBuffer { } *m_destinationPixelBuffer;
    struct PerfTimer { double _start; double _end; } m_timer;
    struct HGCVGLTextureFactory { void /* function */ **x0; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x1; struct HGRef<HGGLContext> { struct HGGLContext *x0; } x2; struct __CVOpenGLESTextureCache *x3; } *m_hgCVGLTextureFactory;
    struct HGRef<PVRenderManager> { struct PVRenderManager *m_Obj; } m_renderManager;
    struct HGRef<PVInstructionGraphContext> { struct PVInstructionGraphContext *m_Obj; } m_instructionGraphContext;
}

@property (readonly) struct { long long x0; int x1; unsigned int x2; long long x3; } compositionTime;
@property (readonly) PVVideoCompositionInstruction *compositionInstruction;
@property (readonly) AVAsynchronousVideoCompositionRequest *compositionRequest;
@property unsigned int minimumRequestCompletionTimeMS;
@property unsigned int parentCode;
@property unsigned int childCode;
@property (retain) PVTaskToken *token;
@property (readonly) unsigned int jobTypeTag;
@property (readonly) PVVideoCompositingContext *videoCompositingContext;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (unsigned int)jobTypeTag;

- (void).cxx_destruct;
- (id).cxx_construct;
- (void)finishCancelledJob;
- (int)jobPriority;
- (int)renderContextPriority;
- (void)buildGraph:(struct vector<HGRef<HGNode>, std::__1::allocator<HGRef<HGNode> > > { struct HGRef<HGNode> *x0; struct HGRef<HGNode> *x1; struct __compressed_pair<HGRef<HGNode> *, std::__1::allocator<HGRef<HGNode> > > { struct HGRef<HGNode> *x0; } x2; } *)a0 renderContext:(const struct HGRenderContext { void /* function */ **x0; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x1; struct shared_ptr<const HGComputeDevice> { struct HGComputeDevice *x0; struct __shared_weak_count *x1; } x2; int x3; int x4; int x5; struct HGRenderQueue *x6; struct HGSynchronizable *x7; struct HGSynchronizer *x8; struct HGRenderer *x9; int x10; int x11; int x12; BOOL x13; unsigned long long x14; unsigned long long x15; struct vector<float, std::__1::allocator<float> > { float *x0; float *x1; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x0; } x2; } x16; } *)a1 frameStats:(struct FrameStats { unsigned int x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; double x2; double x3; double x4; BOOL x5; BOOL x6; unsigned int x7; struct vector<double, std::__1::allocator<double> > { double *x0; double *x1; struct __compressed_pair<double *, std::__1::allocator<double> > { double *x0; } x2; } x8; } *)a2;
- (int)renderThreadPriority;
- (void)setupDestinationBuffers:(struct vector<HGRef<HGBitmap>, std::__1::allocator<HGRef<HGBitmap> > > { struct HGRef<HGBitmap> *x0; struct HGRef<HGBitmap> *x1; struct __compressed_pair<HGRef<HGBitmap> *, std::__1::allocator<HGRef<HGBitmap> > > { struct HGRef<HGBitmap> *x0; } x2; } *)a0 renderContext:(const struct HGRenderContext { void /* function */ **x0; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x1; struct shared_ptr<const HGComputeDevice> { struct HGComputeDevice *x0; struct __shared_weak_count *x1; } x2; int x3; int x4; int x5; struct HGRenderQueue *x6; struct HGSynchronizable *x7; struct HGSynchronizer *x8; struct HGRenderer *x9; int x10; int x11; int x12; BOOL x13; unsigned long long x14; unsigned long long x15; struct vector<float, std::__1::allocator<float> > { float *x0; float *x1; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x0; } x2; } x16; } *)a1 frameStats:(struct FrameStats { unsigned int x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; double x2; double x3; double x4; BOOL x5; BOOL x6; unsigned int x7; struct vector<double, std::__1::allocator<double> > { double *x0; double *x1; struct __compressed_pair<double *, std::__1::allocator<double> > { double *x0; } x2; } x8; } *)a2;
- (void)finishCompletedJob;
- (void)renderJobFinished:(struct HGRef<PVRenderJob> { struct PVRenderJob *x0; })a0;
- (unsigned long long)packedFamilyCode;
- (void)_setupGLTextureFactory:(const struct HGRenderContext { void /* function */ **x0; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x1; struct shared_ptr<const HGComputeDevice> { struct HGComputeDevice *x0; struct __shared_weak_count *x1; } x2; int x3; int x4; int x5; struct HGRenderQueue *x6; struct HGSynchronizable *x7; struct HGSynchronizer *x8; struct HGRenderer *x9; int x10; int x11; int x12; BOOL x13; unsigned long long x14; unsigned long long x15; struct vector<float, std::__1::allocator<float> > { float *x0; float *x1; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x0; } x2; } x16; } *)a0;
- (void)_setupInputs:(struct PVInputHGNodeMap<PVInstructionGraphSourceNode *> { struct map<PVInstructionGraphSourceNode *, HGRef<HGNode>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, HGRef<HGNode> > > > { struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode> >, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode> >, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode> >, std::__1::less<PVInstructionGraphSourceNode *>, true> > { unsigned long long x0; } x2; } x0; } x0; struct map<PVInstructionGraphSourceNode *, PCRect<double>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, PCRect<double> > > > { struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double> >, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double> >, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double> >, std::__1::less<PVInstructionGraphSourceNode *>, true> > { unsigned long long x0; } x2; } x0; } x1; struct map<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, PCMatrix44Tmpl<double> > > > { struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double> >, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double> >, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double> >, std::__1::less<PVInstructionGraphSourceNode *>, true> > { unsigned long long x0; } x2; } x0; } x2; struct map<PVInstructionGraphSourceNode *, HGRef<HGCVBitmap>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, HGRef<HGCVBitmap> > > > { struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGCVBitmap> >, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGCVBitmap> >, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGCVBitmap> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGCVBitmap> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGCVBitmap> >, std::__1::less<PVInstructionGraphSourceNode *>, true> > { unsigned long long x0; } x2; } x0; } x3; struct map<PVInstructionGraphSourceNode *, int, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, int> > > { struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, int>, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, int>, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, int> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, int>, std::__1::less<PVInstructionGraphSourceNode *>, true> > { unsigned long long x0; } x2; } x0; } x4; } *)a0 renderContext:(const struct HGRenderContext { void /* function */ **x0; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x1; struct shared_ptr<const HGComputeDevice> { struct HGComputeDevice *x0; struct __shared_weak_count *x1; } x2; int x3; int x4; int x5; struct HGRenderQueue *x6; struct HGSynchronizable *x7; struct HGSynchronizer *x8; struct HGRenderer *x9; int x10; int x11; int x12; BOOL x13; unsigned long long x14; unsigned long long x15; struct vector<float, std::__1::allocator<float> > { float *x0; float *x1; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x0; } x2; } x16; } *)a1 frameStats:(struct FrameStats { unsigned int x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; double x2; double x3; double x4; BOOL x5; BOOL x6; unsigned int x7; struct vector<double, std::__1::allocator<double> > { double *x0; double *x1; struct __compressed_pair<double *, std::__1::allocator<double> > { double *x0; } x2; } x8; } *)a2;
- (void)_buildGraph:(struct PVInputHGNodeMap<PVInstructionGraphSourceNode *> { struct map<PVInstructionGraphSourceNode *, HGRef<HGNode>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, HGRef<HGNode> > > > { struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode> >, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode> >, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode> >, std::__1::less<PVInstructionGraphSourceNode *>, true> > { unsigned long long x0; } x2; } x0; } x0; struct map<PVInstructionGraphSourceNode *, PCRect<double>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, PCRect<double> > > > { struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double> >, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double> >, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double> >, std::__1::less<PVInstructionGraphSourceNode *>, true> > { unsigned long long x0; } x2; } x0; } x1; struct map<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, PCMatrix44Tmpl<double> > > > { struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double> >, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double> >, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double> >, std::__1::less<PVInstructionGraphSourceNode *>, true> > { unsigned long long x0; } x2; } x0; } x2; struct map<PVInstructionGraphSourceNode *, HGRef<HGCVBitmap>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, HGRef<HGCVBitmap> > > > { struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGCVBitmap> >, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGCVBitmap> >, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGCVBitmap> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGCVBitmap> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGCVBitmap> >, std::__1::less<PVInstructionGraphSourceNode *>, true> > { unsigned long long x0; } x2; } x0; } x3; struct map<PVInstructionGraphSourceNode *, int, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, int> > > { struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, int>, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, int>, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, int> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, int>, std::__1::less<PVInstructionGraphSourceNode *>, true> > { unsigned long long x0; } x2; } x0; } x4; } *)a0 renderContext:(const struct HGRenderContext { void /* function */ **x0; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x1; struct shared_ptr<const HGComputeDevice> { struct HGComputeDevice *x0; struct __shared_weak_count *x1; } x2; int x3; int x4; int x5; struct HGRenderQueue *x6; struct HGSynchronizable *x7; struct HGSynchronizer *x8; struct HGRenderer *x9; int x10; int x11; int x12; BOOL x13; unsigned long long x14; unsigned long long x15; struct vector<float, std::__1::allocator<float> > { float *x0; float *x1; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x0; } x2; } x16; } *)a1 frameStats:(struct FrameStats { unsigned int x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; double x2; double x3; double x4; BOOL x5; BOOL x6; unsigned int x7; struct vector<double, std::__1::allocator<double> > { double *x0; double *x1; struct __compressed_pair<double *, std::__1::allocator<double> > { double *x0; } x2; } x8; } *)a2 outputNodes:(struct vector<HGRef<HGNode>, std::__1::allocator<HGRef<HGNode> > > { struct HGRef<HGNode> *x0; struct HGRef<HGNode> *x1; struct __compressed_pair<HGRef<HGNode> *, std::__1::allocator<HGRef<HGNode> > > { struct HGRef<HGNode> *x0; } x2; } *)a3;
- (id)initWithCompositor:(id)a0 request:(id)a1 compositionTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a2 thumbnailCompositing:(BOOL)a3;

@end
