@class PAEKeyer;

@interface PAEKeyerInitialize : NSObject {
    PAEKeyer *_keyer;
    id _apiManager;
}

+ (void)setInitialSamples:(struct vector<Vec3f, std::__1::allocator<Vec3f> > { struct Vec3f *x0; struct Vec3f *x1; struct __compressed_pair<Vec3f *, std::__1::allocator<Vec3f> > { struct Vec3f *x0; } x2; } *)a0 autokeySetupUtil:(id)a1 sampleBoxHalfDim:(float)a2;

- (void)dealloc;
- (void)calculateInitialSamples:(struct ColorHisto { struct vector<int, std::__1::allocator<int> > { int *x0; int *x1; struct __compressed_pair<int *, std::__1::allocator<int> > { int *x0; } x2; } x0; int x1; int x2; int x3; } *)a0 percentageOfBaseColorIncluded:(float)a1 use32x32x32:(BOOL)a2 autokeySetupUtil:(id)a3 samples:(struct vector<Vec3f, std::__1::allocator<Vec3f> > { struct Vec3f *x0; struct Vec3f *x1; struct __compressed_pair<Vec3f *, std::__1::allocator<Vec3f> > { struct Vec3f *x0; } x2; } *)a4;
- (BOOL)calculateInitialMatteWithInfo:(struct { union { double x0; struct *x1; } x0; unsigned long long x1; unsigned long long x2; double x3; double x4; unsigned long long x5; })a0 omSamples:(struct OMSamples { void /* function */ **x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; int x5; struct vector<OMSamplesElem *, std::__1::allocator<OMSamplesElem *> > *x6; struct vector<Vec3f, std::__1::allocator<Vec3f> > { struct Vec3f *x0; struct Vec3f *x1; struct __compressed_pair<Vec3f *, std::__1::allocator<Vec3f> > { struct Vec3f *x0; } x2; } x7; struct vector<Vec3f, std::__1::allocator<Vec3f> > { struct Vec3f *x0; struct Vec3f *x1; struct __compressed_pair<Vec3f *, std::__1::allocator<Vec3f> > { struct Vec3f *x0; } x2; } x8; struct vector<Vec3f, std::__1::allocator<Vec3f> > { struct Vec3f *x0; struct Vec3f *x1; struct __compressed_pair<Vec3f *, std::__1::allocator<Vec3f> > { struct Vec3f *x0; } x2; } x9; struct vector<std::__1::vector<Vec3f, std::__1::allocator<Vec3f> >, std::__1::allocator<std::__1::vector<Vec3f, std::__1::allocator<Vec3f> > > > { struct vector<Vec3f, std::__1::allocator<Vec3f> > *x0; struct vector<Vec3f, std::__1::allocator<Vec3f> > *x1; struct __compressed_pair<std::__1::vector<Vec3f, std::__1::allocator<Vec3f> > *, std::__1::allocator<std::__1::vector<Vec3f, std::__1::allocator<Vec3f> > > > { struct vector<Vec3f, std::__1::allocator<Vec3f> > *x0; } x2; } x10; struct vector<OMEdge, std::__1::allocator<OMEdge> > { struct OMEdge *x0; struct OMEdge *x1; struct __compressed_pair<OMEdge *, std::__1::allocator<OMEdge> > { struct OMEdge *x0; } x2; } x11; } *)a1 colorPrimaries:(int)a2 screenColor:(int *)a3 minGreenHueAngle:(float)a4 maxGreenHueAngle:(float)a5 greenChroma:(float)a6 minBlueHueAngle:(float)a7 maxBlueHueAngle:(float)a8 blueChroma:(float)a9 histoPercentageIncluded:(float)a10 use32x32x32:(BOOL)a11 simpleKey:(BOOL)a12;
- (id)initWithAPIManager:(id)a0 keyer:(id)a1;
- (BOOL)findSampleRectsWithInfo:(struct { union { double x0; struct *x1; } x0; unsigned long long x1; unsigned long long x2; double x3; double x4; unsigned long long x5; })a0 screenColor:(int *)a1 colorPrimaries:(int)a2 width:(int)a3 height:(int)a4 minGreenHueAngle:(float)a5 maxGreenHueAngle:(float)a6 greenChroma:(float)a7 minBlueHueAngle:(float)a8 maxBlueHueAngle:(float)a9 blueChroma:(float)a10 histoPercentageIncluded:(float)a11 omSamples:(struct OMSamples { void /* function */ **x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; int x5; struct vector<OMSamplesElem *, std::__1::allocator<OMSamplesElem *> > *x6; struct vector<Vec3f, std::__1::allocator<Vec3f> > { struct Vec3f *x0; struct Vec3f *x1; struct __compressed_pair<Vec3f *, std::__1::allocator<Vec3f> > { struct Vec3f *x0; } x2; } x7; struct vector<Vec3f, std::__1::allocator<Vec3f> > { struct Vec3f *x0; struct Vec3f *x1; struct __compressed_pair<Vec3f *, std::__1::allocator<Vec3f> > { struct Vec3f *x0; } x2; } x8; struct vector<Vec3f, std::__1::allocator<Vec3f> > { struct Vec3f *x0; struct Vec3f *x1; struct __compressed_pair<Vec3f *, std::__1::allocator<Vec3f> > { struct Vec3f *x0; } x2; } x9; struct vector<std::__1::vector<Vec3f, std::__1::allocator<Vec3f> >, std::__1::allocator<std::__1::vector<Vec3f, std::__1::allocator<Vec3f> > > > { struct vector<Vec3f, std::__1::allocator<Vec3f> > *x0; struct vector<Vec3f, std::__1::allocator<Vec3f> > *x1; struct __compressed_pair<std::__1::vector<Vec3f, std::__1::allocator<Vec3f> > *, std::__1::allocator<std::__1::vector<Vec3f, std::__1::allocator<Vec3f> > > > { struct vector<Vec3f, std::__1::allocator<Vec3f> > *x0; } x2; } x10; struct vector<OMEdge, std::__1::allocator<OMEdge> > { struct OMEdge *x0; struct OMEdge *x1; struct __compressed_pair<OMEdge *, std::__1::allocator<OMEdge> > { struct OMEdge *x0; } x2; } x11; } *)a12 viewingSetupMatte:(BOOL)a13 use32x32Histogram:(BOOL)a14 simpleKey:(BOOL)a15;

@end
