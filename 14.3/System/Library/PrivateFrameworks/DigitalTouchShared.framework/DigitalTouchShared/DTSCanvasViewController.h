@class NSTimer, NSString, ETMessage, ETBalloonPluginDataSource, DTSColorPicker, UIButton, ETCanvasView, NSMutableArray, AVPlayer;
@protocol DTSCanvasViewControllerSendDelegate;

@interface DTSCanvasViewController : UIViewController <ETCanvasViewDelegate, DTSColorPickerDelegate> {
    NSMutableArray *_unplayedMessages;
    BOOL _isPlayingMessage;
    UIButton *_replayButton;
    BOOL _showingReplayButton;
    NSTimer *_composeSessionEndTimer;
    AVPlayer *_videoPlayer;
    UIButton *_audioToggleButton;
    UIButton *_cancelButton;
    UIButton *_skipButton;
}

@property (retain, nonatomic) DTSColorPicker *colorPicker;
@property (weak, nonatomic) ETBalloonPluginDataSource *dataSource;
@property (copy, nonatomic) id /* block */ balloonPlaybackCompletion;
@property (retain, nonatomic) ETMessage *messageForReplay;
@property (weak, nonatomic) id<DTSCanvasViewControllerSendDelegate> sendDelegate;
@property (nonatomic) unsigned short composingMessageType;
@property (nonatomic, getter=isComposingCompositeMessage) BOOL composingCompositeMessage;
@property (nonatomic, getter=isPlayingCompositeMessage) BOOL playingCompositeMessage;
@property (nonatomic) double mediaMessagePlayTrackerTime;
@property (nonatomic, getter=isPaused) BOOL paused;
@property (nonatomic, getter=isComposeDisabled) BOOL composeDisabled;
@property (nonatomic, getter=isAutoPlayOnAppearanceDisabled) BOOL autoPlayOnAppearanceDisabled;
@property (nonatomic) BOOL ignoreAppearanceCallbacks;
@property (retain, nonatomic) ETCanvasView *canvasView;
@property (nonatomic, getter=isPlayingMessages) BOOL playingMessages;
@property (retain, nonatomic) ETMessage *playingMessage;
@property (nonatomic) BOOL deferMessageSend;
@property (readonly, nonatomic) NSMutableArray *deferredMessages;
@property (nonatomic) BOOL usesCompactKeyboardLayout;
@property (nonatomic) BOOL overrideAudioDefaultToOff;
@property (nonatomic, getter=isPlaybackEnabled) BOOL playbackEnabled;
@property (nonatomic) double bottomMargin;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)audioToggleOffImage;
+ (id)audioToggleOnImage;
+ (id)replayButtonFont;

- (void)_applicationDidEnterBackground;
- (id)init;
- (BOOL)_isVisible;
- (void).cxx_destruct;
- (void)viewDidLayoutSubviews;
- (void)viewWillDisappear:(BOOL)a0;
- (void)replay;
- (id)_skipButton;
- (void)_applicationWillResignActive;
- (BOOL)shouldAutorotate;
- (void)_cancelButtonTapped;
- (id)_cancelButton;
- (void)viewDidAppear:(BOOL)a0;
- (void)viewDidDisappear:(BOOL)a0;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewDidLoad;
- (void)_applicationDidBecomeActive;
- (void)viewWillLayoutSubviews;
- (BOOL)_shouldShowCancelButton;
- (void)colorPickerSelectedColorDidChange:(id)a0;
- (void)colorPickerTapped:(id)a0;
- (long long)recentHeartRate;
- (BOOL)canvasViewShouldUseFastVerticalWisp:(id)a0;
- (void)canvasView:(id)a0 didBeginComposingMessageType:(unsigned short)a1;
- (void)canvasView:(id)a0 didEndComposingMessageType:(unsigned short)a1;
- (void)canvasView:(id)a0 sendMessage:(id)a1;
- (void)canvasViewDidPause:(id)a0;
- (void)canvasViewDidUnpause:(id)a0;
- (BOOL)canvasView:(id)a0 tapRecognizerShouldBegin:(id)a1;
- (void)canvasView:(id)a0 didUpdateComposingMessageType:(unsigned short)a1;
- (void)canvasViewDidBeginStroke:(id)a0;
- (void)canvasViewDidEndStroke:(id)a0;
- (BOOL)canvasViewShouldSendWithTimer:(id)a0;
- (void)canvasView:(id)a0 didBeginPlayingMessage:(id)a1;
- (void)canvasViewWillReachComposingSizeLimit:(id)a0;
- (void)canvasView:(id)a0 willEndPlayingMessage:(id)a1;
- (void)canvasView:(id)a0 didEndPlayingMessage:(id)a1;
- (void)canvasViewDidStartMediaAppearance:(id)a0;
- (void)canvasViewDidEndMediaAppearance:(id)a0;
- (void)canvasView:(id)a0 angerUsesForceTouch:(BOOL)a1;
- (void)_audioToggleButtonTapped;
- (void)_skipButtonTapped;
- (void)_sendAutosendingComposition;
- (BOOL)_canComposeAfterMediaPlayback;
- (void)startMessagePlaybackLoop;
- (void)_updateVideoPlayerUI;
- (void)_updatePlaybackControls;
- (void)_updateAudioOnOffButton;
- (double)_cornerButtonInset;
- (BOOL)_shouldShowSkipButton;
- (void)_updateSkipButtonFrame;
- (id)_replayButton;
- (BOOL)canReplay;
- (BOOL)canShowReplayButton;
- (void)_setShowingReplayButton:(BOOL)a0;
- (double)_rightButtonInset;
- (void)_updateAudioOnOffButtonImage;
- (void)_relinquishAudio;
- (BOOL)_shouldAutoSend;
- (void)_reloadUnplayedMessages;
- (void)_hideVideoPlayer;
- (void)_updateColorPickerEnabled;
- (void)updateVideoUI;
- (void)_setCachedMessageForReplay:(id)a0;
- (void)_playMessage:(id)a0;
- (void)_startVideoPlayerWithMessage:(id)a0;
- (void)_schedulePlaybackOfCompositeMessageContent:(id)a0;
- (double)_nonAnimatedMessagePlaybackDuration;
- (void)_updateCanvasInteractionEnabled;
- (void)willBeginSessionPlayback;
- (BOOL)_shouldDimColorPicker;
- (void)didChangeColorPickerColor;
- (BOOL)_usingDemoHook;
- (void)_exportDemoHookMessage;
- (void)_sendDemoHookMessage;
- (void)_showDemoHookAlertWithTitle:(id)a0 message:(id)a1;
- (void)willEndSessionPlaybackInterrupted:(BOOL)a0;
- (BOOL)_canLoopMessageDuringPlayback:(id)a0;
- (void)_continueMessagePlaybackLoopWithDelay:(BOOL)a0;
- (BOOL)canExpireMessages;
- (void)didEndSessionPlayback;
- (void)_videoMessageDidFinishPlaying:(id)a0;
- (id)_playingParentMessage;
- (void)didBeginComposingMessage;
- (void)_startComposeSessionEndTimer;
- (void)didEndComposingMessage;
- (void)_updateSendButton;
- (BOOL)_tapRecognizerShouldBegin:(id)a0;
- (void)_setAngerUsesForceTouch:(BOOL)a0;
- (BOOL)_canStartMessagePlaybackLoop;
- (void)_playNextMessage;
- (void)_stopPlaybackAnimated:(BOOL)a0;
- (void)_composeSessionEndTimerFired;
- (BOOL)hasMessageForReplay;
- (void)addUnplayedMessage:(id)a0;
- (id)_audioToggleButton;
- (void)clearDeferredMessages;
- (void)_clearComposeSessionEndTimer;
- (void)_setReplayButton:(id)a0;
- (void)dataSource:(id)a0 didReceiveSessionMessage:(id)a1;
- (BOOL)dataSourceShouldUseDemoHook:(id)a0;
- (void)dataSource:(id)a0 startPlaybackWithCompletion:(id /* block */)a1;
- (BOOL)dataSource:(id)a0 addDemoHookToMessage:(id *)a1;
- (void)dataSourceStopPlayback:(id)a0;
- (BOOL)dataSourceViewIsMostlyVisible:(id)a0;
- (void)dataSource:(id)a0 didUpdateAttachmentURL:(id)a1 forMessageWithIdentifier:(id)a2;
- (double)minimumBottomMargin;

@end
