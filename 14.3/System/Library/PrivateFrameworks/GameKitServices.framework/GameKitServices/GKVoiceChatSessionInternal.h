@class GKVoiceChatServiceFocus, NSString, NSArray, GKRWLock, NSMutableDictionary, VoiceChatSessionRoster, GKInterfaceListener, GKSessionInternal, NSMutableArray, NSObject;
@protocol OS_dispatch_queue, GKVoiceChatSessionDelegate;

@interface GKVoiceChatSessionInternal : NSObject <GKSessionVoiceChatDelegate, GKVoiceChatClient, VideoConferenceSpeakingDelegate, InterfaceListenerDelegate> {
    NSString *_sessionName;
    unsigned int _conferenceID;
    BOOL activeSession;
    float sessionVolume;
    BOOL focusCallbacks;
    GKSessionInternal *_gkSession;
    NSString *_peerID;
    NSMutableArray *_connectedPeers;
    NSMutableArray *_connectedVoicePeers;
    NSMutableArray *_connectedFocusPeers;
    NSMutableArray *_mutedPeers;
    NSMutableArray *_myPausedList;
    NSMutableDictionary *_peerChannelQuality;
    BOOL needsRecalculateGoodChannels;
    int goodChannels;
    unsigned int talkingPeersLimit;
    BOOL isUsingSuppression;
    unsigned int _sessionState;
    GKRWLock *_rwLock;
    GKVoiceChatServiceFocus *_vcService;
    VoiceChatSessionRoster *_roster;
    NSObject<OS_dispatch_queue> *_sendQueue;
    id<GKVoiceChatSessionDelegate> delegate;
    unsigned int congestionState;
    id _publicWrapper;
    GKInterfaceListener *_wifiListener;
    BOOL _currentWifiState;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property id<GKVoiceChatSessionDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSString *sessionName;
@property (readonly, nonatomic) unsigned int conferenceID;
@property (readonly) NSArray *peerList;
@property (getter=isActiveSession) BOOL activeSession;
@property float sessionVolume;
@property unsigned int talkingPeersLimit;
@property BOOL isUsingSuppression;

+ (void)brokenHash:(id)a0 response:(char *)a1;

- (void)cleanup;
- (void)dealloc;
- (id)participantID;
- (BOOL)isEqual:(id)a0;
- (void)stopSession;
- (void)startSession;
- (void)session:(id)a0 peer:(id)a1 didChangeState:(unsigned int)a2;
- (void)setMute:(BOOL)a0 forPeer:(id)a1;
- (void)interfaceStateDidChangeWithWifiUp:(BOOL)a0 cellUp:(BOOL)a1;
- (void)networkStateDidChange;
- (void)lossRate:(float)a0 forParticipantID:(id)a1;
- (void)didStartSpeaking:(id)a0;
- (void)didStopSpeaking:(id)a0;
- (void)updatedConnectedPeers:(id)a0;
- (void)cleanupProc:(id)a0;
- (void)voiceChatService:(id)a0 sendData:(id)a1 toParticipantID:(id)a2;
- (void)informClientVoiceChatDidStart:(id)a0;
- (void)informClientVoiceChatDidStop:(id)a0;
- (void)voiceChatService:(id)a0 didReceiveInvitationFromParticipantID:(id)a1 callID:(unsigned int)a2;
- (void)voiceChatService:(id)a0 didStartWithParticipantID:(id)a1;
- (void)voiceChatService:(id)a0 didNotStartWithParticipantID:(id)a1 error:(id)a2;
- (void)voiceChatService:(id)a0 didStopWithParticipantID:(id)a1 error:(id)a2;
- (id)initWithGKSession:(id)a0 publicWrapper:(id)a1 sessionName:(id)a2;
- (BOOL)getMuteStateForPeer:(id)a0;
- (void)startSessionInternal;
- (void)stopSessionInternal;
- (void)calculateConferenceID;
- (id)encodePeerID:(id)a0;
- (void)updatedMutedPeers:(id)a0 forPeer:(id)a1;
- (void)sendMutedPeers;
- (void)updatedSubscribedBeaconList:(id)a0;
- (void)sendConnectedPeers;
- (void)informClientVoiceChatConnecting:(id)a0;
- (void)handlePeerDisconnected:(id)a0;
- (void)unPauseAll;
- (void)updatedFocusPeers:(id)a0;
- (void)informClientVoiceChatFocusChange:(id)a0;
- (void)addPeerToFocusPausedList:(id)a0;
- (int)goodChannels;
- (id)decodePeerID:(id)a0;
- (void)updatedFocusID:(unsigned int)a0;
- (void)parseMutedPeers:(id)a0 forPeer:(id)a1;
- (void)pauseAll;
- (void)pruneBadLinks;
- (void)removeFromFocusPausedList:(id)a0;
- (void)parseConnectedPeers:(id)a0;
- (unsigned int)peerCount;
- (void)session:(id)a0 didReceiveAudioPacket:(id)a1 fromPeerID:(id)a2;
- (void)session:(id)a0 didReceiveOOBAudioPacket:(id)a1 fromPeerID:(id)a2;
- (void)informClientVoiceChatCouldNotConnect:(id)a0;
- (void)informClientVoiceChatSpeaking:(id)a0;
- (void)informClientVoiceChatSilent:(id)a0;
- (int)calculateChannelQualities;

@end
