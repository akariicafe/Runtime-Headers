@class WebArchive, NSString, NSArray, ICSelectorDelayer, NSLayoutConstraint, NoteWKWebView, UIViewPrintFormatter;
@protocol NoteHTMLEditorViewActionDelegate, NoteHTMLEditorViewDelegate, NoteHTMLEditorViewLayoutDelegate;

@interface NoteHTMLEditorView : UIView <UIScrollViewDelegate, WKUIDelegatePrivate, _WKInputDelegate, WKNavigationDelegate, WKScriptMessageHandler, WKURLSchemeHandler>

@property (copy, nonatomic) NSString *htmlStringToLoad;
@property (copy, nonatomic) NSArray *attachmentsToLoad;
@property (retain, nonatomic) ICSelectorDelayer *updateContentDelayer;
@property (nonatomic) BOOL updatingContent;
@property (weak, nonatomic) id<NoteHTMLEditorViewDelegate> delegate;
@property (weak, nonatomic) id<NoteHTMLEditorViewActionDelegate> actionDelegate;
@property (weak, nonatomic) id<NoteHTMLEditorViewLayoutDelegate> layoutDelegate;
@property (retain, nonatomic) NSLayoutConstraint *contentSizeHeightConstraint;
@property (retain, nonatomic) NSLayoutConstraint *contentSizeWidthConstraint;
@property (retain, nonatomic) NoteWKWebView *webView;
@property (copy, nonatomic) NSString *htmlString;
@property (copy, nonatomic) NSString *title;
@property (copy, nonatomic) NSString *text;
@property (copy, nonatomic) NSArray *attachmentContentIDs;
@property (nonatomic) BOOL hasAttachments;
@property (readonly, nonatomic) UIViewPrintFormatter *viewPrintFormatter;
@property (readonly, nonatomic) WebArchive *webArchive;
@property (nonatomic, getter=isEditable) BOOL editable;
@property (nonatomic, getter=isEditing) BOOL editing;
@property (nonatomic) long long selectionLength;
@property (nonatomic) double textZoomFactor;
@property (nonatomic) unsigned short listStyle;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)baseHTMLString;

- (BOOL)canPerformAction:(SEL)a0 withSender:(id)a1;
- (void)updateContent;
- (void)scrollSelectionToVisible:(BOOL)a0;
- (void)insertImage:(id)a0;
- (void)webView:(id)a0 didFinishNavigation:(id)a1;
- (void)webViewWebContentProcessDidTerminate:(id)a0;
- (void)startEditing;
- (void).cxx_destruct;
- (void)scrollViewDidScroll:(id)a0;
- (BOOL)_webView:(id)a0 performDataInteractionOperationWithItemProviders:(id)a1;
- (BOOL)_webView:(id)a0 focusShouldStartInputSession:(id)a1;
- (void)_webView:(id)a0 didStartInputSession:(id)a1;
- (void)_webView:(id)a0 didInsertAttachment:(id)a1 withSource:(id)a2;
- (void)_webView:(id)a0 contextMenuDidEndForElement:(id)a1;
- (id)initWithCoder:(id)a0;
- (id)webViewConfiguration;
- (BOOL)isFirstResponder;
- (void)webView:(id)a0 startURLSchemeTask:(id)a1;
- (void)webView:(id)a0 stopURLSchemeTask:(id)a1;
- (void)_webView:(id)a0 contextMenuConfigurationForElement:(id)a1 completionHandler:(id /* block */)a2;
- (void)userContentController:(id)a0 didReceiveScriptMessage:(id)a1;
- (void)webView:(id)a0 decidePolicyForNavigationAction:(id)a1 decisionHandler:(id /* block */)a2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setSelectionToEnd;
- (id)targetForAction:(SEL)a0 withSender:(id)a1;
- (long long)_webView:(id)a0 dataOwnerForDragSession:(id)a1;
- (void)setSelectionToStart;
- (long long)_webView:(id)a0 dataOwnerForDropSession:(id)a1;
- (void)setHtmlString:(id)a0 attachments:(id)a1;
- (void)getRectForSelectionWithCompletion:(id /* block */)a0;
- (void)replaceSelectionWithAttachmentPresentation:(id)a0;
- (void)copyNoteHTMLToPasteboard;
- (void)insertHTMLString:(id)a0;
- (void)insertLinkWithURL:(id)a0 title:(id)a1;
- (void)setupWebView;
- (void)menuControllerDidHide:(id)a0;
- (id)jsonStringFromDictionaryOrArray:(id)a0;
- (void)setEnableSmartLists:(BOOL)a0;
- (void)setEnableAttachments:(BOOL)a0;
- (void)updateDataDetectors;
- (id)attachmentInfoDictionaryForAttachmentPresentation:(id)a0;
- (void)undoablyRemoveAttachmentPresentations:(id)a0 undoManager:(id)a1;
- (void)undoablyReplaceSelectionWithAttachmentPresentations:(id)a0 undoManager:(id)a1;
- (void)adoptEditableState;
- (void)updateMenuController;
- (void)stopEditingWithCompletion:(id /* block */)a0;
- (void)replaceContentIDs:(id)a0;
- (id)contextMenuConfigurationForElement:(id)a0 presentation:(id)a1;
- (void)setEnableShiftNewlinesInSmartLists:(BOOL)a0;
- (void)insertLinksWithURLs:(id)a0 titles:(id)a1;
- (void)stopEditing;
- (void)insertBulletedList:(id)a0;
- (void)insertDashedList:(id)a0;
- (void)insertOrderedList:(id)a0;
- (void)removeStyle:(id)a0;

@end
