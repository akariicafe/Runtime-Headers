@class NSString, AVStreamDataParser;

@interface WebAVStreamDataParserListener : NSObject <AVStreamDataParserOutputHandling> {
    AVStreamDataParser *_parser;
}

@property struct SourceBufferParserAVFObjC { void /* function */ **x0; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x1; struct Function<void (WebCore::SourceBufferPrivateClient::InitializationSegment &&)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, WebCore::SourceBufferPrivateClient::InitializationSegment &&>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WebCore::SourceBufferPrivateClient::InitializationSegment &&> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, WebCore::SourceBufferPrivateClient::InitializationSegment &&> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WebCore::SourceBufferPrivateClient::InitializationSegment &&> > > { struct CallableWrapperBase<void, WebCore::SourceBufferPrivateClient::InitializationSegment &&> *x0; } x0; } x0; } x2; struct Function<void (unsigned long long)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, unsigned long long>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, unsigned long long> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, unsigned long long> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, unsigned long long> > > { struct CallableWrapperBase<void, unsigned long long> *x0; } x0; } x0; } x3; struct Function<void (WTF::Ref<WebCore::MediaSample, WTF::DumbPtrTraits<WebCore::MediaSample> > &&, unsigned long long, const WTF::String &)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, WTF::Ref<WebCore::MediaSample, WTF::DumbPtrTraits<WebCore::MediaSample> > &&, unsigned long long, const WTF::String &>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::Ref<WebCore::MediaSample, WTF::DumbPtrTraits<WebCore::MediaSample> > &&, unsigned long long, const WTF::String &> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, WTF::Ref<WebCore::MediaSample, WTF::DumbPtrTraits<WebCore::MediaSample> > &&, unsigned long long, const WTF::String &> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::Ref<WebCore::MediaSample, WTF::DumbPtrTraits<WebCore::MediaSample> > &&, unsigned long long, const WTF::String &> > > { struct CallableWrapperBase<void, WTF::Ref<WebCore::MediaSample, WTF::DumbPtrTraits<WebCore::MediaSample> > &&, unsigned long long, const WTF::String &> *x0; } x0; } x0; } x4; struct Function<void (unsigned long long)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, unsigned long long>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, unsigned long long> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, unsigned long long> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, unsigned long long> > > { struct CallableWrapperBase<void, unsigned long long> *x0; } x0; } x0; } x5; struct Function<void (WTF::Ref<JSC::GenericTypedArrayView<JSC::Uint8Adaptor>, WTF::DumbPtrTraits<JSC::GenericTypedArrayView<JSC::Uint8Adaptor> > > &&, unsigned long long)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, WTF::Ref<JSC::GenericTypedArrayView<JSC::Uint8Adaptor>, WTF::DumbPtrTraits<JSC::GenericTypedArrayView<JSC::Uint8Adaptor> > > &&, unsigned long long>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::Ref<JSC::GenericTypedArrayView<JSC::Uint8Adaptor>, WTF::DumbPtrTraits<JSC::GenericTypedArrayView<JSC::Uint8Adaptor> > > &&, unsigned long long> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, WTF::Ref<JSC::GenericTypedArrayView<JSC::Uint8Adaptor>, WTF::DumbPtrTraits<JSC::GenericTypedArrayView<JSC::Uint8Adaptor> > > &&, unsigned long long> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::Ref<JSC::GenericTypedArrayView<JSC::Uint8Adaptor>, WTF::DumbPtrTraits<JSC::GenericTypedArrayView<JSC::Uint8Adaptor> > > &&, unsigned long long> > > { struct CallableWrapperBase<void, WTF::Ref<JSC::GenericTypedArrayView<JSC::Uint8Adaptor>, WTF::DumbPtrTraits<JSC::GenericTypedArrayView<JSC::Uint8Adaptor> > > &&, unsigned long long> *x0; } x0; } x0; } x6; struct WeakPtrFactory<WebCore::SourceBufferParserAVFObjC, WTF::EmptyCounter> { struct RefPtr<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > { struct WeakPtrImpl<WTF::EmptyCounter> *x0; } x0; } x7; struct RetainPtr<AVStreamDataParser> { void *x0; } x8; struct RetainPtr<WebAVStreamDataParserListener> { void *x0; } x9; BOOL x10; BOOL x11; struct RefPtr<const WTF::Logger, WTF::DumbPtrTraits<const WTF::Logger> > { struct Logger *x0; } x12; void *x13; } *parent;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (id)initWithParser:(id)a0 parent:(struct SourceBufferParserAVFObjC { void /* function */ **x0; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x1; struct Function<void (WebCore::SourceBufferPrivateClient::InitializationSegment &&)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, WebCore::SourceBufferPrivateClient::InitializationSegment &&>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WebCore::SourceBufferPrivateClient::InitializationSegment &&> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, WebCore::SourceBufferPrivateClient::InitializationSegment &&> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WebCore::SourceBufferPrivateClient::InitializationSegment &&> > > { struct CallableWrapperBase<void, WebCore::SourceBufferPrivateClient::InitializationSegment &&> *x0; } x0; } x0; } x2; struct Function<void (unsigned long long)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, unsigned long long>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, unsigned long long> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, unsigned long long> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, unsigned long long> > > { struct CallableWrapperBase<void, unsigned long long> *x0; } x0; } x0; } x3; struct Function<void (WTF::Ref<WebCore::MediaSample, WTF::DumbPtrTraits<WebCore::MediaSample> > &&, unsigned long long, const WTF::String &)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, WTF::Ref<WebCore::MediaSample, WTF::DumbPtrTraits<WebCore::MediaSample> > &&, unsigned long long, const WTF::String &>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::Ref<WebCore::MediaSample, WTF::DumbPtrTraits<WebCore::MediaSample> > &&, unsigned long long, const WTF::String &> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, WTF::Ref<WebCore::MediaSample, WTF::DumbPtrTraits<WebCore::MediaSample> > &&, unsigned long long, const WTF::String &> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::Ref<WebCore::MediaSample, WTF::DumbPtrTraits<WebCore::MediaSample> > &&, unsigned long long, const WTF::String &> > > { struct CallableWrapperBase<void, WTF::Ref<WebCore::MediaSample, WTF::DumbPtrTraits<WebCore::MediaSample> > &&, unsigned long long, const WTF::String &> *x0; } x0; } x0; } x4; struct Function<void (unsigned long long)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, unsigned long long>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, unsigned long long> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, unsigned long long> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, unsigned long long> > > { struct CallableWrapperBase<void, unsigned long long> *x0; } x0; } x0; } x5; struct Function<void (WTF::Ref<JSC::GenericTypedArrayView<JSC::Uint8Adaptor>, WTF::DumbPtrTraits<JSC::GenericTypedArrayView<JSC::Uint8Adaptor> > > &&, unsigned long long)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, WTF::Ref<JSC::GenericTypedArrayView<JSC::Uint8Adaptor>, WTF::DumbPtrTraits<JSC::GenericTypedArrayView<JSC::Uint8Adaptor> > > &&, unsigned long long>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::Ref<JSC::GenericTypedArrayView<JSC::Uint8Adaptor>, WTF::DumbPtrTraits<JSC::GenericTypedArrayView<JSC::Uint8Adaptor> > > &&, unsigned long long> > > { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, WTF::Ref<JSC::GenericTypedArrayView<JSC::Uint8Adaptor>, WTF::DumbPtrTraits<JSC::GenericTypedArrayView<JSC::Uint8Adaptor> > > &&, unsigned long long> *, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, WTF::Ref<JSC::GenericTypedArrayView<JSC::Uint8Adaptor>, WTF::DumbPtrTraits<JSC::GenericTypedArrayView<JSC::Uint8Adaptor> > > &&, unsigned long long> > > { struct CallableWrapperBase<void, WTF::Ref<JSC::GenericTypedArrayView<JSC::Uint8Adaptor>, WTF::DumbPtrTraits<JSC::GenericTypedArrayView<JSC::Uint8Adaptor> > > &&, unsigned long long> *x0; } x0; } x0; } x6; struct WeakPtrFactory<WebCore::SourceBufferParserAVFObjC, WTF::EmptyCounter> { struct RefPtr<WTF::WeakPtrImpl<WTF::EmptyCounter>, WTF::DumbPtrTraits<WTF::WeakPtrImpl<WTF::EmptyCounter> > > { struct WeakPtrImpl<WTF::EmptyCounter> *x0; } x0; } x7; struct RetainPtr<AVStreamDataParser> { void *x0; } x8; struct RetainPtr<WebAVStreamDataParserListener> { void *x0; } x9; BOOL x10; BOOL x11; struct RefPtr<const WTF::Logger, WTF::DumbPtrTraits<const WTF::Logger> > { struct Logger *x0; } x12; void *x13; } *)a1;
- (void)streamDataParser:(id)a0 didParseStreamDataAsAsset:(id)a1;
- (void)streamDataParser:(id)a0 didFailToParseStreamDataWithError:(id)a1;
- (void)streamDataParser:(id)a0 didParseStreamDataAsAsset:(id)a1 withDiscontinuity:(BOOL)a2;
- (void)streamDataParser:(id)a0 didProvideMediaData:(struct opaqueCMSampleBuffer { } *)a1 forTrackID:(int)a2 mediaType:(id)a3 flags:(unsigned long long)a4;
- (void)streamDataParserWillProvideContentKeyRequestInitializationData:(id)a0 forTrackID:(int)a1;
- (void)streamDataParser:(id)a0 didProvideContentKeyRequestInitializationData:(id)a1 forTrackID:(int)a2;
- (void)invalidate;

@end
