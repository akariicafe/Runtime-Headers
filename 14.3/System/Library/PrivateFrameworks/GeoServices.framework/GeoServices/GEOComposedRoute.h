@class GEORouteRestrictionZoneInfo, GEOComposedRouteAdvisory, GEOMapRegion, GEOComposedRouteMutableData, NSMutableArray, NSString, GEOComposedWaypoint, NSArray, GEOElevationProfile, GEOStyleAttributes, GEOTransitRouteUpdateRequest, GEORouteDisplayHints, GEOTransitDecoderData, GEORouteAttributes, GEOWaypointRoute, NSData, GEOZilchDecoder, GEOComposedRouteTraffic, GEOTransitSuggestedRoute, GEOComposedRouteCoordinateArray, geo_reentrant_isolater, NSUUID, GEORoute, GEORouteInitializerData, NSDate, NSHashTable;
@protocol GEOServerFormattedString, GEOComposedRouteTransitDisplayStrings, GEOTransitRoutingIncidentMessage;

@interface GEOComposedRoute : NSObject <_GEORouteHypothesisMonitorETAProvider, NSSecureCoding, GEOMapAccessRestrictions> {
    GEORoute *_geoRoute;
    GEORouteAttributes *_routeAttributes;
    GEORouteInitializerData *_routeInitializerData;
    GEOTransitDecoderData *_decoderData;
    GEOComposedRouteCoordinateArray *_coordinates;
    NSArray *_currentSectionOptions;
    NSArray *_ticketedSegments;
    NSArray *_transitRouteUpdateAlerts;
    id<GEOComposedRouteTransitDisplayStrings> _transitRouteDisplayStrings;
    NSMutableArray *_snappedPaths;
    GEOZilchDecoder *_zilchDecoder;
    geo_reentrant_isolater *_snappedRoutesIsolater;
    NSHashTable *_observers;
}

@property (class, readonly) BOOL supportsSecureCoding;

@property (readonly, nonatomic) double _hypothesis_travelDuration;
@property (readonly, nonatomic) double _hypothesis_travelDurationAggressiveEstimate;
@property (readonly, nonatomic) double _hypothesis_travelDurationConservativeEstimate;
@property (readonly, nonatomic) unsigned long long serverIdentifier;
@property (retain, nonatomic) NSData *serverRouteID;
@property (retain, nonatomic) NSUUID *uniqueRouteID;
@property (readonly, nonatomic) GEORouteInitializerData *routeInitializerData;
@property (readonly, nonatomic) GEORouteAttributes *routeAttributes;
@property (readonly, nonatomic) NSArray *etauPositions;
@property (readonly, nonatomic) unsigned int pointCount;
@property (readonly, nonatomic) BOOL usesZilch;
@property (readonly, nonatomic) GEOComposedWaypoint *origin;
@property (readonly, nonatomic) GEOComposedWaypoint *destination;
@property (readonly, nonatomic) BOOL isNavigable;
@property (readonly, nonatomic) NSData *directionsResponseID;
@property (readonly, nonatomic) NSData *etauResponseID;
@property (readonly, nonatomic) unsigned long long indexInResponse;
@property (readonly, nonatomic) NSArray *legs;
@property (readonly, nonatomic) NSArray *segments;
@property (readonly, nonatomic) NSArray *steps;
@property (readonly, nonatomic) NSArray *enrouteNotices;
@property (readonly, nonatomic) NSArray *composedGuidanceEvents;
@property (readonly, nonatomic) NSArray *stops;
@property (readonly, nonatomic) NSArray *halls;
@property (readonly, nonatomic) NSArray *stations;
@property (readonly, nonatomic) NSString *name;
@property (readonly, nonatomic) id<GEOServerFormattedString> routeLabelDescription;
@property (readonly, nonatomic) NSArray *advisoryNotices;
@property (readonly, nonatomic) GEOComposedRouteAdvisory *advisoryMessage;
@property (readonly, nonatomic) NSArray *incidentsAdvisories;
@property (readonly, nonatomic) GEOComposedRouteAdvisory *evAdvisory;
@property (readonly, nonatomic) GEOComposedRouteAdvisory *tollAdvisory;
@property (readonly, nonatomic) NSArray *noticesAdvisories;
@property (readonly, nonatomic) NSArray *routeDescriptions;
@property (readonly, nonatomic) NSString *trafficDescription;
@property (readonly, nonatomic) NSString *longTrafficDescription;
@property (readonly, nonatomic) GEORouteRestrictionZoneInfo *restrictionZoneInfo;
@property (readonly, nonatomic) id<GEOServerFormattedString> infrastructureDescription;
@property (readonly, nonatomic) unsigned long long stepsCount;
@property (readonly, nonatomic) GEORoute *deprecatedGeoRoute;
@property (readonly, nonatomic) BOOL isNewProtocolRoute;
@property (readonly, nonatomic) GEOWaypointRoute *geoWaypointRoute;
@property (readonly, nonatomic) BOOL hasArrivalMapRegion;
@property (readonly, nonatomic) GEOMapRegion *arrivalMapRegion;
@property (readonly, nonatomic) BOOL hasExpectedTime;
@property (readonly, nonatomic) unsigned int expectedTime;
@property (readonly, nonatomic) BOOL hasHistoricTravelTime;
@property (readonly, nonatomic) unsigned int historicTravelTime;
@property (readonly, nonatomic) double freeflowTravelTime;
@property (readonly, nonatomic) double travelTimeAggressiveEstimate;
@property (readonly, nonatomic) double travelTimeConservativeEstimate;
@property (readonly, nonatomic) double chargingDuration;
@property (readonly, nonatomic) double travelAndChargingDuration;
@property (readonly, nonatomic) NSDate *startDate;
@property (readonly, nonatomic) unsigned int distance;
@property (readonly, nonatomic) BOOL avoidsTolls;
@property (readonly, nonatomic) BOOL avoidsHighways;
@property (readonly, nonatomic) BOOL avoidsTraffic;
@property (nonatomic) BOOL maneuverDisplayEnabled;
@property (nonatomic) unsigned long long currentDisplayStep;
@property (retain, nonatomic) NSArray *maneuverDisplaySteps;
@property (nonatomic) unsigned long long selectedSegmentIndex;
@property (nonatomic) unsigned int firstVisiblePoint;
@property (readonly, nonatomic) int transportType;
@property (retain, nonatomic) GEOTransitSuggestedRoute *suggestedRoute;
@property (readonly, nonatomic) GEOTransitSuggestedRoute *originalSuggestedRoute;
@property (readonly, nonatomic) unsigned long long indexOfSuggestedRoute;
@property (readonly, copy, nonatomic) NSArray *routePlanningArtworks;
@property (readonly, nonatomic) id<GEOTransitRoutingIncidentMessage> transitRoutingIncidentMessage;
@property (readonly, nonatomic) BOOL hasRideClusters;
@property (readonly, nonatomic) NSArray *rideSelections;
@property (readonly, nonatomic) id<GEOServerFormattedString> launchAndGoCardTitle;
@property (readonly, nonatomic) id<GEOServerFormattedString> launchAndGoRouteTitle;
@property (readonly, nonatomic) id<GEOServerFormattedString> launchAndGoRouteDescription;
@property (readonly, nonatomic) id<GEOServerFormattedString> previewDurationFormatString;
@property (readonly, nonatomic) id<GEOServerFormattedString> pickingDurationFormatString;
@property (readonly, nonatomic) id<GEOServerFormattedString> planningDescriptionFormatString;
@property (readonly, nonatomic) id<GEOServerFormattedString> planningDistanceFormatString;
@property (readonly, nonatomic) NSString *planningSeparatorString;
@property (readonly, nonatomic) id<GEOServerFormattedString> transitDescriptionFormatString;
@property (readonly, nonatomic) NSArray *transitAdvisories;
@property (readonly, nonatomic) BOOL isEVRoute;
@property (readonly, nonatomic) BOOL isWalkingOnlyTransitRoute;
@property (readonly, nonatomic) id<GEOServerFormattedString> transitRouteBadge;
@property (nonatomic) double transitUpdateInitialDelay;
@property (readonly, nonatomic) GEOElevationProfile *elevationProfile;
@property (readonly, nonatomic) GEORouteDisplayHints *displayHints;
@property (readonly, nonatomic) BOOL shouldShowSchedule;
@property (readonly, nonatomic) GEOStyleAttributes *styleAttributes;
@property (readonly, nonatomic) GEOComposedRouteTraffic *traffic;
@property (retain, nonatomic) GEOComposedRouteMutableData *mutableData;
@property (readonly, nonatomic) int routeType;
@property (readonly, nonatomic) NSArray *sections;
@property (readonly, nonatomic) GEOMapRegion *boundingMapRegion;
@property (readonly, nonatomic) unsigned long long numberOfTransitStops;
@property (readonly, nonatomic) GEOTransitRouteUpdateRequest *transitRouteUpdateRequest;
@property (retain, nonatomic) NSUUID *revisionIdentifier;
@property (readonly, nonatomic) NSArray *baseTransitFares;
@property (readonly, nonatomic) BOOL allowsNetworkTileLoad;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setIsNavigable:(BOOL)a0;
- (BOOL)checkDrivingArrivalForCoordinate:(struct { double x0; double x1; })a0 coordinateOnRoute:(struct { double x0; double x1; })a1 routePointIndex:(unsigned int)a2 distanceFromRoute:(double)a3 arrivalMapRegion:(id)a4 checkArrivalRadius:(BOOL)a5 checkDistanceAlongRoute:(BOOL)a6 checkRoadAccessPoints:(BOOL)a7 isOnRoute:(BOOL)a8;
- (id)stepAtIndex:(unsigned long long)a0;
- (id)init;
- (void).cxx_destruct;
- (void)setSections:(id)a0;
- (void)removeObserver:(id)a0;
- (void)dealloc;
- (void)addObserver:(id)a0;
- (id)etaRoute;
- (id)geoETAWaypointRouteFromRouteCoordinate:(struct PolylineCoordinate { unsigned int x0; float x1; })a0;
- (id)etaRouteFromRouteCoordinate:(struct PolylineCoordinate { unsigned int x0; float x1; })a0;
- (id)geoOriginalWaypointRouteFromRouteCoordinate:(struct PolylineCoordinate { unsigned int x0; float x1; })a0 purpose:(int)a1;
- (void)_initOtherRouteFeatures:(id)a0 initializerData:(id)a1;
- (void)_ingestRouteBuilderOutput:(id)a0;
- (void)_initializeManeuverDisplaySteps;
- (id)initWithSuggestedRoute:(id)a0 initializerData:(id)a1;
- (void)_populateArtworkForSuggestedRoute:(id)a0 decoderData:(id)a1;
- (void)updateTransitRouteUpdateRequest:(id)a0;
- (void)setSegments:(id)a0;
- (id)sectionOptionForTripIndex:(unsigned long long)a0;
- (struct { double x0; double x1; double x2; })pointAtRouteCoordinate:(struct PolylineCoordinate { unsigned int x0; float x1; })a0;
- (unsigned long long)stepIndexForPointIndex:(unsigned long long)a0;
- (id)segmentForStepIndex:(unsigned long long)a0;
- (unsigned long long)legIndexForStepIndex:(unsigned long long)a0;
- (void)getFormOfWay:(int *)a0 roadClass:(int *)a1 at:(unsigned int)a2;
- (void)forEachSnappedPath:(id /* block */)a0;
- (double)distanceBetweenRoutePointIndex:(unsigned int)a0 toPointIndex:(unsigned int)a1;
- (unsigned long long)lastStepIndexOfLegAtStepIndex:(unsigned long long)a0;
- (double)distanceBetweenLocation:(struct { double x0; double x1; })a0 nextPointIndex:(unsigned int)a1 toPointIndex:(unsigned int)a2;
- (struct PolylineCoordinate { unsigned int x0; float x1; })coordinateAtOffset:(double)a0 fromRouteCoordinate:(struct PolylineCoordinate { unsigned int x0; float x1; })a1;
- (double)courseAtRouteCoordinateIndex:(unsigned int)a0;
- (struct PolylineCoordinate { unsigned int x0; float x1; })_findRouteCoordinateWithOffset:(float)a0 aPos:(const struct Matrix<float, 2, 1> { float x0[2]; } *)a1 aCoord:(const struct PolylineCoordinate { unsigned int x0; float x1; } *)a2 bCoord:(const struct PolylineCoordinate { unsigned int x0; float x1; } *)a3 pointOnSegment:(const struct Matrix<float, 2, 1> { float x0[2]; } *)a4 bounds:(const struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; } *)a5;
- (BOOL)_meetsMinimumPathLengthBetweenStart:(unsigned int)a0 end:(unsigned int)a1;
- (BOOL)isSnapping;
- (void)_snapPaths:(id)a0 completionHandler:(id /* block */)a1;
- (void)_addPaths:(id)a0 forObserver:(id)a1;
- (void)_addSnappedPolylinePathsForSection:(id)a0 toPaths:(id)a1 rects:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; } *)a2 rectsCount:(unsigned long long)a3;
- (void)_enumerateAllStepsWithBlock:(id /* block */)a0;
- (void)_updateRevisionIdentifier;
- (id)getHallForStop:(id)a0;
- (id)getStationForHall:(id)a0;
- (id)getStationForStop:(id)a0;
- (unsigned long long)_tripIndexForTripSegment:(id)a0;
- (void)_rebuildRouteForRideChange;
- (void)selectRide:(unsigned long long)a0 forTripSegment:(id)a1;
- (id)_nextOptionForOption:(id)a0 rideIndex:(unsigned long long)a1;
- (id)initWithCoder:(id)a0;
- (id)initWithGeoWaypointRoute:(id)a0 initializerData:(id)a1;
- (id)initWithRoute:(id)a0 initializerData:(id)a1;
- (id)initWithTransitGeometry:(id)a0 andLine:(id)a1 andStops:(id)a2;
- (id)initWithSuggestedRoute:(id)a0 initializerData:(id)a1 updateRequest:(id)a2;
- (BOOL)_MapsCarPlay_isEqual:(id)a0;
- (int)formOfWayAt:(unsigned int)a0;
- (id)initWithSuggestedRoute:(id)a0 initializerData:(id)a1 uniqueRouteID:(id)a2;
- (void)setIsWalkingOnlyTransitRoute:(BOOL)a0;
- (void)setComposedGuidanceEvents:(id)a0;
- (void)setBoundingMapRegion:(id)a0;
- (struct PolylineCoordinate { unsigned int x0; float x1; })coordinateAtOffset:(double)a0;
- (struct PolylineCoordinate { unsigned int x0; float x1; })closestPointOnRoute:(struct { double x0; double x1; })a0;
- (struct PolylineCoordinate { unsigned int x0; float x1; })coordinateAtOffset:(double)a0 fromRoutePoint:(unsigned long long)a1;
- (struct PolylineCoordinate { unsigned int x0; float x1; })routeCoordinateAtDistance:(double)a0 beforeRouteCoordinate:(struct PolylineCoordinate { unsigned int x0; float x1; })a1;
- (double)distanceFromPoint:(struct PolylineCoordinate { unsigned int x0; float x1; })a0 toPoint:(struct PolylineCoordinate { unsigned int x0; float x1; })a1;
- (double)distanceFromPointIndex:(unsigned long long)a0 toPointIndex:(unsigned long long)a1;
- (id)stepForPointIndex:(unsigned int)a0;
- (double)stepDistanceFromPoint:(struct PolylineCoordinate { unsigned int x0; float x1; })a0 toPoint:(struct PolylineCoordinate { unsigned int x0; float x1; })a1;
- (unsigned long long)segmentIndexForPointIndex:(unsigned long long)a0;
- (unsigned long long)segmentIndexForStepIndex:(unsigned long long)a0;
- (id)segmentForPointIndex:(unsigned int)a0;
- (void)maneuverDisplayHasChanged;
- (double)approximateRoadWidthAtPointIndex:(unsigned int)a0;
- (struct { struct { id x0; char *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned int x6; unsigned long long x7; BOOL x8; unsigned long long x9; float x10; unsigned long long x11; id x12; int x13; } x0; unsigned long long x1; unsigned long long x2; int x3; int x4; int x5; unsigned long long x6; unsigned long long x7; unsigned int x8; unsigned int x9; union { struct { struct { float x0; float x1; } x0; struct { float x0; float x1; } x1; } x0; struct { float x0; float x1; float x2; float x3; } x1; } x10; struct *x11; struct { unsigned short x0[2]; unsigned short x1[2]; } x12; unsigned char x13; BOOL x14; unsigned char x15; BOOL x16; BOOL x17; unsigned char x18; BOOL x19; unsigned short x20; struct _NSRange { unsigned long long x0; unsigned long long x1; } x21; BOOL x22; unsigned int x23; } *)roadFeatureAtPointIndex:(unsigned int)a0;
- (int)transportTypeForStep:(id)a0;
- (id)zilchDataFromStepIndex:(unsigned long long)a0;
- (id)zilchDataArrayToEndOfRouteFromStepIndex:(unsigned long long)a0;
- (double)distanceBetweenStep:(id)a0 andStep:(id)a1;
- (double)remainingTimeToEndOfLeg:(unsigned long long)a0 currentStepRemainingDistance:(double)a1;
- (double)remainingTimeAlongRouteFromStepIndex:(unsigned long long)a0 currentStepRemainingDistance:(double)a1;
- (id)geoTrafficBannerText;
- (double)remainingDistanceToEndOfLeg:(unsigned long long)a0 currentStepRemainingDistance:(double)a1;
- (struct { double x0; double x1; double x2; })locationAtDistance:(double)a0 from:(id)a1;
- (double)remainingDistanceAlongRouteFromStepIndex:(unsigned long long)a0 currentStepRemainingDistance:(double)a1;
- (BOOL)supportsSnapping;
- (id)routeMatchAtDistance:(double)a0 from:(id)a1 stopAtEndOfTunnel:(BOOL)a2 stopAtEndOfManeuver:(BOOL)a3 date:(id)a4;
- (void)roadFeaturesForRouteCoordinate:(struct PolylineCoordinate { unsigned int x0; float x1; })a0 distanceAhead:(double)a1 handler:(id /* block */)a2;
- (void)clearSnappedPathsForObserver:(id)a0;
- (id)getSnappedPathsForVisibleRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })a0 rectsToSnap:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; } *)a1 rectsToSnapCount:(unsigned long long)a2 observer:(id)a3;
- (id)boardStepForSection:(id)a0;
- (id)getSnappedPathsForLocation:(struct { double x0; double x1; })a0 radius:(double)a1 observer:(id)a2;
- (void)applyUpdatesToTransitRoute:(id)a0;
- (BOOL)isStopInTerminalStructure:(id)a0;
- (id)sectionOptionForTripSegment:(id)a0;
- (void)selectRide:(unsigned long long)a0 forBoardStep:(id)a1;
- (void)updateRouteWithRideSelections:(id)a0;
- (id)ticketingSegmentsForSelectedRides;
- (struct { double x0; double x1; double x2; })pointAt:(unsigned long long)a0;
- (double)_hypothesis_travelDurationFromStep:(id)a0 stepRemainingDistance:(double)a1;
- (id)coordinates;
- (void)clearPoints;
- (void)setSteps:(id)a0;
- (id)geoETAWaypointRoute;
- (id)initWithCompanionRoute:(id)a0;
- (void)applyCompanionUpdates:(id)a0;
- (void)encodeWithCoder:(id)a0;

@end
