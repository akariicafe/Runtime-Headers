@class NSMutableArray, NSArray, NSString, NSData, CUTWeakReference, NSObject, NSMutableDictionary;
@protocol OS_xpc_object, OS_dispatch_source, OS_dispatch_queue, APSConnectionDelegate;

@interface APSConnection : NSObject {
    CUTWeakReference *_delegateReference;
    NSString *_environmentName;
    NSData *_publicToken;
    unsigned long long _messageSize;
    unsigned long long _largeMessageSize;
    NSString *_connectionPortName;
    unsigned int _connectionPort;
    BOOL _enableCriticalReliability;
    BOOL _enableStatusNotifications;
    BOOL _isConnected;
    BOOL _usesAppLaunchStats;
    NSMutableDictionary *_idsToOutgoingMessages;
    unsigned long long _nextOutgoingMessageID;
    NSObject<OS_dispatch_queue> *_machQueue;
    NSObject<OS_dispatch_source> *_mach_source;
    NSObject<OS_xpc_object> *_connection;
    BOOL _everHadDelegate;
    NSMutableArray *_queuedDelegateBlocks;
    NSString *_processName;
    double _reconnectDelay;
    BOOL _isReconnectScheduled;
    BOOL _isDisconnected;
    BOOL _isDeallocing;
}

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *ivarQueue;
@property (readonly, nonatomic) BOOL isShutdown;
@property (nonatomic) unsigned long long messageSize;
@property (nonatomic) unsigned long long largeMessageSize;
@property (retain, nonatomic, setter=_setEnabledTopics:) NSArray *enabledTopics;
@property (retain, nonatomic, setter=_setIgnoredTopics:) NSArray *ignoredTopics;
@property (retain, nonatomic, setter=_setOpportunisticTopics:) NSArray *opportunisticTopics;
@property (retain, nonatomic, setter=_setNonWakingTopics:) NSArray *nonWakingTopics;
@property (readonly, retain, nonatomic) NSData *publicToken;
@property (nonatomic) BOOL usesAppLaunchStats;
@property (nonatomic) id<APSConnectionDelegate> delegate;

+ (struct __SecIdentity { } *)copyIdentity;
+ (id)geoRegion;
+ (id)_createXPCConnectionWithQueueName:(const char *)a0;
+ (void)_safelyCancelAndReleaseConnection:(id)a0;
+ (void)_blockingXPCCallWithArgumentBlock:(id /* block */)a0 resultHandler:(id /* block */)a1;
+ (void)_setTokenState;
+ (BOOL)isValidEnvironment:(id)a0;
+ (void)_flushIdentityCache;
+ (void)requestCourierConnection;
+ (void)invalidateDeviceIdentity;
+ (id)connectionsDebuggingState;
+ (void)notifySafeToSendFilter;
+ (double)serverTime;
+ (double)keepAliveIntervalForEnvironmentName:(id)a0;

- (void)_disconnectFromDealloc;
- (void)shutdown;
- (void)_connectIfNecessary;
- (void)_onIvarQueue_setEnabledTopics:(id)a0 ignoredTopics:(id)a1 opportunisticTopics:(id)a2 nonWakingTopics:(id)a3 sendToDaemon:(BOOL)a4 completion:(id /* block */)a5;
- (void)_setEnabledTopics:(id)a0 ignoredTopics:(id)a1 opportunisticTopics:(id)a2 nonWakingTopics:(id)a3 sendToDaemon:(BOOL)a4 completion:(id /* block */)a5;
- (void)_dispatch_async_to_ivarQueue:(id /* block */)a0;
- (void)setEnabledTopics:(id)a0 ignoredTopics:(id)a1 opportunisticTopics:(id)a2 nonWakingTopics:(id)a3;
- (void)_asyncOnDelegateQueueWithBlock:(id /* block */)a0;
- (void)moveTopic:(id)a0 fromList:(unsigned long long)a1 toList:(unsigned long long)a2;
- (void)_addEnableStatusNotificationsToXPCMessage:(id)a0;
- (void).cxx_destruct;
- (void)sendFakeMessage:(id)a0;
- (void)_deliverPublicToken:(id)a0 withCompletionBlock:(id /* block */)a1;
- (void)_noteDisconnectedFromDaemonOnIvarQueue;
- (id)initWithEnvironmentName:(id)a0 queue:(id)a1;
- (void)setNonWakingTopics:(id)a0;
- (id)initWithEnvironmentName:(id)a0 namedDelegatePort:(id)a1 queue:(id)a2;
- (void)_deliverConnectionStatusFromDealloc:(BOOL)a0;
- (void)dealloc;
- (id)_initWithEnvironmentName:(id)a0 namedDelegatePort:(id)a1 enablePushDuringSleep:(BOOL)a2 queue:(id)a3;
- (void)_shutdownOnIvarQueue;
- (void)_deliverOutgoingMessageResultWithID:(unsigned long long)a0 checkpointTraceData:(id)a1 error:(id)a2 sendRTT:(unsigned long long)a3 ackTimestamp:(unsigned long long)a4;
- (void)setEnabledTopics:(id)a0 ignoredTopics:(id)a1 opportunisticTopics:(id)a2 nonWakingTopics:(id)a3 completion:(id /* block */)a4;
- (void)_deliverDidReconnectOnIvarQueue;
- (void)_sendOutgoingMessage:(id)a0 fake:(BOOL)a1;
- (void)_cancelConnectionOnIvarQueue;
- (void)_addEnableCriticalReliabilityToXPCMessage:(id)a0;
- (void)_addUsesAppLaunchStatsToXPCMessage:(id)a0;
- (void)_setEnableStatusNotifications:(BOOL)a0 sendToDaemon:(BOOL)a1;
- (void)removeFromRunLoop;
- (id)initWithEnvironmentName:(id)a0 namedDelegatePort:(id)a1;
- (void)_setUsesAppLaunchStats:(BOOL)a0 sendToDaemon:(BOOL)a1;
- (id)_listForIdentifierOnIvarQueue:(unsigned long long)a0;
- (id)_topicListNameForLogging:(unsigned long long)a0;
- (void)setOpportunisticTopics:(id)a0;
- (void)_deliverToken:(id)a0 forTopic:(id)a1 identifier:(id)a2;
- (BOOL)isConnected;
- (void)_handleEvent:(id)a0 withHandler:(id /* block */)a1;
- (void)setIgnoredTopics:(id)a0;
- (void)requestKeepAlive;
- (void)confirmReceiptForMessage:(id)a0;
- (void)_shutdownFromDealloc;
- (void)_connectIfNecessaryOnIvarQueue;
- (void)invalidateTokenForTopic:(id)a0 identifier:(id)a1;
- (void)_setEnableCriticalReliability:(BOOL)a0 sendToDaemon:(BOOL)a1;
- (void)setEnabledTopics:(id)a0;
- (void)cancelOutgoingMessage:(id)a0;
- (void)requestTokenForTopic:(id)a0 identifier:(id)a1;
- (void)_disconnect;
- (void)_cancelConnection;
- (void)_deliverMessage:(id)a0;
- (BOOL)hasIdentity;
- (void)_reconnectIfNecessaryOnIvarQueueAfterDelay;
- (id)initWithEnvironmentName:(id)a0;
- (void)_deliverPublicTokenOnIvarQueue:(id)a0 withCompletionBlock:(id /* block */)a1;
- (void)setEnableCriticalReliability:(BOOL)a0;
- (void)_deliverConnectionStatusChange:(BOOL)a0;
- (void)_disconnectOnIvarQueue;
- (void)scheduleInRunLoop:(id)a0;
- (void)setEnabledTopics:(id)a0 ignoredTopics:(id)a1 opportunisticTopics:(id)a2;
- (void)sendOutgoingMessage:(id)a0;
- (void)setEnableStatusNotifications:(BOOL)a0;
- (void)_deliverOutgoingMessageResultWithID:(unsigned long long)a0 error:(id)a1 sendRTT:(unsigned long long)a2;
- (void)setEnabledTopics:(id)a0 ignoredTopics:(id)a1;

@end
