@class NSURL, NSUUID, NSMutableDictionary;

@interface KGDatabase : NSObject {
    struct Database { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct sqlite3 *x1; struct LabelTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; } x2; struct MetadataTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; int x6; } x3; struct NodeTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; } x4; struct EdgeTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; } x5; struct AttributeTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; } x6; struct AttributeValueTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x9; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x10; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x11; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x12; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x13; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x14; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x15; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x16; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x17; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x18; int x19; } x7; struct AttributeValueTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x9; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x10; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x11; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x12; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x13; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x14; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x15; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x16; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x17; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x18; int x19; } x8; struct Statement *x9; struct Statement *x10; struct BitmapTable { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct sqlite3 *x1; } x11; struct ArrayTable { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct sqlite3 *x1; } x12; long long x13; long long x14; struct map<unsigned long long, degas::Bitmap, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::Bitmap> > > { struct __tree<std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, degas::Bitmap> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, degas::Bitmap>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::less<unsigned long long>, true> > { unsigned long long x0; } x2; } x0; } x15; struct map<unsigned long long, degas::Bitmap, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::Bitmap> > > { struct __tree<std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, degas::Bitmap> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, degas::Bitmap>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::less<unsigned long long>, true> > { unsigned long long x0; } x2; } x0; } x16; BOOL x17; int x18; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x19; BOOL x20; } *_database;
    NSMutableDictionary *_labelIdByName;
    NSMutableDictionary *_labelNameById;
    NSMutableDictionary *_attrIdByPropertyName;
    NSMutableDictionary *_propertyNameByAttrId;
}

@property (readonly, nonatomic) NSURL *url;
@property (nonatomic) unsigned long long graphVersion;
@property (readonly, nonatomic) NSUUID *graphIdentifier;

+ (void)initialize;
+ (BOOL)destroyAtURL:(id)a0 error:(id *)a1;
+ (BOOL)migrateFromURL:(id)a0 toURL:(id)a1 error:(id *)a2;
+ (BOOL)copyFromURL:(id)a0 toURL:(id)a1 error:(id *)a2;
+ (void)deleteClosedDatabaseFilesAtStoreURL:(id)a0;

- (struct Database { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct sqlite3 *x1; struct LabelTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; } x2; struct MetadataTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; int x6; } x3; struct NodeTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; } x4; struct EdgeTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; } x5; struct AttributeTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; } x6; struct AttributeValueTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x9; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x10; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x11; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x12; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x13; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x14; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x15; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x16; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x17; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x18; int x19; } x7; struct AttributeValueTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x9; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x10; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x11; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x12; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x13; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x14; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x15; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x16; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x17; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x18; int x19; } x8; struct Statement *x9; struct Statement *x10; struct BitmapTable { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct sqlite3 *x1; } x11; struct ArrayTable { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct sqlite3 *x1; } x12; long long x13; long long x14; struct map<unsigned long long, degas::Bitmap, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::Bitmap> > > { struct __tree<std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, degas::Bitmap> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, degas::Bitmap>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::less<unsigned long long>, true> > { unsigned long long x0; } x2; } x0; } x15; struct map<unsigned long long, degas::Bitmap, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::Bitmap> > > { struct __tree<std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, degas::Bitmap> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, degas::Bitmap>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::less<unsigned long long>, true> > { unsigned long long x0; } x2; } x0; } x16; BOOL x17; int x18; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x19; BOOL x20; } *)database;
- (BOOL)beginTransaction;
- (id)nodeLabels;
- (void)close;
- (void).cxx_destruct;
- (BOOL)rollbackTransaction;
- (void)loadPropertyNames;
- (BOOL)copyToURL:(id)a0 error:(id *)a1;
- (id)initWithURL:(id)a0;
- (id)edgeLabels;
- (id)propertyValueForCursor:(struct AttributeValueCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; } *)a0;
- (BOOL)commitTransaction;
- (BOOL)openWithMode:(unsigned long long)a0 error:(id *)a1;
- (void)addLabelName:(id)a0 forLabelId:(id)a1;
- (void)loadLabels;
- (unsigned long long)labelIdentifierForLabelName:(id)a0 insertIfNotFound:(BOOL)a1;
- (id)labelNameForLabelIdentifier:(unsigned long long)a0;
- (void)setPropertyName:(id)a0 forAttrIdentifier:(id)a1;
- (unsigned long long)attributeIdentifierForPropertyName:(id)a0 sampleValue:(id)a1;
- (id)propertyNameForAttrIdentifier:(unsigned long long)a0;
- (BOOL)labelIdentifiers:(struct Bitmap { unsigned long long x0; unsigned long long x1; struct vector<degas::BitsetPtr, std::__1::allocator<degas::BitsetPtr> > { struct BitsetPtr *x0; struct BitsetPtr *x1; struct __compressed_pair<degas::BitsetPtr *, std::__1::allocator<degas::BitsetPtr> > { struct BitsetPtr *x0; } x2; } x2; BOOL x3; } *)a0 fromLabelNames:(id)a1 insertIfNotFound:(BOOL)a2;
- (int)degasEdgeDirectionFromKG:(unsigned long long)a0;
- (void)enumerateNodesWithIdentifiers:(id)a0 block:(id /* block */)a1;
- (void)enumerateEdgesWithIdentifiers:(id)a0 block:(id /* block */)a1;
- (struct NodeCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; })nodeCursorWithIdentifiers:(id)a0;
- (struct AttributeValueCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; })nodeAttributeValueCursorWithIdentifiers:(id)a0;
- (void)_enumerateNodeTableWithNodeCursor:(struct NodeCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; } *)a0 block:(id /* block */)a1;
- (struct EdgeCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; })edgeCursorWithIdentifiers:(id)a0;
- (struct AttributeValueCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; })edgeAttributeValueCursorWithIdentifiers:(id)a0;
- (void)_enumerateEdgeTableWithEdgeCursor:(struct EdgeCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; } *)a0 block:(id /* block */)a1;
- (void)_enumerateNodesWithNodeCursor:(struct NodeCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; } *)a0 propertiesCursor:(struct AttributeValueCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; } *)a1 block:(id /* block */)a2;
- (void)_enumerateEdgesWithEdgeCursor:(struct EdgeCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; } *)a0 propertiesCursor:(struct AttributeValueCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; } *)a1 block:(id /* block */)a2;
- (id)_namesOfLabelsWithIdentifiers:(struct Bitmap { unsigned long long x0; unsigned long long x1; struct vector<degas::BitsetPtr, std::__1::allocator<degas::BitsetPtr> > { struct BitsetPtr *x0; struct BitsetPtr *x1; struct __compressed_pair<degas::BitsetPtr *, std::__1::allocator<degas::BitsetPtr> > { struct BitsetPtr *x0; } x2; } x2; BOOL x3; } *)a0;
- (void)_enumeratePropertiesForCursor:(struct AttributeValueCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; } *)a0 block:(id /* block */)a1;
- (BOOL)setNodeProperties:(id)a0 forIdentifier:(unsigned long long)a1 error:(id *)a2;
- (BOOL)setNodeWeight:(float)a0 forIdentifier:(unsigned long long)a1 error:(id *)a2;
- (unsigned long long)addNodeWithIdentifier:(unsigned long long)a0 labels:(id)a1 weight:(float)a2 properties:(id)a3 error:(id *)a4;
- (BOOL)setEdgeProperties:(id)a0 forIdentifier:(unsigned long long)a1 error:(id *)a2;
- (BOOL)setEdgeWeight:(float)a0 forIdentifier:(unsigned long long)a1 error:(id *)a2;
- (unsigned long long)addEdgeWithIdentifier:(unsigned long long)a0 labels:(id)a1 weight:(float)a2 properties:(id)a3 sourceNodeIdentifier:(unsigned long long)a4 targetNodeIdentifier:(unsigned long long)a5 error:(id *)a6;
- (BOOL)removeNode:(unsigned long long)a0 error:(id *)a1;
- (BOOL)removeEdge:(unsigned long long)a0 error:(id *)a1;
- (BOOL)removeNodes:(id)a0 error:(id *)a1;
- (BOOL)removeEdges:(id)a0 error:(id *)a1;
- (id)nodeIdentifiersForPropertyName:(id)a0 value:(id)a1 error:(id *)a2;
- (void)distributeValuesByType:(id)a0 toIntegerValues:(id)a1 floatValues:(id)a2 stringValues:(id)a3;
- (id)nodeIdentifiersForPropertyName:(id)a0 values:(id)a1 error:(id *)a2;
- (id)filterNodeIdentifiersForPropertyName:(id)a0 value:(id)a1 nodeIdentifiers:(id)a2 error:(id *)a3;
- (id)nodeIdentifiersForLabels:(id)a0 error:(id *)a1;
- (id)edgeIdentifiersForPropertyName:(id)a0 value:(id)a1 error:(id *)a2;
- (id)edgeIdentifiersForPropertyName:(id)a0 values:(id)a1 error:(id *)a2;
- (id)filterEdgeIdentifiersForPropertyName:(id)a0 value:(id)a1 edgeIdentifiers:(id)a2 error:(id *)a3;
- (id)edgeIdentifiersForLabels:(id)a0 error:(id *)a1;
- (id)outEdgeIdentifiersOfNodesWithIdentifiers:(id)a0 error:(id *)a1;
- (id)inEdgeIdentifiersOfNodesWithIdentifiers:(id)a0 error:(id *)a1;
- (BOOL)appendNodeIdentifiersOfEdgesWithIdentifiers:(id)a0 sourceNodeIdentifiers:(id)a1 targetNodeIdentifiers:(id)a2 error:(id *)a3;
- (id)allNodeIdentifiersOfEdgesWithIdentifiers:(id)a0 error:(id *)a1;
- (id)edgeIdentifiersForNodeIdentifier:(unsigned long long)a0 error:(id *)a1;
- (id)edgeIdentifiersWithLabels:(id)a0 direction:(unsigned long long)a1 forNodeIdentifier:(unsigned long long)a2 error:(id *)a3;
- (void)purgeCachedNodeStatements;
- (void)purgeCachedEdgeStatements;

@end
