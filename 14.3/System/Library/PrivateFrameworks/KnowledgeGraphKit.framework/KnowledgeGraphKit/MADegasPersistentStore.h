@class NSUUID, NSMutableDictionary, NSURL, NSString;

@interface MADegasPersistentStore : NSObject <MAPersistentStoreProtocol> {
    struct Database { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct sqlite3 *x1; struct LabelTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; } x2; struct MetadataTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; int x6; } x3; struct NodeTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; } x4; struct EdgeTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; } x5; struct AttributeTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; } x6; struct AttributeValueTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x9; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x10; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x11; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x12; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x13; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x14; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x15; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x16; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x17; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x18; int x19; } x7; struct AttributeValueTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x9; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x10; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x11; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x12; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x13; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x14; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x15; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x16; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x17; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x18; int x19; } x8; struct Statement *x9; struct Statement *x10; struct BitmapTable { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct sqlite3 *x1; } x11; struct ArrayTable { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct sqlite3 *x1; } x12; long long x13; long long x14; struct map<unsigned long long, degas::Bitmap, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::Bitmap> > > { struct __tree<std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, degas::Bitmap> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, degas::Bitmap>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::less<unsigned long long>, true> > { unsigned long long x0; } x2; } x0; } x15; struct map<unsigned long long, degas::Bitmap, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::Bitmap> > > { struct __tree<std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, degas::Bitmap> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, degas::Bitmap>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::less<unsigned long long>, true> > { unsigned long long x0; } x2; } x0; } x16; BOOL x17; int x18; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x19; BOOL x20; } *_database;
    unsigned long long _markerCounter;
    unsigned long long _batchCounter;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
    unsigned long long _transactionCounter;
}

@property (retain, nonatomic) NSMutableDictionary *degasLabelByLabelName;
@property (retain, nonatomic) NSMutableDictionary *labelNameByDegasLabel;
@property (retain, nonatomic) NSMutableDictionary *degasLabelByDomain;
@property (retain, nonatomic) NSMutableDictionary *domainByDegasLabel;
@property (retain, nonatomic) NSMutableDictionary *attrIdByPropertyName;
@property (retain, nonatomic) NSMutableDictionary *propertyNameByAttrId;
@property (readonly, nonatomic) BOOL hasMarker;
@property (readonly, nonatomic) NSUUID *graphIdentifier;
@property (nonatomic) unsigned long long graphVersion;
@property (readonly, nonatomic) NSURL *fileURL;
@property (readonly, nonatomic) BOOL doesCascadeEdgeDelete;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;
+ (BOOL)destroyAtURL:(id)a0 error:(id *)a1;
+ (BOOL)migrateFromURL:(id)a0 toURL:(id)a1 error:(id *)a2;
+ (id)_markerFilePathForPersistentStoreFileURL:(id)a0;
+ (BOOL)copyFromURL:(id)a0 toURL:(id)a1 error:(id *)a2;
+ (void)deleteClosedDatabaseFilesAtStoreURL:(id)a0;
+ (void)performBitmapTest;
+ (BOOL)hasMarker:(id)a0;
+ (id)errorForKGDBReturnCode:(int)a0 description:(id)a1;
+ (void)deleteMarkerAtURL:(id)a0;
+ (void)deleteClosedDatabaseFilesAtBaseURL:(id)a0;
+ (BOOL)setMarkerAtURL:(id)a0;
+ (id)persistentStoreFileExtension;

- (void)save:(id /* block */)a0;
- (void)closePersistentStore;
- (struct Database { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct sqlite3 *x1; struct LabelTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; } x2; struct MetadataTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; int x6; } x3; struct NodeTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; } x4; struct EdgeTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; } x5; struct AttributeTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; } x6; struct AttributeValueTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x9; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x10; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x11; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x12; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x13; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x14; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x15; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x16; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x17; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x18; int x19; } x7; struct AttributeValueTable { void /* function */ **x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x1; struct sqlite3 *x2; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x8; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x9; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x10; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x11; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x12; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x13; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x14; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x15; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x16; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x17; struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x18; int x19; } x8; struct Statement *x9; struct Statement *x10; struct BitmapTable { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct sqlite3 *x1; } x11; struct ArrayTable { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct sqlite3 *x1; } x12; long long x13; long long x14; struct map<unsigned long long, degas::Bitmap, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::Bitmap> > > { struct __tree<std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, degas::Bitmap> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, degas::Bitmap>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::less<unsigned long long>, true> > { unsigned long long x0; } x2; } x0; } x15; struct map<unsigned long long, degas::Bitmap, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::Bitmap> > > { struct __tree<std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, degas::Bitmap> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, degas::Bitmap>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::Bitmap>, std::__1::less<unsigned long long>, true> > { unsigned long long x0; } x2; } x0; } x16; BOOL x17; int x18; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x19; BOOL x20; } *)database;
- (void)setEdgeWeight:(float)a0 forIdentifier:(long long)a1;
- (void)enumerateModelNodesForDomains:(id)a0 withBlock:(id /* block */)a1;
- (unsigned long long)degasLabelIdForMatisseDomain:(unsigned short)a0;
- (void)_setModelEdgePropertyValue:(id)a0 forKey:(id)a1 andIdentifier:(long long)a2;
- (void).cxx_destruct;
- (void)enumerateModelEdgesForIdentifiers:(id)a0 withBlock:(id /* block */)a1;
- (void)invalidateMemoryCaches;
- (id)returnLabelAndDomain:(short *)a0 forDegasLabels:(struct Bitmap { unsigned long long x0; unsigned long long x1; struct vector<degas::BitsetPtr, std::__1::allocator<degas::BitsetPtr> > { struct BitsetPtr *x0; struct BitsetPtr *x1; struct __compressed_pair<degas::BitsetPtr *, std::__1::allocator<degas::BitsetPtr> > { struct BitsetPtr *x0; } x2; } x2; BOOL x3; } *)a1;
- (void)_enumerateModelNodesForCursor:(struct NodeCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; } *)a0 withBlock:(id /* block */)a1;
- (void)setLabel:(id)a0 forDegasLabel:(unsigned long long)a1;
- (void)dealloc;
- (void)_setModelNodePropertyValue:(id)a0 forKey:(id)a1 andIdentifier:(long long)a2;
- (void)invalidatePersistentStores;
- (void)enumerateModelNodesWithBlock:(id /* block */)a0;
- (void)_enumerateModelEdgesForCursor:(struct EdgeCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; } *)a0 withBlock:(id /* block */)a1;
- (void)enumerateModelEdgesPropertiesWithBlock:(id /* block */)a0;
- (void)setModelNodeProperties:(id)a0 forIdentifier:(long long)a1 clobberExisting:(BOOL)a2;
- (void)removeModelEdgesPropertiesForIdentifiers:(id)a0;
- (void)enumerateModelEdgesWithBlock:(id /* block */)a0;
- (void)removeModelNodePropertyForKey:(id)a0 andIdentifier:(long long)a1;
- (id)initWithFileURL:(id)a0 options:(long long)a1;
- (unsigned long long)degasLabelIdForLabelName:(id)a0;
- (void)leaveTransaction;
- (void)leaveTransactionWithRollback;
- (void)removeModelNodesPropertiesForIdentifiers:(id)a0;
- (id)_markerFilePath;
- (void)loadPropertyNames;
- (BOOL)copyToURL:(id)a0 error:(id *)a1;
- (void)enterBatch;
- (void)removeModelEdgePropertiesForIdentifier:(long long)a0;
- (void)setModelNodePropertyValue:(id)a0 forKey:(id)a1 andIdentifier:(long long)a2;
- (void)setModelEdgePropertyValue:(id)a0 forKey:(id)a1 andIdentifier:(long long)a2;
- (void)checkTransaction;
- (void)enumerateModelNodesForIdentifiers:(id)a0 withBlock:(id /* block */)a1;
- (void)beginTransactionIfNeeded;
- (void)enumerateModelNodesForLabels:(id)a0 withBlock:(id /* block */)a1;
- (void)enumerateModelEdgesForLabels:(id)a0 withBlock:(id /* block */)a1;
- (id)localLabelNameForDegasLabel:(unsigned long long)a0;
- (void)enumerateModelEdgesForDomains:(id)a0 withBlock:(id /* block */)a1;
- (void)removeModelNodePropertiesForIdentifier:(long long)a0;
- (void)addEdge:(id)a0 requiresTesting:(BOOL)a1;
- (void)removePreviousPersistenceStore;
- (void)setMarker;
- (void)setNodeWeight:(float)a0 forIdentifier:(long long)a1;
- (void)removeModelEdgesForIdentifiers:(id)a0;
- (void)setModelEdgeProperties:(id)a0 forIdentifier:(long long)a1 clobberExisting:(BOOL)a2;
- (void)deleteMarker;
- (void)loadLabelsAndDomains;
- (void)removeModelNodesForIdentifiers:(id)a0;
- (void)enumerateModelNodesPropertiesWithBlock:(id /* block */)a0;
- (BOOL)migrateToURL:(id)a0 error:(id *)a1;
- (void)removeModelEdgeForIdentifier:(unsigned long long)a0;
- (void)leaveBatch;
- (unsigned long long)attrIdForPropertyName:(id)a0 sampleValue:(id)a1;
- (id)labelforDegasLabelId:(unsigned long long)a0;
- (void)addNode:(id)a0 requiresTesting:(BOOL)a1;
- (short)matisseDomainForDegasLabel:(unsigned long long)a0;
- (id)propertyValueForCursor:(struct AttributeValueCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; } *)a0;
- (void)removeModelEdgePropertyForKey:(id)a0 andIdentifier:(long long)a1;
- (id)propertyNameForAttrId:(unsigned long long)a0;
- (void)removeModelNodeForIdentifier:(unsigned long long)a0;
- (void)enumeratePropertiesForCursor:(struct AttributeValueCursor { struct shared_ptr<degas::Statement> { struct Statement *x0; struct __shared_weak_count *x1; } x0; } *)a0 block:(id /* block */)a1;

@end
