@interface CKStatefulViewReusePool : NSObject {
    struct unordered_map<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem, PoolKeyHasher, std::__1::equal_to<std::__1::pair<__unsafe_unretained Class, id> >, std::__1::allocator<std::__1::pair<const std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem> > > { struct __hash_table<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, std::__1::__unordered_map_hasher<std::__1::pair<__unsafe_unretained Class, id>, std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, PoolKeyHasher, true>, std::__1::__unordered_map_equal<std::__1::pair<__unsafe_unretained Class, id>, std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, std::__1::equal_to<std::__1::pair<__unsafe_unretained Class, id> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem> > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *> **__value_; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *> *> > { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *> *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::pair<__unsafe_unretained Class, id>, std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, PoolKeyHasher, true> > { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::pair<__unsafe_unretained Class, id>, std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, std::__1::equal_to<std::__1::pair<__unsafe_unretained Class, id> >, true> > { float __value_; } __p3_; } __table_; } _pool;
    struct unordered_map<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem, PoolKeyHasher, std::__1::equal_to<std::__1::pair<__unsafe_unretained Class, id> >, std::__1::allocator<std::__1::pair<const std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem> > > { struct __hash_table<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, std::__1::__unordered_map_hasher<std::__1::pair<__unsafe_unretained Class, id>, std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, PoolKeyHasher, true>, std::__1::__unordered_map_equal<std::__1::pair<__unsafe_unretained Class, id>, std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, std::__1::equal_to<std::__1::pair<__unsafe_unretained Class, id> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem> > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *> **__value_; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *> *> > { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *> *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::pair<__unsafe_unretained Class, id>, std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, PoolKeyHasher, true> > { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::pair<__unsafe_unretained Class, id>, std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, std::__1::equal_to<std::__1::pair<__unsafe_unretained Class, id> >, true> > { float __value_; } __p3_; } __table_; } _pendingPool;
    BOOL _enqueuedPendingPurge;
}

@property (nonatomic) BOOL pendingReusePoolEnabled;

+ (id)sharedPool;

- (void).cxx_destruct;
- (id).cxx_construct;
- (void)enqueueStatefulView:(id)a0 forControllerClass:(Class)a1 context:(id)a2 mayRelinquishBlock:(id /* block */)a3;
- (id)dequeueStatefulViewForControllerClass:(Class)a0 preferredSuperview:(id)a1 context:(id)a2;
- (void)purgePendingPool;

@end
