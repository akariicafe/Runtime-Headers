@class CCAsyncQueue, CCViewRendererDelegate, CCVegaWorker, CCVegaCARenderer, JSValue, CCVegaWorkerClient, NSObject, NSLocale, CALayer, NSCalendar, NSString, UITraitCollection, NSMutableSet, NSArray, CCVegaHTMLElement, CCVegaExpressionFunctions;
@protocol CCVegaRendererDelegate;

@interface CCVegaRenderer : NSObject <CCAsyncQueueDelegate, CCVegaWorkerClientDelegate> {
    NSLocale *_locale;
    NSCalendar *_calendar;
    CCVegaExpressionFunctions *_builtinExpressionFunctions;
    double _width;
    double _height;
    struct CGImage { } *_currentCGImage;
    double _currentCGImageScaleFactor;
    BOOL _needsUpdateFromMainThread;
    NSMutableSet *_pendingDataUpdates;
    double _internalScaleFactor;
    double _internalZoomFactor;
    CALayer *_caLayer;
    NSArray *_data;
    BOOL _isActive;
    double _scaleFactor;
    double _zoomFactor;
    UITraitCollection *_traitCollection;
}

@property (retain, nonatomic) NSString *spec;
@property (retain, nonatomic) NSString *config;
@property (retain, nonatomic) CCVegaHTMLElement *container;
@property (retain, nonatomic) JSValue *renderer;
@property (retain) CCVegaCARenderer *CARenderer;
@property (retain) CCViewRendererDelegate *viewDelegate;
@property (retain, nonatomic) CCAsyncQueue *asyncQueue;
@property struct CGImage { } *currentCGImage;
@property (retain) CCVegaWorker *worker;
@property (retain) CCVegaWorkerClient *workerClient;
@property (retain, nonatomic) NSArray *data;
@property double scaleFactor;
@property double zoomFactor;
@property unsigned int rendererType;
@property (retain) CALayer *caLayer;
@property (weak) NSObject<CCVegaRendererDelegate> *delegate;
@property (readonly) BOOL specIsValid;
@property BOOL isActive;
@property (retain) NSLocale *locale;
@property (retain) NSCalendar *calendar;
@property (retain) UITraitCollection *traitCollection;

- (id)cursor;
- (double)width;
- (id)accessibilityElements;
- (void).cxx_destruct;
- (void)dealloc;
- (double)height;
- (void)setSize:(struct CGSize { double x0; double x1; })a0;
- (void)loadState:(id)a0;
- (struct CGImage { } *)currentBitmap;
- (void)displayWithCommitter:(id)a0;
- (struct CGColor { } *)newColorFromCSSString:(id)a0 alpha:(double)a1;
- (struct CGColor { } *)newColorFromCSSString:(id)a0;
- (id)fontOptions;
- (void)workerContextEnter;
- (void)workerContextExit;
- (void)workerDidExecuteTimerCallback;
- (struct CGImage { } *)newImageFromURL:(id)a0;
- (void)setLocale:(id)a0 calendar:(id)a1 shouldRefresh:(BOOL)a2;
- (double)currentBitmapScaleFactor;
- (void)rerender;
- (void)refreshNativeSignals;
- (void)rerenderEntireChart;
- (id)initWithSpec:(id)a0 config:(id)a1 options:(id)a2 workerClient:(id)a3;
- (id)saveStateWithNamedDatasets:(id)a0;
- (void)triggerEventWithType:(id)a0 event:(id)a1 waitForEventHandling:(BOOL)a2;
- (void)setDefaultDataset:(id)a0;
- (void)setNamedDataset:(id)a0 rows:(id)a1;
- (void)changeDefaultDatasetByInserting:(id)a0 removingIDs:(id)a1;
- (void)changeNamedDataset:(id)a0 inserting:(id)a1 removingIDs:(id)a2;
- (struct CGImage { } *)renderToCGImage;
- (id)newDataWithPDFImage;
- (id)getSignalWithName:(id)a0;
- (void)setSignalWithName:(id)a0 toValue:(id)a1;
- (id)addListener:(id /* block */)a0 toSignalWithName:(id)a1;
- (void)removeListener:(id)a0 fromSignalWithName:(id)a1;
- (void)simplifyQueue:(id)a0;
- (void)updateNativeView;
- (void)setupSignalHandlers;
- (void)setupScreenSignal;
- (void)runAsyncWithCallback:(id /* block */)a0;
- (void)_doUpdateInMainThread;
- (id)vegaContext;
- (void)scheduleDisplay;
- (void)refreshNativeSignalsRerunDataflow:(BOOL)a0;
- (void)updateInMainThreadIfNeeded;
- (void)clearPendingDataUpdates;
- (void)updateScaleFactor:(double)a0 zoomFactor:(double)a1;
- (void)enqueueRunAsync;
- (void)changeNamedDataset:(id)a0 inserting:(id)a1 removingWithCallback:(id /* block */)a2;
- (void)runAsync;
- (void)addPendingDataUpdate:(id)a0;
- (BOOL)hasPendingDataUpdate:(id)a0;

@end
