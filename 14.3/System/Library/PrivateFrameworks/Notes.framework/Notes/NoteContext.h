@class NoteStoreObject, NSManagedObjectContext, ICManagedObjectContextUpdater, AccountUtilities, CPExclusiveLock, NSMutableDictionary, NoteAccountObject, ICSelectorDelayer, NSManagedObjectModel, NSNumber;

@interface NoteContext : NSObject <ICLegacyContext> {
    NSManagedObjectContext *_managedObjectContext;
    NoteStoreObject *_localStore;
    NoteAccountObject *_localAccount;
    NSManagedObjectContext *_nextIdContext;
    CPExclusiveLock *_nextIdLock;
    NSNumber *_nextId;
    CPExclusiveLock *_objectCreationLock;
    unsigned long long _notificationCount;
    BOOL _logChanges;
    BOOL _indexInBatches;
    BOOL _hasPriorityInSaveConflicts;
    BOOL _inMigrator;
    NSMutableDictionary *_notePropertyObjectsRealized;
}

@property (class, readonly, nonatomic) NSManagedObjectModel *managedObjectModel;

@property (readonly, nonatomic) NSManagedObjectContext *managedObjectContext;
@property (retain, nonatomic) AccountUtilities *accountUtilities;
@property (nonatomic) BOOL isMainContext;
@property (nonatomic) BOOL usePrivateQueue;
@property (retain, nonatomic) ICManagedObjectContextUpdater *mocUpdater;
@property (retain, nonatomic) ICSelectorDelayer *externalChangeNotificationDelayer;
@property (readonly, retain, nonatomic) NSManagedObjectContext *managedObjectContext;

+ (id)storeOptions;
+ (id)visibleNotesPredicate;
+ (id)visibleNotesIncludingEmptyBodyContentPredicate;
+ (id)pathForIndex;
+ (id)persistentStoreCoordinator;
+ (void)removeConflictingSqliteAndIdxFiles;
+ (id)allVisibleNotesMatchingPredicate:(id)a0 sorted:(BOOL)a1 context:(id)a2 fetchLimit:(unsigned long long)a3;
+ (unsigned long long)countOfVisibleNotesInCollectionIncludingNotesWithoutBodyContent:(id)a0;
+ (id)allVisibleNotesMatchingPredicate:(id)a0 context:(id)a1;
+ (id)newFetchRequestForNotes;
+ (void)clearTestsNotesRootPath;
+ (unsigned long long)countOfVisibleNotesInCollection:(id)a0;
+ (id)urlForPersistentStore;
+ (id)fileURLProtectionOption;
+ (id)searchIndexerDataSource;
+ (id)allVisibleNotesMatchingPredicate:(id)a0 sorted:(BOOL)a1 context:(id)a2;
+ (id)newManagedObjectContext;
+ (id)newlyAddedAttachmentInContext:(id)a0;
+ (BOOL)databaseIsCorrupt:(id)a0;
+ (id)fileProtectionOption;
+ (void)setTestsNotesRootPath:(id)a0;
+ (unsigned long long)countOfVisibleNotesMatchingPredicate:(id)a0 includingNoteWithoutBodyContent:(BOOL)a1 context:(id)a2;
+ (id)pathForPersistentStore;
+ (void)removeSqliteAndIdxFiles;
+ (id)defaultNotesSortDescriptors;
+ (unsigned long long)countOfVisibleNotesMatchingPredicate:(id)a0 context:(id)a1;
+ (id)newFetchRequestForStores;
+ (id)newLegacyContext;
+ (id)generateGUID;
+ (BOOL)shouldLogIndexing;
+ (id)newFetchRequestForAccounts;

- (BOOL)save:(id *)a0;
- (void)clearCaches;
- (id)visibleNotesPredicate;
- (id)storeForObjectID:(id)a0;
- (id)initWithPrivateQueue:(BOOL)a0;
- (void)performBlock:(id /* block */)a0;
- (BOOL)deleteAccount:(id)a0;
- (id)faultedInStoresForAccounts:(id)a0;
- (id)notesForIntegerIds:(id)a0;
- (void)deleteNote:(id)a0;
- (id)init;
- (id)newFRCForStoresWithDelegate:(id)a0;
- (id)initForMainContext;
- (id)allVisibleNotesInCollection:(id)a0 sorted:(BOOL)a1;
- (void).cxx_destruct;
- (void)deleteChanges:(id)a0;
- (BOOL)shouldDisableLocalStore;
- (void)updateForRecentChanges;
- (BOOL)saveSilently:(id *)a0;
- (id)allStores;
- (unsigned long long)countOfNotesInCollection:(id)a0;
- (void)reset;
- (id)getNextIdObject;
- (id)newFetchRequestForNotes;
- (void)sortNotes:(id)a0;
- (unsigned long long)countOfVisibleNotesInCollection:(id)a0;
- (id)allAccountsAsFaults:(BOOL)a0 prefechedRelationshipKeyPaths:(id)a1;
- (void)dealloc;
- (id)localAccount;
- (void)postNotesChangedExternally;
- (void)tearDownCoreDataStack;
- (id)newlyAddedStore;
- (void)managedObjectContextWillSaveNotification:(id)a0;
- (id)collectionForInfo:(id)a0;
- (void)resetNotificationCount;
- (void)batchFaultNotes:(id)a0;
- (id)noteChangeWithType:(int)a0 store:(id)a1;
- (id)allNotesWithoutBodiesInCollection:(id)a0;
- (id)noteForObjectID:(id)a0;
- (id)initWithPrivateQueue;
- (BOOL)setUpLastIndexTid;
- (id)initWithAccountUtilities:(id)a0 inMigrator:(BOOL)a1;
- (id)allVisibleNotesForAccountWithObjectID:(id)a0;
- (id)nextIndex;
- (id)allVisibleNotesMatchingPredicate:(id)a0 sorted:(BOOL)a1;
- (id)allNotesInCollection:(id)a0;
- (id)newFRCForCollection:(id)a0 delegate:(id)a1 performFetch:(BOOL)a2;
- (BOOL)saveOutsideApp:(id *)a0;
- (id)newFRCForFetchRequest:(id)a0 delegate:(id)a1 performFetch:(BOOL)a2;
- (BOOL)hasMultipleEnabledStores;
- (unsigned long long)countOfVisibleNotesForAccountWithObjectID:(id)a0;
- (id)liveNotesNeedingBodiesPredicate;
- (unsigned long long)countOfNotes;
- (unsigned long long)countOfStores;
- (id)allNotes;
- (void)handleMigration;
- (id)_notePropertyObjectForKey:(id)a0;
- (id)visibleNotesForIntegerIds:(id)a0;
- (BOOL)shouldObserveDarwinNotifications;
- (id)newlyAddedAttachment;
- (void)enableChangeLogging:(BOOL)a0;
- (long long)context:(id)a0 shouldHandleInaccessibleFault:(id)a1 forObjectID:(id)a2 andTrigger:(id)a3;
- (id)newlyAddedNoteWithGUID:(id)a0;
- (id)initWithAccountUtilities:(id)a0 inMigrator:(BOOL)a1 isMainContext:(BOOL)a2 usePrivateQueue:(BOOL)a3;
- (unsigned long long)countOfVisibleNotes;
- (id)allNotesMatchingPredicate:(id)a0;
- (BOOL)setUpLocalAccountAndStore;
- (id)newlyAddedNote;
- (BOOL)deleteStore:(id)a0;
- (BOOL)nonEmptyNoteExistsForLegacyAccountWithObjectID:(id)a0;
- (id)initForMigrator;
- (BOOL)setUpCoreDataStack;
- (void)setUpUniqueObjects;
- (id)existingObjectWithID:(id)a0 error:(id *)a1;
- (id)defaultStoreForNewNote;
- (id)propertyValueForKey:(id)a0;
- (void)forceSetUpUniqueObjects;
- (void)deleteNoteRegardlessOfConstraints:(id)a0;
- (id)newFRCForCollection:(id)a0 delegate:(id)a1;
- (id)visibleNoteForObjectID:(id)a0;
- (id)accountForAccountId:(id)a0;
- (void)receiveDarwinNotificationWithChangeLogging:(BOOL)a0;
- (id)initWithAccountUtilities:(id)a0;
- (id)newFRCForAccountsWithDelegate:(id)a0;
- (unsigned long long)countOfNotesMatchingPredicate:(id)a0;
- (void)setHasPriorityInSaveConflicts:(BOOL)a0;
- (void)trackChanges:(id)a0;
- (unsigned long long)countOfVisibleNotesMatchingPredicate:(id)a0;
- (void)setPropertyValue:(id)a0 forKey:(id)a1;
- (void)performBlockAndWait:(id /* block */)a0;
- (id)allAccounts;
- (id)allVisibleNotesInCollection:(id)a0;
- (id)allVisibleNotes;
- (BOOL)forceDeleteAccount:(id)a0;
- (id)localStore;
- (void)cleanUpLocks;
- (id)allVisibleNotesMatchingPredicate:(id)a0;
- (void)invalidate;
- (id)mostRecentlyModifiedNoteInCollection:(id)a0;
- (id)collectionForObjectID:(id)a0;
- (id)newlyAddedAccount;
- (id)allVisibleNoteObjectIDsForAccountWithObjectID:(id)a0;
- (void)_createLocalAccount:(id *)a0 andStore:(id *)a1;

@end
