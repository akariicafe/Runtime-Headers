@class CAMInterfaceModulationView, CEKLightingControl, CAMPreviewAlignmentGuide, CAMPreviewView, CAMModeDial, CAMZoomSlider, CAMDynamicShutterControl, CAMModeIndicatorView, CAMCreativeCameraButton, CAMControlDrawer, CAMLowLightInstructionLabel, CAMFlashCompromisedInstructionLabel, CAMTimerIndicatorView, CAMPortraitModeDescriptionOverlayView, CEKLightingNameBadge, UILongPressGestureRecognizer, CAMPortraitModeInstructionLabel, CAMFullscreenModeSelector, CAMFlipButton, CAMZoomControl, CAMCTMDescriptionOverlayView, CAMImageWell, CAMBadgeTray, CAMFullscreenViewfinderLayout, UIView, CAMFilterNameBadge, CAMPanoramaView, CAMControlStatusBar, NSString, CAMAdditiveAnimator, CAMElapsedTimeView, AVSpatialOverCaptureVideoPreviewLayer, CAMViewfinderReticleView, CAMQRCodeInstructionLabel;
@protocol CAMFullscreenViewfinderDelegate;

@interface CAMFullscreenViewfinder : UIView <CAMAdditiveAnimatorDelegate, CAMControlDrawerPresentationDelegate, CEKBadgeViewDelegate, CAMInstructionLabelDelegate, CAMViewfinderTransitionable, CAMAccessibilityHUDItemProvider, CAMBarsAccessibilityHUDManagerGestureProvider>

@property (readonly, nonatomic) UIView *_previewContainerView;
@property (readonly, nonatomic) UIView *_modeClippingView;
@property (readonly, nonatomic) CAMViewfinderReticleView *_reticleView;
@property (retain, nonatomic, setter=_setControlDrawer:) CAMControlDrawer *controlDrawer;
@property (retain, nonatomic, setter=_setZoomControl:) CAMZoomControl *zoomControl;
@property (retain, nonatomic, setter=_setZoomSlider:) CAMZoomSlider *zoomSlider;
@property (retain, nonatomic, setter=_setTimerIndicator:) CAMTimerIndicatorView *timerIndicator;
@property (retain, nonatomic, setter=_setLowLightInstructionLabel:) CAMLowLightInstructionLabel *_lowLightInstructionLabel;
@property (retain, nonatomic, setter=_setFlashCompromisedInstructionLabel:) CAMFlashCompromisedInstructionLabel *flashCompromisedInstructionLabel;
@property (retain, nonatomic, setter=_setPreviewAlignmentGuide:) CAMPreviewAlignmentGuide *previewAlignmentGuide;
@property (retain, nonatomic, setter=_setBottomLegibilityBackground:) UIView *_bottomLegibilityBackground;
@property (readonly, nonatomic) CAMFullscreenViewfinderLayout *_layout;
@property (readonly, nonatomic, getter=_isUsingCreativeCameraControls) BOOL _usingCreativeCameraControls;
@property (nonatomic, getter=_isControlDrawerPresentedModally, setter=_setControlDrawerPresentedModally:) BOOL _controlDrawerPresentedModally;
@property (retain, nonatomic, setter=_setOverCapturePreviewLayer:) AVSpatialOverCaptureVideoPreviewLayer *_overCapturePreviewLayer;
@property (readonly, nonatomic) CAMAdditiveAnimator *_viewportAnimator;
@property (readonly, nonatomic) CAMInterfaceModulationView *_contentView;
@property (weak, nonatomic) id<CAMFullscreenViewfinderDelegate> delegate;
@property (retain, nonatomic) NSString *contentSize;
@property (readonly, nonatomic, getter=isControlDrawerAllowed) BOOL controlDrawerAllowed;
@property (readonly, nonatomic, getter=isModeUIAllowed) BOOL modeUIAllowed;
@property (nonatomic, getter=isControlDrawerExpanded) BOOL controlDrawerExpanded;
@property (nonatomic, getter=isFlipButtonVisible) BOOL flipButtonVisible;
@property (nonatomic, getter=isZoomControlVisible) BOOL zoomControlVisible;
@property (nonatomic) unsigned long long zoomStyle;
@property (nonatomic, getter=isElapsedTimeViewVisible) BOOL elapsedTimeViewVisible;
@property (nonatomic, getter=isTimerIndicatorVisible) BOOL timerIndicatorVisible;
@property (readonly, nonatomic, getter=isQRCodeLabelVisible) BOOL qrCodeLabelVisible;
@property (nonatomic, getter=isLowLightInstructionLabelVisible) BOOL lowLightInstructionLabelVisible;
@property (nonatomic, getter=isPreviewAlignmentGuideVisible) BOOL previewAlignmentGuideVisible;
@property (nonatomic, getter=isLegibilityBackgroundsVisible) BOOL legibilityBackgroundsVisible;
@property (retain, nonatomic) CAMPreviewView *previewView;
@property (nonatomic) long long previewViewOrientation;
@property (nonatomic) long long orientation;
@property (readonly, nonatomic, getter=isReticleAnimating) BOOL reticleAnimating;
@property (readonly, nonatomic) CAMDynamicShutterControl *shutterControl;
@property (readonly, nonatomic) CAMControlStatusBar *controlStatusBar;
@property (readonly, nonatomic) CAMBadgeTray *badgeTray;
@property (readonly, nonatomic) CAMModeDial *modeDial;
@property (readonly, nonatomic) CAMModeIndicatorView *modeIndicator;
@property (readonly, nonatomic) CAMFullscreenModeSelector *modeSelector;
@property (readonly, nonatomic) CAMFlipButton *flipButton;
@property (readonly, nonatomic) CAMImageWell *imageWell;
@property (readonly, nonatomic) CAMElapsedTimeView *elapsedTimeView;
@property (retain, nonatomic) CAMPanoramaView *panoramaView;
@property (nonatomic) struct CGSize { double x0; double x1; } panoramaCaptureSize;
@property (readonly, nonatomic) CAMCreativeCameraButton *creativeCameraButton;
@property (readonly, nonatomic) CAMFilterNameBadge *filterNameBadge;
@property (nonatomic, getter=isPortraitControlsAllowed) BOOL portraitControlsAllowed;
@property (nonatomic) long long shallowDepthOfFieldStatus;
@property (readonly, nonatomic) CEKLightingControl *lightingControl;
@property (readonly, nonatomic) CEKLightingNameBadge *lightingNameBadge;
@property (readonly, nonatomic) CAMPortraitModeInstructionLabel *portraitInstructionLabel;
@property (nonatomic) long long viewportAspectRatio;
@property (readonly, nonatomic) UILongPressGestureRecognizer *modeSelectorGestureRecognizer;
@property (readonly, nonatomic) CAMQRCodeInstructionLabel *qrCodeInstructionLabel;
@property (retain, nonatomic) CAMPortraitModeDescriptionOverlayView *portraitModeOverlayView;
@property (retain, nonatomic, setter=setCTMOverlayView:) CAMCTMDescriptionOverlayView *ctmOverlayView;
@property (nonatomic) unsigned long long interfaceModulation;
@property (nonatomic, getter=isFlashCompromisedInstructionLabelVisible) BOOL flashCompromisedInstructionLabelVisible;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) long long desiredAspectRatio;

+ (Class)layerClass;
+ (id)darkControlBackgroundColor;
+ (id)lightControlBackgroundColor;

- (void)setOrientation:(long long)a0 animated:(BOOL)a1;
- (void).cxx_destruct;
- (void)selectedByAccessibilityHUDManager:(id)a0;
- (id)hudItemForAccessibilityHUDManager:(id)a0;
- (void)prepareForResumingUsingCrossfade;
- (void)layoutSubviews;
- (void)instructionLabelDidChangeIntrinsicContentSize:(id)a0;
- (id)touchingRecognizersToCancel;
- (void)badgeViewDidChangeIntrinsicContentSize:(id)a0;
- (void)removeInflightBlurAnimations;
- (void)_handleDirectionIndicatorTapped;
- (void)_updateControlsForContentSize;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForPreviewView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForReticleViewport;
- (void)_setViewportAnimatorFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForFlipButton;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x2; })_geometryForBadgeTray;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForImageWell;
- (void)_updateReticleForViewportFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_updatePreviewLayerForPreviewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 viewportFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)_updateModeDialClippingForViewportFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_updatePreviewAlignmentGuideForViewportFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForPreviewOverlaysInViewport:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForModeView;
- (void)_layoutZoomControls;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForControlDrawer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForBottomLegibilityBackground;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x2; })_geometryForInstructionLabel:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForLightingControl;
- (void)_applyAnimationSensitiveGeometry:(struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x2; })a0 toView:(id)a1;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x2; })_geometryForLandscapeLightingBadge;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x2; })_geometryForBottomCenteredView:(id)a0;
- (void)_layoutPanoramaView;
- (void)_updateSubviewsVisibilityAnimated:(BOOL)a0;
- (void)_updateTintColors;
- (void)_setViewportAnimatorFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withDuration:(double)a1 timingCurve:(id)a2;
- (BOOL)_showControlDrawer;
- (id)_visibleInstructionLabel;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_currentFourThreeViewportFrame;
- (BOOL)_showLandscapeLightingBadge;
- (void)setPortraitControlsAllowed:(BOOL)a0 animated:(BOOL)a1;
- (void)_loadPortraitControlsIfNeeded;
- (void)_setNeedsLayoutAnimated:(BOOL)a0;
- (void)setShallowDepthOfFieldStatus:(long long)a0 animated:(BOOL)a1;
- (void)_updatePortraitControlsHighlightAnimated:(BOOL)a0;
- (unsigned long long)_badgeFontStyle;
- (void)setViewportAspectRatio:(long long)a0 animated:(BOOL)a1;
- (void)setQRCodeLabelVisible:(BOOL)a0 animated:(BOOL)a1;
- (void)setControlDrawerExpanded:(BOOL)a0 animated:(BOOL)a1;
- (void)_loadFilterControlsIfNeeded;
- (BOOL)_showPortraitControls;
- (BOOL)_showModeView;
- (BOOL)_showFilterNameBadge;
- (BOOL)_showPortraitInstructions;
- (void)_transitionView:(id)a0 fromOrientation:(long long)a1 toOrientation:(long long)a2;
- (void)setFlipButtonVisible:(BOOL)a0 animated:(BOOL)a1;
- (void)setZoomControlVisible:(BOOL)a0 animated:(BOOL)a1;
- (void)setElapsedTimeViewVisible:(BOOL)a0 animated:(BOOL)a1;
- (void)setTimerIndicatorVisible:(BOOL)a0 animated:(BOOL)a1;
- (void)setLowLightInstructionLabelVisible:(BOOL)a0 animated:(BOOL)a1;
- (void)setFlashCompromisedInstructionLabelVisible:(BOOL)a0 animated:(BOOL)a1;
- (void)setPreviewAlignmentGuideVisible:(BOOL)a0 animated:(BOOL)a1;
- (void)setLegibilityBackgroundsVisible:(BOOL)a0 animated:(BOOL)a1;
- (void)_insertBackgroundSubview:(id)a0;
- (void)setInterfaceModulation:(unsigned long long)a0 animated:(BOOL)a1;
- (void)_iterateViewsForHUDManager:(id)a0 withItemFoundBlock:(id /* block */)a1;
- (BOOL)shouldAccessibilityGestureBeginForHUDManager:(id)a0;
- (void)animator:(id)a0 didUpdateValuesForKeys:(id)a1;
- (void)controlDrawer:(id)a0 didChangeExpanded:(BOOL)a1 forControlType:(long long)a2 animated:(BOOL)a3;
- (id)initWithMetalContext:(id)a0 useCreativeCameraControls:(BOOL)a1;
- (BOOL)loadQRCodeInstructionLabelIfNeeded;
- (void)setQrCodeLabelVisible:(BOOL)a0;
- (void)presentControlDrawerModally:(BOOL)a0 withControlType:(long long)a1;
- (BOOL)isControlDrawerPresentedModallyWithControlType:(long long)a0;
- (void)dismissModalControlDrawerIfNeeded;
- (void)setControlDrawerAllowed:(BOOL)a0 modeUIAllowed:(BOOL)a1 animated:(BOOL)a2;
- (void)setReticleMaskingStyle:(long long)a0 withDuration:(double)a1;

@end
