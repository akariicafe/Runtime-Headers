@class CAMThumbnailGenerator, CAMCaptureRequestIntervalometer, CAMVideoCaptureRequest, CAMBurstController, CAMLocationController, NSString, NSMutableSet, CAMIrisVideoController, NSMutableDictionary, CAMCaptureEngine, CAMStillImageCaptureRequest, NSCountedSet, NSObject, CAMPanoramaCaptureRequest, CAMProtectionController, CAMRemoteShutterController, CAMMotionController, CAMPowerController, CAMKeyValueCoalescer, CAMPanoramaPreviewView, AVCaptureVideoPreviewLayer;
@protocol CAMCaptureResultDelegate, CAMExposureDelegate, CAMMachineReadableCodeDelegate, OS_dispatch_queue, CAMPanoramaChangeDelegate, CAMHistogramDelegate, CAMShallowDepthOfFieldStatusDelegate, CAMPreviewLayerOverCaptureStatusDelegate, CAMZoomDelegate, CAMBurstDelegate, CAMCaptureRecoveryDelegate, CAMFacesDelegate, CAMCaptureInterruptionDelegate, CAMAvailabilityDelegate, CAMConfigurationDelegate, CAMCaptureRunningDelegate, CAMSuggestionDelegate, CAMFocusDelegate, CAMStillImageCapturingVideoDelegate;

@interface CUCaptureController : NSObject <CAMCaptureService, CAMCaptureRequestIntervalometerDelegate> {
    CAMPanoramaPreviewView *_panoramaPreviewView;
    _Atomic int _uniqueRequestIDForConfigurationChange;
}

@property (readonly, nonatomic) CAMCaptureEngine *_captureEngine;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *_responseQueue;
@property (readonly, nonatomic) CAMThumbnailGenerator *_responseThumbnailGenerator;
@property (nonatomic, getter=_isCapturingPairedVideoPaused, setter=_setCapturingPairedVideoPaused:) BOOL _capturingPairedVideoPaused;
@property (nonatomic, setter=_setNeedsInitialPairedVideoUpdate:) BOOL _needsInitialPairedVideoUpdate;
@property (retain, nonatomic, setter=_setCapturingCTMVideoRequest:) CAMStillImageCaptureRequest *_capturingCTMVideoRequest;
@property (retain, nonatomic, setter=_setCapturingVideoRequest:) CAMVideoCaptureRequest *_capturingVideoRequest;
@property (retain, nonatomic, setter=_setPendingVideoCaptureRequest:) CAMVideoCaptureRequest *_pendingVideoCaptureRequest;
@property (retain, nonatomic, setter=_setCapturingPanoramaRequest:) CAMPanoramaCaptureRequest *_capturingPanoramaRequest;
@property (retain, nonatomic, setter=_setCapturingLowLightStillImageRequest:) CAMStillImageCaptureRequest *_capturingLowLightStillImageRequest;
@property (retain, nonatomic, setter=_setCurrentBurstIntervalometer:) CAMCaptureRequestIntervalometer *currentBurstIntervalometer;
@property (readonly, nonatomic) CAMKeyValueCoalescer *_focusCoalescer;
@property (readonly, nonatomic) CAMKeyValueCoalescer *_exposureCoalescer;
@property (nonatomic, getter=isRampingVideoZoom) BOOL rampingVideoZoom;
@property (nonatomic, getter=isFlashActive, setter=_setFlashActive:) BOOL flashActive;
@property (nonatomic, getter=isTorchActive, setter=_setTorchActive:) BOOL torchActive;
@property (nonatomic, getter=isHDRSuggested, setter=_setHDRSuggested:) BOOL HDRSuggested;
@property (nonatomic, setter=_setLowLightStatus:) long long lowLightStatus;
@property (readonly, nonatomic) NSCountedSet *_numberOfInflightRequestsByType;
@property (nonatomic, setter=_setMaximumNumberOfStillImageRequests:) long long _maximumNumberOfStillImageRequests;
@property (nonatomic, getter=isCaptureAvailable, setter=_setCaptureAvailable:) BOOL captureAvailable;
@property (nonatomic, setter=_setDidCompleteInitialConfiguration:) BOOL _didCompleteInitialConfiguration;
@property (nonatomic, getter=_isFailedConfigurationPreventingCapture, setter=_setFailedConfigurationPreventingCapture:) BOOL failedConfigurationPreventingCapture;
@property (nonatomic, getter=_isVideoCaptureAvailable, setter=_setVideoCaptureAvailable:) BOOL _isVideoCaptureAvailable;
@property (nonatomic, getter=isConfigurationAvailable, setter=_setConfigurationAvailable:) BOOL configurationAvailable;
@property (nonatomic, getter=isFlashAvailable, setter=_setFlashAvailable:) BOOL flashAvailable;
@property (nonatomic, getter=isTorchAvailable, setter=_setTorchAvailable:) BOOL torchAvailable;
@property (nonatomic, setter=_setFlashCompromise:) unsigned long long flashCompromise;
@property (readonly, nonatomic) NSMutableSet *_identifiersForActiveLivePhotoVideoCaptures;
@property (readonly, nonatomic) NSMutableSet *_identifiersForActiveCTMVideoCaptures;
@property (readonly, nonatomic) BOOL _shouldResetFocusAndExposureAfterCapture;
@property (readonly, nonatomic) NSMutableDictionary *_persistenceUUIDToSignpostID;
@property (nonatomic, setter=_setNextSignpostID:) unsigned long long _nextSignpostID;
@property (readonly, nonatomic) CAMLocationController *_locationController;
@property (readonly, nonatomic) CAMMotionController *_motionController;
@property (readonly, nonatomic) CAMBurstController *_burstController;
@property (readonly, nonatomic) CAMProtectionController *_protectionController;
@property (readonly, nonatomic) CAMPowerController *_powerController;
@property (readonly, nonatomic) CAMIrisVideoController *_irisVideoController;
@property (readonly, nonatomic) CAMRemoteShutterController *_remoteShutterController;
@property (readonly, nonatomic, getter=isPreviewDisabled) BOOL previewDisabled;
@property (readonly, nonatomic) AVCaptureVideoPreviewLayer *videoPreviewLayer;
@property (readonly, nonatomic) CAMPanoramaPreviewView *panoramaPreviewView;
@property (weak, nonatomic) id<CAMPreviewLayerOverCaptureStatusDelegate> previewLayerOverCaptureStatusDelegate;
@property (readonly, nonatomic, getter=isCapturingStillImage) BOOL capturingStillImage;
@property (weak, nonatomic) id<CAMStillImageCapturingVideoDelegate> stillImageCapturingVideoDelegate;
@property (readonly, nonatomic, getter=isCapturingLivePhotoVideo) BOOL capturingLivePhotoVideo;
@property (readonly, nonatomic, getter=isCapturingCTMVideo) BOOL capturingCTMVideo;
@property (readonly, nonatomic, getter=isCapturingLowLightImage) BOOL capturingLowLightImage;
@property (readonly, nonatomic, getter=isCapturingVideo) BOOL capturingVideo;
@property (readonly, nonatomic, getter=isCapturingStandardVideo) BOOL capturingStandardVideo;
@property (readonly, nonatomic, getter=isCapturingPanorama) BOOL capturingPanorama;
@property (weak, nonatomic) id<CAMPanoramaChangeDelegate> panoramaChangeDelegate;
@property (readonly, nonatomic, getter=isCapturingBurst) BOOL capturingBurst;
@property (readonly, nonatomic) unsigned long long currentBurstCount;
@property (weak, nonatomic) id<CAMBurstDelegate> burstDelegate;
@property (nonatomic, getter=isCapturingTimelapse) BOOL capturingTimelapse;
@property (weak, nonatomic) id<CAMConfigurationDelegate> configurationDelegate;
@property (weak, nonatomic) id<CAMSuggestionDelegate> suggestionDelegate;
@property (weak, nonatomic) id<CAMAvailabilityDelegate> availabilityDelegate;
@property (weak, nonatomic) id<CAMFocusDelegate> focusDelegate;
@property (weak, nonatomic) id<CAMExposureDelegate> exposureDelegate;
@property (weak, nonatomic) id<CAMShallowDepthOfFieldStatusDelegate> shallowDepthOfFieldStatusDelegate;
@property (readonly, nonatomic) BOOL shouldAllowUserToChangeFocusAndExposure;
@property (weak, nonatomic) id<CAMFacesDelegate> facesDelegate;
@property (weak, nonatomic) id<CAMMachineReadableCodeDelegate> machineReadableCodeDelegate;
@property (weak, nonatomic) id<CAMHistogramDelegate> histogramDelegate;
@property (weak, nonatomic) id<CAMCaptureResultDelegate> resultDelegate;
@property (weak, nonatomic) id<CAMZoomDelegate> zoomDelegate;
@property (weak, nonatomic) id<CAMCaptureRecoveryDelegate> recoveryDelegate;
@property (weak, nonatomic) id<CAMCaptureRunningDelegate> runningDelegate;
@property (weak, nonatomic) id<CAMCaptureInterruptionDelegate> interruptionDelegate;
@property (readonly, nonatomic, getter=isInterrupted) BOOL interrupted;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (float)focusLensPositionCurrentSentinel;

- (void)panoramaRequestDidStartCapturing:(id)a0;
- (void)stillImageRequestDidCompleteCapture:(id)a0 error:(id)a1;
- (void)videoRequestDidStartCapturing:(id)a0;
- (void)stillImageRequestDidStartCapturing:(id)a0 resolvedSettings:(id)a1;
- (int)applyCaptureConfiguration:(id)a0;
- (void)panoramaRequestDidStopCapturing:(id)a0 interrupted:(BOOL)a1;
- (void)videoRequestDidStopCapturing:(id)a0;
- (int)_uniqueRequestIDForChangeToModeAndDevice;
- (void)_updateAvailabilityAfterCapturedRequest:(id)a0;
- (void)startCaptureSessionWithRetryCount:(unsigned long long)a0 retryInterval:(double)a1 logReason:(id)a2 completion:(id /* block */)a3;
- (void)_teardownAvailabilityMonitoring;
- (void)stillImageRequestDidBeginCaptureBeforeResolvingSettings:(id)a0;
- (void)stillImageRequestDidStopCapturingStillImage:(id)a0;
- (void)changeToFlashMode:(long long)a0;
- (id)_updateFocusAndExposureForStartBurstCapture;
- (id)_commandForConfiguration:(id)a0 outRequestID:(int *)a1;
- (void)stillImageRequest:(id)a0 didCompleteStillImageCaptureWithResult:(id)a1;
- (void)_setupFocusMonitoring;
- (void)lockFocusAtLensPosition:(float)a0 completionBlock:(id /* block */)a1;
- (void)_scheduleFocusAndExposureResetAfterCaptureIfNecessary;
- (void)focusAtCenterForVideoRecording;
- (void)_updateAvailabilityAfterEnqueuedRequest:(id)a0;
- (id)_focusKVOKeyPaths;
- (BOOL)initiateCTMCaptureWithSettings:(id)a0 error:(id *)a1;
- (id)_sanitizeVideoRequest:(id)a0;
- (void)changeToVideoHDRSuspended:(BOOL)a0;
- (void).cxx_destruct;
- (void)unregisterVideoThumbnailContentsDelegate:(id)a0;
- (void)_setupFocusAndExposureMonitoring;
- (void)stopMonitoringForHDRSuggestions;
- (void)startRampToVideoZoomFactor:(double)a0 withRate:(float)a1;
- (void)pauseCapturingStillImagePairedVideo;
- (void)stopCapturingBurst;
- (void)_setupExposureMonitoring;
- (void)endCTMVideoCapture;
- (void)stillImageRequest:(id)a0 didCompleteVideoCaptureWithResult:(id)a1;
- (BOOL)startCapturingPanoramaWithRequest:(id)a0 error:(id *)a1;
- (void)dealloc;
- (BOOL)_internalCaptureStillImageWithRequest:(id)a0 error:(id *)a1;
- (void)unregisterCaptureService:(id)a0;
- (void)_processPendingVideoCaptureRequest:(id)a0;
- (id)_sanitizeStillImageRequest:(id)a0;
- (void)_setupOverCapturePreviewMonitoring;
- (void)_beginTrackingLivePhotoVideoRecordingForIdentifier:(id)a0;
- (BOOL)stopCapturingVideo;
- (void)startRampToVideoZoomFactor:(double)a0 withDuration:(double)a1;
- (int)changeToGraphConfiguration:(id)a0 minimumExecutionTime:(double)a1;
- (id)initWithCaptureConfiguration:(id)a0 engineOptions:(long long)a1 locationController:(id)a2 motionController:(id)a3 burstController:(id)a4 protectionController:(id)a5 powerController:(id)a6 irisVideoController:(id)a7 remoteShutterController:(id)a8;
- (void)_systemPressureStateMonitoringChangedForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2;
- (void)handleSessionDidStopRunning;
- (void)_didPlayBeginVideoRecordingSound;
- (void)stopCaptureSessionWithCompletion:(id /* block */)a0;
- (void)_overCapturePreviewStatusChangedForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2;
- (id)_availabilityKeyPaths;
- (void)willPerformRecoveryFromRuntimeError:(id)a0;
- (BOOL)_kvoDidStartForChange:(id)a0;
- (BOOL)_canBeginCaptureCheckAvailability:(BOOL)a0 error:(id *)a1;
- (void)notifyTimelapseControllerFinishedUpdatingWithLocation;
- (void)updateRealtimeMetadataConfigurationForGraphConfiguration:(id)a0 isCapturing:(BOOL)a1;
- (void)cancelDelayedFocusAndExposureReset;
- (id)_commandForChangeToGraphConfiguration:(id)a0 zoomFactor:(double)a1 minimumExecutionTime:(double)a2 outRequestID:(int *)a3;
- (void)_teardownSuggestionMonitoring;
- (void)panoramaRequest:(id)a0 didCompleteCaptureWithResult:(id)a1;
- (id)_realtimeMetadataCommandsForMode:(long long)a0 videoConfiguration:(long long)a1 capturing:(BOOL)a2 wantsMachineReadableCodes:(BOOL)a3;
- (void)focusAndExposeAtPoint:(struct CGPoint { double x0; double x1; })a0 lockFocus:(BOOL)a1 resetExposureTargetBias:(BOOL)a2;
- (id)_systemPressureStateMonitoringKeyPaths;
- (void)_tearDownOverCapturePreviewMonitoring;
- (void)handleSessionDidStartRunning;
- (id)_updateFocusAndExposureForStartPanorama;
- (BOOL)intervalometer:(id)a0 didGenerateCaptureRequest:(id)a1;
- (void)_updateMaximumNumberOfStillImageRequestsAfterEnqueuingRequest:(id)a0;
- (void)_notifyDelegateOfCaptureAvailabilityChanged:(BOOL)a0;
- (unsigned long long)_maximumNumberOfStillImageRequestsDuringBurst;
- (void)registerVideoThumbnailContentsDelegate:(id)a0;
- (void)_zoomResultChangedForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2;
- (void)handleSessionInterruptionForReason:(long long)a0;
- (void)_handleSystemPressureStateChanged;
- (BOOL)hasActiveCTMVideoCaptures;
- (void)_setupSystemPressureStateMonitoring;
- (BOOL)captureStillImageWithRequest:(id)a0 error:(id *)a1;
- (BOOL)_shouldMonitorSystemPressureState;
- (void)_endTrackingCTMVideoRecordingForIdentifier:(id)a0;
- (void)changeToPreviewDisabled;
- (void)stopRampToVideoZoomFactor;
- (void)changeToPreviewConfiguration:(unsigned long long)a0;
- (id)_commandForResetFocus:(BOOL)a0 resetExposure:(BOOL)a1 resetExposureTargetBias:(BOOL)a2;
- (id)_thumbnailImageFromVideoCaptureResult:(id)a0 previewOrientation:(long long)a1 previewImage:(out id *)a2;
- (void)changeToVideoZoomFactor:(double)a0;
- (void)metadataWasRecognized:(id)a0 forMetadataObjectTypes:(id)a1 deviceFormat:(id)a2;
- (void)_resetFocusAndExposureIfAppropriateForReason:(long long)a0;
- (void)_teardownZoomMonitoring;
- (id)_exposureKVOKeyPaths;
- (void)_updateAvailabilityAfterStopCapturingForRequest:(id)a0;
- (void)stillImageRequest:(id)a0 didStopCapturingCTMVideoForCoordinationInfo:(id)a1;
- (void)_endCaptureSignpostIntervalForPersistenceUUID:(id)a0;
- (BOOL)_useSmoothFocus;
- (void)_beginTrackingCTMVideoRecordingForIdentifier:(id)a0;
- (void)logCaptureAvailabilityDescription;
- (BOOL)_kvoDidEndForChange:(id)a0;
- (BOOL)_internalStartCapturingVideoWithRequest:(id)a0 error:(id *)a1;
- (double)_defaultZoomFactorForGraphConfiguration:(id)a0;
- (void)_processCapturedBurstRequest:(id)a0 withResult:(id)a1;
- (BOOL)_wantsMachineReadableCodesForGraphConfiguration:(id)a0;
- (void)_handleShallowDepthOfFieldStatusChangedNotification:(id)a0;
- (void)startMonitoringForHDRSuggestions;
- (void)_updateMaximumNumberOfStillImageRequestsAfterBurst;
- (void)changeToLowLightMode:(long long)a0;
- (void)_setupZoomMonitoring;
- (void)_startCaptureSignpostIntervalForPersistenceUUID:(id)a0;
- (void)registerEffectsPreviewSampleBufferDelegate:(id)a0;
- (void)_focusResultChangedForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2;
- (void)_subjectAreaDidChange:(id)a0;
- (void)changeToPanoramaDirection:(long long)a0;
- (void)_teardownSystemPressureStateMonitoring;
- (void)_endTrackingLivePhotoVideoRecordingForIdentifier:(id)a0;
- (BOOL)commitCTMCaptureWithRequest:(id)a0 error:(id *)a1;
- (void)queryTimelapseDimensionsWithCompletionBlock:(id /* block */)a0;
- (void)stillImageRequest:(id)a0 didStopCapturingLivePhotoVideoForCoordinationInfo:(id)a1;
- (id)_identifierForPendingVideoForStillImageRequest:(id)a0;
- (void)panoramaConfigurationDidChangeWithImageQueue:(struct _CAImageQueue { } *)a0 direction:(long long)a1;
- (void)unregisterEffectsPreviewSampleBufferDelegate:(id)a0;
- (BOOL)startCapturingVideoWithRequest:(id)a0 error:(id *)a1;
- (BOOL)_shouldTrackInflightCountForRequest:(id)a0;
- (void)_updateAvailabilityWhenPreparingToStopCapturingForRequest:(id)a0;
- (void)panoramaRequest:(id)a0 didReceiveNotification:(long long)a1;
- (void)stillImageRequestWillStartCapturingVideo:(id)a0;
- (void)_availabilityResultChangedForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2;
- (void)changeToTorchLevel:(float)a0;
- (BOOL)_shouldUseShotBufferForRequest:(id)a0;
- (id)_suggestionKeyPaths;
- (void)_suggestionResultChangedForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2;
- (void)_resetFocusAndExposureAfterCapture;
- (void)queryVideoDimensionsWithCompletionBlock:(id /* block */)a0;
- (void)_updateMaximumNumberOfStillImageRequestsAfterCapturedRequestIfNecessary:(id)a0;
- (void)changeToPreviewFilters:(id)a0;
- (void)changeToTimelapseCaptureRate:(float)a0;
- (BOOL)stopCapturingPanoramaInterrupted:(BOOL)a0;
- (void)_setupAvailabilityMonitoring;
- (void)changeToPreviewEnabledWithConfiguration:(unsigned long long)a0;
- (void)prepareToCaptureStillImageAtSystemTime:(long long)a0;
- (void)changeExposureTargetBias:(float)a0;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)attemptToEndInterruptions;
- (void)changeToPanoramaEncodingBehavior:(long long)a0;
- (void)videoRequest:(id)a0 didCompleteCaptureWithResult:(id)a1;
- (void)changeToAspectRatioCrop:(long long)a0;
- (void)resumeCapturingStillImagePairedVideo;
- (int)changeToGraphConfiguration:(id)a0 zoomFactor:(double)a1 minimumExecutionTime:(double)a2;
- (id)_sanitizePanoramaRequest:(id)a0;
- (void)invalidateController;
- (void)changeToPortraitAperture:(double)a0;
- (void)_notifyDelegateOfConfigurationAvailabilityChanged:(BOOL)a0;
- (id)_thumbnailImageFromStillImageCaptureResult:(id)a0 imageOrientation:(long long)a1;
- (BOOL)startCapturingBurstWithRequest:(id)a0 error:(id *)a1;
- (void)registerCaptureService:(id)a0;
- (void)intervalometer:(id)a0 didReachMaximumCountWithRequest:(id)a1;
- (void)_exposureResultChangedForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2;
- (void)_teardownFocusAndExposureMonitoring;
- (void)_setupSuggestionMonitoring;
- (void)forceDisableSubjectAreaChangeMonitoring;
- (void)changeToLockedExposure;
- (id)_zoomMonitoringKeyPaths;
- (void)changeToTorchMode:(long long)a0;
- (void)stopCaptureSession;
- (void)_handleCaptureEngineExecutionNotification:(id)a0;
- (void)_updateAvailabilityForRequestType:(long long)a0;
- (void)handleSessionInterruptionEnded;
- (void)changeToVideoRecordingCaptureOrientation:(long long)a0;
- (void)cancelCTMCaptureForSettings:(id)a0;
- (void)changeToPortraitLightingEffectStrength:(double)a0;
- (void)startCaptureSession;

@end
