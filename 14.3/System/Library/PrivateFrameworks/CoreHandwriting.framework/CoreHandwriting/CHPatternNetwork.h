@class NSDictionary;

@interface CHPatternNetwork : NSObject {
    struct Network { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; unsigned long long x1; struct vector<NetworkNode, std::__1::allocator<NetworkNode> > { struct NetworkNode *x0; struct NetworkNode *x1; struct __compressed_pair<NetworkNode *, std::__1::allocator<NetworkNode> > { struct NetworkNode *x0; } x2; } x2; struct set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > { struct __tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<unsigned long> > { unsigned long long x0; } x2; } x0; } x3; struct vector<NetworkEdge, std::__1::allocator<NetworkEdge> > { struct NetworkEdge *x0; struct NetworkEdge *x1; struct __compressed_pair<NetworkEdge *, std::__1::allocator<NetworkEdge> > { struct NetworkEdge *x0; } x2; } x4; struct vector<const NetworkEdge *, std::__1::allocator<const NetworkEdge *> > { struct NetworkEdge **x0; struct NetworkEdge **x1; struct __compressed_pair<const NetworkEdge **, std::__1::allocator<const NetworkEdge *> > { struct NetworkEdge **x0; } x2; } x5; struct SymbolMap { void /* function */ **x0; struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x1; struct __compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > > { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *x0; } x2; } x1; struct map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long long x0; } x2; } x0; } x2; } x6; BOOL x7; struct map<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > > { struct __tree<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true> > { unsigned long long x0; } x2; } x0; } x8; struct set<NetworkEdgeIdentifier, std::__1::less<NetworkEdgeIdentifier>, std::__1::allocator<NetworkEdgeIdentifier> > { struct __tree<NetworkEdgeIdentifier, std::__1::less<NetworkEdgeIdentifier>, std::__1::allocator<NetworkEdgeIdentifier> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<NetworkEdgeIdentifier, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<NetworkEdgeIdentifier> > { unsigned long long x0; } x2; } x0; } x9; unsigned int *x10; unsigned long long x11; } *_network;
    NSDictionary *_symbols;
    NSDictionary *_startNodes;
    NSDictionary *_startCursorForContentTypes;
}

+ (id)patternToSymbolMap;
+ (id)rootCursorForContentType:(int)a0 inNetwork:(id)a1 forFirstSegmentGroup:(BOOL)a2;
+ (id)newCursorByAdvancingWithString:(id)a0 fromCursor:(id)a1 inNetwork:(id)a2;
+ (id)newCursorByAdvancingWithSymbol:(unsigned long long)a0 fromCursor:(id)a1 inNetwork:(id)a2;
+ (id)rootCursorForPatternType:(long long)a0 inNetwork:(id)a1 forFirstSegmentGroup:(BOOL)a2;
+ (id)contentTypesToPatternsMapping;
+ (BOOL)isString:(id)a0 fullPattern:(long long)a1 inNetwork:(id)a2;

- (void)dealloc;
- (id)initWithFile:(id)a0;
- (id)newCursorByAdvancingCursor:(id)a0 withSymbol:(unsigned long long)a1;
- (unsigned long long)stateTypeForNodeIndex:(unsigned long long)a0;

@end
