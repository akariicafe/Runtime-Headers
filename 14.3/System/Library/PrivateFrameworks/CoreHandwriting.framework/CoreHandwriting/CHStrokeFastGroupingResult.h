@interface CHStrokeFastGroupingResult : CHStrokeGroupingResult

@property (readonly, nonatomic) struct vector<CHFastGroupingCluster, std::__1::allocator<CHFastGroupingCluster> > { struct CHFastGroupingCluster *__begin_; struct CHFastGroupingCluster *__end_; struct __compressed_pair<CHFastGroupingCluster *, std::__1::allocator<CHFastGroupingCluster> > { struct CHFastGroupingCluster *__value_; } __end_cap_; } fastGroupingClusters;

+ (id)_strokeGroupsFromFastGroupingClusters:(const struct vector<CHFastGroupingCluster, std::__1::allocator<CHFastGroupingCluster> > { struct CHFastGroupingCluster *x0; struct CHFastGroupingCluster *x1; struct __compressed_pair<CHFastGroupingCluster *, std::__1::allocator<CHFastGroupingCluster> > { struct CHFastGroupingCluster *x0; } x2; } *)a0 clusteredStrokes:(id)a1 strokeProvider:(id)a2 strategyIdentifier:(id)a3 clutterFilter:(id)a4;
+ (id)_strokeGroupFromSortedStrokeIdentifiers:(id)a0 strokeProvider:(id)a1 strategyIdentifier:(id)a2;
+ (id)_strokeGroupFromFastGroupingCluster:(const struct CHFastGroupingCluster { struct map<unsigned long, CGPoint, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, CGPoint> > > { struct __tree<std::__1::__value_type<unsigned long, CGPoint>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, CGPoint>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, CGPoint> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, CGPoint>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, CGPoint>, std::__1::less<unsigned long>, true> > { unsigned long long x0; } x2; } x0; } x0; struct CGPoint { double x0; double x1; } x1; struct set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > { struct __tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<unsigned long> > { unsigned long long x0; } x2; } x0; } x2; } *)a0 strokeProvider:(id)a1 strategyIdentifier:(id)a2;

- (void).cxx_destruct;
- (id).cxx_construct;
- (id)initWithFastGroupingClusters:(const struct vector<CHFastGroupingCluster, std::__1::allocator<CHFastGroupingCluster> > { struct CHFastGroupingCluster *x0; struct CHFastGroupingCluster *x1; struct __compressed_pair<CHFastGroupingCluster *, std::__1::allocator<CHFastGroupingCluster> > { struct CHFastGroupingCluster *x0; } x2; } *)a0 clusteredStrokes:(id)a1 strokeProvider:(id)a2 strategyIdentifier:(id)a3 clutterFilter:(id)a4;

@end
