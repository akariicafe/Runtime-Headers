@class NSDictionary, NTKDateComplicationLabel, UILabel, NTKSolarDiskView, NSString, NSMutableSet, NSDateFormatter, NTKBezierPathView, NSTimer, NTKColorCurve, NTKFloatCurve, CLKClockTimerToken, NTKDigitialUtilitarianFaceViewComplicationFactory, UIView, NTKLayoutRule, NTKSolarTimeModel, NTKComplicationController, UIImageView, NTKSolarPath, UITapGestureRecognizer, NTKDigitalTimeLabelStyle;

@interface NTKSolarFaceView : NTKDigitalFaceView <NTKTimeView, PUICCrownInputSequencerDelegate, UIGestureRecognizerDelegate> {
    NTKDigitialUtilitarianFaceViewComplicationFactory *_faceViewComplicationFactory;
    NTKColorCurve *_preNoonComplicationColorCurve;
    NTKColorCurve *_postNoonComplicationColorCurve;
    NTKDigitalTimeLabelStyle *_digitalTimeLabelDefaultStyle;
    NTKDigitalTimeLabelStyle *_digitalTimeLabelSmallInUpperRightCornerStyle;
    UIView *_solarContentView;
    UIView *_solarPathObjectContainerView;
    NTKBezierPathView *_solarBezierPathView;
    NTKSolarDiskView *_solarDiskView;
    UIView *_solarDiskHaloParentView;
    UIImageView *_solarDiskHaloView;
    UIView *_solarDiskHaloMaskView;
    NTKColorCurve *_preNoonSolarDiskColorCurve;
    NTKColorCurve *_postNoonSolarDiskColorCurve;
    double _solarDiskOverridePercentage;
    UILabel *_waypointLabel;
    NSDictionary *_waypoints;
    NSDictionary *_waypointViews;
    UIView *_horizonView;
    UIImageView *_horizonGradientView;
    UIView *_horizonGradientContainerView;
    NTKColorCurve *_preNoonHorizonGradientColorCurve;
    NTKColorCurve *_postNoonHorizonGradientColorCurve;
    UIView *_belowHorizonView;
    NTKSolarTimeModel *_solarTimeModel;
    double _currentSolarDiskPercentage;
    NTKFloatCurve *_preNoonHorizonHeightCurve;
    NTKFloatCurve *_postNoonHorizonHeightCurve;
    NTKSolarPath *_solarPath;
    UITapGestureRecognizer *_viewModeTapGesture;
    long long _previousViewMode;
    long long _nextViewMode;
    CLKClockTimerToken *_clockTimerToken;
    NTKComplicationController *_dateComplicationController;
    NTKDateComplicationLabel *_dateComplicationLabel;
    NTKLayoutRule *_dateComplicationLayoutRule;
    NSString *_locationManagerToken;
    UILabel *_scrubLabel;
    UILabel *_overrideDateLabel;
    NSDateFormatter *_overrideDateFormatter;
    id /* block */ _waypointSettleAnimationBlock;
    UIView *_zoomMaskView;
    struct CGPoint { double x; double y; } _digitalTimeLabelZoomEndingCenter;
    struct CGPoint { double x; double y; } _dateLabelZoomEndingCenter;
    struct CGPoint { double x; double y; } _solarDiskViewZoomEndingCenter;
    UIView *_borrowedTimeViewFromClockIcon;
    UIView *_borrowedCircleViewFromClockIcon;
    NSMutableSet *_animatingReasons;
    NSTimer *_wheelDelayTimer;
    NSTimer *_buttonPressTimer;
    double _labelFontLineHeight;
    unsigned char _isContentLoaded : 1;
    unsigned char _isSolarPathUpdateNeeded : 1;
    unsigned char _isLocationAwareInteractiveModeEnabled : 1;
    unsigned char _isHandlingHardwareEvents : 1;
}

@property (nonatomic, getter=isFrozen) BOOL frozen;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (BOOL)_wheelChangedWithEvent:(id)a0;
- (BOOL)_isAnimating;
- (void)_setupViews;
- (void)setViewMode:(long long)a0;
- (void).cxx_destruct;
- (void)setTimeOffset:(double)a0;
- (void)dealloc;
- (void)layoutSubviews;
- (void)_timeZoneChanged:(id)a0;
- (id)initWithFaceStyle:(long long)a0 forDevice:(id)a1 clientIdentifier:(id)a2;
- (void)_loadSnapshotContentViews;
- (void)_unloadSnapshotContentViews;
- (void)_configureForEditMode:(long long)a0;
- (void)_configureForTransitionFraction:(double)a0 fromEditMode:(long long)a1 toEditMode:(long long)a2;
- (BOOL)_keylineLabelShouldShowIndividualOptionNamesForCustomEditMode:(long long)a0;
- (void)_configureComplicationView:(id)a0 forSlot:(id)a1;
- (void)_handleViewModeTapGesture:(id)a0;
- (id)_digitalTimeLabelStyleFromViewMode:(long long)a0 faceBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)_prepareForEditing;
- (void)_cleanupAfterEditing;
- (id)_detachedComplicationDisplays;
- (id)_newLegacyViewForComplication:(id)a0 family:(long long)a1 slot:(id)a2;
- (BOOL)_needsForegroundContainerView;
- (void)_loadLayoutRules;
- (BOOL)_usesCustomZoom;
- (void)_applyDataMode;
- (void)_becameActiveFace;
- (void)_becameInactiveFace;
- (void)_applyShowContentForUnadornedSnapshot;
- (unsigned long long)_keylineLabelAlignmentForComplicationSlot:(id)a0;
- (unsigned long long)_timeLabelOptions;
- (void)_layoutForegroundContainerView;
- (void)setOverrideDate:(id)a0 duration:(double)a1;
- (void)_prepareToZoomWithIconView:(id)a0 minDiameter:(double)a1 maxDiameter:(double)a2;
- (void)_cleanupAfterZoom;
- (long long)_complicationPickerStyleForSlot:(id)a0;
- (double)_keylineCornerRadiusForComplicationSlot:(id)a0;
- (double)keylineStyleForComplicationSlot:(id)a0;
- (void)_setZoomFraction:(double)a0 iconDiameter:(double)a1;
- (long long)_legacyLayoutOverrideforComplicationType:(unsigned long long)a0 slot:(id)a1;
- (void)_startClockUpdates;
- (void)_stopClockUpdates;
- (BOOL)_fadesComplicationSlot:(id)a0 inEditMode:(long long)a1;
- (BOOL)_handlePhysicalButton:(unsigned long long)a0 event:(unsigned long long)a1;
- (double)_minimumBreathingScaleForComplicationSlot:(id)a0;
- (void)_disableCrown;
- (void)_asyncUpdateLocale;
- (BOOL)_canEnterInteractiveMode;
- (void)_enableCrown;
- (BOOL)_shouldHandleHardwareEvents;
- (void)_updateLocale;
- (void)_unloadViews;
- (void)_updateWaypoints;
- (void)_updateColorCurves;
- (double)_solarDiskRestPercentage;
- (void)_updateSolarHaloWithPercentage:(double)a0;
- (void)_updateSolarHorizonGradientAlphaWithPercentage:(double)a0;
- (void)_updateSolarHorizonGradientColorWithPercentage:(double)a0;
- (void)_updateComplicationColorWithPercentage:(double)a0;
- (void)_setViewMode:(long long)a0 animated:(BOOL)a1;
- (id)_createSolarBezierPath;
- (void)_setSolarBezierPath:(id)a0 animated:(BOOL)a1;
- (void)_layoutLegacyDateComplication;
- (void)_layoutHorizonForViewMode:(long long)a0;
- (void)_layoutSolarPathAndContainerForViewMode:(long long)a0;
- (void)_layoutSolarDiskViewForViewMode:(long long)a0;
- (void)_updateWaypointLabelForCrownMovement;
- (void)_solarDiskPercentageChanged:(double)a0;
- (void)_updateSolarPathForChangedDate:(id)a0 animated:(BOOL)a1;
- (void)_updateTimeScrubbingContentForViewMode:(long long)a0;
- (double)_solarDiskIdealizedDatePercentage;
- (void)_animateSolarDiskFromPercentage:(double)a0 toPercentage:(double)a1 reason:(id)a2;
- (BOOL)_solarPathRequiresUpdateForChangedLocation:(id)a0;
- (void)_updateSolarPathForChangedLocation:(id)a0;
- (double)_percentageForWaypoint:(long long)a0;
- (long long)_waypointForPercentage:(double)a0 withSmallThreshold:(double)a1 largeThreshold:(double)a2;
- (struct CGPoint { double x0; double x1; })_pointOnSolarPathForPercentage:(double)a0;
- (void)_updateSolarHorizonGradientAlphaWithSolarDiskCenter:(struct CGPoint { double x0; double x1; })a0;
- (void)_updateSolarDiskHaloViewPosition;
- (void)_beginAnimatingForReason:(id)a0;
- (void)_endAnimatingForReason:(id)a0;
- (void)_animateSolarDiskToRestPercentageIfNeededForViewMode:(long long)a0;
- (id)_createWaypointView;
- (void)_setViewMode:(long long)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (void)_prepareForSettingViewMode:(long long)a0;
- (void)_interpolateFromViewMode:(long long)a0 toViewMode:(long long)a1 progress:(double)a2;
- (void)_transitionToViewMode:(long long)a0;
- (void)_cleanupAfterSettingViewMode:(long long)a0;
- (void)_wheelDelayTimerFired;
- (void)_buttonPressTimerFired;
- (void)_sharedLocationManagerUpdatedLocation:(id)a0 error:(id)a1;
- (long long)_waypointBetweenPreviousOffset:(double)a0 currentOffset:(double)a1;
- (id)_waypointLabelTextForPercentage:(double)a0;
- (BOOL)_isAnimatingForReason:(id)a0;
- (void)_adjustUIForBoundsChange;

@end
