@class UIFont, _UIDatePickerCalendarTimeFormat, NSNumberFormatter, UILabel, _UIDatePickerCalendarTimeLabelStateMachineContext, UIView, NSString, _UIDatePickerCalendarTimeWheel, NSAttributedString, UIIndirectScribbleInteraction, UITextField, _UIDatePickerCalendarTimeValueStore, UIPointerInteraction, UITextInputPasswordRules;
@protocol _UIDatePickerCalendarTimeLabelDelegate;

@interface _UIDatePickerCalendarTimeLabel : UIView <UIIndirectScribbleInteractionDelegate, UIPointerInteractionDelegate, UIKeyInput> {
    UIIndirectScribbleInteraction *_scribbleInteraction;
    UITextField *_hiddenField;
    UIPointerInteraction *_pointerInteraction;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _hourRect;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _minuteRect;
    UIView *_inputView;
    struct CGSize { double width; double height; } _lastSize;
}

@property (readonly, nonatomic) UILabel *label;
@property (readonly, nonatomic) _UIDatePickerCalendarTimeWheel *hourWheel;
@property (readonly, nonatomic) _UIDatePickerCalendarTimeWheel *minuteWheel;
@property (nonatomic) BOOL allowsTextInput;
@property (nonatomic) unsigned long long insertedDigitCount;
@property (nonatomic) long long inputScope;
@property (retain, nonatomic) _UIDatePickerCalendarTimeValueStore *inputValue;
@property (retain, nonatomic) NSNumberFormatter *inputFormatter;
@property (readonly, nonatomic) _UIDatePickerCalendarTimeLabelStateMachineContext *stateContext;
@property (retain, nonatomic) _UIDatePickerCalendarTimeFormat *timeFormat;
@property (weak, nonatomic) id<_UIDatePickerCalendarTimeLabelDelegate> delegate;
@property (copy, nonatomic) UIFont *font;
@property (readonly, nonatomic) NSString *text;
@property (readonly, nonatomic) NSAttributedString *attributedText;
@property (copy, nonatomic) NSString *hourText;
@property (copy, nonatomic) NSString *minuteText;
@property (nonatomic) long long minuteInterval;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL hasText;
@property (nonatomic) long long autocapitalizationType;
@property (nonatomic) long long autocorrectionType;
@property (nonatomic) long long spellCheckingType;
@property (nonatomic) long long smartQuotesType;
@property (nonatomic) long long smartDashesType;
@property (nonatomic) long long smartInsertDeleteType;
@property (nonatomic) long long keyboardType;
@property (nonatomic) long long keyboardAppearance;
@property (nonatomic) long long returnKeyType;
@property (nonatomic) BOOL enablesReturnKeyAutomatically;
@property (nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property (copy, nonatomic) NSString *textContentType;
@property (copy, nonatomic) UITextInputPasswordRules *passwordRules;

- (void)insertText:(id)a0;
- (void)indirectScribbleInteraction:(id)a0 willBeginWritingInElement:(id)a1;
- (void)deleteBackward;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)tintColorDidChange;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (void)_didTap:(id)a0;
- (BOOL)indirectScribbleInteraction:(id)a0 shouldDelayFocusForElement:(id)a1;
- (id)pointerInteraction:(id)a0 styleForRegion:(id)a1;
- (void).cxx_destruct;
- (BOOL)_canChangeFirstResponder:(id)a0 toResponder:(id)a1;
- (void)_isPoint:(struct CGPoint { double x0; double x1; })a0 insideExtendedHourRect:(BOOL *)a1 minuteRect:(BOOL *)a2;
- (void)_updateLayoutRectsForHourRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 minuteRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (id)pointerInteraction:(id)a0 regionForRequest:(id)a1 defaultRegion:(id)a2;
- (id)_attributedTextWithHourRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a0 minuteRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;
- (void)_increasedHourWheelRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0 minuteWheelRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1;
- (BOOL)indirectScribbleInteraction:(id)a0 isElementFocused:(id)a1;
- (BOOL)pointInside:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (void)_endEditingHoursFromWheelsOfTime:(id)a0;
- (id)initWithTimeFormat:(id)a0 minuteInterval:(long long)a1;
- (void)_beginEditingHoursFromWheelsOfTime:(id)a0;
- (void)_endEditingMinutesFromWheelsOfTime:(id)a0;
- (void)_stateMachineUpdateFromState:(unsigned long long)a0 toState:(unsigned long long)a1;
- (void)_beginEditingMinutesFromWheelsOfTime:(id)a0;
- (void)_pushCurrentStateIntoUIAndNotify;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })indirectScribbleInteraction:(id)a0 frameForElement:(id)a1;
- (BOOL)canBecomeFirstResponder;
- (id)inputView;
- (void)indirectScribbleInteraction:(id)a0 focusElementIfNeeded:(id)a1 referencePoint:(struct CGPoint { double x0; double x1; })a2 completion:(id /* block */)a3;
- (void)layoutSubviews;
- (void)indirectScribbleInteraction:(id)a0 requestElementsInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 completion:(id /* block */)a2;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })alignmentRectInsets;
- (void)_updateMinutesFromWheelsOfTime:(id)a0;
- (void)_updateWheelsOfTimePosition;
- (void)_visualHourRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0 minuteRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1;
- (BOOL)_treatMinutesAsHoursForState:(unsigned long long)a0;
- (void)_updateHoursFromWheelsOfTime:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)indirectScribbleInteraction:(id)a0 didFinishWritingInElement:(id)a1;
- (BOOL)_suppressSoftwareKeyboard;
- (void)_resetTextInput;
- (void)_pushCurrentStateIntoUI;
- (void)_stateMachineSendEvent:(unsigned long long)a0;
- (void)_recreateWheelsOfTime;
- (BOOL)_pointIsInsideHourSide:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)_digits:(unsigned long long *)a0 fromText:(id)a1 count:(long long *)a2;
- (BOOL)processTapOutside;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;

@end
