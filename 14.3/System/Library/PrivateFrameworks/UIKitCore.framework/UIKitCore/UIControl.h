@class _UICursorInteraction, NSSet, UIContextMenuInteraction, NSString, UIPointerInteraction, NSMutableArray;

@interface UIControl : UIView <_UIVariableGestureContextMenuInteractionDelegate, UIPointerInteractionDelegate, UIContextMenuInteractionDelegate_Private, _UICursorInteractionDelegate, UIContextMenuInteractionDelegate> {
    NSMutableArray *_targetActions;
    struct CGPoint { double x; double y; } _previousPoint;
    double _downTime;
    struct { unsigned char disabled : 1; unsigned char tracking : 1; unsigned char touchInside : 1; unsigned char touchDragged : 1; unsigned char requiresDisplayOnTracking : 1; unsigned char highlighted : 1; unsigned char dontHighlightOnTouchDown : 1; unsigned char allowActionsToQueue : 1; unsigned char pendingUnhighlight : 1; unsigned char selected : 1; unsigned char verticalAlignment : 3; unsigned char horizontalAlignment : 3; unsigned char wasLastHighlightSuccessful : 1; unsigned char touchHasHighlighted : 1; unsigned char hasPointerInteraction : 1; unsigned char hasProxyPointerInteraction : 1; unsigned char hasContextMenuInteraction : 1; unsigned char highlightForMenuPresentation : 1; } _controlFlags;
}

@property (class, readonly, nonatomic) BOOL _cursorInteractionEnabled;

@property (readonly, nonatomic) long long effectiveContentVerticalAlignment;
@property (readonly, nonatomic) UIPointerInteraction *pointerInteraction;
@property (nonatomic, getter=isPointerInteractionEnabled) BOOL pointerInteractionEnabled;
@property (readonly, nonatomic) UIPointerInteraction *_pointerInteraction;
@property (retain, nonatomic, setter=_setProxyPointerInteraction:) UIPointerInteraction *_proxyPointerInteraction;
@property (weak, nonatomic, setter=_setProxySender:) id _proxySender;
@property (nonatomic, getter=isContextMenuEnabled) BOOL contextMenuEnabled;
@property (nonatomic) BOOL contextMenuIsPrimary;
@property (nonatomic, setter=_setRequiredButtonMask:) long long _requiredButtonMask;
@property (readonly, nonatomic) _UICursorInteraction *cursorInteraction;
@property (readonly, nonatomic) _UICursorInteraction *_cursorInteraction;
@property (nonatomic, getter=isEnabled) BOOL enabled;
@property (nonatomic, getter=isSelected) BOOL selected;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic) long long contentVerticalAlignment;
@property (nonatomic) long long contentHorizontalAlignment;
@property (readonly, nonatomic) long long effectiveContentHorizontalAlignment;
@property (readonly, nonatomic) unsigned long long state;
@property (readonly, nonatomic, getter=isTracking) BOOL tracking;
@property (readonly, nonatomic, getter=isTouchInside) BOOL touchInside;
@property (readonly, nonatomic) NSSet *allTargets;
@property (readonly, nonatomic) unsigned long long allControlEvents;
@property (readonly, nonatomic) UIContextMenuInteraction *contextMenuInteraction;
@property (nonatomic, getter=isContextMenuInteractionEnabled) BOOL contextMenuInteractionEnabled;
@property (nonatomic) BOOL showsMenuAsPrimaryAction;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)_allowActionsToQueue;
+ (unsigned long long)_primaryStateForState:(unsigned long long)a0;

- (id)cursorInteraction:(id)a0 regionForLocation:(struct CGPoint { double x0; double x1; })a1 defaultRegion:(id)a2;
- (void)pointerInteraction:(id)a0 willExitRegion:(id)a1 animator:(id)a2;
- (BOOL)canBecomeFocused;
- (void)cancelTrackingWithEvent:(id)a0;
- (void)_didMoveFromWindow:(id)a0 toWindow:(id)a1;
- (id)cursorInteraction:(id)a0 styleForRegion:(id)a1 modifiers:(long long)a2;
- (id)contextMenuInteraction:(id)a0 previewForDismissingMenuWithConfiguration:(id)a1;
- (void)endTrackingWithTouch:(id)a0 withEvent:(id)a1;
- (BOOL)pointMostlyInside:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (BOOL)continueTrackingWithTouch:(id)a0 withEvent:(id)a1;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 forEvent:(struct __GSEvent { } *)a1;
- (id)pointerInteraction:(id)a0 styleForRegion:(id)a1;
- (void).cxx_destruct;
- (id)__scalarStatisticsForUserTouchUpInsideEvent;
- (id)_contextMenuInteraction:(id)a0 interactionEffectForTargetedPreview:(id)a1;
- (id)__scalarStatisticsForUserValueChangedEvent;
- (id)__distributionStatisticsForUserInteractionDuration;
- (id)_scalarStatisticsForUserTouchUpInsideEvent;
- (id)_distributionStatisticsForUserInteractionDuration;
- (void)touchesCancelled:(id)a0 withEvent:(id)a1;
- (void)pointerInteraction:(id)a0 willEnterRegion:(id)a1 animator:(id)a2;
- (void)cursorInteraction:(id)a0 willExitRegion:(id)a1 withAnimator:(id)a2;
- (id)contextMenuInteraction:(id)a0 configurationForMenuAtLocation:(struct CGPoint { double x0; double x1; })a1;
- (id)pointerInteraction:(id)a0 regionForRequest:(id)a1 defaultRegion:(id)a2;
- (void)cursorInteraction:(id)a0 willEnterRegion:(id)a1 withAnimator:(id)a2;
- (void)addTarget:(id)a0 action:(SEL)a1 forControlEvents:(unsigned long long)a2;
- (void)setSelected:(BOOL)a0;
- (BOOL)cancelTouchTracking;
- (id)initWithCoder:(id)a0;
- (BOOL)shouldTrack;
- (void)_installCursorInteractionIfNeeded;
- (id)_allTargetActions;
- (void)_addControlTargetAction:(id)a0;
- (void)touchesMoved:(id)a0 withEvent:(id)a1;
- (void)_sendActionsForEvents:(unsigned long long)a0 withEvent:(id)a1;
- (BOOL)requiresDisplayOnTracking;
- (void)sendAction:(SEL)a0 to:(id)a1 forEvent:(id)a2;
- (void)setTracking:(BOOL)a0;
- (BOOL)hasOneOrMoreTargets;
- (void)_sendDelayedActions:(BOOL)a0;
- (void)_incrementStatisticsForUserActionForEvents:(unsigned long long)a0;
- (void)_beginInteractionDurationStatisticMeasurements;
- (void)_commitInteractionDurationStatisticMeasurements;
- (BOOL)cancelMouseTracking;
- (void)_contextMenuInteraction:(id)a0 willBeginWithConfiguration:(id)a1;
- (void)removeAction:(id)a0 forControlEvents:(unsigned long long)a1;
- (void)_sendDelayedActions;
- (void)removeActionForIdentifier:(id)a0 forControlEvents:(unsigned long long)a1;
- (id)actionsForTarget:(id)a0 forControlEvent:(unsigned long long)a1;
- (struct CGPoint { double x0; double x1; })menuAttachmentPointForConfiguration:(id)a0;
- (void)enumerateEventHandlers:(id /* block */)a0;
- (BOOL)_hasActionForEventMask:(unsigned long long)a0;
- (void)_setHighlightOnMouseDown:(BOOL)a0;
- (void)removeTarget:(id)a0 forEvents:(int)a1;
- (id)contextMenuInteraction:(id)a0 previewForHighlightingMenuWithConfiguration:(id)a1;
- (void)setRequiresDisplayOnTracking:(BOOL)a0;
- (void)_diagnoseFocusabilityForReport:(id)a0;
- (unsigned long long)_stateForFocusUpdateContext:(id)a0;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (void)_willMoveToWindow:(id)a0;
- (BOOL)canBecomeFirstResponder;
- (void)removeTarget:(id)a0 action:(SEL)a1 forControlEvents:(unsigned long long)a2;
- (BOOL)_accessibilityShouldActivateOnHUDLift;
- (long long)_sceneDraggingBehaviorOnPan;
- (id)_contextMenuInteraction;
- (unsigned long long)_controlEventsForActionTriggered;
- (void)sendActionsForControlEvents:(unsigned long long)a0;
- (id)_contextMenuInteraction:(id)a0 styleForMenuWithConfiguration:(id)a1;
- (void)contextMenuInteraction:(id)a0 willDisplayMenuForConfiguration:(id)a1 animator:(id)a2;
- (void)sendAction:(id)a0;
- (void)addAction:(id)a0 forControlEvents:(unsigned long long)a1;
- (void)contextMenuInteraction:(id)a0 willEndForConfiguration:(id)a1 animator:(id)a2;
- (void)_cancelDelayedActions;
- (void)touchesEstimatedPropertiesUpdated:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)_scalarStatisticsForUserValueChangedEvent;
- (void)touchesEnded:(id)a0 withEvent:(id)a1;
- (id)_systemDefaultFocusGroupDescriptor;
- (void)_commonInitForPrimaryAction:(id)a0;
- (void)_delayActions;
- (long long)_focusedSound;
- (void)_unhighlight;
- (BOOL)touchDragged;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 primaryAction:(id)a1;
- (void)setContentHorizontalAlignment:(long long)a0;
- (void)_connectInterfaceBuilderEventConnection:(id)a0;
- (void)setContentVerticalAlignment:(long long)a0;
- (long long)contentHorizontalAlignment;
- (BOOL)_touchHasHighlighted;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_clippedHighlightBounds;
- (unsigned long long)state;
- (void)_setLastHighlightSuccessful:(BOOL)a0;
- (BOOL)_wasLastHighlightSuccessful;
- (BOOL)beginTrackingWithTouch:(id)a0 withEvent:(id)a1;
- (void)setEnabled:(BOOL)a0;
- (void)_invalidatePointerInteraction;
- (void)_setTouchHasHighlighted:(BOOL)a0;
- (void)setHighlighted:(BOOL)a0;
- (void)touchesBegan:(id)a0 withEvent:(id)a1;
- (long long)contentVerticalAlignment;
- (void)addTarget:(id)a0 action:(SEL)a1 forEvents:(int)a2;
- (void)encodeWithCoder:(id)a0;
- (double)_highlightCornerRadius;
- (id)_createPointerInteraction;

@end
