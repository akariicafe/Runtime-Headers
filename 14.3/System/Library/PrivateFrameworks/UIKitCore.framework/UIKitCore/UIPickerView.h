@class UIColor, UISelectionFeedbackGenerator, NSString, _UIPickerViewTestParameters, UIView, NSMutableArray, CALayer;
@protocol UIPickerViewDataSource, UIPickerViewDelegate;

@interface UIPickerView : UIView <UIPickerViewScrollTesting, UIPickerTableViewContainerDelegate, UITableViewDelegate, UITableViewDataSource, NSCoding> {
    NSMutableArray *_tables;
    UIView *_foregroundView;
    CALayer *_maskGradientLayer;
    UIView *_topLineOrFillView;
    UIView *_bottomLineView;
    struct { unsigned char needsLayout : 1; unsigned char delegateRespondsToNumberOfComponentsInPickerView : 1; unsigned char delegateRespondsToNumberOfRowsInComponent : 1; unsigned char delegateRespondsToDidSelectRow : 1; unsigned char delegateRespondsToViewForRow : 1; unsigned char delegateRespondsToTitleForRow : 1; unsigned char delegateRespondsToAttributedTitleForRow : 1; unsigned char delegateRespondsToWidthForComponent : 1; unsigned char delegateRespondsToRowHeightForComponent : 1; unsigned char showsSelectionBar : 1; unsigned char allowsMultipleSelection : 1; unsigned char allowSelectingCells : 1; unsigned char soundsDisabled : 1; unsigned char usesCheckedSelection : 1; unsigned char skipsBackground : 1; unsigned char isInLayoutSubviews : 1; unsigned char usesDynamicRowHeight : 1; } _pickerViewFlags;
    UIColor *_textColor;
    UIColor *_textShadowColor;
    _UIPickerViewTestParameters *_currentTestParameters;
}

@property (nonatomic, getter=_enabled, setter=_setEnabled:) BOOL enabled;
@property (nonatomic, getter=_magnifierStyle, setter=_setMagnifierStyle:) long long magnifierStyle;
@property (nonatomic, setter=_setMagnifierEnabled:) BOOL _magnifierEnabled;
@property (retain, nonatomic, getter=_selectionFeedbackGenerator, setter=_setSelectionFeedbackGenerator:) UISelectionFeedbackGenerator *selectionFeedbackGenerator;
@property (retain, nonatomic, getter=_highlightColor, setter=_setHighlightColor:) UIColor *highlightColor;
@property (retain, nonatomic, getter=_textColor, setter=_setTextColor:) UIColor *textColor;
@property (retain, nonatomic, getter=_textShadowColor, setter=_setTextShadowColor:) UIColor *textShadowColor;
@property (retain, nonatomic, getter=_magnifierLineColor, setter=_setMagnifierLineColor:) UIColor *magnifierLineColor;
@property (getter=_usesDynamicRowHeight, setter=_setUsesDynamicRowHeight:) BOOL usesDynamicRowHeight;
@property (weak, nonatomic) id<UIPickerViewDataSource> dataSource;
@property (weak, nonatomic) id<UIPickerViewDelegate> delegate;
@property (nonatomic) BOOL showsSelectionIndicator;
@property (readonly, nonatomic) long long numberOfComponents;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;
+ (BOOL)_allowsUnsupportedMacIdiomBehavior;
+ (struct CGSize { double x0; double x1; })defaultSizeForMainScreenTraits;
+ (struct CGSize { double x0; double x1; })sizeForMainScreenTraitsThatFits:(struct CGSize { double x0; double x1; })a0;
+ (struct CGSize { double x0; double x1; })defaultSizeForCurrentOrientation;
+ (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0 forTraits:(id)a1;
+ (struct CGSize { double x0; double x1; })defaultSizeForTraits:(id)a0;
+ (void)_setAllowsUnsupportedMacIdiomBehavior:(BOOL)a0;

- (struct CGSize { double x0; double x1; })_intrinsicSizeWithinSize:(struct CGSize { double x0; double x1; })a0;
- (void)setNeedsLayout;
- (void)reloadData;
- (struct CGSize { double x0; double x1; })defaultSize;
- (void)reload;
- (long long)tableView:(id)a0 numberOfRowsInSection:(long long)a1;
- (id)init;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void).cxx_destruct;
- (id)_contentView;
- (void)_populateArchivedSubviews:(id)a0;
- (BOOL)isAccessibilityElementByDefault;
- (void)dealloc;
- (long long)numberOfColumns;
- (BOOL)_soundsEnabled;
- (void)_sendCheckedRow:(long long)a0 inTableView:(id)a1 checked:(BOOL)a2;
- (void)setBackgroundColor:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)tableView:(id)a0 cellForRowAtIndexPath:(id)a1;
- (void)didMoveToWindow;
- (BOOL)_drawsBackground;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (BOOL)_usesCheckSelection;
- (void)layoutSubviews;
- (void)_performScrollTest:(id)a0 withIterations:(long long)a1 rowsToScroll:(long long)a2 inComponent:(long long)a3;
- (BOOL)_contentHuggingDefault_isUsuallyFixedWidth;
- (double)_wheelShift;
- (void)reloadAllComponents;
- (void)selectRow:(long long)a0 inComponent:(long long)a1 animated:(BOOL)a2;
- (void)_setUsesCheckedSelection:(BOOL)a0;
- (long long)numberOfRowsInComponent:(long long)a0;
- (void)setSoundsEnabled:(BOOL)a0;
- (long long)selectedRowInComponent:(long long)a0;
- (id)tableViewForColumn:(long long)a0;
- (id)viewForRow:(long long)a0 forComponent:(long long)a1;
- (struct CGSize { double x0; double x1; })_contentSizeForRow:(long long)a0 inComponent:(long long)a1;
- (id)pickerImageNamePrefix;
- (id)_orientationImageSuffix;
- (void)reloadAllPickerPieces;
- (double)scrollAnimationDuration;
- (void)_selectRow:(long long)a0 inComponent:(long long)a1 animated:(BOOL)a2 notify:(BOOL)a3;
- (void)reloadComponent:(long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_effectiveTableViewFrameForColumn:(long long)a0;
- (double)_tableRowHeight;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })visibleRowsForColumn:(int)a0;
- (void)_resetSelectionOfTables;
- (void)_sendSelectionChangedFromTable:(id)a0 notify:(BOOL)a1;
- (struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })_perspectiveTransform;
- (void)_willPlayClickSound;
- (BOOL)_usesCheckedSelection;
- (id)_popoverSuffix;
- (double)_rowHeightForDefaultFont;
- (BOOL)_isLandscapeOrientation;
- (void)_updateSelectedRows;
- (void)_setColumnView:(id)a0 enabled:(BOOL)a1;
- (long long)_delegateNumberOfComponents;
- (id)_selectionBarSuffix;
- (long long)columnForTableView:(id)a0;
- (double)_delegateRowHeightForComponent:(long long)a0;
- (void)_addMagnifierLinesForRowHeight:(double)a0;
- (double)_delegateWidthForComponent:(long long)a0 ofCount:(int)a1 withSizeLeft:(double)a2;
- (id)_createColumnWithTableFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 rowHeight:(double)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_selectionBarRectForHeight:(double)a0;
- (void)_addHighlightRectForRowHeight:(double)a0;
- (long long)_delegateNumberOfRowsInComponent:(long long)a0;
- (void)_updateWithOldSize:(struct CGSize { double x0; double x1; })a0 newSize:(struct CGSize { double x0; double x1; })a1;
- (void)_noteScrollingFinishedForComponent:(long long)a0;
- (void)_sendSelectionChangedForComponent:(long long)a0 notify:(BOOL)a1;
- (BOOL)_forceTextAlignmentCentered;
- (id)_delegateTitleForRow:(long long)a0 forComponent:(long long)a1;
- (void)_setDrawsBackground:(BOOL)a0;
- (struct CGSize { double x0; double x1; })_sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (id)_delegateAttributedTitleForRow:(long long)a0 forComponent:(long long)a1;
- (void)reloadDataForColumn:(int)a0;
- (id)_scalarStatisticsForUserValueChangedEvent;
- (id)imageForPickerPiece:(long long)a0;
- (id)_createTableWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forComponent:(long long)a1;
- (struct CGSize { double x0; double x1; })rowSizeForComponent:(long long)a0;
- (long long)numberOfRowsInColumn:(long long)a0;
- (int)selectedRowForColumn:(int)a0;
- (void)selectRow:(int)a0 inColumn:(int)a1 animated:(BOOL)a2;
- (id)_systemDefaultFocusGroupDescriptor;
- (void)_iterateOnCurrentTest;
- (void)_completeCurrentTest;
- (BOOL)_canHostViewControllerContentScrollView;
- (BOOL)_needsLayout;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)allowsMultipleSelection;
- (void)traitCollectionDidChange:(id)a0;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (void)encodeWithCoder:(id)a0;
- (void)setAllowsMultipleSelection:(BOOL)a0;

@end
