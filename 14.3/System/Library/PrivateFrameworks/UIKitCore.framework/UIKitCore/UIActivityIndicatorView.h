@class UIColor, _UIActivityIndicatorMessageLabel, UIImageView, NSString, NSArray, _UIActivityIndicatorViewArtworkCacheKey;

@interface UIActivityIndicatorView : UIView <NSCoding>

@property (readonly, nonatomic, getter=_animatingImageView) UIImageView *animatingImageView;
@property (readonly, nonatomic, getter=_messageLabel) _UIActivityIndicatorMessageLabel *messageLabel;
@property (retain, nonatomic, getter=_message, setter=_setMessage:) NSString *message;
@property (nonatomic) double animationDuration;
@property (nonatomic, getter=isAnimating) BOOL animating;
@property (readonly, nonatomic, getter=_actualActivityIndicatorViewStyle) long long actualActivityIndicatorViewStyle;
@property (readonly, nonatomic, getter=_restartAnimationOnNextLayout) BOOL restartAnimationOnNextLayout;
@property (readonly, nonatomic, getter=_spokeImages) NSArray *spokeImages;
@property (readonly, nonatomic, getter=_spokeHighlightImages) NSArray *spokeHighlightImages;
@property (readonly, nonatomic, getter=_spokeCount) long long spokeCount;
@property (readonly, nonatomic, getter=_spokeFrameRatio) long long spokeFrameRatio;
@property (readonly, nonatomic, getter=_disableUpdateColorOnTraitCollectionChange) BOOL disableUpdateColorOnTraitCollectionChange;
@property (readonly, nonatomic, getter=_lastArtCacheKey) _UIActivityIndicatorViewArtworkCacheKey *lastArtCacheKey;
@property (readonly, nonatomic, getter=_lastHighlightArtCacheKey) _UIActivityIndicatorViewArtworkCacheKey *lastHighlightArtCacheKey;
@property (nonatomic) struct CGSize { double width; double height; } shadowOffset;
@property (retain, nonatomic) UIColor *shadowColor;
@property (nonatomic) double width;
@property (nonatomic) BOOL hasShadow;
@property BOOL spinning;
@property (nonatomic) long long activityIndicatorViewStyle;
@property (nonatomic) BOOL hidesWhenStopped;
@property (retain, nonatomic) UIColor *color;

+ (id)_imageSetNameForArtworkBasedStyle:(long long)a0 outImageCount:(out long long *)a1;
+ (struct CGSize { double x0; double x1; })defaultSizeForStyle:(long long)a0;
+ (id)_loadResourcesForArtworkBasedStyle:(long long)a0;

- (struct CGSize { double x0; double x1; })_intrinsicSizeWithinSize:(struct CGSize { double x0; double x1; })a0;
- (void)_didMoveFromWindow:(id)a0 toWindow:(id)a1;
- (void)_commonInit;
- (void)tintColorDidChange;
- (void)_applicationWillEnterForeground:(id)a0;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void).cxx_destruct;
- (BOOL)isHighlighted;
- (void)_populateArchivedSubviews:(id)a0;
- (void)dealloc;
- (void)stopAnimation;
- (id)initWithCoder:(id)a0;
- (void)_removeAllAnimations:(BOOL)a0;
- (void)_applicationDidEnterBackground:(id)a0;
- (long long)_internalStyleForStyle:(long long)a0;
- (long long)_actualStyleByResolvingAutoUpdatingStyle:(long long)a0;
- (void)_updateMessageForStyle:(long long)a0;
- (id)_defaultColorForStyle:(long long)a0;
- (BOOL)_isShowingMessage;
- (void)_updateLayoutInfo;
- (long long)_externalStyleForStyle:(long long)a0;
- (long long)_sizeForStyle:(long long)a0;
- (unsigned long long)_indexOfFirstImageForStartingAnimation;
- (void)_setUpAnimation;
- (void)_tearDownAnimation;
- (double)_spokeWidthForGearWidth:(double)a0;
- (double)_spokeLengthForGearWidth:(double)a0;
- (double)_widthForGearWidth:(double)a0;
- (double)_alphaValueForStep:(long long)a0;
- (id)_imageForStep:(long long)a0 withColor:(id)a1;
- (BOOL)_isStatusBarStyle;
- (BOOL)_isArtworkBasedStyle;
- (BOOL)_colorRequiresDynamicTinting;
- (id)_generateModernImagesForImages:(id)a0 color:(id)a1;
- (id)_generateImagesForColor:(id)a0 highlight:(BOOL)a1;
- (void)_updateSubviewFramesWithBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)_shouldGoToCustomStyle;
- (long long)_customStyleForStyle:(long long)a0;
- (BOOL)_shouldGoBackToBaseStyle;
- (id)_artCacheKeyWithStyle:(long long)a0 color:(id)a1;
- (id)_imagesForStyle:(long long)a0 color:(id)a1 highlight:(BOOL)a2;
- (id)_highlightColorForStyle:(long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_animatingImageViewFrameForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_messageLabelFrameForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)_hasClientSetColor;
- (BOOL)_useCustomStyleForLegacyStyles;
- (void)layoutSubviews;
- (BOOL)_contentHuggingDefault_isUsuallyFixedWidth;
- (id)initWithActivityIndicatorStyle:(long long)a0;
- (BOOL)_hasShadow;
- (long long)_defaultStyle;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)startAnimation;
- (void)stopAnimating;
- (void)setStyle:(long long)a0;
- (void)startAnimating;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)traitCollectionDidChange:(id)a0;
- (void)setHighlighted:(BOOL)a0;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (void)encodeWithCoder:(id)a0;

@end
