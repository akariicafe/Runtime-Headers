@class UIStackView, NSString, UIDatePicker, _UIDatePickerCalendarTimeView, _UIDatePickerCalendarHeaderView, _UIDatePickerDateRange, _UIDatePickerCalendarMonthYearSelector, NSLayoutConstraint, _UIDatePickerDataModel, _UIDatePickerCalendarDateView, UIColor;

@interface _UIDatePickerCalendarView : UIView <_UIDatePickerCalendarHeaderViewDelegate, _UIDatePickerCalendarDateViewDelegate, _UIDatePickerCalendarTimeViewDelegate, _UIDatePickerCalendarMonthYearSelectorDelegate, _UIDatePickerViewComponent> {
    struct { unsigned char needsUpdateDate : 1; unsigned char isEnabled : 1; } _flags;
    UIStackView *_contentView;
    _UIDatePickerCalendarHeaderView *_headerView;
    _UIDatePickerCalendarDateView *_dateView;
    _UIDatePickerCalendarTimeView *_timeView;
    _UIDatePickerDateRange *_dateRange;
    long long _viewState;
    _UIDatePickerCalendarMonthYearSelector *_monthYearSelector;
    NSLayoutConstraint *_minimumWidthConstraint;
    NSLayoutConstraint *_maximumWidthConstraint;
    struct CGSize { double width; double height; } _lastSize;
    unsigned long long _stateUpdatesInFlight;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) UIDatePicker *datePicker;
@property (retain, nonatomic) _UIDatePickerDataModel *data;
@property (readonly, nonatomic) long long datePickerStyle;
@property (nonatomic, getter=_allowsZeroCountDownDuration, setter=_setAllowsZeroCountDownDuration:) BOOL allowsZeroCountDownDuration;
@property (nonatomic, getter=_allowsZeroTimeInterval, setter=_setAllowsZeroTimeInterval:) BOOL allowsZeroTimeInterval;
@property (readonly, nonatomic, getter=_isTimeIntervalMode) BOOL isTimeIntervalMode;
@property (nonatomic) double timeInterval;
@property (readonly, nonatomic) double contentWidth;
@property (retain, nonatomic, getter=_highlightColor, setter=_setHighlightColor:) UIColor *highlightColor;
@property (retain, nonatomic, getter=_textColor, setter=_setTextColor:) UIColor *textColor;
@property (retain, nonatomic, getter=_textShadowColor, setter=_setTextShadowColor:) UIColor *textShadowColor;
@property (retain, nonatomic, getter=_magnifierLineColor, setter=_setMagnifierLineColor:) UIColor *magnifierLineColor;

- (void)layoutMarginsDidChange;
- (struct CGSize { double x0; double x1; })defaultSize;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (void)didReset;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void).cxx_destruct;
- (void)_workaround66574039_datePickerDidUpdateLayoutMargins;
- (void)_updateMonthYearSelectorForSelectedDay:(id)a0 animated:(BOOL)a1;
- (BOOL)_shouldUpdateMonthYearSelectorForSelectedDay:(id)a0;
- (void)_updateSelectedDayToDayInMonth:(id)a0 animated:(BOOL)a1 notify:(BOOL)a2;
- (void)_reload;
- (void)_updateSelectedDay:(id)a0 time:(id)a1 animated:(BOOL)a2 notify:(BOOL)a3;
- (void)_updateDateViewForSelectedDay:(id)a0 animated:(BOOL)a1;
- (void)_updateTimeViewForSelectedTime:(id)a0 animated:(BOOL)a1;
- (BOOL)_shouldUpdateHeaderViewForVisibleMonth:(id)a0;
- (void)_updateDateViewForVisibleMonth:(id)a0 animated:(BOOL)a1;
- (BOOL)_shouldUpdateHeaderViewForSelectedDay:(id)a0;
- (BOOL)_shouldUpdateDataForComponents:(id)a0 date:(id)a1;
- (BOOL)_shouldUpdateDateViewForSelectedDay:(id)a0;
- (void)_updateHeaderViewForVisibleMonth:(id)a0;
- (void)timeViewWillBecomeFirstResponder:(id)a0;
- (void)monthYearSelector:(id)a0 didSelectMonth:(id)a1;
- (void)_updateDate;
- (void)_updateSelectedDay:(id)a0 animated:(BOOL)a1 notify:(BOOL)a2;
- (BOOL)_shouldUpdateTimeViewForSelectedTime:(id)a0;
- (BOOL)_shouldUpdateDateViewForVisibleMonth:(id)a0;
- (void)layoutSubviews;
- (void)_updateHeaderViewForSelectedDay:(id)a0;
- (void)didChangeMode;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_updateSelectedTime:(id)a0 notify:(BOOL)a1;
- (void)didChangeDateFrom:(id)a0 animated:(BOOL)a1;
- (void)_updateContentSizeLimitations;
- (void)_updateVisibleMonth:(id)a0 animated:(BOOL)a1;
- (void)didChangeCustomFontDescriptor;
- (void)didChangeToday;
- (BOOL)hasDefaultSize;
- (struct CGSize { double x0; double x1; })_sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (BOOL)usesAutoLayout;
- (void)_destroyMonthYearSelector;
- (void)_updateDataForComponents:(id)a0;
- (void)headerViewDidStepForward:(id)a0;
- (void)_headerViewWantsToMoveToMonth:(id)a0;
- (void)_reloadMonthYearSelector;
- (void)_reloadDateView;
- (void)_reloadTimeView;
- (void)timeViewDidBeginEditing:(id)a0;
- (void)didChangeLocale;
- (void)_reloadDateRange;
- (void)_setEnabled:(BOOL)a0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_setHidesLabels:(BOOL)a0;
- (void)_updateDateIfNeeded;
- (void)_setupMonthYearSelector;
- (void)_updateModuleVisibility;
- (void)_setNeedsUpdateDate;
- (void)dateView:(id)a0 didSelectDate:(id)a1;
- (void)timeView:(id)a0 didSelectTime:(id)a1;
- (void)headerViewDidSelect:(id)a0;
- (void)didChangeMinuteInterval;
- (void)didChangeMinimumDate;
- (void)dateView:(id)a0 didShowMonth:(id)a1;
- (void)didChangeMaximumDate;
- (void)_updateEnabledStyling;
- (id)primaryFirstResponder;
- (void)timeViewDidEndEditing:(id)a0;
- (void)_updateViewState:(long long)a0 animated:(BOOL)a1;
- (void)headerViewDidStepBackward:(id)a0;
- (void)_reloadHeaderView;
- (void)didChangeTimeZone;
- (void)didChangeCalendar;
- (void)_updateCustomFonts;

@end
