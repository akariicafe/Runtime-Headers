@class NSMutableDictionary, UIScreen, NSDictionary, _UIStatusBarStyleAttributes, UIView, UIColor, NSString, NSSet, UIPointerInteraction, UIGestureRecognizer, _UIStatusBarData, NSArray, _UIStatusBarDataAggregator, UIAccessibilityHUDGestureManager, _UIStatusBarAction;
@protocol _UIStatusBarVisualProvider, _UIStatusBarActionable;

@interface _UIStatusBar : UIView <UIGestureRecognizerDelegate, UIAccessibilityHUDGestureDelegate, UIPointerInteractionDelegate> {
    id<_UIStatusBarVisualProvider> _visualProvider;
    BOOL _needsLayoutUpdateForPartFrames;
}

@property (class, weak, nonatomic) UIView *sensorActivityIndicator;
@property (class, readonly, nonatomic) NSString *sensorActivityIndicatorPartIdentifier;

@property (retain, nonatomic) NSMutableDictionary *items;
@property (retain, nonatomic) NSMutableDictionary *displayItemStates;
@property (copy, nonatomic) id /* block */ updateCompletionHandler;
@property (retain, nonatomic) UIView *foregroundView;
@property (weak, nonatomic) id<_UIStatusBarActionable> targetActionable;
@property (retain, nonatomic) UIPointerInteraction *pointerInteraction;
@property (weak, nonatomic) id<_UIStatusBarActionable> hoveredActionable;
@property (retain, nonatomic) UIAccessibilityHUDGestureManager *accessibilityHUDGestureManager;
@property (retain, nonatomic, getter=_visualProviderClassName, setter=_setVisualProviderClassName:) NSString *visualProviderClassName;
@property (retain, nonatomic, getter=_visualProviderClass, setter=_setVisualProviderClass:) Class visualProviderClass;
@property (readonly, nonatomic) id<_UIStatusBarVisualProvider> visualProvider;
@property (readonly, nonatomic) NSDictionary *regions;
@property (readonly, nonatomic) _UIStatusBarDataAggregator *dataAggregator;
@property (readonly, nonatomic) _UIStatusBarData *currentAggregatedData;
@property (readonly, nonatomic) UIView *containerView;
@property (readonly, nonatomic) unsigned int animationContextId;
@property (readonly, nonatomic, getter=areAnimationsEnabled) BOOL animationsEnabled;
@property (retain, nonatomic) _UIStatusBarStyleAttributes *styleAttributes;
@property (retain, nonatomic) _UIStatusBarAction *action;
@property (copy, nonatomic) id /* block */ regionActionValidationBlock;
@property (retain, nonatomic) UIScreen *targetScreen;
@property (retain, nonatomic) NSDictionary *visualProviderInfo;
@property (nonatomic) long long style;
@property (copy, nonatomic) UIColor *foregroundColor;
@property (nonatomic) long long mode;
@property (nonatomic) long long orientation;
@property (readonly, nonatomic) _UIStatusBarData *currentData;
@property (readonly, nonatomic) NSSet *dependentDataEntryKeys;
@property (copy, nonatomic) _UIStatusBarData *overlayData;
@property (readonly, nonatomic) UIGestureRecognizer *actionGestureRecognizer;
@property (copy, nonatomic) NSArray *enabledPartIdentifiers;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } avoidanceFrame;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (struct CGSize { double x0; double x1; })intrinsicContentSizeForTargetScreen:(id)a0 orientation:(long long)a1 onLockScreen:(BOOL)a2 isAzulBLinked:(BOOL)a3;
+ (struct CGSize { double x0; double x1; })intrinsicContentSizeForTargetScreen:(id)a0 orientation:(long long)a1 onLockScreen:(BOOL)a2;
+ (id)stringForStatusBarStyle:(long long)a0;

- (void)pointerInteraction:(id)a0 willExitRegion:(id)a1 animator:(id)a2;
- (id)_traitCollectionForChildEnvironment:(id)a0;
- (id)_accessibilityHUDGestureManager:(id)a0 HUDItemForPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)_accessibilityHUDGestureManager:(id)a0 gestureLiftedAtPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)_performAnimations:(id)a0;
- (BOOL)_cursorLocation:(struct CGPoint { double x0; double x1; })a0 isInsideHoverableActionable:(id)a1;
- (long long)_effectiveStyleFromStyle:(long long)a0;
- (id)initWithStyle:(long long)a0;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (id)pointerInteraction:(id)a0 styleForRegion:(id)a1;
- (void).cxx_destruct;
- (void)_updateDisplayedItemsWithData:(id)a0 styleAttributes:(id)a1 extraAnimations:(id)a2;
- (void)_updateWithData:(id)a0 completionHandler:(id /* block */)a1;
- (BOOL)_gestureRecognizer:(id)a0 isInsideActionable:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_extendedHoverFrameForActionable:(id)a0;
- (void)_updateWithAggregatedData:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForPartWithIdentifier:(id)a0 includeInternalItems:(BOOL)a1;
- (void)setSemanticContentAttribute:(long long)a0;
- (void)pointerInteraction:(id)a0 willEnterRegion:(id)a1 animator:(id)a2;
- (id)_effectiveTargetScreen;
- (id)_statusBarWindowForAccessibilityHUD;
- (void)_delayUpdatesWithKeys:(id)a0 fromAnimation:(id)a1;
- (id)pointerInteraction:(id)a0 regionForRequest:(id)a1 defaultRegion:(id)a2;
- (void)_prepareVisualProviderIfNeeded;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForActionable:(id)a0;
- (void)updateConstraints;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForDisplayItemWithIdentifier:(id)a0;
- (void)_fixupDisplayItemAttributes;
- (double)alphaForPartWithIdentifier:(id)a0;
- (void)_updateRegionItems;
- (id)displayItemIdentifiersInRegionsWithIdentifiers:(id)a0;
- (BOOL)_accessibilityHUDGestureManager:(id)a0 shouldTerminateHUDGestureForOtherGestureRecognizer:(id)a1;
- (id)itemsDependingOnKeys:(id)a0;
- (id)regionWithIdentifier:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_pressFrameForActionable:(id)a0;
- (void)layoutSubviews;
- (id)itemIdentifiersInRegionsWithIdentifiers:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForPartWithIdentifier:(id)a0;
- (void)setStyle:(long long)a0 forPartWithIdentifier:(id)a1;
- (void)_dismissAccessibilityHUDForGestureManager:(id)a0;
- (void)resizeSubviewsWithOldSize:(struct CGSize { double x0; double x1; })a0;
- (id)stateForDisplayItemWithIdentifier:(id)a0;
- (void)setAlpha:(double)a0 forPartWithIdentifier:(id)a1;
- (void)setOffset:(struct UIOffset { double x0; double x1; })a0 forPartWithIdentifier:(id)a1;
- (void)setAction:(id)a0 forPartWithIdentifier:(id)a1;
- (void)_prepareAnimations:(id)a0;
- (struct UIOffset { double x0; double x1; })offsetForPartWithIdentifier:(id)a0;
- (id)itemWithIdentifier:(id)a0;
- (id)styleAttributesForStyle:(long long)a0;
- (void)updateWithData:(id)a0;
- (void)resetVisualProvider;
- (void)_accessibilityHUDGestureManager:(id)a0 showHUDItem:(id)a1;
- (id)_regionsForPartWithIdentifier:(id)a0 includeInternalItems:(BOOL)a1;
- (BOOL)_gestureRecognizer:(id)a0 touchInsideActionable:(id)a1;
- (BOOL)_forceLayoutEngineSolutionInRationalEdges;
- (id)_itemWithIdentifier:(id)a0 createIfNeeded:(BOOL)a1;
- (void)statusBarGesture:(id)a0;
- (id)_actionablesForPartWithIdentifier:(id)a0 includeInternalItems:(BOOL)a1 onlyVisible:(BOOL)a2;
- (void)_rearrangeOverflowedItems;
- (BOOL)_cursorLocation:(struct CGPoint { double x0; double x1; })a0 isInsideActionable:(id)a1;
- (void)_updateActionGestureRecognizerAllowableTouchTypesIfNeeded;
- (BOOL)gestureRecognizerShouldBegin:(id)a0;
- (BOOL)_gestureRecognizer:(id)a0 pressInsideActionable:(id)a1;
- (BOOL)_accessibilityHUDGestureManager:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForActionable:(id)a0 actionInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a1;
- (void)_performWithInheritedAnimation:(id /* block */)a0;
- (void)traitCollectionDidChange:(id)a0;
- (void)_updateStyleAttributes;
- (id)actionForPartWithIdentifier:(id)a0;
- (id)dataEntryKeysForItemsWithIdentifiers:(id)a0;
- (BOOL)_accessibilityHUDGestureManager:(id)a0 shouldBeginAtPoint:(struct CGPoint { double x0; double x1; })a1;
- (id)displayItemWithIdentifier:(id)a0;
- (long long)styleForPartWithIdentifier:(id)a0;
- (void)updateWithAnimations:(id)a0;

@end
