@class SBFAuthenticationAssertionManager, NSString, SBFMobileKeyBag, NSDate, NSHashTable, SBFAuthenticationAssertion, PCPersistentTimer, SBFMobileKeyBagState, NSMutableArray, SBFSecureDisplayCoordinator;
@protocol SBFAuthenticationPolicy, SBFUserAuthenticationModel;

@interface SBFUserAuthenticationController : NSObject <SBFMobileKeyBagObserver, SBFUserAuthenticationModelDelegate, SBFAuthenticationAssertionProviding, SBFAuthenticationStatusProvider, SBFPasscodeFieldChangeObserver> {
    SBFMobileKeyBag *_keybag;
    NSMutableArray *_responders;
    NSHashTable *_observers;
    id<SBFUserAuthenticationModel> _model;
    long long _authenticationState;
    SBFAuthenticationAssertionManager *_assertionManager;
    NSString *_lastIncorrectPasscodeAttempt;
    SBFAuthenticationAssertion *_transientAuthCheckingAssertion;
    struct __CFRunLoopObserver { } *_runLoopObserver;
    PCPersistentTimer *_unblockTimer;
    long long _cachedAuthFlag;
    SBFSecureDisplayCoordinator *_secureDisplayCoordinator;
    SBFMobileKeyBagState *_cachedExtendedState;
}

@property (retain, nonatomic, getter=_policy, setter=_setPolicy:) id<SBFAuthenticationPolicy> policy;
@property (readonly, nonatomic) NSDate *lastRevokedAuthenticationDate;
@property (readonly, nonatomic) BOOL inSecureDisplayMode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)publicDescription;
- (BOOL)isAuthenticated;
- (void)_unblockTimerFired;
- (BOOL)_isAssertionValid:(id)a0;
- (void)_setAuthState:(long long)a0;
- (BOOL)_isUserAuthenticated;
- (id)initWithAssertionManager:(id)a0 policy:(id)a1 keybag:(id)a2 model:(id)a3;
- (BOOL)_performNilPasscodeCheck;
- (void)_setup_runLoopObserverIfNecessary;
- (void).cxx_destruct;
- (id)descriptionBuilderWithMultilinePrefix:(id)a0;
- (void)_revokeAuthenticationImmediately:(BOOL)a0 forPublicReason:(id)a1;
- (void)dealloc;
- (void)revokeAuthenticationImmediatelyForPublicReason:(id)a0;
- (void)_addAsFirstResponder:(id)a0;
- (void)_updateAuthenticationStateImmediately:(BOOL)a0 forPublicReason:(id)a1;
- (void)revokeAuthenticationImmediatelyIfNecessaryForPublicReason:(id)a0;
- (void)_notifyClientsOfAuthenticationResult:(long long)a0 forRequest:(id)a1 error:(id)a2 withResponder:(id)a3;
- (id)succinctDescription;
- (long long)_evaluateAuthenticationAttempt:(id)a0 outError:(id *)a1;
- (void)_notifyAboutTemporaryBlockStatusChanged;
- (void)_removeAuthenticationAssertion:(id)a0;
- (id)descriptionWithMultilinePrefix:(id)a0;
- (void)revokeAuthenticationIfNecessaryForPublicReason:(id)a0;
- (BOOL)hasAuthenticatedAtLeastOnceSinceBoot;
- (BOOL)_processAuthenticationRequest:(id)a0 responder:(id)a1;
- (id)initWithAssertionManager:(id)a0 policy:(id)a1;
- (void)_updateAuthenticationStateForPublicReason:(id)a0;
- (id)createKeybagUnlockAssertionWithReason:(id)a0;
- (void)deviceLockModelRequestsDeviceWipe:(id)a0;
- (void)_setupPolicy:(id)a0;
- (double)_timeUntilUnblockedSinceReferenceDate;
- (void)_clearBlockedState;
- (void)notePasscodeEntryCancelled;
- (void)_scheduleUnblockTimer;
- (id)succinctDescriptionBuilder;
- (void)_clearUnblockTimer;
- (void)_addPrivateAuthenticationObserver:(id)a0;
- (BOOL)_isInBioUnlockState;
- (void)_handleFailedAuthentication:(id)a0 error:(id)a1 responder:(id)a2;
- (void)_refreshModelCacheIfNeeded;
- (BOOL)hasPasscodeSet;
- (void)_handleSuccessfulAuthentication:(id)a0 responder:(id)a1;
- (long long)_evaluatePasscodeAttempt:(id)a0 outError:(id *)a1;
- (BOOL)isAuthenticatedCached;
- (void)_setModel:(id)a0;
- (void)processAuthenticationRequest:(id)a0;
- (void)_addAuthenticationAssertion:(id)a0;
- (void)_noteDeviceLockStateMayHaveChangedForExternalReasons;
- (id)createGracePeriodAssertionWithReason:(id)a0;
- (void)_removePrivateAuthenticationObserver:(id)a0;
- (void)_handleInvalidAuthentication:(id)a0 responder:(id)a1;
- (void)_uncachePasscodeIfNecessary;
- (void)_updateAuthenticationStateAndDateForLockState:(id)a0;
- (BOOL)_isInGracePeriodState;
- (long long)_evaluateBiometricAttempt:(id)a0;
- (void)deviceLockStateMayHaveChangedForModel:(id)a0;
- (void)keybagDidUnlockForTheFirstTime:(id)a0;
- (id)_cachedLockStateExtended;
- (void)_invalidateCachedPasscodeLockState;
- (BOOL)_boolForAuthenticationResult:(long long)a0;
- (void)_removeAuthResponder:(id)a0;
- (BOOL)_authenticateIfInGracePeriod;
- (BOOL)_isPermanentlyBlocked;
- (void)removeResponder:(id)a0;
- (void)notePasscodeEntryBegan;
- (void)processAuthenticationRequest:(id)a0 responder:(id)a1;
- (BOOL)_shouldRevokeAuthenticationNow;
- (void)keybag:(id)a0 extendedStateDidChange:(id)a1;
- (void)addAsFirstResponder:(id)a0;
- (BOOL)_isTemporarilyBlocked;
- (void)_updateSecureModeIfNecessaryForNewAuthState;

@end
