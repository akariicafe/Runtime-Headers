@class NSMutableDictionary, NSMutableSet, UILabel, UIView;
@protocol NCNotificationListViewDataSource;

@interface NCNotificationListView : UIScrollView

@property (retain, nonatomic) NSMutableDictionary *visibleViews;
@property (retain, nonatomic) NSMutableSet *insertedViewIndices;
@property (retain, nonatomic) NSMutableSet *reloadedViewIndices;
@property (nonatomic) unsigned long long removedViewIndex;
@property (nonatomic, getter=isPerformingGroupingAnimation) BOOL performingGroupingAnimation;
@property (nonatomic, getter=isPerformingRevealAnimation) BOOL performingRevealAnimation;
@property (nonatomic, getter=isPerformingHeaderReloadAnimation) BOOL performingHeaderReloadAnimation;
@property (nonatomic, getter=isPerformingVisibleRectAdjustment) BOOL performingVisibleRectAdjustment;
@property (retain, nonatomic) NSMutableSet *viewsPerformingAnimation;
@property (retain, nonatomic) UILabel *titleLabel;
@property (retain, nonatomic) UIView *headerView;
@property (retain, nonatomic) UIView *footerView;
@property (nonatomic, getter=hasPerformedFirstLayout) BOOL performedFirstLayout;
@property (readonly, nonatomic, getter=isNotificationListViewCurrentlyVisible) BOOL notificationListViewCurrentlyVisible;
@property (nonatomic, getter=isCachedSizeValid) BOOL cachedSizeValid;
@property (nonatomic) struct CGSize { double width; double height; } cachedSize;
@property (weak, nonatomic) id<NCNotificationListViewDataSource> dataSource;
@property (readonly, nonatomic) unsigned long long count;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } visibleRect;
@property (nonatomic, getter=isGrouped) BOOL grouped;
@property (nonatomic) double groupedTranslation;
@property (nonatomic, getter=isSubviewPerformingGroupingAnimation) BOOL subviewPerformingGroupingAnimation;
@property (nonatomic, getter=isPerformingContentRevealAnimation) BOOL performingContentRevealAnimation;
@property (nonatomic, getter=isRevealed) BOOL revealed;
@property (nonatomic, getter=isLeadingRevealView) BOOL leadingRevealView;
@property (nonatomic, getter=isActiveRevealTransitioning) BOOL activeRevealTransitioning;
@property (nonatomic) double revealPercentage;
@property (nonatomic) unsigned long long revealIndexOffset;

- (void)_layoutLeadingViewForGroupingLayoutIfNecessary:(id)a0 hasShadow:(BOOL)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForViewAtIndex:(unsigned long long)a0;
- (double)_revealAnimationDelayForObjectAtIndex:(unsigned long long)a0;
- (double)layoutOffsetForViewAtIndex:(unsigned long long)a0;
- (void).cxx_destruct;
- (void)_removeAllStoredVisibleViews;
- (double)_positionOffsetForRevealHintingForHeaderView;
- (void)invalidateData;
- (void)_setVisibleView:(id)a0 atIndex:(unsigned long long)a1;
- (void)_updateStoredVisibleViewsForViewInsertedAtIndex:(unsigned long long)a0;
- (void)_setupClipping;
- (BOOL)_isViewWithinVisibleRectForHeight:(double)a0 layoutOffset:(double)a1;
- (void)reloadViewAtIndex:(unsigned long long)a0;
- (id)_visibleViewAtIndex:(unsigned long long)a0;
- (double)_adjustedTensionForRevealAnimation;
- (void)_updateStoredVisibleViewsForViewRemovedAtIndex:(unsigned long long)a0;
- (void)_removeStoredVisibleViewAtIndex:(unsigned long long)a0;
- (void)insertViewAtIndex:(unsigned long long)a0 animated:(BOOL)a1;
- (void)_performInsertionAnimationForView:(id)a0;
- (void)removeViewAtIndex:(unsigned long long)a0 animated:(BOOL)a1;
- (BOOL)isVisibleForViewAtIndex:(unsigned long long)a0;
- (void)recycleVisibleViews;
- (void)_updateVisibleViewsForUpdatedVisibleRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_adjustContentSizeHeightIfNecessaryForUpdatedHeight:(double)a0;
- (void)_setContentHiddenForGroupedView:(id)a0 atIndex:(unsigned long long)a1;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })_scaleTransformForGroupingAnimationForViewAtIndex:(unsigned long long)a0 leadingViewHeight:(double)a1;
- (double)_positionOffsetForRevealHintingForItemAtIndex:(unsigned long long)a0;
- (void)didMoveToSuperview;
- (void)reloadHeaderView;
- (void)_recycleViewIfNecessary:(id)a0;
- (id)_footerViewFromDataSource;
- (void)_layoutForList;
- (void)_recycleViewIfNecessary:(id)a0 withDataSource:(id)a1;
- (void)layoutSubviews;
- (void)_performViewAnimationBlock:(id /* block */)a0 completionBlock:(id /* block */)a1;
- (void)_layoutFooterViewIfNecessaryAtLayoutOffset:(double)a0;
- (void)_performRemovalAnimationForView:(id)a0;
- (BOOL)_isVisibleView:(id)a0;
- (void)_layoutFooterViewForGroupingIfNecessary;
- (id)_headerViewFromDataSource;
- (void)_layoutForGrouping;
- (void)_configureClippingIfNecessary;
- (id)_listViewForView:(id)a0;
- (double)_verticalVelocityForSuperview;
- (double)_footerViewHeight;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_adjustContentSizeWidthIfNecessary;
- (void)_layoutHiddenViewsForGroupingLayoutIfNecessaryWithLeadingViewHeight:(double)a0;
- (void)_layoutGroupedViewForGroupingLayout:(id)a0 atIndex:(unsigned long long)a1 isExistingView:(BOOL)a2 leadingViewHeight:(double)a3;
- (BOOL)_shouldPerformClipping;
- (BOOL)_isGrouping;
- (void)_layoutHeaderViewIfNecessaryAtLayoutOffset:(double)a0;
- (double)_headerViewHeight;
- (void)_configureStackDimmingForGroupedView:(id)a0 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a1;
- (void)_resetClipping;
- (double)_layoutViewIfNecessaryAtIndex:(unsigned long long)a0 layoutOffset:(double)a1;
- (void)revealNotificationContentBelowGroupedViewIfNecessary:(id)a0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_performAnimationForView:(id)a0 atIndex:(unsigned long long)a1 animationBlock:(id /* block */)a2 completionBlock:(id /* block */)a3;
- (BOOL)_isTopSubviewHeightLessThanVisibleRect;
- (double)_adjustedFrictionForRevealAnimation;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (void)_performViewAnimationBlock:(id /* block */)a0 completionBlock:(id /* block */)a1 withTension:(double)a2 friction:(double)a3;
- (void)_layoutHeaderViewForGroupingIfNecessary;

@end
