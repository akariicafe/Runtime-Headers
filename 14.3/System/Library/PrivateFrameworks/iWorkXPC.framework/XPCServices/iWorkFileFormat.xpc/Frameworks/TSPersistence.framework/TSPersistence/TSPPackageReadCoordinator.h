@class NSURL, NSMapTable, TSPObjectContext, TSPPackageMetadata, TSPPersistedObjectUUIDMap, TSPFinalizeHandlerQueue, NSObject, NSString, TSPPackage, NSSet, TSPObjectContainer, NSMutableSet, TSPObject, NSArray, TSPDocumentRevision, NSUUID;
@protocol OS_dispatch_group, OS_dispatch_queue;

@interface TSPPackageReadCoordinator : TSPReadCoordinatorBase <TSPPersistedObjectUUIDMapDelegate, TSPReadCoordinator> {
    TSPObjectContext *_context;
    NSUUID *_documentUUID;
    TSPObject *_documentObject;
    TSPPackage *_package;
    NSURL *_packageURL;
    TSPFinalizeHandlerQueue *_finalizeHandlerQueue;
    BOOL _areExternalDataReferencesAllowed;
    BOOL _skipDocumentUpgrade;
    unsigned long long _readVersion;
    TSPPackageMetadata *_cachedMetadata;
    TSPPersistedObjectUUIDMap *_persistedUUIDMap;
    struct vector<std::__1::unique_ptr<TSP::PersistedObjectUUIDMapOperation, std::__1::default_delete<TSP::PersistedObjectUUIDMapOperation> >, std::__1::allocator<std::__1::unique_ptr<TSP::PersistedObjectUUIDMapOperation, std::__1::default_delete<TSP::PersistedObjectUUIDMapOperation> > > > { struct unique_ptr<TSP::PersistedObjectUUIDMapOperation, std::__1::default_delete<TSP::PersistedObjectUUIDMapOperation> > *__begin_; struct unique_ptr<TSP::PersistedObjectUUIDMapOperation, std::__1::default_delete<TSP::PersistedObjectUUIDMapOperation> > *__end_; struct __compressed_pair<std::__1::unique_ptr<TSP::PersistedObjectUUIDMapOperation, std::__1::default_delete<TSP::PersistedObjectUUIDMapOperation> > *, std::__1::allocator<std::__1::unique_ptr<TSP::PersistedObjectUUIDMapOperation, std::__1::default_delete<TSP::PersistedObjectUUIDMapOperation> > > > { struct unique_ptr<TSP::PersistedObjectUUIDMapOperation, std::__1::default_delete<TSP::PersistedObjectUUIDMapOperation> > *__value_; } __end_cap_; } _persistedUUIDMapOperations;
    NSMutableSet *_duplicatedUUIDs;
    NSMutableSet *_componentIdentifiersWithDuplicatedUUIDs;
    NSObject<OS_dispatch_group> *_completionGroup;
    NSObject<OS_dispatch_queue> *_ioQueue;
    NSObject<OS_dispatch_queue> *_ioCompletionQueue;
    NSObject<OS_dispatch_queue> *_readCompletionQueue;
    NSObject<OS_dispatch_queue> *_componentQueue;
    struct unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > { struct __hash_table<std::__1::__hash_value_type<const long long, bool>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, bool> > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> **__value_; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> *> > { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true> > { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true> > { float __value_; } __p3_; } __table_; } _readIdentifiers;
    NSArray *_componentsToUpgrade;
    NSObject<OS_dispatch_queue> *_objectQueue;
    NSMapTable *_objects;
    struct unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > { struct __hash_table<std::__1::__hash_value_type<const long long, bool>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, bool> > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> **__value_; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> *> > { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *> *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true> > { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true> > { float __value_; } __p3_; } __table_; } _readExternalObjects;
}

@property (readonly, nonatomic) BOOL losesDataOnWrite;
@property (readonly, nonatomic) NSSet *featureIdentifiers;
@property (readonly, nonatomic) NSSet *unsupportedFeatureIdentifiers;
@property (readonly, nonatomic) TSPDocumentRevision *documentRevision;
@property (readonly, nonatomic) unsigned long long saveToken;
@property (readonly, nonatomic) long long preferredPackageType;
@property (readonly, nonatomic) TSPObjectContainer *objectContainer;
@property (readonly, nonatomic) TSPObject *metadataObject;
@property (readonly, nonatomic) BOOL didRequireUpgrade;
@property (readonly, nonatomic) BOOL isReadingFromDocument;
@property (readonly, nonatomic) long long archiveValidationMode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (long long)sourceType;
- (id)context;
- (id)init;
- (void).cxx_destruct;
- (unsigned char)packageIdentifier;
- (id).cxx_construct;
- (unsigned long long)fileFormatVersion;
- (BOOL)hasDocumentVersionUUID;
- (id)readPackageMetadataWithError:(id *)a0;
- (id)initWithContext:(id)a0 package:(id)a1 packageURL:(id)a2 finalizeHandlerQueue:(id)a3 areExternalDataReferencesAllowed:(BOOL)a4 skipDocumentUpgrade:(BOOL)a5 archiveValidationMode:(long long)a6;
- (void)updateObjectContextForSuccessfulRead;
- (void)readRootObjectWithCompletionQueue:(id)a0 completion:(id /* block */)a1;
- (void)validateArchiveWithCompletion:(id /* block */)a0;
- (BOOL)endReading;
- (void)readComponent:(id)a0 completionQueue:(id)a1 completion:(id /* block */)a2;
- (BOOL)canRetainObjectReferencedByWeakLazyReference;
- (unsigned long long)readVersion;
- (id)persistedObjectUUIDMap:(id)a0 needsDescriptionForComponentIdentifier:(long long)a1 objectIdentifier:(long long)a2;
- (void)persistedObjectUUIDMap:(id)a0 foundDuplicateUUID:(id)a1 firstObjectLocation:(struct ObjectLocation { long long x0; long long x1; })a2 secondObjectLocation:(struct ObjectLocation { long long x0; long long x1; })a3;
- (void)reader:(id)a0 didFindExternalReferenceToObjectIdentifier:(long long)a1 componentIdentifier:(long long)a2 isWeak:(BOOL)a3 allowUnknownObject:(BOOL)a4 fromParentObject:(id)a5 completion:(id /* block */)a6;
- (void)reader:(id)a0 didFindExternalRepeatedReference:(id)a1 isWeak:(BOOL)a2 allowUnknownObject:(BOOL)a3 fromParentObject:(id)a4 completion:(id /* block */)a5;
- (void)didUpdateLazyReferenceDelegate:(id)a0;
- (id)baseObjectUUID;
- (id)unarchivedObjectForIdentifier:(long long)a0 isReadFinished:(BOOL)a1;
- (id)externalObjectForIdentifier:(long long)a0 componentIdentifier:(long long)a1 isReadFinished:(BOOL)a2;
- (void)didReferenceExternalObject:(id)a0 withIdentifier:(long long)a1;
- (long long)reader:(id)a0 wantsObjectIdentifierForUUID:(id)a1;
- (id)reader:(id)a0 wantsDataForIdentifier:(long long)a1;
- (long long)metadataObjectIdentifier;
- (void)postprocessMetadata:(id)a0;
- (void)p_readComponent:(id)a0 additionalComponents:(id)a1 requireUpgrade:(BOOL)a2 completionQueue:(id)a3 completion:(id /* block */)a4;
- (void)readPackageMetadataWithComponent:(id)a0 completionQueue:(id)a1 completion:(id /* block */)a2;
- (void)p_readComponent:(id)a0 completionQueue:(id)a1 completion:(id /* block */)a2;
- (BOOL)readComponentIfNeededAsync:(id)a0;
- (void)prepareForFullDocumentUpgradeImpl;
- (void)readComponentAsync:(id)a0;
- (void)didReadObjects:(id)a0 forComponent:(id)a1 packageIdentifier:(unsigned char)a2;
- (void)prepareToReadComponentWithIdentifier:(long long)a0 forObjectIdentifier:(long long)a1 isWeakReference:(BOOL)a2 queue:(id)a3 completion:(id /* block */)a4;
- (void)preprocessMetadata:(id)a0;
- (unsigned long long)fileFormatVersionFromMetadataMessage:(const struct PackageMetadata { void /* function */ **x0; struct InternalMetadataWithArena { void *x0; } x1; struct HasBits<1> { unsigned int x0[1]; } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x0; } x0; } x0; } x3; struct RepeatedPtrField<TSP::ComponentInfo> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x4; struct RepeatedPtrField<TSP::DataInfo> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x5; struct RepeatedField<unsigned int> { int x0; int x1; union Pointer { struct Arena *x0; struct Rep *x1; } x2; } x6; int x7; struct RepeatedField<unsigned int> { int x0; int x1; union Pointer { struct Arena *x0; struct Rep *x1; } x2; } x8; int x9; struct RepeatedField<unsigned int> { int x0; int x1; union Pointer { struct Arena *x0; struct Rep *x1; } x2; } x10; int x11; struct RepeatedPtrField<TSP::ComponentInfo> { struct Arena *x0; int x1; int x2; struct Rep *x3; } x12; struct DocumentRevision *x13; struct Reference *x14; unsigned long long x15; unsigned long long x16; int x17; } *)a0;
- (id)newObjectUUIDForObjectIdentifier:(long long)a0;
- (id)p_allComponentsInPackage;
- (void)p_validateComponent:(id)a0 completion:(id /* block */)a1;
- (void)readExternalReferenceComponentIfNeededAsyncForObjectIdentifier:(long long)a0 componentIdentifier:(long long)a1 isWeak:(BOOL)a2 fromComponent:(id)a3;
- (void)prepareForFullDocumentUpgrade;
- (void)reader:(id)a0 didResetObjectIdentifierForObject:(id)a1 originalObjectIdentifier:(long long)a2;
- (void)reader:(id)a0 didResetObjectUUID:(id)a1 forObjectIdentifier:(long long)a2 originalObjectUUID:(id)a3;

@end
