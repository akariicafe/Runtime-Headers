@interface EDPBMessageHeaders : PBCodable <NSCopying> {
    struct { long long *list; unsigned long long count; unsigned long long size; } _bccAddress;
    struct { long long *list; unsigned long long count; unsigned long long size; } _bccContactIds;
    struct { long long *list; unsigned long long count; unsigned long long size; } _bccDomains;
    struct { BOOL *list; unsigned long long count; unsigned long long size; } _bccIsVips;
    struct { long long *list; unsigned long long count; unsigned long long size; } _ccAddress;
    struct { long long *list; unsigned long long count; unsigned long long size; } _ccContactIds;
    struct { long long *list; unsigned long long count; unsigned long long size; } _ccDomains;
    struct { BOOL *list; unsigned long long count; unsigned long long size; } _ccIsVips;
    struct { long long *list; unsigned long long count; unsigned long long size; } _references;
    struct { long long *list; unsigned long long count; unsigned long long size; } _subjectWords;
    struct { long long *list; unsigned long long count; unsigned long long size; } _toAddress;
    struct { long long *list; unsigned long long count; unsigned long long size; } _toContactIds;
    struct { long long *list; unsigned long long count; unsigned long long size; } _toDomains;
    struct { BOOL *list; unsigned long long count; unsigned long long size; } _toIsVips;
    struct { unsigned char dateReceived : 1; unsigned char listId : 1; unsigned char sender : 1; unsigned char senderContactId : 1; unsigned char senderDomain : 1; unsigned char messageIsForwarded : 1; unsigned char messageIsReply : 1; unsigned char senderIsVip : 1; unsigned char userIsBcc : 1; unsigned char userIsCc : 1; unsigned char userIsSender : 1; unsigned char userIsTo : 1; } _has;
}

@property (nonatomic) BOOL hasSender;
@property (nonatomic) long long sender;
@property (nonatomic) BOOL hasSenderDomain;
@property (nonatomic) long long senderDomain;
@property (nonatomic) BOOL hasSenderIsVip;
@property (nonatomic) BOOL senderIsVip;
@property (nonatomic) BOOL hasSenderContactId;
@property (nonatomic) long long senderContactId;
@property (nonatomic) BOOL hasUserIsSender;
@property (nonatomic) BOOL userIsSender;
@property (readonly, nonatomic) unsigned long long subjectWordsCount;
@property (readonly, nonatomic) long long *subjectWords;
@property (nonatomic) BOOL hasMessageIsReply;
@property (nonatomic) BOOL messageIsReply;
@property (nonatomic) BOOL hasMessageIsForwarded;
@property (nonatomic) BOOL messageIsForwarded;
@property (nonatomic) BOOL hasUserIsTo;
@property (nonatomic) BOOL userIsTo;
@property (nonatomic) BOOL hasUserIsCc;
@property (nonatomic) BOOL userIsCc;
@property (nonatomic) BOOL hasUserIsBcc;
@property (nonatomic) BOOL userIsBcc;
@property (nonatomic) BOOL hasDateReceived;
@property (nonatomic) unsigned long long dateReceived;
@property (nonatomic) BOOL hasListId;
@property (nonatomic) long long listId;
@property (readonly, nonatomic) unsigned long long referencesCount;
@property (readonly, nonatomic) long long *references;
@property (readonly, nonatomic) unsigned long long toAddressCount;
@property (readonly, nonatomic) long long *toAddress;
@property (readonly, nonatomic) unsigned long long toDomainsCount;
@property (readonly, nonatomic) long long *toDomains;
@property (readonly, nonatomic) unsigned long long toIsVipsCount;
@property (readonly, nonatomic) BOOL *toIsVips;
@property (readonly, nonatomic) unsigned long long toContactIdsCount;
@property (readonly, nonatomic) long long *toContactIds;
@property (readonly, nonatomic) unsigned long long ccAddressCount;
@property (readonly, nonatomic) long long *ccAddress;
@property (readonly, nonatomic) unsigned long long ccDomainsCount;
@property (readonly, nonatomic) long long *ccDomains;
@property (readonly, nonatomic) unsigned long long ccIsVipsCount;
@property (readonly, nonatomic) BOOL *ccIsVips;
@property (readonly, nonatomic) unsigned long long ccContactIdsCount;
@property (readonly, nonatomic) long long *ccContactIds;
@property (readonly, nonatomic) unsigned long long bccAddressCount;
@property (readonly, nonatomic) long long *bccAddress;
@property (readonly, nonatomic) unsigned long long bccDomainsCount;
@property (readonly, nonatomic) long long *bccDomains;
@property (readonly, nonatomic) unsigned long long bccIsVipsCount;
@property (readonly, nonatomic) BOOL *bccIsVips;
@property (readonly, nonatomic) unsigned long long bccContactIdsCount;
@property (readonly, nonatomic) long long *bccContactIds;

- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)mergeFrom:(id)a0;
- (void)dealloc;
- (BOOL)readFrom:(id)a0;
- (unsigned long long)hash;
- (void)writeTo:(id)a0;
- (id)description;
- (void)copyTo:(id)a0;
- (BOOL)isEqual:(id)a0;
- (id)dictionaryRepresentation;
- (void)addReferences:(long long)a0;
- (void)clearReferences;
- (long long)referencesAtIndex:(unsigned long long)a0;
- (void)clearSubjectWords;
- (long long)subjectWordsAtIndex:(unsigned long long)a0;
- (void)addSubjectWords:(long long)a0;
- (void)clearToAddress;
- (long long)toAddressAtIndex:(unsigned long long)a0;
- (void)addToAddress:(long long)a0;
- (void)clearToDomains;
- (long long)toDomainAtIndex:(unsigned long long)a0;
- (void)addToDomain:(long long)a0;
- (void)clearToIsVips;
- (BOOL)toIsVipAtIndex:(unsigned long long)a0;
- (void)addToIsVip:(BOOL)a0;
- (void)clearToContactIds;
- (long long)toContactIdAtIndex:(unsigned long long)a0;
- (void)addToContactId:(long long)a0;
- (void)clearCcAddress;
- (long long)ccAddressAtIndex:(unsigned long long)a0;
- (void)addCcAddress:(long long)a0;
- (void)clearCcDomains;
- (long long)ccDomainAtIndex:(unsigned long long)a0;
- (void)addCcDomain:(long long)a0;
- (void)clearCcIsVips;
- (BOOL)ccIsVipAtIndex:(unsigned long long)a0;
- (void)addCcIsVip:(BOOL)a0;
- (void)clearCcContactIds;
- (long long)ccContactIdAtIndex:(unsigned long long)a0;
- (void)addCcContactId:(long long)a0;
- (void)clearBccAddress;
- (long long)bccAddressAtIndex:(unsigned long long)a0;
- (void)addBccAddress:(long long)a0;
- (void)clearBccDomains;
- (long long)bccDomainAtIndex:(unsigned long long)a0;
- (void)addBccDomain:(long long)a0;
- (void)clearBccIsVips;
- (BOOL)bccIsVipAtIndex:(unsigned long long)a0;
- (void)addBccIsVip:(BOOL)a0;
- (void)clearBccContactIds;
- (long long)bccContactIdAtIndex:(unsigned long long)a0;
- (void)addBccContactId:(long long)a0;
- (void)setSubjectWords:(long long *)a0 count:(unsigned long long)a1;
- (void)setReferences:(long long *)a0 count:(unsigned long long)a1;
- (void)setToAddress:(long long *)a0 count:(unsigned long long)a1;
- (void)setToDomains:(long long *)a0 count:(unsigned long long)a1;
- (void)setToIsVips:(BOOL *)a0 count:(unsigned long long)a1;
- (void)setToContactIds:(long long *)a0 count:(unsigned long long)a1;
- (void)setCcAddress:(long long *)a0 count:(unsigned long long)a1;
- (void)setCcDomains:(long long *)a0 count:(unsigned long long)a1;
- (void)setCcIsVips:(BOOL *)a0 count:(unsigned long long)a1;
- (void)setCcContactIds:(long long *)a0 count:(unsigned long long)a1;
- (void)setBccAddress:(long long *)a0 count:(unsigned long long)a1;
- (void)setBccDomains:(long long *)a0 count:(unsigned long long)a1;
- (void)setBccIsVips:(BOOL *)a0 count:(unsigned long long)a1;
- (void)setBccContactIds:(long long *)a0 count:(unsigned long long)a1;

@end
