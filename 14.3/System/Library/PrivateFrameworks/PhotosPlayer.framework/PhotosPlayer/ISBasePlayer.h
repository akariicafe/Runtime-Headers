@class ISBehavior, ISWrappedAVPlayer, NSString, ISPlayerItem, NSError, NSHashTable, ISPlayerState, NSObject, ISPlayerOutputContent, AVPlayer;
@protocol OS_dispatch_queue, ISBasePlayerDelegate;

@interface ISBasePlayer : ISObservable <ISChangeObserver, ISWrappedAVPlayerDelegate> {
    float _videoVolume;
    AVPlayer *_providedAVPlayer;
    NSObject<OS_dispatch_queue> *_outputQueue;
    NSHashTable *_outputs;
    NSString *_apertureMode;
    struct { BOOL videoPlayer; BOOL videoPlayerVolume; BOOL contentFromPlayerItem; BOOL willPlayToEndObserver; BOOL willPlayToPhotoObserver; BOOL status; } _isValid;
    long long _mainQueue_mediaServicesResetCounter;
}

@property (retain, nonatomic, setter=setActiveBehavior:) ISBehavior *activeBehavior;
@property (retain, nonatomic, setter=_setVideoWillPlayToEndObserver:) id _videoWillPlayToEndObserver;
@property (retain, nonatomic, setter=_setVideoWillPlayToPhotoObserver:) id _videoWillPlayToPhotoObserver;
@property (retain, nonatomic, setter=_setLastAppliedLayoutInfo:) ISPlayerState *lastAppliedLayoutInfo;
@property (retain, nonatomic, setter=_setOutputContent:) ISPlayerOutputContent *_outputContent;
@property (nonatomic, setter=_setLastAppliedScale:) double lastAppliedScale;
@property (nonatomic, setter=_setStatus:) long long status;
@property (nonatomic, setter=_setVideoForwardPlaybackEndTime:) struct { long long value; int timescale; unsigned int flags; long long epoch; } _videoForwardPlaybackEndTime;
@property (retain, nonatomic, setter=_setError:) NSError *error;
@property (retain, nonatomic) ISPlayerItem *playerItem;
@property (nonatomic) float audioVolume;
@property (nonatomic, getter=isAudioEnabled) BOOL audioEnabled;
@property (weak, nonatomic) id<ISBasePlayerDelegate> delegate;
@property (readonly, nonatomic) ISWrappedAVPlayer *videoPlayer;
@property (readonly, nonatomic) BOOL videoLayersReadyForDisplay;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)init;
- (void)_invalidateVideoPlayer;
- (void).cxx_destruct;
- (void)activeBehaviorDidChange;
- (void)dealloc;
- (void)didPerformChanges;
- (void)playerItemDidChange;
- (void)observable:(id)a0 didChange:(unsigned long long)a1 context:(void *)a2;
- (void)_updateVideoPlayerIfNeeded;
- (void)configurePlayerItem;
- (BOOL)_needsUpdate;
- (void)_invalidateStatus;
- (void)_updateIfNeeded;
- (id)mutableChangeObject;
- (void)_setVideoPlayer:(id)a0;
- (double)videoWillPlayToPhotoInterval;
- (void)addOutput:(id)a0;
- (void)removeOutput:(id)a0;
- (void)avPlayer:(id)a0 itemDidPlayToEnd:(id)a1;
- (id)apertureMode;
- (void)setApertureMode:(id)a0;
- (void)statusDidChange;
- (id)initWithVideoPlayer:(id)a0;
- (void)_updateStatusIfNeeded;
- (void)_outputVideoReadyForDisplayDidChange:(id)a0;
- (BOOL)behaviorIsVideoReadyForDisplay:(id)a0;
- (void)didAddOutput:(id)a0;
- (void)willRemoveOutput:(id)a0;
- (void)_videoDidPlayToEnd;
- (void)_videoWillPlayToPhoto;
- (void)_videoWillPlayToEnd;
- (double)videoWillPlayToEndInterval;
- (void)applyScale:(double)a0 withTransitionOptions:(id)a1 completion:(id /* block */)a2;
- (void)applyOutputInfo:(id)a0 fromBehavior:(id)a1 withTransitionOptions:(id)a2 completion:(id /* block */)a3;
- (void)enumerateOutputsWithBlock:(id /* block */)a0;
- (void)_configureNewOutput:(id)a0;
- (void)_invalidateContentFromPlayerItem;
- (void)_updateContentFromPlayerItemIfNeeded;
- (void)_invalidateWillPlayToEndObserver;
- (void)_updateWillPlayToEndObserverIfNeeded;
- (void)_invalidateWillPlayToPhotoObserver;
- (void)_updateWillPlayToPhotoObserverIfNeeded;
- (void)_setForwardPlaybackEndTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (float)videoVolume;
- (void)setVideoVolume:(float)a0;
- (void)_invalidateVideoPlayerVolume;
- (void)_updateVideoPlayerVolumeIfNeeded;
- (void)_handleErrorsIfNeeded;
- (void)_mainQueue_handleMediaServicesReset;
- (void)_mainQueue_resetAVObjectsWithResetCount:(long long)a0;
- (void)behavior:(id)a0 didSetOutputInfo:(id)a1 withTransitionOptions:(id)a2 completion:(id /* block */)a3;
- (void)behavior:(id)a0 setVideoPlayRate:(float)a1;
- (float)videoPlayRate;
- (BOOL)behavior:(id)a0 seekVideoPlayerToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 completionHandler:(id /* block */)a2;
- (BOOL)behavior:(id)a0 seekVideoPlayerToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 toleranceBefore:(struct { long long x0; int x1; unsigned int x2; long long x3; })a2 toleranceAfter:(struct { long long x0; int x1; unsigned int x2; long long x3; })a3 completionHandler:(id /* block */)a4;
- (BOOL)behavior:(id)a0 prerollVideoAtRate:(float)a1 completionHandler:(id /* block */)a2;
- (void)behavior:(id)a0 setVideoForwardPlaybackEndTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
- (void)behavior:(id)a0 setVideoVolume:(float)a1;
- (id)behavior:(id)a0 addBoundaryTimeObserverForTimes:(id)a1 queue:(id)a2 usingBlock:(id /* block */)a3;
- (void)behavior:(id)a0 removeTimeObserver:(id)a1;
- (void)behavior:(id)a0 playVideoToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 initialRate:(float)a2 overDuration:(double)a3 progressHandler:(id /* block */)a4;

@end
