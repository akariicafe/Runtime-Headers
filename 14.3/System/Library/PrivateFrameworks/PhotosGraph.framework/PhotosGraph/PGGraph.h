@class NSMutableDictionary, NSDate, NSDictionary, CLSFocusPeopleCache, NSObject, PGManager, NSDateFormatter, PGGraphInfoNode, NSString, NSSet, NSRecursiveLock, NSNumber, NSArray, PGMessageProfile;
@protocol OS_os_log, OS_dispatch_queue;

@interface PGGraph : MAGraph {
    NSDate *_creationDate;
    NSNumber *_canUseLocationDomain;
    BOOL _didFetchRoutineInfo;
    PGGraphInfoNode *_infoNode;
    NSRecursiveLock *_supersetLock;
    NSSet *_supersets;
    NSSet *_supersetCityNodes;
    NSSet *_supersetCountyNodes;
    NSSet *_supersetStateNodes;
    NSSet *_supersetCountryNodes;
    NSSet *_supersetLocales;
    NSSet *_interestingCityNodes;
    NSSet *_highlyInterestingMomentNodes;
    NSMutableDictionary *_personNodesByPersonID;
    NSMutableDictionary *_isCelebratingInGeneralCache;
    NSArray *_preprocessors;
    NSArray *_postprocessors;
    NSDictionary *_zeroKeywordMappingByMeaningLabel;
    NSMutableDictionary *_momentNodeByMomentUUID;
    NSMutableDictionary *_highlightNodeByHighlightUUID;
}

@property (readonly, nonatomic) NSSet *musicSessions;
@property (readonly, nonatomic) NSDictionary *zeroKeywordMappingByMeaningLabel;
@property (readonly, nonatomic) NSSet *supersets;
@property (readonly, nonatomic) NSSet *supersetCityNodes;
@property (readonly, nonatomic) NSSet *supersetCountyNodes;
@property (readonly, nonatomic) NSSet *supersetStateNodes;
@property (readonly, nonatomic) NSSet *supersetCountryNodes;
@property (readonly, nonatomic) NSSet *supersetLocales;
@property (readonly, nonatomic) NSObject<OS_os_log> *relatedLoggingConnection;
@property (readonly, nonatomic) NSObject<OS_os_log> *ingestLoggingConnection;
@property (readonly, nonatomic) NSObject<OS_os_log> *graphLoggingConnection;
@property (retain, nonatomic) NSString *geoServiceProviderID;
@property (retain, nonatomic) NSDate *creationDate;
@property (nonatomic) unsigned long long curationAlgorithmsVersion;
@property (nonatomic) unsigned long long relatedAlgorithmsVersion;
@property (nonatomic) unsigned long long memoriesAlgorithmsVersion;
@property (nonatomic) unsigned long long meaningAlgorithmsVersion;
@property (nonatomic) unsigned long long relationshipAlgorithmsVersion;
@property (nonatomic) unsigned long long businessItemAlgorithmsVersion;
@property (nonatomic) unsigned long long publicEventAlgorithmsVersion;
@property (nonatomic) unsigned long long holidayAlgorithmsVersion;
@property (nonatomic) unsigned long long homeLocationAlgorithmsVersion;
@property (nonatomic) unsigned long long workLocationAlgorithmsVersion;
@property (nonatomic) unsigned long long autonamingAlgorithmsVersion;
@property (nonatomic) unsigned long long questionsVersion;
@property (nonatomic) unsigned long long tripKeyAssetAlgorithmsVersion;
@property (nonatomic) unsigned long long ageCategoryAlgorithmsVersion;
@property (nonatomic) unsigned long long memoryQualityAlgorithmsVersion;
@property (nonatomic) unsigned long long petAlgorithmsVersion;
@property (nonatomic) unsigned long long featuredPhotoAlgorithmsVersion;
@property (nonatomic) unsigned long long longTailFeaturedPhotoAlgorithmsVersion;
@property (retain, nonatomic) NSString *locale;
@property (nonatomic) BOOL canUseLocationDomain;
@property (nonatomic) struct PGRoutineInfoStruct { BOOL routineAvailable; unsigned long long numberOfLocationsOfInterest; unsigned long long numberOfVisits; unsigned long long numberOfTimeMatches; unsigned long long numberOfCloseByLocationMatches; unsigned long long numberOfRemoteLocationMatches; unsigned long long numberOfMatchRequests; double pinningVisitsRatio; } routineInfo;
@property (nonatomic) double personalGoodAestheticsThreshold;
@property (nonatomic) double personalHighAestheticsThreshold;
@property (readonly, nonatomic) NSDateFormatter *dateFormatter;
@property (retain, nonatomic) CLSFocusPeopleCache *focusPeopleIngestCache;
@property (nonatomic) long long numberOfUtilityAssets;
@property (nonatomic) long long numberOfDefaultAssets;
@property (nonatomic) long long numberOfImprovedAssets;
@property (nonatomic) long long numberOfBetterAssets;
@property (readonly, nonatomic) unsigned long long numberOfAssets;
@property (readonly, nonatomic) long long librarySizeRange;
@property (nonatomic) BOOL keepsExistingAssetCurationScores;
@property (weak, nonatomic) NSObject<OS_dispatch_queue> *graphQueue;
@property (readonly) BOOL isOnGraphQueue;
@property BOOL canWrite;
@property (readonly, nonatomic) NSSet *allMomentUUIDs;
@property (retain, nonatomic) PGMessageProfile *messageProfile;
@property (weak) PGManager *manager;
@property (readonly) BOOL needsRebuild;
@property (readonly) BOOL isEmpty;

+ (BOOL)location:(struct CLLocationCoordinate2D { double x0; double x1; })a0 isCloseToLocation:(struct CLLocationCoordinate2D { double x0; double x1; })a1;
+ (double)topTierAestheticScoreForRatio:(double)a0 inPhotoLibrary:(id)a1;
+ (id)sceneBabyLabels;
+ (id)blacklistSceneBabyLabels;
+ (id)_graphNodePOILabelByPlaceType;
+ (id)_poiLabelForPOIType:(id)a0;
+ (long long)_librarySizeRangeForNumberOfAssets:(unsigned long long)a0;
+ (id)assetPropertySetsForIngest;
+ (id)graphURLForName:(id)a0 parentDirectoryURL:(id)a1;
+ (BOOL)graphExistsWithName:(id)a0 parentDirectoryURL:(id)a1;
+ (id)graphWithVisualString:(id)a0 error:(id *)a1;
+ (id)defaultSpecification;
+ (BOOL)_hasMomentsForPersonIdentifiers:(id)a0 inGraph:(id)a1 photoLibrary:(id)a2;
+ (id)socialGroupPeopleSortDescriptorForSocialGroupNode:(id)a0;
+ (id)parentMeaningLabelForMeaningLabel:(id)a0;
+ (void)traverseParentMeaningsForMeaningLabel:(id)a0 usingBlock:(id /* block */)a1;
+ (id)_meaningLabelTree;
+ (id)_findParentMeaningLabelForMeaningLabel:(id)a0 inTree:(id)a1 currentParent:(id)a2;
+ (void)_traverseMeaningLabelsInTree:(id)a0 usingBlock:(id /* block */)a1;
+ (void)_traverseMeaningLabelsUsingBlock:(id /* block */)a0;
+ (id)matchingBlasklistedSceneLabels;
+ (id)defaultMatchingSortDescriptors;
+ (id)matchingWeightToDictionary;
+ (id)_personClosestToMeBetweenPersonNode:(id)a0 andOtherPersonNode:(id)a1;
+ (id)_closestRelationshipEdgeLabelForPersonNode:(id)a0 andOtherPersonNode:(id)a1;
+ (id)lessMeaningfulMeanings;
+ (id)frequentMeaningLabels;
+ (id)mostSignificantMeaningLabels;
+ (id)stringForMeaning:(unsigned long long)a0;
+ (id)meaningLabelForMeaning:(unsigned long long)a0;
+ (unsigned long long)meaningForMeaningLabel:(id)a0;
+ (id)allMeaningfulMeanings;
+ (id)veryMeaningfulMeanings;
+ (id)stellarMeanings;
+ (id)scenePetLabels;
+ (id)blacklistScenePetLabels;
+ (id)blacklistSceneLabelsForHobbyType:(long long)a0;
+ (id)confidenceThresholdBySceneIdentifierForSceneNames:(id)a0 blacklisted:(BOOL)a1;
+ (id)sceneLabelsForHobbyType:(long long)a0;
+ (id)homeOwnerPersonNodesForMoment:(id)a0;

- (id)_cleanUpMoments:(id)a0;
- (id)seasonNodeForLocalDate:(id)a0;
- (BOOL)saveToURL:(id)a0;
- (id)parents;
- (id)allTripNodes;
- (void)_reportMobility;
- (id)momentNodes;
- (id)insertPet:(id)a0;
- (id)sceneNodes;
- (id)petNodes;
- (BOOL)copyToURL:(id)a0;
- (id)maximalSocialGroupsForPersonIdentifiers:(id)a0;
- (id)bestFittingAreaNodeFromAreaNodes:(id)a0;
- (id)momentNodesSortedByDate;
- (unsigned long long)numberOfMomentNodes;
- (id)allSocialGroupsForPersonIdentifier:(id)a0;
- (id)socialGroupsForPersonIdentifiers:(id)a0;
- (id)_sceneMatchingFromEvent:(id)a0 toEvent:(id)a1 options:(id)a2;
- (id)insertDateNodeHierarchyWithDateComponents:(id)a0;
- (void)enumerateAreaNodesUsingBlock:(id /* block */)a0;
- (id)momentsForMomentNodes:(id)a0 sortChronologically:(BOOL)a1;
- (id)businessNodes;
- (id)socialGroupNodes;
- (id)_commonAreaNodesBetweenAddressNode:(id)a0 andAddressNode:(id)a1;
- (void)addCurationScore:(double)a0 forAsset:(id)a1;
- (void)_registerInsertedMomentNodes:(id)a0 inGraphUpdate:(id)a1;
- (void)enumerateCelebratedHolidayNodesUsingBlock:(id /* block */)a0;
- (id)celebratedHolidayNodes;
- (id)allDatesForEventRule:(id)a0;
- (id)matchEvent:(id)a0 withEvent:(id)a1 options:(id)a2;
- (void)enumerateDateComponentsBetweenLocalStartDate:(id)a0 andLocalEndDate:(id)a1 usingBlock:(id /* block */)a2;
- (id)seasonNodes;
- (id)momentNodesForMoments:(id)a0;
- (id)momentNodesForLocalDate:(id)a0;
- (double)neighborScoreForMomentNode:(id)a0;
- (id)momentNodeForMomentUUID:(id)a0;
- (BOOL)_isMatchingRequiredScenes:(id)a0 withMomentNode:(id)a1;
- (id)_coreEventMatchingFromEvent:(id)a0 toEvent:(id)a1 options:(id)a2;
- (id)insertMePersonNodeForPerson:(id)a0;
- (id)addUniqueHighlightGroupNodeWithProperties:(id)a0 didCreate:(BOOL *)a1;
- (id)insertBaby:(id)a0;
- (double)_scoreForPlaceSubDomain:(unsigned short)a0;
- (id)insertMusicSessionNodeWithLocalStartDate:(id)a0 localEndDate:(id)a1;
- (id)insertAddressNodeWithProjectedPlacemark:(id)a0 atEventLocation:(id)a1 usingImprovedPlacemark:(BOOL)a2;
- (id)insertSceneNodeWithScene:(id)a0 fromEventNode:(id)a1;
- (long long)_uuidForPlacemark:(id)a0 forNodeLabel:(id)a1;
- (id)_propertiesFromIngestHighlight:(id)a0;
- (id)dayHighlightNodesSortedByDate;
- (id)socialGroupsDebugStringIncludingMeNode:(BOOL)a0;
- (id)personNodeForPersonLocalIdentifier:(id)a0;
- (id)_locationNodesOfSupersetsWithLocationNodeLabel:(id)a0;
- (void)writePendingScoresToPhotosDatabase;
- (id)shortTripHighlightTypeNode;
- (void).cxx_destruct;
- (id)_peopleMatchingFromEvent:(id)a0 toEvent:(id)a1 options:(id)a2;
- (id)mainUrbanCityNodes;
- (BOOL)exportMatchMomentEventResults:(id)a0 relatedType:(unsigned long long)a1 focusOnNodes:(id)a2 toFileURL:(id)a3 error:(id *)a4;
- (id)insertROIWithClueCollection:(id)a0 fromMomentNode:(id)a1;
- (id)momentNodesConnectedToNode:(id)a0;
- (void)invalidateMemoryCaches;
- (id)highlightNodeForHighlightUUID:(id)a0;
- (id)_corePlaceMatchingIdsToScoresFromEvent:(id)a0 toEvent:(id)a1 options:(id)a2;
- (void)updateMomentsForHighlightNode:(id)a0 withHighlight:(id)a1;
- (id)socialGroupNodesSortedByWeight;
- (id)celebratedHolidays;
- (id)previousSeasonNodeForSeasonNode:(id)a0;
- (id)momentNodesWithMeaning:(unsigned long long)a0;
- (void)enumerateSocialGroupsWithBlock:(id /* block */)a0;
- (id)insertSpecialPOIAmusementParkNodeFromMomentNode:(id)a0;
- (id)defaultHighlightNodes;
- (id)_timeMatchingFromEvent:(id)a0 toEvent:(id)a1 options:(id)a2;
- (id)coworkers;
- (id)_locationMatchingIdsToScoresFromEvent:(id)a0 options:(id)a1;
- (id)_coreLocationMatchingFromEvent:(id)a0 toEvent:(id)a1 options:(id)a2;
- (id)_placeMatchingFromEvent:(id)a0 toEvent:(id)a1 options:(id)a2;
- (id)familyMembers;
- (id)bestSocialGroupNodes;
- (id)friends;
- (id)dateNodesForMonth:(long long)a0;
- (void)uncacheMomentNodesForMomentUUIDs:(id)a0;
- (unsigned long long)_peopleCountWithoutMe:(id)a0 focusOnNodes:(id)a1;
- (id)nodesForMomentsInHighlight:(id)a0;
- (id)_eventMatchingIdsToScoresFromEvent:(id)a0 options:(id)a1;
- (id)meaningsFromMeaningfulEvent:(id)a0;
- (void)_insertRoutineInfo;
- (id)_momentNodeForAssetCollection:(id)a0 error:(id *)a1;
- (void)insertAssetCurationScoreInLibraryForFeeder:(id)a0 progressBlock:(id /* block */)a1;
- (id)connectPublicEventNode:(id)a0 withBusinessNode:(id)a1;
- (id)preciseMeaningNodeForMeaningLabel:(id)a0 meaningfulEvent:(id)a1;
- (void)updatePersonNode:(id)a0 withPerson:(id)a1 forPropertyNames:(id)a2;
- (id)_timeMatchingIdsToScoresFromEvent:(id)a0 options:(id)a1;
- (id)dateNodeNameWithLocalDate:(id)a0;
- (void)enumerateBabyNodesUsingBlock:(id /* block */)a0;
- (id)bestMeaningLabelForMeaningfulEvent:(id)a0;
- (void)insertHighlightDaysWithGraphUpdate:(id)a0 progressBlock:(id /* block */)a1;
- (double)_calculateScoreWithNeighborMomentNodes:(id)a0 referenceDate:(id)a1 referenceDistance:(double)a2 andDistanceBlock:(id /* block */)a3;
- (id)_validLocationNodeForLocationNode:(id)a0 withLocationMask:(unsigned long long)a1;
- (void)addMeaningToMeaningfulEventNode:(id)a0 meaningLabel:(id)a1 meaningIsReliable:(BOOL)a2;
- (id)weekends;
- (BOOL)_enumerateMomentNodesForAssetCollection:(id)a0 paddingTime:(double)a1 error:(id *)a2 enumerationBlock:(id /* block */)a3;
- (void)cacheMomentNode:(id)a0 forMomentUUID:(id)a1 checkUnicity:(BOOL)a2;
- (void)enumerateMeaningsFromMeaningfulEvent:(id)a0 usingBlock:(id /* block */)a1;
- (void)performBatchUpdatesWithGraphUpdate:(id)a0 withRecipe:(id)a1 progressBlock:(id /* block */)a2;
- (void)saveNumberOfAssetsToInfoNode;
- (id)_mostVisitedLocationNodeForLocationNodes:(id)a0;
- (void)removeAllMeaningNodes;
- (id)momentNodesInSameCityAsMomentNodes:(id)a0;
- (id)_peopleMatchingIdsToResultsFromEvent:(id)a0 options:(id)a1;
- (id)insertLocationMobilityNodeWithMobility:(id)a0 fromEventNode:(id)a1 edgeWeight:(float)a2;
- (id)insertLocationMobilityNodeWithClueCollection:(id)a0 fromMomentNode:(id)a1;
- (BOOL)isCelebratingHolidayEventInGeneralForEventRule:(id)a0;
- (void)cacheHighlightNode:(id)a0 forHighlightUUID:(id)a1 checkUnicity:(BOOL)a2;
- (BOOL)_shouldUpdateCurationScore:(double)a0 withNewCurationScore:(double)a1;
- (BOOL)hasSocialGroups;
- (void)cacheNodesWithProgressBlock:(id /* block */)a0;
- (id)_eventMatchingFromEvent:(id)a0 toEvent:(id)a1 options:(id)a2;
- (id)insertPOIWithFeeder:(id)a0 fromMomentNode:(id)a1 isNearHomeOrWork:(BOOL)a2;
- (id)insertPublicEvent:(id)a0 fromEventNode:(id)a1;
- (id)insertPartOfDayNodeWithPartOfDayName:(id)a0 fromEventNode:(id)a1 edgeWeight:(float)a2;
- (void)invalidateSupersetCaches;
- (double)_locationScoreWithNeighborMomentNodes:(id)a0 referenceDate:(id)a1 andLocationCoordinate:(const struct CLLocationCoordinate2D { double x0; double x1; } *)a2;
- (void)insertMomentsWithGraphUpdate:(id)a0 progressBlock:(id /* block */)a1;
- (void)uncacheMomentNodeForMomentUUID:(id)a0 checkExistence:(BOOL)a1;
- (id)insertLocationHierarchyWithClueCollection:(id)a0 fromMomentNode:(id)a1;
- (id)celebratingMomentNodesForDateNode:(id)a0 eventRule:(id)a1;
- (void)prepareForRebuild;
- (id)highlightGroupNodeForUUID:(id)a0;
- (void)updateHighlightsForHighlightDayGroupNode:(id)a0 withHighlightDayGroup:(id)a1;
- (id)sortedSocialGroupNodeForMomentNodeIdentifiers:(id)a0;
- (id)_userLocales;
- (void)computeAndStoreTopTierAestheticScore;
- (id)_placeMatchingIdsToScoresFromEvent:(id)a0 options:(id)a1;
- (id)yearNodeForYear:(long long)a0;
- (id)insertContactSuggestion:(id)a0 forPersonNode:(id)a1 confidence:(double)a2 edgeProperties:(id)a3;
- (unsigned long long)numberOfSceneNodes;
- (BOOL)_isInterestingForAnyNodeFromMomentNodes:(id)a0;
- (id)_firstLocationNodeFromAddressNode:(id)a0 inLocationNodes:(id)a1;
- (id)sceneNodesForSceneNames:(id)a0;
- (void)_cacheEventRule:(id)a0 isCelebrating:(BOOL)a1;
- (id)addMomentNodeWithProperties:(id)a0;
- (void)enumerateDayHighlightNodesWithBlock:(id /* block */)a0;
- (void)enumeratePetNodesUsingBlock:(id /* block */)a0;
- (id)_strictMomentNodeLookupForAssetCollection:(id)a0 error:(id *)a1;
- (void)removeAllPublicEventNodes;
- (void)enumerateHighlightGroupNodesWithBlock:(id /* block */)a0;
- (id)inferredMeNode;
- (void)_enumerateSocialGroupsIncludingMeNode:(BOOL)a0 withValidGroupsBlock:(id /* block */)a1 invalidGroupsBlock:(id /* block */)a2 averageWeight:(out float *)a3;
- (id)localDatesForMomentNode:(id)a0;
- (unsigned long long)numberOfSocialGroupNodes;
- (id)_sceneMatchingIdsToScoresFromEvent:(id)a0 options:(id)a1;
- (void)_writeCurationScoresToPhotosDatabase:(id)a0;
- (void)enumerateMeaningfulEventsWithMeaning:(unsigned long long)a0 usingBlock:(id /* block */)a1;
- (void)_deleteMomentsWithGraphUpdate:(id)a0 progressBlock:(id /* block */)a1;
- (id)_peopleWithoutMe:(id)a0 focusOnNodes:(id)a1;
- (id)insertROINodeWithPlace:(id)a0 fromEventNode:(id)a1;
- (id)insertMusicTrackWithTrackTitle:(id)a0 durationInSeconds:(double)a1;
- (id)insertMusicAlbumNodeWithAlbumTitle:(id)a0;
- (id)insertTimeNodesWithDateComponents:(id)a0 fromEventNode:(id)a1;
- (id)nodesForHighlightsInHighlightDayGroup:(id)a0;
- (void)_enumerateMeaningfulEventsWithMeaningLabel:(id)a0 visitedMeaningfulEvents:(id)a1 usingBlock:(id /* block */)a2;
- (void)performProcessingSteps:(id)a0 withGraphUpdate:(id)a1 progressBlock:(id /* block */)a2;
- (id)favoritedPersonNodesIncludingMe:(BOOL)a0;
- (id)momentsResultForMomentNodes:(id)a0 sortChronologically:(BOOL)a1;
- (id)hobbiesForType:(long long)a0;
- (id)interestingAreaNodes;
- (void)enumerateBusinessNodesUsingBlock:(id /* block */)a0;
- (id)aggregationNodes;
- (id)_locationMatchingFromEvent:(id)a0 toEvent:(id)a1 options:(id)a2;
- (id)preciseMeaningLabelForMeaningLabel:(id)a0 meaningfulEvent:(id)a1;
- (id)_infoNode;
- (id)longTripNodes;
- (id)monthNodeForMonth:(long long)a0;
- (BOOL)eventIsVeryMeaningful:(id)a0;
- (id)insertMusicGenreNodeWithGenreName:(id)a0;
- (void)addParentMeaningHierarchyForMeaningNode:(id)a0;
- (id)_previousSeasonForSeason:(id)a0;
- (id)highlightNodeForHighlight:(id)a0;
- (id)insertPersonNodeForPerson:(id)a0 fromEventNode:(id)a1 numberOfAssetsWithPerson:(unsigned long long)a2 edgeWeight:(float)a3;
- (id)staticGraphSchema;
- (double)_densityScoreWithNeighborMomentNodes:(id)a0 referenceDate:(id)a1 andNumberOfAssets:(unsigned long long)a2;
- (id)_neighborsFromMomentNode:(id)a0 count:(unsigned long long)a1 locationRequired:(BOOL)a2 minDayDuration:(unsigned long long)a3 maxDayDuration:(unsigned long long)a4;
- (BOOL)isPairSocialGroup:(id)a0;
- (id)children;
- (id)meaningfulEvents;
- (void)performChangeForGraphUpdate:(id)a0 progressBlock:(id /* block */)a1;
- (id)dateNodesForWeekOfYear:(long long)a0;
- (void)_checkCanWrite;
- (id)_momentNodesForDateComponents:(id)a0 error:(id *)a1;
- (id)dayHighlightNodes;
- (id)supersetsIntersectingMomentNodes:(id)a0;
- (void)insertAreasOfInterestForProjectedPlacemark:(id)a0 fromAddressNode:(id)a1;
- (id)_eventsFromEvents:(id)a0 withTargetDomain:(unsigned short)a1;
- (void)_reportBusinessItems;
- (void)deletePersonsWithGraphUpdate:(id)a0 progressBlock:(id /* block */)a1;
- (id)insertPartOfDayNodesWithClueCollection:(id)a0 fromMomentNode:(id)a1;
- (id)_coreSceneMatchingFromEvent:(id)a0 toEvent:(id)a1 options:(id)a2;
- (void)reportMetricsLogs;
- (id)momentNodesForMomentIdentifiers:(id)a0;
- (id)_socialGroupNodeForPersonNodes:(id)a0 searchWithTolerance:(BOOL)a1;
- (id)cachedMomentNodeForMomentUUID:(id)a0;
- (void)unloadMessageProfile;
- (void)uncacheHighlightNodeForHighlightUUID:(id)a0 checkExistence:(BOOL)a1;
- (void)_checkCanRead;
- (id)insertHomeWorkNodeForPerson:(id)a0 personNode:(id)a1 fromAddressNodes:(id)a2;
- (id)momentNodeForUUID:(id)a0;
- (void)insertHighlightDayGroupsWithGraphUpdate:(id)a0 progressBlock:(id /* block */)a1;
- (id)initWithURL:(id)a0 persistenceOptions:(long long)a1 progressBlock:(id /* block */)a2;
- (id)onGoingTripNodes;
- (id)_dayOfWeekNameForDate:(id)a0;
- (id)_closestLocationNodeFromAddressNode:(id)a0 toAddressNode:(id)a1;
- (id)allHobbies;
- (id)insertPersonNodeForPerson:(id)a0;
- (id)insertHighlightNodeWithHighlight:(id)a0;
- (id)eventNodeForAssetCollection:(id)a0;
- (id)insertDateNodesWithClueCollection:(id)a0 fromMomentNode:(id)a1;
- (id)personNodesForPersonIdentifiers:(id)a0;
- (id)relevantLocationNodesForMomentNodes:(id)a0;
- (id)meaningfulEventNodeForUUID:(id)a0;
- (id)closestMomentNodeForLocalDate:(id)a0;
- (void)enumeratePersonNodesIncludingMe:(BOOL)a0 withBlock:(id /* block */)a1;
- (id)cachedHighlightNodeForHighlightUUID:(id)a0;
- (BOOL)_allRequiredRulesOfEventRule:(id)a0 applyToLocalDate:(id)a1 andAnyNodeFromMomentNodes:(id)a2;
- (id)dayOfWeekNodeForDayOfWeek:(long long)a0;
- (id)commonLocationNodeForRelevantLocationNodes:(id)a0 locationMask:(unsigned long long)a1;
- (void)enumerateMusicSessionNodesUsingBlock:(id /* block */)a0;
- (BOOL)isBestPairSocialGroup:(id)a0;
- (id)matchEvent:(id)a0 options:(id)a1;
- (void)uncacheHighlightNodesForHighlightUUIDs:(id)a0;
- (id)_fuzzyMomentLookupForMomentNode:(id)a0 error:(id *)a1;
- (void)enumeratePeopleClustersIncludingMeNode:(BOOL)a0 withBlock:(id /* block */)a1;
- (id)insertHighlightGroupNodeWithHighlight:(id)a0;
- (BOOL)supersetsIntersectMomentNodes:(id)a0;
- (id)babyNodes;
- (id)meaningfulMomentNodesSortedByDate;
- (void)addRelationshipEdgesBetweenPersonNode:(id)a0 andPersonNode:(id)a1 forRelationship:(unsigned long long)a2 confidence:(float)a3 properties:(id)a4;
- (id)dateNodeForLocalDate:(id)a0;
- (id)insertPOINodeWithPlace:(id)a0 fromEventNode:(id)a1 hasInsertedSpecialPOIAmusementParkNode:(BOOL)a2;
- (id)supersetsForLocalDateInterval:(id)a0;
- (id)addUniqueSceneNodeWithSceneIdentifier:(id)a0 relevance:(double)a1 didCreate:(BOOL *)a2;
- (id)insertDateNodesFromLocalStartDate:(id)a0 toLocalEndDate:(id)a1 fromEventNode:(id)a2;
- (double)libraryDuration;
- (id)matchPersonNodes:(id)a0 sortDescriptors:(id)a1;
- (id)insertSceneNodesWithClueCollection:(id)a0 fromMomentNode:(id)a1;
- (id)_personNodeIntersectingSocialGroups:(id)a0;
- (id)dayOfWeekNodes;
- (double)topTierAestheticScoreForTripKeyAsset;
- (double)_relationshipScoreForPersonNode:(id)a0;
- (id)_requiredSceneNodesToMatchForHolidayEventRule:(id)a0;
- (id)searchNodesForAsset:(id)a0 inMoment:(id)a1;
- (id)momentNodeForMoment:(id)a0;
- (id)_insertMomentNodeForClueCollection:(id)a0 feeder:(id)a1 insertedAndUpdatedPersonNodes:(id *)a2 progressBlock:(id /* block */)a3;
- (id)personLocalIdentifiersBySocialGroupUUIDWithSocialGroupNodes:(id)a0 shouldIncludeMeNode:(BOOL)a1;
- (id)supersetsForLocalDate:(id)a0;
- (id)insertAddressNodeWithPlacemark:(id)a0 location:(id)a1 weight:(float)a2 duringDateInterval:(id)a3 fromEventNode:(id)a4;
- (id)personNodesIncludingMe:(BOOL)a0;
- (id)musicGenreDistributionUsingTaggedGenres:(BOOL)a0;
- (BOOL)eventIsStellar:(id)a0;
- (id)insertMomentNodeForClueCollection:(id)a0 feeder:(id)a1 progressBlock:(id /* block */)a2;
- (id)_dateIntervalForMomentNodes:(id)a0;
- (void)enumerateMomentNodesWithMeaning:(unsigned long long)a0 usingBlock:(id /* block */)a1;
- (id)dateNodesForLocalDateInterval:(id)a0;
- (id)_createZeroKeywordMappingByMeaningLabel;
- (void)insertHighlightsWithGraphUpdate:(id)a0 progressBlock:(id /* block */)a1;
- (unsigned long long)numberOfPersonNodesIncludingMe:(BOOL)a0;
- (id)commonSocialGroupNodesForPersonNodes:(id)a0;
- (id)insertDateNodesFromEventNode:(id)a0;
- (id)momentNodesOverlappingLocalDateInterval:(id)a0;
- (id)dayNodeForDay:(long long)a0;
- (void)_reportLibrary;
- (id)yearNodeIdentifiersForMomentNodeIdentifiers:(id)a0;
- (id)dateNodesIgnoringYearForLocalDate:(id)a0;
- (double)routineScoreForLocalDate:(id)a0 latitude:(double)a1 longitude:(double)a2 andPeopleUUIDs:(id)a3;
- (id)meNode;
- (id)_feederForInsertingAssetCollection:(id)a0;
- (void)addInteractionScore:(float)a0 forAsset:(id)a1;
- (id)_strictMomentLookupForMomentNode:(id)a0;
- (id)momentNodeIdentifiersForYearNodeIdentifiers:(id)a0;
- (id)dateNodesForYear:(long long)a0;
- (id)allDatesForEventRule:(id)a0 yearRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (BOOL)_isMatchingRequiredScenes:(id)a0 withMomentNodes:(id)a1;
- (void)enumerateSceneNodesWithBlock:(id /* block */)a0;
- (id)defaultHighlightTypeNode;
- (id)partners;
- (id)trips;
- (id)socialGroupsIdentifiersFromSocialGroupNodes:(id)a0 shouldIncludeMeNode:(BOOL)a1;
- (id)shortTripNodes;
- (id)longTripHighlightTypeNode;
- (double)topTierAestheticScore;
- (id)sceneNodeForSceneName:(id)a0;
- (id)addDayHighlightNodeWithProperties:(id)a0;
- (id)highlightGroupNodes;
- (void)invalidateProcessingCaches;
- (void)updateHighlightNode:(id)a0 withHighlight:(id)a1;
- (unsigned long long)_countOfDistinctSocialGroups:(id)a0;
- (id)momentNodeForAsset:(id)a0;
- (id)largeFrequentLocationNodes;
- (id)relevantAddressNodesForMomentNodes:(id)a0;
- (id)_peopleUUIDsForMomentNode:(id)a0;
- (void)_writeInteractionScoresToPhotosDatabase:(id)a0;
- (id)socialGroupNodeForPersonNodes:(id)a0;
- (id)initWithSpecification:(id)a0;
- (id)insertPresentEdgeFromPersonNode:(id)a0 toEventNode:(id)a1 numberOfAssetsWithPerson:(unsigned long long)a2 edgeWeight:(float)a3;
- (BOOL)_locationNodesRepresentSameCity:(id)a0;
- (void)_reportDisambiguatedLocations;
- (id)momentNodesIgnoringYearForLocalDate:(id)a0;
- (id)aggregationHighlightTypeNode;
- (void)enumeratePublicEventNodesUsingBlock:(id /* block */)a0;
- (double)_distanceForLocationLabel:(id)a0;
- (id)momentNodesSortedByDateFromMomentNodes:(id)a0;
- (unsigned long long)_cluePeopleForRelationships:(id)a0;
- (id)onGoingTripHighlightTypeNode;
- (id)_commonAreaNodesBetweenAddressAreaNodes:(id)a0 andAddressNode:(id)a1;
- (id)allTimeYearsNodes;
- (id)_supersetsForLocalDateInterval:(id)a0 intersectingMomentNodes:(id)a1 earlyStop:(BOOL)a2;
- (void)deleteHighlightsWithGraphUpdate:(id)a0 progressBlock:(id /* block */)a1;
- (id)highlightGroupNodesSortedByDate;
- (void)enumeratePeopleClustersWithLinkage:(unsigned long long)a0 threshold:(double)a1 includingMeNode:(BOOL)a2 withBlock:(id /* block */)a3;
- (id)commonSocialGroupNodesForPersonNodes:(id)a0 withThreshold:(double)a1;
- (double)_peopleScoreWithNeighborMomentNodes:(id)a0 referenceDate:(id)a1 andPeopleUUIDs:(id)a2;
- (id)_fuzzyMomentNodeLookupForAssetCollection:(id)a0 error:(id *)a1;
- (void)insertLocationHierarchyWithProjectedPlacemark:(id)a0 fromAddressNode:(id)a1;
- (double)neighborScoreForLocalDate:(id)a0;
- (id)densestCloseLocationNodeFromLocationNode:(id)a0 withDateInterval:(id)a1 locationMask:(unsigned long long)a2;
- (id)insertMomentNodeForMoment:(id)a0;
- (id)interestingCityNodes;
- (id)momentForMomentNode:(id)a0;
- (void)invalidateIsCelebratingInGeneralCache;
- (id)highlightForHighlightNode:(id)a0;
- (void)_enumerateMomentForMomentNode:(id)a0 paddingTime:(double)a1 enumerationBlock:(id /* block */)a2;
- (id)_momentNodesFromPersonNodes:(id)a0;
- (id)nodeLabelForHighlightType:(unsigned short)a0;
- (id)assetCollectionsForPersonNodes:(id)a0;
- (id)insertPeopleWithClueCollection:(id)a0 fromMomentNode:(id)a1 addressNodes:(id)a2 isNearPeopleAddress:(BOOL *)a3;
- (id)momentNodesForPersonNodes:(id)a0;
- (id)_commonNodeForLocationNode:(id)a0 andLocationNode:(id)a1;
- (long long)libraryAge;
- (id)dateNodesForWeekOfMonth:(long long)a0;
- (void)addRelationshipEdgesBetweenPersonNode:(id)a0 andSocialGroupNode:(id)a1 forRelationship:(unsigned long long)a2 confidence:(float)a3 properties:(id)a4;
- (void)enumerateMomentNodesWithBlock:(id /* block */)a0;
- (id)insertBusiness:(id)a0 fromEventNode:(id)a1;
- (void)performPostprocessingWithGraphUpdate:(id)a0 withRecipe:(id)a1 progressBlock:(id /* block */)a2;
- (id)_peopleMatchingResultFromEvent:(id)a0 matchedEvent:(id)a1 presentPeopleCountForEvent:(unsigned long long)a2 presentPeopleCountForMatchedEvent:(unsigned long long)a3 commonPeople:(id)a4 relationshipScoreCache:(id)a5 needsKeywords:(BOOL)a6;
- (struct CLLocationCoordinate2D { double x0; double x1; })_approximateCoordinateForLocationNode:(id)a0;
- (double)_calculateScoreWithNeighborMomentNodes:(id)a0 referenceDate:(id)a1 andDistanceBlock:(id /* block */)a2;
- (void)performPreprocessingWithGraphUpdate:(id)a0 withRecipe:(id)a1 progressBlock:(id /* block */)a2;

@end
