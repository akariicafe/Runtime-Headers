@class UIVisualEffectView, PMEditorRootViewController, PMiOSTimeLabelView, PMiOSSliderViewController, UIBarButtonItem, UILabel, UIScreenEdgePanGestureRecognizer, NSString, NSError, PMMovieProvider, PMTTRLoadingViewController, NSArray, PMiOSProgressViewController, UIButton, PMiOSScrubberViewController, UIView, PMMovieContainerViewController, VEKProduction, NSLayoutConstraint, PMSaveProvider, UITapGestureRecognizer;

@interface PMiOSMainViewController : MiroPlayerViewController <MiroEditorViewControllerDelegate, PMMovieProviderDelegate, PMEditProviderDelegate, PMMovieContainerViewControllerDelegate, UIPopoverPresentationControllerDelegate, PLDismissableViewController, MiroPreventDismissalDelegate, PMScrubberProviderActionDelegate, PMActivityViewControllerDelegate, PMAddToFavortiesActivityDelegate> {
    BOOL _notifiedOfBackgroundDuringExport;
}

@property (retain, nonatomic) PMMovieProvider *movieProvider;
@property (retain, nonatomic) PMSaveProvider *saveProvider;
@property BOOL shouldPlayOnAppearance;
@property BOOL sliderIsScrolling;
@property unsigned long long pendingActionState;
@property (nonatomic) BOOL controlVisibility;
@property (retain, nonatomic) UIScreenEdgePanGestureRecognizer *screenEdgePanLeftGestureRecognizer;
@property (retain, nonatomic) UITapGestureRecognizer *debugTapGestureRecognizer;
@property (retain, nonatomic) NSArray *durationDisplayNames;
@property (retain, nonatomic) PMiOSProgressViewController *progressViewController;
@property (retain, nonatomic) UIView *editorPresentationSnapshot;
@property (retain, nonatomic) UIView *offscreenPresentationSnapshot;
@property (retain, nonatomic) UIButton *loadErrorButton;
@property (retain, nonatomic) NSError *downloadError;
@property (nonatomic) BOOL downloadInProgress;
@property (retain, nonatomic) UIView *bottomBar;
@property (retain, nonatomic) NSLayoutConstraint *toolbarHeightConstraint;
@property (retain, nonatomic) NSLayoutConstraint *toolbarBottomConstraint;
@property (retain, nonatomic) NSLayoutConstraint *toolbarBlurBottomConstraint;
@property (retain, nonatomic) PMiOSTimeLabelView *playbackTimeView;
@property (retain, nonatomic) UIVisualEffectView *bottomBarBackgroundView;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } timeAtTeardown;
@property (retain, nonatomic) UITapGestureRecognizer *airplayVisibilityTapGestureRecognizer;
@property (readonly, weak, nonatomic) UIBarButtonItem *playPauseBBItem;
@property (readonly, weak, nonatomic) UIBarButtonItem *flexSpaceBBItem;
@property (readonly, weak, nonatomic) UIBarButtonItem *activityBBItem;
@property (readonly, weak, nonatomic) UIBarButtonItem *editBBItem;
@property (readonly, weak, nonatomic) UIBarButtonItem *navBarShareBBItem;
@property (retain, nonatomic) UIBarButtonItem *shareBBItem;
@property (retain, nonatomic) UILabel *titleLabel;
@property (nonatomic) long long initialMood;
@property (nonatomic) double initialDuration;
@property (nonatomic) long long initialNumberOfAssetsInMovie;
@property (nonatomic) BOOL askedToCreateMemory;
@property (nonatomic) BOOL isFavorite;
@property (retain, nonatomic) PMTTRLoadingViewController *ttrLoadingView;
@property (retain, nonatomic) PMMovieContainerViewController *movieContainerViewController;
@property (retain, nonatomic) PMiOSSliderViewController *moodSlider;
@property (retain, nonatomic) PMiOSSliderViewController *durationSlider;
@property (retain, nonatomic) PMiOSScrubberViewController *scrubber;
@property (retain, nonatomic) PMEditorRootViewController *memoryEditor;
@property (retain, nonatomic) VEKProduction *production;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL preventDismissalByPhotosIfPossible;

+ (void)load;
+ (void)seedAspectGlobalsWithDeviceAspect;

- (BOOL)prefersHomeIndicatorAutoHidden;
- (void)_applicationWillResignActive:(id)a0;
- (void)_applicationDidBecomeActive:(id)a0;
- (BOOL)gestureRecognizer:(id)a0 shouldReceiveTouch:(id)a1;
- (void)back:(id)a0;
- (void).cxx_destruct;
- (void)willTransitionToTraitCollection:(id)a0 withTransitionCoordinator:(id)a1;
- (void)_updateControls;
- (void)dealloc;
- (void)share:(id)a0;
- (void)viewWillDisappear:(BOOL)a0;
- (struct CGSize { double x0; double x1; })sizeForChildContentContainer:(id)a0 withParentContainerSize:(struct CGSize { double x0; double x1; })a1;
- (BOOL)prepareForDismissingForced:(BOOL)a0;
- (void)viewWillAppear:(BOOL)a0;
- (void)playerDidPlayToEnd;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0 withTransitionCoordinator:(id)a1;
- (void)_cancelProgress:(id)a0;
- (void)viewDidAppear:(BOOL)a0;
- (void)traitCollectionDidChange:(id)a0;
- (unsigned long long)ph_preferredChrome;
- (long long)ph_preferredChromeAnimation;
- (BOOL)ph_isTransitionOverlayView:(id)a0;
- (void)ph_loadTransitionSourcePlaceholderViewUsingFactory:(id /* block */)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })ph_rectOfInterestForTransitionInCoordinateSpace:(id)a0 withInfo:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })ph_rectOfInterestForTransitionInCoordinateSpace:(id)a0;
- (void)viewDidLoad;
- (void)_applicationWillTerminate:(id)a0;
- (void)editProvider:(id)a0 didChange:(BOOL)a1;
- (id)initWithProduction:(id)a0;
- (void)playerProgressDidChange:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (void)toggleControlVisibility;
- (void)airPlayDidStart;
- (void)airPlayDidEnd;
- (void)playerRateChanged;
- (void)playerReadyForDisplay;
- (id)_snapshotPlayer;
- (id)_snapshotPlayerWithAspect:(double)a0;
- (void)didShareActivity;
- (void)playerDidDoContentChange;
- (void)editorViewControllerDidFinishDismissing:(id)a0;
- (void)editorViewControllerDidCancel:(id)a0;
- (void)editorViewController:(id)a0 didEditProduction:(id)a1 withResult:(id)a2;
- (void)editProviderWillBeginChanging;
- (void)didRefreshPlayerItem:(id)a0 downloadError:(id)a1;
- (struct CGSize { double x0; double x1; })naturalSizeForPlayback;
- (void)resultWasUpdated:(id)a0;
- (void)progressDidChange:(double)a0 description:(id)a1 stageDescription:(id)a2;
- (void)playerWillRefreshMovie;
- (void)playerNotReadyForDisplay;
- (void)teardownMovieController;
- (void)playPause:(id)a0;
- (void)editSelector:(id)a0;
- (void)_atexitUninitialize;
- (void)rebuildToolbarsToTraitCollection:(id)a0;
- (void)_setupBottomToolbar;
- (void)debugPrefsStart:(id)a0;
- (void)_exportWillBegin:(id)a0;
- (void)_reEnableToolbar:(id)a0;
- (void)_exportWasInterruptedByBackgrounding:(id)a0;
- (void)_atexitInitialize;
- (void)_mediaServicesReset:(id)a0;
- (void)_autoEditOnLoad;
- (void)_clearOffscreenPresentationSnapshot;
- (void)swipeBack:(id)a0;
- (void)_launchAutoEditDebugView:(id)a0;
- (void)dismissAllModalViewControllers;
- (void)downloadErrorButtonTapped:(id)a0;
- (void)takeOwnershipOfMovieContainerViewController;
- (void)_clearEditorPresentationSnapshot;
- (void)updateDownloadErrorButton;
- (void)_takeAndDisplayOffscreenPresentationSnapshot;
- (void)removeLoadErrorButton;
- (void)processPendingActionState;
- (void)_updateTitleForTraitCollection:(id)a0;
- (BOOL)_deviceIsRunningInternalOS;
- (void)rebuildToolbarsToTraitCollection:(id)a0 withPlayRate:(float)a1;
- (id)playPauseBBItemWithRate:(float)a0;
- (void)_memoryEditorWithCompletion:(id /* block */)a0;
- (void)_takeAndDisplayEditorPresentationSnapshot;
- (void)_updateDurationSlider;
- (void)_updateMoodSlider;
- (double)sliderHeightForTraitCollection:(id)a0;
- (id)_addHorizontalDividerToSuperView:(id)a0 constrainedToYAxisAnchor:(id)a1;
- (void)setControlVisibility:(BOOL)a0 traitCollection:(id)a1;
- (BOOL)collectionIsAMemory:(id)a0;
- (id)memoryProductionFromProduction:(id)a0 andResult:(id)a1;
- (void)_resetAudioSession;
- (void)gentlyRefreshPlayerIfNeccesary;
- (void)scrubberTappedWithPlayState:(BOOL)a0 time:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
- (void)scrubberScrolledToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 completionHandler:(id /* block */)a1;
- (void)addToFavorites;
- (void)removeFromFavorites;
- (void)testMemoryEditorFor:(id)a0 withCompletion:(id /* block */)a1;
- (void)dismissEditor;
- (void)_movePlayerToBeginning;

@end
