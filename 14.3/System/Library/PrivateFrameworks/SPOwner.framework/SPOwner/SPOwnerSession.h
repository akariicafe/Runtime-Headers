@class NSDate, NSString, NSSet, NSOperationQueue, NSDictionary, NSMutableDictionary, FMXPCSession, NSObject, FMXPCServiceDescription;
@protocol SPOwnerSessionXPCProtocol, OS_dispatch_queue, OS_dispatch_source;

@interface SPOwnerSession : NSObject <SPPersistentConnectionProtocol, SPTrackingAvoidanceServiceProtocol, SPTagSeparationProtocol, SPOwnerSessionPrivateProtocol>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) FMXPCServiceDescription *serviceDescription;
@property (retain, nonatomic) FMXPCSession *session;
@property (retain, nonatomic) id<SPOwnerSessionXPCProtocol> proxy;
@property (retain, nonatomic) id<SPOwnerSessionXPCProtocol> userAgentProxy;
@property (retain, nonatomic) NSSet *allBeaconsCache;
@property (retain, nonatomic) NSSet *clientObservedBeacons;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) NSOperationQueue *notificationQueue;
@property (weak, nonatomic) id beaconsChangedNotificationToken;
@property (weak, nonatomic) id tagSeparationBeaconsChangedNotificationToken;
@property (weak, nonatomic) id persistentConnectionBeaconsChangedNotificationToken;
@property (weak, nonatomic) id beaconEstimatedLocationChangedNotificationToken;
@property (retain, nonatomic) NSDictionary *locationCache;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *locationFetchDispatchTimer;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *connectionExpiryDispatchTimer;
@property (copy, nonatomic) NSDate *fetchLimit;
@property (retain, nonatomic) NSMutableDictionary *batteryStatusCache;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *registerIntentDispatchTimer;
@property (copy, nonatomic) NSSet *locationSources;
@property (copy, nonatomic) id /* block */ beaconsChangedBlock;
@property (copy, nonatomic) id /* block */ beaconAddedBlock;
@property (copy, nonatomic) id /* block */ beaconRemovedBlock;
@property (copy, nonatomic) id /* block */ latestLocationsUpdatedBlock;
@property (readonly, copy, nonatomic) NSSet *allBeacons;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)stopRefreshingPersistentConnection;
- (void)playUnauthorizedSoundOnBeaconByUUID:(id)a0 completion:(id /* block */)a1;
- (void)updateBatteryStatus:(unsigned char)a0 beaconUUID:(id)a1 completion:(id /* block */)a2;
- (id)executeCommand:(id)a0;
- (oneway void)beaconForUUID:(id)a0 completion:(id /* block */)a1;
- (id)init;
- (void)isUTAppAlertDisabled:(id /* block */)a0;
- (void)updateAllBeacons;
- (void).cxx_destruct;
- (void)setConnectionExpiryDispatchTimerWithInterval:(double)a0;
- (void)acceptUTForBeaconUUID:(id)a0;
- (void)beaconsToMaintainPersistentConnection:(id /* block */)a0;
- (void)beaconStoreStatusWithCompletion:(id /* block */)a0;
- (id)remoteInterface;
- (void)updateAllBeaconLocations;
- (void)didWithdrawUnauthorizedTrackingWithCompletion:(id)a0 completion:(id /* block */)a1;
- (void)tagSeparationStateChanged:(id)a0 beaconUUID:(id)a1 completion:(id /* block */)a2;
- (void)dealloc;
- (void)removeBeacon:(id)a0 completion:(id /* block */)a1;
- (void)connectionExpiryTimerFired;
- (oneway void)forceKeySyncForBeaconUUID:(id)a0 lastObservationDate:(id)a1 lastObservationIndex:(unsigned long long)a2 completion:(id /* block */)a3;
- (void)ignoreBeaconByUUID:(id)a0 until:(unsigned long long)a1;
- (void)unknownBeaconsForUUIDs:(id)a0 completion:(id /* block */)a1;
- (void)unacceptedBeaconsWithCompletion:(id /* block */)a0;
- (void)executeCommand:(id)a0 completion:(id /* block */)a1;
- (void)invalidateRegisterIntentDispatchTimer;
- (void)shareBeacon:(id)a0 handles:(id)a1 expiration:(id)a2 completion:(id /* block */)a3;
- (id)executeUTPlaySoundCommand:(id)a0;
- (oneway void)fakeClassicPairingWithMACAddress:(id)a0 completion:(id /* block */)a1;
- (void)didDetectUnauthorizedTrackingWithCompletion:(id)a0 completion:(id /* block */)a1;
- (void)updateBeaconObservations:(id)a0 completion:(id /* block */)a1;
- (id)beaconsToLeash;
- (void)locationFetchTimerFired;
- (void)rawSearchResultsForBeacon:(id)a0 dateInterval:(id)a1 completion:(id /* block */)a2;
- (oneway void)forceUpdateKeyAlignmentRecordForUUID:(id)a0 completion:(id /* block */)a1;
- (void)locationsForBeacons:(id)a0 completion:(id /* block */)a1;
- (void)unauthorizedTrackingTypeWithCompletion:(id)a0 completion:(id /* block */)a1;
- (void)startRefreshing;
- (void)setLocationFetchDispatchTimerWithInterval:(double)a0;
- (void)_invalidate;
- (void)sendRegisterIntentWithCompletion:(id /* block */)a0;
- (void)updateConnectionExpiryDispatchTimerWithBeacons:(id)a0;
- (void)allBeaconsWithCompletion:(id /* block */)a0;
- (void)startRefreshingPersistentConnectionWithBlock:(id /* block */)a0;
- (oneway void)forceDistributeKeysWithCompletion:(id /* block */)a0;
- (void)setRegisterIntentDispatchTimerWithInterval:(double)a0;
- (void)ignoringUnauthorizedTrackingWithCompletion:(id)a0 completion:(id /* block */)a1;
- (void)finishBeaconFuture:(id)a0 beaconUUID:(id)a1;
- (void)ignoreBeaconByUUID:(id)a0 until:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)startRefreshingTagSeparationWithBlock:(id /* block */)a0;
- (void)startRefreshingBeacons:(id)a0;
- (void)stopRefreshingTagSeparation;
- (void)stopRefreshing;
- (void)_updateBatteryStatus:(unsigned char)a0 beaconUUID:(id)a1 completion:(id /* block */)a2;
- (oneway void)forceUpdateKeyMapsForUUID:(id)a0 completion:(id /* block */)a1;
- (void)didUpdateUnauthorizedTrackingWithCompletion:(id)a0 completion:(id /* block */)a1;
- (void)disableUTAppAlert:(BOOL)a0 completion:(id /* block */)a1;
- (void)tagSeparationStateChanged:(id)a0 beaconUUID:(id)a1 location:(id)a2 completion:(id /* block */)a3;
- (void)addBeaconChangedListener:(id)a0 beaconUUID:(id)a1 taskName:(id)a2 commandIdentifier:(id)a3 commandIssueDate:(id)a4;
- (void)_cacheBatteryStatus:(unsigned char)a0 beaconUUID:(id)a1;
- (void)ignoreBeaconByAdvertisement:(id)a0 until:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)ignoreBeaconByUUID:(id)a0 untilDate:(id)a1 completion:(id /* block */)a2;
- (void)registerIntentTimerFired;
- (void)waitForBeaconStoreAvailableWithCompletion:(id /* block */)a0;
- (void)fetchUnauthorizedEncryptedPayload:(id)a0 completion:(id /* block */)a1;
- (void)sendUnregisterIntentWithCompletion:(id /* block */)a0;

@end
