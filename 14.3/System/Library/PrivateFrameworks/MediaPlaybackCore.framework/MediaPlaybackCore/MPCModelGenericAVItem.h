@class NSDictionary, NSNumber, MPCModelGenericAVItemTimedMetadataResponse, MPCPlaybackRequestEnvironment, ICStoreRequestContext, NSString, ICMusicSubscriptionLeaseSession, MPPropertySet, MPCModelGenericAVItemTimedMetadataRequest, NSArray, MPModelGenericObject, MPMediaLibrary, NSObject, MPCSuzeLeaseSession, NSData, NSOperationQueue, MPCPlaybackEngineEventStream, MPSubscriptionStatusPlaybackInformation, NSURL, MPCModelGenericAVItemUserIdentityPropertySet, ICMusicSubscriptionLeaseStatus;
@protocol OS_dispatch_queue, MPCReportingIdentityPropertiesLoading, MPCModelPlaybackAssetCacheProviding;

@interface MPCModelGenericAVItem : MPAVItem <AVAssetResourceLoaderDelegate, AVPlayerItemMetadataOutputPushDelegate, ICEnvironmentMonitorObserver, MPRTCReportingItemSessionCreating> {
    NSObject<OS_dispatch_queue> *_accessQueue;
    BOOL _allowsAirPlayFromCloud;
    NSNumber *_bookmarkTime;
    BOOL _hasLoadedSubscriptionLeaseSession;
    NSObject<OS_dispatch_queue> *_subscriptionLeaseSessionLoadQueue;
    ICMusicSubscriptionLeaseSession *_subscriptionLeaseSession;
    BOOL _hasLoadedSubscriptionPlaybackInformation;
    MPSubscriptionStatusPlaybackInformation *_subscriptionPlaybackInformation;
    NSObject<OS_dispatch_queue> *_subscriptionPlaybackInformationLoadQueue;
    BOOL _shouldAutomaticallyRefreshSubscriptionLease;
    BOOL _isAssetSubscriptionProtectionType;
    BOOL _isSubscriptionPolicyContent;
    BOOL _lastPreparedForNonZeroRate;
    long long _subscriptionLeaseRequestCount;
    BOOL _didDeferPreventionStatusUpdate;
    MPCSuzeLeaseSession *_suzeLeaseSession;
    BOOL _isAutomaticallyRefreshingSuzeLeaseSession;
    id /* block */ _firstBecomeActivePlayerItemBlock;
    NSArray *_currentGlobalTimedMetadataGroups;
    MPModelGenericObject *_flattenedGenericObject;
    MPModelGenericObject *_flattenedMetadataGenericObject;
    MPModelGenericObject *_metadataGenericObject;
    MPPropertySet *_itemProperties;
    id<MPCReportingIdentityPropertiesLoading> _identityPropertiesLoader;
    MPCModelGenericAVItemTimedMetadataRequest *_timedMetadataRequest;
    MPCModelGenericAVItemTimedMetadataResponse *_timedMetadataResponse;
    NSOperationQueue *_timedMetadataOperationQueue;
    BOOL _isMusicCellularStreamingAllowed;
    BOOL _isHLSAsset;
    BOOL _didReceiveHLSTimedMetadata;
    NSString *_hlsStreamIdentifier;
    BOOL _isiTunesStoreStream;
    ICStoreRequestContext *_storeRequestContext;
    NSURL *_streamingKeyCertificateURL;
    NSURL *_streamingKeyServerURL;
    NSString *_rtcReportingServiceIdentifier;
    MPCModelGenericAVItemUserIdentityPropertySet *_identityPropertySet;
    long long _leasePlaybackPreventionState;
    ICMusicSubscriptionLeaseStatus *_leaseStatus;
}

@property (retain, nonatomic) id<MPCModelPlaybackAssetCacheProviding> assetCacheProvider;
@property (copy, nonatomic) NSString *assetSourceStoreFrontID;
@property (nonatomic) long long equivalencySourceAdamID;
@property (retain, nonatomic) MPModelGenericObject *genericObject;
@property (readonly, copy, nonatomic) NSData *jingleTimedMetadata;
@property (retain, nonatomic) MPMediaLibrary *mediaLibrary;
@property (copy, nonatomic, getter=isSiriInitiated) NSNumber *siriInitiated;
@property (nonatomic, getter=isRadioPlayback) BOOL radioPlayback;
@property (nonatomic, getter=isRadioStreamPlayback) BOOL radioStreamPlayback;
@property (nonatomic, getter=isSubscriptionRequired) BOOL subscriptionRequired;
@property (readonly, nonatomic) BOOL shouldReportPlayEventsToStore;
@property (readonly, copy, nonatomic) MPCPlaybackRequestEnvironment *playbackRequestEnvironment;
@property (nonatomic) long long stationItemLikedState;
@property (retain, nonatomic) NSDictionary *trackInfo;
@property (weak, nonatomic) MPCPlaybackEngineEventStream *eventStream;
@property (nonatomic) BOOL supportsRadioTrackActions;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) id rtcReportingParentHierarchyToken;
@property (readonly, copy, nonatomic) NSString *rtcReportingServiceIdentifier;
@property (readonly, nonatomic) long long rtcReportingAssetType;

+ (id)_utilitySerialQueue;
+ (BOOL)_prefersHighQualityVideoContentForNetworkType:(long long)a0;
+ (BOOL)_prefersHighQualityAudioContentForNetworkType:(long long)a0;

- (long long)albumYear;
- (id)personID;
- (id)album;
- (id)genre;
- (id)artist;
- (id)composer;
- (id)explicitBadge;
- (id)databaseID;
- (double)_startTime;
- (id)copyrightText;
- (unsigned long long)mediaType;
- (id)cloudUniversalLibraryID;
- (id)storeAccountID;
- (void).cxx_destruct;
- (BOOL)hasTimeSyncedLyrics;
- (void)dealloc;
- (long long)storeSubscriptionAdamID;
- (float)userRating;
- (id)externalContentIdentifier;
- (BOOL)isAlwaysLive;
- (BOOL)allowsEQ;
- (void)metadataOutput:(id)a0 didOutputTimedMetadataGroups:(id)a1 fromPlayerItemTrack:(id)a2;
- (long long)type;
- (id)mainTitle;
- (long long)stationID;
- (id)storeFrontIdentifier;
- (unsigned long long)persistentID;
- (BOOL)resourceLoader:(id)a0 shouldWaitForLoadingOfRequestedResource:(id)a1;
- (BOOL)resourceLoader:(id)a0 shouldWaitForRenewalOfRequestedResource:(id)a1;
- (id)bookmarkTime;
- (BOOL)canUseLoadedAsset;
- (void)loadAssetAndPlayerItem;
- (id)playbackError;
- (void)setPlaybackStoppedTime:(double)a0;
- (void)notePlaybackFinishedByHittingEnd;
- (id)albumArtist;
- (void)setPlaybackCheckpointCurrentTime:(double)a0;
- (void)setPlaybackFinishedTime:(double)a0;
- (long long)artistStoreID;
- (unsigned long long)albumTrackNumber;
- (unsigned long long)albumTrackCount;
- (void)applyVolumeNormalizationWithSoundCheckEnabled:(BOOL)a0;
- (BOOL)isValidPlayerSubstituteForItem:(id)a0;
- (BOOL)isAssetURLValid;
- (BOOL)isExplicitTrack;
- (BOOL)usesSubscriptionLease;
- (id)libraryLyrics;
- (BOOL)hasStoreLyrics;
- (id)containerUniqueID;
- (BOOL)isStreamable;
- (id)_radioStation;
- (void)prepareForRate:(float)a0 completionHandler:(id /* block */)a1;
- (void)nowPlayingInfoCenter:(id)a0 lyricsForContentItem:(id)a1 completion:(id /* block */)a2;
- (BOOL)isRadioItem;
- (id)stationHash;
- (id)stationName;
- (id)stationStringID;
- (long long)stationProviderID;
- (BOOL)useEmbeddedChapterData;
- (id)chapterTimeMarkers;
- (id)artworkTimeMarkers;
- (id)urlTimeMarkers;
- (id)cloudAlbumID;
- (unsigned long long)albumPersistentID;
- (unsigned long long)albumArtistPersistentID;
- (unsigned long long)artistPersistentID;
- (unsigned long long)genrePersistentID;
- (unsigned long long)composerPersistentID;
- (double)durationFromExternalMetadata;
- (id)playbackInfo;
- (void)reevaluateType;
- (void)_currentPlaybackRateDidChange:(float)a0;
- (void)_applyLoudnessInfo;
- (void)_handleUpdatedLikedState:(long long)a0 forUserIdentity:(id)a1 completion:(id /* block */)a2;
- (long long)_persistedLikedState;
- (void)resolvePlaybackError:(id)a0 withCompletion:(id /* block */)a1;
- (void)_willBecomeActivePlayerItem;
- (void)_willResignActivePlayerItem;
- (void)_didResignActivePlayerItem;
- (void)_didBecomeActivePlayerItem;
- (long long)storePurchasedAdamID;
- (long long)albumStoreID;
- (BOOL)isLikedStateEnabled;
- (BOOL)supportsLikedState;
- (long long)storeItemInt64ID;
- (BOOL)prefersSeekOverSkip;
- (BOOL)shouldPreventPlayback;
- (id)modelGenericObject;
- (BOOL)allowsAirPlayFromCloud;
- (id)leaseStatus;
- (BOOL)requiresLoadedAssetForAirPlayProperties;
- (id)useListeningHistory;
- (long long)leasePlaybackPreventionState;
- (id)mediaItem;
- (id)_stopTime;
- (void)setRating:(float)a0;
- (unsigned long long)cloudID;
- (BOOL)_shouldRememberBookmarkTime;
- (id)_bookmarkTime;
- (id)_storeUbiquitousIdentifier;
- (void)_contentTasteControllerDidChangeNotification:(id)a0;
- (BOOL)shouldShowComposer;
- (id /* block */)artworkCatalogBlock;
- (id)_storeRequestContext;
- (void)environmentMonitorDidChangeNetworkType:(id)a0;
- (BOOL)allowsExternalPlayback;
- (void)_ageVerificationStateDidChangeNotification:(id)a0;
- (struct { long long x0; long long x1; long long x2; long long x3; long long x4; long long x5; long long x6; long long x7; })_timeoutValues;
- (void)_getSubscriptionLeasePropertiesWithCompletion:(id /* block */)a0;
- (BOOL)_allowsStreamingPlayback;
- (BOOL)_allowsAssetCaching;
- (id)_rtcReportingServiceIdentifierWithAssetURL:(id)a0;
- (void)_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:(id)a0;
- (void)_applyPreferredPeakBitRateToPlayerItem:(id)a0 withItemType:(long long)a1;
- (void)_suzeLeaseSessionRenewDidFailNotification:(id)a0;
- (void)_handlePlaybackFinishedTime:(double)a0 didFinishByHittingEnd:(BOOL)a1;
- (void)_updatePreventionStatusWithLeaseSession:(id)a0;
- (void)_getUnverifiedSubscriptionLeaseSessionWithCompletion:(id /* block */)a0;
- (void)_updateBookmarkTime:(double)a0 isCheckpoint:(BOOL)a1;
- (void)_updateHasBeenPlayedWithElapsedTime:(double)a0 completion:(id /* block */)a1;
- (void)_updateAutomaticSubscriptionLeaseRefresh;
- (unsigned long long)mpcReporting_itemType;
- (id)_isPrivateListeningEnabled;
- (void)_reloadTimedMetadataRequest;
- (void)_updateJingleTimedMetadata;
- (void)_invalidateContentItem;
- (void)_postInvalidationNotifications;
- (void)_timedMetadataResponseDidInvalidateNotification:(id)a0;
- (id)_modelPlaybackPosition;
- (void)_subscriptionLeaseStatusDidChangeNotification:(id)a0;
- (id)initWithGenericObject:(id)a0 itemProperties:(id)a1 playbackRequestEnvironment:(id)a2 identityPropertySet:(id)a3;
- (long long)mpcReporting_equivalencySourceAdamID;
- (id)mpcReporting_identityPropertiesLoader;
- (id)mpcReporting_jingleTimedMetadata;
- (id)mpcReporting_requestingBundleIdentifier;
- (id)mpcReporting_requestingBundleVersion;
- (BOOL)mpcReporting_shouldUseRelativeTimePositions;
- (BOOL)mpcReporting_shouldReportPlayEventsToStore;
- (id)mpcReporting_privateListeningEnabled;
- (id)mpcReporting_siriInitiated;
- (id)mpcReporting_trackInfo;

@end
