@class MPCItemBookmarker, NSDictionary, MPCLeaseController, MPVideoView, AVPictureInPictureController, MPCExternalPlaybackControllerImplementation, NSString, MPAVItem, MPCPlaybackEngine, AVPlayerViewController, MPCErrorControllerImplementation, MPQueuePlayer, MPCMediaFoundationTranslator;
@protocol MFQueueManagement, MPAVQueueController, MFAssetLoading, MFPlaybackStackController;

@interface _MPCPlaybackEngineMediaFoundationImplementation : NSObject <MFPlaybackStackControllerDelegate, MPAVQueueControllerDelegate, MPCAssetLoaderDelegate, MPCPlaybackEngineImplementation>

@property (retain, nonatomic) id<MFPlaybackStackController, MFQueueManagement> playbackStackController;
@property (retain, nonatomic) MPCItemBookmarker *bookmarker;
@property (retain, nonatomic) MPCMediaFoundationTranslator *translator;
@property (retain, nonatomic) MPCErrorControllerImplementation *errorController;
@property (retain, nonatomic) MPCExternalPlaybackControllerImplementation *externalPlaybackController;
@property (retain, nonatomic) id<MFAssetLoading> assetLoader;
@property (retain, nonatomic) MPCLeaseController *leaseController;
@property (nonatomic) unsigned long long stateHandle;
@property (readonly, nonatomic) AVPlayerViewController *playerViewController;
@property (readonly, nonatomic) NSDictionary *_stateDictionary;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, weak, nonatomic) MPCPlaybackEngine *playbackEngine;
@property (retain, nonatomic) id<MPAVQueueController> queueController;
@property (readonly, nonatomic) MPAVItem *currentItem;
@property (readonly, nonatomic) MPQueuePlayer *queuePlayer;
@property (nonatomic) double currentTime;
@property (readonly, nonatomic) float currentRate;
@property (readonly, nonatomic) long long state;
@property (readonly, nonatomic) long long stateBeforeInterruption;
@property (readonly, nonatomic) MPVideoView *videoView;
@property (readonly, nonatomic) AVPictureInPictureController *pictureInPictureController;
@property (nonatomic) BOOL wantsPictureInPicture;
@property (nonatomic) BOOL automaticallyHidesVideoLayersForMusicVideosWhenApplicationBackgrounds;
@property (nonatomic) BOOL hasPlayedSuccessfully;
@property (nonatomic) BOOL autoPlayWhenLikelyToKeepUp;
@property (nonatomic) long long actionAtQueueEnd;
@property (readonly, nonatomic, getter=isReloadingPlaybackContext) BOOL reloadingPlaybackContext;

+ (id)describePlayer:(id)a0;

- (id)initWithPlaybackEngine:(id)a0;
- (void).cxx_destruct;
- (BOOL)becomeActiveWithError:(id *)a0;
- (void)endPlayback;
- (void)dealloc;
- (void)playWithOptions:(unsigned long long)a0;
- (void)pause;
- (void)updateAudioSession;
- (void)reloadWithPlaybackContext:(id)a0 identifier:(id)a1 completionHandler:(id /* block */)a2;
- (void)replaceCurrentItemWithPlaybackContext:(id)a0 identifier:(id)a1 completionHandler:(id /* block */)a2;
- (void)loadSessionWithQueueController:(id)a0 completionHandler:(id /* block */)a1;
- (void)queueController:(id)a0 didIncrementVersionForSegment:(id)a1;
- (void)queueController:(id)a0 didChangeActionAtQueueEnd:(long long)a1;
- (void)queueController:(id)a0 didChangeShuffleType:(long long)a1;
- (void)queueControllerDidChangeContents:(id)a0;
- (void)queueController:(id)a0 failedToLoadItem:(id)a1;
- (void)queueController:(id)a0 didChangeContentsWithReplacementPlaybackContext:(id)a1;
- (void)pauseWithFadeout:(float)a0;
- (BOOL)changePlaybackIndexBy:(long long)a0 deltaType:(long long)a1 ignoreElapsedTime:(BOOL)a2 force:(BOOL)a3 error:(id *)a4;
- (void)beginUsingVideoLayer;
- (void)endUsingVideoLayer;
- (void)queueController:(id)a0 didChangeRepeatType:(long long)a1;
- (void)_setupPlaybackStackWithPlaybackEngine:(id)a0 queueController:(id)a1;
- (void)setQueueWithPlaybackContext:(id)a0 identifier:(id)a1 completionHandler:(id /* block */)a2;
- (void)_resetPlaybackStack;
- (void)skipWithDirection:(long long)a0 identifier:(id)a1 completion:(id /* block */)a2;
- (void)_updateAudioSessionForItem:(id)a0;
- (id)_MPAVItemForMFQueuePlayerItem:(id)a0;
- (void)endPlaybackWithIdentifier:(id)a0 completion:(id /* block */)a1;
- (void)playWithRate:(float)a0 identifier:(id)a1 completion:(id /* block */)a2;
- (void)pauseWithIdentifier:(id)a0 completion:(id /* block */)a1;
- (void)beginScanningWithDirection:(long long)a0 identifier:(id)a1 completion:(id /* block */)a2;
- (void)endScanningWithIdentifier:(id)a0 completion:(id /* block */)a1;
- (void)setRate:(float)a0 identifier:(id)a1 completion:(id /* block */)a2;
- (void)_logTimeJumpForItem:(id)a0 fromTime:(double)a1 toTime:(double)a2 userInitiated:(BOOL)a3 timeStamp:(id)a4;
- (void)_playbackDidStopForItem:(id)a0 time:(double)a1;
- (void)currentItemWillChangeFromItem:(id)a0 toItem:(id)a1 source:(long long)a2 timeStamp:(id)a3;
- (void)itemIsReadyToPlay:(id)a0 timeStamp:(id)a1;
- (void)itemDidFailToLoad:(id)a0 error:(id)a1 timeStamp:(id)a2;
- (void)itemDidFailToPlayToEnd:(id)a0 error:(id)a1 timeStamp:(id)a2;
- (void)itemDidBecomeCurrent:(id)a0 source:(long long)a1 timeStamp:(id)a2;
- (void)itemDidResignCurrent:(id)a0 source:(long long)a1 timeStamp:(id)a2;
- (void)playbackDidStartForItem:(id)a0 rate:(float)a1 fromStalling:(BOOL)a2 timeStamp:(id)a3;
- (void)playbackDidStopForItem:(id)a0 timeStamp:(id)a1;
- (void)playbackWaitingToPlayForItem:(id)a0 reason:(id)a1 timeStamp:(id)a2;
- (void)itemDidPlayToEnd:(id)a0 timeStamp:(id)a1;
- (void)playbackTimeDidChangeTo:(double)a0 forItem:(id)a1 reason:(long long)a2 timeStamp:(id)a3;
- (void)playbackRateDidChangeToRate:(float)a0 forItem:(id)a1 timeStamp:(id)a2;
- (void)playbackIsLikelyToKeepUp:(BOOL)a0 forItem:(id)a1 timeStamp:(id)a2;
- (void)playbackBufferStateDidChangeToState:(long long)a0 forItem:(id)a1 timeStamp:(id)a2;
- (void)didReachEndOfQueueWithReason:(id)a0;
- (void)interruptionDidBeginWithInterruptor:(id)a0 timeStamp:(id)a1;
- (void)interruptionDidFinishForInterruptor:(id)a0 shouldResume:(BOOL)a1 timeStamp:(id)a2;
- (void)routeDidChange:(BOOL)a0 metadata:(id)a1 timeStamp:(id)a2;
- (void)stateDidChangeFromState:(long long)a0 toState:(long long)a1 timeStamp:(id)a2;
- (void)screenRecordingDidChange:(BOOL)a0 timeStamp:(id)a1;
- (void)userActionDidBegin:(id)a0;
- (void)userActionDidEnd:(id)a0 error:(id)a1;
- (void)mediaServicesInterruptionDidBeginWithItemAtDeath:(id)a0 timeAtDeath:(double)a1 timeStamp:(id)a2;
- (void)mediaServicesInterruptionDidEndWithTimeStamp:(id)a0;
- (void)playbackIsBlockedOnNonPlayableItem:(id)a0;
- (void)userSeekCompletedForItem:(id)a0 fromTime:(double)a1 toTime:(double)a2 timeStamp:(id)a3;
- (void)assetLoadingDidStartForItem:(id)a0;
- (void)assetLoadingDidCompleteForItem:(id)a0 error:(id)a1;
- (void)pauseWithFadeout:(double)a0 identifier:(id)a1 completion:(id /* block */)a2;
- (void)togglePlaybackWithIdentifier:(id)a0 completion:(id /* block */)a1;
- (BOOL)skipWithDirectionShouldJumpToItemStart:(long long)a0;
- (void)jumpToTime:(double)a0 identifier:(id)a1 completion:(id /* block */)a2;
- (void)playbackDidReachQueueEndWithTimeStamp:(id)a0;
- (void)firstVideoFrameWasRenderedForItem:(id)a0 timeStamp:(id)a1;

@end
