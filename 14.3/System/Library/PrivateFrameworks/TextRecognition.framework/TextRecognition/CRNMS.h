@interface CRNMS : NSObject {
    struct deque<nms::RectForest<unsigned short, double>, std::__1::allocator<nms::RectForest<unsigned short, double> > > { struct __split_buffer<nms::RectForest<unsigned short, double> *, std::__1::allocator<nms::RectForest<unsigned short, double> *> > { struct RectForest<unsigned short, double> **__first_; struct RectForest<unsigned short, double> **__begin_; struct RectForest<unsigned short, double> **__end_; struct __compressed_pair<nms::RectForest<unsigned short, double> **, std::__1::allocator<nms::RectForest<unsigned short, double> *> > { struct RectForest<unsigned short, double> **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<nms::RectForest<unsigned short, double> > > { unsigned long long __value_; } __size_; } _preNMSForests;
    struct PyramidNMS<unsigned short, double, unsigned char> { void /* function */ **_vptr$PyramidNMS; struct deque<bool, std::__1::allocator<bool> > { struct __split_buffer<bool *, std::__1::allocator<bool *> > { BOOL **__first_; BOOL **__begin_; BOOL **__end_; struct __compressed_pair<bool **, std::__1::allocator<bool *> > { BOOL **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<bool> > { unsigned long long __value_; } __size_; } fullySpecifiedForests; struct deque<std::__1::valarray<bool>, std::__1::allocator<std::__1::valarray<bool> > > { struct __split_buffer<std::__1::valarray<bool> *, std::__1::allocator<std::__1::valarray<bool> *> > { struct valarray<bool> **__first_; struct valarray<bool> **__begin_; struct valarray<bool> **__end_; struct __compressed_pair<std::__1::valarray<bool> **, std::__1::allocator<std::__1::valarray<bool> *> > { struct valarray<bool> **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<bool> > > { unsigned long long __value_; } __size_; } masksValid; struct deque<std::__1::valarray<bool>, std::__1::allocator<std::__1::valarray<bool> > > { struct __split_buffer<std::__1::valarray<bool> *, std::__1::allocator<std::__1::valarray<bool> *> > { struct valarray<bool> **__first_; struct valarray<bool> **__begin_; struct valarray<bool> **__end_; struct __compressed_pair<std::__1::valarray<bool> **, std::__1::allocator<std::__1::valarray<bool> *> > { struct valarray<bool> **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<bool> > > { unsigned long long __value_; } __size_; } masksInvalid; struct deque<std::__1::valarray<bool>, std::__1::allocator<std::__1::valarray<bool> > > { struct __split_buffer<std::__1::valarray<bool> *, std::__1::allocator<std::__1::valarray<bool> *> > { struct valarray<bool> **__first_; struct valarray<bool> **__begin_; struct valarray<bool> **__end_; struct __compressed_pair<std::__1::valarray<bool> **, std::__1::allocator<std::__1::valarray<bool> *> > { struct valarray<bool> **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<bool> > > { unsigned long long __value_; } __size_; } masksPendingInvalid; struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { struct valarray<unsigned char> **__first_; struct valarray<unsigned char> **__begin_; struct valarray<unsigned char> **__end_; struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { struct valarray<unsigned char> **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { unsigned long long __value_; } __size_; } histsWordCoincide; struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__first_; struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__begin_; struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__end_; struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { unsigned long long __value_; } __size_; } idxsWordCoincide; struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { struct valarray<unsigned char> **__first_; struct valarray<unsigned char> **__begin_; struct valarray<unsigned char> **__end_; struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { struct valarray<unsigned char> **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { unsigned long long __value_; } __size_; } histsWordContain; struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__first_; struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__begin_; struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__end_; struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { unsigned long long __value_; } __size_; } idxsWordContain; struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { struct valarray<unsigned char> **__first_; struct valarray<unsigned char> **__begin_; struct valarray<unsigned char> **__end_; struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { struct valarray<unsigned char> **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { unsigned long long __value_; } __size_; } histsWordConstitute; struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__first_; struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__begin_; struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__end_; struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { unsigned long long __value_; } __size_; } idxsWordConstitute; struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { struct valarray<unsigned char> **__first_; struct valarray<unsigned char> **__begin_; struct valarray<unsigned char> **__end_; struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { struct valarray<unsigned char> **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { unsigned long long __value_; } __size_; } histsWordOverlap; struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__first_; struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__begin_; struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__end_; struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { unsigned long long __value_; } __size_; } idxsWordOverlap; struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { struct valarray<unsigned char> **__first_; struct valarray<unsigned char> **__begin_; struct valarray<unsigned char> **__end_; struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { struct valarray<unsigned char> **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { unsigned long long __value_; } __size_; } histsLineCoincide; struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__first_; struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__begin_; struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__end_; struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { unsigned long long __value_; } __size_; } idxsLineCoincide; struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { struct valarray<unsigned char> **__first_; struct valarray<unsigned char> **__begin_; struct valarray<unsigned char> **__end_; struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { struct valarray<unsigned char> **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { unsigned long long __value_; } __size_; } histsLineContain; struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__first_; struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__begin_; struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__end_; struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { unsigned long long __value_; } __size_; } idxsLineContain; struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { struct valarray<unsigned char> **__first_; struct valarray<unsigned char> **__begin_; struct valarray<unsigned char> **__end_; struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { struct valarray<unsigned char> **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { unsigned long long __value_; } __size_; } histsLineConstitute; struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__first_; struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__begin_; struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__end_; struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { unsigned long long __value_; } __size_; } idxsLineConstitute; struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { struct valarray<unsigned char> **__first_; struct valarray<unsigned char> **__begin_; struct valarray<unsigned char> **__end_; struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { struct valarray<unsigned char> **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { unsigned long long __value_; } __size_; } histsLineOverlap; struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__first_; struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__begin_; struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__end_; struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { unsigned long long __value_; } __size_; } idxsLineOverlap; struct deque<nms::RectForest<unsigned short, double>, std::__1::allocator<nms::RectForest<unsigned short, double> > > *pForests; struct PyramidNMSConfig { void /* function */ **_vptr$PyramidNMSConfig; unsigned long long methodType; unsigned long long scoreType; double scoreMinThreshold; unsigned char scoreMapMinThreshold; BOOL scoreUseScaleIndex; BOOL scoreUseArea; double scoreAggregationScalingFactor; BOOL scoreUseNumSubDatums; unsigned long long scoreNumSubDatumsUpperClip; unsigned long long scoreNumSubDatumsLowerClip; BOOL ignoreOrphansInFullTile; double heightRatioMinThresholdForContainment; BOOL computeIntrascaleGeometricRelationships; unsigned long long intersectionNumSamples; BOOL pendingInvalidRejectCompetingDatums; BOOL computeAndFilterByIndividualScores; BOOL processCoincidence; BOOL processContainment; BOOL processOverlap; BOOL processPendingInvalid; unsigned long long favorSubDatumUndersegmentationInProcessingCoincidence; BOOL favorLargerAreaInProcessingCoincidence; BOOL favorFineScaleInProcessingCoincidence; double datumMinHeightRatioToUseFullTile; BOOL useOverlappingWordsInProcessingContainment; double minValidCosAngleInDistributionCheckInProcessingContainment; unsigned long long favorSubDatumUndersegmentationInProcessingContainment; BOOL favorLargerAreaInProcessingContainment; BOOL favorFullTileInProcessingContainment; double heightRatioFineToFullMinThresholdFavorFullTileInProcessingContainment; double heightRatioFineToFullMaxThresholdFavorFullTileInProcessingContainment; double widthRatioFineToFullMinThresholdFavorFullTileInProcessingContainment; double widthRatioFineToFullMaxThresholdFavorFullTileInProcessingContainment; double favorFullTileInProcessingOverlap; double coincidenceIOUMinThreshold; double coincidenceIOMinMinThreshold; double containmentIOUMaxThreshold; double containmentIOMinMinThreshold; double constitutionIOUMaxThreshold; double constitutionIOMinMinThreshold; double overlapIOUMinThreshold; double overlapIOUMaxThreshold; double overlapIOMinMinThreshold; double overlapIOMinMaxThreshold; } config; } _pyrNMS;
    struct deque<nms::RectForest<unsigned short, double>, std::__1::allocator<nms::RectForest<unsigned short, double> > > { struct __split_buffer<nms::RectForest<unsigned short, double> *, std::__1::allocator<nms::RectForest<unsigned short, double> *> > { struct RectForest<unsigned short, double> **__first_; struct RectForest<unsigned short, double> **__begin_; struct RectForest<unsigned short, double> **__end_; struct __compressed_pair<nms::RectForest<unsigned short, double> **, std::__1::allocator<nms::RectForest<unsigned short, double> *> > { struct RectForest<unsigned short, double> **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::__1::allocator<nms::RectForest<unsigned short, double> > > { unsigned long long __value_; } __size_; } _postNMSForests;
    struct PyramidTokenizer<unsigned short, double> { void /* function */ **_vptr$PyramidTokenizer; struct deque<nms::RectForest<unsigned short, double>, std::__1::allocator<nms::RectForest<unsigned short, double> > > *pForests; struct PyramidTokenizerConfig { void /* function */ **_vptr$PyramidTokenizerConfig; unsigned long long methodType; BOOL isRecursive; double spacingClipMin; double spacingUniformityMinThresholdClipMin; double spacingUniformityMinThresholdClipMax; double spacingUniformityMinThresholdTrueProbability; double spacingRatioMultiplier; BOOL useAdpativeSpacingRatioMultiplier; unsigned long long adpativeSpacingRatioMultiplierMinNumRects; double adaptiveSpacingRatioMultiplierMinVariationThreshold; double adaptiveSpacingRatioMultiplierLowerBound; unsigned long long singleTokenNumCharsMaxThreshold; unsigned long long singleTokenNumCutpointCandidatesMaxThreshold; } config; } _pyrTokenizer;
    unsigned long long _forestFeatureType;
    unsigned long long _outputTextFeatureLevel;
}

- (void).cxx_destruct;
- (id).cxx_construct;
- (id)initWithNMSMethodType:(unsigned long long)a0 NMSScoreType:(unsigned long long)a1 TKZMethodType:(unsigned long long)a2;
- (BOOL)addTextDetectorQuadFeatures:(const struct vector<CRDetectorUtils::CRTextDetectorQuadFeature, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> > { struct CRTextDetectorQuadFeature *x0; struct CRTextDetectorQuadFeature *x1; struct __compressed_pair<CRDetectorUtils::CRTextDetectorQuadFeature *, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> > { struct CRTextDetectorQuadFeature *x0; } x2; } *)a0 withInputSize:(struct CGSize { double x0; double x1; })a1 andScoreMap:(struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } *)a2 options:(id)a3;
- (BOOL)addTextDetectorQuadFeatures:(const struct vector<CRDetectorUtils::CRTextDetectorQuadFeature, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> > { struct CRTextDetectorQuadFeature *x0; struct CRTextDetectorQuadFeature *x1; struct __compressed_pair<CRDetectorUtils::CRTextDetectorQuadFeature *, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> > { struct CRTextDetectorQuadFeature *x0; } x2; } *)a0 withInputSize:(struct CGSize { double x0; double x1; })a1 scoreMap:(struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } *)a2 scoreMapScaleFactor:(double)a3 andTileRects:(id)a4 options:(id)a5;
- (id)generateConsolidatedTextFeatures:(id)a0;
- (BOOL)buildRectForest:(struct RectForest<unsigned short, double> { void /* function */ **x0; unsigned long long x1; struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } x2; struct QuantizedScoreMap { unsigned long long x0; unsigned long long x1; struct valarray<unsigned char> { char *x0; char *x1; } x2; } x3; struct deque<std::__1::valarray<double>, std::__1::allocator<std::__1::valarray<double> > > { struct __split_buffer<std::__1::valarray<double> *, std::__1::allocator<std::__1::valarray<double> *> > { struct valarray<double> **x0; struct valarray<double> **x1; struct valarray<double> **x2; struct __compressed_pair<std::__1::valarray<double> **, std::__1::allocator<std::__1::valarray<double> *> > { struct valarray<double> **x0; } x3; } x0; unsigned long long x1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<double> > > { unsigned long long x0; } x2; } x4; struct deque<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > > { struct __split_buffer<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> > { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **x0; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **x1; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **x2; struct __compressed_pair<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> > { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **x0; } x3; } x0; unsigned long long x1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > > { unsigned long long x0; } x2; } x5; struct map<nms::ForestLevelType, nms::RepresentationDimType, std::__1::less<nms::ForestLevelType>, std::__1::allocator<std::__1::pair<const nms::ForestLevelType, nms::RepresentationDimType> > > { struct __tree<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::__map_value_compare<nms::ForestLevelType, std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::less<nms::ForestLevelType>, true>, std::__1::allocator<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<nms::ForestLevelType, std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::less<nms::ForestLevelType>, true> > { unsigned long long x0; } x2; } x0; } x6; } *)a0 fromTextFeatures:(id)a1 forestFeatureType:(unsigned long long)a2 options:(id)a3;
- (BOOL)buildRectForest:(struct RectForest<unsigned short, double> { void /* function */ **x0; unsigned long long x1; struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } x2; struct QuantizedScoreMap { unsigned long long x0; unsigned long long x1; struct valarray<unsigned char> { char *x0; char *x1; } x2; } x3; struct deque<std::__1::valarray<double>, std::__1::allocator<std::__1::valarray<double> > > { struct __split_buffer<std::__1::valarray<double> *, std::__1::allocator<std::__1::valarray<double> *> > { struct valarray<double> **x0; struct valarray<double> **x1; struct valarray<double> **x2; struct __compressed_pair<std::__1::valarray<double> **, std::__1::allocator<std::__1::valarray<double> *> > { struct valarray<double> **x0; } x3; } x0; unsigned long long x1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<double> > > { unsigned long long x0; } x2; } x4; struct deque<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > > { struct __split_buffer<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> > { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **x0; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **x1; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **x2; struct __compressed_pair<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> > { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **x0; } x3; } x0; unsigned long long x1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > > { unsigned long long x0; } x2; } x5; struct map<nms::ForestLevelType, nms::RepresentationDimType, std::__1::less<nms::ForestLevelType>, std::__1::allocator<std::__1::pair<const nms::ForestLevelType, nms::RepresentationDimType> > > { struct __tree<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::__map_value_compare<nms::ForestLevelType, std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::less<nms::ForestLevelType>, true>, std::__1::allocator<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<nms::ForestLevelType, std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::less<nms::ForestLevelType>, true> > { unsigned long long x0; } x2; } x0; } x6; } *)a0 fromTextDetectorQuadFeatures:(const struct vector<CRDetectorUtils::CRTextDetectorQuadFeature, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> > { struct CRTextDetectorQuadFeature *x0; struct CRTextDetectorQuadFeature *x1; struct __compressed_pair<CRDetectorUtils::CRTextDetectorQuadFeature *, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> > { struct CRTextDetectorQuadFeature *x0; } x2; } *)a1 forestFeatureType:(unsigned long long)a2 withInputSize:(struct CGSize { double x0; double x1; })a3 scoreMap:(struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } *)a4 scoreMapScaleFactor:(double)a5 andTileRects:(id)a6 options:(id)a7;
- (BOOL)preprocessScoreMaps;
- (id)buildTextFeaturesFromRectForest:(const struct RectForest<unsigned short, double> { void /* function */ **x0; unsigned long long x1; struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } x2; struct QuantizedScoreMap { unsigned long long x0; unsigned long long x1; struct valarray<unsigned char> { char *x0; char *x1; } x2; } x3; struct deque<std::__1::valarray<double>, std::__1::allocator<std::__1::valarray<double> > > { struct __split_buffer<std::__1::valarray<double> *, std::__1::allocator<std::__1::valarray<double> *> > { struct valarray<double> **x0; struct valarray<double> **x1; struct valarray<double> **x2; struct __compressed_pair<std::__1::valarray<double> **, std::__1::allocator<std::__1::valarray<double> *> > { struct valarray<double> **x0; } x3; } x0; unsigned long long x1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<double> > > { unsigned long long x0; } x2; } x4; struct deque<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > > { struct __split_buffer<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> > { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **x0; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **x1; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **x2; struct __compressed_pair<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> > { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **x0; } x3; } x0; unsigned long long x1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > > { unsigned long long x0; } x2; } x5; struct map<nms::ForestLevelType, nms::RepresentationDimType, std::__1::less<nms::ForestLevelType>, std::__1::allocator<std::__1::pair<const nms::ForestLevelType, nms::RepresentationDimType> > > { struct __tree<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::__map_value_compare<nms::ForestLevelType, std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::less<nms::ForestLevelType>, true>, std::__1::allocator<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<nms::ForestLevelType, std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::less<nms::ForestLevelType>, true> > { unsigned long long x0; } x2; } x0; } x6; } *)a0 byEdge:(unsigned long long)a1 options:(id)a2;
- (unsigned long long)convertSubTextFeatures:(id)a0 toRects:(struct valarray<double> { double *x0; double *x1; } *)a1;
- (void)fillRectForestDatum:(struct slice_array<double> { double *x0; unsigned long long x1; unsigned long long x2; } *)a0 asDimType:(unsigned long long)a1 withCGRect:(const struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a2;
- (void)fillRectForestDatum:(struct slice_array<double> { double *x0; unsigned long long x1; unsigned long long x2; } *)a0 asDimType:(unsigned long long)a1 withCRTextDetectorQuad:(const struct CRTextDetectorQuad { struct CGPoint { double x0; double x1; } x0[4]; struct CGPoint { double x0; double x1; } x1; double x2; double x3; BOOL x4; } *)a2 andInputSize:(struct CGSize { double x0; double x1; })a3;
- (void)fillRectForestDatum:(struct slice_array<double> { double *x0; unsigned long long x1; unsigned long long x2; } *)a0 asDimType:(unsigned long long)a1 withQuad:(const struct valarray<double> { double *x0; double *x1; } *)a2 andDimType:(unsigned long long)a3;
- (void)fillTextFeature:(id)a0 withRectDatum:(const struct valarray<double> { double *x0; double *x1; } *)a1;
- (id)getTextFeatureFromQuadAngleDatum:(const struct valarray<double> { double *x0; double *x1; } *)a0;
- (BOOL)addTextFeatures:(id)a0 options:(id)a1;
- (BOOL)addTextDetectorQuadFeatures:(const struct vector<CRDetectorUtils::CRTextDetectorQuadFeature, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> > { struct CRTextDetectorQuadFeature *x0; struct CRTextDetectorQuadFeature *x1; struct __compressed_pair<CRDetectorUtils::CRTextDetectorQuadFeature *, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> > { struct CRTextDetectorQuadFeature *x0; } x2; } *)a0 withInputSize:(struct CGSize { double x0; double x1; })a1 scoreMap:(struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } *)a2 andScoreMapScaleFactor:(double)a3 options:(id)a4;
- (unsigned long long)tokenizeTextFeature:(id)a0 intoCutpoints:(struct deque<unsigned short, std::__1::allocator<unsigned short> > { struct __split_buffer<unsigned short *, std::__1::allocator<unsigned short *> > { unsigned short **x0; unsigned short **x1; unsigned short **x2; struct __compressed_pair<unsigned short **, std::__1::allocator<unsigned short *> > { unsigned short **x0; } x3; } x0; unsigned long long x1; struct __compressed_pair<unsigned long, std::__1::allocator<unsigned short> > { unsigned long long x0; } x2; } *)a1 options:(id)a2;
- (BOOL)buildRectForest:(struct RectForest<unsigned short, double> { void /* function */ **x0; unsigned long long x1; struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } x2; struct QuantizedScoreMap { unsigned long long x0; unsigned long long x1; struct valarray<unsigned char> { char *x0; char *x1; } x2; } x3; struct deque<std::__1::valarray<double>, std::__1::allocator<std::__1::valarray<double> > > { struct __split_buffer<std::__1::valarray<double> *, std::__1::allocator<std::__1::valarray<double> *> > { struct valarray<double> **x0; struct valarray<double> **x1; struct valarray<double> **x2; struct __compressed_pair<std::__1::valarray<double> **, std::__1::allocator<std::__1::valarray<double> *> > { struct valarray<double> **x0; } x3; } x0; unsigned long long x1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<double> > > { unsigned long long x0; } x2; } x4; struct deque<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > > { struct __split_buffer<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> > { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **x0; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **x1; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **x2; struct __compressed_pair<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> > { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **x0; } x3; } x0; unsigned long long x1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > > { unsigned long long x0; } x2; } x5; struct map<nms::ForestLevelType, nms::RepresentationDimType, std::__1::less<nms::ForestLevelType>, std::__1::allocator<std::__1::pair<const nms::ForestLevelType, nms::RepresentationDimType> > > { struct __tree<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::__map_value_compare<nms::ForestLevelType, std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::less<nms::ForestLevelType>, true>, std::__1::allocator<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<nms::ForestLevelType, std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::less<nms::ForestLevelType>, true> > { unsigned long long x0; } x2; } x0; } x6; } *)a0 fromTextDetectorQuadFeatures:(const struct vector<CRDetectorUtils::CRTextDetectorQuadFeature, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> > { struct CRTextDetectorQuadFeature *x0; struct CRTextDetectorQuadFeature *x1; struct __compressed_pair<CRDetectorUtils::CRTextDetectorQuadFeature *, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> > { struct CRTextDetectorQuadFeature *x0; } x2; } *)a1 forestFeatureType:(unsigned long long)a2 withInputSize:(struct CGSize { double x0; double x1; })a3 scoreMap:(struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } *)a4 andScoreMapScaleFactor:(double)a5 options:(id)a6;

@end
