@interface GeometricCutTools : NSObject

+ (BOOL)lineThroughPoint:(struct CGPoint { double x0; double x1; })a0 andPoint:(struct CGPoint { double x0; double x1; })a1 andLineThroughPoint:(struct CGPoint { double x0; double x1; })a2 andPoint:(struct CGPoint { double x0; double x1; })a3 intersectAt:(struct CGPoint { double x0; double x1; } *)a4;
+ (BOOL)lineThroughPoint:(struct CGPoint { double x0; double x1; })a0 andPoint:(struct CGPoint { double x0; double x1; })a1 andSegmentStartingAt:(struct CGPoint { double x0; double x1; })a2 andEndingAt:(struct CGPoint { double x0; double x1; })a3 intersectAt:(struct CGPoint { double x0; double x1; } *)a4;
+ (BOOL)lineThroughPoint:(struct CGPoint { double x0; double x1; })a0 andPoint:(struct CGPoint { double x0; double x1; })a1 andRectangle:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 intersectAtPoint:(struct CGPoint { double x0; double x1; } *)a3 andPoint:(struct CGPoint { double x0; double x1; } *)a4;
+ (BOOL)lineThroughPoint:(struct CGPoint { double x0; double x1; })a0 andPoint:(struct CGPoint { double x0; double x1; })a1 andImageWithSize:(struct CGSize { double x0; double x1; })a2 intersectAtPoint:(struct CGPoint { double x0; double x1; } *)a3 andPoint:(struct CGPoint { double x0; double x1; } *)a4;
+ (id)widestVersionOfRect:(id)a0 insideImageWithSize:(struct CGSize { double x0; double x1; })a1;
+ (BOOL)isPointArrayARectangle:(id)a0;
+ (id)boxInNormalizedSpace:(id)a0 toImageSpaceWithSize:(struct CGSize { double x0; double x1; })a1 plusPadding:(struct CGPoint { double x0; double x1; })a2 destSize:(struct CGSize { double x0; double x1; } *)a3 networkInputSize:(struct CGSize { double x0; double x1; })a4;
+ (id)geometricRecognitionOf:(id)a0 inDerotatedRegion:(struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })a1 withPadding:(struct CGPoint { double x0; double x1; })a2 fromCorrectedBoundingBox:(id)a3 inImageWithSize:(struct CGSize { double x0; double x1; })a4 withCodeMap:(const int *)a5 activations:(struct vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > > { struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *x0; struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *x1; struct __compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > > { struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *x0; } x2; })a6 invert:(BOOL)a7 networkInputSize:(struct CGSize { double x0; double x1; })a8;
+ (id)stringByInjectingSpaces:(id)a0 textFeatures:(id)a1 improved:(BOOL)a2;
+ (id)geometricRecognitionOf:(id)a0 inDerotatedRegion:(struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })a1 withPadding:(struct CGPoint { double x0; double x1; })a2 fromCorrectedBoundingBox:(id)a3 inImageWithSize:(struct CGSize { double x0; double x1; })a4 withCodeMap:(const int *)a5 activations:(struct vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > > { struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *x0; struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *x1; struct __compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > > { struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *x0; } x2; })a6 invert:(BOOL)a7 networkInputSize:(struct CGSize { double x0; double x1; })a8 garbageSymbol:(unsigned short)a9;
+ (id)cleanTextDetectorOutput:(id)a0;
+ (id)findCorrectedBoundingBoxOfTextFeature:(id)a0 inImageWithSize:(struct CGSize { double x0; double x1; })a1;
+ (BOOL)derotateContentsOf:(id)a0 inImage:(struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })a1 andOutputTo:(struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } *)a2 withPadding:(struct CGPoint { double x0; double x1; })a3 networkInputSize:(struct CGSize { double x0; double x1; })a4;
+ (id)geometricRecognitionOf:(id)a0 inDerotatedRegion:(struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })a1 withPadding:(struct CGPoint { double x0; double x1; })a2 fromCorrectedBoundingBox:(id)a3 inImageWithSize:(struct CGSize { double x0; double x1; })a4 withNetwork:(struct CHNeuralNetwork { struct vector<int, std::__1::allocator<int> > { int *x0; int *x1; struct __compressed_pair<int *, std::__1::allocator<int> > { int *x0; } x2; } x0; struct vector<std::__1::pair<int, int>, std::__1::allocator<std::__1::pair<int, int> > > { struct pair<int, int> *x0; struct pair<int, int> *x1; struct __compressed_pair<std::__1::pair<int, int> *, std::__1::allocator<std::__1::pair<int, int> > > { struct pair<int, int> *x0; } x2; } x1; struct set<int, std::__1::less<int>, std::__1::allocator<int> > { struct __tree<int, std::__1::less<int>, std::__1::allocator<int> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<int, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<int> > { unsigned long long x0; } x2; } x0; } x2; struct set<int, std::__1::less<int>, std::__1::allocator<int> > { struct __tree<int, std::__1::less<int>, std::__1::allocator<int> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<int, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<int> > { unsigned long long x0; } x2; } x0; } x3; BOOL x4; int x5; int x6; int x7; int x8; struct *x9; int x10; int x11; struct Matrix<short> *x12; short *x13; struct Matrix<short> *x14; short *x15; int *x16; } *)a5 activations:(struct vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > > { struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *x0; struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *x1; struct __compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > > { struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *x0; } x2; })a6 invert:(BOOL)a7;
+ (id)geometricRecognitionOf:(id)a0 inDerotatedRegion:(struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })a1 withPadding:(struct CGPoint { double x0; double x1; })a2 fromCorrectedBoundingBox:(id)a3 inImageWithSize:(struct CGSize { double x0; double x1; })a4 withNetwork:(struct CHNeuralNetwork { struct vector<int, std::__1::allocator<int> > { int *x0; int *x1; struct __compressed_pair<int *, std::__1::allocator<int> > { int *x0; } x2; } x0; struct vector<std::__1::pair<int, int>, std::__1::allocator<std::__1::pair<int, int> > > { struct pair<int, int> *x0; struct pair<int, int> *x1; struct __compressed_pair<std::__1::pair<int, int> *, std::__1::allocator<std::__1::pair<int, int> > > { struct pair<int, int> *x0; } x2; } x1; struct set<int, std::__1::less<int>, std::__1::allocator<int> > { struct __tree<int, std::__1::less<int>, std::__1::allocator<int> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<int, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<int> > { unsigned long long x0; } x2; } x0; } x2; struct set<int, std::__1::less<int>, std::__1::allocator<int> > { struct __tree<int, std::__1::less<int>, std::__1::allocator<int> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<int, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<int> > { unsigned long long x0; } x2; } x0; } x3; BOOL x4; int x5; int x6; int x7; int x8; struct *x9; int x10; int x11; struct Matrix<short> *x12; short *x13; struct Matrix<short> *x14; short *x15; int *x16; } *)a5 activations:(struct vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > > { struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *x0; struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *x1; struct __compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > > { struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *x0; } x2; })a6 invert:(BOOL)a7 garbageSymbol:(unsigned short)a8;
+ (id)geometricRecognitionCandidatesOf:(id)a0 inDerotatedRegion:(struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })a1 withPadding:(struct CGPoint { double x0; double x1; })a2 fromCorrectedBoundingBox:(id)a3 inImageWithSize:(struct CGSize { double x0; double x1; })a4 withNetwork:(struct CHNeuralNetwork { struct vector<int, std::__1::allocator<int> > { int *x0; int *x1; struct __compressed_pair<int *, std::__1::allocator<int> > { int *x0; } x2; } x0; struct vector<std::__1::pair<int, int>, std::__1::allocator<std::__1::pair<int, int> > > { struct pair<int, int> *x0; struct pair<int, int> *x1; struct __compressed_pair<std::__1::pair<int, int> *, std::__1::allocator<std::__1::pair<int, int> > > { struct pair<int, int> *x0; } x2; } x1; struct set<int, std::__1::less<int>, std::__1::allocator<int> > { struct __tree<int, std::__1::less<int>, std::__1::allocator<int> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<int, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<int> > { unsigned long long x0; } x2; } x0; } x2; struct set<int, std::__1::less<int>, std::__1::allocator<int> > { struct __tree<int, std::__1::less<int>, std::__1::allocator<int> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<int, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::less<int> > { unsigned long long x0; } x2; } x0; } x3; BOOL x4; int x5; int x6; int x7; int x8; struct *x9; int x10; int x11; struct Matrix<short> *x12; short *x13; struct Matrix<short> *x14; short *x15; int *x16; } *)a5 activations:(struct vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > > { struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *x0; struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *x1; struct __compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > > { struct vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *x0; } x2; })a6 invert:(BOOL)a7 recognitionWindowSize:(struct CGSize { double x0; double x1; })a8;

@end
