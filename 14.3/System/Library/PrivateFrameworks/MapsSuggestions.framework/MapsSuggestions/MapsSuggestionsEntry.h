@class GEOMapItemStorage, NSString, NSMutableDictionary, NSData, NSDate, NSMutableSet;

@interface MapsSuggestionsEntry : NSObject <NSCopying, NSSecureCoding, MapsSuggestionsObject, MapsSuggestionsJSONable> {
    NSMutableSet *_typeHistory;
    NSMutableDictionary *_sourceSpecificInfo;
}

@property (class, readonly) BOOL supportsSecureCoding;

@property (readonly, nonatomic) BOOL isShortcut;
@property (readonly, nonatomic) BOOL isPureShortcut;
@property (readonly, nonatomic) BOOL isShortcutForSetup;
@property (readonly, nonatomic) NSString *shortcutIdentifier;
@property (readonly, nonatomic) NSString *uniqueIdentifier;
@property (readonly, nonatomic) long long type;
@property (retain, nonatomic) NSString *title;
@property (retain, nonatomic) NSString *titleWhenLocked;
@property (retain, nonatomic) NSString *subtitle;
@property (retain, nonatomic) NSString *subtitleWhenLocked;
@property (retain, nonatomic) NSData *iconData;
@property (retain, nonatomic) NSString *undecoratedTitle;
@property (retain, nonatomic) NSString *undecoratedTitleWhenLocked;
@property (retain, nonatomic) NSString *undecoratedSubtitle;
@property (retain, nonatomic) NSString *undecoratedSubtitleWhenLocked;
@property (nonatomic) double weight;
@property (retain, nonatomic) NSDate *expires;
@property (nonatomic) BOOL deleted;
@property (retain, nonatomic) GEOMapItemStorage *geoMapItem;
@property (retain, nonatomic) NSString *originatingSourceName;
@property (readonly, copy, nonatomic) NSString *description;
@property (readonly, copy, nonatomic) NSString *shortDescription;
@property (readonly, copy, nonatomic) NSString *fullDescription;
@property (readonly, nonatomic) BOOL hasExpired;
@property (readonly, copy, nonatomic) NSString *serializedHexString;
@property (readonly, copy, nonatomic) NSString *serializedBase64String;
@property (readonly, nonatomic) NSString *uniqueName;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *debugDescription;

+ (int)defaultDirectionsTransportType;
+ (id)entryWithType:(long long)a0 title:(id)a1 subtitle:(id)a2 weight:(double)a3 expires:(id)a4 sourceSpecificInfo:(id)a5;
+ (id)entryWithData:(id)a0;
+ (id)entryFromSerializedString:(id)a0;
+ (id)entryFromSerializedHexString:(id)a0 hasPrefix:(BOOL)a1;
+ (id)entryFromSerializedBase64String:(id)a0 hasPrefix:(BOOL)a1;

- (id)endTime;
- (void)mergeFromSuggestionEntry:(id)a0 behavior:(unsigned long long)a1 protectTitles:(BOOL)a2 protectTitleDecorations:(BOOL)a3 protectMapItem:(BOOL)a4 protectWeight:(BOOL)a5 protectExpiration:(BOOL)a6 protectIcon:(BOOL)a7;
- (void)mergeSpecificsFromSuggestionEntry:(id)a0 behavior:(unsigned long long)a1;
- (id)sourceSpecificInfo;
- (void)setSourceSpecificInfo:(id)a0;
- (id)contacts;
- (BOOL)hasStartTime;
- (void)replaceByEntry:(id)a0 forceDecoratedOverwrites:(BOOL)a1;
- (BOOL)wasEverOfType:(long long)a0;
- (BOOL)updateUndecoratedTitle:(id)a0;
- (BOOL)updateUndecoratedSubtitle:(id)a0;
- (BOOL)wasEverOneOfTypes:(id)a0;
- (BOOL)startsBeforeEntry:(id)a0;
- (BOOL)expiresBeforeEntry:(id)a0;
- (void)mergeFromSuggestionEntry:(id)a0 behavior:(unsigned long long)a1;
- (BOOL)hasStartAndEndTime;
- (void)setContacts:(id)a0;
- (id)numberForKey:(id)a0;
- (void)setInteger:(long long)a0 forKey:(id)a1;
- (id)departingAirportCode;
- (BOOL)hasEssentialFlightInfo;
- (void).cxx_destruct;
- (long long)availableRemovalBehaviors;
- (void)setAvailableRemovalBehavior:(long long)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)initWithType:(long long)a0 title:(id)a1;
- (id)data;
- (void)setNumber:(id)a0 forKey:(id)a1;
- (id)initWithType:(long long)a0 title:(id)a1 subtitle:(id)a2 weight:(double)a3 expires:(id)a4 geoMapItem:(id)a5 sourceSpecificInfo:(id)a6;
- (id)stringForKey:(id)a0;
- (id)dateForKey:(id)a0;
- (id)UUIDForKey:(id)a0;
- (void)setUUID:(id)a0 forKey:(id)a1;
- (void)resetAvailableRemovalBehavior:(long long)a0;
- (id)initWithCoder:(id)a0;
- (id)startTime;
- (void)setURL:(id)a0 forKey:(id)a1;
- (BOOL)hasEndTime;
- (void)setString:(id)a0 forKey:(id)a1;
- (long long)integerForKey:(id)a0;
- (BOOL)isEqual:(id)a0;
- (id)URLForKey:(id)a0;
- (unsigned long long)uint64ForKey:(id)a0;
- (BOOL)isEqualToEntry:(id)a0;
- (void)setDate:(id)a0 forKey:(id)a1;
- (id)objectForJSON;
- (BOOL)containsKey:(id)a0;
- (BOOL)booleanForKey:(id)a0;
- (void)setBoolean:(BOOL)a0 forKey:(id)a1;
- (void)setETA:(id)a0 forKey:(id)a1;
- (id)ETAForKey:(id)a0;
- (BOOL)booleanForKey:(id)a0 is:(BOOL)a1;
- (void)replaceByEntry:(id)a0;
- (BOOL)hasFullFlightInfoAndGate;
- (void)setMapItemHandleData:(id)a0;
- (id)mapItemHandleData;
- (void)encodeWithCoder:(id)a0;
- (BOOL)_wasEverOfType:(long long)a0;
- (BOOL)_wasEverOneOfTypes:(id)a0;
- (void)_overrideType:(long long)a0;

@end
