@class NSString, AVAssetReader, AVURLAsset, Version;
@protocol MOVStreamReaderDelegate;

@interface MOVStreamReader : NSObject <MOVStreamReaderDeprecationNominates, MOVStreamReaderDeprecated> {
    AVURLAsset *m_asset;
    AVAssetReader *m_assetReader;
    struct map<std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *__begin_node_; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long long __value_; } __pair3_; } __tree_; } m_streamDataMap;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *__begin_; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *__end_; struct __compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > > { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *__value_; } __end_cap_; } m_orderedStreamNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *__begin_; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *__end_; struct __compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > > { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *__value_; } __end_cap_; } m_orderedAudioStreamNames;
    struct map<std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *__begin_node_; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long long __value_; } __pair3_; } __tree_; } m_metadataDataMap;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *__begin_; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *__end_; struct __compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > > { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > *__value_; } __end_cap_; } m_orderedMetadataStreamNames;
    BOOL _l010OutputFormatRAW14L016;
    BOOL _rawBayerMSBReplication;
    Version *_movVersion;
}

@property BOOL rawBayerMSBReplication;
@property (weak) id<MOVStreamReaderDelegate> delegate;
@property BOOL l010OutputFormatRAW14L016;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void).cxx_destruct;
- (void)dealloc;
- (double)duration;
- (id).cxx_construct;
- (id)initWithURL:(id)a0 error:(id *)a1;
- (id)getAllStreams;
- (id)getAllMetadataStreams;
- (BOOL)containsStream:(id)a0;
- (BOOL)containsMetadataStream:(id)a0;
- (struct CGSize { double x0; double x1; })getSizeForStream:(id)a0;
- (BOOL)resetReaderTo:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 error:(id *)a1;
- (struct __CVBuffer { } *)copyNextFrameForStream:(id)a0 timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; } *)a1 error:(id *)a2;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transformForStream:(id)a0;
- (BOOL)hasReachedEndOfStream:(id)a0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })getMinFrameDurationForStream:(id)a0;
- (id)grabNextMetadataOfStream:(id)a0 timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; } *)a1;
- (double)getFrameRateForStream:(id)a0;
- (id)initWithURL:(id)a0 delegate:(id)a1 error:(id *)a2;
- (id)trackMetadataForMetadataStream:(id)a0;
- (id)metadataForMovie;
- (id)grabNextMetadataOfStream:(id)a0 timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; } *)a1 error:(id *)a2;
- (int)playbackPixelFormatForTrack:(id)a0 ofStream:(id)a1 delegate:(id)a2;
- (id)streamIdFromTrackStreamTypeIdentifier:(id)a0;
- (int)playbackPixelFormatForTrack:(id)a0 ofStream:(id)a1 streamEncodingType:(id)a2 inputPixelFormat:(unsigned int)a3 delegate:(id)a4;
- (void)movVersionCheck;
- (id)initWithContentsOfURL:(id)a0 delegate:(id)a1 error:(id *)a2;
- (id)findAllAssociatedMetadataTrackInAsset:(id)a0 forTrack:(id)a1;
- (id)getKeyFromMetadataTrack:(id)a0;
- (id)movstreamIOMetadataForMovie;
- (id)trackMetadataForStream:(id)a0;
- (id)getMetadataStreamsAssociatedTo:(id)a0 error:(id *)a1;
- (id)getMetadataStreamsAssociatedTo:(id)a0;
- (id)getUnknownMetadataStreamsAssociatedTo:(id)a0;
- (unsigned int)pixelFormatForStream:(id)a0;
- (BOOL)resetReader:(id *)a0;
- (BOOL)endOfStream;
- (id)initWithContentsOfFile:(id)a0 delegate:(id)a1 error:(id *)a2;
- (id)getRelatedStreamForStreamId:(id)a0;
- (id)getRelationSpecifierForStreamId:(id)a0;
- (id)getStreamsRelatedToStream:(id)a0;
- (unsigned int)getOutputPixelFormatForStream:(id)a0;
- (unsigned long long)trackTypeInfoForStream:(id)a0;
- (id)trackForStream:(id)a0;
- (id)metadataTrackForStream:(id)a0;
- (void)removePixelBufferPadding:(BOOL)a0 forStream:(id)a1;
- (id)getAllAudioStreams;
- (id)trackMetadataForAudioStream:(id)a0;
- (BOOL)containsAudioStream:(id)a0;
- (struct opaqueCMSampleBuffer { } *)grabNextAudioSampleForStream:(id)a0 timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; } *)a1 error:(id *)a2;
- (id)grabNextMetadataItemsOfTrackAssociatedWith:(id)a0 withIdentifier:(id)a1 timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; } *)a2 error:(id *)a3;
- (id)grabNextTimedMetadataGroupOfStream:(id)a0 error:(id *)a1;
- (BOOL)hasFinishedReading;
- (BOOL)hasReachedEndOfMetadataStream:(id)a0;
- (id)findAssociatedMetadataTrackInAsset:(id)a0 forTrack:(id)a1 forKey:(id)a2;

@end
