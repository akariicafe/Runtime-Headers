@class NSManagedObjectContext, NSURL, WFCoreDataChangeNotification, NSHashTable, NSPersistentStoreDescription, NSObject;
@protocol OS_dispatch_queue;

@interface WFDatabase : NSObject

@property (class, retain, nonatomic) WFDatabase *defaultDatabase;

@property (nonatomic) BOOL destroysOnDeallocation;
@property (nonatomic) long long transactionCount;
@property (retain, nonatomic) NSPersistentStoreDescription *persistentStoreDescription;
@property (retain, nonatomic) WFCoreDataChangeNotification *pendingChangeNotification;
@property (retain, nonatomic) NSHashTable *resultsToNotify;
@property (retain, nonatomic) NSHashTable *observers;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue;
@property (retain, nonatomic) NSManagedObjectContext *suggestionsContext;
@property (retain, nonatomic) NSManagedObjectContext *context;
@property (readonly, nonatomic) NSURL *fileURL;

+ (id)createDatabaseForTesting;

- (void)setSyncToken:(id)a0;
- (void).cxx_destruct;
- (id)syncToken;
- (void)dealloc;
- (BOOL)isEqual:(id)a0;
- (unsigned long long)countForResult:(id)a0;
- (void)performTransactionWithBlock:(id /* block */)a0 error:(id *)a1;
- (void)contextDidSave:(id)a0;
- (id)recordWithDescriptor:(id)a0 properties:(id)a1 error:(id *)a2;
- (id)logRunOfWorkflow:(id)a0 withSource:(id)a1 triggerID:(id)a2;
- (id)createWorkflowWithOptions:(id)a0 error:(id *)a1;
- (BOOL)saveRecord:(id)a0 withDescriptor:(id)a1 error:(id *)a2;
- (id)recordWithDescriptor:(id)a0 error:(id *)a1;
- (id)shortcutSuggestionsForAllAppsWithLimit:(unsigned long long)a0 shortcutAvailability:(unsigned long long)a1 error:(id *)a2;
- (id)shortcutSuggestionsForAppWithBundleIdentifier:(id)a0 shortcutAvailability:(unsigned long long)a1 error:(id *)a2;
- (id)createFolderWithName:(id)a0 icon:(id)a1 error:(id *)a2;
- (id)sortedVisibleWorkflowsInCollection:(id)a0;
- (id)sortedVisibleFolders;
- (id)referenceForWorkflowID:(id)a0;
- (id)sortedWorkflowsWithQuery:(id)a0;
- (void)deleteShortcutSuggestionsFromApps:(id)a0;
- (BOOL)setShortcutSuggestions:(id)a0 forAppWithBundleIdentifier:(id)a1 error:(id *)a2;
- (id)visibleReferencesForWorkflowName:(id)a0;
- (BOOL)deleteReference:(id)a0 error:(id *)a1;
- (id)uniqueVisibleReferenceForWorkflowName:(id)a0;
- (id)sortedVisibleWorkflowsWithAssociatedAppBundleIdentifier:(id)a0;
- (id)sortedVisibleWorkflowsByName;
- (id)configuredTriggerForTriggerID:(id)a0;
- (id)allConfiguredTriggers;
- (BOOL)hasConflictingReferenceForReference:(id)a0;
- (id)conflictingReferenceForReference:(id)a0;
- (id)collectionRecordForCollectionIdentifier:(id)a0 createIfNecessary:(BOOL)a1;
- (void)addObjectObserver:(id)a0;
- (void)setConflictingReference:(id)a0 forReference:(id)a1;
- (BOOL)deleteReference:(id)a0 tombstone:(BOOL)a1 deleteConflictIfPresent:(BOOL)a2 error:(id *)a3;
- (id)collectionWithIdentifier:(id)a0;
- (id)allCollections;
- (id)createWorkflowWithOptions:(id)a0 nameCollisionBehavior:(unsigned long long)a1 error:(id *)a2;
- (id)localConflictingReferenceForReference:(id)a0;
- (id)remoteConflictingReferenceForReference:(id)a0;
- (BOOL)createWorkflowWithIdentifier:(id)a0 record:(id)a1 error:(id *)a2;
- (id)renameReference:(id)a0 to:(id)a1 error:(id *)a2;
- (id)suggestedWorkflowNameForName:(id)a0;
- (id)workflowsWithTombstonedConflicts;
- (id)deletedFolders;
- (id)deletedWorkflows;
- (id)sortedVisibleWorkflowsWithType:(id)a0;
- (id)sortedRunEventsWithSource:(id)a0 startDate:(id)a1 endDate:(id)a2;
- (unsigned long long)countOfAllVisibleWorkflows;
- (unsigned long long)countOfWorkflowsInAFolder;
- (void)setOutcome:(long long)a0 forRunEvent:(id)a1;
- (id)sortedTriggerEventsWithConfirmationOnly:(BOOL)a0;
- (void)setConfirmedForTriggerEventWithIdentifier:(id)a0 error:(id *)a1;
- (id)createTriggerEventWithTriggerID:(id)a0 eventInfo:(id)a1 confirmed:(BOOL)a2 error:(id *)a3;
- (id)sortedRunEventsForTriggerID:(id)a0;
- (id)initWithStoreDescription:(id)a0 runMigrationsIfNecessary:(BOOL)a1 error:(id *)a2;
- (id)latestRunEvent;
- (void)clearTombstonesAndSyncState;
- (id)currentPerWorkflowStateDataForAccessResourceWithIdentifier:(id)a0 forReference:(id)a1;
- (void)setPerWorkflowStateData:(id)a0 forAccessResourceWithIdentifier:(id)a1 forReference:(id)a2;
- (id)accessResourcesForReference:(id)a0;
- (void)deleteAllAccessResourceStateDataForReference:(id)a0;
- (id)accessResourceStatesForReference:(id)a0;
- (void)setTrustedToRunScripts:(BOOL)a0 forReference:(id)a1 onDomain:(id)a2;
- (BOOL)isReference:(id)a0 allowedToRunOnDomain:(id)a1;
- (id)performSuggestionsOperationWithBlock:(id /* block */)a0 error:(id *)a1;
- (id)allShortcutSuggestions;
- (BOOL)saveContextOrRollback:(id)a0 error:(id *)a1;
- (id)_syncTokenWithError:(id *)a0;
- (id)conflictForWorkflowReference:(id)a0;
- (BOOL)mergeAutomationsAndShortcuts;
- (void)removeObjectObserver:(id)a0;
- (id)performOperationWithBlock:(id /* block */)a0 error:(id *)a1;
- (id)performSaveOperationWithBlock:(id /* block */)a0 error:(id *)a1;
- (id)objectForDescriptor:(id)a0 properties:(id)a1;
- (id)objectForDescriptor:(id)a0 properties:(id)a1 createIfNecessary:(BOOL)a2;
- (void)accessStorageForDescriptor:(id)a0 forWriting:(BOOL)a1 readingRecordProperties:(id)a2 usingBlock:(id /* block */)a3 withError:(id *)a4;
- (id)objectOfClass:(Class)a0 withIdentifier:(id)a1 forKey:(id)a2 createIfNecessary:(BOOL)a3 properties:(id)a4;
- (void)remoteContextDidSave:(id)a0;
- (void)notifyResultsAboutChange:(id)a0;
- (id)descriptorsForResult:(id)a0 error:(id *)a1;
- (BOOL)startObservingChangesForResult:(id)a0;
- (id)missingErrorForDescriptor:(id)a0;
- (Class)recordClassForObjectType:(unsigned long long)a0;
- (BOOL)reloadRecord:(id)a0 withDescriptor:(id)a1 error:(id *)a2;
- (id)tombstonedShortcutsPredicate;
- (id)visiblePredicate;
- (void)addActionCountsToShortcutsIfNecessary;
- (void)addSyncHashesToShortcutsIfNecessary;
- (void)removeRunEventsWithoutAssociatedShortcuts;
- (id)workflowResultWithFetchOperation:(id)a0;
- (id)validateWorkflowName:(id)a0 forCreation:(BOOL)a1 overwriting:(BOOL)a2 error:(id *)a3;
- (BOOL)hasVisibleWorkflowsWithName:(id)a0;
- (id)duplicateNameErrorWithName:(id)a0;
- (id)_createWorkflowWithOptions:(id)a0 error:(id *)a1;
- (id)duplicateReference:(id)a0 newName:(id)a1 error:(id *)a2;
- (void)deleteDonationsForShortcutWithIdentifier:(id)a0;
- (id)allShortcuts;
- (id)createWorkflowWithError:(id *)a0;
- (id)duplicateReference:(id)a0 error:(id *)a1;
- (id)workflowFetchRequestWithCollectionID:(id)a0 includeTombstones:(BOOL)a1 limit:(unsigned long long)a2;
- (id)workflowResultWithFetchRequest:(id)a0;
- (id)configuredTriggersForWorkflowID:(id)a0;
- (id)triggerEventForIdentifier:(id)a0 error:(id *)a1;
- (id)triggerResultWithFetchRequest:(id)a0;
- (id)createTriggerWithRecord:(id)a0 workflow:(id)a1 error:(id *)a2;
- (id)collectionsForWorkflowReference:(id)a0;
- (BOOL)moveReferences:(id)a0 toIndex:(long long)a1 ofCollection:(id)a2 visible:(BOOL)a3 error:(id *)a4;
- (BOOL)moveReferences:(id)a0 toIndexes:(id)a1 ofCollection:(id)a2 visible:(BOOL)a3 error:(id *)a4;
- (BOOL)moveCollections:(id)a0 toIndexes:(id)a1 ofCollectionWithIdentifier:(id)a2 error:(id *)a3;
- (id)visibleCollectionForFolderName:(id)a0;
- (id)orphanedFoldersPredicate;
- (id)orphanedWorkflowsPredicate;
- (id)updateFolder:(id)a0 newName:(id)a1 newIcon:(id)a2 error:(id *)a3;
- (id)folderForWorkflowReference:(id)a0;
- (id)collectionForWorkflowType:(id)a0;
- (BOOL)moveReferences:(id)a0 toIndex:(long long)a1 ofCollection:(id)a2 error:(id *)a3;
- (BOOL)moveReferences:(id)a0 toIndexes:(id)a1 ofCollection:(id)a2 error:(id *)a3;
- (BOOL)prependReferences:(id)a0 toCollection:(id)a1 error:(id *)a2;
- (BOOL)prependReferences:(id)a0 toCollectionWithType:(id)a1 error:(id *)a2;
- (BOOL)removeReferences:(id)a0 fromCollectionWithIdentifier:(id)a1 error:(id *)a2;
- (BOOL)moveCollections:(id)a0 toIndex:(unsigned long long)a1 error:(id *)a2;
- (BOOL)moveCollections:(id)a0 toIndexes:(id)a1 error:(id *)a2;
- (id)orphanedFolders;
- (id)orphanedShortcuts;
- (id)collectionResultWithFetchRequest:(id)a0;
- (id)suggestedFolderNameForName:(id)a0;
- (id)validateFolderName:(id)a0 forCollection:(id)a1 error:(id *)a2;
- (id)logRunOfWorkflow:(id)a0 atDate:(id)a1 withIdentifier:(id)a2 source:(id)a3 triggerID:(id)a4;
- (id)sortedRunEventsWithSource:(id)a0;

@end
