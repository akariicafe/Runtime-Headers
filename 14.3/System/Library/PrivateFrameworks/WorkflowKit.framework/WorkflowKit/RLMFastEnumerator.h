@class RLMRealm;

@interface RLMFastEnumerator : NSObject {
    id _strongBuffer[16];
    RLMRealm *_realm;
    struct RLMClassInfo { id x0; id x1; struct ObjectSchema *x2; struct vector<RLMObservationInfo *, std::__1::allocator<RLMObservationInfo *> > { struct RLMObservationInfo **x0; struct RLMObservationInfo **x1; struct __compressed_pair<RLMObservationInfo **, std::__1::allocator<RLMObservationInfo *> > { struct RLMObservationInfo **x0; } x2; } x3; struct Table *x4; struct vector<RLMClassInfo *, std::__1::allocator<RLMClassInfo *> > { struct RLMClassInfo **x0; struct RLMClassInfo **x1; struct __compressed_pair<RLMClassInfo **, std::__1::allocator<RLMClassInfo *> > { struct RLMClassInfo **x0; } x2; } x5; } *_info;
    struct Results { struct shared_ptr<realm::Realm> { struct Realm *x0; struct __shared_weak_count *x1; } x0; struct ObjectSchema *x1; struct Query { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct vector<realm::QueryGroup, std::__1::allocator<realm::QueryGroup> > { struct QueryGroup *x0; struct QueryGroup *x1; struct __compressed_pair<realm::QueryGroup *, std::__1::allocator<realm::QueryGroup> > { struct QueryGroup *x0; } x2; } x1; struct vector<unsigned long, std::__1::allocator<unsigned long> > { unsigned long long *x0; unsigned long long *x1; struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long> > { unsigned long long *x0; } x2; } x2; struct shared_ptr<const realm::Descriptor> { struct Descriptor *x0; struct __shared_weak_count *x1; } x3; struct BasicTableRef<realm::Table> { struct Table *x0; } x4; struct RowIndexes *x5; struct shared_ptr<realm::LinkView> { struct LinkView *x0; struct __shared_weak_count *x1; } x6; struct TableViewBase *x7; struct unique_ptr<realm::TableViewBase, std::__1::default_delete<realm::TableViewBase> > { struct __compressed_pair<realm::TableViewBase *, std::__1::default_delete<realm::TableViewBase> > { struct TableViewBase *x0; } x0; } x8; } x2; struct TableView { void /* function */ **x0; struct Column<long long> { void /* function */ **x0; unsigned long long x1; struct unique_ptr<realm::StringIndex, std::__1::default_delete<realm::StringIndex> > { struct __compressed_pair<realm::StringIndex *, std::__1::default_delete<realm::StringIndex> > { struct StringIndex *x0; } x0; } x2; struct BpTree<long long> { struct unique_ptr<realm::Array, std::__1::default_delete<realm::Array> > { struct __compressed_pair<realm::Array *, std::__1::default_delete<realm::Array> > { struct Array *x0; } x0; } x0; } x3; } x1; unsigned long long x2; unsigned long long x3; struct BasicTableRef<realm::Table> { struct Table *x0; } x4; struct BacklinkColumn *x5; struct BasicRow<const realm::Table> { struct BasicTableRef<realm::Table> { struct Table *x0; } x0; unsigned long long x1; struct RowBase *x2; struct RowBase *x3; } x6; struct shared_ptr<const realm::LinkView> { struct LinkView *x0; struct __shared_weak_count *x1; } x7; unsigned long long x8; struct DescriptorOrdering { struct vector<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> >, std::__1::allocator<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > > > { struct unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *x0; struct unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *x1; struct __compressed_pair<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *, std::__1::allocator<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > > > { struct unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *x0; } x2; } x0; } x9; struct Query { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct vector<realm::QueryGroup, std::__1::allocator<realm::QueryGroup> > { struct QueryGroup *x0; struct QueryGroup *x1; struct __compressed_pair<realm::QueryGroup *, std::__1::allocator<realm::QueryGroup> > { struct QueryGroup *x0; } x2; } x1; struct vector<unsigned long, std::__1::allocator<unsigned long> > { unsigned long long *x0; unsigned long long *x1; struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long> > { unsigned long long *x0; } x2; } x2; struct shared_ptr<const realm::Descriptor> { struct Descriptor *x0; struct __shared_weak_count *x1; } x3; struct BasicTableRef<realm::Table> { struct Table *x0; } x4; struct RowIndexes *x5; struct shared_ptr<realm::LinkView> { struct LinkView *x0; struct __shared_weak_count *x1; } x6; struct TableViewBase *x7; struct unique_ptr<realm::TableViewBase, std::__1::default_delete<realm::TableViewBase> > { struct __compressed_pair<realm::TableViewBase *, std::__1::default_delete<realm::TableViewBase> > { struct TableViewBase *x0; } x0; } x8; } x10; unsigned long long x11; unsigned long long x12; unsigned long long x13; struct Optional<unsigned long long> { union { unsigned long long x0; char x1; } x0; BOOL x1; } x14; unsigned long long x15; } x3; struct shared_ptr<realm::LinkView> { struct LinkView *x0; struct __shared_weak_count *x1; } x4; struct BasicTableRef<realm::Table> { struct Table *x0; } x5; struct DescriptorOrdering { struct vector<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> >, std::__1::allocator<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > > > { struct unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *x0; struct unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *x1; struct __compressed_pair<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *, std::__1::allocator<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > > > { struct unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *x0; } x2; } x0; } x6; struct Handle<realm::_impl::ResultsNotifier> { struct ResultsNotifier *x0; struct __shared_weak_count *x1; } x7; int x8; int x9; BOOL x10; BOOL x11; } *_results;
    struct Results { struct shared_ptr<realm::Realm> { struct Realm *__ptr_; struct __shared_weak_count *__cntrl_; } m_realm; struct ObjectSchema *m_object_schema; struct Query { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *__data_; unsigned long long __size_; unsigned long long __cap_; } __l; struct __short { char __data_[23]; struct { unsigned char __size_; } ; } __s; struct __raw { unsigned long long __words[3]; } __r; } ; } __value_; } __r_; } error_code; struct vector<realm::QueryGroup, std::__1::allocator<realm::QueryGroup> > { struct QueryGroup *__begin_; struct QueryGroup *__end_; struct __compressed_pair<realm::QueryGroup *, std::__1::allocator<realm::QueryGroup> > { struct QueryGroup *__value_; } __end_cap_; } m_groups; struct vector<unsigned long, std::__1::allocator<unsigned long> > { unsigned long long *__begin_; unsigned long long *__end_; struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long> > { unsigned long long *__value_; } __end_cap_; } m_subtable_path; struct shared_ptr<const realm::Descriptor> { struct Descriptor *__ptr_; struct __shared_weak_count *__cntrl_; } m_current_descriptor; struct BasicTableRef<realm::Table> { struct Table *m_ptr; } m_table; struct RowIndexes *m_view; struct shared_ptr<realm::LinkView> { struct LinkView *__ptr_; struct __shared_weak_count *__cntrl_; } m_source_link_view; struct TableViewBase *m_source_table_view; struct unique_ptr<realm::TableViewBase, std::__1::default_delete<realm::TableViewBase> > { struct __compressed_pair<realm::TableViewBase *, std::__1::default_delete<realm::TableViewBase> > { struct TableViewBase *__value_; } __ptr_; } m_owned_source_table_view; } m_query; struct TableView { void /* function */ **_vptr$RowIndexes; struct Column<long long> { void /* function */ **_vptr$ColumnBase; unsigned long long m_column_ndx; struct unique_ptr<realm::StringIndex, std::__1::default_delete<realm::StringIndex> > { struct __compressed_pair<realm::StringIndex *, std::__1::default_delete<realm::StringIndex> > { struct StringIndex *__value_; } __ptr_; } m_search_index; struct BpTree<long long> { struct unique_ptr<realm::Array, std::__1::default_delete<realm::Array> > { struct __compressed_pair<realm::Array *, std::__1::default_delete<realm::Array> > { struct Array *__value_; } __ptr_; } m_root; } m_tree; } m_row_indexes; unsigned long long m_limit_count; unsigned long long m_debug_cookie; struct BasicTableRef<realm::Table> { struct Table *m_ptr; } m_table; struct BacklinkColumn *m_linked_column; struct BasicRow<const realm::Table> { struct BasicTableRef<realm::Table> { struct Table *m_ptr; } m_table; unsigned long long m_row_ndx; struct RowBase *m_prev; struct RowBase *m_next; } m_linked_row; struct shared_ptr<const realm::LinkView> { struct LinkView *__ptr_; struct __shared_weak_count *__cntrl_; } m_linkview_source; unsigned long long m_distinct_column_source; struct DescriptorOrdering { struct vector<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> >, std::__1::allocator<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > > > { struct unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *__begin_; struct unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *__end_; struct __compressed_pair<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *, std::__1::allocator<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > > > { struct unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *__value_; } __end_cap_; } m_descriptors; } m_descriptor_ordering; struct Query { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *__data_; unsigned long long __size_; unsigned long long __cap_; } __l; struct __short { char __data_[23]; struct { unsigned char __size_; } ; } __s; struct __raw { unsigned long long __words[3]; } __r; } ; } __value_; } __r_; } error_code; struct vector<realm::QueryGroup, std::__1::allocator<realm::QueryGroup> > { struct QueryGroup *__begin_; struct QueryGroup *__end_; struct __compressed_pair<realm::QueryGroup *, std::__1::allocator<realm::QueryGroup> > { struct QueryGroup *__value_; } __end_cap_; } m_groups; struct vector<unsigned long, std::__1::allocator<unsigned long> > { unsigned long long *__begin_; unsigned long long *__end_; struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long> > { unsigned long long *__value_; } __end_cap_; } m_subtable_path; struct shared_ptr<const realm::Descriptor> { struct Descriptor *__ptr_; struct __shared_weak_count *__cntrl_; } m_current_descriptor; struct BasicTableRef<realm::Table> { struct Table *m_ptr; } m_table; struct RowIndexes *m_view; struct shared_ptr<realm::LinkView> { struct LinkView *__ptr_; struct __shared_weak_count *__cntrl_; } m_source_link_view; struct TableViewBase *m_source_table_view; struct unique_ptr<realm::TableViewBase, std::__1::default_delete<realm::TableViewBase> > { struct __compressed_pair<realm::TableViewBase *, std::__1::default_delete<realm::TableViewBase> > { struct TableViewBase *__value_; } __ptr_; } m_owned_source_table_view; } m_query; unsigned long long m_start; unsigned long long m_end; unsigned long long m_limit; struct Optional<unsigned long long> { union { unsigned long long m_value; char m_null_state; } ; BOOL m_engaged; } m_last_seen_version; unsigned long long m_num_detached_refs; } m_table_view; struct shared_ptr<realm::LinkView> { struct LinkView *__ptr_; struct __shared_weak_count *__cntrl_; } m_link_view; struct BasicTableRef<realm::Table> { struct Table *m_ptr; } m_table; struct DescriptorOrdering { struct vector<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> >, std::__1::allocator<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > > > { struct unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *__begin_; struct unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *__end_; struct __compressed_pair<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *, std::__1::allocator<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > > > { struct unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *__value_; } __end_cap_; } m_descriptors; } m_descriptor_ordering; struct Handle<realm::_impl::ResultsNotifier> { struct ResultsNotifier *__ptr_; struct __shared_weak_count *__cntrl_; } m_notifier; int m_mode; int m_update_policy; BOOL m_has_used_table_view; BOOL m_wants_background_updates; } _snapshot;
    id _collection;
}

- (void)detach;
- (void).cxx_destruct;
- (void)dealloc;
- (id)initWithList:(struct List { struct shared_ptr<realm::Realm> { struct Realm *x0; struct __shared_weak_count *x1; } x0; struct ObjectSchema *x1; struct shared_ptr<realm::LinkView> { struct LinkView *x0; struct __shared_weak_count *x1; } x2; struct BasicTableRef<realm::Table> { struct Table *x0; } x3; struct Handle<realm::_impl::CollectionNotifier> { struct CollectionNotifier *x0; struct __shared_weak_count *x1; } x4; } *)a0 collection:(id)a1 realm:(id)a2 classInfo:(struct RLMClassInfo { id x0; id x1; struct ObjectSchema *x2; struct vector<RLMObservationInfo *, std::__1::allocator<RLMObservationInfo *> > { struct RLMObservationInfo **x0; struct RLMObservationInfo **x1; struct __compressed_pair<RLMObservationInfo **, std::__1::allocator<RLMObservationInfo *> > { struct RLMObservationInfo **x0; } x2; } x3; struct Table *x4; struct vector<RLMClassInfo *, std::__1::allocator<RLMClassInfo *> > { struct RLMClassInfo **x0; struct RLMClassInfo **x1; struct __compressed_pair<RLMClassInfo **, std::__1::allocator<RLMClassInfo *> > { struct RLMClassInfo **x0; } x2; } x5; } *)a3;
- (unsigned long long)countByEnumeratingWithState:(struct { unsigned long long x0; id *x1; unsigned long long *x2; unsigned long long x3[5]; } *)a0 count:(unsigned long long)a1;
- (id).cxx_construct;
- (id)initWithResults:(struct Results { struct shared_ptr<realm::Realm> { struct Realm *x0; struct __shared_weak_count *x1; } x0; struct ObjectSchema *x1; struct Query { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct vector<realm::QueryGroup, std::__1::allocator<realm::QueryGroup> > { struct QueryGroup *x0; struct QueryGroup *x1; struct __compressed_pair<realm::QueryGroup *, std::__1::allocator<realm::QueryGroup> > { struct QueryGroup *x0; } x2; } x1; struct vector<unsigned long, std::__1::allocator<unsigned long> > { unsigned long long *x0; unsigned long long *x1; struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long> > { unsigned long long *x0; } x2; } x2; struct shared_ptr<const realm::Descriptor> { struct Descriptor *x0; struct __shared_weak_count *x1; } x3; struct BasicTableRef<realm::Table> { struct Table *x0; } x4; struct RowIndexes *x5; struct shared_ptr<realm::LinkView> { struct LinkView *x0; struct __shared_weak_count *x1; } x6; struct TableViewBase *x7; struct unique_ptr<realm::TableViewBase, std::__1::default_delete<realm::TableViewBase> > { struct __compressed_pair<realm::TableViewBase *, std::__1::default_delete<realm::TableViewBase> > { struct TableViewBase *x0; } x0; } x8; } x2; struct TableView { void /* function */ **x0; struct Column<long long> { void /* function */ **x0; unsigned long long x1; struct unique_ptr<realm::StringIndex, std::__1::default_delete<realm::StringIndex> > { struct __compressed_pair<realm::StringIndex *, std::__1::default_delete<realm::StringIndex> > { struct StringIndex *x0; } x0; } x2; struct BpTree<long long> { struct unique_ptr<realm::Array, std::__1::default_delete<realm::Array> > { struct __compressed_pair<realm::Array *, std::__1::default_delete<realm::Array> > { struct Array *x0; } x0; } x0; } x3; } x1; unsigned long long x2; unsigned long long x3; struct BasicTableRef<realm::Table> { struct Table *x0; } x4; struct BacklinkColumn *x5; struct BasicRow<const realm::Table> { struct BasicTableRef<realm::Table> { struct Table *x0; } x0; unsigned long long x1; struct RowBase *x2; struct RowBase *x3; } x6; struct shared_ptr<const realm::LinkView> { struct LinkView *x0; struct __shared_weak_count *x1; } x7; unsigned long long x8; struct DescriptorOrdering { struct vector<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> >, std::__1::allocator<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > > > { struct unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *x0; struct unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *x1; struct __compressed_pair<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *, std::__1::allocator<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > > > { struct unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *x0; } x2; } x0; } x9; struct Query { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; struct vector<realm::QueryGroup, std::__1::allocator<realm::QueryGroup> > { struct QueryGroup *x0; struct QueryGroup *x1; struct __compressed_pair<realm::QueryGroup *, std::__1::allocator<realm::QueryGroup> > { struct QueryGroup *x0; } x2; } x1; struct vector<unsigned long, std::__1::allocator<unsigned long> > { unsigned long long *x0; unsigned long long *x1; struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long> > { unsigned long long *x0; } x2; } x2; struct shared_ptr<const realm::Descriptor> { struct Descriptor *x0; struct __shared_weak_count *x1; } x3; struct BasicTableRef<realm::Table> { struct Table *x0; } x4; struct RowIndexes *x5; struct shared_ptr<realm::LinkView> { struct LinkView *x0; struct __shared_weak_count *x1; } x6; struct TableViewBase *x7; struct unique_ptr<realm::TableViewBase, std::__1::default_delete<realm::TableViewBase> > { struct __compressed_pair<realm::TableViewBase *, std::__1::default_delete<realm::TableViewBase> > { struct TableViewBase *x0; } x0; } x8; } x10; unsigned long long x11; unsigned long long x12; unsigned long long x13; struct Optional<unsigned long long> { union { unsigned long long x0; char x1; } x0; BOOL x1; } x14; unsigned long long x15; } x3; struct shared_ptr<realm::LinkView> { struct LinkView *x0; struct __shared_weak_count *x1; } x4; struct BasicTableRef<realm::Table> { struct Table *x0; } x5; struct DescriptorOrdering { struct vector<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> >, std::__1::allocator<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > > > { struct unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *x0; struct unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *x1; struct __compressed_pair<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *, std::__1::allocator<std::__1::unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > > > { struct unique_ptr<realm::BaseDescriptor, std::__1::default_delete<realm::BaseDescriptor> > *x0; } x2; } x0; } x6; struct Handle<realm::_impl::ResultsNotifier> { struct ResultsNotifier *x0; struct __shared_weak_count *x1; } x7; int x8; int x9; BOOL x10; BOOL x11; } *)a0 collection:(id)a1 realm:(id)a2 classInfo:(struct RLMClassInfo { id x0; id x1; struct ObjectSchema *x2; struct vector<RLMObservationInfo *, std::__1::allocator<RLMObservationInfo *> > { struct RLMObservationInfo **x0; struct RLMObservationInfo **x1; struct __compressed_pair<RLMObservationInfo **, std::__1::allocator<RLMObservationInfo *> > { struct RLMObservationInfo **x0; } x2; } x3; struct Table *x4; struct vector<RLMClassInfo *, std::__1::allocator<RLMClassInfo *> > { struct RLMClassInfo **x0; struct RLMClassInfo **x1; struct __compressed_pair<RLMClassInfo **, std::__1::allocator<RLMClassInfo *> > { struct RLMClassInfo **x0; } x2; } x5; } *)a3;

@end
