@class NSURL, WebUITextIndicatorData, DOMCSSStyleDeclaration, WebViewPrivate, WebBackForwardList, WebScriptObject, NSString, DOMDocument, NSUndoManager, DOMRange, WAKWindow, WebPreferences, NSData, WebFrame;
@protocol WebFrameLoadDelegate, WebPolicyDelegate, WebDownloadDelegate, WebResourceLoadDelegate, WebUIDelegate, WebEditingDelegate;

@interface WebView : WAKView {
    WebViewPrivate *_private;
}

@property (nonatomic, setter=_setUseDarkAppearance:) BOOL _useDarkAppearance;
@property (nonatomic, setter=_setUseElevatedUserInterfaceLevel:) BOOL _useElevatedUserInterfaceLevel;
@property (readonly, nonatomic, getter=_dataOperationTextIndicator) WebUITextIndicatorData *dataOperationTextIndicator;
@property (readonly, nonatomic) unsigned long long _dragSourceAction;
@property (readonly, nonatomic) NSString *_draggedLinkTitle;
@property (readonly, nonatomic) NSURL *_draggedLinkURL;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _draggedElementBounds;
@property (readonly, nonatomic, getter=_dataInteractionCaretRect) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } dataInteractionCaretRect;
@property (copy, nonatomic, getter=_sourceApplicationAuditData, setter=_setSourceApplicationAuditData:) NSData *sourceApplicationAuditData;
@property (nonatomic, setter=_setUnobscuredSafeAreaInsets:) struct WebEdgeInsets { double x0; double x1; double x2; double x3; } _unobscuredSafeAreaInsets;
@property (nonatomic, setter=_setUseSystemAppearance:) BOOL _useSystemAppearance;
@property (readonly, nonatomic) BOOL canGoBack;
@property (readonly, nonatomic) BOOL canGoForward;
@property (readonly, nonatomic) BOOL canMakeTextLarger;
@property (readonly, nonatomic) BOOL canMakeTextSmaller;
@property (readonly, nonatomic) BOOL canMakeTextStandardSize;
@property (readonly, nonatomic) DOMRange *selectedDOMRange;
@property (readonly, nonatomic) unsigned long long selectionAffinity;
@property (readonly, nonatomic) BOOL maintainsInactiveSelection;
@property (nonatomic, getter=isEditable) BOOL editable;
@property (retain, nonatomic) DOMCSSStyleDeclaration *typingStyle;
@property (nonatomic) BOOL smartInsertDeleteEnabled;
@property (nonatomic, getter=isContinuousSpellCheckingEnabled) BOOL continuousSpellCheckingEnabled;
@property (readonly, nonatomic) NSUndoManager *undoManager;
@property (nonatomic) id<WebEditingDelegate> editingDelegate;
@property (nonatomic) BOOL shouldCloseWithWindow;
@property (nonatomic) id<WebUIDelegate> UIDelegate;
@property (nonatomic) id<WebResourceLoadDelegate> resourceLoadDelegate;
@property (nonatomic) id<WebDownloadDelegate> downloadDelegate;
@property (nonatomic) id<WebFrameLoadDelegate> frameLoadDelegate;
@property (nonatomic) id<WebPolicyDelegate> policyDelegate;
@property (readonly, nonatomic) WebFrame *mainFrame;
@property (readonly, nonatomic) WebFrame *selectedFrame;
@property (readonly, nonatomic) WebBackForwardList *backForwardList;
@property (nonatomic) float textSizeMultiplier;
@property (copy, nonatomic) NSString *applicationNameForUserAgent;
@property (copy, nonatomic) NSString *customUserAgent;
@property (readonly, nonatomic) BOOL supportsTextEncoding;
@property (copy, nonatomic) NSString *customTextEncodingName;
@property (copy, nonatomic) NSString *mediaStyle;
@property (readonly, nonatomic) WebScriptObject *windowScriptObject;
@property (retain, nonatomic) WebPreferences *preferences;
@property (copy, nonatomic) NSString *preferencesIdentifier;
@property (retain, nonatomic) WAKWindow *hostWindow;
@property (copy, nonatomic) NSString *groupName;
@property (readonly, nonatomic) double estimatedProgress;
@property (readonly, nonatomic, getter=isLoading) BOOL loading;
@property (nonatomic) BOOL drawsBackground;
@property (nonatomic) BOOL shouldUpdateWhileOffscreen;
@property (copy, nonatomic) NSString *mainFrameURL;
@property (readonly, nonatomic) DOMDocument *mainFrameDocument;
@property (readonly, copy, nonatomic) NSString *mainFrameTitle;

+ (void)initialize;
+ (void)_addUserStyleSheetToGroup:(id)a0 world:(id)a1 source:(id)a2 url:(id)a3 includeMatchPatternStrings:(id)a4 excludeMatchPatternStrings:(id)a5 injectedFrames:(int)a6;
+ (void)_doNotStartObservingNetworkReachability;
+ (BOOL)_canHandleRequest:(id)a0;
+ (BOOL)isCharacterSmartReplaceExempt:(unsigned short)a0 isPreviousCharacter:(BOOL)a1;
+ (BOOL)canShowMIMEType:(id)a0;
+ (void)_removeUserStyleSheetsFromGroup:(id)a0 world:(id)a1;
+ (id)_productivityDocumentMIMETypes;
+ (BOOL)canShowMIMETypeAsHTML:(id)a0;
+ (void)_registerPluginMIMEType:(id)a0;
+ (void)_unregisterPluginMIMEType:(id)a0;
+ (BOOL)_canHandleRequest:(id)a0 forMainFrame:(BOOL)a1;
+ (BOOL)_representationExistsForURLScheme:(id)a0;
+ (id)_generatedMIMETypeForURLScheme:(id)a0;
+ (BOOL)_isIconLoadingEnabled;
+ (BOOL)_viewClass:(Class *)a0 andRepresentationClass:(Class *)a1 forMIMEType:(id)a2 allowingPlugins:(BOOL)a3;
+ (Class)_getPDFRepresentationClass;
+ (BOOL)shouldIncludeInWebKitStatistics;
+ (Class)_getPDFViewClass;
+ (void)_makeAllWebViewsPerformSelector:(SEL)a0;
+ (void)_releaseMemoryNow;
+ (void)registerViewClass:(Class)a0 representationClass:(Class)a1 forMIMEType:(id)a2;
+ (void)_unregisterViewClassAndRepresentationClassForMIMEType:(id)a0;
+ (id)_MIMETypeForFile:(id)a0;
+ (void)_addUserScriptToGroup:(id)a0 world:(id)a1 source:(id)a2 url:(id)a3 whitelist:(id)a4 blacklist:(id)a5 injectionTime:(int)a6 injectedFrames:(int)a7;
+ (void)_addUserScriptToGroup:(id)a0 world:(id)a1 source:(id)a2 url:(id)a3 includeMatchPatternStrings:(id)a4 excludeMatchPatternStrings:(id)a5 injectionTime:(int)a6 injectedFrames:(int)a7;
+ (void)_addUserStyleSheetToGroup:(id)a0 world:(id)a1 source:(id)a2 url:(id)a3 whitelist:(id)a4 blacklist:(id)a5 injectedFrames:(int)a6;
+ (id)_standardUserAgentWithApplicationName:(id)a0;
+ (void)_reportException:(struct OpaqueJSValue { } *)a0 inContext:(struct OpaqueJSContext { } *)a1;
+ (id)_supportedMIMETypes;
+ (void)enableWebThread;
+ (void)willEnterBackgroundWithCompletionHandler:(id /* block */)a0;
+ (void)_setAlwaysUsesComplexTextCodePath:(BOOL)a0;
+ (BOOL)canCloseAllWebViews;
+ (void)closeAllWebViews;
+ (BOOL)canShowFile:(id)a0;
+ (BOOL)_isUnderMemoryPressure;
+ (void)_setIconLoadingEnabled:(BOOL)a0;
+ (void)_enableRemoteInspector;
+ (void)_disableRemoteInspector;
+ (void)_disableAutoStartRemoteInspector;
+ (BOOL)_isRemoteInspectorEnabled;
+ (BOOL)_hasRemoteInspectorSession;
+ (void)_registerViewClass:(Class)a0 representationClass:(Class)a1 forURLScheme:(id)a2;
+ (id)_decodeData:(id)a0;
+ (void)_setShouldUseFontSmoothing:(BOOL)a0;
+ (BOOL)_shouldUseFontSmoothing;
+ (void)_addOriginAccessAllowListEntryWithSourceOrigin:(id)a0 destinationProtocol:(id)a1 destinationHost:(id)a2 allowDestinationSubdomains:(BOOL)a3;
+ (void)_removeOriginAccessAllowListEntryWithSourceOrigin:(id)a0 destinationProtocol:(id)a1 destinationHost:(id)a2 allowDestinationSubdomains:(BOOL)a3;
+ (void)_resetOriginAccessAllowLists;
+ (void)_addUserScriptToGroup:(id)a0 world:(id)a1 source:(id)a2 url:(id)a3 whitelist:(id)a4 blacklist:(id)a5 injectionTime:(int)a6;
+ (void)_addUserStyleSheetToGroup:(id)a0 world:(id)a1 source:(id)a2 url:(id)a3 whitelist:(id)a4 blacklist:(id)a5;
+ (void)_removeUserScriptFromGroup:(id)a0 world:(id)a1 url:(id)a2;
+ (void)_removeUserStyleSheetFromGroup:(id)a0 world:(id)a1 url:(id)a2;
+ (void)_removeUserScriptsFromGroup:(id)a0 world:(id)a1;
+ (void)_removeAllUserContentFromGroup:(id)a0;
+ (void)_setDomainRelaxationForbidden:(BOOL)a0 forURLScheme:(id)a1;
+ (void)_registerURLSchemeAsSecure:(id)a0;
+ (void)_registerURLSchemeAsAllowingLocalStorageAccessInPrivateBrowsing:(id)a0;
+ (void)_registerURLSchemeAsAllowingDatabaseAccessInPrivateBrowsing:(id)a0;
+ (void)_setLoadResourcesSerially:(BOOL)a0;
+ (BOOL)_HTTPPipeliningEnabled;
+ (void)_setHTTPPipeliningEnabled:(BOOL)a0;
+ (void)_setTileCacheLayerPoolCapacity:(unsigned int)a0;
+ (void)_cacheModelChangedNotification:(id)a0;
+ (void)_preferencesRemovedNotification:(id)a0;
+ (BOOL)_canShowMIMEType:(id)a0 allowingPlugins:(BOOL)a1;
+ (BOOL)_didSetCacheModel;
+ (unsigned long long)_cacheModel;
+ (void)_setCacheModel:(unsigned long long)a0;
+ (unsigned long long)_maxCacheModelInAnyInstance;
+ (id)MIMETypesShownAsHTML;
+ (void)setMIMETypesShownAsHTML:(id)a0;
+ (void)registerURLSchemeAsLocal:(id)a0;
+ (void)_preflightSpellCheckerNow:(id)a0;
+ (void)_preflightSpellChecker;
+ (void)_setFontAllowList:(id)a0;
+ (void)_setPDFRepresentationClass:(Class)a0;
+ (void)_setPDFViewClass:(Class)a0;

- (void)alignLeft:(id)a0;
- (void)alignRight:(id)a0;
- (void)insertText:(id)a0;
- (void)makeTextWritingDirectionRightToLeft:(id)a0;
- (void)moveForward:(id)a0;
- (void)setShowingInspectorIndication:(BOOL)a0;
- (struct NakedPtr<WebCore::Page> { struct Page *x0; })page;
- (void)cut:(id)a0;
- (void)selectAll:(id)a0;
- (BOOL)becomeFirstResponder;
- (void)paste:(id)a0;
- (void)insertParagraphSeparator:(id)a0;
- (void)setNextKeyView:(id)a0;
- (id)previousValidKeyView;
- (void)copy:(id)a0;
- (BOOL)goBack;
- (id)inspector;
- (void)delete:(id)a0;
- (unsigned long long)_enteredDataInteraction:(id)a0 client:(struct CGPoint { double x0; double x1; })a1 global:(struct CGPoint { double x0; double x1; })a2 operation:(unsigned long long)a3;
- (unsigned long long)_updatedDataInteraction:(id)a0 client:(struct CGPoint { double x0; double x1; })a1 global:(struct CGPoint { double x0; double x1; })a2 operation:(unsigned long long)a3;
- (void)_exitedDataInteraction:(id)a0 client:(struct CGPoint { double x0; double x1; })a1 global:(struct CGPoint { double x0; double x1; })a2 operation:(unsigned long long)a3;
- (id)_editableElementsInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)_tryToPerformDataInteraction:(id)a0 client:(struct CGPoint { double x0; double x1; })a1 global:(struct CGPoint { double x0; double x1; })a2 operation:(unsigned long long)a3;
- (void)_endedDataInteraction:(struct CGPoint { double x0; double x1; })a0 global:(struct CGPoint { double x0; double x1; })a1;
- (void)revealCurrentSelection;
- (void)moveUp:(id)a0;
- (void)close;
- (void)moveLeft:(id)a0;
- (BOOL)defersCallbacks;
- (id)_geolocationProvider;
- (void)moveDown:(id)a0;
- (void)stopSpeaking:(id)a0;
- (id)historyDelegate;
- (void)setHistoryDelegate:(id)a0;
- (void)yank:(id)a0;
- (void)reload:(id)a0;
- (void)goBack:(id)a0;
- (void)insertTab:(id)a0;
- (unsigned long long)_deviceOrientation;
- (void)transpose:(id)a0;
- (void)unscheduleFromRunLoop:(id)a0 forMode:(id)a1;
- (void)moveWordLeft:(id)a0;
- (void)dealloc;
- (void)setDefersCallbacks:(BOOL)a0;
- (void)insertNewline:(id)a0;
- (BOOL)_isClosed;
- (id)elementAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)insertNewlineIgnoringFieldEditor:(id)a0;
- (void)deleteBackward:(id)a0;
- (void)deleteForward:(id)a0;
- (void)deleteToBeginningOfLine:(id)a0;
- (void)deleteToEndOfParagraph:(id)a0;
- (void)insertBacktab:(id)a0;
- (void)insertTabIgnoringFieldEditor:(id)a0;
- (void)deleteWordBackward:(id)a0;
- (void)moveWordRight:(id)a0;
- (void)setMark:(id)a0;
- (void)moveBackwardAndModifySelection:(id)a0;
- (void)moveLeftAndModifySelection:(id)a0;
- (void)moveForwardAndModifySelection:(id)a0;
- (void)moveRightAndModifySelection:(id)a0;
- (void)moveWordLeftAndModifySelection:(id)a0;
- (void)moveWordRightAndModifySelection:(id)a0;
- (void)moveDownAndModifySelection:(id)a0;
- (void)moveUpAndModifySelection:(id)a0;
- (void)moveWordBackward:(id)a0;
- (void)moveWordBackwardAndModifySelection:(id)a0;
- (void)moveWordForward:(id)a0;
- (void)moveWordForwardAndModifySelection:(id)a0;
- (void)moveToLeftEndOfLine:(id)a0;
- (void)moveToLeftEndOfLineAndModifySelection:(id)a0;
- (void)moveToRightEndOfLine:(id)a0;
- (void)moveToRightEndOfLineAndModifySelection:(id)a0;
- (void)moveToBeginningOfParagraph:(id)a0;
- (void)moveToEndOfParagraph:(id)a0;
- (void)moveToBeginningOfParagraphAndModifySelection:(id)a0;
- (void)moveToEndOfParagraphAndModifySelection:(id)a0;
- (void)moveToBeginningOfDocument:(id)a0;
- (void)moveToEndOfDocumentAndModifySelection:(id)a0;
- (void)moveToBeginningOfDocumentAndModifySelection:(id)a0;
- (void)moveToEndOfDocument:(id)a0;
- (void)viewDidMoveToWindow;
- (BOOL)_setMediaLayer:(id)a0 forPluginView:(id)a1;
- (unsigned long long)countMatchesForText:(id)a0 options:(unsigned long long)a1 highlight:(BOOL)a2 limit:(unsigned long long)a3 markMatches:(BOOL)a4;
- (BOOL)findString:(id)a0 options:(unsigned long long)a1;
- (void)setUsesPageCache:(BOOL)a0;
- (void)_setUIWebViewUserAgentWithBuildVersion:(id)a0;
- (void)complete:(id)a0;
- (void)applyStyle:(id)a0;
- (void)_setFontFallbackPrefersPictographs:(BOOL)a0;
- (void)_setUseDarkAppearance:(BOOL)a0 useInactiveAppearance:(BOOL)a1;
- (id)_contentsOfUserInterfaceItem:(id)a0;
- (void)goForward:(id)a0;
- (void)_installVisualIdentificationOverlayForViewIfNeeded:(id)a0 kind:(id)a1;
- (BOOL)goToBackForwardItem:(id)a0;
- (id)stringByEvaluatingJavaScriptFromString:(id)a0;
- (void)setBackgroundColor:(struct CGColor { } *)a0;
- (BOOL)goForward;
- (void)setSelectedDOMRange:(id)a0 affinity:(unsigned long long)a1;
- (void)scheduleInRunLoop:(id)a0 forMode:(id)a1;
- (int)_paginationMode;
- (void)_setPaginationMode:(int)a0;
- (void)_viewGeometryDidChange;
- (void)alignJustified:(id)a0;
- (void)_overflowScrollPositionChangedTo:(struct CGPoint { double x0; double x1; })a0 forNode:(id)a1 isUserScroll:(BOOL)a2;
- (id)_fixedPositionContent;
- (BOOL)_paginationBehavesLikeColumns;
- (void)_setPageLength:(double)a0;
- (void)_setPaginationBehavesLikeColumns:(BOOL)a0;
- (double)_gapBetweenPages;
- (void)_setGapBetweenPages:(double)a0;
- (void)changeAttributes:(id)a0;
- (unsigned long long)_pageCount;
- (void)toggleBold:(id)a0;
- (struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; })_userAgentString;
- (id)_touchEventRegions;
- (void)moveBackward:(id)a0;
- (BOOL)_isLoading;
- (void)indent:(id)a0;
- (void)pageUp:(id)a0;
- (struct CGColor { } *)backgroundColor;
- (void)stopLoading:(id)a0;
- (void)makeTextWritingDirectionLeftToRight:(id)a0;
- (void)makeTextWritingDirectionNatural:(id)a0;
- (BOOL)_paginationLineGridEnabled;
- (void)_updateVisibilityState;
- (void)_setPaginationLineGridEnabled:(BOOL)a0;
- (void)_close;
- (void)_setUIKitDelegate:(id)a0;
- (id)_UIKitDelegate;
- (void)_clearDelegates;
- (id)_objectForIdentifier:(unsigned long long)a0;
- (void)_setWantsTelephoneNumberParsing:(BOOL)a0;
- (float)_viewScaleFactor;
- (void)moveRight:(id)a0;
- (struct CGSize { double x0; double x1; })_fixedLayoutSize;
- (unsigned long long)_renderTreeSize;
- (void)_setFixedLayoutSize:(struct CGSize { double x0; double x1; })a0;
- (id)initSimpleHTMLDocumentWithStyle:(id)a0 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 preferences:(id)a2 groupName:(id)a3;
- (BOOL)acceptsFirstResponder;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)_isProcessingUserGesture;
- (void)_setCustomFixedPositionLayoutRectInWebThread:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 synchronize:(BOOL)a1;
- (void)_setCustomFixedPositionLayoutRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_preferencesChanged:(id)a0;
- (void)setMediaVolume:(float)a0;
- (float)mediaVolume;
- (void)insertDictationPhrases:(id)a0 metadata:(id)a1;
- (void)_dispatchTileDidDraw:(id)a0;
- (void)_scheduleRenderingUpdateForPendingTileCacheRepaint;
- (void)toggleItalic:(id)a0;
- (void)setCaretChangeListener:(id)a0;
- (void)_didFinishScrollingOrZooming;
- (void)pasteAsPlainText:(id)a0;
- (BOOL)_pluginsAreRunning;
- (id)candidateList;
- (BOOL)_isViewVisible;
- (BOOL)_isClosing;
- (id)typingAttributes;
- (void)outdent:(id)a0;
- (id)userAgentForURL:(id)a0;
- (int)_visibilityState;
- (void)_updateActiveState;
- (double)_pageLength;
- (void)_willStartScrollingOrZooming;
- (void)alignCenter:(id)a0;
- (void)toggleUnderline:(id)a0;
- (void)_setFormDelegate:(id)a0;
- (BOOL)_requestStartDataInteraction:(struct CGPoint { double x0; double x1; })a0 globalPosition:(struct CGPoint { double x0; double x1; })a1;
- (id)_getDataInteractionData;
- (id)_formDelegate;
- (BOOL)usesPageCache;
- (id)_policyDelegateForwarder;
- (id)_UIKitDelegateForwarder;
- (id)_UIDelegateForwarder;
- (void)_addObject:(id)a0 forIdentifier:(unsigned long long)a1;
- (void)_removeObjectForIdentifier:(unsigned long long)a0;
- (void)_didCommitLoadForFrame:(id)a0;
- (id)_webMailDelegate;
- (void)setMainFrameDocumentReady:(BOOL)a0;
- (id)_downloadURL:(id)a0;
- (BOOL)_canShowMIMEType:(id)a0;
- (void)_stopAllPlugInsForPageCache;
- (void)_restorePlugInsFromCache;
- (id)_pluginForExtension:(id)a0;
- (id)_pluginForMIMEType:(id)a0;
- (id)scriptDebugDelegate;
- (float)_realZoomMultiplier;
- (BOOL)_realZoomMultiplierIsTextOnly;
- (void)_setZoomMultiplier:(float)a0 isTextOnly:(BOOL)a1;
- (void)_stopAllPlugIns;
- (void)_startAllPlugIns;
- (void)_setDeviceOrientation:(unsigned long long)a0;
- (void)scrollToBeginningOfDocument:(id)a0;
- (void)scrollToEndOfDocument:(id)a0;
- (void)scrollPageUp:(id)a0;
- (void)scrollPageDown:(id)a0;
- (void)scrollLineUp:(id)a0;
- (void)scrollLineDown:(id)a0;
- (id)_webcore_effectiveFirstResponder;
- (id)_editingDelegateForwarder;
- (void)_didScrollDocumentInFrameView:(id)a0;
- (BOOL)_flushCompositingChanges;
- (void)_documentScaleChanged;
- (BOOL)_isUsingAcceleratedCompositing;
- (BOOL)searchFor:(id)a0 direction:(BOOL)a1 caseSensitive:(BOOL)a2 wrap:(BOOL)a3 startInSelection:(BOOL)a4;
- (void)prepareForMouseDown;
- (void)prepareForMouseUp;
- (BOOL)_isPerformingProgrammaticFocus;
- (void)selectWord:(id)a0;
- (BOOL)searchFor:(id)a0 direction:(BOOL)a1 caseSensitive:(BOOL)a2 wrap:(BOOL)a3;
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)a0;
- (void)deleteToBeginningOfParagraph:(id)a0;
- (void)deleteToEndOfLine:(id)a0;
- (void)deleteToMark:(id)a0;
- (void)deleteWordForward:(id)a0;
- (void)ignoreSpelling:(id)a0;
- (void)insertLineBreak:(id)a0;
- (void)moveParagraphBackwardAndModifySelection:(id)a0;
- (void)moveParagraphForwardAndModifySelection:(id)a0;
- (void)moveToBeginningOfLine:(id)a0;
- (void)moveToBeginningOfLineAndModifySelection:(id)a0;
- (void)moveToBeginningOfSentence:(id)a0;
- (void)moveToBeginningOfSentenceAndModifySelection:(id)a0;
- (void)moveToEndOfLine:(id)a0;
- (void)moveToEndOfLineAndModifySelection:(id)a0;
- (void)moveToEndOfSentence:(id)a0;
- (void)moveToEndOfSentenceAndModifySelection:(id)a0;
- (void)overWrite:(id)a0;
- (void)pageDown:(id)a0;
- (void)pageDownAndModifySelection:(id)a0;
- (void)pageUpAndModifySelection:(id)a0;
- (void)selectLine:(id)a0;
- (void)selectParagraph:(id)a0;
- (void)selectSentence:(id)a0;
- (void)selectToMark:(id)a0;
- (void)subscript:(id)a0;
- (void)superscript:(id)a0;
- (void)swapWithMark:(id)a0;
- (void)underline:(id)a0;
- (void)unscript:(id)a0;
- (void)yankAndSelect:(id)a0;
- (void)clearText:(id)a0;
- (void)centerSelectionInVisibleArea:(id)a0;
- (void)uppercaseWord:(id)a0;
- (void)lowercaseWord:(id)a0;
- (void)capitalizeWord:(id)a0;
- (void)unmarkAllTextMatches;
- (id)rectsForTextMatches;
- (void)_removeFromAllWebViewsSet;
- (void)_addToAllWebViewsSet;
- (void)updateTouchBar;
- (void)_injectLaBanquePostaleQuirks;
- (void)_updateScreenScaleFromWindow;
- (void)_wakWindowScreenScaleChanged:(id)a0;
- (void)_wakWindowVisibilityChanged:(id)a0;
- (void)_setIsVisible:(BOOL)a0;
- (void)_preferencesChangedNotification:(id)a0;
- (void)_commonInitializationWithFrameName:(id)a0 groupName:(id)a1;
- (void)setMaintainsBackForwardList:(BOOL)a0;
- (struct Frame { void /* function */ **x0; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x0; } x0; } x1; struct Ref<WebCore::WindowProxy, WTF::DumbPtrTraits<WebCore::WindowProxy> > { struct WindowProxy *x0; } x2; struct HashSet<WebCore::FrameDestructionObserver *, WTF::DefaultHash<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *> > { struct HashTable<WebCore::FrameDestructionObserver *, WebCore::FrameDestructionObserver *, WTF::IdentityExtractor, WTF::DefaultHash<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *> > { struct FrameDestructionObserver **x0; } x0; } x3; struct Vector<std::__1::pair<WTF::Ref<WebCore::DOMWrapperWorld, WTF::DumbPtrTraits<WebCore::DOMWrapperWorld> >, WTF::UniqueRef<WebCore::UserScript> >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct pair<WTF::Ref<WebCore::DOMWrapperWorld, WTF::DumbPtrTraits<WebCore::DOMWrapperWorld> >, WTF::UniqueRef<WebCore::UserScript> > *x0; unsigned int x1; unsigned int x2; } x4; struct Frame *x5; struct Page *x6; struct RefPtr<WebCore::Settings, WTF::DumbPtrTraits<WebCore::Settings> > { struct Settings *x0; } x7; struct FrameTree { struct Frame *x0; struct Frame *x1; struct AtomString { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; } x2; struct AtomString { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; } x3; struct RefPtr<WebCore::Frame, WTF::DumbPtrTraits<WebCore::Frame> > { struct Frame *x0; } x4; struct Frame *x5; struct RefPtr<WebCore::Frame, WTF::DumbPtrTraits<WebCore::Frame> > { struct Frame *x0; } x6; struct Frame *x7; unsigned int x8; unsigned long long x9; } x8; struct UniqueRef<WebCore::FrameLoader> { struct unique_ptr<WebCore::FrameLoader, std::__1::default_delete<WebCore::FrameLoader> > { struct __compressed_pair<WebCore::FrameLoader *, std::__1::default_delete<WebCore::FrameLoader> > { struct FrameLoader *x0; } x0; } x0; } x9; struct UniqueRef<WebCore::NavigationScheduler> { struct unique_ptr<WebCore::NavigationScheduler, std::__1::default_delete<WebCore::NavigationScheduler> > { struct __compressed_pair<WebCore::NavigationScheduler *, std::__1::default_delete<WebCore::NavigationScheduler> > { struct NavigationScheduler *x0; } x0; } x0; } x10; struct HTMLFrameOwnerElement *x11; struct RefPtr<WebCore::FrameView, WTF::DumbPtrTraits<WebCore::FrameView> > { struct FrameView *x0; } x12; struct RefPtr<WebCore::Document, WTF::DumbPtrTraits<WebCore::Document> > { struct Document *x0; } x13; struct UniqueRef<WebCore::ScriptController> { struct unique_ptr<WebCore::ScriptController, std::__1::default_delete<WebCore::ScriptController> > { struct __compressed_pair<WebCore::ScriptController *, std::__1::default_delete<WebCore::ScriptController> > { struct ScriptController *x0; } x0; } x0; } x14; struct UniqueRef<WebCore::CSSAnimationController> { struct unique_ptr<WebCore::CSSAnimationController, std::__1::default_delete<WebCore::CSSAnimationController> > { struct __compressed_pair<WebCore::CSSAnimationController *, std::__1::default_delete<WebCore::CSSAnimationController> > { struct CSSAnimationController *x0; } x0; } x0; } x15; struct RetainPtr<NSArray> { void *x0; } x16; struct ViewportArguments { int x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; int x13; BOOL x14; } x17; BOOL x18; struct VisibleSelection { struct Position { struct RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> > { struct Node *x0; } x0; unsigned int x1; unsigned char x2 : 3; unsigned char x3 : 1; } x0; struct Position { struct RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> > { struct Node *x0; } x0; unsigned int x1; unsigned char x2 : 3; unsigned char x3 : 1; } x1; struct Position { struct RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> > { struct Node *x0; } x0; unsigned int x1; unsigned char x2 : 3; unsigned char x3 : 1; } x2; struct Position { struct RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> > { struct Node *x0; } x0; unsigned int x1; unsigned char x2 : 3; unsigned char x3 : 1; } x3; int x4; int x5; unsigned char x6 : 1; unsigned char x7 : 1; } x19; struct VisibleSelection { struct Position { struct RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> > { struct Node *x0; } x0; unsigned int x1; unsigned char x2 : 3; unsigned char x3 : 1; } x0; struct Position { struct RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> > { struct Node *x0; } x0; unsigned int x1; unsigned char x2 : 3; unsigned char x3 : 1; } x1; struct Position { struct RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> > { struct Node *x0; } x0; unsigned int x1; unsigned char x2 : 3; unsigned char x3 : 1; } x2; struct Position { struct RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> > { struct Node *x0; } x0; unsigned int x1; unsigned char x2 : 3; unsigned char x3 : 1; } x3; int x4; int x5; unsigned char x6 : 1; unsigned char x7 : 1; } x20; float x21; float x22; int x23; BOOL x24; unsigned int x25; unsigned int x26; BOOL x27; unsigned int x28; struct UniqueRef<WebCore::EventHandler> { struct unique_ptr<WebCore::EventHandler, std::__1::default_delete<WebCore::EventHandler> > { struct __compressed_pair<WebCore::EventHandler *, std::__1::default_delete<WebCore::EventHandler> > { struct EventHandler *x0; } x0; } x0; } x29; } *)_mainCoreFrame;
- (unsigned long long)dragDestinationActionMaskForSession:(id)a0;
- (struct DragData { struct IntPoint { int x0; int x1; } x0; struct IntPoint { int x0; int x1; } x1; void *x2; struct OptionSet<WebCore::DragOperation> { unsigned char x0; } x3; struct OptionSet<WebCore::DragApplicationFlags> { unsigned char x0; } x4; struct Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct String *x0; unsigned int x1; unsigned int x2; } x5; struct OptionSet<WebCore::DragDestinationAction> { unsigned char x0; } x6; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x7; })dragDataForSession:(id)a0 client:(struct CGPoint { double x0; double x1; })a1 global:(struct CGPoint { double x0; double x1; })a2 operation:(unsigned long long)a3;
- (void)hideFormValidationMessage;
- (void)_closePluginDatabases;
- (void)_closeWithFastTeardown;
- (id)_notificationProvider;
- (void)_setUseDarkAppearance:(BOOL)a0 useElevatedUserInterfaceLevel:(BOOL)a1;
- (void)_invalidateUserAgentCache;
- (BOOL)_needsPreHTML5ParserQuirks;
- (BOOL)interactiveFormValidationEnabled;
- (int)validationMessageTimerMagnification;
- (void)caretChanged;
- (void)removeAllCaretChangeListeners;
- (void)setWebMailDelegate:(id)a0;
- (void)setScriptDebugDelegate:(id)a0;
- (BOOL)_locked_plugInsAreRunningInFrame:(id)a0;
- (void)_locked_recursivelyPerformPlugInSelector:(SEL)a0 inFrame:(id)a1;
- (void)_synchronizeCustomFixedPositionLayoutRect;
- (void)_viewWillDrawInternal;
- (id)currentNodeHighlight;
- (void)_setBrowserUserAgentProductVersion:(id)a0 buildVersion:(id)a1 bundleVersion:(id)a2;
- (void)_dispatchPendingLoadRequests;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 frameName:(id)a1 groupName:(id)a2;
- (void)_replaceCurrentHistoryItem:(id)a0;
- (void)updateLayoutIgnorePendingStyleSheets;
- (void)_startDrag:(const struct DragItem { struct DragImage { struct RetainPtr<CGImage *> { void *x0; } x0; struct Optional<WebCore::TextIndicatorData> { BOOL x0; union storage_t<WebCore::TextIndicatorData> { unsigned char x0; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x2; struct Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct FloatRect *x0; unsigned int x1; unsigned int x2; } x3; float x4; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x5; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x6; struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > { struct Image *x0; } x7; struct Color { union { unsigned long long x0; struct ExtendedColor *x1; } x0; } x8; unsigned char x9; struct OptionSet<WebCore::TextIndicatorOption> { unsigned short x0; } x10; } x1; } x1; } x1; struct Optional<WebCore::Path> { BOOL x0; union storage_t<WebCore::Path> { unsigned char x0; struct Path { struct RetainPtr<CGPath *> { void *x0; } x0; struct Variant<WTF::Monostate, WebCore::MoveData, WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WTF::Monostate, WebCore::MoveData, WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WTF::Monostate> { struct Monostate { } x0; struct __dummy_type { } x1; } x0; union __variant_data<WebCore::MoveData, WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WebCore::MoveData> { struct __storage_wrapper<WebCore::MoveData> { struct type { unsigned char x0[8]; } x0; } x0; struct __dummy_type { } x1; } x0; union __variant_data<WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WebCore::LineData> { struct __storage_wrapper<WebCore::LineData> { struct type { unsigned char x0[16]; } x0; } x0; struct __dummy_type { } x1; } x0; union __variant_data<WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WebCore::ArcData> { struct __storage_wrapper<WebCore::ArcData> { struct type { unsigned char x0[32]; } x0; } x0; struct __dummy_type { } x1; } x0; union __variant_data<WebCore::QuadCurveData, WebCore::BezierCurveData> { union __variant_data<WebCore::QuadCurveData> { struct __storage_wrapper<WebCore::QuadCurveData> { struct type { unsigned char x0[24]; } x0; } x0; struct __dummy_type { } x1; } x0; union __variant_data<WebCore::BezierCurveData> { struct __storage_wrapper<WebCore::BezierCurveData> { struct type { unsigned char x0[32]; } x0; } x0; struct __dummy_type { } x1; } x1; } x1; } x1; } x1; } x1; } x0; char x1; } x1; BOOL x2; } x1; } x1; } x2; } x0; struct FloatPoint { float x0; float x1; } x1; struct Optional<WebCore::DragSourceAction> { BOOL x0; union constexpr_storage_t<WebCore::DragSourceAction> { unsigned char x0; unsigned char x1; } x1; } x2; struct IntPoint { int x0; int x1; } x3; struct IntPoint { int x0; int x1; } x4; struct IntPoint { int x0; int x1; } x5; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x6; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x7; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x8; struct PasteboardWriterData { struct Optional<WebCore::PasteboardWriterData::PlainText> { BOOL x0; union storage_t<WebCore::PasteboardWriterData::PlainText> { unsigned char x0; struct PlainText { BOOL x0; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x1; } x1; } x1; } x0; struct Optional<WebCore::PasteboardWriterData::URLData> { BOOL x0; union storage_t<WebCore::PasteboardWriterData::URLData> { unsigned char x0; struct URLData { struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x0; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x1; } x1; } x1; } x1; struct Optional<WebCore::PasteboardWriterData::WebContent> { BOOL x0; union storage_t<WebCore::PasteboardWriterData::WebContent> { unsigned char x0; struct WebContent { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; BOOL x1; struct RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> > { struct SharedBuffer *x0; } x2; struct RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> > { struct SharedBuffer *x0; } x3; struct RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> > { struct SharedBuffer *x0; } x4; struct RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> > { struct SharedBuffer *x0; } x5; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x6; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x7; struct Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct String *x0; unsigned int x1; unsigned int x2; } x8; struct Vector<WTF::RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> > *x0; unsigned int x1; unsigned int x2; } x9; } x1; } x1; } x2; } x9; struct PromisedAttachmentInfo { struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x0; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 3; unsigned int x5 : 26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x0; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x1; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x2; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl *x0; } x0; } x3; struct Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct String *x0; unsigned int x1; unsigned int x2; } x4; struct Vector<WTF::RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct RefPtr<WebCore::SharedBuffer, WTF::DumbPtrTraits<WebCore::SharedBuffer> > *x0; unsigned int x1; unsigned int x2; } x5; } x10; } *)a0;
- (void)_performDataInteraction:(id)a0 client:(struct CGPoint { double x0; double x1; })a1 global:(struct CGPoint { double x0; double x1; })a2 operation:(unsigned long long)a3;
- (void)_didConcludeEditDrag;
- (BOOL)_viewClass:(Class *)a0 andRepresentationClass:(Class *)a1 forMIMEType:(id)a2;
- (void)_dispatchUnloadEvent;
- (id)styleAtSelectionStart;
- (void)_setResourceLoadSchedulerSuspended:(BOOL)a0;
- (id)_openNewWindowWithRequest:(id)a0;
- (BOOL)allowsRemoteInspection;
- (void)setAllowsRemoteInspection:(BOOL)a0;
- (void)_setHostApplicationProcessIdentifier:(int)a0 auditToken:(struct { unsigned int x0[8]; })a1;
- (void)_mouseDidMoveOverElement:(id)a0 modifierFlags:(unsigned long long)a1;
- (void)_loadBackForwardListFromOtherView:(id)a0;
- (id)_formDelegateForwarder;
- (id)_formDelegateForSelector:(SEL)a0;
- (void)_cacheResourceLoadDelegateImplementations;
- (void)_cacheFrameLoadDelegateImplementations;
- (void)_cacheScriptDebugDelegateImplementations;
- (void)_cacheHistoryDelegateImplementations;
- (id)_UIDelegateForSelector:(SEL)a0;
- (void)_pushPerformingProgrammaticFocus;
- (void)_popPerformingProgrammaticFocus;
- (id)caretChangeListener;
- (id)caretChangeListeners;
- (void)addCaretChangeListener:(id)a0;
- (void)removeCaretChangeListener:(id)a0;
- (id)_displayURL;
- (void)_setUseFastImageScalingMode:(BOOL)a0;
- (BOOL)_inFastImageScalingMode;
- (BOOL)_cookieEnabled;
- (void)_setCookieEnabled:(BOOL)a0;
- (void)_destroyAllPlugIns;
- (void)_setNeedsUnrestrictedGetMatchedCSSRules:(BOOL)a0;
- (void)_attachScriptDebuggerToAllFrames;
- (void)_detachScriptDebuggerFromAllFrames;
- (id)quickLookContentForURL:(id)a0;
- (BOOL)_isStopping;
- (void)_setAllowsMessaging:(BOOL)a0;
- (BOOL)_allowsMessaging;
- (BOOL)_fetchCustomFixedPositionLayoutRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0;
- (id)textIteratorForRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_executeCoreCommandByName:(id)a0 value:(id)a1;
- (void)_clearMainFrameName;
- (void)setSelectTrailingWhitespaceEnabled:(BOOL)a0;
- (BOOL)isSelectTrailingWhitespaceEnabled;
- (void)setMemoryCacheDelegateCallsEnabled:(BOOL)a0;
- (BOOL)areMemoryCacheDelegateCallsEnabled;
- (BOOL)_postsAcceleratedCompositingNotifications;
- (void)_setPostsAcceleratedCompositingNotifications:(BOOL)a0;
- (void)_setBaseCTM:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a0 forContext:(struct CGContext { } *)a1;
- (void)setInteractiveFormValidationEnabled:(BOOL)a0;
- (void)setValidationMessageTimerMagnification:(int)a0;
- (BOOL)_isSoftwareRenderable;
- (void)setTracksRepaints:(BOOL)a0;
- (BOOL)isTrackingRepaints;
- (void)resetTrackedRepaints;
- (id)trackedRepaintRects;
- (void)_forceRepaintForTesting;
- (void)_scaleWebView:(float)a0 atOrigin:(struct CGPoint { double x0; double x1; })a1;
- (void)_setUseFixedLayout:(BOOL)a0;
- (BOOL)_useFixedLayout;
- (void)_listenForLayoutMilestones:(unsigned long long)a0;
- (unsigned long long)_layoutMilestones;
- (void)_setVisibilityState:(int)a0 isInitialState:(BOOL)a1;
- (unsigned long long)markAllMatchesForText:(id)a0 caseSensitive:(BOOL)a1 highlight:(BOOL)a2 limit:(unsigned long long)a3;
- (unsigned long long)countMatchesForText:(id)a0 caseSensitive:(BOOL)a1 highlight:(BOOL)a2 limit:(unsigned long long)a3 markMatches:(BOOL)a4;
- (BOOL)_wantsTelephoneNumberParsing;
- (BOOL)_webGLEnabled;
- (void)_setWebGLEnabled:(BOOL)a0;
- (void)showCandidates:(id)a0 forString:(id)a1 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 forSelectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 view:(id)a4 completionHandler:(id /* block */)a5;
- (void)forceRequestCandidatesForTesting;
- (BOOL)shouldRequestCandidates;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 frameName:(id)a1 groupName:(id)a2;
- (id)_focusedFrame;
- (float)_zoomMultiplier:(BOOL)a0;
- (id)_mainFrameOverrideEncoding;
- (id)_frameViewAtWindowPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)_elementAtWindowPoint:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)_isMIMETypeRegisteredAsPlugin:(id)a0;
- (id)_initWithArguments:(id)a0;
- (id)_resourceLoadDelegateForwarder;
- (id)_frameLoadDelegateForwarder;
- (BOOL)_canZoomOut:(BOOL)a0;
- (BOOL)_canZoomIn:(BOOL)a0;
- (void)_zoomOut:(id)a0 isTextOnly:(BOOL)a1;
- (void)_zoomIn:(id)a0 isTextOnly:(BOOL)a1;
- (BOOL)_canResetZoom:(BOOL)a0;
- (void)_resetZoom:(id)a0 isTextOnly:(BOOL)a1;
- (id)documentViewAtWindowPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)mainFrameIconURL;
- (void)setCurrentNodeHighlight:(id)a0;
- (BOOL)_continuousCheckingAllowed;
- (id)_responderForResponderOperations;
- (void)takeStringURLFrom:(id)a0;
- (void)stopLoadingAndClear;
- (void)reloadFromOrigin:(id)a0;
- (void)makeTextSmaller:(id)a0;
- (void)makeTextLarger:(id)a0;
- (void)makeTextStandardSize:(id)a0;
- (void)toggleContinuousSpellChecking:(id)a0;
- (id)_selectedOrMainFrame;
- (unsigned long long)countMatchesForText:(id)a0 inDOMRange:(id)a1 options:(unsigned long long)a2 highlight:(BOOL)a3 limit:(unsigned long long)a4 markMatches:(BOOL)a5;
- (id)DOMRangeOfString:(id)a0 relativeTo:(id)a1 options:(unsigned long long)a2;
- (void)setTabKeyCyclesThroughElements:(BOOL)a0;
- (BOOL)tabKeyCyclesThroughElements;
- (BOOL)shouldClose;
- (BOOL)canMarkAllTextMatches;
- (void)scrollDOMRangeToVisible:(id)a0;
- (void)scrollDOMRangeToVisible:(id)a0 withInset:(double)a1;
- (BOOL)allowsUndo;
- (void)setAllowsUndo:(BOOL)a0;
- (void)setPageSizeMultiplier:(float)a0;
- (float)pageSizeMultiplier;
- (BOOL)canZoomPageIn;
- (void)zoomPageIn:(id)a0;
- (BOOL)canZoomPageOut;
- (void)zoomPageOut:(id)a0;
- (BOOL)canResetPageZoom;
- (void)resetPageZoom:(id)a0;
- (void)suspendAllMediaPlayback;
- (void)resumeAllMediaPlayback;
- (void)addVisitedLinks:(id)a0;
- (void)removeVisitedLink:(id)a0;
- (id)computedStyleForElement:(id)a0 pseudoElement:(id)a1;
- (void)registerForEditingDelegateNotification:(id)a0 selector:(SEL)a1;
- (id)editableDOMRangeForPoint:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)_shouldChangeSelectedDOMRange:(id)a0 toDOMRange:(id)a1 affinity:(unsigned long long)a2 stillSelecting:(BOOL)a3;
- (void)_setMaintainsInactiveSelection:(BOOL)a0;
- (id)styleDeclarationWithText:(id)a0;
- (BOOL)isAutomaticQuoteSubstitutionEnabled;
- (BOOL)isAutomaticLinkDetectionEnabled;
- (BOOL)isAutomaticDashSubstitutionEnabled;
- (BOOL)isAutomaticTextReplacementEnabled;
- (BOOL)isAutomaticSpellingCorrectionEnabled;
- (void)replaceSelectionWithNode:(id)a0;
- (void)replaceSelectionWithText:(id)a0;
- (void)replaceSelectionWithMarkupString:(id)a0;
- (void)replaceSelectionWithArchive:(id)a0;
- (void)deleteSelection;
- (void)_performResponderOperation:(SEL)a0 with:(id)a1;
- (void)changeBaseWritingDirection:(id)a0;
- (void)changeBaseWritingDirectionToLTR:(id)a0;
- (void)changeBaseWritingDirectionToRTL:(id)a0;
- (void)changeColor:(id)a0;
- (void)changeDocumentBackgroundColor:(id)a0;
- (void)changeFont:(id)a0;
- (void)changeSpelling:(id)a0;
- (void)checkSpelling:(id)a0;
- (void)copyFont:(id)a0;
- (void)makeBaseWritingDirectionLeftToRight:(id)a0;
- (void)makeBaseWritingDirectionRightToLeft:(id)a0;
- (void)orderFrontSubstitutionsPanel:(id)a0;
- (void)pasteAsRichText:(id)a0;
- (void)pasteFont:(id)a0;
- (void)performFindPanelAction:(id)a0;
- (void)showGuessPanel:(id)a0;
- (void)startSpeaking:(id)a0;
- (void)takeFindStringFromSelection:(id)a0;
- (void)toggleBaseWritingDirection:(id)a0;
- (void)_insertNewlineInQuotedContent;
- (void)_replaceSelectionWithNode:(id)a0 matchStyle:(BOOL)a1;
- (BOOL)_selectionIsCaret;
- (BOOL)_selectionIsAll;
- (void)_simplifyMarkup:(id)a0 endNode:(id)a1;
- (void)_retrieveKeyboardUIModeFromPreferences:(id)a0;
- (BOOL)_becomingFirstResponderFromOutside;
- (int)_keyboardUIMode;
- (void)_clearCredentials;
- (BOOL)_needsOneShotDrawingSynchronization;
- (void)_setNeedsOneShotDrawingSynchronization:(BOOL)a0;
- (void)_scheduleUpdateRendering;
- (void)_enterVideoFullscreenForVideoElement:(struct NakedPtr<WebCore::HTMLVideoElement> { struct HTMLVideoElement *x0; })a0 mode:(unsigned int)a1;
- (void)_exitVideoFullscreen;
- (void)_getWebCoreDictationAlternatives:(struct Vector<WebCore::DictationAlternative, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct DictationAlternative *x0; unsigned int x1; unsigned int x2; } *)a0 fromTextAlternatives:(const struct Vector<WebCore::TextAlternativeWithRange, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct TextAlternativeWithRange *x0; unsigned int x1; unsigned int x2; } *)a1;
- (void)_showDictationAlternativeUI:(const struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } *)a0 forDictationContext:(struct ObjectIdentifier<WebCore::DictationContextType> { unsigned long long x0; })a1;
- (void)_removeDictationAlternatives:(struct ObjectIdentifier<WebCore::DictationContextType> { unsigned long long x0; })a0;
- (struct Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> { struct String *x0; unsigned int x1; unsigned int x2; })_dictationAlternatives:(struct ObjectIdentifier<WebCore::DictationContextType> { unsigned long long x0; })a0;
- (struct CGPoint { double x0; double x1; })_convertPointFromRootView:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_convertRectFromRootView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)showFormValidationMessage:(id)a0 withAnchorRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)_windowVisibilityChanged:(id)a0;
- (void)_closeWindow;
- (void)_setDeviceOrientationProvider:(id)a0;
- (id)_deviceOrientationProvider;
- (void)_setGeolocationProvider:(id)a0;
- (void)_geolocationDidChangePosition:(id)a0;
- (void)_geolocationDidFailWithMessage:(id)a0;
- (void)_resetAllGeolocationPermission;
- (void)_setNotificationProvider:(id)a0;
- (void)_notificationDidShow:(unsigned long long)a0;
- (void)_notificationDidClick:(unsigned long long)a0;
- (void)_notificationsDidClose:(id)a0;
- (unsigned long long)_notificationIDForTesting:(struct OpaqueJSValue { } *)a0;
- (id)fullScreenPlaceholderView;

@end
