@class NSString, MNLocation, MNNavigationSession, GEOComposedGuidanceEvent, NSMutableDictionary, NSDictionary, MNJunctionViewImageLoader, NSMutableArray, NSMutableSet, MNGuidanceSignInfo, MNAnnouncementPlanEvent, NSArray;
@protocol MNAnnoucementStrategy, MNGuidanceManagerDelegate;

@interface MNGuidanceEventManager : NSObject <MNGuidanceManager, MNTimeManagerObserver> {
    MNNavigationSession *_navigationSession;
    MNJunctionViewImageLoader *_junctionViewImageLoader;
    GEOComposedGuidanceEvent *_nextEvent;
    NSDictionary *_eventIndexes;
    id<MNAnnoucementStrategy> _announcementStrategy;
    NSMutableDictionary *_announcementsSpoken;
    NSMutableSet *_exclusiveSetAnnouncementsSpoken;
    NSMutableDictionary *_hapticsTriggered;
    NSMutableSet *_announcementsSynthesized;
    GEOComposedGuidanceEvent *_currentLaneGuidanceEvent;
    MNGuidanceSignInfo *_signInfo;
    GEOComposedGuidanceEvent *_pendingJunctionViewGuidanceEvent;
    GEOComposedGuidanceEvent *_currentJunctionViewGuidanceEvent;
    NSMutableDictionary *_specialSpokenEvents;
    NSMutableDictionary *_specialSignEvents;
    BOOL _hasBeenOnRouteOnce;
    BOOL _canSpeakReturnToRouteAnnouncement;
    double _timeLastAnnouncementStarted;
    double _timeLastAnnouncementEnded;
    MNAnnouncementPlanEvent *_lastAnnouncementEvent;
    unsigned long long _lastStepIndex;
    BOOL _hasStickyEvents;
    NSMutableArray *_validEvents;
    NSMutableDictionary *_feedback;
    NSArray *_previousSignEvents;
    GEOComposedGuidanceEvent *_previousLaneGuidanceEvent;
}

@property (readonly, nonatomic) NSMutableArray *events;
@property (retain, nonatomic) MNLocation *location;
@property (nonatomic) double speed;
@property (nonatomic) BOOL isInPreArrivalState;
@property (nonatomic) BOOL shouldShowChargingInfo;
@property (weak, nonatomic) id<MNGuidanceManagerDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setJunctionViewImageWidth:(double)a0 height:(double)a1;
- (void)updateDestination:(id)a0;
- (void).cxx_destruct;
- (void)reset;
- (void)dealloc;
- (void)stop;
- (void)updateForReroute:(id)a0;
- (double)timeSinceLastAnnouncement;
- (double)timeUntilNextAnnouncement;
- (double)durationOfEvent:(id)a0 announcementIndex:(unsigned long long)a1 distance:(double)a2;
- (void)updateGuidanceForLocation:(id)a0 navigatorState:(int)a1;
- (BOOL)repeatLastGuidanceAnnouncement:(id)a0;
- (void)_initSpecialGuidanceEvents;
- (id)_specialSpokenEvents:(int)a0 forLeg:(unsigned long long)a1;
- (void)_markEventSpoken:(id)a0;
- (void)_cacheStartingAudioEvents;
- (BOOL)_isSpecialGuidanceEvent:(id)a0;
- (BOOL)_hasSpokenEvent:(id)a0;
- (double)_adjustedVehicleSpeed;
- (BOOL)_isValidEvent:(id)a0;
- (void)_notifySpeechEvent:(id)a0 variant:(unsigned long long)a1 ignorePromptStyle:(BOOL)a2;
- (double)_timeUntilEventTrigger:(id)a0;
- (void)_cacheAudioEventIfNecessary:(id)a0;
- (void)_filterValidEvents;
- (void)_cacheValidAudioEvents;
- (id)_junctionViewEvents;
- (double)_distanceToEndOfRoute;
- (void)_stepDidChange;
- (void)_considerAnnouncements;
- (void)_considerHaptics;
- (void)_considerLaneGuidance;
- (void)_considerSignGuidance;
- (void)_considerStickiness;
- (void)_considerJunctionViewGuidance;
- (void)_cacheEndingAudioEvents;
- (id)_spokenEventsRemainingInStep;
- (double)_distanceToRouteCoordinate:(struct { unsigned int x0; float x1; })a0;
- (int)_indexForEventUUID:(id)a0;
- (void)_notifyAnalyticsForNewEvents:(id)a0 previousEvents:(id)a1;
- (id)_specialSignEvents:(int)a0 forLeg:(unsigned long long)a1;
- (BOOL)_isEVChargingEvent:(id)a0;
- (id)_serverStringDictionaryForChargingEvent:(id)a0;
- (void)_handleJunctionViewInfo:(id)a0;
- (unsigned int)_trafficColorForRoute:(id)a0 traffic:(id)a1 distanceRemaining:(double)a2;
- (double)_timeRemainingForEvent:(id)a0;
- (id)_selectAnnouncementForEvent:(id)a0 withTimeRemaining:(double)a1 withMinIndex:(unsigned long long)a2 selectedIndex:(out unsigned long long *)a3;
- (id)_serverStringDictionaryForEvent:(id)a0 spoken:(BOOL)a1;
- (void)timeManagerDidChangeProvider:(id)a0;
- (id)initWithNavigationSession:(id)a0 isReconnecting:(BOOL)a1;
- (BOOL)_shouldUseLocation:(id)a0;

@end
