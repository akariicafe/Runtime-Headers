@class SMBSocket, NSMutableDictionary, NSString;

@interface SMBPiston : NSObject {
    struct smb_session { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } session_lock; unsigned int sv_caps; unsigned short sv_sessflags; unsigned short sv_dialect; unsigned short sv_neg_context_cnt; unsigned int sv_capabilities; unsigned int sv_maxtransact; unsigned int sv_maxread; unsigned int sv_maxwrite; unsigned char sv_guid[16]; unsigned short sv_security_mode; unsigned int sv_mechs; struct gss_ctx_id_t_desc_struct *gss_context; struct gss_cred_id_t_desc_struct *gss_cred; struct gss_buffer_desc_struct { unsigned long long length; void *value; } gss_in_token; struct gss_buffer_desc_struct { unsigned long long length; void *value; } gss_out_token; unsigned int sess_setup_nt_status; unsigned int neg_capabilities; unsigned char client_guid[16]; unsigned short neg_security_mode; unsigned short neg_dialect_count; unsigned short neg_dialects[8]; char *session_key; unsigned int session_key_len; char *smb3_signing_key; unsigned int smb3_signing_key_len; unsigned char smb3_encrypt_key[16]; unsigned int smb3_encrypt_key_len; unsigned char smb3_decrypt_key[16]; unsigned int smb3_decrypt_key_len; unsigned long long smb3_nonce_high; unsigned long long smb3_nonce_low; unsigned long long session_flags; unsigned long long option_flags; unsigned long long session_id; unsigned long long prev_session_id; unsigned long long session_server_caps; unsigned long long session_volume_caps; char *session_model_infop; struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } session_credits_lock; _Atomic unsigned long long session_message_id; _Atomic unsigned int session_credits_granted; _Atomic unsigned int session_credits_ss_granted; _Atomic unsigned int session_credits_max; _Atomic int session_credits_wait; struct _opaque_pthread_cond_t { long long __sig; char __opaque[40]; } session_credits_wait_cond; unsigned int session_req_pending; unsigned long long session_oldest_message_id; } session;
    int free_state_mutex;
    int free_credit_mutex;
    int free_credit_cond;
    int free_share_list_mutex;
    int free_session_mutex;
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } state_mutex;
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } share_list_mutex;
}

@property (retain) NSMutableDictionary *shareList;
@property (weak) SMBSocket *sock;
@property (retain) NSString *userName;
@property (retain) NSString *password;
@property (retain) NSString *realm;

- (void)disconnect;
- (void)setEventHandler:(id /* block */)a0;
- (id)init;
- (void).cxx_destruct;
- (void)dealloc;
- (void)logoff;
- (id)getShare:(unsigned int)a0;
- (struct smb_session { struct _opaque_pthread_mutex_t { long long x0; char x1[56]; } x0; unsigned int x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned char x9[16]; unsigned short x10; unsigned int x11; struct gss_ctx_id_t_desc_struct *x12; struct gss_cred_id_t_desc_struct *x13; struct gss_buffer_desc_struct { unsigned long long x0; void *x1; } x14; struct gss_buffer_desc_struct { unsigned long long x0; void *x1; } x15; unsigned int x16; unsigned int x17; unsigned char x18[16]; unsigned short x19; unsigned short x20; unsigned short x21[8]; char *x22; unsigned int x23; char *x24; unsigned int x25; unsigned char x26[16]; unsigned int x27; unsigned char x28[16]; unsigned int x29; unsigned long long x30; unsigned long long x31; unsigned long long x32; unsigned long long x33; unsigned long long x34; unsigned long long x35; unsigned long long x36; unsigned long long x37; char *x38; struct _opaque_pthread_mutex_t { long long x0; char x1[56]; } x39; _Atomic unsigned long long x40; _Atomic unsigned int x41; _Atomic unsigned int x42; _Atomic unsigned int x43; _Atomic int x44; struct _opaque_pthread_cond_t { long long x0; char x1[40]; } x45; unsigned int x46; unsigned long long x47; } *)getSessionPtr;
- (void)share_list_lock;
- (void)share_list_unlock;
- (void)negotiateTo:(id)a0 netBIOSname:(id)a1 withVPNCookie:(id)a2 outParameters:(struct smb_negotiate { unsigned int x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4[3]; unsigned char x5[16]; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; } *)a3 callBack:(id /* block */)a4;
- (void)negotiateTo:(id)a0 netBIOSname:(id)a1 outParameters:(struct smb_negotiate { unsigned int x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4[3]; unsigned char x5[16]; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; } *)a2 callBack:(id /* block */)a3;
- (void)negotiateTo:(id)a0 netBIOSname:(id)a1 port:(unsigned short)a2 outParameters:(struct smb_negotiate { unsigned int x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4[3]; unsigned char x5[16]; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; } *)a3 callBack:(id /* block */)a4;
- (void)negotiateTo:(id)a0 netBIOSname:(id)a1 port:(unsigned short)a2 withTimeOut:(unsigned int)a3 outParameters:(struct smb_negotiate { unsigned int x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4[3]; unsigned char x5[16]; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; } *)a4 callBack:(id /* block */)a5;
- (void)login:(struct smb_login_out { unsigned int x0; unsigned long long x1; unsigned int x2; unsigned short x3; unsigned long long x4; unsigned long long x5; } *)a0 asUser:(id)a1 withPassword:(id)a2 inRealm:(id)a3 callBack:(id /* block */)a4;
- (void)logoff:(struct smb_login_out { unsigned int x0; unsigned long long x1; unsigned int x2; unsigned short x3; unsigned long long x4; unsigned long long x5; } *)a0 callBack:(id /* block */)a1;
- (void)treeConnect:(struct smb_tree_connect_disc { unsigned int x0; unsigned char x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; } *)a0 toShare:(id)a1 callBack:(id /* block */)a2;
- (void)treeDisconnect:(struct smb_tree_connect_disc { unsigned int x0; unsigned char x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; } *)a0 fromShareID:(unsigned int)a1 callBack:(id /* block */)a2;
- (void)queryShareInformation:(struct smb_query_share { unsigned int x0; unsigned long long x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; unsigned long long x12; } *)a0 forShareID:(unsigned int)a1 forModelInfo:(id)a2 forFileSystemName:(id)a3 callBack:(id /* block */)a4;
- (void)leaseBreakAcknowledge:(struct smb_lease_break_ack { unsigned int x0; unsigned long long x1; unsigned long long x2; unsigned int x3; unsigned int x4; unsigned long long x5; unsigned long long x6; unsigned int x7; } *)a0 callBack:(id /* block */)a1;
- (void)ioctl:(struct smb_ioctl { unsigned int x0; unsigned int x1; unsigned short x2; unsigned int x3; struct smb_valid_neg { unsigned int x0; unsigned short x1; unsigned short x2; unsigned short x3[8]; unsigned char x4[16]; unsigned int x5; unsigned short x6; unsigned short x7; unsigned short x8[8]; unsigned char x9[16]; } x4; } *)a0 onShareID:(unsigned int)a1 getDFSRefFor:(id)a2 withRecvData:(id)a3 callBack:(id /* block */)a4;
- (void)ioctl:(struct smb_ioctl { unsigned int x0; unsigned int x1; unsigned short x2; unsigned int x3; struct smb_valid_neg { unsigned int x0; unsigned short x1; unsigned short x2; unsigned short x3[8]; unsigned char x4[16]; unsigned int x5; unsigned short x6; unsigned short x7; unsigned short x8[8]; unsigned char x9[16]; } x4; } *)a0 onShareID:(unsigned int)a1 pipeWaitOnName:(id)a2 withTimeOut:(long long)a3 callBack:(id /* block */)a4;
- (void)validateNegotiate:(struct smb_ioctl { unsigned int x0; unsigned int x1; unsigned short x2; unsigned int x3; struct smb_valid_neg { unsigned int x0; unsigned short x1; unsigned short x2; unsigned short x3[8]; unsigned char x4[16]; unsigned int x5; unsigned short x6; unsigned short x7; unsigned short x8[8]; unsigned char x9[16]; } x4; } *)a0 callBack:(id /* block */)a1;
- (void)validateNegotiate:(struct smb_ioctl { unsigned int x0; unsigned int x1; unsigned short x2; unsigned int x3; struct smb_valid_neg { unsigned int x0; unsigned short x1; unsigned short x2; unsigned short x3[8]; unsigned char x4[16]; unsigned int x5; unsigned short x6; unsigned short x7; unsigned short x8[8]; unsigned char x9[16]; } x4; } *)a0 onShareID:(unsigned int)a1 callBack:(id /* block */)a2;
- (void)serverCopyFile:(struct smb_server_copy_file { unsigned int x0; } *)a0 onShareID:(unsigned int)a1 from:(id)a2 to:(id)a3 withOptions:(unsigned long long)a4 callBack:(id /* block */)a5;
- (void)resolveID:(struct smb_create { unsigned long long x0; unsigned char x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; void *x8; unsigned int x9; unsigned int x10; unsigned char x11; unsigned char x12; unsigned int x13; unsigned long long x14; unsigned long long x15; unsigned long long x16; unsigned long long x17; unsigned long long x18; unsigned long long x19; unsigned int x20; unsigned int x21; struct { unsigned long long x0; unsigned long long x1; } x22; struct smb_resolve_id { unsigned long long x0; unsigned int x1; } x23; struct smb_dur_handle { unsigned long long x0; unsigned long long x1; unsigned int x2; unsigned long long x3; unsigned long long x4; unsigned short x5; unsigned int x6; unsigned char x7[16]; struct { unsigned long long x0; unsigned long long x1; } x8; unsigned long long x9; unsigned int x10; unsigned int x11; } x24; } *)a0 forShareID:(unsigned int)a1 returnPath:(id)a2 callBack:(id /* block */)a3;
- (unsigned int)getCreateOptions:(id)a0 parentName:(id)a1 streamName:(id)a2 vnodeType:(int)a3 fileAttributes:(unsigned int)a4 checkForReparsePoint:(unsigned int)a5;
- (unsigned int)getCreateOptions:(id)a0 onShareID:(unsigned int)a1 parentName:(id)a2 streamName:(id)a3 vnodeType:(int)a4 fileAttributes:(unsigned int)a5 checkForReparsePoint:(unsigned int)a6;
- (int)getPeerAddress:(struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } *)a0 withLength:(unsigned int *)a1;
- (void)setOption:(const char *)a0 toValue:(unsigned int)a1;

@end
