@class NSDictionary, NSURL, NSURLRequest, NSURLSession, NSMutableArray, NSString, CKDFlowControlManager, CKDTrafficLogger, NSMutableSet, CKDTapToRadarRequest, NSError, NSArray, NSMutableDictionary, NSInputStream, CKDProtobufStreamWriter, NSObject, NSData, CKDResponseBodyParser, NSURLSessionDataTask, C2RequestOptions, NSHTTPURLResponse, CKDOperation, NSDate, CKDProtocolTranslator, NSNumber, CKDOperationMetrics;
@protocol CKDURLRequestMetricsDelegate, CKDURLRequestAuthRetryDelegate, CKDContextInfoProvider, OS_dispatch_queue, OS_os_activity, CKDAccountInfoProvider, CKDAccountAccessInfoProvider, OS_voucher;

@interface CKDURLRequest : NSObject <C2RequestDelegate, CKDZoneGatekeeperWaiter, CKDFlowControllable> {
    BOOL _didSendRequest;
    BOOL _didFinishLoading;
    BOOL _finished;
    BOOL _didRetrySignature;
    NSData *_fakeResponseData;
    BOOL _haveParsedFakeResponseData;
    NSObject<OS_os_activity> *_osActivity;
    NSObject<OS_os_activity> *_transmissionActivity;
}

@property (weak, nonatomic) CKDOperation *operation;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *lifecycleQueue;
@property (retain) NSURLSessionDataTask *urlSessionTask;
@property (retain) C2RequestOptions *c2RequestOptions;
@property (retain) NSURLRequest *request;
@property (retain) NSHTTPURLResponse *response;
@property (retain) NSError *error;
@property (retain) NSURLSession *urlSession;
@property (retain, nonatomic) NSMutableSet *responseObjectUUIDs;
@property (retain, nonatomic) CKDTrafficLogger *trafficLogger;
@property (copy, nonatomic) NSString *deviceID;
@property (nonatomic) unsigned long long numDownloadedElements;
@property (nonatomic) BOOL didRetryAuth;
@property (getter=isCancelled) BOOL cancelled;
@property (nonatomic) BOOL haveCachedServerType;
@property (nonatomic) BOOL haveCachedPartitionType;
@property (nonatomic) long long cachedServerType;
@property (nonatomic) long long cachedPartitionType;
@property (retain, nonatomic) CKDProtocolTranslator *translator;
@property (retain) NSDate *dateRequestWentOut;
@property (retain, nonatomic) CKDOperationMetrics *metrics;
@property (retain, nonatomic) NSDictionary *timingData;
@property (retain, nonatomic) NSObject<OS_voucher> *voucher;
@property (retain, nonatomic) NSString *cloudKitAuthToken;
@property (retain, nonatomic) NSString *iCloudAuthToken;
@property (nonatomic) BOOL didReceiveResponseBodyData;
@property (copy, nonatomic) NSString *serverProvidedAutoBugCaptureReason;
@property (retain, nonatomic) CKDTapToRadarRequest *serverProvidedTapToRadarRequest;
@property (retain, nonatomic) NSString *serverProvidedAutoSysdiagnoseCollectionReason;
@property (retain, nonatomic) NSMutableDictionary *countsByRequestOperationType;
@property (retain, nonatomic) NSMutableDictionary *overriddenHeaders;
@property (retain, nonatomic) NSMutableArray *redirectHistory;
@property (readonly, nonatomic) BOOL allowsCellularAccess;
@property (readonly, nonatomic) NSString *authPromptReason;
@property (readonly, nonatomic) BOOL resolvedAutomaticallyRetryNetworkFailures;
@property (readonly, nonatomic) unsigned long long resolvedDiscretionaryNetworkBehavior;
@property (readonly, nonatomic) unsigned long long duetPreClearedMode;
@property (readonly, nonatomic) BOOL preferAnonymousRequests;
@property (readonly, nonatomic) BOOL allowsBackgroundNetworking;
@property (readonly, nonatomic) NSString *operationIDForProtobuf;
@property (readonly, nonatomic) NSString *operationGroupID;
@property (readonly, nonatomic) NSString *operationGroupName;
@property (readonly, nonatomic) NSNumber *operationGroupQuantity;
@property (readonly, nonatomic) unsigned long long networkServiceType;
@property (readonly, nonatomic) BOOL allowsPowerNapScheduling;
@property (readonly, nonatomic) NSString *operationID;
@property (nonatomic) BOOL didFetchNilAuthToken;
@property (retain, nonatomic) id<CKDAccountInfoProvider> accountInfoProvider;
@property (retain, nonatomic) id<CKDContextInfoProvider> contextInfoProvider;
@property (retain, nonatomic) id<CKDAccountAccessInfoProvider> accountAccessInfoProvider;
@property (retain, nonatomic) CKDFlowControlManager *cachedFlowControlManager;
@property (weak, nonatomic) id<CKDURLRequestMetricsDelegate> metricsDelegate;
@property (weak, nonatomic) id<CKDURLRequestAuthRetryDelegate> authRetryDelegate;
@property (nonatomic) BOOL allowAutomaticRedirects;
@property (retain, nonatomic) NSDictionary *requestProperties;
@property (readonly, nonatomic) BOOL usesBackgroundSession;
@property (readonly, nonatomic) BOOL sendRequestAnonymously;
@property (retain, nonatomic) NSString *automatedDeviceGroup;
@property (readonly, nonatomic) long long databaseScope;
@property (readonly, nonatomic) NSString *applicationBundleIdentifierForContainerAccess;
@property (readonly, nonatomic) NSString *applicationBundleIdentifierForNetworkAttribution;
@property (readonly, nonatomic) NSString *sourceApplicationSecondaryIdentifier;
@property (retain, nonatomic) NSDictionary *unitTestOverrides;
@property (readonly, nonatomic) CKDProtobufStreamWriter *streamWriter;
@property (copy, nonatomic) id /* block */ requestProgressBlock;
@property (copy, nonatomic) id /* block */ responseProgressBlock;
@property (copy, nonatomic) id /* block */ completionBlock;
@property (retain, nonatomic) CKDResponseBodyParser *responseBodyParser;
@property (readonly, nonatomic) NSString *httpMethod;
@property (readonly, nonatomic) NSDictionary *additionalHeaderValues;
@property (retain, nonatomic) NSDictionary *clientProvidedAdditionalHeaderValues;
@property (readonly, nonatomic) BOOL hasRequestBody;
@property (readonly, nonatomic) BOOL expectsResponseBody;
@property (readonly, nonatomic) NSInputStream *requestBodyStream;
@property (readonly, nonatomic) NSArray *requestOperations;
@property (readonly, nonatomic) NSArray *requestOperationClasses;
@property (readonly, nonatomic) int isolationLevel;
@property (readonly, nonatomic) int operationType;
@property (readonly, nonatomic) NSString *path;
@property (readonly, nonatomic) long long serverType;
@property (readonly, nonatomic) long long partitionType;
@property (readonly, nonatomic) NSURL *url;
@property (readonly, nonatomic) BOOL shouldCompressBody;
@property (readonly, nonatomic) NSString *acceptContentType;
@property (readonly, nonatomic) NSString *requestContentType;
@property (readonly, nonatomic) NSString *protobufOperationName;
@property (readonly, nonatomic) BOOL requestGETPreAuth;
@property (readonly, nonatomic) NSString *sectionID;
@property (retain, nonatomic) NSDictionary *fakeResponseOperationResultByItemID;
@property (readonly) BOOL isFinished;
@property (readonly, nonatomic) NSDictionary *responseHeaders;
@property (readonly, nonatomic) long long responseStatusCode;
@property (readonly, nonatomic) NSURL *lastRedirectURL;
@property (readonly, nonatomic) NSString *requestUUID;
@property BOOL needsAuthRetry;
@property BOOL isWaitingOnAuthRenew;
@property BOOL isHandlingAuthRetry;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) long long qualityOfService;
@property (readonly, nonatomic) NSString *flowControlKey;

- (void)cancel;
- (void)URLSession:(id)a0 task:(id)a1 didSendBodyData:(long long)a2 totalBytesSent:(long long)a3 totalBytesExpectedToSend:(long long)a4;
- (void)URLSession:(id)a0 task:(id)a1 needNewBodyStream:(id /* block */)a2;
- (id)CKDescriptionPropertiesWithPublic:(BOOL)a0 private:(BOOL)a1 shouldExpand:(BOOL)a2;
- (void)URLSession:(id)a0 task:(id)a1 didReceiveChallenge:(id)a2 completionHandler:(id /* block */)a3;
- (void)URLSession:(id)a0 task:(id)a1 _conditionalRequirementsChanged:(BOOL)a2;
- (void)URLSession:(id)a0 dataTask:(id)a1 didReceiveResponse:(id)a2 completionHandler:(id /* block */)a3;
- (void)URLSession:(id)a0 task:(id)a1 _willSendRequestForEstablishedConnection:(id)a2 completionHandler:(id /* block */)a3;
- (id)deviceIdentifier;
- (void)URLSession:(id)a0 _taskIsWaitingForConnection:(id)a1;
- (void)URLSession:(id)a0 _willRetryBackgroundDataTask:(id)a1 withError:(id)a2;
- (void)finishWithError:(id)a0;
- (BOOL)allowsAnonymousAccount;
- (void).cxx_destruct;
- (double)timeoutIntervalForResource;
- (id)statusReportWithIndent:(unsigned long long)a0;
- (void)URLSession:(id)a0 task:(id)a1 willPerformHTTPRedirection:(id)a2 newRequest:(id)a3 completionHandler:(id /* block */)a4;
- (id)requestDidParseProtobufObject:(id)a0;
- (void)dealloc;
- (id)ckShortDescription;
- (id)requestOptions;
- (void)URLSession:(id)a0 dataTask:(id)a1 didReceiveData:(id)a2;
- (id)generateRequestOperations;
- (void)URLSession:(id)a0 task:(id)a1 didCompleteWithError:(id)a2;
- (double)timeoutIntervalForRequest;
- (void)requestDidParseNodeFailure:(id)a0;
- (id)zoneIDsToLock;
- (BOOL)markAsFinished;
- (BOOL)validate:(id *)a0;
- (id)initWithOperation:(id)a0;
- (void)tearDownResources;
- (BOOL)shouldLogResponseBody;
- (void)overrideRequestHeader:(id)a0 withValue:(id)a1;
- (void)performRequest;
- (id)requestOperationCountsByOperationType;
- (BOOL)expectDelayBeforeRequestBegins;
- (void)_tearDownStreamWriter;
- (BOOL)includeContainerInfo;
- (id)createAssetAuthorizeGetRequestOptionsHeaderInfoWithKey:(id)a0 value:(id)a1;
- (void)_registerRequestOperationTypesForOperations:(id)a0;
- (BOOL)usesiCloudAuthToken;
- (BOOL)usesCloudKitAuthToken;
- (void)tearDownResourcesAndReleaseTheZoneLocks:(BOOL)a0;
- (void)performOnLifecycleQueueIfNotFinished:(id /* block */)a0;
- (void)_renewAuthTokenWithCompletionHandler:(id /* block */)a0;
- (void)_handleAuthFailure;
- (long long)_handleServerProtobufResult:(id)a0 rawData:(id)a1;
- (long long)_handleServerJSONResult:(id)a0;
- (void)requestDidParseJSONObject:(id)a0;
- (long long)_handlePlistResult:(id)a0;
- (void)requestDidParsePlistObject:(id)a0;
- (Class)expectedResponseClass;
- (BOOL)parsingStandaloneMessage;
- (id /* block */)_protobufObjectParsedBlock;
- (id /* block */)_jsonObjectParsedBlock;
- (id /* block */)_xmlObjectParsedBlock;
- (void)requestDidParsePlaintextObject:(id)a0;
- (void)requestDidParse509CertObject:(id)a0;
- (void)_finishOnLifecycleQueueWithError:(id)a0;
- (void)_setupPublicDatabaseURL;
- (void)performASyncOnLifecycleQueueIfNotFinished:(id /* block */)a0;
- (BOOL)requiresAppPartitionURL;
- (void)_setupPrivateDatabaseURL;
- (BOOL)requiresUserPartitionURL;
- (void)_setupConfiguration;
- (BOOL)requiresConfiguration;
- (void)_fetchContainerScopedUserID;
- (BOOL)allowsAuthedAccount;
- (void)_fetchDeviceID;
- (BOOL)requiresDeviceID;
- (void)_acquireZoneGates;
- (BOOL)requiresTokenRegistration;
- (void)_performRequest;
- (void)_prepareAuthTokens;
- (void)_prepareCloudKitAuthToken;
- (void)prepareRequestWithCompletion:(id /* block */)a0;
- (void)_authTokenWithCompletionHandler:(id /* block */)a0;
- (void)_registerPushTokens;
- (Class)requestMessageClass;
- (void)_loadRequest:(id)a0;
- (id)_CFNetworkTaskIdentifierString;
- (BOOL)_onLifecycleQueue;
- (id)_wrapErrorIfNecessary:(id)a0;
- (void)_triggerAutoBugCaptureWithErrorPayload:(id)a0;
- (id)defaultParserForContentType:(id)a0;
- (void)requestDidComplete;
- (BOOL)expectsSingleObject;
- (id)operationRequestWithType:(int)a0;

@end
