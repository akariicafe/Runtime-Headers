@class CKDAppContainerTuple, CKDPCSManager, CKDZoneGatekeeper, CKContainerID, CKDFlowControlManager, NSString, CKDApplicationMetadata, CKDPCSCache, CKDAccount, NSMutableDictionary, CKDKeyValueDiskCache, CKDServerConfiguration, CKAccountOverrideInfo, NSObject, CKDMMCS, CKDApplicationID, CKDCachePurger, CKDPublicIdentityLookupService, CKDAppContainerIntersectionMetadata, NSURL, NSHashTable;
@protocol OS_dispatch_queue, OS_dispatch_group;

@interface CKDClientContext : NSObject <CKDContextInfoProvider, CKDAccountAccessInfoProvider, CKDContainerScopedUserIDProvider>

@property (retain) CKDAccount *account;
@property (retain) CKDMMCS *MMCS;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *setupQueue;
@property (nonatomic, getter=isSandboxed) BOOL sandboxed;
@property (nonatomic) BOOL finishedAppProxySetup;
@property (nonatomic) BOOL finishedProxySetup;
@property (readonly, nonatomic) NSString *contextID;
@property (retain, nonatomic) CKDZoneGatekeeper *foregroundZoneGatekeeper;
@property (retain, nonatomic) CKDZoneGatekeeper *backgroundZoneGatekeeper;
@property (retain, nonatomic) CKDCachePurger *cachePurger;
@property (retain, nonatomic) NSString *applicationContainerPath;
@property (retain, nonatomic) NSString *applicationContainerCloudKitDirectory;
@property (retain, nonatomic) NSString *applicationCachesDirectory;
@property (retain, nonatomic) NSString *applicationMMCSDirectory;
@property (retain, nonatomic) NSString *applicationAssetDbDirectory;
@property (retain, nonatomic) NSString *applicationFileStagingDirectory;
@property (retain, nonatomic) NSString *applicationFileDownloadDirectory;
@property (retain, nonatomic) NSString *applicationRecordCacheDirectory;
@property (retain, nonatomic) NSString *applicationFrameworkCachesDirectory;
@property (retain, nonatomic) NSString *applicationPackageStagingDirectory;
@property (nonatomic) BOOL wasInitializedWithProxy;
@property (retain, nonatomic) NSString *containerEncryptionServiceName;
@property (retain, nonatomic) NSString *entitlementSpecifiedPCSServiceName;
@property (retain, nonatomic) CKDKeyValueDiskCache *publicIdentitiesDiskCache;
@property (retain, nonatomic) CKDPublicIdentityLookupService *foregroundPublicIdentityLookupService;
@property (retain, nonatomic) CKDPublicIdentityLookupService *backgroundPublicIdentityLookupService;
@property (retain, nonatomic) CKDAppContainerIntersectionMetadata *appContainerIntersectionMetadata;
@property (retain, nonatomic) CKDApplicationMetadata *applicationMetadata;
@property (retain, nonatomic) CKDFlowControlManager *flowControlManager;
@property (retain, nonatomic) NSString *applicationVersion;
@property (retain, nonatomic) CKDPCSManager *pcsManager;
@property (retain, nonatomic) NSHashTable *proxies;
@property (readonly, nonatomic) unsigned long long mmcsEncryptionSupport;
@property (retain, nonatomic) NSString *applicationBundleID;
@property (retain, nonatomic) NSString *associatedApplicationBundleID;
@property (nonatomic) BOOL hasMasqueradingEntitlement;
@property (nonatomic) BOOL hasAllowSetEnvironmentEntitlement;
@property (nonatomic) BOOL hasAllowCustomAccountsEntitlement;
@property (retain, nonatomic) NSString *clientPrefixEntitlement;
@property (nonatomic) BOOL hasTCCAuthorization;
@property (nonatomic) long long contextType;
@property (retain, nonatomic) NSObject<OS_dispatch_group> *proxyPreparationGroup;
@property (retain, nonatomic) CKDServerConfiguration *config;
@property (copy) NSURL *publicCloudDBURL;
@property (copy) NSURL *publicShareServiceURL;
@property (copy) NSURL *publicDeviceServiceURL;
@property (copy) NSURL *publicCodeServiceURL;
@property (copy) NSURL *publicMetricsServiceURL;
@property (copy) NSString *containerScopedUserID;
@property (copy) NSString *orgAdminUserID;
@property (nonatomic) BOOL isForClouddInternalUse;
@property long long cachedEnvironment;
@property (readonly, nonatomic) CKContainerID *containerID;
@property (readonly, nonatomic) NSString *personaID;
@property (readonly, nonatomic) NSURL *applicationIcon;
@property (readonly, nonatomic) NSString *applicationDisplayName;
@property (readonly, nonatomic) NSString *applicationTemporaryDirectory;
@property (readonly, nonatomic) CKDAppContainerTuple *appContainerTuple;
@property (readonly, nonatomic) NSString *applicationBundleIdentifierForPush;
@property (readonly, nonatomic) NSString *hardwareID;
@property (retain, nonatomic, setter=setAPSEnvironmentString:) NSString *apsEnvironmentString;
@property (readonly, nonatomic) CKAccountOverrideInfo *accountInfoOverride;
@property (readonly, nonatomic) BOOL canAccessAccount;
@property (readonly, nonatomic) BOOL canAuthWithCloudKit;
@property (readonly, nonatomic) BOOL allowsCellularAccess;
@property (nonatomic) BOOL hasDataContainer;
@property (nonatomic) BOOL canAccessProtectionData;
@property (nonatomic) BOOL canAccessZoneProtectionData;
@property (nonatomic) BOOL canSetDeviceIdentifier;
@property (nonatomic, setter=setHasSystemServiceEntitlement:) BOOL hasSystemServiceEntitlement;
@property (nonatomic) BOOL allowsPowerNapScheduling;
@property (nonatomic) BOOL hasAllowAccessDuringBuddyEntitlement;
@property (nonatomic) BOOL hasLightweightPCSEntitlement;
@property (nonatomic) BOOL captureResponseHTTPHeaders;
@property (nonatomic) BOOL hasOutOfProcessUIEntitlement;
@property (nonatomic) BOOL hasParticipantPIIEntitlement;
@property (nonatomic) BOOL hasDisplaysSystemAcceptPromptEntitlement;
@property (readonly, nonatomic) BOOL useZoneWidePCS;
@property (nonatomic) BOOL returnPCSMetadata;
@property (readonly, nonatomic) NSString *encryptionServiceName;
@property (readonly, nonatomic) BOOL bypassPCSEncryption;
@property (readonly, nonatomic) BOOL forceEnableReadOnlyManatee;
@property (nonatomic) unsigned int clientSDKVersion;
@property (readonly, nonatomic) BOOL isSiloedContext;
@property (nonatomic) BOOL hasNonLegacyShareURLEntitlement;
@property (nonatomic) BOOL hasAllowUnverifiedAccountEntitlement;
@property (nonatomic) BOOL hasExplicitCodeOperationURLEntitlement;
@property (readonly, nonatomic) CKDPCSCache *pcsCache;
@property (retain, nonatomic) NSMutableDictionary *fakeErrorsByClassName;
@property (retain, nonatomic) NSMutableDictionary *fakeResponseOperationLifetimeByClassName;
@property (retain, nonatomic) NSMutableDictionary *fakeResponseOperationResultByClassNameByItemID;
@property (readonly, nonatomic) CKDApplicationID *applicationID;
@property (readonly, nonatomic) NSString *deviceName;
@property (readonly, nonatomic) NSString *languageCode;
@property (readonly, nonatomic) NSString *regionCode;
@property (readonly, nonatomic) NSString *applicationBundleIdentifierForContainerAccess;
@property (readonly, nonatomic) NSString *applicationBundleIdentifierForNetworkAttribution;
@property (readonly, nonatomic) NSString *processName;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)applicationContainerPathForBundleID:(id)a0 bundleURL:(id *)a1 contextType:(long long *)a2;
+ (id)sharedContextForInternalUseWithAppContainerTuple:(id)a0 unitTestingAccountInfoProvider:(id)a1;
+ (id)sharedContexts;
+ (id)contextWithAppContainerTuple:(id)a0 accountInfoOverride:(id)a1 proxy:(id)a2;
+ (id)_sharedContextWithAppContainerTuple:(id)a0 accountInfoOverride:(id)a1 proxy:(id)a2 forInternalUse:(BOOL)a3 addToSharedContexts:(BOOL)a4;
+ (id)applicationCachesPathForBundleID:(id)a0 usingHomeCachesDirectory:(BOOL)a1;
+ (id)sharedContextForInternalUseWithAppContainerAccountTuple:(id)a0;
+ (id)applicationCachesPathForBundleID:(id)a0;
+ (id)sharedContextWithAppContainerTuple:(id)a0 accountInfoOverride:(id)a1 proxy:(id)a2;
+ (id)_sharedContextWithAppContainerTuple:(id)a0 accountInfoOverride:(id)a1 proxy:(id)a2 forInternalUse:(BOOL)a3;

- (void)clearPILSCacheForLookupInfos:(id)a0;
- (void)dropMMCS;
- (void)clearContextFromMetadataCache;
- (void)fetchImportantUserIDsForOperation:(id)a0 withCompletionHandler:(id /* block */)a1;
- (id)CKPropertiesDescription;
- (void)setFakeResponseOperationResult:(id)a0 forNextRequestOfClassName:(id)a1 forItemID:(id)a2 withLifetime:(int)a3;
- (unsigned long long)aggregatedOutstandingOperationCount;
- (id)deviceIDForOperation:(id)a0;
- (void)startSetupWithClientProxy:(id)a0 completionHandler:(id /* block */)a1;
- (BOOL)_anyAssociatedProxyHasTCCAuthorization;
- (void).cxx_destruct;
- (void)showAssetCache;
- (void)_determineHardwareInfo;
- (void)_cancelAllLongLivedOperations;
- (BOOL)_cloudKitEnabledForCurrentClient;
- (BOOL)hasAccountAccessAndTCCAuth;
- (void)dealloc;
- (unsigned long long)countAssetCacheItems;
- (id)assetDirectoryContext;
- (BOOL)shouldUsePCSEncryption;
- (void)performRequest:(id)a0;
- (void)_reloadAccount:(BOOL)a0;
- (void)fetchServerEnvironmentForOperation:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)_clearCaches;
- (id)_urlBySettingCustomBaseURL:(id)a0 onURL:(id)a1;
- (id)_issueSandboxExtensionForPath:(id)a0 withAuditToken:(struct { unsigned int x0[8]; })a1 error:(id *)a2;
- (void)showAssetCacheWithDatabaseScope:(long long)a0;
- (void)finishSetupWithClientProxy:(id)a0 completionHandler:(id /* block */)a1;
- (BOOL)canBeReusedForContext:(id)a0 ignoreSandboxCheck:(BOOL)a1;
- (double)publicIdentitiesExpirationTimeout;
- (void)fetchConfigurationForOperation:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)clearAssetCacheWithDatabaseScope:(long long)a0;
- (id)baseURLForServerType:(long long)a0 partitionType:(long long)a1;
- (void)removeClientProxy:(id)a0;
- (void)clearRecordCache;
- (void)tearDownAssetTransfers;
- (void)setFakeError:(id)a0 forNextRequestOfClassName:(id)a1;
- (id)applicationBundleIDForCacheDirectory;
- (void)_loadApplicationContainerPathAndType;
- (void)clearAuthTokensForRecordWithID:(id)a0 databaseScope:(long long)a1;
- (void)showUserNotification:(void *)a0 withCompletionBlock:(id /* block */)a1;
- (BOOL)setupMMCSWrapperWithError:(id *)a0;
- (void)_fetchContainerInfoForOperation:(id)a0 requireUserIDs:(BOOL)a1 completionHandler:(id /* block */)a2;
- (unsigned long long)countAssetCacheItemsWithDatabaseScope:(long long)a0;
- (void)clearRecordCacheWithDatabaseScope:(long long)a0;
- (id)createAppContainerTuple;
- (BOOL)setupAssetTransfersWithClientProxy:(id)a0 error:(id *)a1;
- (void)fetchPrivateURLForServerType:(long long)a0 operation:(id)a1 completionHandler:(id /* block */)a2;
- (BOOL)_setupDirectoriesWithClientProxy:(id)a0 sandboxExtensions:(id *)a1 error:(id *)a2;
- (id)initWithAppContainerTuple:(id)a0 accountInfoOverride:(id)a1 proxy:(id)a2;
- (void)addClientProxy:(id)a0;
- (void)fetchPublicURLForServerType:(long long)a0 operation:(id)a1 completionHandler:(id /* block */)a2;
- (void)clearAssetCache;
- (BOOL)_canBeReusedForAppContainerTuple:(id)a0 accountInfoOverride:(id)a1 isSandboxed:(BOOL)a2 internalUse:(BOOL)a3 encryptionServiceName:(id)a4 ignoreSandboxCheck:(BOOL)a5;

@end
