@class CKDetailsContactsManager, CKAvatarPickerViewController, NSString, UINavigationController, UIButton, CKCanvasBackButtonView, CKConversation, CKLabel, CKNavigationBarCanvasView, CNContactStore, UIBarButtonItem;
@protocol CKNavbarCanvasViewControllerDelegate;

@interface CKNavbarCanvasViewController : UIViewController <UIGestureRecognizerDelegate, CKDetailsContactsManagerDelegate, CKNavigationBarCanvasViewDelegate>

@property (retain, nonatomic) CKConversation *conversation;
@property (retain, nonatomic) CKAvatarPickerViewController *avatarPickerViewController;
@property (retain, nonatomic) CKNavigationBarCanvasView *canvasView;
@property (retain, nonatomic) CKLabel *defaultLabel;
@property (retain, nonatomic) CKCanvasBackButtonView *backButtonView;
@property (retain, nonatomic) UIButton *detailsButton;
@property (retain, nonatomic) UIButton *callButton;
@property (retain, nonatomic) UIButton *clearAllButtonView;
@property (retain, nonatomic) UIButton *editCancelButtonView;
@property (retain, nonatomic) UIButton *doneButton;
@property (weak, nonatomic) UINavigationController *proxyNavigationController;
@property (nonatomic) BOOL editing;
@property (retain, nonatomic) NSString *navbarTitle;
@property (nonatomic) long long indicatorType;
@property (retain, nonatomic) CNContactStore *suggestionsEnabledContactStore;
@property (retain, nonatomic) CKDetailsContactsManager *contactsManager;
@property (weak, nonatomic) id<CKNavbarCanvasViewControllerDelegate> delegate;
@property (retain, nonatomic) UIBarButtonItem *detailsBarButton;
@property (nonatomic) BOOL canShowBackButtonView;
@property (nonatomic) BOOL shouldShowDoneButton;
@property (nonatomic) BOOL isInEditingMode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)navigationItem;
- (void).cxx_destruct;
- (void)_buttonPressed:(id)a0;
- (void)dealloc;
- (void)viewDidLayoutSubviews;
- (void)updateContentsForConversation:(id)a0;
- (void)loadView;
- (void)_handleAddressBookChange:(id)a0;
- (void)updateTitle:(id)a0 animated:(BOOL)a1;
- (void)configureForEditing:(BOOL)a0;
- (id)initWithConversation:(id)a0 navigationController:(id)a1;
- (void)startAudioCommunicationUsingPreferredRouteIfAvailable:(BOOL)a0;
- (id)initWithConversation:(id)a0;
- (void)showContactCardForEntity:(id)a0 address:(id)a1;
- (void)viewWillAppear:(BOOL)a0;
- (void)registerNotifications;
- (void)collapse;
- (id)navBarTitleFromConversation:(id)a0;
- (void)_handleTranscriptScroll:(id)a0;
- (void)_handleConversationRecipientsDidChange:(id)a0;
- (void)_handleAllowedByScreenTimeChatChanged:(id)a0;
- (id)_windowTraitCollection;
- (double)_preferredHeightForTraitCollection:(id)a0;
- (void)_initializeForTraitCollection:(id)a0;
- (void)toggleExpansionState;
- (void)_userDidTapNavigationBar:(id)a0;
- (void)_infoButtonTapped:(id)a0;
- (void)_updateFTControls;
- (void)refreshAudioButtonTargetAction;
- (void)_facetimeVideoButtonTapped:(id)a0;
- (void)_notifyDelegateThatViewControllerWantsResize;
- (void)handleCloseNavBarAnimationCompleteNotification:(id)a0;
- (long long)_unreadCount;
- (void)_chatUnreadCountDidChange:(id)a0;
- (void)_updateUnreadCountForBackbuttonView:(long long)a0;
- (void)multiwayStateChanged:(id)a0;
- (void)_updateMultiwayButtonStateWithConversation:(id)a0;
- (void)_configureForEditMode;
- (void)_configureForDefaultMode;
- (id)_titleItemViewForTraitCollection:(id)a0;
- (id)_leftItemViewForTraitCollection:(id)a0;
- (id)_rightItemViewForTraitCollection:(id)a0;
- (id)contextMenuForUnknownRecipient:(id)a0;
- (void)setUnreadCountTitleColor;
- (BOOL)shouldShowAvatarView;
- (void)_facetimeAudioButtonTapped:(id)a0;
- (struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })systemMinimumLayoutMarginsForView:(id)a0;
- (id)recipientContextMenu;
- (id)_secondaryRightItemViewForTraitCollection:(id)a0;
- (void)updateDefaultLabelIfNecessary;
- (void)dismissModal;
- (void)showMapkitBusinessData;
- (BOOL)gestureRecognizerShouldBegin:(id)a0;
- (void)traitCollectionDidChange:(id)a0;
- (void)contactsManagerViewModelsDidChange:(id)a0;
- (void)_contactPhotosEnabledChangedNotification:(id)a0;
- (BOOL)_canShowAvatarView;
- (void)viewDidLoad;

@end
