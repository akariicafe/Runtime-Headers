@class UIVisualEffectView, CKActionMenuGestureRecognizerButton, UILabel, CKMessageEntryContentView, NSMutableSet, CKMentionEntityNode, CKMessageEntryWaveformView, CKScheduledUpdater, NSString, CKBrowserSwitcherFooterView, CKAudioRecorder, NSMutableDictionary, UIInputContextHistory, UIKBVisualEffectView, CAMShutterButton, NSArray, UIButton, _UIClickInteraction, CKComposition, UIView, CKActionMenuController, CKInlineAudioReplyButtonController, CKMessageEntryRecordedAudioView, UISwipeGestureRecognizer, CKMessageEntryAudioHintView, UITraitCollection, CKPaddleOverlayView, CKMentionSuggestionView, CKEntryViewButton, CKConversation;
@protocol _UIClickInteractionDelegate, CKMessageEntryViewDelegate, UITextInputTraits_Private, CKMessageEntryViewInputDelegate;

@interface CKMessageEntryView : UIView <CKMessageEntryContentViewDelegate, CKAudioRecorderDelegate, CKActionMenuControllerDelegate, CKMessageEntryRecordedAudioViewDelegate, CKActionMenuGestureRecognizerButtonDelegate, CKInlineAudioReplyButtonDelegate, UIGestureRecognizerDelegate, CKBrowserSwitcherFooterViewDelegate, CKMentionSuggestionViewDataSource, CKMentionSuggestionViewDelegate, CKPaddleOverlayViewDelegate, CKTextEntryLayoutManagerMentionsDelegate, CKAppSelectionInterface, CKMessageEntryViewStyleProtocol> {
    BOOL _showAppStrip;
}

@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } coverInsets;
@property (nonatomic) BOOL shouldShowSendButton;
@property (nonatomic) BOOL shouldShowSubject;
@property (nonatomic) BOOL shouldShowPluginButtons;
@property (nonatomic) BOOL shouldShowCharacterCount;
@property (retain, nonatomic) CKMessageEntryContentView *contentView;
@property (retain, nonatomic) CKEntryViewButton *photoButton;
@property (retain, nonatomic) UIView *inputButtonContainerView;
@property (retain, nonatomic) UIView *buttonAndTextAreaContainerView;
@property (retain, nonatomic) CKEntryViewButton *sendButton;
@property (retain, nonatomic) CKEntryViewButton *browserButton;
@property (retain, nonatomic) CKEntryViewButton *cancelButton;
@property (retain, nonatomic) CKEntryViewButton *stopButton;
@property (retain, nonatomic) CKEntryViewButton *arrowButton;
@property (retain, nonatomic) _UIClickInteraction *sendButtonClickInteraction;
@property (retain, nonatomic) UILabel *characterCountLabel;
@property (nonatomic) struct CGSize { double width; double height; } inputButtonSize;
@property (nonatomic) struct CGSize { double width; double height; } sendButtonSize;
@property (nonatomic) struct CGSize { double width; double height; } characterCountSize;
@property (retain, nonatomic) UIVisualEffectView *backgroundView;
@property (retain, nonatomic) UIVisualEffectView *knockoutView;
@property (retain, nonatomic) UIView *knockoutCoverView;
@property (nonatomic, getter=isCharacterCountHidden) BOOL characterCountHidden;
@property (nonatomic) BOOL shouldCenterCharacterCount;
@property (nonatomic) BOOL shouldAllowImpactSend;
@property (nonatomic) unsigned long long displayMode;
@property (retain, nonatomic) UIView *contentClipView;
@property (nonatomic, getter=isPerformingActionMenuSend) BOOL performingActionMenuSend;
@property (copy, nonatomic) NSArray *keyCommands;
@property (retain, nonatomic) UIInputContextHistory *inputContextHistory;
@property (readonly, nonatomic) BOOL shouldEntryViewBeExpandedLayout;
@property (nonatomic) BOOL animatingLayoutChange;
@property (nonatomic) BOOL isTransitioningForBrowserSwitcher;
@property (retain, nonatomic) UILabel *collpasedPlaceholderLabel;
@property (retain, nonatomic) CKBrowserSwitcherFooterView *appStrip;
@property (retain, nonatomic) UIButton *emojiButton;
@property (retain, nonatomic) UIView *appStripBackgroundBlurContainerView;
@property (retain, nonatomic) UIKBVisualEffectView *appStripBackgroundBlurView;
@property (weak, nonatomic) id<UITextInputTraits_Private> lastConfiguredInputDelegate;
@property (retain, nonatomic) CKPaddleOverlayView *paddleOverlayView;
@property (retain, nonatomic) CKMentionSuggestionView *mentionSuggestionView;
@property (retain, nonatomic) NSArray *currentMentionSuggestions;
@property (nonatomic) BOOL showingMentionsSuggestions;
@property (nonatomic) BOOL isUpdatingMentionAttributedText;
@property (retain, nonatomic) NSMutableSet *entityHandles;
@property (retain, nonatomic) NSMutableSet *recipientNames;
@property (retain, nonatomic) NSMutableDictionary *entityDictionary;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } rangeOfTappedMention;
@property (retain, nonatomic) CKMentionEntityNode *entityTree;
@property (nonatomic) BOOL languageHasSpaces;
@property (retain, nonatomic) CAMShutterButton *shutterButton;
@property (retain, nonatomic) CKScheduledUpdater *entryFieldCollapsedUpdater;
@property (nonatomic) BOOL entryFieldUpdaterCollapsedValue;
@property (nonatomic) BOOL entryFieldUpdaterAnimatedValue;
@property (retain, nonatomic) UISwipeGestureRecognizer *swipeGestureRecognizer;
@property (nonatomic) BOOL isAudioActionMenuSuspended;
@property (nonatomic) BOOL isAudioActionMenuResizing;
@property (retain, nonatomic) CKAudioRecorder *recorder;
@property (retain, nonatomic) CKComposition *audioComposition;
@property (retain, nonatomic) CKComposition *previousAudioComposition;
@property (retain, nonatomic) CKActionMenuController *audioActionMenuController;
@property (retain, nonatomic) CKInlineAudioReplyButtonController *audioReplyButton;
@property (retain, nonatomic) CKMessageEntryWaveformView *waveformView;
@property (retain, nonatomic) CKMessageEntryRecordedAudioView *recordedAudioView;
@property (retain, nonatomic) CKMessageEntryAudioHintView *audioHintView;
@property (nonatomic) struct CGSize { double width; double height; } waveformViewSize;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } audioActionMenuFrame;
@property (retain, nonatomic) CKEntryViewButton *audioButton;
@property (retain, nonatomic) CKEntryViewButton *sendAudioButton;
@property (retain, nonatomic) CKActionMenuGestureRecognizerButton *audioActionMenuGestureRecognizerButton;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } marginInsets;
@property (copy, nonatomic) NSString *backdropGroupName;
@property (readonly) double coverViewWidth;
@property (weak, nonatomic) id<CKMessageEntryViewDelegate> delegate;
@property (weak, nonatomic) id<_UIClickInteractionDelegate> clickInteractionDelegate;
@property (weak, nonatomic) id<CKMessageEntryViewInputDelegate> inputDelegate;
@property (retain, nonatomic) CKConversation *conversation;
@property (retain, nonatomic) CKComposition *composition;
@property (readonly, nonatomic) CKComposition *compositionWithAcceptedAutocorrection;
@property (nonatomic) BOOL shouldOpaqueBackgroundView;
@property (nonatomic, getter=isKeyboardVisible) BOOL keyboardVisible;
@property (readonly, nonatomic, getter=isRecording) BOOL recording;
@property (readonly, nonatomic) BOOL hasRecording;
@property (retain, nonatomic) UITraitCollection *entryViewTraitCollection;
@property (nonatomic) BOOL entryFieldCollapsed;
@property (readonly, nonatomic) BOOL shouldShowAppStrip;
@property (readonly, nonatomic) BOOL showsKeyboardPredictionBar;
@property (nonatomic) BOOL extendAppStripBlurToKeyplaneTop;
@property (nonatomic, getter=shouldDisablePluginButtons) BOOL disablePluginButtons;
@property (nonatomic, getter=isComposingRecipient) BOOL composingRecipient;
@property (nonatomic, getter=hasFailedRecipients) BOOL failedRecipients;
@property (nonatomic, getter=hasUnreachableEmergencyRecipient) BOOL unreachableEmergencyRecipient;
@property (nonatomic, getter=isSendingMessage) BOOL sendingMessage;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) long long style;

+ (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })coverViewInsetsForMarginInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a0 shouldShowPluginButtons:(BOOL)a1 shouldShowCharacterCount:(BOOL)a2 shouldCenterCharacterCount:(BOOL *)a3;
+ (void)configureAttributedString:(id)a0 inTextView:(id)a1 forDirectMentionInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 forChildNode:(id)a3 addingVisualStyling:(BOOL)a4 shouldAddAutoComplete:(BOOL)a5;
+ (id)languagesWithoutSpaces;
+ (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })contentViewInsetsForMarginInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a0 shouldShowPluginButtons:(BOOL)a1 shouldShowCharacterCount:(BOOL)a2 shouldCoverSendButton:(BOOL)a3;
+ (id)audioButtonImage;
+ (BOOL)isValidPostfixCharacter:(unsigned short)a0;
+ (void)configureAttributedString:(id)a0 inTextView:(id)a1 boldingFont:(BOOL)a2 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3;
+ (void)configureAttributedString:(id)a0 withFontColor:(id)a1 forRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
+ (void)configureAttributedString:(id)a0 withParagraphStyleInTextView:(id)a1 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
+ (void)configureAttributedString:(id)a0 inTextView:(id)a1 forUnconfirmedDirectMention:(id)a2 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 addingVisualStyling:(BOOL)a4;
+ (void)configureAttributedString:(id)a0 automaticMentionAttributeWithOriginalText:(id)a1 entityNode:(id)a2 forRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3;
+ (void)configureAttributedString:(id)a0 inTextView:(id)a1 forNoMentionInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
+ (void)hideMentionsInAttributedString:(id)a0 inTextView:(id)a1;
+ (struct _NSRange { unsigned long long x0; unsigned long long x1; })range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 appendingSubstringRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
+ (void)configureAttributedStringForMentionsChecking:(id)a0;
+ (BOOL)range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 isPrefixedWithAtForString:(id)a1;
+ (BOOL)range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 containsEmptySelectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
+ (void)configureAttributedString:(id)a0 inTextView:(id)a1 forUnconfirmedMentionInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
+ (void)configureAttributedString:(id)a0 inTextView:(id)a1 forConfirmedMentionInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 needingAnimation:(BOOL)a3;
+ (void)removeMentionsAtIndex:(long long)a0 onAttributedString:(id)a1 inTextView:(id)a2;
+ (BOOL)attributedString:(id)a0 containsConfirmedMentionInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
+ (void)replaceAttributedString:(id)a0 withEntity:(id)a1 fromInputText:(id)a2 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 updatingRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a4;
+ (void)configureAttributedString:(id)a0 inTextView:(id)a1 withOriginalText:(id)a2 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3;
+ (BOOL)range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 hasValidPostfixCharacterForString:(id)a1;
+ (id)sharedAppStripDatasource;
+ (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })coverViewInsetsForMarginInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a0 shouldShowPluginButtons:(BOOL)a1 shouldShowCharacterCount:(BOOL)a2;

- (void)safeAreaInsetsDidChange;
- (void)audioButtonTapped:(id)a0;
- (void)stopButtonTapped:(id)a0;
- (void)keyCommandSend:(id)a0;
- (void)keyCommandAppMenu:(id)a0;
- (void)optionUpArrowClicked:(id)a0;
- (void)optionDownArrowClicked:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 marginInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a1 shouldShowSendButton:(BOOL)a2 shouldShowSubject:(BOOL)a3 shouldShowPluginButtons:(BOOL)a4 shouldShowCharacterCount:(BOOL)a5 traitCollection:(id)a6;
- (void)setEntryFieldCollapsed:(BOOL)a0 animated:(BOOL)a1;
- (void)showEffectPicker;
- (void)_swipeDownGestureRecognized:(id)a0;
- (BOOL)_isRunningInMVS;
- (void)conversationPreferredServiceChanged:(id)a0;
- (void)messageReceived:(id)a0;
- (void)_participantsDidChange:(id)a0;
- (void)_contactLimitsChanged:(id)a0;
- (void)_initializeInputContextHistory;
- (void)presentAudioActionMenu;
- (void)configureAudioActionMenuControllerForPlayback:(BOOL)a0;
- (void)stopAudioActionMenuRecording;
- (BOOL)layoutIsCurrentlyCompact;
- (void)selectPluginAtIndexPath:(id)a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })safeAreaInsets;
- (void)_animateToCompactLayoutCollapsing:(BOOL)a0 completion:(id /* block */)a1;
- (void)_animateExpandForManualToggle:(BOOL)a0 completion:(id /* block */)a1;
- (BOOL)_shouldNotAnimateCollapseInteractive;
- (void)minifyAppStrip;
- (void)_addMessageToInputContextHistory:(id)a0;
- (void)handleContentViewChangeWithCompletion:(id /* block */)a0;
- (BOOL)isPredictionBarEnabled;
- (BOOL)is3rdPartyKeyboardVisible;
- (BOOL)shouldRecordForService:(id)a0;
- (void)cancelRecordingAndShowAudioHint;
- (void)presentAudioActionButtons;
- (void)_trackAudioMessageSentWithComposition:(id)a0;
- (void)playMenuItemAction:(id)a0;
- (void)pauseMenuItemAction:(id)a0;
- (void)audioMenuItemAction:(id)a0;
- (void)sendMenuItemAction:(id)a0;
- (void)_trackAudioMessageRecordingStarted;
- (void)showHintWithText:(id)a0 animatingReferenceButton:(BOOL)a1;
- (void)startRecordingForRaiseGesture;
- (BOOL)sendButtonEnabled;
- (BOOL)shouldAllowSendWhenSendButtonDisabled;
- (char)_sendButtonColor;
- (BOOL)pluginButtonsEnabled;
- (BOOL)photoButtonEnabled;
- (BOOL)_isSURFInShelf;
- (void)messageEntryContentViewDidReturn:(id)a0;
- (void)messageEntryContentViewDidChange:(id)a0;
- (void)audioReplyButtonStart:(id)a0;
- (void)messageEntryContentViewDidChangeSelection:(id)a0;
- (void)messageEntryContentViewShelfDidChange:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })activeKeyboardHeight;
- (BOOL)messageEntryContentViewShouldBeginEditing:(id)a0;
- (void)messageEntryContentViewDidBeginEditing:(id)a0 wasAlreadyActive:(BOOL)a1;
- (void)messageEntryContentViewDidEndEditing:(id)a0;
- (BOOL)messageEntryContentView:(id)a0 shouldInsertMediaObjects:(id)a1;
- (struct CGSize { double x0; double x1; })messageEntryContentViewMaxShelfPluginViewSize:(id)a0;
- (void)messageEntryContentView:(id)a0 didTapMediaObject:(id)a1;
- (double)placeholderHeight;
- (void)messageEntryContentViewWasTapped:(id)a0 isLongPress:(BOOL)a1;
- (void)messageEntryContentView:(id)a0 didPasteURL:(id)a1;
- (void)switcherView:(id)a0 didMagnify:(BOOL)a1;
- (void)messageEntryContentViewDidTapHandwritingKey:(id)a0;
- (void)messageEntryContentViewCancelWasTapped:(id)a0 shelfPluginPayload:(id)a1;
- (void)messageEntryContentView:(id)a0 didStagePluginPayload:(id)a1;
- (void)messageEntryContentViewDidTapMention:(id)a0 characterIndex:(double)a1;
- (BOOL)messageEntryContentViewWillChangeText:(id)a0 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 withReplacementText:(id)a2;
- (void)audioRecorderRecordingDidChange:(id)a0;
- (void)audioRecorderRecordingDidFail:(id)a0;
- (void)audioRecorderDidUpdateAveragePower:(float)a0;
- (void)switcherView:(id)a0 didSelectPluginAtIndex:(id)a1;
- (void)actionMenuControllerWillPresentActionMenu:(id)a0 animated:(BOOL)a1;
- (void)actionMenuControllerWillDismissActionMenu:(id)a0 animated:(BOOL)a1;
- (void)actionMenuControllerDidDismissActionMenu:(id)a0;
- (void)audioReplyButtonCancel:(id)a0;
- (void)messageEntryRecordedAudioView:(id)a0 mediaObjectDidFinishPlaying:(id)a1;
- (void)messageEntryRecordedAudioViewPressedDelete:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 marginInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })a1 shouldAllowImpact:(BOOL)a2 shouldShowSendButton:(BOOL)a3 shouldShowSubject:(BOOL)a4 shouldShowPluginButtons:(BOOL)a5 shouldShowCharacterCount:(BOOL)a6 traitCollection:(id)a7;
- (void)messageEntryRecordedAudioViewPressedPlay:(id)a0;
- (void)messageEntryRecordedAudioViewPressedPause:(id)a0;
- (void)audioReplyButtonStop:(id)a0;
- (unsigned long long)numberOfSuggestionsInSuggestionView:(id)a0 forSection:(unsigned long long)a1;
- (id)suggestionView:(id)a0 entityAtIndex:(unsigned long long)a1;
- (id)suggestionView:(id)a0 indexPathOfEntityWithIdentifier:(id)a1;
- (void)didDismissPaddleOverlayView:(id)a0;
- (void)suggestionView:(id)a0 didSelectEntity:(id)a1;
- (void)layoutManagerDidFinishAnimatingMentionWithAnimationIdentifier:(id)a0;
- (void)appSelectionInterfaceSelectedItem:(id)a0;
- (void)prepareForBrowserSwitcherCompactTransitionIsSnapshotting:(BOOL)a0;
- (void)finishBrowserSwitcherCompactTransition;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })sendButtonFrameInScreenCoordinates;
- (struct CGPoint { double x0; double x1; })sendButtonConvertPointToScreen:(struct CGPoint { double x0; double x1; })a0;
- (void)setShouldHideBackgroundView:(BOOL)a0;
- (BOOL)shouldHideBackgroundView;
- (void)suspendAudioActionMenu;
- (void)dismissAudioActionMenuAnimated:(BOOL)a0;
- (void)dismissAudioActionMenuForResize;
- (void)presentAudioActionMenuForResize;
- (void)stopAudioActionMenuRecordingForResize;
- (void)setAudioActionMenuEnabled:(BOOL)a0;
- (void)resumeAudioActionMenu;
- (void)setShowAppStrip:(BOOL)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (void)clearAppStripSelection;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })browserButtonFrame;
- (id)pasteBoardTextFromComposition:(id)a0;
- (id)snapshotForCompactBrowserAnimation;
- (void)beginDeferringEntryFieldCollapsedStateChanges;
- (void)endDeferringEntryFieldCollapsedStateChanges;
- (void)sendAudioButtonTapped:(id)a0;
- (double)_accessoryViewFadeDuration;
- (void)showMessageEffectsHint;
- (void)stopRecordingForRaiseGestureWithFailure:(BOOL)a0;
- (void)sendCurrentLocationMessage;
- (void).cxx_destruct;
- (id)_currentInputDelegate;
- (void)dealloc;
- (void)handleLongPress:(id)a0;
- (void)_dynamicUserInterfaceTraitDidChange;
- (BOOL)gestureRecognizer:(id)a0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)a1;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 withEvent:(id)a1;
- (void)layoutSubviews;
- (BOOL)actionMenuGestureRecognizerButtonShouldShowHint:(id)a0;
- (void)actionMenuGestureRecognizerButtonDidTouchDownButton:(id)a0;
- (void)actionMenuGestureRecognizerButtonShowHint:(id)a0;
- (void)actionMenuGestureRecognizerButtonDidTouchUpInsideButton:(id)a0;
- (BOOL)actionMenuGestureRecognizerButtonIsShowingHint:(id)a0;
- (BOOL)actionMenuGestureRecognizerButtonShouldRecognizeGesture:(id)a0;
- (void)actionMenuGestureRecognizerButtonGestureDidBegin:(id)a0;
- (void)actionMenuGestureRecognizerButtonGestureDidEnd:(id)a0;
- (void)cancelButtonTapped:(id)a0;
- (void)_localeChanged;
- (BOOL)allowsMentions;
- (BOOL)isValidPrefixCharacter:(unsigned short)a0;
- (void)checkForMentionsInAttributedString:(id)a0 inTextView:(id)a1;
- (void)updateTextViewIfNecessary:(id)a0 withAttributedString:(id)a1;
- (BOOL)range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 hasValidPrefixCharacterForString:(id)a1;
- (BOOL)attributedString:(id)a0 shouldAddAutoCompleteAttributeForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)confirmAutomaticMention:(id)a0 inTextView:(id)a1 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a2;
- (void)updateTypingAttributesIfNeededForTextView:(id)a0;
- (void)updateTextViewIfNecessary:(id)a0 withAttributedString:(id)a1 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (id)entitiesForKey:(id)a0;
- (void)setShowMentionSuggestions:(BOOL)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (BOOL)shouldUpdateMentionsInTextView:(id)a0 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 withReplacementText:(id)a2;
- (void)replaceAttributedText:(id)a0 inTextView:(id)a1 atIndex:(unsigned long long)a2 updatedSelectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a3 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a4;
- (void)associateEntity:(id)a0 withKey:(id)a1;
- (void)configureAttributedString:(id)a0 inTextView:(id)a1 forMentionOverrideInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 shouldOverride:(BOOL)a3;
- (void)checkForMentions;
- (void)updateTextInputContext;
- (void)confirmAutomaticMention:(id)a0 inTextView:(id)a1 isSending:(BOOL)a2 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a3;
- (BOOL)attributedString:(id)a0 nextCharacterRangeFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 containsPossibleChild:(id)a2;
- (void)updateMentionsAssociations;
- (void)didFinishAnimatingMentionWithAnimationIdentifier:(id)a0;
- (void)didTapMention:(id)a0 characterIndex:(double)a1;
- (BOOL)shouldUpdateMentionsForEntryContentViewWillChangeText:(id)a0 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 withReplacementText:(id)a2;
- (void)insertMentionByName:(id)a0;
- (void)suggestionViewDidSelectEntity:(id)a0;
- (void)acceptAutomaticMentionConfirmation;
- (void)reloadMentionsData;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })anchorRect;
- (void)deferredSetup;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })coverFrameThatFitsInSize:(struct CGSize { double x0; double x1; })a0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })adjustedCoverInsets;
- (double)bottomInsetForAppStrip;
- (void)updateTextViewsForShouldHideCaret:(BOOL)a0;
- (BOOL)isAudioActionMenuVisible;
- (void)configureAppStripOrMentionSuggestionsIfNeeded;
- (void)updateAppStripFrame;
- (void)configureAppStripBackgroundViewsIfNecessary;
- (BOOL)shouldShowMentionSuggestions;
- (void)updateAppsMenu:(id)a0;
- (void)updateEntryView;
- (void)_overrideUserInterfaceStyleForEntryViewStyleIfNeeded:(long long)a0;
- (void)setEntryViewTraitCollection:(id)a0 resetStyle:(BOOL)a1;
- (BOOL)isRunningInNotificationExtension;
- (void)_setupWaveformView;
- (void)loadRecordedAudioViewsIfNeeded;
- (void)_updateUIForEntryFieldCollapsedStateChange;
- (void)_setBehaviorsForCurrentTransparencySetting;
- (void)textEffectsWindowOffsetDidChange:(id)a0;
- (void)updateBackgroundView;
- (void)photoButtonTouchDown:(id)a0;
- (void)photoButtonTouchUpOutside:(id)a0;
- (void)photoButtonTapped:(id)a0;
- (void)browserButtonTapped:(id)a0;
- (void)arrowButtonTapped:(id)a0;
- (void)collapseGestureRecognized;
- (void)updateKnockoutView;
- (void)expandGestureRecongnized;
- (void)collapsedPlaceholderLabelTapped:(id)a0;
- (void)configureForDisplayMode:(unsigned long long)a0;
- (void)touchUpInsideSendButton:(id)a0;

@end
