@class NSHashTable, PXGViewEnvironment, NSArray, NSString, NSIndexSet, NSMutableDictionary, NSDictionary, NSObject, NSMutableSet, PXGTextureManagerPreheatingStrategy, NSMapTable;
@protocol PXGTextureConverter, PXGMutableSpriteTexture, PXGTextureManagerDelegate, OS_dispatch_queue;

@interface PXGTextureManager : NSObject <PXGTextureProviderDelegate, PXGTextureAtlasManagerDelegate> {
    NSObject<OS_dispatch_queue> *_requestQueue;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSObject<OS_dispatch_queue> *_processQueue;
    NSObject<OS_dispatch_queue> *_deallocationsQueue;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lookupLock;
    NSMapTable *_lookupLock_textureByKeyByPresentationType[2];
    struct unordered_map<int, PXGRequestDetails, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, PXGRequestDetails> > > { struct __hash_table<std::__1::__hash_value_type<int, PXGRequestDetails>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, PXGRequestDetails>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, PXGRequestDetails>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, PXGRequestDetails> > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, PXGRequestDetails>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, PXGRequestDetails>, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, PXGRequestDetails>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, PXGRequestDetails>, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, PXGRequestDetails>, void *> *> **__value_; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, PXGRequestDetails>, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, PXGRequestDetails>, void *> *> *> > { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, PXGRequestDetails>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, PXGRequestDetails>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, PXGRequestDetails>, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, PXGRequestDetails>, void *> *> *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, PXGRequestDetails>, std::__1::hash<int>, true> > { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, PXGRequestDetails>, std::__1::equal_to<int>, true> > { float __value_; } __p3_; } __table_; } _lookupLock_requestDetailsByRequestID;
    NSHashTable *_spriteTexturesInUse;
    NSDictionary *_textureConverterByPresentationType;
    id<PXGTextureConverter> _atlasTextureConverter;
    int _atlasPresentationType;
    BOOL _didSwitchTextureConverter;
    NSMutableDictionary *_textureProviderByMediaKind;
    NSMapTable *_textureProvidersDisplayLinkRegistrationState;
    struct unordered_map<int, unsigned int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, unsigned int> > > { struct __hash_table<std::__1::__hash_value_type<int, unsigned int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, unsigned int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, unsigned int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, unsigned int> > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned int>, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned int>, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned int>, void *> *> **__value_; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned int>, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned int>, void *> *> *> > { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned int>, void *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned int>, void *> *> { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned int>, void *> *> *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, unsigned int>, std::__1::hash<int>, true> > { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, unsigned int>, std::__1::equal_to<int>, true> > { float __value_; } __p3_; } __table_; } _spriteIndexByRequestID;
    NSIndexSet *_loadedSpriteIndexes;
    struct { int x0; int x1; int x2; unsigned short x3; void *x4; unsigned int x5; void *x6; unsigned int x7; unsigned int x8; } *_streamInfoBySpriteIndex;
    unsigned long long _streamInfoBySpriteIndexCount;
    unsigned long long _streamInfoBySpriteIndexCapacity;
    _Atomic unsigned char _isPerformingUpdateFromRequestQueue;
    unsigned long long _requestQueue_pendingSetNeedsUpdate;
    id<PXGMutableSpriteTexture> _emptyTexture;
    NSMutableSet *_placeholderTextures;
}

@property (retain) NSArray *textureAtlasManagers;
@property (readonly, nonatomic) long long streamCount;
@property (weak, nonatomic) id<PXGTextureManagerDelegate> delegate;
@property (retain, nonatomic) PXGTextureManagerPreheatingStrategy *preheatingStrategy;
@property (retain, nonatomic) PXGViewEnvironment *viewEnvironment;
@property (nonatomic) BOOL lowMemoryMode;
@property (nonatomic) BOOL isInactive;
@property (readonly, nonatomic) NSDictionary *texturesByPresentationType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)_removeAllTexturesForPresentationType:(int)a0;
- (BOOL)_getRequestDetails:(out struct { int x0; } *)a0 forRequestID:(int)a1;
- (id)_textureAtlasManagerForImageDataSpec:(struct { unsigned long long x0; unsigned short x1; unsigned short x2; })a0;
- (void)_resizeStorageIfNeededForSpriteCount:(long long)a0;
- (void)_processPixelBuffer:(struct __CVBuffer { } *)a0 orientationTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a1 fromTextureProvider:(id)a2 withTextureConverter:(id)a3 forRequestID:(int)a4 deliveryOrder:(unsigned int)a5;
- (id)init;
- (void).cxx_destruct;
- (void)_setNeedsUpdate;
- (void)_processCGImage:(struct CGImage { } *)a0 orientation:(unsigned int)a1 fromTextureProvider:(id)a2 withTextureConverter:(id)a3 requestID:(int)a4 deliveryOrder:(unsigned int)a5;
- (void)_enumerateTextureProviders:(id /* block */)a0;
- (id)_existingTextureForPayload:(id)a0 presentationType:(int)a1;
- (void)dealloc;
- (void)_configureAllTextureConverters;
- (void)textureProvider:(id)a0 didProvideCGImage:(struct CGImage { } *)a1 orientation:(unsigned int)a2 forRequestID:(int)a3;
- (void)_requestQueue_scheduleUpdateIfAllowed;
- (void)_configureAllTextureProviders;
- (BOOL)streamUpdatedTexturesForDisplayLinkIfNeeded:(id)a0;
- (void)textureProvider:(id)a0 didProvidePayload:(id)a1 forRequestID:(int)a2;
- (struct CGImage { } *)textureSnapshotForSpriteIndex:(unsigned int)a0;
- (void)_handleProvidedSpriteTexture:(id)a0 fromTextureProvider:(id)a1 requestID:(int)a2 deliveryOrder:(unsigned int)a3;
- (void)textureProviderNeedsToUnregisterFromDisplayLinkUpdates:(id)a0;
- (long long)_processTextureProviderResults;
- (void)textureProviderNeedsToRegisterToDisplayLinkUpdates:(id)a0;
- (void)streamTexturesForSpritesInDataStore:(id)a0 presentationDataStore:(id)a1 changeDetails:(id)a2 layout:(id)a3 interactionState:(struct { long long x0; BOOL x1; BOOL x2; BOOL x3; unsigned long long x4; BOOL x5; BOOL x6; BOOL x7; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x8; })a4;
- (void)_addTextureToTexturesInUse:(id)a0;
- (void)registerTextureProvider:(id)a0 forMediaKind:(int)a1;
- (void)_lookupLock_requestTexturesForSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x0; unsigned int x1; })a0 textureProvider:(id)a1 mediaKind:(int)a2 presentationType:(int)a3 isAppearing:(BOOL)a4 layout:(id)a5 leafSpriteIndexRange:(struct _PXGSpriteIndexRange { unsigned int x0; unsigned int x1; })a6 sprites:(struct { unsigned int x0; struct *x1; struct *x2; struct *x3; })a7 textureStreamInfos:(struct { int x0; int x1; int x2; unsigned short x3; void *x4; unsigned int x5; void *x6; unsigned int x7; unsigned int x8; } *)a8;
- (id).cxx_construct;
- (void)_enumerateSpriteTextures:(id /* block */)a0;
- (void)_updatePreheatingStrategy;
- (id)_textureConverterForPresentationType:(int)a0;
- (void)_configureTextureConverter:(id)a0;
- (id)_createTextureForCGImage:(struct CGImage { } *)a0 orientation:(unsigned int)a1 fromTextureProvider:(id)a2 withTextureConverter:(id)a3;
- (void)textureProvider:(id)a0 didProvideImageData:(id)a1 withSpecAtIndex:(long long)a2 bytesPerRow:(unsigned long long)a3 contentsRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a4 forRequestID:(int)a5;
- (void)textureProvider:(id)a0 didProvideNothingForRequestID:(int)a1;
- (id)_storeTexture:(id)a0 forCGImage:(struct CGImage { } *)a1;
- (void)simulateTextureLoad;
- (void)_enumerateTextureConverters:(id /* block */)a0;
- (void)registerTextureConverter:(id)a0 forPresentationType:(int)a1;
- (void)textureProvider:(id)a0 didProvidePixelBuffer:(struct __CVBuffer { } *)a1 orientationTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a2 forRequestID:(int)a3;
- (void)_configureTextureProvider:(id)a0;
- (BOOL)textureAtlasManagerShouldPruneUnusedTextures:(id)a0;
- (void)_blockOnThumbnailsIfNeededWithGeometries:(struct { struct { double x0; double x1; float x2; } x0; } *)a0 visibleRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 interactionState:(struct { long long x0; BOOL x1; BOOL x2; BOOL x3; unsigned long long x4; BOOL x5; BOOL x6; BOOL x7; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x8; })a2 fences:(id)a3;
- (id)_storeTexture:(id)a0 forPixelBuffer:(struct __CVBuffer { } *)a1;
- (id)_existingTextureForPixelBuffer:(struct __CVBuffer { } *)a0 presentationType:(int)a1;
- (void)_requestQueue_setNeedsUpdate;
- (void)_pruneTextures:(id)a0;
- (id)_existingTextureForCGImage:(struct CGImage { } *)a0 presentationType:(int)a1;
- (id)_storeTexture:(id)a0 forPayload:(id)a1;
- (id)_existingTextureForKey:(id)a0 presentationType:(int)a1;
- (id)_storeTexture:(id)a0 forKey:(id)a1;

@end
