@class PXScrollViewSpeedometer, PXGAXCoalescingResponder, PXScrollViewController, PXDisplayLink, PXGTextureManager, NSString, PXGLayout, PXGViewEnvironment, PXGSpriteDataStore, PXGViewRenderer, PXGAnimator, NSArray, PXGMetalRenderer, PXGChangeDetails, PXGSpriteMetadataStore;
@protocol PXGEngineDelegate;

@interface PXGEngine : NSObject <PXGMetalRendererDelegate, PXGLayoutUpdateDelegate, PXGTextureManagerDelegate, PXTilingScrollControllerUpdateDelegate, PXChangeObserver> {
    PXGAnimator *_animator;
    PXGSpriteDataStore *_layoutSpriteDataStore;
    PXGChangeDetails *_layoutChangeDetails;
    struct CGPoint { double x; double y; } _viewportShift;
    struct CGPoint { double x; double y; } _previousVisibleOrigin;
    PXGSpriteDataStore *_animationPresentationSpriteDataStore;
    PXGSpriteDataStore *_animationTargetSpriteDataStore;
    PXGLayout *_animationLayout;
    PXGChangeDetails *_animationChangeDetails;
    PXGSpriteMetadataStore *_presentationSpriteMetadaStore;
    struct { unsigned long long needsUpdate; unsigned long long updated; BOOL isPerformingUpdate; } _updateFlags;
    unsigned long long _previousUpdateEntities;
    struct { long long scrollRegime; BOOL isAnimatingScroll; BOOL isScrubbing; BOOL isAnimatingContent; unsigned long long zoomBehavior; BOOL isViewBoundsChanging; BOOL isInitialLoad; BOOL isVisible; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } targetRect; } _previousInteractionState;
    unsigned long long _pendingUpdateEntities;
    BOOL _keepDisplayLinkAlive;
    double _renderForTargetTimestamp;
    double _lastRenderCompletionTimestamp;
    BOOL _animatorWasAnimatingAtBeginningOfFrame;
    BOOL _isUpdatingScrollView;
    BOOL _viewSizeDidChange;
    BOOL _lowMemoryMode;
    id /* block */ _pendingIsInvisibleForSomeTimeBlock;
    BOOL _extensionHostIsInBackground;
}

@property (readonly, nonatomic) struct _PXGEngineScrollState { struct CGSize { double width; double height; } referenceSize; struct UIEdgeInsets { double top; double left; double bottom; double right; } contentInsets; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } visibleRect; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } targetRect; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } constrainedVisibleRect; struct CGPoint { double x; double y; } lastScrollDirection; long long scrollSpeedRegime; } scrollState;
@property (nonatomic) struct { long long scrollRegime; BOOL isAnimatingScroll; BOOL isScrubbing; BOOL isAnimatingContent; unsigned long long zoomBehavior; BOOL isViewBoundsChanging; BOOL isInitialLoad; BOOL isVisible; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } targetRect; } interactionState;
@property (readonly, nonatomic) long long currentFrameTime;
@property (nonatomic) BOOL didRenderThisFrame;
@property (nonatomic) BOOL expectingScrollEvents;
@property (nonatomic) BOOL gotScrollEventThisFrame;
@property (nonatomic) double lastScrollEventTime;
@property (nonatomic) BOOL missedScrollEventThisFrame;
@property (nonatomic) BOOL isInvisibleForSomeTime;
@property (weak, nonatomic) id<PXGEngineDelegate> delegate;
@property (readonly, nonatomic) PXGMetalRenderer *metalRenderer;
@property (readonly, nonatomic) PXGViewRenderer *viewRenderer;
@property (readonly, nonatomic) NSArray *renderers;
@property (nonatomic, getter=isVisible) BOOL visible;
@property (retain, nonatomic) PXGViewEnvironment *viewEnvironment;
@property (nonatomic) BOOL statsTrackingEnabled;
@property (readonly, nonatomic) struct { double x0[6]; double x1[6]; long long x2[6]; double x3[6]; double x4[6]; } *stats;
@property (readonly, nonatomic) PXDisplayLink *displayLink;
@property (readonly, nonatomic) BOOL debugEngineUpdates;
@property (nonatomic) BOOL slowAnimationsEnabled;
@property (readonly, nonatomic) PXGAnimator *ppt_animator;
@property (nonatomic) BOOL wantsImmediateUpdates;
@property (nonatomic) BOOL isInitialLoad;
@property (nonatomic) BOOL lowMemoryMode;
@property (readonly, nonatomic) PXGAXCoalescingResponder *coalescingAXResponder;
@property (retain, nonatomic) PXScrollViewController *scrollViewController;
@property (retain, nonatomic) PXScrollViewSpeedometer *scrollViewSpeedometer;
@property (retain, nonatomic) PXGLayout *layout;
@property (readonly, nonatomic) PXGTextureManager *textureManager;
@property (copy, nonatomic) id /* block */ animationRenderingCompletionHandler;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)enumerateSpritesInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 usingBlock:(id /* block */)a1;
- (void)_render;
- (void)_releaseResources;
- (void)renderer:(id)a0 viewportSizeWillChange:(struct CGSize { double x0; double x1; })a1;
- (void)_updateLayout;
- (BOOL)_isInBackground;
- (id)init;
- (void).cxx_destruct;
- (BOOL)_shouldWaitForScrollEvent;
- (void)_forceInvalidate:(unsigned long long)a0;
- (void)layoutNeedsUpdate:(id)a0;
- (void)dealloc;
- (void)_extensionHostDidEnterBackground:(id)a0;
- (void)metalRendererDidChangeTextureConverter:(id)a0;
- (void)_updateDisplayLink;
- (void)observable:(id)a0 didChange:(unsigned long long)a1 context:(void *)a2;
- (BOOL)_shouldDeferRenderUntilNextFrame;
- (void)_deferredInvalidate:(unsigned long long)a0;
- (void)tilingScrollControllerDidScroll:(id)a0;
- (id)initWithAnimator:(id)a0 textureManager:(id)a1 metalRenderer:(id)a2 viewRenderer:(id)a3 displayLinkClass:(Class)a4;
- (void)_purgeResources;
- (void)ensureUpdatedLayout;
- (void)__setNeedsUpdate;
- (void)_extensionHostWillEnterForeground:(id)a0;
- (void)textureManagerNeedsUpdate:(id)a0;
- (BOOL)copyPresentedSpriteFor:(id)a0 geometry:(struct { struct { double x0; double x1; float x2; } x0; } *)a1 style:(struct { float x0; struct { union { struct { float x0; float x1; float x2; float x3; } x0; float x1[4]; } x0; } x1; float x2; unsigned short x3; unsigned short x4; unsigned char x5; } *)a2 info:(struct { int x0; int x1; float x2; long long x3; unsigned short x4; unsigned char x5; } *)a3;
- (void)_updateInteractionState;
- (void)_updateAnimatorWithTargetTimestamp:(double)a0;
- (void)_setNeedsRender;
- (void)rendererPerformRender:(id)a0;
- (void)handleDisplayLink:(id)a0;
- (void)_enumerateRenderers:(id /* block */)a0;
- (void)_resetChangeDetails;
- (void)test_installRenderSnapshotHandler:(id /* block */)a0;
- (void)_updateIfNeededWithReason:(id)a0;
- (BOOL)_shouldDeferContentOffsetUpdates;
- (void)tilingScrollControllerDidUpdate:(id)a0;
- (void)_updateScrollStateWithReason:(unsigned long long)a0;
- (void)handleScreensDidWakeNotification:(id)a0;
- (void)_invalidateOrDefer:(unsigned long long)a0;
- (void)_hasBeenInvisibleForSomeTime;
- (void)rendererNeedsUpdate:(id)a0;
- (void)_updateTextureManager;

@end
